
/home/oslab/os_ucore_mips_m14k/obj/kernel/ucore-kernel-initrd:     file format elf32-tradlittlemips


Disassembly of section .text:

80001000 <_wrs_kernel_text_start>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:17
.section .startup

#define KSTACKSIZE (4096*2)

kernel_entry:
  b reset
80001000:	10000003 	b	80001010 <reset>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:18
  nop
80001004:	00000000 	nop
	...

80001010 <reset>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:30
	mtc0	$zero, CP0_WATCHLO
	mtc0	$zero, CP0_WATCHHI
#endif

	/* WP(Watch Pending), SW0/1 should be cleared */
	mtc0	$zero, CP0_CAUSE
80001010:	40806800 	mtc0	zero,c0_cause
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:32
  /* clear SR(ERL), which is 1 after reset */
	mtc0	$zero, CP0_STATUS
80001014:	40806000 	mtc0	zero,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:34

  jal 1f
80001018:	0c000409 	jal	80001024 <reset+0x14>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:35
  nop
8000101c:	00000000 	nop
80001020:	8015b440 	lb	s5,-19392(zero)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:38
  .word _gp
1:
  lw $gp, 0($ra)
80001024:	8ffc0000 	lw	gp,0(ra)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:39
  la $sp, bootstacktop
80001028:	3c1d8002 	lui	sp,0x8002
8000102c:	27bd7430 	addiu	sp,sp,29744
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:41
#setup ram exception
  la   $t0, __exception_vector
80001030:	3c088002 	lui	t0,0x8002
80001034:	25085000 	addiu	t0,t0,20480
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:43
#TODO
  mtc0 $t0, $15, 1 
80001038:	40887801 	mtc0	t0,c0_ebase
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:45

  mfc0 $t0, CP0_STATUS
8000103c:	40086000 	mfc0	t0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:46
  li   $t1, ~ST0_BEV
80001040:	3c09ffbf 	lui	t1,0xffbf
80001044:	3529ffff 	ori	t1,t1,0xffff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:47
  and  $t0, $t0, $t1
80001048:	01094024 	and	t0,t0,t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:48
  mtc0 $t0, CP0_STATUS
8000104c:	40886000 	mtc0	t0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:51

#zero bss
  la $t0, edata
80001050:	3c088015 	lui	t0,0x8015
80001054:	25083450 	addiu	t0,t0,13392
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:52
  la $t1, end
80001058:	3c098015 	lui	t1,0x8015
8000105c:	252977c0 	addiu	t1,t1,30656
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:55
  
2:
  sw $zero, 0($t0)
80001060:	ad000000 	sw	zero,0(t0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:56
  addiu $t0, $t0, 4
80001064:	25080004 	addiu	t0,t0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:57
  slt $t3, $t0, $t1
80001068:	0109582a 	slt	t3,t0,t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:58
  bgtz $t3, 2b
8000106c:	1d60fffc 	bgtz	t3,80001060 <reset+0x50>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:59
  nop 
80001070:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:61

  addiu $sp, $sp, -16
80001074:	27bdfff0 	addiu	sp,sp,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:62
  la $t9, kern_init 
80001078:	3c198002 	lui	t9,0x8002
8000107c:	2739ba78 	addiu	t9,t9,-17800
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:63
  jal $t9
80001080:	0320f809 	jalr	t9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:64
  nop
80001084:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:66
#never here
  bgez $zero, .
80001088:	0401ffff 	b	80001088 <reset+0x78>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:67
  nop
8000108c:	00000000 	nop

80001090 <romExcHandle_280>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:72


# bfc00280: R4000 xtlbmiss vector
romExcHandle_280:
  b romExcHandle_280
80001090:	1000ffff 	b	80001090 <romExcHandle_280>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:73
  nop
80001094:	00000000 	nop

80001098 <romExcHandle_300>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:77

# bfc00300: R4000 cache vector
romExcHandle_300:
  b romExcHandle_300
80001098:	1000ffff 	b	80001098 <romExcHandle_300>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/entry.S:78
  nop
8000109c:	00000000 	nop

800010a0 <db_sched>:
db_sched():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:27
static int sched_info_head[8];
static int sched_slices[8][SLICEPOOL_SIZE];
int sched_collect_info = 1;

void db_sched(int lines)
{
800010a0:	27bdffd0 	addiu	sp,sp,-48
800010a4:	afb50024 	sw	s5,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:28
	kprintf("\n\r");
800010a8:	3c158002 	lui	s5,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:27
static int sched_info_head[8];
static int sched_slices[8][SLICEPOOL_SIZE];
int sched_collect_info = 1;

void db_sched(int lines)
{
800010ac:	afb40020 	sw	s4,32(sp)
800010b0:	0080a021 	move	s4,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:28
	kprintf("\n\r");
800010b4:	26a43ae8 	addiu	a0,s5,15080
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:27
static int sched_info_head[8];
static int sched_slices[8][SLICEPOOL_SIZE];
int sched_collect_info = 1;

void db_sched(int lines)
{
800010b8:	afb10014 	sw	s1,20(sp)
800010bc:	afbf002c 	sw	ra,44(sp)
800010c0:	afb60028 	sw	s6,40(sp)
800010c4:	afb3001c 	sw	s3,28(sp)
800010c8:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:28
	kprintf("\n\r");
800010cc:	0c00798a 	jal	8001e628 <kprintf>
800010d0:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:30

	int lcpu_count = pls_read(lcpu_count);
800010d4:	3c028015 	lui	v0,0x8015
800010d8:	8c5177a0 	lw	s1,30624(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:33
	int i, j, k;
	/* Print a header */
	kprintf("        ");
800010dc:	3c048002 	lui	a0,0x8002
800010e0:	0c00798a 	jal	8001e628 <kprintf>
800010e4:	2484094c 	addiu	a0,a0,2380
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:34
	for (i = 0; i < lcpu_count; i++)
800010e8:	1a200009 	blez	s1,80001110 <db_sched+0x70>
800010ec:	3c128002 	lui	s2,0x8002
800010f0:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:35
		kprintf("|    CPU%d    ", i);
800010f4:	26520958 	addiu	s2,s2,2392
800010f8:	02002821 	move	a1,s0
800010fc:	02402021 	move	a0,s2
80001100:	0c00798a 	jal	8001e628 <kprintf>
80001104:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:34

	int lcpu_count = pls_read(lcpu_count);
	int i, j, k;
	/* Print a header */
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
80001108:	1611fffc 	bne	s0,s1,800010fc <db_sched+0x5c>
8000110c:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:36
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
80001110:	0c00798a 	jal	8001e628 <kprintf>
80001114:	26a43ae8 	addiu	a0,s5,15080
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:38
	/* Print the table */
	for (i = 0; i < lines; i++) {
80001118:	1a800018 	blez	s4,8000117c <db_sched+0xdc>
8000111c:	3c168002 	lui	s6,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:44
		kprintf(" %4d ", i);
		for (k = 0; k < lcpu_count; k++) {
			j = sched_info_head[k] - i;
			if (j < 0)
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
80001120:	3c128002 	lui	s2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:38
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
80001124:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:39
		kprintf(" %4d ", i);
80001128:	26d60968 	addiu	s6,s6,2408
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:44
		for (k = 0; k < lcpu_count; k++) {
			j = sched_info_head[k] - i;
			if (j < 0)
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
8000112c:	26520970 	addiu	s2,s2,2416
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:48
				sched_info_pid[j * lcpu_count + k],
				sched_info_times[j * lcpu_count + k]);
		}
		kprintf("\n\r");
80001130:	26b53ae8 	addiu	s5,s5,15080
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:39
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
		kprintf(" %4d ", i);
80001134:	02c02021 	move	a0,s6
80001138:	0c00798a 	jal	8001e628 <kprintf>
8000113c:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:40
		for (k = 0; k < lcpu_count; k++) {
80001140:	5a20000a 	blezl	s1,8000116c <db_sched+0xcc>
80001144:	26730001 	addiu	s3,s3,1
80001148:	00008021 	move	s0,zero
8000114c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:44
			j = sched_info_head[k] - i;
			if (j < 0)
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
80001150:	02402021 	move	a0,s2
80001154:	00002821 	move	a1,zero
80001158:	0c00798a 	jal	8001e628 <kprintf>
8000115c:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:40
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
		kprintf(" %4d ", i);
		for (k = 0; k < lcpu_count; k++) {
80001160:	5611fffb 	bnel	s0,s1,80001150 <db_sched+0xb0>
80001164:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:38
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
80001168:	26730001 	addiu	s3,s3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:48
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
				sched_info_pid[j * lcpu_count + k],
				sched_info_times[j * lcpu_count + k]);
		}
		kprintf("\n\r");
8000116c:	0c00798a 	jal	8001e628 <kprintf>
80001170:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:38
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
80001174:	5674fff0 	bnel	s3,s4,80001138 <db_sched+0x98>
80001178:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:50
				sched_info_pid[j * lcpu_count + k],
				sched_info_times[j * lcpu_count + k]);
		}
		kprintf("\n\r");
	}
}
8000117c:	8fbf002c 	lw	ra,44(sp)
80001180:	8fb60028 	lw	s6,40(sp)
80001184:	8fb50024 	lw	s5,36(sp)
80001188:	8fb40020 	lw	s4,32(sp)
8000118c:	8fb3001c 	lw	s3,28(sp)
80001190:	8fb20018 	lw	s2,24(sp)
80001194:	8fb10014 	lw	s1,20(sp)
80001198:	8fb00010 	lw	s0,16(sp)
8000119c:	03e00008 	jr	ra
800011a0:	27bd0030 	addiu	sp,sp,48

800011a4 <db_time>:
db_time():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:54

void db_time(uint16_t left, uint16_t right)
{
	kprintf("\n\r");
800011a4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:53
		kprintf("\n\r");
	}
}

void db_time(uint16_t left, uint16_t right)
{
800011a8:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:54
	kprintf("\n\r");
800011ac:	24843ae8 	addiu	a0,a0,15080
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:53
		kprintf("\n\r");
	}
}

void db_time(uint16_t left, uint16_t right)
{
800011b0:	afb10014 	sw	s1,20(sp)
800011b4:	afbf0024 	sw	ra,36(sp)
800011b8:	afb40020 	sw	s4,32(sp)
800011bc:	afb3001c 	sw	s3,28(sp)
800011c0:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:54
	kprintf("\n\r");
800011c4:	0c00798a 	jal	8001e628 <kprintf>
800011c8:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:56

	int lcpu_count = pls_read(lcpu_count);
800011cc:	3c028015 	lui	v0,0x8015
800011d0:	8c5177a0 	lw	s1,30624(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:58
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
800011d4:	1a200013 	blez	s1,80001224 <db_time+0x80>
800011d8:	3c148002 	lui	s4,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:66
		for (j = 0; j < total; j++) {
			uint16_t pid = sched_info_pid[j * lcpu_count + i];
			if (pid >= left && pid <= right)
				sum += sched_info_times[j * lcpu_count + i];
		}
		kprintf("%4d", sum);
800011dc:	3c138002 	lui	s3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:70
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
800011e0:	3c128002 	lui	s2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:58
{
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
800011e4:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:59
		kprintf("On CPU%d: ", i);
800011e8:	2694097c 	addiu	s4,s4,2428
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:66
		for (j = 0; j < total; j++) {
			uint16_t pid = sched_info_pid[j * lcpu_count + i];
			if (pid >= left && pid <= right)
				sum += sched_info_times[j * lcpu_count + i];
		}
		kprintf("%4d", sum);
800011ec:	26730988 	addiu	s3,s3,2440
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:70
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
800011f0:	2652098c 	addiu	s2,s2,2444
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:59
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
		kprintf("On CPU%d: ", i);
800011f4:	02002821 	move	a1,s0
800011f8:	0c00798a 	jal	8001e628 <kprintf>
800011fc:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:66
		for (j = 0; j < total; j++) {
			uint16_t pid = sched_info_pid[j * lcpu_count + i];
			if (pid >= left && pid <= right)
				sum += sched_info_times[j * lcpu_count + i];
		}
		kprintf("%4d", sum);
80001200:	02602021 	move	a0,s3
80001204:	0c00798a 	jal	8001e628 <kprintf>
80001208:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:58
{
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
8000120c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:70
		}
		kprintf("%4d", sum);
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
80001210:	02402021 	move	a0,s2
80001214:	0c00798a 	jal	8001e628 <kprintf>
80001218:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:58
{
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
8000121c:	5611fff6 	bnel	s0,s1,800011f8 <db_time+0x54>
80001220:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:72
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
	}
}
80001224:	8fbf0024 	lw	ra,36(sp)
80001228:	8fb40020 	lw	s4,32(sp)
8000122c:	8fb3001c 	lw	s3,28(sp)
80001230:	8fb20018 	lw	s2,24(sp)
80001234:	8fb10014 	lw	s1,20(sp)
80001238:	8fb00010 	lw	s0,16(sp)
8000123c:	03e00008 	jr	ra
80001240:	27bd0028 	addiu	sp,sp,40

80001244 <sched_init>:
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001244:	3c038015 	lui	v1,0x8015
80001248:	24623450 	addiu	v0,v1,13392
sched_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:111
}

static struct run_queue __rq[4];

void sched_init(void)
{
8000124c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:114
	list_init(&timer_list);

	rq = __rq;
80001250:	3c048015 	lui	a0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:111
}

static struct run_queue __rq[4];

void sched_init(void)
{
80001254:	afbf0014 	sw	ra,20(sp)
80001258:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:114
	list_init(&timer_list);

	rq = __rq;
8000125c:	2484345c 	addiu	a0,a0,13404
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80001260:	ac420004 	sw	v0,4(v0)
80001264:	ac623450 	sw	v0,13392(v1)
sched_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:114
80001268:	3c028015 	lui	v0,0x8015
8000126c:	ac443458 	sw	a0,13400(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:116
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;
80001270:	24020008 	li	v0,8
80001274:	ac82000c 	sw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:119

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
80001278:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:120
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
8000127c:	000218c0 	sll	v1,v0,0x3
80001280:	00024940 	sll	t1,v0,0x5
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80001284:	3c088015 	lui	t0,0x8015
sched_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:120
80001288:	01231823 	subu	v1,t1,v1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8000128c:	2508346c 	addiu	t0,t0,13420
sched_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:116
{
	list_init(&timer_list);

	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;
80001290:	3c058015 	lui	a1,0x8015
80001294:	24070008 	li	a3,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:120

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
80001298:	24630010 	addiu	v1,v1,16
8000129c:	00831821 	addu	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:116
{
	list_init(&timer_list);

	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;
800012a0:	24a53480 	addiu	a1,a1,13440
800012a4:	01003021 	move	a2,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:121

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
800012a8:	00473804 	sllv	a3,a3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012ac:	240a0004 	li	t2,4
800012b0:	24420001 	addiu	v0,v0,1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
800012b4:	ac880014 	sw	t0,20(a0)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800012b8:	ac830010 	sw	v1,16(a0)
800012bc:	acc30004 	sw	v1,4(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
800012c0:	ac660000 	sw	a2,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800012c4:	ac680004 	sw	t0,4(v1)
sched_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:121
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
800012c8:	aca70000 	sw	a3,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012cc:	104a0011 	beq	v0,t2,80001314 <sched_init+0xd0>
800012d0:	24a50018 	addiu	a1,a1,24
800012d4:	8c87000c 	lw	a3,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:120
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
800012d8:	000218c0 	sll	v1,v0,0x3
800012dc:	00024940 	sll	t1,v0,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012e0:	8c860010 	lw	a2,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:120
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
800012e4:	01231823 	subu	v1,t1,v1
800012e8:	24630010 	addiu	v1,v1,16
800012ec:	00831821 	addu	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:121
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
800012f0:	00473804 	sllv	a3,a3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012f4:	24420001 	addiu	v0,v0,1
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800012f8:	ac830010 	sw	v1,16(a0)
800012fc:	acc30004 	sw	v1,4(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001300:	ac660000 	sw	a2,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80001304:	ac680004 	sw	t0,4(v1)
sched_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:121
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
80001308:	aca70000 	sw	a3,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
8000130c:	144afff1 	bne	v0,t2,800012d4 <sched_init+0x90>
80001310:	24a50018 	addiu	a1,a1,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:127
	}

#ifdef UCONFIG_SCHEDULER_MLFQ
	sched_class = &MLFQ_sched_class;
#else
	sched_class = &RR_sched_class;
80001314:	3c038002 	lui	v1,0x8002
80001318:	24635404 	addiu	v1,v1,21508
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:129
#endif
	sched_class->init(rq);
8000131c:	8c620004 	lw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:127
	}

#ifdef UCONFIG_SCHEDULER_MLFQ
	sched_class = &MLFQ_sched_class;
#else
	sched_class = &RR_sched_class;
80001320:	3c108015 	lui	s0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:129
#endif
	sched_class->init(rq);
80001324:	0040f809 	jalr	v0
80001328:	ae0334bc 	sw	v1,13500(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:131

	kprintf("sched class: %s\n\r", sched_class->name);
8000132c:	8e0234bc 	lw	v0,13500(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:132
}
80001330:	8fbf0014 	lw	ra,20(sp)
80001334:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:131
#else
	sched_class = &RR_sched_class;
#endif
	sched_class->init(rq);

	kprintf("sched class: %s\n\r", sched_class->name);
80001338:	8c450000 	lw	a1,0(v0)
8000133c:	3c048002 	lui	a0,0x8002
80001340:	24840994 	addiu	a0,a0,2452
80001344:	0800798a 	j	8001e628 <kprintf>
80001348:	27bd0018 	addiu	sp,sp,24

8000134c <stop_proc>:
stop_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:135
}

void stop_proc(struct proc_struct *proc, uint32_t wait)
{
8000134c:	27bdffd8 	addiu	sp,sp,-40
80001350:	afb0001c 	sw	s0,28(sp)
80001354:	afbf0024 	sw	ra,36(sp)
80001358:	afb10020 	sw	s1,32(sp)
8000135c:	00808021 	move	s0,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001360:	40026000 	mfc0	v0,c0_status
80001364:	30420001 	andi	v0,v0,0x1
80001368:	10400005 	beqz	v0,80001380 <stop_proc+0x34>
8000136c:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80001370:	0c006cbe 	jal	8001b2f8 <intr_disable>
80001374:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80001378:	8fa50010 	lw	a1,16(sp)
8000137c:	24110001 	li	s1,1
stop_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:140
	bool intr_flag;
	local_intr_save(intr_flag);
	proc->state = PROC_SLEEPING;
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
80001380:	8e0300a4 	lw	v1,164(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:138

void stop_proc(struct proc_struct *proc, uint32_t wait)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	proc->state = PROC_SLEEPING;
80001384:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:140
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
80001388:	260200a0 	addiu	v0,s0,160
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:138

void stop_proc(struct proc_struct *proc, uint32_t wait)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	proc->state = PROC_SLEEPING;
8000138c:	ae040000 	sw	a0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:140
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
80001390:	10620008 	beq	v1,v0,800013b4 <stop_proc+0x68>
80001394:	ae050084 	sw	a1,132(s0)
sched_class_dequeue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:91
	}
}

static inline void sched_class_dequeue(struct proc_struct *proc)
{
	sched_class->dequeue(rq, proc);
80001398:	3c028015 	lui	v0,0x8015
8000139c:	8c4234bc 	lw	v0,13500(v0)
800013a0:	3c038015 	lui	v1,0x8015
800013a4:	8c643458 	lw	a0,13400(v1)
800013a8:	8c42000c 	lw	v0,12(v0)
800013ac:	0040f809 	jalr	v0
800013b0:	02002821 	move	a1,s0
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800013b4:	16200005 	bnez	s1,800013cc <stop_proc+0x80>
800013b8:	8fbf0024 	lw	ra,36(sp)
stop_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:144
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
		sched_class_dequeue(proc);
	}
	local_intr_restore(intr_flag);
}
800013bc:	8fb10020 	lw	s1,32(sp)
800013c0:	8fb0001c 	lw	s0,28(sp)
800013c4:	03e00008 	jr	ra
800013c8:	27bd0028 	addiu	sp,sp,40
800013cc:	8fb10020 	lw	s1,32(sp)
800013d0:	8fb0001c 	lw	s0,28(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800013d4:	08006cba 	j	8001b2e8 <intr_enable>
800013d8:	27bd0028 	addiu	sp,sp,40

800013dc <wakeup_proc>:
wakeup_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:148

void wakeup_proc(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
800013dc:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:147
	}
	local_intr_restore(intr_flag);
}

void wakeup_proc(struct proc_struct *proc)
{
800013e0:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:148
	assert(proc->state != PROC_ZOMBIE);
800013e4:	24030003 	li	v1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:147
	}
	local_intr_restore(intr_flag);
}

void wakeup_proc(struct proc_struct *proc)
{
800013e8:	afbf001c 	sw	ra,28(sp)
800013ec:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:148
	assert(proc->state != PROC_ZOMBIE);
800013f0:	1043002f 	beq	v0,v1,800014b0 <wakeup_proc+0xd4>
800013f4:	00802821 	move	a1,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800013f8:	40036000 	mfc0	v1,c0_status
800013fc:	30630001 	andi	v1,v1,0x1
80001400:	10600006 	beqz	v1,8000141c <wakeup_proc+0x40>
80001404:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80001408:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000140c:	afa40010 	sw	a0,16(sp)
80001410:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80001414:	24100001 	li	s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80001418:	8ca20000 	lw	v0,0(a1)
wakeup_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:152
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
8000141c:	24030002 	li	v1,2
80001420:	1043001b 	beq	v0,v1,80001490 <wakeup_proc+0xb4>
80001424:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:155
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
			if (proc != current) {
80001428:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:154
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
8000142c:	aca00084 	sw	zero,132(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:155
			if (proc != current) {
80001430:	10a2000f 	beq	a1,v0,80001470 <wakeup_proc+0x94>
80001434:	aca30000 	sw	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:156
				assert(proc->pid >= pls_read(lcpu_count));
80001438:	3c028015 	lui	v0,0x8015
8000143c:	8ca30004 	lw	v1,4(a1)
80001440:	8c4277a0 	lw	v0,30624(v0)
80001444:	0062102a 	slt	v0,v1,v0
80001448:	14400021 	bnez	v0,800014d0 <wakeup_proc+0xf4>
8000144c:	3c028015 	lui	v0,0x8015
sched_class_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
80001450:	8c4277a8 	lw	v0,30632(v0)
80001454:	10a20006 	beq	a1,v0,80001470 <wakeup_proc+0x94>
80001458:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
8000145c:	8c4234bc 	lw	v0,13500(v0)
80001460:	3c038015 	lui	v1,0x8015
80001464:	8c420008 	lw	v0,8(v0)
80001468:	0040f809 	jalr	v0
8000146c:	8c643458 	lw	a0,13400(v1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001470:	16000004 	bnez	s0,80001484 <wakeup_proc+0xa8>
80001474:	8fbf001c 	lw	ra,28(sp)
wakeup_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:164
		} else {
			warn("wakeup runnable process.\n\r");
		}
	}
	local_intr_restore(intr_flag);
}
80001478:	8fb00018 	lw	s0,24(sp)
8000147c:	03e00008 	jr	ra
80001480:	27bd0020 	addiu	sp,sp,32
80001484:	8fb00018 	lw	s0,24(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001488:	08006cba 	j	8001b2e8 <intr_enable>
8000148c:	27bd0020 	addiu	sp,sp,32
wakeup_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:160
			if (proc != current) {
				assert(proc->pid >= pls_read(lcpu_count));
				sched_class_enqueue(proc);
			}
		} else {
			warn("wakeup runnable process.\n\r");
80001490:	3c048002 	lui	a0,0x8002
80001494:	3c068002 	lui	a2,0x8002
80001498:	248409a8 	addiu	a0,a0,2472
8000149c:	240500a0 	li	a1,160
800014a0:	0c006b1d 	jal	8001ac74 <__warn>
800014a4:	24c60a08 	addiu	a2,a2,2568
800014a8:	0800051c 	j	80001470 <wakeup_proc+0x94>
800014ac:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:148
	local_intr_restore(intr_flag);
}

void wakeup_proc(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
800014b0:	3c048002 	lui	a0,0x8002
800014b4:	3c068002 	lui	a2,0x8002
800014b8:	3c078002 	lui	a3,0x8002
800014bc:	248409a8 	addiu	a0,a0,2472
800014c0:	24050094 	li	a1,148
800014c4:	24c609b0 	addiu	a2,a2,2480
800014c8:	0c006afd 	jal	8001abf4 <__panic>
800014cc:	24e709c8 	addiu	a3,a3,2504
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:156
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
			if (proc != current) {
				assert(proc->pid >= pls_read(lcpu_count));
800014d0:	3c048002 	lui	a0,0x8002
800014d4:	3c068002 	lui	a2,0x8002
800014d8:	3c078002 	lui	a3,0x8002
800014dc:	248409a8 	addiu	a0,a0,2472
800014e0:	2405009c 	li	a1,156
800014e4:	24c609b0 	addiu	a2,a2,2480
800014e8:	0c006afd 	jal	8001abf4 <__panic>
800014ec:	24e709e4 	addiu	a3,a3,2532

800014f0 <try_to_wakeup>:
try_to_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:168
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
800014f0:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:167
	}
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
800014f4:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:168
	assert(proc->state != PROC_ZOMBIE);
800014f8:	24030003 	li	v1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:167
	}
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
800014fc:	afb0001c 	sw	s0,28(sp)
80001500:	afbf003c 	sw	ra,60(sp)
80001504:	afb70038 	sw	s7,56(sp)
80001508:	afb60034 	sw	s6,52(sp)
8000150c:	afb50030 	sw	s5,48(sp)
80001510:	afb4002c 	sw	s4,44(sp)
80001514:	afb30028 	sw	s3,40(sp)
80001518:	afb20024 	sw	s2,36(sp)
8000151c:	afb10020 	sw	s1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:168
	assert(proc->state != PROC_ZOMBIE);
80001520:	1043004d 	beq	v0,v1,80001658 <try_to_wakeup+0x168>
80001524:	00808021 	move	s0,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001528:	40036000 	mfc0	v1,c0_status
8000152c:	30630001 	andi	v1,v1,0x1
80001530:	10600004 	beqz	v1,80001544 <try_to_wakeup+0x54>
80001534:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80001538:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000153c:	24130001 	li	s3,1
80001540:	8e020000 	lw	v0,0(s0)
try_to_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:173
	int ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
80001544:	24030002 	li	v1,2
80001548:	10430011 	beq	v0,v1,80001590 <try_to_wakeup+0xa0>
8000154c:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:176
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
			if (proc != current) {
80001550:	3c028015 	lui	v0,0x8015
80001554:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:175
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
80001558:	ae000084 	sw	zero,132(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:174
	int ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
8000155c:	ae030000 	sw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:176
			proc->wait_state = 0;
			if (proc != current) {
80001560:	1202000b 	beq	s0,v0,80001590 <try_to_wakeup+0xa0>
80001564:	24120001 	li	s2,1
sched_class_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
80001568:	3c028015 	lui	v0,0x8015
8000156c:	8c4277a8 	lw	v0,30632(v0)
80001570:	12020007 	beq	s0,v0,80001590 <try_to_wakeup+0xa0>
80001574:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
80001578:	8c4234bc 	lw	v0,13500(v0)
8000157c:	3c038015 	lui	v1,0x8015
80001580:	8c643458 	lw	a0,13400(v1)
80001584:	8c420008 	lw	v0,8(v0)
80001588:	0040f809 	jalr	v0
8000158c:	02002821 	move	a1,s0
try_to_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:184
			ret = 1;
		} else {
			ret = 0;
		}
		struct proc_struct *next = proc;
		while ((next = next_thread(next)) != proc) {
80001590:	02001021 	move	v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:185
			if (next->state == PROC_SLEEPING
80001594:	24110001 	li	s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:189
			    && next->wait_state == WT_SIGNAL) {
				next->state = PROC_RUNNABLE;
				next->wait_state = 0;
				if (next != current) {
80001598:	3c148015 	lui	s4,0x8015
sched_class_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
8000159c:	3c158015 	lui	s5,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
800015a0:	3c178015 	lui	s7,0x8015
800015a4:	3c168015 	lui	s6,0x8015
try_to_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:184
			ret = 1;
		} else {
			ret = 0;
		}
		struct proc_struct *next = proc;
		while ((next = next_thread(next)) != proc) {
800015a8:	0c00451f 	jal	8001147c <next_thread>
800015ac:	00402021 	move	a0,v0
800015b0:	10500019 	beq	v0,s0,80001618 <try_to_wakeup+0x128>
800015b4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:185
			if (next->state == PROC_SLEEPING
800015b8:	8c430000 	lw	v1,0(v0)
800015bc:	1471fffa 	bne	v1,s1,800015a8 <try_to_wakeup+0xb8>
800015c0:	3c038000 	lui	v1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:186
			    && next->wait_state == WT_SIGNAL) {
800015c4:	8c440084 	lw	a0,132(v0)
800015c8:	24630400 	addiu	v1,v1,1024
800015cc:	1483fff6 	bne	a0,v1,800015a8 <try_to_wakeup+0xb8>
800015d0:	8e8377a4 	lw	v1,30628(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:187
				next->state = PROC_RUNNABLE;
800015d4:	24040002 	li	a0,2
800015d8:	ac440000 	sw	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:189
				next->wait_state = 0;
				if (next != current) {
800015dc:	1043fff2 	beq	v0,v1,800015a8 <try_to_wakeup+0xb8>
800015e0:	ac400084 	sw	zero,132(v0)
sched_class_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
800015e4:	8ea377a8 	lw	v1,30632(s5)
800015e8:	1043ffef 	beq	v0,v1,800015a8 <try_to_wakeup+0xb8>
800015ec:	8ee334bc 	lw	v1,13500(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
800015f0:	8ec43458 	lw	a0,13400(s6)
800015f4:	00402821 	move	a1,v0
800015f8:	8c630008 	lw	v1,8(v1)
800015fc:	0060f809 	jalr	v1
80001600:	afa20010 	sw	v0,16(sp)
80001604:	8fa20010 	lw	v0,16(sp)
try_to_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:184
			ret = 1;
		} else {
			ret = 0;
		}
		struct proc_struct *next = proc;
		while ((next = next_thread(next)) != proc) {
80001608:	0c00451f 	jal	8001147c <next_thread>
8000160c:	00402021 	move	a0,v0
80001610:	5450ffea 	bnel	v0,s0,800015bc <try_to_wakeup+0xcc>
80001614:	8c430000 	lw	v1,0(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001618:	12600004 	beqz	s3,8000162c <try_to_wakeup+0x13c>
8000161c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001620:	0c006cba 	jal	8001b2e8 <intr_enable>
80001624:	00000000 	nop
try_to_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:197
			}
		}
	}
	local_intr_restore(intr_flag);
	return ret;
}
80001628:	8fbf003c 	lw	ra,60(sp)
8000162c:	02401021 	move	v0,s2
80001630:	8fb70038 	lw	s7,56(sp)
80001634:	8fb60034 	lw	s6,52(sp)
80001638:	8fb50030 	lw	s5,48(sp)
8000163c:	8fb4002c 	lw	s4,44(sp)
80001640:	8fb30028 	lw	s3,40(sp)
80001644:	8fb20024 	lw	s2,36(sp)
80001648:	8fb10020 	lw	s1,32(sp)
8000164c:	8fb0001c 	lw	s0,28(sp)
80001650:	03e00008 	jr	ra
80001654:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:168
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
80001658:	3c048002 	lui	a0,0x8002
8000165c:	3c068002 	lui	a2,0x8002
80001660:	3c078002 	lui	a3,0x8002
80001664:	248409a8 	addiu	a0,a0,2472
80001668:	240500a8 	li	a1,168
8000166c:	24c609b0 	addiu	a2,a2,2480
80001670:	0c006afd 	jal	8001abf4 <__panic>
80001674:	24e709c8 	addiu	a3,a3,2504

80001678 <schedule>:
schedule():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:204
#include <vmm.h>

#define MT_SUPPORT

void schedule(void)
{
80001678:	27bdffd0 	addiu	sp,sp,-48
8000167c:	afbf002c 	sw	ra,44(sp)
80001680:	afb30028 	sw	s3,40(sp)
80001684:	afb20024 	sw	s2,36(sp)
80001688:	afb10020 	sw	s1,32(sp)
8000168c:	afb0001c 	sw	s0,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001690:	40026000 	mfc0	v0,c0_status
80001694:	30420001 	andi	v0,v0,0x1
80001698:	10400003 	beqz	v0,800016a8 <schedule+0x30>
8000169c:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800016a0:	0c006cbe 	jal	8001b2f8 <intr_disable>
800016a4:	24110001 	li	s1,1
schedule():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:209
	bool intr_flag;
	struct proc_struct *next;
	local_intr_save(intr_flag);
	{
        	current->need_resched = 0;
800016a8:	3c108015 	lui	s0,0x8015
800016ac:	8e0577a4 	lw	a1,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:210
        	if (current->state == PROC_RUNNABLE) {
800016b0:	24020002 	li	v0,2
800016b4:	8ca30000 	lw	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:209
{
	bool intr_flag;
	struct proc_struct *next;
	local_intr_save(intr_flag);
	{
        	current->need_resched = 0;
800016b8:	aca00018 	sw	zero,24(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:210
        	if (current->state == PROC_RUNNABLE) {
800016bc:	10620028 	beq	v1,v0,80001760 <schedule+0xe8>
800016c0:	3c138015 	lui	s3,0x8015
800016c4:	3c128015 	lui	s2,0x8015
sched_class_pick_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:96
	sched_class->dequeue(rq, proc);
}

static inline struct proc_struct *sched_class_pick_next(void)
{
	return sched_class->pick_next(rq);
800016c8:	8e6234bc 	lw	v0,13500(s3)
800016cc:	8c420010 	lw	v0,16(v0)
800016d0:	0040f809 	jalr	v0
800016d4:	8e443458 	lw	a0,13400(s2)
schedule():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:213
	{
        	current->need_resched = 0;
        	if (current->state == PROC_RUNNABLE) {
            		sched_class_enqueue(current);
        	}
        	if ((next = sched_class_pick_next()) != NULL) {
800016d8:	1040001e 	beqz	v0,80001754 <schedule+0xdc>
800016dc:	3c038015 	lui	v1,0x8015
sched_class_dequeue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:91
	}
}

static inline void sched_class_dequeue(struct proc_struct *proc)
{
	sched_class->dequeue(rq, proc);
800016e0:	8c6334bc 	lw	v1,13500(v1)
800016e4:	3c048015 	lui	a0,0x8015
800016e8:	8c843458 	lw	a0,13400(a0)
800016ec:	8c63000c 	lw	v1,12(v1)
800016f0:	00402821 	move	a1,v0
800016f4:	0060f809 	jalr	v1
800016f8:	afa20010 	sw	v0,16(sp)
800016fc:	8fa20010 	lw	v0,16(sp)
schedule():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:219
            		sched_class_dequeue(next);
       	 	}
        	if (next == NULL) {
           		next = idleproc;
        	}
        	next->runs ++;
80001700:	8c440010 	lw	a0,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:220
        	if (next != current) {
80001704:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:219
            		sched_class_dequeue(next);
       	 	}
        	if (next == NULL) {
           		next = idleproc;
        	}
        	next->runs ++;
80001708:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:220
        	if (next != current) {
8000170c:	10430003 	beq	v0,v1,8000171c <schedule+0xa4>
80001710:	ac440010 	sw	a0,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:225
            		//kprintf("########################\n\r");
            		//kprintf("c %d TO %d\n", current->pid, next->pid);
           		//print_trapframe(next->tf);
            		//kprintf("@@@@@@@@@@@@@@@@@@@@@@@@\n\r");
            		proc_run(next);
80001714:	0c003b04 	jal	8000ec10 <proc_run>
80001718:	00402021 	move	a0,v0
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000171c:	16200007 	bnez	s1,8000173c <schedule+0xc4>
80001720:	8fbf002c 	lw	ra,44(sp)
schedule():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:229
        	}
    	}
    	local_intr_restore(intr_flag);
}
80001724:	8fb30028 	lw	s3,40(sp)
80001728:	8fb20024 	lw	s2,36(sp)
8000172c:	8fb10020 	lw	s1,32(sp)
80001730:	8fb0001c 	lw	s0,28(sp)
80001734:	03e00008 	jr	ra
80001738:	27bd0030 	addiu	sp,sp,48
8000173c:	8fb30028 	lw	s3,40(sp)
80001740:	8fb20024 	lw	s2,36(sp)
80001744:	8fb10020 	lw	s1,32(sp)
80001748:	8fb0001c 	lw	s0,28(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000174c:	08006cba 	j	8001b2e8 <intr_enable>
80001750:	27bd0030 	addiu	sp,sp,48
schedule():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:217
        	}
        	if ((next = sched_class_pick_next()) != NULL) {
            		sched_class_dequeue(next);
       	 	}
        	if (next == NULL) {
           		next = idleproc;
80001754:	3c028015 	lui	v0,0x8015
80001758:	080005c0 	j	80001700 <schedule+0x88>
8000175c:	8c4277a8 	lw	v0,30632(v0)
sched_class_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
80001760:	3c028015 	lui	v0,0x8015
80001764:	8c4277a8 	lw	v0,30632(v0)
80001768:	10a20007 	beq	a1,v0,80001788 <schedule+0x110>
8000176c:	8e6234bc 	lw	v0,13500(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
80001770:	3c128015 	lui	s2,0x8015
80001774:	8c420008 	lw	v0,8(v0)
80001778:	0040f809 	jalr	v0
8000177c:	8e443458 	lw	a0,13400(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:96
	sched_class->dequeue(rq, proc);
}

static inline struct proc_struct *sched_class_pick_next(void)
{
	return sched_class->pick_next(rq);
80001780:	080005b3 	j	800016cc <schedule+0x54>
80001784:	8e6234bc 	lw	v0,13500(s3)
80001788:	080005b2 	j	800016c8 <schedule+0x50>
8000178c:	3c128015 	lui	s2,0x8015

80001790 <add_timer>:
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:232
    	}
    	local_intr_restore(intr_flag);
}

void add_timer(timer_t * timer)
{
80001790:	27bdffe0 	addiu	sp,sp,-32
80001794:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001798:	40026000 	mfc0	v0,c0_status
8000179c:	30420001 	andi	v0,v0,0x1
800017a0:	10400005 	beqz	v0,800017b8 <add_timer+0x28>
800017a4:	00004821 	move	t1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800017a8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800017ac:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
800017b0:	8fa40010 	lw	a0,16(sp)
800017b4:	24090001 	li	t1,1
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:236
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		assert(timer->expires > 0 && timer->proc != NULL);
800017b8:	8c830000 	lw	v1,0(a0)
800017bc:	5060002e 	beqzl	v1,80001878 <add_timer+0xe8>
800017c0:	3c048002 	lui	a0,0x8002
800017c4:	8c820004 	lw	v0,4(a0)
800017c8:	1040002a 	beqz	v0,80001874 <add_timer+0xe4>
800017cc:	24880014 	addiu	t0,a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:237
		assert(list_empty(&(timer->timer_link)));
800017d0:	8c820018 	lw	v0,24(a0)
800017d4:	5502002f 	bnel	t0,v0,80001894 <add_timer+0x104>
800017d8:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800017dc:	3c078015 	lui	a3,0x8015
800017e0:	24e73450 	addiu	a3,a3,13392
800017e4:	8ce20004 	lw	v0,4(a3)
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:239
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
800017e8:	50470010 	beql	v0,a3,8000182c <add_timer+0x9c>
800017ec:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:241
			timer_t *next = le2timer(le, timer_link);
			if (timer->expires < next->expires) {
800017f0:	8c45ffec 	lw	a1,-20(v0)
800017f4:	0065302b 	sltu	a2,v1,a1
800017f8:	50c00008 	beqzl	a2,8000181c <add_timer+0x8c>
800017fc:	8c420004 	lw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:242
				next->expires -= timer->expires;
80001800:	08000613 	j	8000184c <add_timer+0xbc>
80001804:	00a31823 	subu	v1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:241
		assert(timer->expires > 0 && timer->proc != NULL);
		assert(list_empty(&(timer->timer_link)));
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
			timer_t *next = le2timer(le, timer_link);
			if (timer->expires < next->expires) {
80001808:	8c45ffec 	lw	a1,-20(v0)
8000180c:	0065302b 	sltu	a2,v1,a1
80001810:	54c0000e 	bnezl	a2,8000184c <add_timer+0xbc>
80001814:	00a31823 	subu	v1,a1,v1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80001818:	8c420004 	lw	v0,4(v0)
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:245
				next->expires -= timer->expires;
				break;
			}
			timer->expires -= next->expires;
8000181c:	00651823 	subu	v1,v1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:239
	local_intr_save(intr_flag);
	{
		assert(timer->expires > 0 && timer->proc != NULL);
		assert(list_empty(&(timer->timer_link)));
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
80001820:	1447fff9 	bne	v0,a3,80001808 <add_timer+0x78>
80001824:	ac830000 	sw	v1,0(a0)
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80001828:	8c430000 	lw	v1,0(v0)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000182c:	ac480000 	sw	t0,0(v0)
80001830:	ac680004 	sw	t0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001834:	ac830014 	sw	v1,20(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001838:	1520000b 	bnez	t1,80001868 <add_timer+0xd8>
8000183c:	ac820018 	sw	v0,24(a0)
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:251
			le = list_next(le);
		}
		list_add_before(le, &(timer->timer_link));
	}
	local_intr_restore(intr_flag);
}
80001840:	8fbf001c 	lw	ra,28(sp)
80001844:	03e00008 	jr	ra
80001848:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:242
		assert(list_empty(&(timer->timer_link)));
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
			timer_t *next = le2timer(le, timer_link);
			if (timer->expires < next->expires) {
				next->expires -= timer->expires;
8000184c:	ac43ffec 	sw	v1,-20(v0)
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80001850:	8c430000 	lw	v1,0(v0)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80001854:	ac480000 	sw	t0,0(v0)
80001858:	ac680004 	sw	t0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8000185c:	ac830014 	sw	v1,20(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
80001860:	1120fff7 	beqz	t1,80001840 <add_timer+0xb0>
80001864:	ac820018 	sw	v0,24(a0)
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:251
			le = list_next(le);
		}
		list_add_before(le, &(timer->timer_link));
	}
	local_intr_restore(intr_flag);
}
80001868:	8fbf001c 	lw	ra,28(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000186c:	08006cba 	j	8001b2e8 <intr_enable>
80001870:	27bd0020 	addiu	sp,sp,32
add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:236
void add_timer(timer_t * timer)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		assert(timer->expires > 0 && timer->proc != NULL);
80001874:	3c048002 	lui	a0,0x8002
80001878:	3c068002 	lui	a2,0x8002
8000187c:	3c078002 	lui	a3,0x8002
80001880:	248409a8 	addiu	a0,a0,2472
80001884:	240500ec 	li	a1,236
80001888:	24c609b0 	addiu	a2,a2,2480
8000188c:	0c006afd 	jal	8001abf4 <__panic>
80001890:	24e70a24 	addiu	a3,a3,2596
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:237
		assert(list_empty(&(timer->timer_link)));
80001894:	3c068002 	lui	a2,0x8002
80001898:	3c078002 	lui	a3,0x8002
8000189c:	248409a8 	addiu	a0,a0,2472
800018a0:	240500ed 	li	a1,237
800018a4:	24c609b0 	addiu	a2,a2,2480
800018a8:	0c006afd 	jal	8001abf4 <__panic>
800018ac:	24e70a50 	addiu	a3,a3,2640

800018b0 <del_timer>:
del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:254
	}
	local_intr_restore(intr_flag);
}

void del_timer(timer_t * timer)
{
800018b0:	27bdffe0 	addiu	sp,sp,-32
800018b4:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800018b8:	40026000 	mfc0	v0,c0_status
800018bc:	30420001 	andi	v0,v0,0x1
800018c0:	10400005 	beqz	v0,800018d8 <del_timer+0x28>
800018c4:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800018c8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800018cc:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
800018d0:	8fa40010 	lw	a0,16(sp)
800018d4:	24060001 	li	a2,1
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
800018d8:	8c820018 	lw	v0,24(a0)
del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:258
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (!list_empty(&(timer->timer_link))) {
800018dc:	24830014 	addiu	v1,a0,20
800018e0:	10620010 	beq	v1,v0,80001924 <del_timer+0x74>
800018e4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:259
			if (timer->expires != 0) {
800018e8:	8c850000 	lw	a1,0(a0)
800018ec:	50a00009 	beqzl	a1,80001914 <del_timer+0x64>
800018f0:	8c850014 	lw	a1,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:262
				list_entry_t *le =
				    list_next(&(timer->timer_link));
				if (le != &timer_list) {
800018f4:	3c078015 	lui	a3,0x8015
800018f8:	24e73450 	addiu	a3,a3,13392
800018fc:	50470005 	beql	v0,a3,80001914 <del_timer+0x64>
80001900:	8c850014 	lw	a1,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:265
					timer_t *next =
					    le2timer(le, timer_link);
					next->expires += timer->expires;
80001904:	8c47ffec 	lw	a3,-20(v0)
80001908:	00e52821 	addu	a1,a3,a1
8000190c:	ac45ffec 	sw	a1,-20(v0)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80001910:	8c850014 	lw	a1,20(a0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80001914:	aca20004 	sw	v0,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80001918:	ac450000 	sw	a1,0(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8000191c:	ac830018 	sw	v1,24(a0)
80001920:	ac830014 	sw	v1,20(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001924:	14c00003 	bnez	a2,80001934 <del_timer+0x84>
80001928:	8fbf001c 	lw	ra,28(sp)
del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:272
			}
			list_del_init(&(timer->timer_link));
		}
	}
	local_intr_restore(intr_flag);
}
8000192c:	03e00008 	jr	ra
80001930:	27bd0020 	addiu	sp,sp,32
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001934:	08006cba 	j	8001b2e8 <intr_enable>
80001938:	27bd0020 	addiu	sp,sp,32

8000193c <run_timer_list>:
run_timer_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:275

void run_timer_list(void)
{
8000193c:	27bdffd0 	addiu	sp,sp,-48
80001940:	afbf002c 	sw	ra,44(sp)
80001944:	afb60028 	sw	s6,40(sp)
80001948:	afb50024 	sw	s5,36(sp)
8000194c:	afb40020 	sw	s4,32(sp)
80001950:	afb3001c 	sw	s3,28(sp)
80001954:	afb20018 	sw	s2,24(sp)
80001958:	afb10014 	sw	s1,20(sp)
8000195c:	afb00010 	sw	s0,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001960:	40026000 	mfc0	v0,c0_status
80001964:	30420001 	andi	v0,v0,0x1
80001968:	10400003 	beqz	v0,80001978 <run_timer_list+0x3c>
8000196c:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80001970:	0c006cbe 	jal	8001b2f8 <intr_disable>
80001974:	24130001 	li	s3,1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80001978:	3c128015 	lui	s2,0x8015
8000197c:	26523450 	addiu	s2,s2,13392
80001980:	8e510004 	lw	s1,4(s2)
run_timer_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:280
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
80001984:	1232001b 	beq	s1,s2,800019f4 <run_timer_list+0xb8>
80001988:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:282
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
8000198c:	8e22ffec 	lw	v0,-20(s1)
80001990:	10400056 	beqz	v0,80001aec <run_timer_list+0x1b0>
80001994:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:300
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
					       WT_INTERRUPTED);
				} else {
					warn("process %d's wait_state == 0.\n\r",
80001998:	3c158002 	lui	s5,0x8002
8000199c:	3c148002 	lui	s4,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:281
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
800019a0:	2630ffec 	addiu	s0,s1,-20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:283
			assert(timer->expires != 0);
			timer->expires--;
800019a4:	ae22ffec 	sw	v0,-20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:300
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
					       WT_INTERRUPTED);
				} else {
					warn("process %d's wait_state == 0.\n\r",
800019a8:	26b509a8 	addiu	s5,s5,2472
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:284
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
			timer->expires--;
			while (timer->expires == 0) {
800019ac:	14400010 	bnez	v0,800019f0 <run_timer_list+0xb4>
800019b0:	26940aac 	addiu	s4,s4,2732
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:286
				le = list_next(le);
				if (__ucore_is_linux_timer(timer)) {
800019b4:	8e020008 	lw	v0,8(s0)
800019b8:	10400023 	beqz	v0,80001a48 <run_timer_list+0x10c>
800019bc:	8e310004 	lw	s1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:289
					struct __ucore_linux_timer *lt =
					    &(timer->linux_timer);
					if (lt->function)
800019c0:	8e020010 	lw	v0,16(s0)
800019c4:	10400003 	beqz	v0,800019d4 <run_timer_list+0x98>
800019c8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:290
						(lt->function) (lt->data);
800019cc:	0040f809 	jalr	v0
800019d0:	8e04000c 	lw	a0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:291
					del_timer(timer);
800019d4:	0c00062c 	jal	800018b0 <del_timer>
800019d8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:292
					kfree(timer);
800019dc:	0c0054a3 	jal	8001528c <kfree>
800019e0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:310

				del_timer(timer);
				if (le == &timer_list) {
					break;
				}
				timer = le2timer(le, timer_link);
800019e4:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:284
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
			timer->expires--;
			while (timer->expires == 0) {
800019e8:	5040fff3 	beqzl	v0,800019b8 <run_timer_list+0x7c>
800019ec:	8e020008 	lw	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:313
					break;
				}
				timer = le2timer(le, timer_link);
			}
		}
		sched_class_proc_tick(current);
800019f0:	3c028015 	lui	v0,0x8015
800019f4:	8c4577a4 	lw	a1,30628(v0)
sched_class_proc_tick():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:101
	return sched_class->pick_next(rq);
}

static void sched_class_proc_tick(struct proc_struct *proc)
{
	if (proc != idleproc) {
800019f8:	3c028015 	lui	v0,0x8015
800019fc:	8c4277a8 	lw	v0,30632(v0)
80001a00:	10a20026 	beq	a1,v0,80001a9c <run_timer_list+0x160>
80001a04:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:102
		sched_class->proc_tick(rq, proc);
80001a08:	8c4234bc 	lw	v0,13500(v0)
80001a0c:	3c038015 	lui	v1,0x8015
80001a10:	8c420014 	lw	v0,20(v0)
80001a14:	0040f809 	jalr	v0
80001a18:	8c643458 	lw	a0,13400(v1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001a1c:	16600023 	bnez	s3,80001aac <run_timer_list+0x170>
80001a20:	8fbf002c 	lw	ra,44(sp)
run_timer_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:316
			}
		}
		sched_class_proc_tick(current);
	}
	local_intr_restore(intr_flag);
}
80001a24:	8fb60028 	lw	s6,40(sp)
80001a28:	8fb50024 	lw	s5,36(sp)
80001a2c:	8fb40020 	lw	s4,32(sp)
80001a30:	8fb3001c 	lw	s3,28(sp)
80001a34:	8fb20018 	lw	s2,24(sp)
80001a38:	8fb10014 	lw	s1,20(sp)
80001a3c:	8fb00010 	lw	s0,16(sp)
80001a40:	03e00008 	jr	ra
80001a44:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:295
						(lt->function) (lt->data);
					del_timer(timer);
					kfree(timer);
					continue;
				}
				struct proc_struct *proc = timer->proc;
80001a48:	8e160004 	lw	s6,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:296
				if (proc->wait_state != 0) {
80001a4c:	8ec20084 	lw	v0,132(s6)
80001a50:	5040000c 	beqzl	v0,80001a84 <run_timer_list+0x148>
80001a54:	8ec70004 	lw	a3,4(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:297
					assert(proc->wait_state &
80001a58:	0441001d 	bgez	v0,80001ad0 <run_timer_list+0x194>
80001a5c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:304
				} else {
					warn("process %d's wait_state == 0.\n\r",
					     proc->pid);
				}

				wakeup_proc(proc);
80001a60:	0c0004f7 	jal	800013dc <wakeup_proc>
80001a64:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:306

				del_timer(timer);
80001a68:	0c00062c 	jal	800018b0 <del_timer>
80001a6c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:307
				if (le == &timer_list) {
80001a70:	5232ffe0 	beql	s1,s2,800019f4 <run_timer_list+0xb8>
80001a74:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:310
					break;
				}
				timer = le2timer(le, timer_link);
80001a78:	2630ffec 	addiu	s0,s1,-20
80001a7c:	0800067a 	j	800019e8 <run_timer_list+0xac>
80001a80:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:300
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
					       WT_INTERRUPTED);
				} else {
					warn("process %d's wait_state == 0.\n\r",
80001a84:	02a02021 	move	a0,s5
80001a88:	2405012d 	li	a1,301
80001a8c:	0c006b1d 	jal	8001ac74 <__warn>
80001a90:	02803021 	move	a2,s4
80001a94:	08000698 	j	80001a60 <run_timer_list+0x124>
80001a98:	00000000 	nop
sched_class_proc_tick():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:104
static void sched_class_proc_tick(struct proc_struct *proc)
{
	if (proc != idleproc) {
		sched_class->proc_tick(rq, proc);
	} else {
		proc->need_resched = 1;
80001a9c:	24020001 	li	v0,1
80001aa0:	aca20018 	sw	v0,24(a1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
80001aa4:	1260ffdf 	beqz	s3,80001a24 <run_timer_list+0xe8>
80001aa8:	8fbf002c 	lw	ra,44(sp)
run_timer_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:316
			}
		}
		sched_class_proc_tick(current);
	}
	local_intr_restore(intr_flag);
}
80001aac:	8fb60028 	lw	s6,40(sp)
80001ab0:	8fb50024 	lw	s5,36(sp)
80001ab4:	8fb40020 	lw	s4,32(sp)
80001ab8:	8fb3001c 	lw	s3,28(sp)
80001abc:	8fb20018 	lw	s2,24(sp)
80001ac0:	8fb10014 	lw	s1,20(sp)
80001ac4:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001ac8:	08006cba 	j	8001b2e8 <intr_enable>
80001acc:	27bd0030 	addiu	sp,sp,48
run_timer_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:297
					kfree(timer);
					continue;
				}
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
80001ad0:	3c068002 	lui	a2,0x8002
80001ad4:	3c078002 	lui	a3,0x8002
80001ad8:	248409a8 	addiu	a0,a0,2472
80001adc:	2405012a 	li	a1,298
80001ae0:	24c609b0 	addiu	a2,a2,2480
80001ae4:	0c006afd 	jal	8001abf4 <__panic>
80001ae8:	24e70a88 	addiu	a3,a3,2696
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.c:282
	local_intr_save(intr_flag);
	{
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
80001aec:	3c048002 	lui	a0,0x8002
80001af0:	3c068002 	lui	a2,0x8002
80001af4:	3c078002 	lui	a3,0x8002
80001af8:	248409a8 	addiu	a0,a0,2472
80001afc:	2405011a 	li	a1,282
80001b00:	24c609b0 	addiu	a2,a2,2480
80001b04:	0c006afd 	jal	8001abf4 <__panic>
80001b08:	24e70a74 	addiu	a3,a3,2676

80001b0c <RR_init>:
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001b0c:	ac840004 	sw	a0,4(a0)
80001b10:	ac840000 	sw	a0,0(a0)
RR_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:11

static void RR_init(struct run_queue *rq)
{
	list_init(&(rq->run_list));
	rq->proc_num = 0;
}
80001b14:	03e00008 	jr	ra
80001b18:	ac800008 	sw	zero,8(a0)

80001b1c <RR_pick_next>:
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80001b1c:	8c830004 	lw	v1,4(a0)
RR_pick_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:35

static struct proc_struct *RR_pick_next(struct run_queue *rq)
{
	list_entry_t *le = list_next(&(rq->run_list));
	if (le != &(rq->run_list)) {
		return le2proc(le, run_link);
80001b20:	2462ff60 	addiu	v0,v1,-160
80001b24:	00831826 	xor	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:38
	}
	return NULL;
}
80001b28:	03e00008 	jr	ra
80001b2c:	0003100a 	movz	v0,zero,v1

80001b30 <RR_proc_tick>:
RR_proc_tick():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:42

static void RR_proc_tick(struct run_queue *rq, struct proc_struct *proc)
{
	if (proc->time_slice > 0) {
80001b30:	8ca200a8 	lw	v0,168(a1)
80001b34:	18400003 	blez	v0,80001b44 <RR_proc_tick+0x14>
80001b38:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:43
		proc->time_slice--;
80001b3c:	2442ffff 	addiu	v0,v0,-1
80001b40:	aca200a8 	sw	v0,168(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:45
	}
	if (proc->time_slice == 0) {
80001b44:	14400002 	bnez	v0,80001b50 <RR_proc_tick+0x20>
80001b48:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:46
		proc->need_resched = 1;
80001b4c:	aca20018 	sw	v0,24(a1)
80001b50:	03e00008 	jr	ra
80001b54:	00000000 	nop

80001b58 <RR_dequeue>:
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80001b58:	8ca300a4 	lw	v1,164(a1)
RR_dequeue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:25
	proc->rq = rq;
	rq->proc_num++;
}

static void RR_dequeue(struct run_queue *rq, struct proc_struct *proc)
{
80001b5c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:26
	assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
80001b60:	24a200a0 	addiu	v0,a1,160
80001b64:	1043000e 	beq	v0,v1,80001ba0 <RR_dequeue+0x48>
80001b68:	afbf0014 	sw	ra,20(sp)
80001b6c:	8ca6009c 	lw	a2,156(a1)
80001b70:	14c4000b 	bne	a2,a0,80001ba0 <RR_dequeue+0x48>
80001b74:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:28
	list_del_init(&(proc->run_link));
	rq->proc_num--;
80001b78:	8cc70008 	lw	a3,8(a2)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80001b7c:	8ca400a0 	lw	a0,160(a1)
RR_dequeue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:28
80001b80:	24e7ffff 	addiu	a3,a3,-1
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80001b84:	ac830004 	sw	v1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80001b88:	ac640000 	sw	a0,0(v1)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001b8c:	aca200a4 	sw	v0,164(a1)
80001b90:	aca200a0 	sw	v0,160(a1)
RR_dequeue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:29
}
80001b94:	27bd0018 	addiu	sp,sp,24
80001b98:	03e00008 	jr	ra
80001b9c:	acc70008 	sw	a3,8(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:26
	rq->proc_num++;
}

static void RR_dequeue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
80001ba0:	3c048002 	lui	a0,0x8002
80001ba4:	3c068002 	lui	a2,0x8002
80001ba8:	3c078002 	lui	a3,0x8002
80001bac:	24840acc 	addiu	a0,a0,2764
80001bb0:	2405001a 	li	a1,26
80001bb4:	24c609b0 	addiu	a2,a2,2480
80001bb8:	0c006afd 	jal	8001abf4 <__panic>
80001bbc:	24e70ad8 	addiu	a3,a3,2776

80001bc0 <RR_enqueue>:
RR_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:15
	rq->proc_num = 0;
}

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(list_empty(&(proc->run_link)));
80001bc0:	8ca300a4 	lw	v1,164(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:14
	list_init(&(rq->run_list));
	rq->proc_num = 0;
}

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
80001bc4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:15
	assert(list_empty(&(proc->run_link)));
80001bc8:	24a200a0 	addiu	v0,a1,160
80001bcc:	1443001b 	bne	v0,v1,80001c3c <RR_enqueue+0x7c>
80001bd0:	afbf0014 	sw	ra,20(sp)
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80001bd4:	8c830000 	lw	v1,0(a0)
RR_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:17
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
80001bd8:	8ca600a8 	lw	a2,168(a1)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80001bdc:	ac820000 	sw	v0,0(a0)
80001be0:	ac620004 	sw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001be4:	aca300a0 	sw	v1,160(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80001be8:	aca400a4 	sw	a0,164(a1)
RR_enqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:17
80001bec:	14c00009 	bnez	a2,80001c14 <RR_enqueue+0x54>
80001bf0:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:18
		proc->time_slice = rq->max_time_slice;
80001bf4:	aca200a8 	sw	v0,168(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:21
	}
	proc->rq = rq;
	rq->proc_num++;
80001bf8:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:22
}
80001bfc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:20
	assert(list_empty(&(proc->run_link)));
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
		proc->time_slice = rq->max_time_slice;
	}
	proc->rq = rq;
80001c00:	aca4009c 	sw	a0,156(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:21
	rq->proc_num++;
80001c04:	24420001 	addiu	v0,v0,1
80001c08:	ac820008 	sw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:22
}
80001c0c:	03e00008 	jr	ra
80001c10:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:17

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(list_empty(&(proc->run_link)));
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
80001c14:	0046302a 	slt	a2,v0,a2
80001c18:	54c0fff7 	bnezl	a2,80001bf8 <RR_enqueue+0x38>
80001c1c:	aca200a8 	sw	v0,168(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:21
		proc->time_slice = rq->max_time_slice;
	}
	proc->rq = rq;
	rq->proc_num++;
80001c20:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:22
}
80001c24:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:20
	assert(list_empty(&(proc->run_link)));
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
		proc->time_slice = rq->max_time_slice;
	}
	proc->rq = rq;
80001c28:	aca4009c 	sw	a0,156(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:21
	rq->proc_num++;
80001c2c:	24420001 	addiu	v0,v0,1
80001c30:	ac820008 	sw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:22
}
80001c34:	03e00008 	jr	ra
80001c38:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched_RR.c:15
	rq->proc_num = 0;
}

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(list_empty(&(proc->run_link)));
80001c3c:	3c048002 	lui	a0,0x8002
80001c40:	3c068002 	lui	a2,0x8002
80001c44:	3c078002 	lui	a3,0x8002
80001c48:	24840acc 	addiu	a0,a0,2764
80001c4c:	2405000f 	li	a1,15
80001c50:	24c609b0 	addiu	a2,a2,2480
80001c54:	0c006afd 	jal	8001abf4 <__panic>
80001c58:	24e70b0c 	addiu	a3,a3,2828

80001c5c <ucore_gettimeofday>:
ucore_gettimeofday():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:12
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
80001c5c:	3c028015 	lui	v0,0x8015
80001c60:	8c4277ac 	lw	v0,30636(v0)
80001c64:	3c0351eb 	lui	v1,0x51eb
80001c68:	3463851f 	ori	v1,v1,0x851f
80001c6c:	00430018 	mult	v0,v1
80001c70:	000237c3 	sra	a2,v0,0x1f
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:9
#include <string.h>

extern int ticks;
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
80001c74:	27bdffd0 	addiu	sp,sp,-48
80001c78:	afb10024 	sw	s1,36(sp)
80001c7c:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:10
	struct mm_struct *mm = pls_read(current)->mm;
80001c80:	3c078015 	lui	a3,0x8015
80001c84:	8ce777a4 	lw	a3,30628(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:9
#include <string.h>

extern int ticks;
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
80001c88:	afb00020 	sw	s0,32(sp)
80001c8c:	afb20028 	sw	s2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:10
	struct mm_struct *mm = pls_read(current)->mm;
80001c90:	8cf00020 	lw	s0,32(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:9
#include <string.h>

extern int ticks;
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
80001c94:	00809021 	move	s2,a0
80001c98:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:14
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
	ktv.tv_usec = (ticks % 100) * 10000;
	lock_mm(mm);
80001c9c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:12
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
80001ca0:	00001810 	mfhi	v1
80001ca4:	00031943 	sra	v1,v1,0x5
80001ca8:	00663023 	subu	a2,v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:13
	ktv.tv_usec = (ticks % 100) * 10000;
80001cac:	00062880 	sll	a1,a2,0x2
80001cb0:	00061900 	sll	v1,a2,0x4
80001cb4:	00a31821 	addu	v1,a1,v1
80001cb8:	00032880 	sll	a1,v1,0x2
80001cbc:	00651821 	addu	v1,v1,a1
80001cc0:	00431023 	subu	v0,v0,v1
80001cc4:	000229c0 	sll	a1,v0,0x7
80001cc8:	00021880 	sll	v1,v0,0x2
80001ccc:	00a31823 	subu	v1,a1,v1
80001cd0:	00621021 	addu	v0,v1,v0
80001cd4:	00021880 	sll	v1,v0,0x2
80001cd8:	00431021 	addu	v0,v0,v1
80001cdc:	00021100 	sll	v0,v0,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:12
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
80001ce0:	afa60018 	sw	a2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:14
	ktv.tv_usec = (ticks % 100) * 10000;
	lock_mm(mm);
80001ce4:	0c004c18 	jal	80013060 <lock_mm>
80001ce8:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:15
	if (!copy_to_user(mm, tv, &ktv, sizeof(struct linux_timeval))) {
80001cec:	02002021 	move	a0,s0
80001cf0:	02402821 	move	a1,s2
80001cf4:	27a60018 	addiu	a2,sp,24
80001cf8:	0c007834 	jal	8001e0d0 <copy_to_user>
80001cfc:	24070008 	li	a3,8
80001d00:	1040001a 	beqz	v0,80001d6c <ucore_gettimeofday+0x110>
80001d04:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:19
		unlock_mm(mm);
		return -1;
	}
	unlock_mm(mm);
80001d08:	0c004c29 	jal	800130a4 <unlock_mm>
80001d0c:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:20
	if (tz) {
80001d10:	1220000f 	beqz	s1,80001d50 <ucore_gettimeofday+0xf4>
80001d14:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:22
		struct linux_timezone ktz;
		memset(&ktz, 0, sizeof(struct linux_timezone));
80001d18:	24060008 	li	a2,8
80001d1c:	0c005c44 	jal	80017110 <memset>
80001d20:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:23
		lock_mm(mm);
80001d24:	0c004c18 	jal	80013060 <lock_mm>
80001d28:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:24
		if (!copy_to_user(mm, tz, &ktz, sizeof(struct linux_timezone))) {
80001d2c:	02002021 	move	a0,s0
80001d30:	02202821 	move	a1,s1
80001d34:	27a60010 	addiu	a2,sp,16
80001d38:	0c007834 	jal	8001e0d0 <copy_to_user>
80001d3c:	24070008 	li	a3,8
80001d40:	1040000a 	beqz	v0,80001d6c <ucore_gettimeofday+0x110>
80001d44:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:28
			unlock_mm(mm);
			return -1;
		}
		unlock_mm(mm);
80001d48:	0c004c29 	jal	800130a4 <unlock_mm>
80001d4c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:31
	}
	return 0;
}
80001d50:	8fbf002c 	lw	ra,44(sp)
80001d54:	02401021 	move	v0,s2
80001d58:	8fb10024 	lw	s1,36(sp)
80001d5c:	8fb20028 	lw	s2,40(sp)
80001d60:	8fb00020 	lw	s0,32(sp)
80001d64:	03e00008 	jr	ra
80001d68:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:25
	if (tz) {
		struct linux_timezone ktz;
		memset(&ktz, 0, sizeof(struct linux_timezone));
		lock_mm(mm);
		if (!copy_to_user(mm, tz, &ktz, sizeof(struct linux_timezone))) {
			unlock_mm(mm);
80001d6c:	0c004c29 	jal	800130a4 <unlock_mm>
80001d70:	2412ffff 	li	s2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:26
			return -1;
80001d74:	08000755 	j	80001d54 <ucore_gettimeofday+0xf8>
80001d78:	8fbf002c 	lw	ra,44(sp)

80001d7c <do_clock_gettime>:
do_clock_gettime():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:37

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001d7c:	3c028015 	lui	v0,0x8015
80001d80:	8c4277ac 	lw	v0,30636(v0)
80001d84:	3c0351eb 	lui	v1,0x51eb
80001d88:	3463851f 	ori	v1,v1,0x851f
80001d8c:	00430018 	mult	v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:35
	return 0;
}

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
80001d90:	3c058015 	lui	a1,0x8015
80001d94:	8ca777a4 	lw	a3,30628(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:37
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001d98:	000237c3 	sra	a2,v0,0x1f
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:34
	}
	return 0;
}

int do_clock_gettime(struct linux_timespec __user * time)
{
80001d9c:	27bdffd8 	addiu	sp,sp,-40
80001da0:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:35
	struct mm_struct *mm = pls_read(current)->mm;
80001da4:	8cf00020 	lw	s0,32(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:34
	}
	return 0;
}

int do_clock_gettime(struct linux_timespec __user * time)
{
80001da8:	00802821 	move	a1,a0
80001dac:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:39
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
	ktv.tv_nsec = (ticks % 100) * 10000000;
	lock_mm(mm);
80001db0:	02002021 	move	a0,s0
80001db4:	afa50018 	sw	a1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:37

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001db8:	00001810 	mfhi	v1
80001dbc:	00031943 	sra	v1,v1,0x5
80001dc0:	00661823 	subu	v1,v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:38
	ktv.tv_nsec = (ticks % 100) * 10000000;
80001dc4:	00033880 	sll	a3,v1,0x2
80001dc8:	00033100 	sll	a2,v1,0x4
80001dcc:	00e63021 	addu	a2,a3,a2
80001dd0:	00063880 	sll	a3,a2,0x2
80001dd4:	00c73021 	addu	a2,a2,a3
80001dd8:	00461023 	subu	v0,v0,a2
80001ddc:	00023a00 	sll	a3,v0,0x8
80001de0:	000230c0 	sll	a2,v0,0x3
80001de4:	00e63023 	subu	a2,a3,a2
80001de8:	00063980 	sll	a3,a2,0x6
80001dec:	00e63023 	subu	a2,a3,a2
80001df0:	00c21021 	addu	v0,a2,v0
80001df4:	00023080 	sll	a2,v0,0x2
80001df8:	00461021 	addu	v0,v0,a2
80001dfc:	000211c0 	sll	v0,v0,0x7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:37

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001e00:	afa30010 	sw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:39
	ktv.tv_nsec = (ticks % 100) * 10000000;
	lock_mm(mm);
80001e04:	0c004c18 	jal	80013060 <lock_mm>
80001e08:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:40
	if (!copy_to_user(mm, time, &ktv, sizeof(struct linux_timespec))) {
80001e0c:	8fa50018 	lw	a1,24(sp)
80001e10:	02002021 	move	a0,s0
80001e14:	27a60010 	addiu	a2,sp,16
80001e18:	0c007834 	jal	8001e0d0 <copy_to_user>
80001e1c:	24070008 	li	a3,8
80001e20:	10400008 	beqz	v0,80001e44 <do_clock_gettime+0xc8>
80001e24:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:44
		unlock_mm(mm);
		return -1;
	}
	unlock_mm(mm);
80001e28:	0c004c29 	jal	800130a4 <unlock_mm>
80001e2c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:45
	return 0;
80001e30:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:46
}
80001e34:	8fbf0024 	lw	ra,36(sp)
80001e38:	8fb00020 	lw	s0,32(sp)
80001e3c:	03e00008 	jr	ra
80001e40:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:41
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
	ktv.tv_nsec = (ticks % 100) * 10000000;
	lock_mm(mm);
	if (!copy_to_user(mm, time, &ktv, sizeof(struct linux_timespec))) {
		unlock_mm(mm);
80001e44:	0c004c29 	jal	800130a4 <unlock_mm>
80001e48:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/syscall/gettimeofday.c:42
		return -1;
80001e4c:	0800078d 	j	80001e34 <do_clock_gettime+0xb8>
80001e50:	2402ffff 	li	v0,-1

80001e54 <dev_lookup>:
dev_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:123
 *
 * However, we have no support for this in the base system.
 */
static int dev_lookup(struct inode *node, char *path, struct inode **node_store)
{
	if (*path != '\0') {
80001e54:	90a30000 	lbu	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:122
 * mode.
 *
 * However, we have no support for this in the base system.
 */
static int dev_lookup(struct inode *node, char *path, struct inode **node_store)
{
80001e58:	27bdffe0 	addiu	sp,sp,-32
80001e5c:	afb00018 	sw	s0,24(sp)
80001e60:	afbf001c 	sw	ra,28(sp)
80001e64:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:123
	if (*path != '\0') {
80001e68:	14600006 	bnez	v1,80001e84 <dev_lookup+0x30>
80001e6c:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:126
		return -E_NOENT;
	}
	vop_ref_inc(node);
80001e70:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80001e74:	afa60010 	sw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:127
	*node_store = node;
80001e78:	8fa60010 	lw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:128
	return 0;
80001e7c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:127
{
	if (*path != '\0') {
		return -E_NOENT;
	}
	vop_ref_inc(node);
	*node_store = node;
80001e80:	acd00000 	sw	s0,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:129
	return 0;
}
80001e84:	8fbf001c 	lw	ra,28(sp)
80001e88:	8fb00018 	lw	s0,24(sp)
80001e8c:	03e00008 	jr	ra
80001e90:	27bd0020 	addiu	sp,sp,32

80001e94 <dev_tryseek>:
dev_tryseek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:97
 * Attempt a seek.
 * For block devices, require block alignment.
 * For character devices, prohibit seeking entirely.
 */
static int dev_tryseek(struct inode *node, off_t pos)
{
80001e94:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:98
	struct device *dev = vop_info(node, device);
80001e98:	10800015 	beqz	a0,80001ef0 <dev_tryseek+0x5c>
80001e9c:	afbf0014 	sw	ra,20(sp)
80001ea0:	8c830038 	lw	v1,56(a0)
80001ea4:	24021234 	li	v0,4660
80001ea8:	54620012 	bnel	v1,v0,80001ef4 <dev_tryseek+0x60>
80001eac:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:99
	if (dev->d_blocks > 0) {
80001eb0:	8c860000 	lw	a2,0(a0)
80001eb4:	10c0000b 	beqz	a2,80001ee4 <dev_tryseek+0x50>
80001eb8:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:100
		if ((pos % dev->d_blocksize) == 0) {
80001ebc:	8c830004 	lw	v1,4(a0)
80001ec0:	00a3001b 	divu	zero,a1,v1
80001ec4:	006001f4 	teq	v1,zero,0x7
80001ec8:	00002010 	mfhi	a0
80001ecc:	14800006 	bnez	a0,80001ee8 <dev_tryseek+0x54>
80001ed0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:101
			if (pos >= 0 && pos < dev->d_blocks * dev->d_blocksize) {
80001ed4:	04a00004 	bltz	a1,80001ee8 <dev_tryseek+0x54>
80001ed8:	70661802 	mul	v1,v1,a2
80001edc:	00a3282b 	sltu	a1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:106
				return 0;
			}
		}
	}
	return -E_INVAL;
80001ee0:	0005100b 	movn	v0,zero,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:107
}
80001ee4:	8fbf0014 	lw	ra,20(sp)
80001ee8:	03e00008 	jr	ra
80001eec:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:98
 * For block devices, require block alignment.
 * For character devices, prohibit seeking entirely.
 */
static int dev_tryseek(struct inode *node, off_t pos)
{
	struct device *dev = vop_info(node, device);
80001ef0:	3c048002 	lui	a0,0x8002
80001ef4:	3c068002 	lui	a2,0x8002
80001ef8:	3c078002 	lui	a3,0x8002
80001efc:	24840b3c 	addiu	a0,a0,2876
80001f00:	24050062 	li	a1,98
80001f04:	24c609b0 	addiu	a2,a2,2480
80001f08:	0c006afd 	jal	8001abf4 <__panic>
80001f0c:	24e70b44 	addiu	a3,a3,2884

80001f10 <dev_gettype>:
dev_gettype():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:85
 * Return the type. A device is a "block device" if it has a known
 * length. A device that generates data in a stream is a "character
 * device".
 */
static int dev_gettype(struct inode *node, uint32_t * type_store)
{
80001f10:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:86
	struct device *dev = vop_info(node, device);
80001f14:	1080000d 	beqz	a0,80001f4c <dev_gettype+0x3c>
80001f18:	afbf0014 	sw	ra,20(sp)
80001f1c:	8c830038 	lw	v1,56(a0)
80001f20:	24021234 	li	v0,4660
80001f24:	14620009 	bne	v1,v0,80001f4c <dev_gettype+0x3c>
80001f28:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:87
	*type_store = (dev->d_blocks > 0) ? S_IFBLK : S_IFCHR;
80001f2c:	8c840000 	lw	a0,0(a0)
80001f30:	24026000 	li	v0,24576
80001f34:	24032000 	li	v1,8192
80001f38:	0064100a 	movz	v0,v1,a0
80001f3c:	aca20000 	sw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:89
	return 0;
}
80001f40:	27bd0018 	addiu	sp,sp,24
80001f44:	03e00008 	jr	ra
80001f48:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:86
 * length. A device that generates data in a stream is a "character
 * device".
 */
static int dev_gettype(struct inode *node, uint32_t * type_store)
{
	struct device *dev = vop_info(node, device);
80001f4c:	3c048002 	lui	a0,0x8002
80001f50:	3c068002 	lui	a2,0x8002
80001f54:	3c078002 	lui	a3,0x8002
80001f58:	24840b3c 	addiu	a0,a0,2876
80001f5c:	24050056 	li	a1,86
80001f60:	24c609b0 	addiu	a2,a2,2480
80001f64:	0c006afd 	jal	8001abf4 <__panic>
80001f68:	24e70b44 	addiu	a3,a3,2884

80001f6c <dev_ioctl>:
dev_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:55

/*
 * Called for ioctl(). Just pass through.
 */
static int dev_ioctl(struct inode *node, int op, void *data)
{
80001f6c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:56
	struct device *dev = vop_info(node, device);
80001f70:	10800008 	beqz	a0,80001f94 <dev_ioctl+0x28>
80001f74:	afbf0014 	sw	ra,20(sp)
80001f78:	8c870038 	lw	a3,56(a0)
80001f7c:	24031234 	li	v1,4660
80001f80:	14e30004 	bne	a3,v1,80001f94 <dev_ioctl+0x28>
80001f84:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:57
	return dop_ioctl(dev, op, data);
80001f88:	8c99002c 	lw	t9,44(a0)
80001f8c:	03200008 	jr	t9
80001f90:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:56
/*
 * Called for ioctl(). Just pass through.
 */
static int dev_ioctl(struct inode *node, int op, void *data)
{
	struct device *dev = vop_info(node, device);
80001f94:	3c048002 	lui	a0,0x8002
80001f98:	3c068002 	lui	a2,0x8002
80001f9c:	3c078002 	lui	a3,0x8002
80001fa0:	24840b3c 	addiu	a0,a0,2876
80001fa4:	24050038 	li	a1,56
80001fa8:	24c609b0 	addiu	a2,a2,2480
80001fac:	0c006afd 	jal	8001abf4 <__panic>
80001fb0:	24e70b44 	addiu	a3,a3,2884

80001fb4 <dev_write>:
dev_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:46

/*
 * Called for write. Hand off to dop_io.
 */
static int dev_write(struct inode *node, struct iobuf *iob)
{
80001fb4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:47
	struct device *dev = vop_info(node, device);
80001fb8:	10800009 	beqz	a0,80001fe0 <dev_write+0x2c>
80001fbc:	afbf0014 	sw	ra,20(sp)
80001fc0:	8c860038 	lw	a2,56(a0)
80001fc4:	24031234 	li	v1,4660
80001fc8:	14c30005 	bne	a2,v1,80001fe0 <dev_write+0x2c>
80001fcc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:48
	return dop_io(dev, iob, 1);
80001fd0:	8c990028 	lw	t9,40(a0)
80001fd4:	24060001 	li	a2,1
80001fd8:	03200008 	jr	t9
80001fdc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:47
/*
 * Called for write. Hand off to dop_io.
 */
static int dev_write(struct inode *node, struct iobuf *iob)
{
	struct device *dev = vop_info(node, device);
80001fe0:	3c048002 	lui	a0,0x8002
80001fe4:	3c068002 	lui	a2,0x8002
80001fe8:	3c078002 	lui	a3,0x8002
80001fec:	24840b3c 	addiu	a0,a0,2876
80001ff0:	2405002f 	li	a1,47
80001ff4:	24c609b0 	addiu	a2,a2,2480
80001ff8:	0c006afd 	jal	8001abf4 <__panic>
80001ffc:	24e70b44 	addiu	a3,a3,2884

80002000 <dev_read>:
dev_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:37

/*
 * Called for read. Hand off to dop_io.
 */
static int dev_read(struct inode *node, struct iobuf *iob)
{
80002000:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:38
	struct device *dev = vop_info(node, device);
80002004:	10800009 	beqz	a0,8000202c <dev_read+0x2c>
80002008:	afbf0014 	sw	ra,20(sp)
8000200c:	8c860038 	lw	a2,56(a0)
80002010:	24031234 	li	v1,4660
80002014:	14c30005 	bne	a2,v1,8000202c <dev_read+0x2c>
80002018:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:39
	return dop_io(dev, iob, 0);
8000201c:	8c990028 	lw	t9,40(a0)
80002020:	00003021 	move	a2,zero
80002024:	03200008 	jr	t9
80002028:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:38
/*
 * Called for read. Hand off to dop_io.
 */
static int dev_read(struct inode *node, struct iobuf *iob)
{
	struct device *dev = vop_info(node, device);
8000202c:	3c048002 	lui	a0,0x8002
80002030:	3c068002 	lui	a2,0x8002
80002034:	3c078002 	lui	a3,0x8002
80002038:	24840b3c 	addiu	a0,a0,2876
8000203c:	24050026 	li	a1,38
80002040:	24c609b0 	addiu	a2,a2,2480
80002044:	0c006afd 	jal	8001abf4 <__panic>
80002048:	24e70b44 	addiu	a3,a3,2884

8000204c <dev_close>:
dev_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:28
/*
 * Called on the last close().
 * Just pass through.
 */
static int dev_close(struct inode *node)
{
8000204c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:29
	struct device *dev = vop_info(node, device);
80002050:	10800008 	beqz	a0,80002074 <dev_close+0x28>
80002054:	afbf0014 	sw	ra,20(sp)
80002058:	8c850038 	lw	a1,56(a0)
8000205c:	24031234 	li	v1,4660
80002060:	14a30004 	bne	a1,v1,80002074 <dev_close+0x28>
80002064:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:30
	return dop_close(dev);
80002068:	8c990024 	lw	t9,36(a0)
8000206c:	03200008 	jr	t9
80002070:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:29
 * Called on the last close().
 * Just pass through.
 */
static int dev_close(struct inode *node)
{
	struct device *dev = vop_info(node, device);
80002074:	3c048002 	lui	a0,0x8002
80002078:	3c068002 	lui	a2,0x8002
8000207c:	3c078002 	lui	a3,0x8002
80002080:	24840b3c 	addiu	a0,a0,2876
80002084:	2405001d 	li	a1,29
80002088:	24c609b0 	addiu	a2,a2,2480
8000208c:	0c006afd 	jal	8001abf4 <__panic>
80002090:	24e70b44 	addiu	a3,a3,2884

80002094 <dev_open>:
dev_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:15
 * Called for each open().
 *
 * We reject O_CREAT | O_TRUNC | O_EXCL | O_APPEND
 */
static int dev_open(struct inode *node, uint32_t open_flags)
{
80002094:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:16
	if (open_flags & (O_CREAT | O_TRUNC | O_EXCL | O_APPEND)) {
80002098:	30a306c0 	andi	v1,a1,0x6c0
8000209c:	14600009 	bnez	v1,800020c4 <dev_open+0x30>
800020a0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:19
		return -E_INVAL;
	}
	struct device *dev = vop_info(node, device);
800020a4:	1080000b 	beqz	a0,800020d4 <dev_open+0x40>
800020a8:	24031234 	li	v1,4660
800020ac:	8c860038 	lw	a2,56(a0)
800020b0:	14c30008 	bne	a2,v1,800020d4 <dev_open+0x40>
800020b4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:20
	return dop_open(dev, open_flags);
800020b8:	8c990020 	lw	t9,32(a0)
800020bc:	03200008 	jr	t9
800020c0:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:21
}
800020c4:	8fbf0014 	lw	ra,20(sp)
800020c8:	2402ffea 	li	v0,-22
800020cc:	03e00008 	jr	ra
800020d0:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:19
static int dev_open(struct inode *node, uint32_t open_flags)
{
	if (open_flags & (O_CREAT | O_TRUNC | O_EXCL | O_APPEND)) {
		return -E_INVAL;
	}
	struct device *dev = vop_info(node, device);
800020d4:	3c048002 	lui	a0,0x8002
800020d8:	3c068002 	lui	a2,0x8002
800020dc:	3c078002 	lui	a3,0x8002
800020e0:	24840b3c 	addiu	a0,a0,2876
800020e4:	24050013 	li	a1,19
800020e8:	24c609b0 	addiu	a2,a2,2480
800020ec:	0c006afd 	jal	8001abf4 <__panic>
800020f0:	24e70b44 	addiu	a3,a3,2884

800020f4 <dev_fstat>:
dev_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:66
 * Called for fstat().
 * Set the type and the size.
 * The link count for a device is always 1.
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
800020f4:	27bdffe0 	addiu	sp,sp,-32
800020f8:	afb10018 	sw	s1,24(sp)
800020fc:	00a08821 	move	s1,a1
80002100:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80002104:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:66
 * Called for fstat().
 * Set the type and the size.
 * The link count for a device is always 1.
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
80002108:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
8000210c:	24060010 	li	a2,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:66
 * Called for fstat().
 * Set the type and the size.
 * The link count for a device is always 1.
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
80002110:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80002114:	0c005c44 	jal	80017110 <memset>
80002118:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:69
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
8000211c:	1200001f 	beqz	s0,8000219c <dev_fstat+0xa8>
80002120:	3c048002 	lui	a0,0x8002
80002124:	8e020048 	lw	v0,72(s0)
80002128:	1040001d 	beqz	v0,800021a0 <dev_fstat+0xac>
8000212c:	3c068002 	lui	a2,0x8002
80002130:	8c420040 	lw	v0,64(v0)
80002134:	10400019 	beqz	v0,8000219c <dev_fstat+0xa8>
80002138:	3c058002 	lui	a1,0x8002
8000213c:	02002021 	move	a0,s0
80002140:	0c0010e5 	jal	80004394 <inode_check>
80002144:	24a50bc8 	addiu	a1,a1,3016
80002148:	8e020048 	lw	v0,72(s0)
8000214c:	02002021 	move	a0,s0
80002150:	8c420040 	lw	v0,64(v0)
80002154:	0040f809 	jalr	v0
80002158:	02202821 	move	a1,s1
8000215c:	1440000a 	bnez	v0,80002188 <dev_fstat+0x94>
80002160:	24031234 	li	v1,4660
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:72
		return ret;
	}
	struct device *dev = vop_info(node, device);
80002164:	8e040038 	lw	a0,56(s0)
80002168:	14830013 	bne	a0,v1,800021b8 <dev_fstat+0xc4>
8000216c:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:74
	stat->st_nlinks = 1;
	stat->st_blocks = dev->d_blocks;
80002170:	8e030000 	lw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:75
	stat->st_size = stat->st_blocks * dev->d_blocksize;
80002174:	8e040004 	lw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:73
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct device *dev = vop_info(node, device);
	stat->st_nlinks = 1;
80002178:	ae250004 	sw	a1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:75
	stat->st_blocks = dev->d_blocks;
	stat->st_size = stat->st_blocks * dev->d_blocksize;
8000217c:	70832002 	mul	a0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:74
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct device *dev = vop_info(node, device);
	stat->st_nlinks = 1;
	stat->st_blocks = dev->d_blocks;
80002180:	ae230008 	sw	v1,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:75
	stat->st_size = stat->st_blocks * dev->d_blocksize;
80002184:	ae24000c 	sw	a0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:77
	return 0;
}
80002188:	8fbf001c 	lw	ra,28(sp)
8000218c:	8fb10018 	lw	s1,24(sp)
80002190:	8fb00014 	lw	s0,20(sp)
80002194:	03e00008 	jr	ra
80002198:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:69
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
	int ret;
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
8000219c:	3c068002 	lui	a2,0x8002
800021a0:	3c078002 	lui	a3,0x8002
800021a4:	24840b3c 	addiu	a0,a0,2876
800021a8:	24050045 	li	a1,69
800021ac:	24c609b0 	addiu	a2,a2,2480
800021b0:	0c006afd 	jal	8001abf4 <__panic>
800021b4:	24e70b78 	addiu	a3,a3,2936
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:72
		return ret;
	}
	struct device *dev = vop_info(node, device);
800021b8:	3c048002 	lui	a0,0x8002
800021bc:	3c068002 	lui	a2,0x8002
800021c0:	3c078002 	lui	a3,0x8002
800021c4:	24840b3c 	addiu	a0,a0,2876
800021c8:	24050048 	li	a1,72
800021cc:	24c609b0 	addiu	a2,a2,2480
800021d0:	0c006afd 	jal	8001abf4 <__panic>
800021d4:	24e70b44 	addiu	a3,a3,2884

800021d8 <dev_init>:
dev_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:167
        extern void dev_init_##x(void);                 \
        dev_init_##x();                                 \
    } while (0)

void dev_init(void)
{
800021d8:	27bdffe8 	addiu	sp,sp,-24
800021dc:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:168
	init_device(null);
800021e0:	0c0009dd 	jal	80002774 <dev_init_null>
800021e4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:169
	init_device(stdin);
800021e8:	0c000ac4 	jal	80002b10 <dev_init_stdin>
800021ec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:170
	init_device(stdout);
800021f0:	0c000b26 	jal	80002c98 <dev_init_stdout>
800021f4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:171
	init_device(disk0);
800021f8:	0c000938 	jal	800024e0 <dev_init_disk0>
800021fc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:174
	/* for Nand flash */
	init_device(disk1);
}
80002200:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:173
	init_device(null);
	init_device(stdin);
	init_device(stdout);
	init_device(disk0);
	/* for Nand flash */
	init_device(disk1);
80002204:	08000997 	j	8000265c <dev_init_disk1>
80002208:	27bd0018 	addiu	sp,sp,24

8000220c <dev_create_inode>:
dev_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:180

/*
 * Function to create a inode for a VFS device.
 */
struct inode *dev_create_inode(void)
{
8000220c:	27bdffe0 	addiu	sp,sp,-32
80002210:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:182
	struct inode *node;
	if ((node = alloc_inode(device)) != NULL) {
80002214:	0c001083 	jal	8000420c <__alloc_inode>
80002218:	24041234 	li	a0,4660
8000221c:	10400007 	beqz	v0,8000223c <dev_create_inode+0x30>
80002220:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:183
		vop_init(node, &dev_node_ops, NULL);
80002224:	00402021 	move	a0,v0
80002228:	24a5f988 	addiu	a1,a1,-1656
8000222c:	00003021 	move	a2,zero
80002230:	0c0010c4 	jal	80004310 <inode_init>
80002234:	afa20010 	sw	v0,16(sp)
80002238:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev.c:186
	}
	return node;
}
8000223c:	8fbf001c 	lw	ra,28(sp)
80002240:	03e00008 	jr	ra
80002244:	27bd0020 	addiu	sp,sp,32

80002248 <disk0_open>:
disk0_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:33
}

static int disk0_open(struct device *dev, uint32_t open_flags)
{
	return 0;
}
80002248:	03e00008 	jr	ra
8000224c:	00001021 	move	v0,zero

80002250 <disk0_close>:
disk0_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:38

static int disk0_close(struct device *dev)
{
	return 0;
}
80002250:	03e00008 	jr	ra
80002254:	00001021 	move	v0,zero

80002258 <disk0_ioctl>:
disk0_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:115
}

static int disk0_ioctl(struct device *dev, int op, void *data)
{
	return -E_UNIMP;
}
80002258:	03e00008 	jr	ra
8000225c:	2402ffdd 	li	v0,-35

80002260 <disk0_io>:
disk0_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:67
		     blkno, sectno, nblks, nsecs, ret);
	}
}

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
80002260:	27bdffb0 	addiu	sp,sp,-80
80002264:	afb00028 	sw	s0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:68
	off_t offset = iob->io_offset;
80002268:	8ca20004 	lw	v0,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:69
	size_t resid = iob->io_resid;
8000226c:	8cb0000c 	lw	s0,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:67
		     blkno, sectno, nblks, nsecs, ret);
	}
}

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
80002270:	afb70044 	sw	s7,68(sp)
80002274:	afb60040 	sw	s6,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:66
		    ("disk0: write blkno = %d (sectno = %d), nblks = %d (nsecs = %d): 0x%08x.\n",
		     blkno, sectno, nblks, nsecs, ret);
	}
}

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
80002278:	00501825 	or	v1,v0,s0
8000227c:	30630fff 	andi	v1,v1,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:67
{
80002280:	afbf004c 	sw	ra,76(sp)
80002284:	afbe0048 	sw	s8,72(sp)
80002288:	afb5003c 	sw	s5,60(sp)
8000228c:	afb40038 	sw	s4,56(sp)
80002290:	afb30034 	sw	s3,52(sp)
80002294:	afb20030 	sw	s2,48(sp)
80002298:	afb1002c 	sw	s1,44(sp)
8000229c:	00a0b021 	move	s6,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:74
	size_t resid = iob->io_resid;
	uint32_t blkno = offset / DISK0_BLKSIZE;
	uint32_t nblks = resid / DISK0_BLKSIZE;

	/* don't allow I/O that isn't block-aligned */
	if ((offset % DISK0_BLKSIZE) != 0 || (resid % DISK0_BLKSIZE) != 0) {
800022a0:	14600068 	bnez	v1,80002444 <disk0_io+0x1e4>
800022a4:	00c0b821 	move	s7,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:70

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
	off_t offset = iob->io_offset;
	size_t resid = iob->io_resid;
	uint32_t blkno = offset / DISK0_BLKSIZE;
800022a8:	24430fff 	addiu	v1,v0,4095
800022ac:	28510000 	slti	s1,v0,0
800022b0:	0071100b 	movn	v0,v1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:79
	if ((offset % DISK0_BLKSIZE) != 0 || (resid % DISK0_BLKSIZE) != 0) {
		return -E_INVAL;
	}

	/* don't allow I/O past the end of disk0 */
	if (blkno + nblks > dev->d_blocks) {
800022b4:	8c840000 	lw	a0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:70

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
	off_t offset = iob->io_offset;
	size_t resid = iob->io_resid;
	uint32_t blkno = offset / DISK0_BLKSIZE;
800022b8:	00028b03 	sra	s1,v0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:71
	uint32_t nblks = resid / DISK0_BLKSIZE;
800022bc:	00101b02 	srl	v1,s0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:79
	if ((offset % DISK0_BLKSIZE) != 0 || (resid % DISK0_BLKSIZE) != 0) {
		return -E_INVAL;
	}

	/* don't allow I/O past the end of disk0 */
	if (blkno + nblks > dev->d_blocks) {
800022c0:	02231021 	addu	v0,s1,v1
800022c4:	0082102b 	sltu	v0,a0,v0
800022c8:	54400003 	bnezl	v0,800022d8 <disk0_io+0x78>
800022cc:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:84
		return -E_INVAL;
	}

	/* read/write nothing ? */
	if (nblks == 0) {
800022d0:	5460000d 	bnezl	v1,80002308 <disk0_io+0xa8>
800022d4:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:110
		}
		resid -= copied, blkno += nblks;
	}
	unlock_disk0();
	return 0;
}
800022d8:	8fbf004c 	lw	ra,76(sp)
800022dc:	8fbe0048 	lw	s8,72(sp)
800022e0:	8fb70044 	lw	s7,68(sp)
800022e4:	8fb60040 	lw	s6,64(sp)
800022e8:	8fb5003c 	lw	s5,60(sp)
800022ec:	8fb40038 	lw	s4,56(sp)
800022f0:	8fb30034 	lw	s3,52(sp)
800022f4:	8fb20030 	lw	s2,48(sp)
800022f8:	8fb1002c 	lw	s1,44(sp)
800022fc:	8fb00028 	lw	s0,40(sp)
80002300:	03e00008 	jr	ra
80002304:	27bd0050 	addiu	sp,sp,80
lock_disk0():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:22
static char *disk0_buffer;
static semaphore_t disk0_sem;

static void lock_disk0(void)
{
	down(&(disk0_sem));
80002308:	0c006711 	jal	80019c44 <down>
8000230c:	244434c0 	addiu	a0,v0,13504
disk0_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:89
	if (nblks == 0) {
		return 0;
	}

	lock_disk0();
	while (resid != 0) {
80002310:	1200001f 	beqz	s0,80002390 <disk0_io+0x130>
80002314:	3c1e8015 	lui	s8,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:91
		size_t copied, alen = DISK0_BUFSIZE;
		if (write) {
80002318:	16e00030 	bnez	s7,800023dc <disk0_io+0x17c>
8000231c:	2e024000 	sltiu	v0,s0,16384
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:98
			assert(copied != 0 && copied <= resid
			       && copied % DISK0_BLKSIZE == 0);
			nblks = copied / DISK0_BLKSIZE;
			disk0_write_blks_nolock(blkno, nblks);
		} else {
			if (alen > resid) {
80002320:	1040002b 	beqz	v0,800023d0 <disk0_io+0x170>
80002324:	24150020 	li	s5,32
80002328:	00109b02 	srl	s3,s0,0xc
8000232c:	0013a8c0 	sll	s5,s3,0x3
80002330:	02009021 	move	s2,s0
disk0_read_blks_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:45
static void disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
80002334:	8fc634d4 	lw	a2,13524(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:43
}

static void disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
80002338:	0011a0c0 	sll	s4,s1,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:45
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
8000233c:	24040002 	li	a0,2
80002340:	02802821 	move	a1,s4
80002344:	0c006c96 	jal	8001b258 <ide_read_secs>
80002348:	02a03821 	move	a3,s5
8000234c:	1440004f 	bnez	v0,8000248c <disk0_io+0x22c>
80002350:	02c02021 	move	a0,s6
disk0_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:103
			if (alen > resid) {
				alen = resid;
			}
			nblks = alen / DISK0_BLKSIZE;
			disk0_read_blks_nolock(blkno, nblks);
			iobuf_move(iob, disk0_buffer, alen, 1, &copied);
80002354:	3c028015 	lui	v0,0x8015
80002358:	8c4534d4 	lw	a1,13524(v0)
8000235c:	27a20020 	addiu	v0,sp,32
80002360:	02403021 	move	a2,s2
80002364:	24070001 	li	a3,1
80002368:	0c00337a 	jal	8000cde8 <iobuf_move>
8000236c:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:104
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
80002370:	8fa20020 	lw	v0,32(sp)
80002374:	14520035 	bne	v0,s2,8000244c <disk0_io+0x1ec>
80002378:	32520fff 	andi	s2,s2,0xfff
8000237c:	16400034 	bnez	s2,80002450 <disk0_io+0x1f0>
80002380:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:106
		}
		resid -= copied, blkno += nblks;
80002384:	02028023 	subu	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:89
	if (nblks == 0) {
		return 0;
	}

	lock_disk0();
	while (resid != 0) {
80002388:	1600ffe3 	bnez	s0,80002318 <disk0_io+0xb8>
8000238c:	02338821 	addu	s1,s1,s3
unlock_disk0():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:27
	down(&(disk0_sem));
}

static void unlock_disk0(void)
{
	up(&(disk0_sem));
80002390:	3c028015 	lui	v0,0x8015
80002394:	0c00670f 	jal	80019c3c <up>
80002398:	244434c0 	addiu	a0,v0,13504
disk0_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:110
		}
		resid -= copied, blkno += nblks;
	}
	unlock_disk0();
	return 0;
}
8000239c:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:109
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
		}
		resid -= copied, blkno += nblks;
	}
	unlock_disk0();
	return 0;
800023a0:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:110
}
800023a4:	8fbe0048 	lw	s8,72(sp)
800023a8:	8fb70044 	lw	s7,68(sp)
800023ac:	8fb60040 	lw	s6,64(sp)
800023b0:	8fb5003c 	lw	s5,60(sp)
800023b4:	8fb40038 	lw	s4,56(sp)
800023b8:	8fb30034 	lw	s3,52(sp)
800023bc:	8fb20030 	lw	s2,48(sp)
800023c0:	8fb1002c 	lw	s1,44(sp)
800023c4:	8fb00028 	lw	s0,40(sp)
800023c8:	03e00008 	jr	ra
800023cc:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:98
			assert(copied != 0 && copied <= resid
			       && copied % DISK0_BLKSIZE == 0);
			nblks = copied / DISK0_BLKSIZE;
			disk0_write_blks_nolock(blkno, nblks);
		} else {
			if (alen > resid) {
800023d0:	24130004 	li	s3,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:90
		return 0;
	}

	lock_disk0();
	while (resid != 0) {
		size_t copied, alen = DISK0_BUFSIZE;
800023d4:	080008cd 	j	80002334 <disk0_io+0xd4>
800023d8:	24124000 	li	s2,16384
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:92
		if (write) {
			iobuf_move(iob, disk0_buffer, alen, 0, &copied);
800023dc:	8fc534d4 	lw	a1,13524(s8)
800023e0:	27a20020 	addiu	v0,sp,32
800023e4:	02c02021 	move	a0,s6
800023e8:	24064000 	li	a2,16384
800023ec:	00003821 	move	a3,zero
800023f0:	0c00337a 	jal	8000cde8 <iobuf_move>
800023f4:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:93
			assert(copied != 0 && copied <= resid
800023f8:	8fb30020 	lw	s3,32(sp)
800023fc:	1260001b 	beqz	s3,8000246c <disk0_io+0x20c>
80002400:	0213102b 	sltu	v0,s0,s3
80002404:	14400019 	bnez	v0,8000246c <disk0_io+0x20c>
80002408:	32620fff 	andi	v0,s3,0xfff
8000240c:	14400017 	bnez	v0,8000246c <disk0_io+0x20c>
80002410:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:95
			       && copied % DISK0_BLKSIZE == 0);
			nblks = copied / DISK0_BLKSIZE;
80002414:	00139b02 	srl	s3,s3,0xc
disk0_write_blks_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:58
static void disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
80002418:	8c4634d4 	lw	a2,13524(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:56
}

static void disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
8000241c:	0011a0c0 	sll	s4,s1,0x3
80002420:	001390c0 	sll	s2,s3,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:58
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
80002424:	24040002 	li	a0,2
80002428:	02802821 	move	a1,s4
8000242c:	0c006ca8 	jal	8001b2a0 <ide_write_secs>
80002430:	02403821 	move	a3,s2
80002434:	14400020 	bnez	v0,800024b8 <disk0_io+0x258>
80002438:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:104
				alen = resid;
			}
			nblks = alen / DISK0_BLKSIZE;
			disk0_read_blks_nolock(blkno, nblks);
			iobuf_move(iob, disk0_buffer, alen, 1, &copied);
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
8000243c:	080008e1 	j	80002384 <disk0_io+0x124>
80002440:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:80
		return -E_INVAL;
	}

	/* don't allow I/O past the end of disk0 */
	if (blkno + nblks > dev->d_blocks) {
		return -E_INVAL;
80002444:	080008b6 	j	800022d8 <disk0_io+0x78>
80002448:	2402ffea 	li	v0,-22
disk0_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:104
				alen = resid;
			}
			nblks = alen / DISK0_BLKSIZE;
			disk0_read_blks_nolock(blkno, nblks);
			iobuf_move(iob, disk0_buffer, alen, 1, &copied);
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
8000244c:	3c048002 	lui	a0,0x8002
80002450:	3c068002 	lui	a2,0x8002
80002454:	3c078002 	lui	a3,0x8002
80002458:	24840bd0 	addiu	a0,a0,3024
8000245c:	24050068 	li	a1,104
80002460:	24c609b0 	addiu	a2,a2,2480
80002464:	0c006afd 	jal	8001abf4 <__panic>
80002468:	24e70cb0 	addiu	a3,a3,3248
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:93
	lock_disk0();
	while (resid != 0) {
		size_t copied, alen = DISK0_BUFSIZE;
		if (write) {
			iobuf_move(iob, disk0_buffer, alen, 0, &copied);
			assert(copied != 0 && copied <= resid
8000246c:	3c048002 	lui	a0,0x8002
80002470:	3c068002 	lui	a2,0x8002
80002474:	3c078002 	lui	a3,0x8002
80002478:	24840bd0 	addiu	a0,a0,3024
8000247c:	2405005e 	li	a1,94
80002480:	24c609b0 	addiu	a2,a2,2480
80002484:	0c006afd 	jal	8001abf4 <__panic>
80002488:	24e70bdc 	addiu	a3,a3,3036
disk0_read_blks_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:47
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
	     ide_read_secs(DISK0_DEV_NO, sectno, disk0_buffer, nsecs)) != 0) {
		panic
8000248c:	3c048002 	lui	a0,0x8002
80002490:	3c068002 	lui	a2,0x8002
80002494:	24840bd0 	addiu	a0,a0,3024
80002498:	24050031 	li	a1,49
8000249c:	24c60c68 	addiu	a2,a2,3176
800024a0:	02203821 	move	a3,s1
800024a4:	afb40010 	sw	s4,16(sp)
800024a8:	afb30014 	sw	s3,20(sp)
800024ac:	afb50018 	sw	s5,24(sp)
800024b0:	0c006afd 	jal	8001abf4 <__panic>
800024b4:	afa2001c 	sw	v0,28(sp)
disk0_write_blks_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:60
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
	     ide_write_secs(DISK0_DEV_NO, sectno, disk0_buffer, nsecs)) != 0) {
		panic
800024b8:	3c068002 	lui	a2,0x8002
800024bc:	24840bd0 	addiu	a0,a0,3024
800024c0:	2405003e 	li	a1,62
800024c4:	24c60c1c 	addiu	a2,a2,3100
800024c8:	02203821 	move	a3,s1
800024cc:	afb40010 	sw	s4,16(sp)
800024d0:	afb30014 	sw	s3,20(sp)
800024d4:	afb20018 	sw	s2,24(sp)
800024d8:	0c006afd 	jal	8001abf4 <__panic>
800024dc:	afa2001c 	sw	v0,28(sp)

800024e0 <dev_init_disk0>:
dev_init_disk0():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:139
		panic("disk0 alloc buffer failed.\n");
	}
}

void dev_init_disk0(void)
{
800024e0:	27bdffe8 	addiu	sp,sp,-24
800024e4:	afb00010 	sw	s0,16(sp)
800024e8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:141
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
800024ec:	0c000883 	jal	8000220c <dev_create_inode>
800024f0:	00000000 	nop
800024f4:	10400039 	beqz	v0,800025dc <dev_init_disk0+0xfc>
800024f8:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:144
		panic("disk0: dev_create_node.\n");
	}
	disk0_device_init(vop_info(node, device));
800024fc:	8c430038 	lw	v1,56(v0)
80002500:	24021234 	li	v0,4660
80002504:	1462002d 	bne	v1,v0,800025bc <dev_init_disk0+0xdc>
80002508:	02002021 	move	a0,s0
disk0_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:119
	return -E_UNIMP;
}

static void disk0_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
8000250c:	00002821 	move	a1,zero
80002510:	0c005c44 	jal	80017110 <memset>
80002514:	24060030 	li	a2,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:121
	static_assert(DISK0_BLKSIZE % SECTSIZE == 0);
	if (!ide_device_valid(DISK0_DEV_NO)) {
80002518:	0c006c7f 	jal	8001b1fc <ide_device_valid>
8000251c:	24040002 	li	a0,2
80002520:	50400041 	beqzl	v0,80002628 <dev_init_disk0+0x148>
80002524:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:124
		panic("disk0 device isn't available.\n");
	}
	dev->d_blocks = ide_device_size(DISK0_DEV_NO) / DISK0_BLK_NSECT;
80002528:	0c006c8a 	jal	8001b228 <ide_device_size>
8000252c:	24040002 	li	a0,2
80002530:	000210c2 	srl	v0,v0,0x3
80002534:	ae020000 	sw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:125
	dev->d_blocksize = DISK0_BLKSIZE;
80002538:	24021000 	li	v0,4096
8000253c:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:126
	dev->d_open = disk0_open;
80002540:	3c028000 	lui	v0,0x8000
80002544:	24422248 	addiu	v0,v0,8776
80002548:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:127
	dev->d_close = disk0_close;
8000254c:	3c028000 	lui	v0,0x8000
80002550:	24422250 	addiu	v0,v0,8784
80002554:	ae020024 	sw	v0,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:128
	dev->d_io = disk0_io;
80002558:	3c028000 	lui	v0,0x8000
8000255c:	24422260 	addiu	v0,v0,8800
80002560:	ae020028 	sw	v0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:129
	dev->d_ioctl = disk0_ioctl;
80002564:	3c028000 	lui	v0,0x8000
80002568:	24422258 	addiu	v0,v0,8792
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:130
	sem_init(&(disk0_sem), 1);
8000256c:	3c048015 	lui	a0,0x8015
80002570:	248434c0 	addiu	a0,a0,13504
80002574:	24050001 	li	a1,1
80002578:	0c006709 	jal	80019c24 <sem_init>
8000257c:	ae02002c 	sw	v0,44(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:133

	static_assert(DISK0_BUFSIZE % DISK0_BLKSIZE == 0);
	if ((disk0_buffer = kmalloc(DISK0_BUFSIZE)) == NULL) {
80002580:	0c005478 	jal	800151e0 <kmalloc>
80002584:	24044000 	li	a0,16384
80002588:	3c038015 	lui	v1,0x8015
8000258c:	10400020 	beqz	v0,80002610 <dev_init_disk0+0x130>
80002590:	ac6234d4 	sw	v0,13524(v1)
dev_init_disk0():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:147
		panic("disk0: dev_create_node.\n");
	}
	disk0_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk0", node, 1)) != 0) {
80002594:	3c048002 	lui	a0,0x8002
80002598:	24840d38 	addiu	a0,a0,3384
8000259c:	02002821 	move	a1,s0
800025a0:	0c001436 	jal	800050d8 <vfs_add_dev>
800025a4:	24060001 	li	a2,1
800025a8:	14400012 	bnez	v0,800025f4 <dev_init_disk0+0x114>
800025ac:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:150
		panic("disk0: vfs_add_dev: %e.\n", ret);
	}
}
800025b0:	8fb00010 	lw	s0,16(sp)
800025b4:	03e00008 	jr	ra
800025b8:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:144
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk0: dev_create_node.\n");
	}
	disk0_device_init(vop_info(node, device));
800025bc:	3c048002 	lui	a0,0x8002
800025c0:	3c068002 	lui	a2,0x8002
800025c4:	3c078002 	lui	a3,0x8002
800025c8:	24840bd0 	addiu	a0,a0,3024
800025cc:	24050090 	li	a1,144
800025d0:	24c609b0 	addiu	a2,a2,2480
800025d4:	0c006afd 	jal	8001abf4 <__panic>
800025d8:	24e70b44 	addiu	a3,a3,2884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:142

void dev_init_disk0(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk0: dev_create_node.\n");
800025dc:	3c048002 	lui	a0,0x8002
800025e0:	3c068002 	lui	a2,0x8002
800025e4:	24840bd0 	addiu	a0,a0,3024
800025e8:	2405008e 	li	a1,142
800025ec:	0c006afd 	jal	8001abf4 <__panic>
800025f0:	24c60ce0 	addiu	a2,a2,3296
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:148
	}
	disk0_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk0", node, 1)) != 0) {
		panic("disk0: vfs_add_dev: %e.\n", ret);
800025f4:	3c048002 	lui	a0,0x8002
800025f8:	3c068002 	lui	a2,0x8002
800025fc:	24840bd0 	addiu	a0,a0,3024
80002600:	24050094 	li	a1,148
80002604:	24c60d40 	addiu	a2,a2,3392
80002608:	0c006afd 	jal	8001abf4 <__panic>
8000260c:	00403821 	move	a3,v0
disk0_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:134
	dev->d_ioctl = disk0_ioctl;
	sem_init(&(disk0_sem), 1);

	static_assert(DISK0_BUFSIZE % DISK0_BLKSIZE == 0);
	if ((disk0_buffer = kmalloc(DISK0_BUFSIZE)) == NULL) {
		panic("disk0 alloc buffer failed.\n");
80002610:	3c048002 	lui	a0,0x8002
80002614:	3c068002 	lui	a2,0x8002
80002618:	24840bd0 	addiu	a0,a0,3024
8000261c:	24050086 	li	a1,134
80002620:	0c006afd 	jal	8001abf4 <__panic>
80002624:	24c60d1c 	addiu	a2,a2,3356
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk0.c:122
static void disk0_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	static_assert(DISK0_BLKSIZE % SECTSIZE == 0);
	if (!ide_device_valid(DISK0_DEV_NO)) {
		panic("disk0 device isn't available.\n");
80002628:	3c068002 	lui	a2,0x8002
8000262c:	24840bd0 	addiu	a0,a0,3024
80002630:	2405007a 	li	a1,122
80002634:	0c006afd 	jal	8001abf4 <__panic>
80002638:	24c60cfc 	addiu	a2,a2,3324

8000263c <disk1_open>:
disk1_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:41

/* For open() */
static int disk1_open(struct device *dev, uint32_t open_flags)
{
	return 0;
}
8000263c:	03e00008 	jr	ra
80002640:	00001021 	move	v0,zero

80002644 <disk1_close>:
disk1_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:47

/* For close() */
static int disk1_close(struct device *dev)
{
	return 0;
}
80002644:	03e00008 	jr	ra
80002648:	00001021 	move	v0,zero

8000264c <disk1_io>:
disk1_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:53

/* For dop_io() */
static int disk1_io(struct device *dev, struct iobuf *iob, bool write)
{
	return -E_INVAL;
}
8000264c:	03e00008 	jr	ra
80002650:	2402ffea 	li	v0,-22

80002654 <disk1_ioctl>:
disk1_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:59

/* For ioctl() */
static int disk1_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
80002654:	03e00008 	jr	ra
80002658:	2402ffea 	li	v0,-22

8000265c <dev_init_disk1>:
dev_init_disk1():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:76

/*
 * Function to create and attach disk1:
 */
void dev_init_disk1(void)
{
8000265c:	27bdffe8 	addiu	sp,sp,-24
80002660:	afb00010 	sw	s0,16(sp)
80002664:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:78
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002668:	0c000883 	jal	8000220c <dev_create_inode>
8000266c:	00000000 	nop
80002670:	10400029 	beqz	v0,80002718 <dev_init_disk1+0xbc>
80002674:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:81
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));
80002678:	8c430038 	lw	v1,56(v0)
8000267c:	24021234 	li	v0,4660
80002680:	1462001d 	bne	v1,v0,800026f8 <dev_init_disk1+0x9c>
80002684:	02002021 	move	a0,s0
disk1_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:63
	return -E_INVAL;
}

static void disk1_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
80002688:	00002821 	move	a1,zero
8000268c:	0c005c44 	jal	80017110 <memset>
80002690:	24060030 	li	a2,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:65
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
80002694:	24020001 	li	v0,1
80002698:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:66
	dev->d_open = disk1_open;
8000269c:	3c028000 	lui	v0,0x8000
800026a0:	2442263c 	addiu	v0,v0,9788
800026a4:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:67
	dev->d_close = disk1_close;
800026a8:	3c028000 	lui	v0,0x8000
800026ac:	24422644 	addiu	v0,v0,9796
800026b0:	ae020024 	sw	v0,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:68
	dev->d_io = disk1_io;
800026b4:	3c028000 	lui	v0,0x8000
800026b8:	2442264c 	addiu	v0,v0,9804
800026bc:	ae020028 	sw	v0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:69
	dev->d_ioctl = disk1_ioctl;
800026c0:	3c028000 	lui	v0,0x8000
800026c4:	24422654 	addiu	v0,v0,9812
dev_init_disk1():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:84
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk1", node, 1)) != 0) {
800026c8:	3c048002 	lui	a0,0x8002
disk1_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:64
}

static void disk1_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
800026cc:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:69
	dev->d_blocksize = 1;
	dev->d_open = disk1_open;
	dev->d_close = disk1_close;
	dev->d_io = disk1_io;
	dev->d_ioctl = disk1_ioctl;
800026d0:	ae02002c 	sw	v0,44(s0)
dev_init_disk1():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:84
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk1", node, 1)) != 0) {
800026d4:	24840d84 	addiu	a0,a0,3460
800026d8:	02002821 	move	a1,s0
800026dc:	0c001436 	jal	800050d8 <vfs_add_dev>
800026e0:	24060001 	li	a2,1
800026e4:	14400012 	bnez	v0,80002730 <dev_init_disk1+0xd4>
800026e8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:87
		panic("disk1: vfs_add_dev: %e.\n", ret);
	}
}
800026ec:	8fb00010 	lw	s0,16(sp)
800026f0:	03e00008 	jr	ra
800026f4:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:81
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));
800026f8:	3c048002 	lui	a0,0x8002
800026fc:	3c068002 	lui	a2,0x8002
80002700:	3c078002 	lui	a3,0x8002
80002704:	24840d5c 	addiu	a0,a0,3420
80002708:	24050051 	li	a1,81
8000270c:	24c609b0 	addiu	a2,a2,2480
80002710:	0c006afd 	jal	8001abf4 <__panic>
80002714:	24e70b44 	addiu	a3,a3,2884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:79
 */
void dev_init_disk1(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk1: dev_create_node.\n");
80002718:	3c048002 	lui	a0,0x8002
8000271c:	3c068002 	lui	a2,0x8002
80002720:	24840d5c 	addiu	a0,a0,3420
80002724:	2405004f 	li	a1,79
80002728:	0c006afd 	jal	8001abf4 <__panic>
8000272c:	24c60d68 	addiu	a2,a2,3432
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_disk1.c:85
	}
	disk1_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk1", node, 1)) != 0) {
		panic("disk1: vfs_add_dev: %e.\n", ret);
80002730:	3c048002 	lui	a0,0x8002
80002734:	3c068002 	lui	a2,0x8002
80002738:	24840d5c 	addiu	a0,a0,3420
8000273c:	24050055 	li	a1,85
80002740:	24c60d8c 	addiu	a2,a2,3468
80002744:	0c006afd 	jal	8001abf4 <__panic>
80002748:	00403821 	move	a3,v0

8000274c <null_open>:
null_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:17

/* For open() */
static int null_open(struct device *dev, uint32_t open_flags)
{
	return 0;
}
8000274c:	03e00008 	jr	ra
80002750:	00001021 	move	v0,zero

80002754 <null_close>:
null_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:23

/* For close() */
static int null_close(struct device *dev)
{
	return 0;
}
80002754:	03e00008 	jr	ra
80002758:	00001021 	move	v0,zero

8000275c <null_io>:
null_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:32
{
/*
 * On write, discard everything without looking at it.
 * On read, do nothing, generating an immediate EOF.
 */
	if (write) {
8000275c:	54c00001 	bnezl	a2,80002764 <null_io+0x8>
80002760:	aca0000c 	sw	zero,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:36
		iob->io_resid = 0;
	}
	return 0;
}
80002764:	03e00008 	jr	ra
80002768:	00001021 	move	v0,zero

8000276c <null_ioctl>:
null_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:42

/* For ioctl() */
static int null_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
8000276c:	03e00008 	jr	ra
80002770:	2402ffea 	li	v0,-22

80002774 <dev_init_null>:
dev_init_null():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:59

/*
 * Function to create and attach null:
 */
void dev_init_null(void)
{
80002774:	27bdffe8 	addiu	sp,sp,-24
80002778:	afb00010 	sw	s0,16(sp)
8000277c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:61
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002780:	0c000883 	jal	8000220c <dev_create_inode>
80002784:	00000000 	nop
80002788:	10400029 	beqz	v0,80002830 <dev_init_null+0xbc>
8000278c:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:64
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));
80002790:	8c430038 	lw	v1,56(v0)
80002794:	24021234 	li	v0,4660
80002798:	1462001d 	bne	v1,v0,80002810 <dev_init_null+0x9c>
8000279c:	02002021 	move	a0,s0
null_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:46
	return -E_INVAL;
}

static void null_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
800027a0:	00002821 	move	a1,zero
800027a4:	0c005c44 	jal	80017110 <memset>
800027a8:	24060030 	li	a2,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:48
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
800027ac:	24020001 	li	v0,1
800027b0:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:49
	dev->d_open = null_open;
800027b4:	3c028000 	lui	v0,0x8000
800027b8:	2442274c 	addiu	v0,v0,10060
800027bc:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:50
	dev->d_close = null_close;
800027c0:	3c028000 	lui	v0,0x8000
800027c4:	24422754 	addiu	v0,v0,10068
800027c8:	ae020024 	sw	v0,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:51
	dev->d_io = null_io;
800027cc:	3c028000 	lui	v0,0x8000
800027d0:	2442275c 	addiu	v0,v0,10076
800027d4:	ae020028 	sw	v0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:52
	dev->d_ioctl = null_ioctl;
800027d8:	3c028000 	lui	v0,0x8000
800027dc:	2442276c 	addiu	v0,v0,10092
dev_init_null():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:67
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("null", node, 0)) != 0) {
800027e0:	3c048002 	lui	a0,0x8002
null_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:47
}

static void null_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
800027e4:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:52
	dev->d_blocksize = 1;
	dev->d_open = null_open;
	dev->d_close = null_close;
	dev->d_io = null_io;
	dev->d_ioctl = null_ioctl;
800027e8:	ae02002c 	sw	v0,44(s0)
dev_init_null():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:67
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("null", node, 0)) != 0) {
800027ec:	24840dcc 	addiu	a0,a0,3532
800027f0:	02002821 	move	a1,s0
800027f4:	0c001436 	jal	800050d8 <vfs_add_dev>
800027f8:	00003021 	move	a2,zero
800027fc:	14400012 	bnez	v0,80002848 <dev_init_null+0xd4>
80002800:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:70
		panic("null: vfs_add_dev: %e.\n", ret);
	}
}
80002804:	8fb00010 	lw	s0,16(sp)
80002808:	03e00008 	jr	ra
8000280c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:64
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));
80002810:	3c048002 	lui	a0,0x8002
80002814:	3c068002 	lui	a2,0x8002
80002818:	3c078002 	lui	a3,0x8002
8000281c:	24840da8 	addiu	a0,a0,3496
80002820:	24050040 	li	a1,64
80002824:	24c609b0 	addiu	a2,a2,2480
80002828:	0c006afd 	jal	8001abf4 <__panic>
8000282c:	24e70b44 	addiu	a3,a3,2884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:62
 */
void dev_init_null(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("null: dev_create_node.\n");
80002830:	3c048002 	lui	a0,0x8002
80002834:	3c068002 	lui	a2,0x8002
80002838:	24840da8 	addiu	a0,a0,3496
8000283c:	2405003e 	li	a1,62
80002840:	0c006afd 	jal	8001abf4 <__panic>
80002844:	24c60db4 	addiu	a2,a2,3508
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_null.c:68
	}
	null_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("null", node, 0)) != 0) {
		panic("null: vfs_add_dev: %e.\n", ret);
80002848:	3c048002 	lui	a0,0x8002
8000284c:	3c068002 	lui	a2,0x8002
80002850:	24840da8 	addiu	a0,a0,3496
80002854:	24050044 	li	a1,68
80002858:	24c60dd4 	addiu	a2,a2,3540
8000285c:	0c006afd 	jal	8001abf4 <__panic>
80002860:	00403821 	move	a3,v0

80002864 <stdin_open>:
stdin_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:89
}

static int stdin_open(struct device *dev, uint32_t open_flags)
{
	if (open_flags != O_RDONLY) {
		return -E_INVAL;
80002864:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:92
	}
	return 0;
}
80002868:	03e00008 	jr	ra
8000286c:	0005100a 	movz	v0,zero,a1

80002870 <stdin_close>:
stdin_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:97

static int stdin_close(struct device *dev)
{
	return 0;
}
80002870:	03e00008 	jr	ra
80002874:	00001021 	move	v0,zero

80002878 <stdin_ioctl>:
stdin_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:114
}

static int stdin_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
80002878:	03e00008 	jr	ra
8000287c:	2402ffea 	li	v0,-22

80002880 <stdin_io>:
stdin_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:100
{
	return 0;
}

static int stdin_io(struct device *dev, struct iobuf *iob, bool write)
{
80002880:	27bdffb0 	addiu	sp,sp,-80
80002884:	afb60040 	sw	s6,64(sp)
80002888:	afb5003c 	sw	s5,60(sp)
8000288c:	afbf004c 	sw	ra,76(sp)
80002890:	afbe0048 	sw	s8,72(sp)
80002894:	afb70044 	sw	s7,68(sp)
80002898:	afb40038 	sw	s4,56(sp)
8000289c:	afb30034 	sw	s3,52(sp)
800028a0:	afb20030 	sw	s2,48(sp)
800028a4:	afb1002c 	sw	s1,44(sp)
800028a8:	afb00028 	sw	s0,40(sp)
800028ac:	00a0b021 	move	s6,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:101
	if (!write) {
800028b0:	14c00041 	bnez	a2,800029b8 <stdin_io+0x138>
800028b4:	2415ffea 	li	s5,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:103
		int ret;
		if ((ret = dev_stdin_read(iob->io_base, iob->io_resid)) > 0) {
800028b8:	8cbe0000 	lw	s8,0(a1)
800028bc:	8cb7000c 	lw	s7,12(a1)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800028c0:	40026000 	mfc0	v0,c0_status
800028c4:	30420001 	andi	v0,v0,0x1
800028c8:	10400003 	beqz	v0,800028d8 <stdin_io+0x58>
800028cc:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800028d0:	0c006cbe 	jal	8001b2f8 <intr_disable>
800028d4:	24100001 	li	s0,1
dev_stdin_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (p_rpos <= p_wpos)
					break;
			} else {
				//kprintf("asd123456\n\r");
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
800028d8:	3c118015 	lui	s1,0x8015
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:45
}

static int dev_stdin_read(char *buf, size_t len)
{
	//kprintf("asd123\n\r");
	int ret = 0;
800028dc:	0000a821 	move	s5,zero
800028e0:	3c138015 	lui	s3,0x8015
800028e4:	3c128015 	lui	s2,0x8015
dev_stdin_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (p_rpos <= p_wpos)
					break;
			} else {
				//kprintf("asd123456\n\r");
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
800028e8:	263144e0 	addiu	s1,s1,17632
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:51
	bool intr_flag;
	//kprintf("p_rpos:%d,p_wpos:%d\n\r",p_rpos,p_wpos);
	local_intr_save(intr_flag);
	{
		while (1) {
			if (ret >= len)
800028ec:	16b70013 	bne	s5,s7,8000293c <stdin_io+0xbc>
800028f0:	8e6344dc 	lw	v1,17628(s3)
800028f4:	08000a67 	j	8000299c <stdin_io+0x11c>
800028f8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:71
				//kprintf("asd123456\n\r");
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
				local_intr_restore(intr_flag);

				schedule();
800028fc:	0c00059e 	jal	80001678 <schedule>
80002900:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80002904:	40026000 	mfc0	v0,c0_status
80002908:	30420001 	andi	v0,v0,0x1
8000290c:	10400003 	beqz	v0,8000291c <stdin_io+0x9c>
80002910:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80002914:	0c006cbe 	jal	8001b2f8 <intr_disable>
80002918:	24100001 	li	s0,1
dev_stdin_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:74
				//kprintf("asd123456\n\r");
				local_intr_save(intr_flag);
				wait_current_del(wait_queue, wait);
8000291c:	0c0069a8 	jal	8001a6a0 <wait_in_queue>
80002920:	27a40010 	addiu	a0,sp,16
80002924:	14400015 	bnez	v0,8000297c <stdin_io+0xfc>
80002928:	8fa30014 	lw	v1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:75
				if (wait->wakeup_flags == WT_KBD) {
8000292c:	3c028000 	lui	v0,0x8000
80002930:	24420004 	addiu	v0,v0,4
80002934:	14620019 	bne	v1,v0,8000299c <stdin_io+0x11c>
80002938:	8e6344dc 	lw	v1,17628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:55
		while (1) {
			if (ret >= len)
				break;
try_again:
			//kprintf("p_rpos:%d,p_wpos:%d",p_rpos,p_wpos);
			if (p_rpos >= p_wpos) {
8000293c:	8e4234d8 	lw	v0,13528(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (p_rpos <= p_wpos)
					break;
			} else {
				//kprintf("asd123456\n\r");
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
80002940:	3c068000 	lui	a2,0x8000
80002944:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:55
		while (1) {
			if (ret >= len)
				break;
try_again:
			//kprintf("p_rpos:%d,p_wpos:%d",p_rpos,p_wpos);
			if (p_rpos >= p_wpos) {
80002948:	0062102a 	slt	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (p_rpos <= p_wpos)
					break;
			} else {
				//kprintf("asd123456\n\r");
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
8000294c:	27a50010 	addiu	a1,sp,16
80002950:	24c60004 	addiu	a2,a2,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:55
		while (1) {
			if (ret >= len)
				break;
try_again:
			//kprintf("p_rpos:%d,p_wpos:%d",p_rpos,p_wpos);
			if (p_rpos >= p_wpos) {
80002954:	10400029 	beqz	v0,800029fc <stdin_io+0x17c>
80002958:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (p_rpos <= p_wpos)
					break;
			} else {
				//kprintf("asd123456\n\r");
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
8000295c:	0c0069f2 	jal	8001a7c8 <wait_current_set>
80002960:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002964:	1200ffe5 	beqz	s0,800028fc <stdin_io+0x7c>
80002968:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000296c:	0c006cba 	jal	8001b2e8 <intr_enable>
80002970:	00000000 	nop
80002974:	08000a3f 	j	800028fc <stdin_io+0x7c>
80002978:	00000000 	nop
dev_stdin_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:74
				local_intr_restore(intr_flag);

				schedule();
				//kprintf("asd123456\n\r");
				local_intr_save(intr_flag);
				wait_current_del(wait_queue, wait);
8000297c:	02202021 	move	a0,s1
80002980:	0c006958 	jal	8001a560 <wait_queue_del>
80002984:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:75
				if (wait->wakeup_flags == WT_KBD) {
80002988:	8fa30014 	lw	v1,20(sp)
8000298c:	3c028000 	lui	v0,0x8000
80002990:	24420004 	addiu	v0,v0,4
80002994:	1062ffe9 	beq	v1,v0,8000293c <stdin_io+0xbc>
80002998:	8e6344dc 	lw	v1,17628(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000299c:	16000013 	bnez	s0,800029ec <stdin_io+0x16c>
800029a0:	00000000 	nop
stdin_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:103

static int stdin_io(struct device *dev, struct iobuf *iob, bool write)
{
	if (!write) {
		int ret;
		if ((ret = dev_stdin_read(iob->io_base, iob->io_resid)) > 0) {
800029a4:	12a00005 	beqz	s5,800029bc <stdin_io+0x13c>
800029a8:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:104
			iob->io_resid -= ret;
800029ac:	8ec2000c 	lw	v0,12(s6)
800029b0:	00551023 	subu	v0,v0,s5
800029b4:	aec2000c 	sw	v0,12(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:109
		}
		return ret;
	}
	return -E_INVAL;
}
800029b8:	8fbf004c 	lw	ra,76(sp)
800029bc:	02a01021 	move	v0,s5
800029c0:	8fbe0048 	lw	s8,72(sp)
800029c4:	8fb70044 	lw	s7,68(sp)
800029c8:	8fb60040 	lw	s6,64(sp)
800029cc:	8fb5003c 	lw	s5,60(sp)
800029d0:	8fb40038 	lw	s4,56(sp)
800029d4:	8fb30034 	lw	s3,52(sp)
800029d8:	8fb20030 	lw	s2,48(sp)
800029dc:	8fb1002c 	lw	s1,44(sp)
800029e0:	8fb00028 	lw	s0,40(sp)
800029e4:	03e00008 	jr	ra
800029e8:	27bd0050 	addiu	sp,sp,80
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800029ec:	0c006cba 	jal	8001b2e8 <intr_enable>
800029f0:	00000000 	nop
800029f4:	08000a69 	j	800029a4 <stdin_io+0x124>
800029f8:	00000000 	nop
dev_stdin_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:59
			//kprintf("p_rpos:%d,p_wpos:%d",p_rpos,p_wpos);
			if (p_rpos >= p_wpos) {
				//kprintf("asd1234\n\r");
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				c=getchar();
800029fc:	0c007a0b 	jal	8001e82c <getchar>
80002a00:	26b50001 	addiu	s5,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:61
				*buf++ = c;
				p_rpos++;
80002a04:	8e8444dc 	lw	a0,17628(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:63
				ret++;
				if (p_rpos <= p_wpos)
80002a08:	3c038015 	lui	v1,0x8015
80002a0c:	8c6334d8 	lw	v1,13528(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:61
				//kprintf("asd1234\n\r");
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				c=getchar();
				*buf++ = c;
				p_rpos++;
80002a10:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:59
			//kprintf("p_rpos:%d,p_wpos:%d",p_rpos,p_wpos);
			if (p_rpos >= p_wpos) {
				//kprintf("asd1234\n\r");
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				c=getchar();
80002a14:	a3c20000 	sb	v0,0(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:63
				*buf++ = c;
				p_rpos++;
				ret++;
				if (p_rpos <= p_wpos)
80002a18:	0064182a 	slt	v1,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:60
			if (p_rpos >= p_wpos) {
				//kprintf("asd1234\n\r");
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				c=getchar();
				*buf++ = c;
80002a1c:	27de0001 	addiu	s8,s8,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:63
				p_rpos++;
				ret++;
				if (p_rpos <= p_wpos)
80002a20:	1460ffb2 	bnez	v1,800028ec <stdin_io+0x6c>
80002a24:	ae8444dc 	sw	a0,17628(s4)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002a28:	1200ffde 	beqz	s0,800029a4 <stdin_io+0x124>
80002a2c:	00000000 	nop
80002a30:	08000a7b 	j	800029ec <stdin_io+0x16c>
80002a34:	00000000 	nop

80002a38 <dev_stdin_write>:
dev_stdin_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:24
static char stdin_buffer[STDIN_BUFSIZE];
static off_t p_rpos, p_wpos;
static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;

void dev_stdin_write(char c)
{
80002a38:	27bdffe0 	addiu	sp,sp,-32
80002a3c:	afb10018 	sw	s1,24(sp)
80002a40:	309100ff 	andi	s1,a0,0xff
80002a44:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:27
	bool intr_flag;
	//kprintf("asdwwww\n\r");
	if (c != '\0') {
80002a48:	16200006 	bnez	s1,80002a64 <dev_stdin_write+0x2c>
80002a4c:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:40
				wakeup_queue(wait_queue, WT_KBD, 1);
			}
		}
		local_intr_restore(intr_flag);
	}
}
80002a50:	8fbf001c 	lw	ra,28(sp)
80002a54:	8fb10018 	lw	s1,24(sp)
80002a58:	8fb00014 	lw	s0,20(sp)
80002a5c:	03e00008 	jr	ra
80002a60:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80002a64:	40026000 	mfc0	v0,c0_status
80002a68:	30420001 	andi	v0,v0,0x1
80002a6c:	10400003 	beqz	v0,80002a7c <dev_stdin_write+0x44>
80002a70:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80002a74:	0c006cbe 	jal	8001b2f8 <intr_disable>
80002a78:	24100001 	li	s0,1
dev_stdin_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:30
	bool intr_flag;
	//kprintf("asdwwww\n\r");
	if (c != '\0') {
		local_intr_save(intr_flag);
		{
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
80002a7c:	3c048015 	lui	a0,0x8015
80002a80:	8c8234d8 	lw	v0,13528(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:31
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
80002a84:	3c038015 	lui	v1,0x8015
80002a88:	8c6544dc 	lw	a1,17628(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:30
	bool intr_flag;
	//kprintf("asdwwww\n\r");
	if (c != '\0') {
		local_intr_save(intr_flag);
		{
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
80002a8c:	00021fc3 	sra	v1,v0,0x1f
80002a90:	00031d02 	srl	v1,v1,0x14
80002a94:	00433021 	addu	a2,v0,v1
80002a98:	30c60fff 	andi	a2,a2,0xfff
80002a9c:	00c31823 	subu	v1,a2,v1
80002aa0:	3c068015 	lui	a2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:31
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
80002aa4:	00452823 	subu	a1,v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:30
	bool intr_flag;
	//kprintf("asdwwww\n\r");
	if (c != '\0') {
		local_intr_save(intr_flag);
		{
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
80002aa8:	24c634dc 	addiu	a2,a2,13532
80002aac:	00661821 	addu	v1,v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:31
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
80002ab0:	28a51000 	slti	a1,a1,4096
80002ab4:	10a00003 	beqz	a1,80002ac4 <dev_stdin_write+0x8c>
80002ab8:	a0710000 	sb	s1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:32
				p_wpos++;
80002abc:	24420001 	addiu	v0,v0,1
80002ac0:	ac8234d8 	sw	v0,13528(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:34
			}
			if (!wait_queue_empty(wait_queue)) {
80002ac4:	3c118015 	lui	s1,0x8015
80002ac8:	0c0069a4 	jal	8001a690 <wait_queue_empty>
80002acc:	262444e0 	addiu	a0,s1,17632
80002ad0:	10400007 	beqz	v0,80002af0 <dev_stdin_write+0xb8>
80002ad4:	3c058000 	lui	a1,0x8000
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002ad8:	1200ffde 	beqz	s0,80002a54 <dev_stdin_write+0x1c>
80002adc:	8fbf001c 	lw	ra,28(sp)
dev_stdin_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:40
				wakeup_queue(wait_queue, WT_KBD, 1);
			}
		}
		local_intr_restore(intr_flag);
	}
}
80002ae0:	8fb10018 	lw	s1,24(sp)
80002ae4:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80002ae8:	08006cba 	j	8001b2e8 <intr_enable>
80002aec:	27bd0020 	addiu	sp,sp,32
dev_stdin_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:35
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
				p_wpos++;
			}
			if (!wait_queue_empty(wait_queue)) {
				wakeup_queue(wait_queue, WT_KBD, 1);
80002af0:	262444e0 	addiu	a0,s1,17632
80002af4:	24a50004 	addiu	a1,a1,4
80002af8:	0c0069c6 	jal	8001a718 <wakeup_queue>
80002afc:	24060001 	li	a2,1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002b00:	1200ffd4 	beqz	s0,80002a54 <dev_stdin_write+0x1c>
80002b04:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:40
			}
		}
		local_intr_restore(intr_flag);
	}
}
80002b08:	08000ab9 	j	80002ae4 <dev_stdin_write+0xac>
80002b0c:	8fb10018 	lw	s1,24(sp)

80002b10 <dev_init_stdin>:
dev_init_stdin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:131
	p_rpos = p_wpos = 0;
	wait_queue_init(wait_queue);
}

void dev_init_stdin(void)
{
80002b10:	27bdffe8 	addiu	sp,sp,-24
80002b14:	afb00010 	sw	s0,16(sp)
80002b18:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:133
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002b1c:	0c000883 	jal	8000220c <dev_create_inode>
80002b20:	00000000 	nop
80002b24:	10400030 	beqz	v0,80002be8 <dev_init_stdin+0xd8>
80002b28:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:136
		panic("stdin: dev_create_node.\n");
	}
	stdin_device_init(vop_info(node, device));
80002b2c:	8c430038 	lw	v1,56(v0)
80002b30:	24021234 	li	v0,4660
80002b34:	14620024 	bne	v1,v0,80002bc8 <dev_init_stdin+0xb8>
80002b38:	00002821 	move	a1,zero
stdin_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:118
	return -E_INVAL;
}

static void stdin_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
80002b3c:	24060030 	li	a2,48
80002b40:	0c005c44 	jal	80017110 <memset>
80002b44:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:120
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
80002b48:	24020001 	li	v0,1
80002b4c:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:121
	dev->d_open = stdin_open;
80002b50:	3c028000 	lui	v0,0x8000
80002b54:	24422864 	addiu	v0,v0,10340
80002b58:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:122
	dev->d_close = stdin_close;
80002b5c:	3c028000 	lui	v0,0x8000
80002b60:	24422870 	addiu	v0,v0,10352
80002b64:	ae020024 	sw	v0,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:123
	dev->d_io = stdin_io;
80002b68:	3c028000 	lui	v0,0x8000
80002b6c:	24422880 	addiu	v0,v0,10368
80002b70:	ae020028 	sw	v0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:124
	dev->d_ioctl = stdin_ioctl;
80002b74:	3c028000 	lui	v0,0x8000
80002b78:	24422878 	addiu	v0,v0,10360
80002b7c:	ae02002c 	sw	v0,44(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:127

	p_rpos = p_wpos = 0;
	wait_queue_init(wait_queue);
80002b80:	3c048015 	lui	a0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:126
	dev->d_open = stdin_open;
	dev->d_close = stdin_close;
	dev->d_io = stdin_io;
	dev->d_ioctl = stdin_ioctl;

	p_rpos = p_wpos = 0;
80002b84:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:127
	wait_queue_init(wait_queue);
80002b88:	248444e0 	addiu	a0,a0,17632
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:126
	dev->d_open = stdin_open;
	dev->d_close = stdin_close;
	dev->d_io = stdin_io;
	dev->d_ioctl = stdin_ioctl;

	p_rpos = p_wpos = 0;
80002b8c:	ac4034d8 	sw	zero,13528(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:119
}

static void stdin_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
80002b90:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:126
	dev->d_open = stdin_open;
	dev->d_close = stdin_close;
	dev->d_io = stdin_io;
	dev->d_ioctl = stdin_ioctl;

	p_rpos = p_wpos = 0;
80002b94:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:127
	wait_queue_init(wait_queue);
80002b98:	0c00693d 	jal	8001a4f4 <wait_queue_init>
80002b9c:	ac4044dc 	sw	zero,17628(v0)
dev_init_stdin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:139
		panic("stdin: dev_create_node.\n");
	}
	stdin_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdin", node, 0)) != 0) {
80002ba0:	3c048002 	lui	a0,0x8002
80002ba4:	24840e14 	addiu	a0,a0,3604
80002ba8:	02002821 	move	a1,s0
80002bac:	0c001436 	jal	800050d8 <vfs_add_dev>
80002bb0:	00003021 	move	a2,zero
80002bb4:	14400012 	bnez	v0,80002c00 <dev_init_stdin+0xf0>
80002bb8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:142
		panic("stdin: vfs_add_dev: %e.\n", ret);
	}
}
80002bbc:	8fb00010 	lw	s0,16(sp)
80002bc0:	03e00008 	jr	ra
80002bc4:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:136
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdin: dev_create_node.\n");
	}
	stdin_device_init(vop_info(node, device));
80002bc8:	3c048002 	lui	a0,0x8002
80002bcc:	3c068002 	lui	a2,0x8002
80002bd0:	3c078002 	lui	a3,0x8002
80002bd4:	24840dec 	addiu	a0,a0,3564
80002bd8:	24050088 	li	a1,136
80002bdc:	24c609b0 	addiu	a2,a2,2480
80002be0:	0c006afd 	jal	8001abf4 <__panic>
80002be4:	24e70b44 	addiu	a3,a3,2884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:134

void dev_init_stdin(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdin: dev_create_node.\n");
80002be8:	3c048002 	lui	a0,0x8002
80002bec:	3c068002 	lui	a2,0x8002
80002bf0:	24840dec 	addiu	a0,a0,3564
80002bf4:	24050086 	li	a1,134
80002bf8:	0c006afd 	jal	8001abf4 <__panic>
80002bfc:	24c60df8 	addiu	a2,a2,3576
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdin.c:140
	}
	stdin_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdin", node, 0)) != 0) {
		panic("stdin: vfs_add_dev: %e.\n", ret);
80002c00:	3c048002 	lui	a0,0x8002
80002c04:	3c068002 	lui	a2,0x8002
80002c08:	24840dec 	addiu	a0,a0,3564
80002c0c:	2405008c 	li	a1,140
80002c10:	24c60e1c 	addiu	a2,a2,3612
80002c14:	0c006afd 	jal	8001abf4 <__panic>
80002c18:	00403821 	move	a3,v0

80002c1c <stdout_open>:
stdout_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:15
#include <glue_kio.h>

static int stdout_open(struct device *dev, uint32_t open_flags)
{
	if (open_flags != O_WRONLY) {
		return -E_INVAL;
80002c1c:	38a50001 	xori	a1,a1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:18
	}
	return 0;
}
80002c20:	2402ffea 	li	v0,-22
80002c24:	03e00008 	jr	ra
80002c28:	0005100a 	movz	v0,zero,a1

80002c2c <stdout_close>:
stdout_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:23

static int stdout_close(struct device *dev)
{
	return 0;
}
80002c2c:	03e00008 	jr	ra
80002c30:	00001021 	move	v0,zero

80002c34 <stdout_ioctl>:
stdout_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:40
}

static int stdout_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
80002c34:	03e00008 	jr	ra
80002c38:	2402ffea 	li	v0,-22

80002c3c <stdout_io>:
stdout_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:26
{
	return 0;
}

static int stdout_io(struct device *dev, struct iobuf *iob, bool write)
{
80002c3c:	27bdffe0 	addiu	sp,sp,-32
80002c40:	afb00014 	sw	s0,20(sp)
80002c44:	afbf001c 	sw	ra,28(sp)
80002c48:	afb10018 	sw	s1,24(sp)
80002c4c:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:27
	if (write) {
80002c50:	10c0000c 	beqz	a2,80002c84 <stdout_io+0x48>
80002c54:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:29
		char *data = iob->io_base;
		for (; iob->io_resid != 0; iob->io_resid--) {
80002c58:	8ca3000c 	lw	v1,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:28
}

static int stdout_io(struct device *dev, struct iobuf *iob, bool write)
{
	if (write) {
		char *data = iob->io_base;
80002c5c:	8cb10000 	lw	s1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:29
		for (; iob->io_resid != 0; iob->io_resid--) {
80002c60:	10600008 	beqz	v1,80002c84 <stdout_io+0x48>
80002c64:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:30
			kcons_putc(*data++);
80002c68:	92240000 	lbu	a0,0(s1)
80002c6c:	0c006c15 	jal	8001b054 <cons_putc>
80002c70:	26310001 	addiu	s1,s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:29

static int stdout_io(struct device *dev, struct iobuf *iob, bool write)
{
	if (write) {
		char *data = iob->io_base;
		for (; iob->io_resid != 0; iob->io_resid--) {
80002c74:	8e02000c 	lw	v0,12(s0)
80002c78:	2442ffff 	addiu	v0,v0,-1
80002c7c:	1440fffa 	bnez	v0,80002c68 <stdout_io+0x2c>
80002c80:	ae02000c 	sw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:35
			kcons_putc(*data++);
		}
		return 0;
	}
	return -E_INVAL;
}
80002c84:	8fbf001c 	lw	ra,28(sp)
80002c88:	8fb10018 	lw	s1,24(sp)
80002c8c:	8fb00014 	lw	s0,20(sp)
80002c90:	03e00008 	jr	ra
80002c94:	27bd0020 	addiu	sp,sp,32

80002c98 <dev_init_stdout>:
dev_init_stdout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:54
	dev->d_io = stdout_io;
	dev->d_ioctl = stdout_ioctl;
}

void dev_init_stdout(void)
{
80002c98:	27bdffe8 	addiu	sp,sp,-24
80002c9c:	afb00010 	sw	s0,16(sp)
80002ca0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:56
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002ca4:	0c000883 	jal	8000220c <dev_create_inode>
80002ca8:	00000000 	nop
80002cac:	10400029 	beqz	v0,80002d54 <dev_init_stdout+0xbc>
80002cb0:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:59
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));
80002cb4:	8c430038 	lw	v1,56(v0)
80002cb8:	24021234 	li	v0,4660
80002cbc:	1462001d 	bne	v1,v0,80002d34 <dev_init_stdout+0x9c>
80002cc0:	02002021 	move	a0,s0
stdout_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:44
	return -E_INVAL;
}

static void stdout_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
80002cc4:	00002821 	move	a1,zero
80002cc8:	0c005c44 	jal	80017110 <memset>
80002ccc:	24060030 	li	a2,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:46
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
80002cd0:	24020001 	li	v0,1
80002cd4:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:47
	dev->d_open = stdout_open;
80002cd8:	3c028000 	lui	v0,0x8000
80002cdc:	24422c1c 	addiu	v0,v0,11292
80002ce0:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:48
	dev->d_close = stdout_close;
80002ce4:	3c028000 	lui	v0,0x8000
80002ce8:	24422c2c 	addiu	v0,v0,11308
80002cec:	ae020024 	sw	v0,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:49
	dev->d_io = stdout_io;
80002cf0:	3c028000 	lui	v0,0x8000
80002cf4:	24422c3c 	addiu	v0,v0,11324
80002cf8:	ae020028 	sw	v0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:50
	dev->d_ioctl = stdout_ioctl;
80002cfc:	3c028000 	lui	v0,0x8000
80002d00:	24422c34 	addiu	v0,v0,11316
dev_init_stdout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:62
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdout", node, 0)) != 0) {
80002d04:	3c048002 	lui	a0,0x8002
stdout_device_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:45
}

static void stdout_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
80002d08:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:50
	dev->d_blocksize = 1;
	dev->d_open = stdout_open;
	dev->d_close = stdout_close;
	dev->d_io = stdout_io;
	dev->d_ioctl = stdout_ioctl;
80002d0c:	ae02002c 	sw	v0,44(s0)
dev_init_stdout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:62
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdout", node, 0)) != 0) {
80002d10:	24840e64 	addiu	a0,a0,3684
80002d14:	02002821 	move	a1,s0
80002d18:	0c001436 	jal	800050d8 <vfs_add_dev>
80002d1c:	00003021 	move	a2,zero
80002d20:	14400012 	bnez	v0,80002d6c <dev_init_stdout+0xd4>
80002d24:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:65
		panic("stdout: vfs_add_dev: %e.\n", ret);
	}
}
80002d28:	8fb00010 	lw	s0,16(sp)
80002d2c:	03e00008 	jr	ra
80002d30:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:59
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));
80002d34:	3c048002 	lui	a0,0x8002
80002d38:	3c068002 	lui	a2,0x8002
80002d3c:	3c078002 	lui	a3,0x8002
80002d40:	24840e38 	addiu	a0,a0,3640
80002d44:	2405003b 	li	a1,59
80002d48:	24c609b0 	addiu	a2,a2,2480
80002d4c:	0c006afd 	jal	8001abf4 <__panic>
80002d50:	24e70b44 	addiu	a3,a3,2884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:57

void dev_init_stdout(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdout: dev_create_node.\n");
80002d54:	3c048002 	lui	a0,0x8002
80002d58:	3c068002 	lui	a2,0x8002
80002d5c:	24840e38 	addiu	a0,a0,3640
80002d60:	24050039 	li	a1,57
80002d64:	0c006afd 	jal	8001abf4 <__panic>
80002d68:	24c60e48 	addiu	a2,a2,3656
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/devs/dev_stdout.c:63
	}
	stdout_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdout", node, 0)) != 0) {
		panic("stdout: vfs_add_dev: %e.\n", ret);
80002d6c:	3c048002 	lui	a0,0x8002
80002d70:	3c068002 	lui	a2,0x8002
80002d74:	24840e38 	addiu	a0,a0,3640
80002d78:	2405003f 	li	a1,63
80002d7c:	24c60e6c 	addiu	a2,a2,3692
80002d80:	0c006afd 	jal	8001abf4 <__panic>
80002d84:	00403821 	move	a3,v0

80002d88 <pipe_sync>:
pipe_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:24
}

static int pipe_sync(struct fs *fs)
{
	return 0;
}
80002d88:	03e00008 	jr	ra
80002d8c:	00001021 	move	v0,zero

80002d90 <pipe_unmount>:
pipe_unmount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:36
}

static int pipe_unmount(struct fs *fs)
{
	return -E_INVAL;
}
80002d90:	03e00008 	jr	ra
80002d94:	2402ffea 	li	v0,-22

80002d98 <pipe_cleanup>:
pipe_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:42

static int pipe_cleanup(struct fs *fs)
{
	/* do nothing */
	return 0;
}
80002d98:	03e00008 	jr	ra
80002d9c:	00001021 	move	v0,zero

80002da0 <pipe_get_root>:
pipe_get_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:27
{
	return 0;
}

static struct inode *pipe_get_root(struct fs *fs)
{
80002da0:	27bdffe8 	addiu	sp,sp,-24
80002da4:	afb00010 	sw	s0,16(sp)
80002da8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:28
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002dac:	1080000c 	beqz	a0,80002de0 <pipe_get_root+0x40>
80002db0:	00808021 	move	s0,a0
80002db4:	8c830084 	lw	v1,132(a0)
80002db8:	24025678 	li	v0,22136
80002dbc:	54620009 	bnel	v1,v0,80002de4 <pipe_get_root+0x44>
80002dc0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:29
	vop_ref_inc(pipe->root);
80002dc4:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80002dc8:	8c840000 	lw	a0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:31
	return pipe->root;
}
80002dcc:	8fbf0014 	lw	ra,20(sp)
80002dd0:	8e020000 	lw	v0,0(s0)
80002dd4:	8fb00010 	lw	s0,16(sp)
80002dd8:	03e00008 	jr	ra
80002ddc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:28
	return 0;
}

static struct inode *pipe_get_root(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002de0:	3c048002 	lui	a0,0x8002
80002de4:	3c068002 	lui	a2,0x8002
80002de8:	3c078002 	lui	a3,0x8002
80002dec:	24840e88 	addiu	a0,a0,3720
80002df0:	2405001c 	li	a1,28
80002df4:	24c609b0 	addiu	a2,a2,2480
80002df8:	0c006afd 	jal	8001abf4 <__panic>
80002dfc:	24e70e90 	addiu	a3,a3,3728

80002e00 <lock_pipe>:
lock_pipe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:13
#include <error.h>
#include <assert.h>

void lock_pipe(struct pipe_fs *pipe)
{
	down(&(pipe->pipe_sem));
80002e00:	08006711 	j	80019c44 <down>
80002e04:	24840004 	addiu	a0,a0,4

80002e08 <unlock_pipe>:
unlock_pipe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:18
}

void unlock_pipe(struct pipe_fs *pipe)
{
	up(&(pipe->pipe_sem));
80002e08:	0800670f 	j	80019c3c <up>
80002e0c:	24840004 	addiu	a0,a0,4

80002e10 <pipe_init>:
pipe_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:60
	fs->fs_unmount = pipe_unmount;
	fs->fs_cleanup = pipe_cleanup;
}

void pipe_init(void)
{
80002e10:	27bdffe8 	addiu	sp,sp,-24
80002e14:	afb00010 	sw	s0,16(sp)
80002e18:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:62
	struct fs *fs;
	if ((fs = alloc_fs(pipe)) == NULL) {
80002e1c:	0c0011b1 	jal	800046c4 <__alloc_fs>
80002e20:	24045678 	li	a0,22136
80002e24:	1040002b 	beqz	v0,80002ed4 <pipe_init+0xc4>
80002e28:	00408021 	move	s0,v0
pipe_fs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:46
	return 0;
}

static void pipe_fs_init(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002e2c:	8c430084 	lw	v1,132(v0)
80002e30:	24025678 	li	v0,22136
80002e34:	14620020 	bne	v1,v0,80002eb8 <pipe_init+0xa8>
80002e38:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:47
	if ((pipe->root = pipe_create_root(fs)) == NULL) {
80002e3c:	0c000edf 	jal	80003b7c <pipe_create_root>
80002e40:	02002021 	move	a0,s0
80002e44:	10400030 	beqz	v0,80002f08 <pipe_init+0xf8>
80002e48:	ae020000 	sw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:50
		panic("pipe: create root inode failed.\n");
	}
	sem_init(&(pipe->pipe_sem), 1);
80002e4c:	26040004 	addiu	a0,s0,4
80002e50:	0c006709 	jal	80019c24 <sem_init>
80002e54:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:51
	list_init(&(pipe->pipe_list));
80002e58:	26020018 	addiu	v0,s0,24
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80002e5c:	ae02001c 	sw	v0,28(s0)
80002e60:	ae020018 	sw	v0,24(s0)
pipe_fs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:53

	fs->fs_sync = pipe_sync;
80002e64:	3c028000 	lui	v0,0x8000
80002e68:	24422d88 	addiu	v0,v0,11656
80002e6c:	ae020088 	sw	v0,136(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:54
	fs->fs_get_root = pipe_get_root;
80002e70:	3c028000 	lui	v0,0x8000
80002e74:	24422da0 	addiu	v0,v0,11680
80002e78:	ae02008c 	sw	v0,140(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:55
	fs->fs_unmount = pipe_unmount;
80002e7c:	3c028000 	lui	v0,0x8000
80002e80:	24422d90 	addiu	v0,v0,11664
80002e84:	ae020090 	sw	v0,144(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:56
	fs->fs_cleanup = pipe_cleanup;
80002e88:	3c028000 	lui	v0,0x8000
80002e8c:	24422d98 	addiu	v0,v0,11672
pipe_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:68
		panic("pipe: create pipe_fs failed.\n");
	}
	pipe_fs_init(fs);

	int ret;
	if ((ret = vfs_add_fs("pipe", fs)) != 0) {
80002e90:	3c048002 	lui	a0,0x8002
pipe_fs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:56
	list_init(&(pipe->pipe_list));

	fs->fs_sync = pipe_sync;
	fs->fs_get_root = pipe_get_root;
	fs->fs_unmount = pipe_unmount;
	fs->fs_cleanup = pipe_cleanup;
80002e94:	ae020094 	sw	v0,148(s0)
pipe_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:68
		panic("pipe: create pipe_fs failed.\n");
	}
	pipe_fs_init(fs);

	int ret;
	if ((ret = vfs_add_fs("pipe", fs)) != 0) {
80002e98:	24840f00 	addiu	a0,a0,3840
80002e9c:	0c001432 	jal	800050c8 <vfs_add_fs>
80002ea0:	02002821 	move	a1,s0
80002ea4:	14400011 	bnez	v0,80002eec <pipe_init+0xdc>
80002ea8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:71
		panic("pipe: vfs_add_fs: %e.\n", ret);
	}
}
80002eac:	8fb00010 	lw	s0,16(sp)
80002eb0:	03e00008 	jr	ra
80002eb4:	27bd0018 	addiu	sp,sp,24
pipe_fs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:46
	return 0;
}

static void pipe_fs_init(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002eb8:	3c068002 	lui	a2,0x8002
80002ebc:	3c078002 	lui	a3,0x8002
80002ec0:	24840e88 	addiu	a0,a0,3720
80002ec4:	2405002e 	li	a1,46
80002ec8:	24c609b0 	addiu	a2,a2,2480
80002ecc:	0c006afd 	jal	8001abf4 <__panic>
80002ed0:	24e70e90 	addiu	a3,a3,3728
pipe_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:63

void pipe_init(void)
{
	struct fs *fs;
	if ((fs = alloc_fs(pipe)) == NULL) {
		panic("pipe: create pipe_fs failed.\n");
80002ed4:	3c048002 	lui	a0,0x8002
80002ed8:	3c068002 	lui	a2,0x8002
80002edc:	24840e88 	addiu	a0,a0,3720
80002ee0:	2405003f 	li	a1,63
80002ee4:	0c006afd 	jal	8001abf4 <__panic>
80002ee8:	24c60ebc 	addiu	a2,a2,3772
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:69
	}
	pipe_fs_init(fs);

	int ret;
	if ((ret = vfs_add_fs("pipe", fs)) != 0) {
		panic("pipe: vfs_add_fs: %e.\n", ret);
80002eec:	3c048002 	lui	a0,0x8002
80002ef0:	3c068002 	lui	a2,0x8002
80002ef4:	24840e88 	addiu	a0,a0,3720
80002ef8:	24050045 	li	a1,69
80002efc:	24c60f08 	addiu	a2,a2,3848
80002f00:	0c006afd 	jal	8001abf4 <__panic>
80002f04:	00403821 	move	a3,v0
pipe_fs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe.c:48

static void pipe_fs_init(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
	if ((pipe->root = pipe_create_root(fs)) == NULL) {
		panic("pipe: create root inode failed.\n");
80002f08:	3c048002 	lui	a0,0x8002
80002f0c:	3c068002 	lui	a2,0x8002
80002f10:	24840e88 	addiu	a0,a0,3720
80002f14:	24050030 	li	a1,48
80002f18:	0c006afd 	jal	8001abf4 <__panic>
80002f1c:	24c60edc 	addiu	a2,a2,3804

80002f20 <pipe_inode_gettype>:
pipe_inode_gettype():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:117
	return 0;
}

static int pipe_inode_gettype(struct inode *node, uint32_t * type_store)
{
	*type_store = S_IFCHR;
80002f20:	24022000 	li	v0,8192
80002f24:	aca20000 	sw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:119
	return 0;
}
80002f28:	03e00008 	jr	ra
80002f2c:	00001021 	move	v0,zero

80002f30 <pipe_inode_reclaim>:
pipe_inode_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:96
	iobuf_skip(iob, len);
	return 0;
}

static int pipe_inode_reclaim(struct inode *node)
{
80002f30:	27bdffe0 	addiu	sp,sp,-32
80002f34:	afb00014 	sw	s0,20(sp)
80002f38:	afbf001c 	sw	ra,28(sp)
80002f3c:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:97
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80002f40:	10800031 	beqz	a0,80003008 <pipe_inode_reclaim+0xd8>
80002f44:	00808021 	move	s0,a0
80002f48:	8c830038 	lw	v1,56(a0)
80002f4c:	24021236 	li	v0,4662
80002f50:	5462002e 	bnel	v1,v0,8000300c <pipe_inode_reclaim+0xdc>
80002f54:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:98
	if (pin->name != NULL) {
80002f58:	8c820004 	lw	v0,4(a0)
80002f5c:	10400018 	beqz	v0,80002fc0 <pipe_inode_reclaim+0x90>
80002f60:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:99
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
80002f64:	8c910044 	lw	s1,68(a0)
80002f68:	1220002f 	beqz	s1,80003028 <pipe_inode_reclaim+0xf8>
80002f6c:	24025678 	li	v0,22136
80002f70:	8e230084 	lw	v1,132(s1)
80002f74:	1462002d 	bne	v1,v0,8000302c <pipe_inode_reclaim+0xfc>
80002f78:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:100
		lock_pipe(pipe);
80002f7c:	0c000b80 	jal	80002e00 <lock_pipe>
80002f80:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:101
		assert(pin->reclaim_count > 0);
80002f84:	8e020008 	lw	v0,8(s0)
80002f88:	1840002f 	blez	v0,80003048 <pipe_inode_reclaim+0x118>
80002f8c:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:102
		if ((--pin->reclaim_count) != 0 || inode_ref_count(node) != 0) {
80002f90:	14400015 	bnez	v0,80002fe8 <pipe_inode_reclaim+0xb8>
80002f94:	ae020008 	sw	v0,8(s0)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80002f98:	8e02003c 	lw	v0,60(s0)
pipe_inode_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:102
80002f9c:	14400012 	bnez	v0,80002fe8 <pipe_inode_reclaim+0xb8>
80002fa0:	02202021 	move	a0,s1
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80002fa4:	8e030010 	lw	v1,16(s0)
80002fa8:	8e020014 	lw	v0,20(s0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80002fac:	ac620004 	sw	v0,4(v1)
pipe_inode_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:107
			unlock_pipe(pipe);
			return -E_BUSY;
		}
		list_del(&(pin->pipe_link));
		unlock_pipe(pipe);
80002fb0:	0c000b82 	jal	80002e08 <unlock_pipe>
80002fb4:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:108
		kfree(pin->name);
80002fb8:	0c0054a3 	jal	8001528c <kfree>
80002fbc:	8e040004 	lw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:110
	}
	pipe_state_release(pin->state);
80002fc0:	0c000f74 	jal	80003dd0 <pipe_state_release>
80002fc4:	8e04000c 	lw	a0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:111
	vop_kill(node);
80002fc8:	0c00108f 	jal	8000423c <inode_kill>
80002fcc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:113
	return 0;
}
80002fd0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:112
		unlock_pipe(pipe);
		kfree(pin->name);
	}
	pipe_state_release(pin->state);
	vop_kill(node);
	return 0;
80002fd4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:113
}
80002fd8:	8fb10018 	lw	s1,24(sp)
80002fdc:	8fb00014 	lw	s0,20(sp)
80002fe0:	03e00008 	jr	ra
80002fe4:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:103
	if (pin->name != NULL) {
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
		lock_pipe(pipe);
		assert(pin->reclaim_count > 0);
		if ((--pin->reclaim_count) != 0 || inode_ref_count(node) != 0) {
			unlock_pipe(pipe);
80002fe8:	0c000b82 	jal	80002e08 <unlock_pipe>
80002fec:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:113
		kfree(pin->name);
	}
	pipe_state_release(pin->state);
	vop_kill(node);
	return 0;
}
80002ff0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:104
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
		lock_pipe(pipe);
		assert(pin->reclaim_count > 0);
		if ((--pin->reclaim_count) != 0 || inode_ref_count(node) != 0) {
			unlock_pipe(pipe);
			return -E_BUSY;
80002ff4:	2402fff0 	li	v0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:113
		kfree(pin->name);
	}
	pipe_state_release(pin->state);
	vop_kill(node);
	return 0;
}
80002ff8:	8fb10018 	lw	s1,24(sp)
80002ffc:	8fb00014 	lw	s0,20(sp)
80003000:	03e00008 	jr	ra
80003004:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:97
	return 0;
}

static int pipe_inode_reclaim(struct inode *node)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003008:	3c048002 	lui	a0,0x8002
8000300c:	3c068002 	lui	a2,0x8002
80003010:	3c078002 	lui	a3,0x8002
80003014:	24840f20 	addiu	a0,a0,3872
80003018:	24050061 	li	a1,97
8000301c:	24c609b0 	addiu	a2,a2,2480
80003020:	0c006afd 	jal	8001abf4 <__panic>
80003024:	24e70f30 	addiu	a3,a3,3888
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:99
	if (pin->name != NULL) {
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
80003028:	3c048002 	lui	a0,0x8002
8000302c:	3c068002 	lui	a2,0x8002
80003030:	3c078002 	lui	a3,0x8002
80003034:	24840f20 	addiu	a0,a0,3872
80003038:	24050063 	li	a1,99
8000303c:	24c609b0 	addiu	a2,a2,2480
80003040:	0c006afd 	jal	8001abf4 <__panic>
80003044:	24e70e90 	addiu	a3,a3,3728
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:101
		lock_pipe(pipe);
		assert(pin->reclaim_count > 0);
80003048:	3c048002 	lui	a0,0x8002
8000304c:	3c068002 	lui	a2,0x8002
80003050:	3c078002 	lui	a3,0x8002
80003054:	24840f20 	addiu	a0,a0,3872
80003058:	24050065 	li	a1,101
8000305c:	24c609b0 	addiu	a2,a2,2480
80003060:	0c006afd 	jal	8001abf4 <__panic>
80003064:	24e70f68 	addiu	a3,a3,3944

80003068 <pipe_inode_open>:
pipe_inode_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:15
#include <unistd.h>
#include <error.h>
#include <assert.h>

static int pipe_inode_open(struct inode *node, uint32_t open_flags)
{
80003068:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:16
	if (open_flags & (O_TRUNC | O_APPEND)) {
8000306c:	30a20600 	andi	v0,a1,0x600
80003070:	14400010 	bnez	v0,800030b4 <pipe_inode_open+0x4c>
80003074:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:19
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003078:	10800019 	beqz	a0,800030e0 <pipe_inode_open+0x78>
8000307c:	24021236 	li	v0,4662
80003080:	8c830038 	lw	v1,56(a0)
80003084:	14620016 	bne	v1,v0,800030e0 <pipe_inode_open+0x78>
80003088:	30a50003 	andi	a1,a1,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:20
	switch (open_flags & O_ACCMODE) {
8000308c:	14a00007 	bnez	a1,800030ac <pipe_inode_open+0x44>
80003090:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:22
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
80003094:	8c830000 	lw	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:28
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
	}
}
80003098:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:22
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
8000309c:	2402ffea 	li	v0,-22
800030a0:	0003100a 	movz	v0,zero,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:28
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
	}
}
800030a4:	03e00008 	jr	ra
800030a8:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:20
{
	if (open_flags & (O_TRUNC | O_APPEND)) {
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	switch (open_flags & O_ACCMODE) {
800030ac:	50a20005 	beql	a1,v0,800030c4 <pipe_inode_open+0x5c>
800030b0:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:28
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
	}
}
800030b4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:26
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
800030b8:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:28
	}
}
800030bc:	03e00008 	jr	ra
800030c0:	27bd0018 	addiu	sp,sp,24
800030c4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:24
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
800030c8:	2403ffea 	li	v1,-22
800030cc:	38420001 	xori	v0,v0,0x1
800030d0:	0002180a 	movz	v1,zero,v0
800030d4:	00601021 	move	v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:28
	default:
		return -E_INVAL;
	}
}
800030d8:	03e00008 	jr	ra
800030dc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:19
static int pipe_inode_open(struct inode *node, uint32_t open_flags)
{
	if (open_flags & (O_TRUNC | O_APPEND)) {
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800030e0:	3c048002 	lui	a0,0x8002
800030e4:	3c068002 	lui	a2,0x8002
800030e8:	3c078002 	lui	a3,0x8002
800030ec:	24840f20 	addiu	a0,a0,3872
800030f0:	24050013 	li	a1,19
800030f4:	24c609b0 	addiu	a2,a2,2480
800030f8:	0c006afd 	jal	8001abf4 <__panic>
800030fc:	24e70f30 	addiu	a3,a3,3888

80003100 <pipe_inode_namefile>:
pipe_inode_namefile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:81
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
	return 0;
}

static int pipe_inode_namefile(struct inode *node, struct iobuf *iob)
{
80003100:	27bdffd8 	addiu	sp,sp,-40
80003104:	afb30020 	sw	s3,32(sp)
80003108:	afb00014 	sw	s0,20(sp)
8000310c:	afbf0024 	sw	ra,36(sp)
80003110:	afb2001c 	sw	s2,28(sp)
80003114:	afb10018 	sw	s1,24(sp)
80003118:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:82
	struct pipe_inode *pin = vop_info(node, pipe_inode);
8000311c:	10800026 	beqz	a0,800031b8 <pipe_inode_namefile+0xb8>
80003120:	00a08021 	move	s0,a1
80003124:	8c830038 	lw	v1,56(a0)
80003128:	24021236 	li	v0,4662
8000312c:	54620023 	bnel	v1,v0,800031bc <pipe_inode_namefile+0xbc>
80003130:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:83
	size_t len = (pin->name != NULL) ? strlen(pin->name) : 0;
80003134:	8c840004 	lw	a0,4(a0)
80003138:	1080001d 	beqz	a0,800031b0 <pipe_inode_namefile+0xb0>
8000313c:	24120001 	li	s2,1
80003140:	0c005b6b 	jal	80016dac <strlen>
80003144:	00000000 	nop
80003148:	00408821 	move	s1,v0
8000314c:	24520001 	addiu	s2,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:84
	if (iob->io_resid < len + 1) {
80003150:	8e03000c 	lw	v1,12(s0)
80003154:	0072182b 	sltu	v1,v1,s2
80003158:	1460000e 	bnez	v1,80003194 <pipe_inode_namefile+0x94>
8000315c:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:87
		return -E_NO_MEM;
	}
	if (pin->name != NULL) {
80003160:	8e650004 	lw	a1,4(s3)
80003164:	50a00005 	beqzl	a1,8000317c <pipe_inode_namefile+0x7c>
80003168:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:88
		memcpy(iob->io_base, pin->name, len);
8000316c:	8e040000 	lw	a0,0(s0)
80003170:	0c005c6e 	jal	800171b8 <memcpy>
80003174:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:90
	}
	((char *)(iob->io_base))[len++] = '\0';
80003178:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:91
	iobuf_skip(iob, len);
8000317c:	02002021 	move	a0,s0
80003180:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:90
		return -E_NO_MEM;
	}
	if (pin->name != NULL) {
		memcpy(iob->io_base, pin->name, len);
	}
	((char *)(iob->io_base))[len++] = '\0';
80003184:	00518821 	addu	s1,v0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:91
	iobuf_skip(iob, len);
80003188:	0c003340 	jal	8000cd00 <iobuf_skip>
8000318c:	a2200000 	sb	zero,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:92
	return 0;
80003190:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:93
}
80003194:	8fbf0024 	lw	ra,36(sp)
80003198:	8fb30020 	lw	s3,32(sp)
8000319c:	8fb2001c 	lw	s2,28(sp)
800031a0:	8fb10018 	lw	s1,24(sp)
800031a4:	8fb00014 	lw	s0,20(sp)
800031a8:	03e00008 	jr	ra
800031ac:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:83
}

static int pipe_inode_namefile(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	size_t len = (pin->name != NULL) ? strlen(pin->name) : 0;
800031b0:	08000c54 	j	80003150 <pipe_inode_namefile+0x50>
800031b4:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:82
	return 0;
}

static int pipe_inode_namefile(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800031b8:	3c048002 	lui	a0,0x8002
800031bc:	3c068002 	lui	a2,0x8002
800031c0:	3c078002 	lui	a3,0x8002
800031c4:	24840f20 	addiu	a0,a0,3872
800031c8:	24050052 	li	a1,82
800031cc:	24c609b0 	addiu	a2,a2,2480
800031d0:	0c006afd 	jal	8001abf4 <__panic>
800031d4:	24e70f30 	addiu	a3,a3,3888

800031d8 <pipe_inode_fstat>:
pipe_inode_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:66
	}
	return 0;
}

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
800031d8:	27bdffe0 	addiu	sp,sp,-32
800031dc:	afb10014 	sw	s1,20(sp)
800031e0:	00a08821 	move	s1,a1
800031e4:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
800031e8:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:66
	}
	return 0;
}

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
800031ec:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
800031f0:	24060010 	li	a2,16
800031f4:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:66
	}
	return 0;
}

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
800031f8:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
800031fc:	0c005c44 	jal	80017110 <memset>
80003200:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:69
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
80003204:	12000024 	beqz	s0,80003298 <pipe_inode_fstat+0xc0>
80003208:	3c048002 	lui	a0,0x8002
8000320c:	8e020048 	lw	v0,72(s0)
80003210:	10400022 	beqz	v0,8000329c <pipe_inode_fstat+0xc4>
80003214:	3c068002 	lui	a2,0x8002
80003218:	8c420040 	lw	v0,64(v0)
8000321c:	1040001e 	beqz	v0,80003298 <pipe_inode_fstat+0xc0>
80003220:	3c058002 	lui	a1,0x8002
80003224:	02002021 	move	a0,s0
80003228:	0c0010e5 	jal	80004394 <inode_check>
8000322c:	24a50bc8 	addiu	a1,a1,3016
80003230:	8e020048 	lw	v0,72(s0)
80003234:	02002021 	move	a0,s0
80003238:	8c420040 	lw	v0,64(v0)
8000323c:	0040f809 	jalr	v0
80003240:	02202821 	move	a1,s1
80003244:	1440000d 	bnez	v0,8000327c <pipe_inode_fstat+0xa4>
80003248:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:72
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
8000324c:	8e030038 	lw	v1,56(s0)
80003250:	24021236 	li	v0,4662
80003254:	14620017 	bne	v1,v0,800032b4 <pipe_inode_fstat+0xdc>
80003258:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:76
	stat->st_nlinks = 1;
	stat->st_blocks = 0;
	stat->st_size =
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
8000325c:	8e050000 	lw	a1,0(s0)
80003260:	8e04000c 	lw	a0,12(s0)
80003264:	38a50001 	xori	a1,a1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:73
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	stat->st_nlinks = 1;
80003268:	ae220004 	sw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:74
	stat->st_blocks = 0;
8000326c:	ae200008 	sw	zero,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:76
	stat->st_size =
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
80003270:	0c000fbd 	jal	80003ef4 <pipe_state_size>
80003274:	2ca50001 	sltiu	a1,a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:75
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	stat->st_nlinks = 1;
	stat->st_blocks = 0;
	stat->st_size =
80003278:	ae22000c 	sw	v0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:78
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
	return 0;
}
8000327c:	8fbf001c 	lw	ra,28(sp)
80003280:	02401021 	move	v0,s2
80003284:	8fb10014 	lw	s1,20(sp)
80003288:	8fb20018 	lw	s2,24(sp)
8000328c:	8fb00010 	lw	s0,16(sp)
80003290:	03e00008 	jr	ra
80003294:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:69

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
	int ret;
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
80003298:	3c068002 	lui	a2,0x8002
8000329c:	3c078002 	lui	a3,0x8002
800032a0:	24840f20 	addiu	a0,a0,3872
800032a4:	24050045 	li	a1,69
800032a8:	24c609b0 	addiu	a2,a2,2480
800032ac:	0c006afd 	jal	8001abf4 <__panic>
800032b0:	24e70b78 	addiu	a3,a3,2936
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:72
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800032b4:	3c048002 	lui	a0,0x8002
800032b8:	3c068002 	lui	a2,0x8002
800032bc:	3c078002 	lui	a3,0x8002
800032c0:	24840f20 	addiu	a0,a0,3872
800032c4:	24050048 	li	a1,72
800032c8:	24c609b0 	addiu	a2,a2,2480
800032cc:	0c006afd 	jal	8001abf4 <__panic>
800032d0:	24e70f30 	addiu	a3,a3,3888

800032d4 <pipe_inode_write>:
pipe_inode_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:52
	}
	return 0;
}

static int pipe_inode_write(struct inode *node, struct iobuf *iob)
{
800032d4:	27bdffe0 	addiu	sp,sp,-32
800032d8:	afb00014 	sw	s0,20(sp)
800032dc:	afbf001c 	sw	ra,28(sp)
800032e0:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:53
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800032e4:	1080001d 	beqz	a0,8000335c <pipe_inode_write+0x88>
800032e8:	00a08021 	move	s0,a1
800032ec:	8c830038 	lw	v1,56(a0)
800032f0:	24021236 	li	v0,4662
800032f4:	14620019 	bne	v1,v0,8000335c <pipe_inode_write+0x88>
800032f8:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:54
	if (pin->pin_type != PIN_WRONLY) {
800032fc:	8c830000 	lw	v1,0(a0)
80003300:	14620008 	bne	v1,v0,80003324 <pipe_inode_write+0x50>
80003304:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:58
		return -E_INVAL;
	}
	size_t ret;
	if ((ret =
80003308:	8c84000c 	lw	a0,12(a0)
8000330c:	8ca50000 	lw	a1,0(a1)
80003310:	8e06000c 	lw	a2,12(s0)
80003314:	0c001021 	jal	80004084 <pipe_state_write>
80003318:	00008821 	move	s1,zero
8000331c:	14400007 	bnez	v0,8000333c <pipe_inode_write+0x68>
80003320:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:63
	     pipe_state_write(pin->state, iob->io_base, iob->io_resid)) != 0) {
		iobuf_skip(iob, ret);
	}
	return 0;
}
80003324:	8fbf001c 	lw	ra,28(sp)
80003328:	02201021 	move	v0,s1
8000332c:	8fb00014 	lw	s0,20(sp)
80003330:	8fb10018 	lw	s1,24(sp)
80003334:	03e00008 	jr	ra
80003338:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:60
		return -E_INVAL;
	}
	size_t ret;
	if ((ret =
	     pipe_state_write(pin->state, iob->io_base, iob->io_resid)) != 0) {
		iobuf_skip(iob, ret);
8000333c:	0c003340 	jal	8000cd00 <iobuf_skip>
80003340:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:63
	}
	return 0;
}
80003344:	8fbf001c 	lw	ra,28(sp)
80003348:	02201021 	move	v0,s1
8000334c:	8fb00014 	lw	s0,20(sp)
80003350:	8fb10018 	lw	s1,24(sp)
80003354:	03e00008 	jr	ra
80003358:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:53
	return 0;
}

static int pipe_inode_write(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
8000335c:	3c048002 	lui	a0,0x8002
80003360:	3c068002 	lui	a2,0x8002
80003364:	3c078002 	lui	a3,0x8002
80003368:	24840f20 	addiu	a0,a0,3872
8000336c:	24050035 	li	a1,53
80003370:	24c609b0 	addiu	a2,a2,2480
80003374:	0c006afd 	jal	8001abf4 <__panic>
80003378:	24e70f30 	addiu	a3,a3,3888

8000337c <pipe_inode_read>:
pipe_inode_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:38
	pipe_state_close(pin->state);
	return 0;
}

static int pipe_inode_read(struct inode *node, struct iobuf *iob)
{
8000337c:	27bdffe0 	addiu	sp,sp,-32
80003380:	afb00014 	sw	s0,20(sp)
80003384:	afbf001c 	sw	ra,28(sp)
80003388:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:39
	struct pipe_inode *pin = vop_info(node, pipe_inode);
8000338c:	10800018 	beqz	a0,800033f0 <pipe_inode_read+0x74>
80003390:	00a08021 	move	s0,a1
80003394:	8c830038 	lw	v1,56(a0)
80003398:	24021236 	li	v0,4662
8000339c:	54620015 	bnel	v1,v0,800033f4 <pipe_inode_read+0x78>
800033a0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:40
	if (pin->pin_type != PIN_RDONLY) {
800033a4:	8c820000 	lw	v0,0(a0)
800033a8:	1440000b 	bnez	v0,800033d8 <pipe_inode_read+0x5c>
800033ac:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:44
		return -E_INVAL;
	}
	size_t ret;
	if ((ret =
800033b0:	8c84000c 	lw	a0,12(a0)
800033b4:	8ca50000 	lw	a1,0(a1)
800033b8:	8e06000c 	lw	a2,12(s0)
800033bc:	0c000fc9 	jal	80003f24 <pipe_state_read>
800033c0:	00008821 	move	s1,zero
800033c4:	10400005 	beqz	v0,800033dc <pipe_inode_read+0x60>
800033c8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:46
	     pipe_state_read(pin->state, iob->io_base, iob->io_resid)) != 0) {
		iobuf_skip(iob, ret);
800033cc:	02002021 	move	a0,s0
800033d0:	0c003340 	jal	8000cd00 <iobuf_skip>
800033d4:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:49
	}
	return 0;
}
800033d8:	8fbf001c 	lw	ra,28(sp)
800033dc:	02201021 	move	v0,s1
800033e0:	8fb00014 	lw	s0,20(sp)
800033e4:	8fb10018 	lw	s1,24(sp)
800033e8:	03e00008 	jr	ra
800033ec:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:39
	return 0;
}

static int pipe_inode_read(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800033f0:	3c048002 	lui	a0,0x8002
800033f4:	3c068002 	lui	a2,0x8002
800033f8:	3c078002 	lui	a3,0x8002
800033fc:	24840f20 	addiu	a0,a0,3872
80003400:	24050027 	li	a1,39
80003404:	24c609b0 	addiu	a2,a2,2480
80003408:	0c006afd 	jal	8001abf4 <__panic>
8000340c:	24e70f30 	addiu	a3,a3,3888

80003410 <pipe_inode_close>:
pipe_inode_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:31
		return -E_INVAL;
	}
}

static int pipe_inode_close(struct inode *node)
{
80003410:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:32
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003414:	1080000b 	beqz	a0,80003444 <pipe_inode_close+0x34>
80003418:	afbf0014 	sw	ra,20(sp)
8000341c:	8c830038 	lw	v1,56(a0)
80003420:	24021236 	li	v0,4662
80003424:	54620008 	bnel	v1,v0,80003448 <pipe_inode_close+0x38>
80003428:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:33
	pipe_state_close(pin->state);
8000342c:	0c000fa5 	jal	80003e94 <pipe_state_close>
80003430:	8c84000c 	lw	a0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:35
	return 0;
}
80003434:	8fbf0014 	lw	ra,20(sp)
80003438:	00001021 	move	v0,zero
8000343c:	03e00008 	jr	ra
80003440:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:32
	}
}

static int pipe_inode_close(struct inode *node)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003444:	3c048002 	lui	a0,0x8002
80003448:	3c068002 	lui	a2,0x8002
8000344c:	3c078002 	lui	a3,0x8002
80003450:	24840f20 	addiu	a0,a0,3872
80003454:	24050020 	li	a1,32
80003458:	24c609b0 	addiu	a2,a2,2480
8000345c:	0c006afd 	jal	8001abf4 <__panic>
80003460:	24e70f30 	addiu	a3,a3,3888

80003464 <pipe_create_inode>:
pipe_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:159
	list_init(&(pin->pipe_link));
}

struct inode *pipe_create_inode(struct fs *fs, const char *__name,
				struct pipe_state *state, bool readonly)
{
80003464:	27bdffd0 	addiu	sp,sp,-48
80003468:	afb30028 	sw	s3,40(sp)
8000346c:	afb10020 	sw	s1,32(sp)
80003470:	afb0001c 	sw	s0,28(sp)
80003474:	afbf002c 	sw	ra,44(sp)
80003478:	afb20024 	sw	s2,36(sp)
8000347c:	00808821 	move	s1,a0
80003480:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:161
	char *name = NULL;
	if (__name == NULL || (name = strdup(__name)) != NULL) {
80003484:	10a00030 	beqz	a1,80003548 <pipe_create_inode+0xe4>
80003488:	00e09821 	move	s3,a3
8000348c:	0c005909 	jal	80016424 <strdup>
80003490:	00a02021 	move	a0,a1
80003494:	1040002e 	beqz	v0,80003550 <pipe_create_inode+0xec>
80003498:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:163
		struct inode *node;
		if ((node = alloc_inode(pipe_inode)) != NULL) {
8000349c:	0c001083 	jal	8000420c <__alloc_inode>
800034a0:	24041236 	li	a0,4662
800034a4:	1040001c 	beqz	v0,80003518 <pipe_create_inode+0xb4>
800034a8:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:164
			vop_init(node, &pipe_node_ops, fs);
800034ac:	00402021 	move	a0,v0
800034b0:	24a5f9e4 	addiu	a1,a1,-1564
800034b4:	02203021 	move	a2,s1
800034b8:	0c0010c4 	jal	80004310 <inode_init>
800034bc:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:165
			pipe_inode_init(vop_info(node, pipe_inode), name, state,
800034c0:	8fa20010 	lw	v0,16(sp)
800034c4:	24031236 	li	v1,4662
800034c8:	8c440038 	lw	a0,56(v0)
800034cc:	14830022 	bne	a0,v1,80003558 <pipe_create_inode+0xf4>
800034d0:	3c048002 	lui	a0,0x8002
pipe_inode_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:151

static void
pipe_inode_init(struct pipe_inode *pin, char *name, struct pipe_state *state,
		bool readonly)
{
	assert(state != NULL);
800034d4:	12000027 	beqz	s0,80003574 <pipe_create_inode+0x110>
800034d8:	24430010 	addiu	v1,v0,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:152
	pin->pin_type = readonly ? PIN_RDONLY : PIN_WRONLY;
800034dc:	2e730001 	sltiu	s3,s3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:153
	pin->name = name, pin->state = state, pin->reclaim_count = 1;
800034e0:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:152
static void
pipe_inode_init(struct pipe_inode *pin, char *name, struct pipe_state *state,
		bool readonly)
{
	assert(state != NULL);
	pin->pin_type = readonly ? PIN_RDONLY : PIN_WRONLY;
800034e4:	ac530000 	sw	s3,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:153
	pin->name = name, pin->state = state, pin->reclaim_count = 1;
800034e8:	ac520004 	sw	s2,4(v0)
800034ec:	ac50000c 	sw	s0,12(v0)
800034f0:	ac440008 	sw	a0,8(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
800034f4:	ac430014 	sw	v1,20(v0)
800034f8:	ac430010 	sw	v1,16(v0)
pipe_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:174
		if (name != NULL) {
			kfree(name);
		}
	}
	return NULL;
}
800034fc:	8fbf002c 	lw	ra,44(sp)
80003500:	8fb30028 	lw	s3,40(sp)
80003504:	8fb20024 	lw	s2,36(sp)
80003508:	8fb10020 	lw	s1,32(sp)
8000350c:	8fb0001c 	lw	s0,28(sp)
80003510:	03e00008 	jr	ra
80003514:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:169
			vop_init(node, &pipe_node_ops, fs);
			pipe_inode_init(vop_info(node, pipe_inode), name, state,
					readonly);
			return node;
		}
		if (name != NULL) {
80003518:	1240fff8 	beqz	s2,800034fc <pipe_create_inode+0x98>
8000351c:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:170
			kfree(name);
80003520:	0c0054a3 	jal	8001528c <kfree>
80003524:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:174
		}
	}
	return NULL;
}
80003528:	8fbf002c 	lw	ra,44(sp)
8000352c:	8fa20010 	lw	v0,16(sp)
80003530:	8fb30028 	lw	s3,40(sp)
80003534:	8fb20024 	lw	s2,36(sp)
80003538:	8fb10020 	lw	s1,32(sp)
8000353c:	8fb0001c 	lw	s0,28(sp)
80003540:	03e00008 	jr	ra
80003544:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:160
}

struct inode *pipe_create_inode(struct fs *fs, const char *__name,
				struct pipe_state *state, bool readonly)
{
	char *name = NULL;
80003548:	08000d27 	j	8000349c <pipe_create_inode+0x38>
8000354c:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:173
		}
		if (name != NULL) {
			kfree(name);
		}
	}
	return NULL;
80003550:	08000d3f 	j	800034fc <pipe_create_inode+0x98>
80003554:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:165
	char *name = NULL;
	if (__name == NULL || (name = strdup(__name)) != NULL) {
		struct inode *node;
		if ((node = alloc_inode(pipe_inode)) != NULL) {
			vop_init(node, &pipe_node_ops, fs);
			pipe_inode_init(vop_info(node, pipe_inode), name, state,
80003558:	3c068002 	lui	a2,0x8002
8000355c:	3c078002 	lui	a3,0x8002
80003560:	24840f20 	addiu	a0,a0,3872
80003564:	240500a5 	li	a1,165
80003568:	24c609b0 	addiu	a2,a2,2480
8000356c:	0c006afd 	jal	8001abf4 <__panic>
80003570:	24e70f30 	addiu	a3,a3,3888
pipe_inode_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:151

static void
pipe_inode_init(struct pipe_inode *pin, char *name, struct pipe_state *state,
		bool readonly)
{
	assert(state != NULL);
80003574:	3c068002 	lui	a2,0x8002
80003578:	3c078002 	lui	a3,0x8002
8000357c:	24840f20 	addiu	a0,a0,3872
80003580:	24050097 	li	a1,151
80003584:	24c609b0 	addiu	a2,a2,2480
80003588:	0c006afd 	jal	8001abf4 <__panic>
8000358c:	24e70f80 	addiu	a3,a3,3968

80003590 <pipe_open>:
pipe_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
80003590:	27bdffc8 	addiu	sp,sp,-56
80003594:	afb30028 	sw	s3,40(sp)
80003598:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
8000359c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035a0:	afb20024 	sw	s2,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035a4:	24840f00 	addiu	a0,a0,3840
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035a8:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035ac:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035b0:	afb0001c 	sw	s0,28(sp)
800035b4:	afbf0034 	sw	ra,52(sp)
800035b8:	afb50030 	sw	s5,48(sp)
800035bc:	afb4002c 	sw	s4,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035c0:	0c0013da 	jal	80004f68 <vfs_get_root>
800035c4:	afb10020 	sw	s1,32(sp)
800035c8:	1040000b 	beqz	v0,800035f8 <pipe_open+0x68>
800035cc:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:216
failed_cleanup_node0:
	vop_ref_dec(node[0]);
failed_cleanup_state:
	pipe_state_release(state);
	goto out;
}
800035d0:	8fbf0034 	lw	ra,52(sp)
800035d4:	02001021 	move	v0,s0
800035d8:	8fb50030 	lw	s5,48(sp)
800035dc:	8fb4002c 	lw	s4,44(sp)
800035e0:	8fb30028 	lw	s3,40(sp)
800035e4:	8fb20024 	lw	s2,36(sp)
800035e8:	8fb10020 	lw	s1,32(sp)
800035ec:	8fb0001c 	lw	s0,28(sp)
800035f0:	03e00008 	jr	ra
800035f4:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:186
		return ret;
	}
	ret = -E_NO_MEM;

	struct pipe_state *state;
	if ((state = pipe_state_create()) == NULL) {
800035f8:	0c000f49 	jal	80003d24 <pipe_state_create>
800035fc:	00000000 	nop
80003600:	1040002c 	beqz	v0,800036b4 <pipe_open+0x124>
80003604:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:192
		goto out;
	}

	struct fs *fs = vop_fs(root);
	struct inode *node[2] = { NULL, NULL };
	if ((node[0] = pipe_create_inode(fs, NULL, state, 1)) == NULL) {
80003608:	00403021 	move	a2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:190
	struct pipe_state *state;
	if ((state = pipe_state_create()) == NULL) {
		goto out;
	}

	struct fs *fs = vop_fs(root);
8000360c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:192
	struct inode *node[2] = { NULL, NULL };
	if ((node[0] = pipe_create_inode(fs, NULL, state, 1)) == NULL) {
80003610:	00002821 	move	a1,zero
80003614:	24070001 	li	a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:190
	struct pipe_state *state;
	if ((state = pipe_state_create()) == NULL) {
		goto out;
	}

	struct fs *fs = vop_fs(root);
80003618:	8c550044 	lw	s5,68(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:192
	struct inode *node[2] = { NULL, NULL };
	if ((node[0] = pipe_create_inode(fs, NULL, state, 1)) == NULL) {
8000361c:	0c000d19 	jal	80003464 <pipe_create_inode>
80003620:	02a02021 	move	a0,s5
80003624:	1040001f 	beqz	v0,800036a4 <pipe_open+0x114>
80003628:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:196
		goto failed_cleanup_state;
	}

	pipe_state_acquire(state);
8000362c:	0c000f63 	jal	80003d8c <pipe_state_acquire>
80003630:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:197
	if ((node[1] = pipe_create_inode(fs, NULL, state, 0)) == NULL) {
80003634:	02a02021 	move	a0,s5
80003638:	00002821 	move	a1,zero
8000363c:	02203021 	move	a2,s1
80003640:	0c000d19 	jal	80003464 <pipe_create_inode>
80003644:	00003821 	move	a3,zero
80003648:	0040a821 	move	s5,v0
8000364c:	10400013 	beqz	v0,8000369c <pipe_open+0x10c>
80003650:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:201
		goto failed_cleanup_node0;
	}

	vop_open_inc(node[0]), vop_open_inc(node[1]);
80003654:	0c0010c9 	jal	80004324 <inode_open_inc>
80003658:	00000000 	nop
8000365c:	0c0010c9 	jal	80004324 <inode_open_inc>
80003660:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:203

	*rnode_store = node[0];
80003664:	ae740000 	sw	s4,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:204
	*wnode_store = node[1];
80003668:	ae550000 	sw	s5,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:208
	ret = 0;

out:
	vop_ref_dec(root);
8000366c:	0c001164 	jal	80004590 <inode_ref_dec>
80003670:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:216
failed_cleanup_node0:
	vop_ref_dec(node[0]);
failed_cleanup_state:
	pipe_state_release(state);
	goto out;
}
80003674:	8fbf0034 	lw	ra,52(sp)
80003678:	02001021 	move	v0,s0
8000367c:	8fb50030 	lw	s5,48(sp)
80003680:	8fb4002c 	lw	s4,44(sp)
80003684:	8fb30028 	lw	s3,40(sp)
80003688:	8fb20024 	lw	s2,36(sp)
8000368c:	8fb10020 	lw	s1,32(sp)
80003690:	8fb0001c 	lw	s0,28(sp)
80003694:	03e00008 	jr	ra
80003698:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:212
out:
	vop_ref_dec(root);
	return ret;

failed_cleanup_node0:
	vop_ref_dec(node[0]);
8000369c:	0c001164 	jal	80004590 <inode_ref_dec>
800036a0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:214
failed_cleanup_state:
	pipe_state_release(state);
800036a4:	0c000f74 	jal	80003dd0 <pipe_state_release>
800036a8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:215
	goto out;
800036ac:	08000d9b 	j	8000366c <pipe_open+0xdc>
800036b0:	2410fff4 	li	s0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_inode.c:183
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
		return ret;
	}
	ret = -E_NO_MEM;
800036b4:	08000d9b 	j	8000366c <pipe_open+0xdc>
800036b8:	2410fff4 	li	s0,-12

800036bc <lookup_pipe_nolock>:
lookup_pipe_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:13
#include <assert.h>

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
800036bc:	27bdffd0 	addiu	sp,sp,-48
800036c0:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:14
	list_entry_t *list = &(pipe->pipe_list), *le = list;
800036c4:	24920018 	addiu	s2,a0,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:13
#include <assert.h>

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
800036c8:	afb50028 	sw	s5,40(sp)
800036cc:	afb40024 	sw	s4,36(sp)
800036d0:	afb30020 	sw	s3,32(sp)
800036d4:	afb10018 	sw	s1,24(sp)
800036d8:	afb00014 	sw	s0,20(sp)
800036dc:	afbf002c 	sw	ra,44(sp)
800036e0:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:15
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
800036e4:	ace00000 	sw	zero,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:13
#include <assert.h>

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
800036e8:	00e0a821 	move	s5,a3
800036ec:	00a09821 	move	s3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:15
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
800036f0:	acc00000 	sw	zero,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:14

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
	list_entry_t *list = &(pipe->pipe_list), *le = list;
800036f4:	02408821 	move	s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:33
				break;
			default:
				panic("unknown pipe_inode type %d.\n",
				      pin->pin_type);
			}
			if (vop_ref_inc(node) == 1) {
800036f8:	24140001 	li	s4,1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800036fc:	8e310004 	lw	s1,4(s1)
lookup_pipe_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:16
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
	while ((le = list_next(le)) != list) {
80003700:	12510018 	beq	s2,s1,80003764 <lookup_pipe_nolock+0xa8>
80003704:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:18
		struct pipe_inode *pin = le2pin(le, pipe_link);
		if (strcmp(pin->name, name) == 0) {
80003708:	8e24fff4 	lw	a0,-12(s1)
8000370c:	0c005baa 	jal	80016ea8 <strcmp>
80003710:	02602821 	move	a1,s3
80003714:	5440fffa 	bnezl	v0,80003700 <lookup_pipe_nolock+0x44>
80003718:	8e310004 	lw	s1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:20
			struct inode *node = info2node(pin, pipe_inode);
			switch (pin->pin_type) {
8000371c:	8e27fff0 	lw	a3,-16(s1)
80003720:	14e00018 	bnez	a3,80003784 <lookup_pipe_nolock+0xc8>
80003724:	2624fff0 	addiu	a0,s1,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:22
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
80003728:	8e020000 	lw	v0,0(s0)
8000372c:	54400028 	bnezl	v0,800037d0 <lookup_pipe_nolock+0x114>
80003730:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:23
				*rnode_store = node;
80003734:	ae040000 	sw	a0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:33
				break;
			default:
				panic("unknown pipe_inode type %d.\n",
				      pin->pin_type);
			}
			if (vop_ref_inc(node) == 1) {
80003738:	0c0010a8 	jal	800042a0 <inode_ref_inc>
8000373c:	00000000 	nop
80003740:	5454ffef 	bnel	v0,s4,80003700 <lookup_pipe_nolock+0x44>
80003744:	8e310004 	lw	s1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:34
				pin->reclaim_count++;
80003748:	8e22fff8 	lw	v0,-8(s1)
8000374c:	24420001 	addiu	v0,v0,1
80003750:	ae22fff8 	sw	v0,-8(s1)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80003754:	8e310004 	lw	s1,4(s1)
lookup_pipe_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:16
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
	while ((le = list_next(le)) != list) {
80003758:	5651ffec 	bnel	s2,s1,8000370c <lookup_pipe_nolock+0x50>
8000375c:	8e24fff4 	lw	a0,-12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:38
			if (vop_ref_inc(node) == 1) {
				pin->reclaim_count++;
			}
		}
	}
}
80003760:	8fbf002c 	lw	ra,44(sp)
80003764:	8fb50028 	lw	s5,40(sp)
80003768:	8fb40024 	lw	s4,36(sp)
8000376c:	8fb30020 	lw	s3,32(sp)
80003770:	8fb2001c 	lw	s2,28(sp)
80003774:	8fb10018 	lw	s1,24(sp)
80003778:	8fb00014 	lw	s0,20(sp)
8000377c:	03e00008 	jr	ra
80003780:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:20
	*rnode_store = *wnode_store = NULL;
	while ((le = list_next(le)) != list) {
		struct pipe_inode *pin = le2pin(le, pipe_link);
		if (strcmp(pin->name, name) == 0) {
			struct inode *node = info2node(pin, pipe_inode);
			switch (pin->pin_type) {
80003784:	10f40006 	beq	a3,s4,800037a0 <lookup_pipe_nolock+0xe4>
80003788:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:30
			case PIN_WRONLY:
				assert(*wnode_store == NULL);
				*wnode_store = node;
				break;
			default:
				panic("unknown pipe_inode type %d.\n",
8000378c:	3c048002 	lui	a0,0x8002
80003790:	24840f90 	addiu	a0,a0,3984
80003794:	2405001f 	li	a1,31
80003798:	0c006afd 	jal	8001abf4 <__panic>
8000379c:	24c60fcc 	addiu	a2,a2,4044
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:26
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
				*rnode_store = node;
				break;
			case PIN_WRONLY:
				assert(*wnode_store == NULL);
800037a0:	8ea20000 	lw	v0,0(s5)
800037a4:	54400003 	bnezl	v0,800037b4 <lookup_pipe_nolock+0xf8>
800037a8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:28
				*wnode_store = node;
				break;
800037ac:	08000dce 	j	80003738 <lookup_pipe_nolock+0x7c>
800037b0:	aea40000 	sw	a0,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:26
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
				*rnode_store = node;
				break;
			case PIN_WRONLY:
				assert(*wnode_store == NULL);
800037b4:	3c068002 	lui	a2,0x8002
800037b8:	3c078002 	lui	a3,0x8002
800037bc:	24840f90 	addiu	a0,a0,3984
800037c0:	2405001a 	li	a1,26
800037c4:	24c609b0 	addiu	a2,a2,2480
800037c8:	0c006afd 	jal	8001abf4 <__panic>
800037cc:	24e70fb4 	addiu	a3,a3,4020
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:22
		struct pipe_inode *pin = le2pin(le, pipe_link);
		if (strcmp(pin->name, name) == 0) {
			struct inode *node = info2node(pin, pipe_inode);
			switch (pin->pin_type) {
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
800037d0:	3c068002 	lui	a2,0x8002
800037d4:	3c078002 	lui	a3,0x8002
800037d8:	24840f90 	addiu	a0,a0,3984
800037dc:	24050016 	li	a1,22
800037e0:	24c609b0 	addiu	a2,a2,2480
800037e4:	0c006afd 	jal	8001abf4 <__panic>
800037e8:	24e70f9c 	addiu	a3,a3,3996

800037ec <pipe_root_lookup>:
pipe_root_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:102
	return ret;
}

static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
800037ec:	27bdffd8 	addiu	sp,sp,-40
800037f0:	afb20020 	sw	s2,32(sp)
800037f4:	afb00018 	sw	s0,24(sp)
800037f8:	afbf0024 	sw	ra,36(sp)
800037fc:	afb1001c 	sw	s1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:103
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003800:	90a20000 	lbu	v0,0(a1)
80003804:	24030072 	li	v1,114
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:102
	return ret;
}

static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
80003808:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:103
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
8000380c:	10430004 	beq	v0,v1,80003820 <pipe_root_lookup+0x34>
80003810:	00c08021 	move	s0,a2
80003814:	24030077 	li	v1,119
80003818:	54430034 	bnel	v0,v1,800038ec <pipe_root_lookup+0x100>
8000381c:	3c048002 	lui	a0,0x8002
80003820:	92430001 	lbu	v1,1(s2)
80003824:	2402005f 	li	v0,95
80003828:	54620030 	bnel	v1,v0,800038ec <pipe_root_lookup+0x100>
8000382c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:105
	struct inode *node[2];
	struct pipe_fs *pipe = fsop_info(vop_fs(__node), pipe);
80003830:	8c910044 	lw	s1,68(a0)
80003834:	12200025 	beqz	s1,800038cc <pipe_root_lookup+0xe0>
80003838:	24025678 	li	v0,22136
8000383c:	8e230084 	lw	v1,132(s1)
80003840:	54620023 	bnel	v1,v0,800038d0 <pipe_root_lookup+0xe4>
80003844:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:106
	lock_pipe(pipe);
80003848:	0c000b80 	jal	80002e00 <lock_pipe>
8000384c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:108
	{
		lookup_pipe_nolock(pipe, path + 2, &node[0], &node[1]);
80003850:	02202021 	move	a0,s1
80003854:	26450002 	addiu	a1,s2,2
80003858:	27a60010 	addiu	a2,sp,16
8000385c:	0c000daf 	jal	800036bc <lookup_pipe_nolock>
80003860:	27a70014 	addiu	a3,sp,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:110
	}
	unlock_pipe(pipe);
80003864:	0c000b82 	jal	80002e08 <unlock_pipe>
80003868:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:112

	if (path[0] != 'r') {
8000386c:	92430000 	lbu	v1,0(s2)
80003870:	24020072 	li	v0,114
80003874:	10620013 	beq	v1,v0,800038c4 <pipe_root_lookup+0xd8>
80003878:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:113
		struct inode *tmp = node[0];
8000387c:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:114
		node[0] = node[1], node[1] = tmp;
80003880:	afa40014 	sw	a0,20(sp)
80003884:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:117
	}

	if (node[1] != NULL) {
80003888:	10800004 	beqz	a0,8000389c <pipe_root_lookup+0xb0>
8000388c:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:118
		vop_ref_dec(node[1]);
80003890:	0c001164 	jal	80004590 <inode_ref_dec>
80003894:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:120
	}
	if (node[0] == NULL) {
80003898:	8fa30010 	lw	v1,16(sp)
8000389c:	10600003 	beqz	v1,800038ac <pipe_root_lookup+0xc0>
800038a0:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:123
		return -E_NOENT;
	}
	*node_store = node[0];
800038a4:	ae030000 	sw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:124
	return 0;
800038a8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:125
}
800038ac:	8fbf0024 	lw	ra,36(sp)
800038b0:	8fb20020 	lw	s2,32(sp)
800038b4:	8fb1001c 	lw	s1,28(sp)
800038b8:	8fb00018 	lw	s0,24(sp)
800038bc:	03e00008 	jr	ra
800038c0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:112
	{
		lookup_pipe_nolock(pipe, path + 2, &node[0], &node[1]);
	}
	unlock_pipe(pipe);

	if (path[0] != 'r') {
800038c4:	08000e22 	j	80003888 <pipe_root_lookup+0x9c>
800038c8:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:105
static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
	struct inode *node[2];
	struct pipe_fs *pipe = fsop_info(vop_fs(__node), pipe);
800038cc:	3c048002 	lui	a0,0x8002
800038d0:	3c068002 	lui	a2,0x8002
800038d4:	3c078002 	lui	a3,0x8002
800038d8:	24840f90 	addiu	a0,a0,3984
800038dc:	24050069 	li	a1,105
800038e0:	24c609b0 	addiu	a2,a2,2480
800038e4:	0c006afd 	jal	8001abf4 <__panic>
800038e8:	24e70e90 	addiu	a3,a3,3728
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:103
}

static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
800038ec:	3c068002 	lui	a2,0x8002
800038f0:	3c078002 	lui	a3,0x8002
800038f4:	24840f90 	addiu	a0,a0,3984
800038f8:	24050067 	li	a1,103
800038fc:	24c609b0 	addiu	a2,a2,2480
80003900:	0c006afd 	jal	8001abf4 <__panic>
80003904:	24e70fec 	addiu	a3,a3,4076

80003908 <pipe_root_create>:
pipe_root_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:43
}

static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
80003908:	27bdffd0 	addiu	sp,sp,-48
8000390c:	afb40028 	sw	s4,40(sp)
80003910:	afb30024 	sw	s3,36(sp)
80003914:	afbf002c 	sw	ra,44(sp)
80003918:	afb20020 	sw	s2,32(sp)
8000391c:	afb1001c 	sw	s1,28(sp)
80003920:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:44
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
80003924:	90b10000 	lbu	s1,0(a1)
80003928:	24020072 	li	v0,114
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:43
}

static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
8000392c:	00c0a021 	move	s4,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:44
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
80003930:	12220004 	beq	s1,v0,80003944 <pipe_root_create+0x3c>
80003934:	00e09821 	move	s3,a3
80003938:	24020077 	li	v0,119
8000393c:	5622005f 	bnel	s1,v0,80003abc <pipe_root_create+0x1b4>
80003940:	3c048002 	lui	a0,0x8002
80003944:	90a30001 	lbu	v1,1(a1)
80003948:	2402005f 	li	v0,95
8000394c:	5462005b 	bnel	v1,v0,80003abc <pipe_root_create+0x1b4>
80003950:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:50
	int ret = 0;
	bool readonly = (name[0] == 'r');
	name += 2;

	struct inode *node[2];
	struct fs *fs = vop_fs(__node);
80003954:	8c900044 	lw	s0,68(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:51
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80003958:	12000050 	beqz	s0,80003a9c <pipe_root_create+0x194>
8000395c:	24025678 	li	v0,22136
80003960:	8e030084 	lw	v1,132(s0)
80003964:	1462004d 	bne	v1,v0,80003a9c <pipe_root_create+0x194>
80003968:	24b20002 	addiu	s2,a1,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:53

	lock_pipe(pipe);
8000396c:	02002021 	move	a0,s0
80003970:	0c000b80 	jal	80002e00 <lock_pipe>
80003974:	3a310072 	xori	s1,s1,0x72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:46
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
	int ret = 0;
	bool readonly = (name[0] == 'r');
80003978:	2e310001 	sltiu	s1,s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:55
	struct fs *fs = vop_fs(__node);
	struct pipe_fs *pipe = fsop_info(fs, pipe);

	lock_pipe(pipe);

	lookup_pipe_nolock(pipe, name, &node[0], &node[1]);
8000397c:	02002021 	move	a0,s0
80003980:	02402821 	move	a1,s2
80003984:	27a60010 	addiu	a2,sp,16
80003988:	0c000daf 	jal	800036bc <lookup_pipe_nolock>
8000398c:	27a70014 	addiu	a3,sp,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:56
	if (!readonly) {
80003990:	1620001a 	bnez	s1,800039fc <pipe_root_create+0xf4>
80003994:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:58
		struct inode *tmp = node[0];
		node[0] = node[1], node[1] = tmp;
80003998:	8fa40014 	lw	a0,20(sp)
8000399c:	8fa20010 	lw	v0,16(sp)
800039a0:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:61
	}

	if (node[0] != NULL) {
800039a4:	10800017 	beqz	a0,80003a04 <pipe_root_create+0xfc>
800039a8:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:62
		if (excl) {
800039ac:	16800031 	bnez	s4,80003a74 <pipe_root_create+0x16c>
800039b0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:66
			ret = -E_EXISTS, vop_ref_dec(node[0]);
			goto out;
		}
		*node_store = node[0];
800039b4:	ae640000 	sw	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:45
static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
	int ret = 0;
800039b8:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:92
	list_add(&(pipe->pipe_list),
		 &(vop_info(new_node, pipe_inode)->pipe_link));
	ret = 0, *node_store = new_node;

out:
	unlock_pipe(pipe);
800039bc:	0c000b82 	jal	80002e08 <unlock_pipe>
800039c0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:94

	if (node[1] != NULL) {
800039c4:	8fa40014 	lw	a0,20(sp)
800039c8:	10800004 	beqz	a0,800039dc <pipe_root_create+0xd4>
800039cc:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:95
		vop_ref_dec(node[1]);
800039d0:	0c001164 	jal	80004590 <inode_ref_dec>
800039d4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:98
	}
	return ret;
}
800039d8:	8fbf002c 	lw	ra,44(sp)
800039dc:	02201021 	move	v0,s1
800039e0:	8fb40028 	lw	s4,40(sp)
800039e4:	8fb30024 	lw	s3,36(sp)
800039e8:	8fb20020 	lw	s2,32(sp)
800039ec:	8fb1001c 	lw	s1,28(sp)
800039f0:	8fb00018 	lw	s0,24(sp)
800039f4:	03e00008 	jr	ra
800039f8:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:61
	if (!readonly) {
		struct inode *tmp = node[0];
		node[0] = node[1], node[1] = tmp;
	}

	if (node[0] != NULL) {
800039fc:	1480ffeb 	bnez	a0,800039ac <pipe_root_create+0xa4>
80003a00:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:72
		goto out;
	}
	ret = -E_NO_MEM;

	struct pipe_state *state;
	if (node[1] == NULL) {
80003a04:	8fa20014 	lw	v0,20(sp)
80003a08:	1040001e 	beqz	v0,80003a84 <pipe_root_create+0x17c>
80003a0c:	24031236 	li	v1,4662
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:77
		if ((state = pipe_state_create()) == NULL) {
			goto out;
		}
	} else {
		state = vop_info(node[1], pipe_inode)->state;
80003a10:	8c440038 	lw	a0,56(v0)
80003a14:	14830034 	bne	a0,v1,80003ae8 <pipe_root_create+0x1e0>
80003a18:	3c048002 	lui	a0,0x8002
80003a1c:	8c54000c 	lw	s4,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:78
		pipe_state_acquire(state);
80003a20:	0c000f63 	jal	80003d8c <pipe_state_acquire>
80003a24:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:82
	}

	struct inode *new_node;
	if ((new_node = pipe_create_inode(fs, name, state, readonly)) == NULL) {
80003a28:	02002021 	move	a0,s0
80003a2c:	02402821 	move	a1,s2
80003a30:	02803021 	move	a2,s4
80003a34:	0c000d19 	jal	80003464 <pipe_create_inode>
80003a38:	02203821 	move	a3,s1
80003a3c:	10400026 	beqz	v0,80003ad8 <pipe_root_create+0x1d0>
80003a40:	24031236 	li	v1,4662
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:88
		pipe_state_release(state);
		goto out;
	}

	list_add(&(pipe->pipe_list),
		 &(vop_info(new_node, pipe_inode)->pipe_link));
80003a44:	8c440038 	lw	a0,56(v0)
80003a48:	1483002e 	bne	a0,v1,80003b04 <pipe_root_create+0x1fc>
80003a4c:	24440010 	addiu	a0,v0,16
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80003a50:	8e03001c 	lw	v1,28(s0)
pipe_root_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:87
	if ((new_node = pipe_create_inode(fs, name, state, readonly)) == NULL) {
		pipe_state_release(state);
		goto out;
	}

	list_add(&(pipe->pipe_list),
80003a54:	26050018 	addiu	a1,s0,24
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80003a58:	ac640000 	sw	a0,0(v1)
80003a5c:	ae04001c 	sw	a0,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80003a60:	ac450010 	sw	a1,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80003a64:	ac430014 	sw	v1,20(v0)
pipe_root_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:89
		 &(vop_info(new_node, pipe_inode)->pipe_link));
	ret = 0, *node_store = new_node;
80003a68:	00008821 	move	s1,zero
80003a6c:	08000e6f 	j	800039bc <pipe_root_create+0xb4>
80003a70:	ae620000 	sw	v0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:63
		node[0] = node[1], node[1] = tmp;
	}

	if (node[0] != NULL) {
		if (excl) {
			ret = -E_EXISTS, vop_ref_dec(node[0]);
80003a74:	0c001164 	jal	80004590 <inode_ref_dec>
80003a78:	2411ffef 	li	s1,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:64
			goto out;
80003a7c:	08000e6f 	j	800039bc <pipe_root_create+0xb4>
80003a80:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:73
	}
	ret = -E_NO_MEM;

	struct pipe_state *state;
	if (node[1] == NULL) {
		if ((state = pipe_state_create()) == NULL) {
80003a84:	0c000f49 	jal	80003d24 <pipe_state_create>
80003a88:	00000000 	nop
80003a8c:	1440ffe6 	bnez	v0,80003a28 <pipe_root_create+0x120>
80003a90:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:69
			goto out;
		}
		*node_store = node[0];
		goto out;
	}
	ret = -E_NO_MEM;
80003a94:	08000e6f 	j	800039bc <pipe_root_create+0xb4>
80003a98:	2411fff4 	li	s1,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:51
	bool readonly = (name[0] == 'r');
	name += 2;

	struct inode *node[2];
	struct fs *fs = vop_fs(__node);
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80003a9c:	3c048002 	lui	a0,0x8002
80003aa0:	3c068002 	lui	a2,0x8002
80003aa4:	3c078002 	lui	a3,0x8002
80003aa8:	24840f90 	addiu	a0,a0,3984
80003aac:	24050033 	li	a1,51
80003ab0:	24c609b0 	addiu	a2,a2,2480
80003ab4:	0c006afd 	jal	8001abf4 <__panic>
80003ab8:	24e70e90 	addiu	a3,a3,3728
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:44

static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
80003abc:	3c068002 	lui	a2,0x8002
80003ac0:	3c078002 	lui	a3,0x8002
80003ac4:	24840f90 	addiu	a0,a0,3984
80003ac8:	2405002c 	li	a1,44
80003acc:	24c609b0 	addiu	a2,a2,2480
80003ad0:	0c006afd 	jal	8001abf4 <__panic>
80003ad4:	24e71024 	addiu	a3,a3,4132
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:83
		pipe_state_acquire(state);
	}

	struct inode *new_node;
	if ((new_node = pipe_create_inode(fs, name, state, readonly)) == NULL) {
		pipe_state_release(state);
80003ad8:	0c000f74 	jal	80003dd0 <pipe_state_release>
80003adc:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:84
		goto out;
80003ae0:	08000e6f 	j	800039bc <pipe_root_create+0xb4>
80003ae4:	2411fff4 	li	s1,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:77
	if (node[1] == NULL) {
		if ((state = pipe_state_create()) == NULL) {
			goto out;
		}
	} else {
		state = vop_info(node[1], pipe_inode)->state;
80003ae8:	24840f90 	addiu	a0,a0,3984
80003aec:	2405004d 	li	a1,77
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:88
		pipe_state_release(state);
		goto out;
	}

	list_add(&(pipe->pipe_list),
		 &(vop_info(new_node, pipe_inode)->pipe_link));
80003af0:	3c068002 	lui	a2,0x8002
80003af4:	3c078002 	lui	a3,0x8002
80003af8:	24c609b0 	addiu	a2,a2,2480
80003afc:	0c006afd 	jal	8001abf4 <__panic>
80003b00:	24e70f30 	addiu	a3,a3,3888
80003b04:	3c048002 	lui	a0,0x8002
80003b08:	24840f90 	addiu	a0,a0,3984
80003b0c:	08000ebc 	j	80003af0 <pipe_root_create+0x1e8>
80003b10:	24050058 	li	a1,88

80003b14 <pipe_root_lookup_parent>:
pipe_root_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:130
}

static int
pipe_root_lookup_parent(struct inode *node, char *path,
			struct inode **node_store, char **endp)
{
80003b14:	27bdffe8 	addiu	sp,sp,-24
80003b18:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:131
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003b1c:	90a20000 	lbu	v0,0(a1)
80003b20:	24030072 	li	v1,114
80003b24:	10430003 	beq	v0,v1,80003b34 <pipe_root_lookup_parent+0x20>
80003b28:	24030077 	li	v1,119
80003b2c:	5443000c 	bnel	v0,v1,80003b60 <pipe_root_lookup_parent+0x4c>
80003b30:	3c048002 	lui	a0,0x8002
80003b34:	90a30001 	lbu	v1,1(a1)
80003b38:	2402005f 	li	v0,95
80003b3c:	54620008 	bnel	v1,v0,80003b60 <pipe_root_lookup_parent+0x4c>
80003b40:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:132
	*node_store = node, *endp = path;
80003b44:	acc40000 	sw	a0,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:133
	vop_ref_inc(node);
80003b48:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80003b4c:	ace50000 	sw	a1,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:135
	return 0;
}
80003b50:	8fbf0014 	lw	ra,20(sp)
80003b54:	00001021 	move	v0,zero
80003b58:	03e00008 	jr	ra
80003b5c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:131

static int
pipe_root_lookup_parent(struct inode *node, char *path,
			struct inode **node_store, char **endp)
{
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003b60:	3c068002 	lui	a2,0x8002
80003b64:	3c078002 	lui	a3,0x8002
80003b68:	24840f90 	addiu	a0,a0,3984
80003b6c:	24050083 	li	a1,131
80003b70:	24c609b0 	addiu	a2,a2,2480
80003b74:	0c006afd 	jal	8001abf4 <__panic>
80003b78:	24e70fec 	addiu	a3,a3,4076

80003b7c <pipe_create_root>:
pipe_create_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:164
	.vop_lookup = pipe_root_lookup,
	.vop_lookup_parent = pipe_root_lookup_parent,
};

struct inode *pipe_create_root(struct fs *fs)
{
80003b7c:	27bdffe0 	addiu	sp,sp,-32
80003b80:	00803021 	move	a2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:166
	struct inode *node;
	if ((node = alloc_inode(pipe_root)) != NULL) {
80003b84:	afa60010 	sw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:164
	.vop_lookup = pipe_root_lookup,
	.vop_lookup_parent = pipe_root_lookup_parent,
};

struct inode *pipe_create_root(struct fs *fs)
{
80003b88:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:166
	struct inode *node;
	if ((node = alloc_inode(pipe_root)) != NULL) {
80003b8c:	0c001083 	jal	8000420c <__alloc_inode>
80003b90:	24041235 	li	a0,4661
80003b94:	10400007 	beqz	v0,80003bb4 <pipe_create_root+0x38>
80003b98:	8fa60010 	lw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:167
		vop_init(node, &pipe_root_ops, fs);
80003b9c:	3c058002 	lui	a1,0x8002
80003ba0:	00402021 	move	a0,v0
80003ba4:	24a5fa40 	addiu	a1,a1,-1472
80003ba8:	0c0010c4 	jal	80004310 <inode_init>
80003bac:	afa20010 	sw	v0,16(sp)
80003bb0:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_root.c:170
	}
	return node;
}
80003bb4:	8fbf001c 	lw	ra,28(sp)
80003bb8:	03e00008 	jr	ra
80003bbc:	27bd0020 	addiu	sp,sp,32

80003bc0 <pipe_state_wakeup>:
pipe_state_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:81
	local_intr_restore(intr_flag);
	return wait->wakeup_flags == WT_PIPE;
}

static void pipe_state_wakeup(wait_queue_t * queue)
{
80003bc0:	27bdffe8 	addiu	sp,sp,-24
80003bc4:	afb00010 	sw	s0,16(sp)
80003bc8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:82
	if (!wait_queue_empty(queue)) {
80003bcc:	0c0069a4 	jal	8001a690 <wait_queue_empty>
80003bd0:	00808021 	move	s0,a0
80003bd4:	10400004 	beqz	v0,80003be8 <pipe_state_wakeup+0x28>
80003bd8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:90
		{
			wakeup_queue(queue, WT_PIPE, 1);
		}
		local_intr_restore(intr_flag);
	}
}
80003bdc:	8fb00010 	lw	s0,16(sp)
80003be0:	03e00008 	jr	ra
80003be4:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80003be8:	40026000 	mfc0	v0,c0_status
80003bec:	30420001 	andi	v0,v0,0x1
80003bf0:	14400008 	bnez	v0,80003c14 <pipe_state_wakeup+0x54>
80003bf4:	02002021 	move	a0,s0
pipe_state_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:90
80003bf8:	8fbf0014 	lw	ra,20(sp)
80003bfc:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:86
{
	if (!wait_queue_empty(queue)) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			wakeup_queue(queue, WT_PIPE, 1);
80003c00:	3c058000 	lui	a1,0x8000
80003c04:	24a50200 	addiu	a1,a1,512
80003c08:	24060001 	li	a2,1
80003c0c:	080069c6 	j	8001a718 <wakeup_queue>
80003c10:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80003c14:	0c006cbe 	jal	8001b2f8 <intr_disable>
80003c18:	00000000 	nop
pipe_state_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:86
80003c1c:	3c058000 	lui	a1,0x8000
80003c20:	02002021 	move	a0,s0
80003c24:	24a50200 	addiu	a1,a1,512
80003c28:	0c0069c6 	jal	8001a718 <wakeup_queue>
80003c2c:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:90
		}
		local_intr_restore(intr_flag);
	}
}
80003c30:	8fbf0014 	lw	ra,20(sp)
80003c34:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80003c38:	08006cba 	j	8001b2e8 <intr_enable>
80003c3c:	27bd0018 	addiu	sp,sp,24

80003c40 <pipe_state_wait>:
pipe_state_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:65
{
	return state->p_wpos - state->p_rpos >= PIPE_BUFSIZE;
}

static bool pipe_state_wait(wait_queue_t * queue)
{
80003c40:	27bdffc8 	addiu	sp,sp,-56
80003c44:	afb1002c 	sw	s1,44(sp)
80003c48:	afbf0034 	sw	ra,52(sp)
80003c4c:	afb20030 	sw	s2,48(sp)
80003c50:	afb00028 	sw	s0,40(sp)
80003c54:	00808821 	move	s1,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80003c58:	40026000 	mfc0	v0,c0_status
80003c5c:	30420001 	andi	v0,v0,0x1
80003c60:	14400025 	bnez	v0,80003cf8 <pipe_state_wait+0xb8>
80003c64:	00000000 	nop
pipe_state_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:69
	bool intr_flag;
	wait_t __wait, *wait = &__wait;
	local_intr_save(intr_flag);
	wait_current_set(queue, wait, WT_PIPE);
80003c68:	27b00010 	addiu	s0,sp,16
80003c6c:	3c068000 	lui	a2,0x8000
80003c70:	02002821 	move	a1,s0
80003c74:	0c0069f2 	jal	8001a7c8 <wait_current_set>
80003c78:	24c60200 	addiu	a2,a2,512
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:72
	local_intr_restore(intr_flag);

	schedule();
80003c7c:	0c00059e 	jal	80001678 <schedule>
80003c80:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80003c84:	40026000 	mfc0	v0,c0_status
80003c88:	30420001 	andi	v0,v0,0x1
80003c8c:	10400003 	beqz	v0,80003c9c <pipe_state_wait+0x5c>
80003c90:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80003c94:	0c006cbe 	jal	8001b2f8 <intr_disable>
80003c98:	24120001 	li	s2,1
pipe_state_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:75

	local_intr_save(intr_flag);
	wait_current_del(queue, wait);
80003c9c:	0c0069a8 	jal	8001a6a0 <wait_in_queue>
80003ca0:	02002021 	move	a0,s0
80003ca4:	54400010 	bnezl	v0,80003ce8 <pipe_state_wait+0xa8>
80003ca8:	02202021 	move	a0,s1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80003cac:	12400004 	beqz	s2,80003cc0 <pipe_state_wait+0x80>
80003cb0:	8fa30014 	lw	v1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80003cb4:	0c006cba 	jal	8001b2e8 <intr_enable>
80003cb8:	00000000 	nop
pipe_state_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:77
	local_intr_restore(intr_flag);
	return wait->wakeup_flags == WT_PIPE;
80003cbc:	8fa30014 	lw	v1,20(sp)
80003cc0:	3c027fff 	lui	v0,0x7fff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:78
}
80003cc4:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:77
	schedule();

	local_intr_save(intr_flag);
	wait_current_del(queue, wait);
	local_intr_restore(intr_flag);
	return wait->wakeup_flags == WT_PIPE;
80003cc8:	3442fe00 	ori	v0,v0,0xfe00
80003ccc:	00621021 	addu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:78
}
80003cd0:	2c420001 	sltiu	v0,v0,1
80003cd4:	8fb20030 	lw	s2,48(sp)
80003cd8:	8fb1002c 	lw	s1,44(sp)
80003cdc:	8fb00028 	lw	s0,40(sp)
80003ce0:	03e00008 	jr	ra
80003ce4:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:75
	local_intr_restore(intr_flag);

	schedule();

	local_intr_save(intr_flag);
	wait_current_del(queue, wait);
80003ce8:	0c006958 	jal	8001a560 <wait_queue_del>
80003cec:	02002821 	move	a1,s0
80003cf0:	08000f2b 	j	80003cac <pipe_state_wait+0x6c>
80003cf4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80003cf8:	0c006cbe 	jal	8001b2f8 <intr_disable>
80003cfc:	27b00010 	addiu	s0,sp,16
pipe_state_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:69
static bool pipe_state_wait(wait_queue_t * queue)
{
	bool intr_flag;
	wait_t __wait, *wait = &__wait;
	local_intr_save(intr_flag);
	wait_current_set(queue, wait, WT_PIPE);
80003d00:	3c068000 	lui	a2,0x8000
80003d04:	02202021 	move	a0,s1
80003d08:	02002821 	move	a1,s0
80003d0c:	0c0069f2 	jal	8001a7c8 <wait_current_set>
80003d10:	24c60200 	addiu	a2,a2,512
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80003d14:	0c006cba 	jal	8001b2e8 <intr_enable>
80003d18:	00000000 	nop
80003d1c:	08000f1f 	j	80003c7c <pipe_state_wait+0x3c>
80003d20:	00000000 	nop

80003d24 <pipe_state_create>:
pipe_state_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:29
};

#define PIPE_BUFSIZE                            (PGSIZE - sizeof(struct pipe_state))

struct pipe_state *pipe_state_create(void)
{
80003d24:	27bdffe0 	addiu	sp,sp,-32
80003d28:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:32
	static_assert((int)PIPE_BUFSIZE > 128);
	struct pipe_state *state;
	if ((state = kmalloc(sizeof(struct pipe_state) + PIPE_BUFSIZE)) != NULL) {
80003d2c:	0c005478 	jal	800151e0 <kmalloc>
80003d30:	24041000 	li	a0,4096
80003d34:	10400012 	beqz	v0,80003d80 <pipe_state_create+0x5c>
80003d38:	24430038 	addiu	v1,v0,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:34
		state->p_rpos = state->p_wpos = 0;
		state->buf = (uint8_t *) (state + 1);
80003d3c:	ac430008 	sw	v1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:36
		state->isclosed = 0;
		state->ref_count = 1;
80003d40:	24030001 	li	v1,1
80003d44:	ac430010 	sw	v1,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:37
		sem_init(&(state->sem), 1);
80003d48:	24440014 	addiu	a0,v0,20
80003d4c:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:33
struct pipe_state *pipe_state_create(void)
{
	static_assert((int)PIPE_BUFSIZE > 128);
	struct pipe_state *state;
	if ((state = kmalloc(sizeof(struct pipe_state) + PIPE_BUFSIZE)) != NULL) {
		state->p_rpos = state->p_wpos = 0;
80003d50:	ac400004 	sw	zero,4(v0)
80003d54:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:35
		state->buf = (uint8_t *) (state + 1);
		state->isclosed = 0;
80003d58:	ac40000c 	sw	zero,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:37
		state->ref_count = 1;
		sem_init(&(state->sem), 1);
80003d5c:	0c006709 	jal	80019c24 <sem_init>
80003d60:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:38
		wait_queue_init(&(state->reader_queue));
80003d64:	8fa20010 	lw	v0,16(sp)
80003d68:	0c00693d 	jal	8001a4f4 <wait_queue_init>
80003d6c:	24440028 	addiu	a0,v0,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:39
		wait_queue_init(&(state->writer_queue));
80003d70:	8fa20010 	lw	v0,16(sp)
80003d74:	0c00693d 	jal	8001a4f4 <wait_queue_init>
80003d78:	24440030 	addiu	a0,v0,48
80003d7c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:42
	}
	return state;
}
80003d80:	8fbf001c 	lw	ra,28(sp)
80003d84:	03e00008 	jr	ra
80003d88:	27bd0020 	addiu	sp,sp,32

80003d8c <pipe_state_acquire>:
pipe_state_acquire():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:99
#define wakeup_reader(state)                        pipe_state_wakeup(&((state)->reader_queue))
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
	assert(state->ref_count > 0);
80003d8c:	8c820010 	lw	v0,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:98
#define wait_writer(state)                          pipe_state_wait(&((state)->reader_queue))
#define wakeup_reader(state)                        pipe_state_wakeup(&((state)->reader_queue))
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
80003d90:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:99
	assert(state->ref_count > 0);
80003d94:	18400006 	blez	v0,80003db0 <pipe_state_acquire+0x24>
80003d98:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:101
	state->ref_count++;
}
80003d9c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:100
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
	assert(state->ref_count > 0);
	state->ref_count++;
80003da0:	24420001 	addiu	v0,v0,1
80003da4:	ac820010 	sw	v0,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:101
}
80003da8:	03e00008 	jr	ra
80003dac:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:99
#define wakeup_reader(state)                        pipe_state_wakeup(&((state)->reader_queue))
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
	assert(state->ref_count > 0);
80003db0:	3c048002 	lui	a0,0x8002
80003db4:	3c068002 	lui	a2,0x8002
80003db8:	3c078002 	lui	a3,0x8002
80003dbc:	2484105c 	addiu	a0,a0,4188
80003dc0:	24050063 	li	a1,99
80003dc4:	24c609b0 	addiu	a2,a2,2480
80003dc8:	0c006afd 	jal	8001abf4 <__panic>
80003dcc:	24e7106c 	addiu	a3,a3,4204

80003dd0 <pipe_state_release>:
pipe_state_release():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:104
	state->ref_count++;
}

void pipe_state_release(struct pipe_state *state)
{
80003dd0:	27bdffe8 	addiu	sp,sp,-24
80003dd4:	afb00010 	sw	s0,16(sp)
80003dd8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:105
	assert(state != NULL && state->ref_count > 0);
80003ddc:	10800016 	beqz	a0,80003e38 <pipe_state_release+0x68>
80003de0:	00808021 	move	s0,a0
80003de4:	8c820010 	lw	v0,16(a0)
80003de8:	18400013 	blez	v0,80003e38 <pipe_state_release+0x68>
80003dec:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:106
	if (--state->ref_count == 0) {
80003df0:	10400005 	beqz	v0,80003e08 <pipe_state_release+0x38>
80003df4:	ac820010 	sw	v0,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:111
		assert(wait_queue_empty(&(state->reader_queue)));
		assert(wait_queue_empty(&(state->writer_queue)));
		kfree(state);
	}
}
80003df8:	8fbf0014 	lw	ra,20(sp)
80003dfc:	8fb00010 	lw	s0,16(sp)
80003e00:	03e00008 	jr	ra
80003e04:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:107

void pipe_state_release(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
	if (--state->ref_count == 0) {
		assert(wait_queue_empty(&(state->reader_queue)));
80003e08:	0c0069a4 	jal	8001a690 <wait_queue_empty>
80003e0c:	24840028 	addiu	a0,a0,40
80003e10:	10400011 	beqz	v0,80003e58 <pipe_state_release+0x88>
80003e14:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:108
		assert(wait_queue_empty(&(state->writer_queue)));
80003e18:	0c0069a4 	jal	8001a690 <wait_queue_empty>
80003e1c:	26040030 	addiu	a0,s0,48
80003e20:	10400014 	beqz	v0,80003e74 <pipe_state_release+0xa4>
80003e24:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:111
		kfree(state);
	}
}
80003e28:	8fbf0014 	lw	ra,20(sp)
80003e2c:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:109
{
	assert(state != NULL && state->ref_count > 0);
	if (--state->ref_count == 0) {
		assert(wait_queue_empty(&(state->reader_queue)));
		assert(wait_queue_empty(&(state->writer_queue)));
		kfree(state);
80003e30:	080054a3 	j	8001528c <kfree>
80003e34:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:105
	state->ref_count++;
}

void pipe_state_release(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
80003e38:	3c048002 	lui	a0,0x8002
80003e3c:	3c068002 	lui	a2,0x8002
80003e40:	3c078002 	lui	a3,0x8002
80003e44:	2484105c 	addiu	a0,a0,4188
80003e48:	24050069 	li	a1,105
80003e4c:	24c609b0 	addiu	a2,a2,2480
80003e50:	0c006afd 	jal	8001abf4 <__panic>
80003e54:	24e71084 	addiu	a3,a3,4228
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:107
	if (--state->ref_count == 0) {
		assert(wait_queue_empty(&(state->reader_queue)));
80003e58:	3c068002 	lui	a2,0x8002
80003e5c:	3c078002 	lui	a3,0x8002
80003e60:	2484105c 	addiu	a0,a0,4188
80003e64:	2405006b 	li	a1,107
80003e68:	24c609b0 	addiu	a2,a2,2480
80003e6c:	0c006afd 	jal	8001abf4 <__panic>
80003e70:	24e710ac 	addiu	a3,a3,4268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:108
		assert(wait_queue_empty(&(state->writer_queue)));
80003e74:	3c048002 	lui	a0,0x8002
80003e78:	3c068002 	lui	a2,0x8002
80003e7c:	3c078002 	lui	a3,0x8002
80003e80:	2484105c 	addiu	a0,a0,4188
80003e84:	2405006c 	li	a1,108
80003e88:	24c609b0 	addiu	a2,a2,2480
80003e8c:	0c006afd 	jal	8001abf4 <__panic>
80003e90:	24e710d8 	addiu	a3,a3,4312

80003e94 <pipe_state_close>:
pipe_state_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:114
		kfree(state);
	}
}

void pipe_state_close(struct pipe_state *state)
{
80003e94:	27bdffe8 	addiu	sp,sp,-24
80003e98:	afb00010 	sw	s0,16(sp)
80003e9c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:115
	assert(state != NULL && state->ref_count > 0);
80003ea0:	1080000c 	beqz	a0,80003ed4 <pipe_state_close+0x40>
80003ea4:	00808021 	move	s0,a0
80003ea8:	8c820010 	lw	v0,16(a0)
80003eac:	18400009 	blez	v0,80003ed4 <pipe_state_close+0x40>
80003eb0:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:117
	state->isclosed = 1;
	wakeup_reader(state);
80003eb4:	24840028 	addiu	a0,a0,40
80003eb8:	0c000ef0 	jal	80003bc0 <pipe_state_wakeup>
80003ebc:	ae02000c 	sw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:118
	wakeup_writer(state);
80003ec0:	26040030 	addiu	a0,s0,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:119
}
80003ec4:	8fbf0014 	lw	ra,20(sp)
80003ec8:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:118
void pipe_state_close(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
	state->isclosed = 1;
	wakeup_reader(state);
	wakeup_writer(state);
80003ecc:	08000ef0 	j	80003bc0 <pipe_state_wakeup>
80003ed0:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:115
	}
}

void pipe_state_close(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
80003ed4:	3c048002 	lui	a0,0x8002
80003ed8:	3c068002 	lui	a2,0x8002
80003edc:	3c078002 	lui	a3,0x8002
80003ee0:	2484105c 	addiu	a0,a0,4188
80003ee4:	24050073 	li	a1,115
80003ee8:	24c609b0 	addiu	a2,a2,2480
80003eec:	0c006afd 	jal	8001abf4 <__panic>
80003ef0:	24e71084 	addiu	a3,a3,4228

80003ef4 <pipe_state_size>:
pipe_state_size():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:123
	wakeup_writer(state);
}

size_t pipe_state_size(struct pipe_state *state, bool write)
{
	size_t size = state->p_wpos - state->p_rpos;
80003ef4:	8c830004 	lw	v1,4(a0)
80003ef8:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:124
	if (write) {
80003efc:	10a00007 	beqz	a1,80003f1c <pipe_state_size+0x28>
80003f00:	00621023 	subu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:125
		if (state->isclosed) {
80003f04:	8c83000c 	lw	v1,12(a0)
80003f08:	14600003 	bnez	v1,80003f18 <pipe_state_size+0x24>
80003f0c:	24030fc8 	li	v1,4040
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:128
			return 0;
		}
		return PIPE_BUFSIZE - size;
80003f10:	03e00008 	jr	ra
80003f14:	00621023 	subu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:126
size_t pipe_state_size(struct pipe_state *state, bool write)
{
	size_t size = state->p_wpos - state->p_rpos;
	if (write) {
		if (state->isclosed) {
			return 0;
80003f18:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:131
		}
		return PIPE_BUFSIZE - size;
	}
	return size;
}
80003f1c:	03e00008 	jr	ra
80003f20:	00000000 	nop

80003f24 <pipe_state_read>:
pipe_state_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:134

size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
{
80003f24:	27bdffd0 	addiu	sp,sp,-48
80003f28:	afb40028 	sw	s4,40(sp)
80003f2c:	afb30024 	sw	s3,36(sp)
80003f30:	afb20020 	sw	s2,32(sp)
80003f34:	afb1001c 	sw	s1,28(sp)
80003f38:	afb00018 	sw	s0,24(sp)
80003f3c:	afbf002c 	sw	ra,44(sp)
80003f40:	00808021 	move	s0,a0
80003f44:	00a08821 	move	s1,a1
80003f48:	00c0a021 	move	s4,a2
80003f4c:	24920014 	addiu	s2,a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:143
	if (is_empty(state)) {
		if (state->isclosed) {
			goto out_unlock;
		} else {
			unlock_state(state);
			if (!wait_writer(state)) {
80003f50:	24930028 	addiu	s3,a0,40
lock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:46
	return state;
}

static void lock_state(struct pipe_state *state)
{
	down(&(state->sem));
80003f54:	0c006711 	jal	80019c44 <down>
80003f58:	02402021 	move	a0,s2
is_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:56
	up(&(state->sem));
}

static inline bool is_empty(struct pipe_state *state)
{
	return state->p_rpos == state->p_wpos;
80003f5c:	8e030000 	lw	v1,0(s0)
pipe_state_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:138
size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
{
	size_t ret = 0;
try_again:
	lock_state(state);
	if (is_empty(state)) {
80003f60:	8e020004 	lw	v0,4(s0)
80003f64:	14620012 	bne	v1,v0,80003fb0 <pipe_state_read+0x8c>
80003f68:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:139
		if (state->isclosed) {
80003f6c:	8e02000c 	lw	v0,12(s0)
80003f70:	1440003b 	bnez	v0,80004060 <pipe_state_read+0x13c>
80003f74:	00001021 	move	v0,zero
unlock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80003f78:	0c00670f 	jal	80019c3c <up>
80003f7c:	00000000 	nop
pipe_state_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:143
	if (is_empty(state)) {
		if (state->isclosed) {
			goto out_unlock;
		} else {
			unlock_state(state);
			if (!wait_writer(state)) {
80003f80:	0c000f10 	jal	80003c40 <pipe_state_wait>
80003f84:	02602021 	move	a0,s3
80003f88:	1440fff2 	bnez	v0,80003f54 <pipe_state_read+0x30>
80003f8c:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:135
	return size;
}

size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
{
	size_t ret = 0;
80003f90:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:161

out_unlock:
	unlock_state(state);
out:
	return ret;
}
80003f94:	8fb40028 	lw	s4,40(sp)
80003f98:	8fb30024 	lw	s3,36(sp)
80003f9c:	8fb20020 	lw	s2,32(sp)
80003fa0:	8fb1001c 	lw	s1,28(sp)
80003fa4:	8fb00018 	lw	s0,24(sp)
80003fa8:	03e00008 	jr	ra
80003fac:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80003fb0:	1280001f 	beqz	s4,80004030 <pipe_state_read+0x10c>
80003fb4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:151
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
80003fb8:	3c050207 	lui	a1,0x207
80003fbc:	08000ff4 	j	80003fd0 <pipe_state_read+0xac>
80003fc0:	24a518d7 	addiu	a1,a1,6359
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80003fc4:	8e040004 	lw	a0,4(s0)
80003fc8:	1064002a 	beq	v1,a0,80004074 <pipe_state_read+0x150>
80003fcc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:151
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
80003fd0:	000320c2 	srl	a0,v1,0x3
80003fd4:	00850019 	multu	a0,a1
80003fd8:	8e070008 	lw	a3,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:133
		return PIPE_BUFSIZE - size;
	}
	return size;
}

size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
80003fdc:	02223021 	addu	a2,s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80003fe0:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:151
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
80003fe4:	00002010 	mfhi	a0
80003fe8:	00042082 	srl	a0,a0,0x2
80003fec:	000440c0 	sll	t0,a0,0x3
80003ff0:	00044a40 	sll	t1,a0,0x9
80003ff4:	01284023 	subu	t0,t1,t0
80003ff8:	01042021 	addu	a0,t0,a0
80003ffc:	000420c0 	sll	a0,a0,0x3
80004000:	00641823 	subu	v1,v1,a0
80004004:	00e31821 	addu	v1,a3,v1
80004008:	90630000 	lbu	v1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:150
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
		*(uint8_t *) (buf + ret) =
8000400c:	a0c30000 	sb	v1,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80004010:	8e030000 	lw	v1,0(s0)
80004014:	24630001 	addiu	v1,v1,1
80004018:	1454ffea 	bne	v0,s4,80003fc4 <pipe_state_read+0xa0>
8000401c:	ae030000 	sw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:154
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
	}
	if (ret != 0) {
		wakeup_writer(state);
80004020:	26040030 	addiu	a0,s0,48
80004024:	0c000ef0 	jal	80003bc0 <pipe_state_wakeup>
80004028:	afa20010 	sw	v0,16(sp)
8000402c:	8fa20010 	lw	v0,16(sp)
unlock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80004030:	02402021 	move	a0,s2
80004034:	0c00670f 	jal	80019c3c <up>
80004038:	afa20010 	sw	v0,16(sp)
8000403c:	8fa20010 	lw	v0,16(sp)
pipe_state_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:161

out_unlock:
	unlock_state(state);
out:
	return ret;
}
80004040:	8fbf002c 	lw	ra,44(sp)
80004044:	8fb40028 	lw	s4,40(sp)
80004048:	8fb30024 	lw	s3,36(sp)
8000404c:	8fb20020 	lw	s2,32(sp)
80004050:	8fb1001c 	lw	s1,28(sp)
80004054:	8fb00018 	lw	s0,24(sp)
80004058:	03e00008 	jr	ra
8000405c:	27bd0030 	addiu	sp,sp,48
unlock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80004060:	02402021 	move	a0,s2
80004064:	0c00670f 	jal	80019c3c <up>
80004068:	afa20010 	sw	v0,16(sp)
8000406c:	08001010 	j	80004040 <pipe_state_read+0x11c>
80004070:	8fa20010 	lw	v0,16(sp)
pipe_state_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:153
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
	}
	if (ret != 0) {
80004074:	5040ffef 	beqzl	v0,80004034 <pipe_state_read+0x110>
80004078:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:154
		wakeup_writer(state);
8000407c:	08001009 	j	80004024 <pipe_state_read+0x100>
80004080:	26040030 	addiu	a0,s0,48

80004084 <pipe_state_write>:
pipe_state_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:164
out:
	return ret;
}

size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
{
80004084:	27bdffc8 	addiu	sp,sp,-56
80004088:	afb40024 	sw	s4,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
8000408c:	3c140207 	lui	s4,0x207
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:164
out:
	return ret;
}

size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
{
80004090:	afb70030 	sw	s7,48(sp)
80004094:	afb6002c 	sw	s6,44(sp)
80004098:	afb50028 	sw	s5,40(sp)
8000409c:	afb30020 	sw	s3,32(sp)
800040a0:	afb2001c 	sw	s2,28(sp)
800040a4:	afb10018 	sw	s1,24(sp)
800040a8:	afb00014 	sw	s0,20(sp)
800040ac:	afbf0034 	sw	ra,52(sp)
800040b0:	00808021 	move	s0,a0
800040b4:	00a08821 	move	s1,a1
800040b8:	00c09821 	move	s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:165
	size_t ret = 0, step;
800040bc:	00009021 	move	s2,zero
800040c0:	24950014 	addiu	s5,a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
800040c4:	269418d7 	addiu	s4,s4,6359
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:173
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
			wakeup_reader(state);
800040c8:	24970028 	addiu	s7,a0,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:175
			unlock_state(state);
			if (!wait_reader(state)) {
800040cc:	24960030 	addiu	s6,a0,48
lock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:46
	return state;
}

static void lock_state(struct pipe_state *state)
{
	down(&(state->sem));
800040d0:	0c006711 	jal	80019c44 <down>
800040d4:	02a02021 	move	a0,s5
pipe_state_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:168
size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
{
	size_t ret = 0, step;
try_again:
	lock_state(state);
	if (state->isclosed) {
800040d8:	8e02000c 	lw	v0,12(s0)
800040dc:	14400026 	bnez	v0,80004178 <pipe_state_write+0xf4>
800040e0:	0253102b 	sltu	v0,s2,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:171
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
800040e4:	10400024 	beqz	v0,80004178 <pipe_state_write+0xf4>
800040e8:	00000000 	nop
is_full():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:61
	return state->p_rpos == state->p_wpos;
}

static inline bool is_full(struct pipe_state *state)
{
	return state->p_wpos - state->p_rpos >= PIPE_BUFSIZE;
800040ec:	8e020004 	lw	v0,4(s0)
800040f0:	8e030000 	lw	v1,0(s0)
800040f4:	00431823 	subu	v1,v0,v1
pipe_state_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:172
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
800040f8:	2c630fc8 	sltiu	v1,v1,4040
800040fc:	1060002c 	beqz	v1,800041b0 <pipe_state_write+0x12c>
80004100:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
80004104:	08001048 	j	80004120 <pipe_state_write+0x9c>
80004108:	000220c2 	srl	a0,v0,0x3
is_full():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:61
	return state->p_rpos == state->p_wpos;
}

static inline bool is_full(struct pipe_state *state)
{
	return state->p_wpos - state->p_rpos >= PIPE_BUFSIZE;
8000410c:	8e040000 	lw	a0,0(s0)
80004110:	00442023 	subu	a0,v0,a0
pipe_state_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:172
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
80004114:	2c840fc8 	sltiu	a0,a0,4040
80004118:	10800025 	beqz	a0,800041b0 <pipe_state_write+0x12c>
8000411c:	000220c2 	srl	a0,v0,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
80004120:	00940019 	multu	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:163
	unlock_state(state);
out:
	return ret;
}

size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
80004124:	02322821 	addu	a1,s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
80004128:	8e060008 	lw	a2,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:181
		    *(uint8_t *) (buf + ret);
8000412c:	90a50000 	lbu	a1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:171
try_again:
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
80004130:	26520001 	addiu	s2,s2,1
80004134:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
80004138:	00002010 	mfhi	a0
8000413c:	00042082 	srl	a0,a0,0x2
80004140:	000438c0 	sll	a3,a0,0x3
80004144:	00044240 	sll	t0,a0,0x9
80004148:	01073823 	subu	a3,t0,a3
8000414c:	00e42021 	addu	a0,a3,a0
80004150:	000420c0 	sll	a0,a0,0x3
80004154:	00441023 	subu	v0,v0,a0
80004158:	00c21021 	addu	v0,a2,v0
8000415c:	a0450000 	sb	a1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:171
try_again:
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
80004160:	8e020004 	lw	v0,4(s0)
80004164:	24420001 	addiu	v0,v0,1
80004168:	1653ffe8 	bne	s2,s3,8000410c <pipe_state_write+0x88>
8000416c:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:183
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
		    *(uint8_t *) (buf + ret);
	}
	if (step != 0) {
80004170:	14600022 	bnez	v1,800041fc <pipe_state_write+0x178>
80004174:	00000000 	nop
unlock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80004178:	0c00670f 	jal	80019c3c <up>
8000417c:	02a02021 	move	a0,s5
pipe_state_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:191

out_unlock:
	unlock_state(state);
out:
	return ret;
}
80004180:	8fbf0034 	lw	ra,52(sp)
80004184:	02401021 	move	v0,s2
80004188:	8fb70030 	lw	s7,48(sp)
8000418c:	8fb6002c 	lw	s6,44(sp)
80004190:	8fb50028 	lw	s5,40(sp)
80004194:	8fb40024 	lw	s4,36(sp)
80004198:	8fb30020 	lw	s3,32(sp)
8000419c:	8fb2001c 	lw	s2,28(sp)
800041a0:	8fb10018 	lw	s1,24(sp)
800041a4:	8fb00014 	lw	s0,20(sp)
800041a8:	03e00008 	jr	ra
800041ac:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:173
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
			wakeup_reader(state);
800041b0:	0c000ef0 	jal	80003bc0 <pipe_state_wakeup>
800041b4:	02e02021 	move	a0,s7
unlock_state():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
800041b8:	0c00670f 	jal	80019c3c <up>
800041bc:	02a02021 	move	a0,s5
pipe_state_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:175
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
			wakeup_reader(state);
			unlock_state(state);
			if (!wait_reader(state)) {
800041c0:	0c000f10 	jal	80003c40 <pipe_state_wait>
800041c4:	02c02021 	move	a0,s6
800041c8:	1440ffc1 	bnez	v0,800040d0 <pipe_state_write+0x4c>
800041cc:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:191

out_unlock:
	unlock_state(state);
out:
	return ret;
}
800041d0:	02401021 	move	v0,s2
800041d4:	8fb70030 	lw	s7,48(sp)
800041d8:	8fb6002c 	lw	s6,44(sp)
800041dc:	8fb50028 	lw	s5,40(sp)
800041e0:	8fb40024 	lw	s4,36(sp)
800041e4:	8fb30020 	lw	s3,32(sp)
800041e8:	8fb2001c 	lw	s2,28(sp)
800041ec:	8fb10018 	lw	s1,24(sp)
800041f0:	8fb00014 	lw	s0,20(sp)
800041f4:	03e00008 	jr	ra
800041f8:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/pipe/pipe_state.c:184
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
		    *(uint8_t *) (buf + ret);
	}
	if (step != 0) {
		wakeup_reader(state);
800041fc:	0c000ef0 	jal	80003bc0 <pipe_state_wakeup>
80004200:	26040028 	addiu	a0,s0,40
80004204:	0800105e 	j	80004178 <pipe_state_write+0xf4>
80004208:	00000000 	nop

8000420c <__alloc_inode>:
__alloc_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:16

/* *
 * __alloc_inode - alloc a inode structure and initialize in_type
 * */
struct inode *__alloc_inode(int type)
{
8000420c:	27bdffe8 	addiu	sp,sp,-24
80004210:	afb00010 	sw	s0,16(sp)
80004214:	00808021 	move	s0,a0
80004218:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:18
	struct inode *node;
	if ((node = kmalloc(sizeof(struct inode))) != NULL) {
8000421c:	0c005478 	jal	800151e0 <kmalloc>
80004220:	2404004c 	li	a0,76
80004224:	54400001 	bnezl	v0,8000422c <__alloc_inode+0x20>
80004228:	ac500038 	sw	s0,56(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:22
		node->in_type = type;
	}
	return node;
}
8000422c:	8fbf0014 	lw	ra,20(sp)
80004230:	8fb00010 	lw	s0,16(sp)
80004234:	03e00008 	jr	ra
80004238:	27bd0018 	addiu	sp,sp,24

8000423c <inode_kill>:
atomic_read():
8000423c:	8c83003c 	lw	v1,60(a0)
inode_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:44
/* *
 * inode_kill - kill a inode structure
 * invoked by vop_kill
 * */
void inode_kill(struct inode *node)
{
80004240:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:45
	assert(inode_ref_count(node) == 0);
80004244:	14600006 	bnez	v1,80004260 <inode_kill+0x24>
80004248:	afbf0014 	sw	ra,20(sp)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000424c:	8c820040 	lw	v0,64(a0)
inode_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:46
	assert(inode_open_count(node) == 0);
80004250:	1440000b 	bnez	v0,80004280 <inode_kill+0x44>
80004254:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:47
	kfree(node);
80004258:	080054a3 	j	8001528c <kfree>
8000425c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:45
 * inode_kill - kill a inode structure
 * invoked by vop_kill
 * */
void inode_kill(struct inode *node)
{
	assert(inode_ref_count(node) == 0);
80004260:	3c048002 	lui	a0,0x8002
80004264:	3c068002 	lui	a2,0x8002
80004268:	3c078002 	lui	a3,0x8002
8000426c:	24841ba4 	addiu	a0,a0,7076
80004270:	2405002d 	li	a1,45
80004274:	24c609b0 	addiu	a2,a2,2480
80004278:	0c006afd 	jal	8001abf4 <__panic>
8000427c:	24e71104 	addiu	a3,a3,4356
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:46
	assert(inode_open_count(node) == 0);
80004280:	3c048002 	lui	a0,0x8002
80004284:	3c068002 	lui	a2,0x8002
80004288:	3c078002 	lui	a3,0x8002
8000428c:	24841ba4 	addiu	a0,a0,7076
80004290:	2405002e 	li	a1,46
80004294:	24c609b0 	addiu	a2,a2,2480
80004298:	0c006afd 	jal	8001abf4 <__panic>
8000429c:	24e71120 	addiu	a3,a3,4384

800042a0 <inode_ref_inc>:
inode_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:55
/* *
 * inode_ref_inc - increment ref_count
 * invoked by vop_ref_inc
 * */
int inode_ref_inc(struct inode *node)
{
800042a0:	27bdffe0 	addiu	sp,sp,-32
800042a4:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800042a8:	40026000 	mfc0	v0,c0_status
800042ac:	30420001 	andi	v0,v0,0x1
800042b0:	14400009 	bnez	v0,800042d8 <inode_ref_inc+0x38>
800042b4:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800042b8:	8c82003c 	lw	v0,60(a0)
inode_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:57
	return atomic_add_return(&(node->ref_count), 1);
}
800042bc:	8fbf001c 	lw	ra,28(sp)
800042c0:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
800042c4:	24420001 	addiu	v0,v0,1
800042c8:	ac82003c 	sw	v0,60(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800042cc:	8c82003c 	lw	v0,60(a0)
inode_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:57
800042d0:	03e00008 	jr	ra
800042d4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800042d8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800042dc:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800042e0:	8fa40010 	lw	a0,16(sp)
800042e4:	8c82003c 	lw	v0,60(a0)
800042e8:	24420001 	addiu	v0,v0,1
800042ec:	ac82003c 	sw	v0,60(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800042f0:	0c006cba 	jal	8001b2e8 <intr_enable>
800042f4:	00000000 	nop
800042f8:	8fa40010 	lw	a0,16(sp)
inode_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:57
800042fc:	8fbf001c 	lw	ra,28(sp)
80004300:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80004304:	8c82003c 	lw	v0,60(a0)
inode_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:57
80004308:	03e00008 	jr	ra
8000430c:	00000000 	nop

80004310 <inode_init>:
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80004310:	ac80003c 	sw	zero,60(a0)
inode_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:32
 * */
void inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs)
{
	atomic_set(&(node->ref_count), 0);
	atomic_set(&(node->open_count), 0);
	node->in_ops = ops, node->in_fs = fs;
80004314:	ac850048 	sw	a1,72(a0)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
80004318:	ac800040 	sw	zero,64(a0)
inode_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:36
#ifdef UCONFIG_BIONIC_LIBC
	list_init(&(node->mapped_addr_list));
#endif //UCONFIG_BIONIC_LIBC
	vop_ref_inc(node);
8000431c:	080010a8 	j	800042a0 <inode_ref_inc>
80004320:	ac860044 	sw	a2,68(a0)

80004324 <inode_open_inc>:
inode_open_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:81
/* *
 * inode_open_inc - increment the open_count
 * invoked by vop_open_inc
 * */
int inode_open_inc(struct inode *node)
{
80004324:	27bdffe0 	addiu	sp,sp,-32
80004328:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000432c:	40026000 	mfc0	v0,c0_status
80004330:	30420001 	andi	v0,v0,0x1
80004334:	14400009 	bnez	v0,8000435c <inode_open_inc+0x38>
80004338:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000433c:	8c820040 	lw	v0,64(a0)
inode_open_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:83
	return atomic_add_return(&(node->open_count), 1);
}
80004340:	8fbf001c 	lw	ra,28(sp)
80004344:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80004348:	24420001 	addiu	v0,v0,1
8000434c:	ac820040 	sw	v0,64(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80004350:	8c820040 	lw	v0,64(a0)
inode_open_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:83
80004354:	03e00008 	jr	ra
80004358:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000435c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80004360:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004364:	8fa40010 	lw	a0,16(sp)
80004368:	8c820040 	lw	v0,64(a0)
8000436c:	24420001 	addiu	v0,v0,1
80004370:	ac820040 	sw	v0,64(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80004374:	0c006cba 	jal	8001b2e8 <intr_enable>
80004378:	00000000 	nop
8000437c:	8fa40010 	lw	a0,16(sp)
inode_open_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:83
80004380:	8fbf001c 	lw	ra,28(sp)
80004384:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80004388:	8c820040 	lw	v0,64(a0)
inode_open_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:83
8000438c:	03e00008 	jr	ra
80004390:	00000000 	nop

80004394 <inode_check>:
inode_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:107
/* *
 * inode_check - check the various things being valid
 * called before all vop_* calls
 * */
void inode_check(struct inode *node, const char *opstr)
{
80004394:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:108
	assert(node != NULL && node->in_ops != NULL);
80004398:	10800018 	beqz	a0,800043fc <inode_check+0x68>
8000439c:	afbf0014 	sw	ra,20(sp)
800043a0:	8c820048 	lw	v0,72(a0)
800043a4:	50400016 	beqzl	v0,80004400 <inode_check+0x6c>
800043a8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:109
	assert(node->in_ops->vop_magic == VOP_MAGIC);
800043ac:	8c430000 	lw	v1,0(v0)
800043b0:	3c028c4b 	lui	v0,0x8c4b
800043b4:	3442a476 	ori	v0,v0,0xa476
800043b8:	54620027 	bnel	v1,v0,80004458 <inode_check+0xc4>
800043bc:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
800043c0:	8c83003c 	lw	v1,60(a0)
800043c4:	8c820040 	lw	v0,64(a0)
inode_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:112
	int ref_count = inode_ref_count(node), open_count =
	    inode_open_count(node);
	assert(ref_count >= open_count && open_count >= 0);
800043c8:	0062202a 	slt	a0,v1,v0
800043cc:	1480001b 	bnez	a0,8000443c <inode_check+0xa8>
800043d0:	3c048002 	lui	a0,0x8002
800043d4:	0440001a 	bltz	v0,80004440 <inode_check+0xac>
800043d8:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:113
	assert(ref_count < MAX_INODE_COUNT && open_count < MAX_INODE_COUNT);
800043dc:	3c040001 	lui	a0,0x1
800043e0:	0064182a 	slt	v1,v1,a0
800043e4:	1060000d 	beqz	v1,8000441c <inode_check+0x88>
800043e8:	0044102a 	slt	v0,v0,a0
800043ec:	1040000b 	beqz	v0,8000441c <inode_check+0x88>
800043f0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:114
}
800043f4:	03e00008 	jr	ra
800043f8:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:108
 * inode_check - check the various things being valid
 * called before all vop_* calls
 * */
void inode_check(struct inode *node, const char *opstr)
{
	assert(node != NULL && node->in_ops != NULL);
800043fc:	3c048002 	lui	a0,0x8002
80004400:	3c068002 	lui	a2,0x8002
80004404:	3c078002 	lui	a3,0x8002
80004408:	24841ba4 	addiu	a0,a0,7076
8000440c:	2405006c 	li	a1,108
80004410:	24c609b0 	addiu	a2,a2,2480
80004414:	0c006afd 	jal	8001abf4 <__panic>
80004418:	24e7113c 	addiu	a3,a3,4412
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:113
	assert(node->in_ops->vop_magic == VOP_MAGIC);
	int ref_count = inode_ref_count(node), open_count =
	    inode_open_count(node);
	assert(ref_count >= open_count && open_count >= 0);
	assert(ref_count < MAX_INODE_COUNT && open_count < MAX_INODE_COUNT);
8000441c:	3c048002 	lui	a0,0x8002
80004420:	3c068002 	lui	a2,0x8002
80004424:	3c078002 	lui	a3,0x8002
80004428:	24841ba4 	addiu	a0,a0,7076
8000442c:	24050071 	li	a1,113
80004430:	24c609b0 	addiu	a2,a2,2480
80004434:	0c006afd 	jal	8001abf4 <__panic>
80004438:	24e711b8 	addiu	a3,a3,4536
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:112
{
	assert(node != NULL && node->in_ops != NULL);
	assert(node->in_ops->vop_magic == VOP_MAGIC);
	int ref_count = inode_ref_count(node), open_count =
	    inode_open_count(node);
	assert(ref_count >= open_count && open_count >= 0);
8000443c:	3c068002 	lui	a2,0x8002
80004440:	3c078002 	lui	a3,0x8002
80004444:	24841ba4 	addiu	a0,a0,7076
80004448:	24050070 	li	a1,112
8000444c:	24c609b0 	addiu	a2,a2,2480
80004450:	0c006afd 	jal	8001abf4 <__panic>
80004454:	24e7118c 	addiu	a3,a3,4492
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:109
 * called before all vop_* calls
 * */
void inode_check(struct inode *node, const char *opstr)
{
	assert(node != NULL && node->in_ops != NULL);
	assert(node->in_ops->vop_magic == VOP_MAGIC);
80004458:	3c068002 	lui	a2,0x8002
8000445c:	3c078002 	lui	a3,0x8002
80004460:	24841ba4 	addiu	a0,a0,7076
80004464:	2405006d 	li	a1,109
80004468:	24c609b0 	addiu	a2,a2,2480
8000446c:	0c006afd 	jal	8001abf4 <__panic>
80004470:	24e71164 	addiu	a3,a3,4452

80004474 <inode_open_dec>:
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
80004474:	8c820040 	lw	v0,64(a0)
inode_open_dec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:91
 * inode_open_dec - decrement the open_count
 * invoked by vop_open_dec
 * calls vop_close if the open_count hits zero
 * */
int inode_open_dec(struct inode *node)
{
80004478:	27bdffe0 	addiu	sp,sp,-32
8000447c:	afb10018 	sw	s1,24(sp)
80004480:	afbf001c 	sw	ra,28(sp)
80004484:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:92
	assert(inode_open_count(node) > 0);
80004488:	18400039 	blez	v0,80004570 <inode_open_dec+0xfc>
8000448c:	00808821 	move	s1,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80004490:	40026000 	mfc0	v0,c0_status
80004494:	30420001 	andi	v0,v0,0x1
80004498:	14400025 	bnez	v0,80004530 <inode_open_dec+0xbc>
8000449c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800044a0:	8c820040 	lw	v0,64(a0)
800044a4:	2442ffff 	addiu	v0,v0,-1
800044a8:	ac820040 	sw	v0,64(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800044ac:	8e300040 	lw	s0,64(s1)
inode_open_dec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:94
	int open_count, ret;
	if ((open_count = atomic_sub_return(&(node->open_count), 1)) == 0) {
800044b0:	16000010 	bnez	s0,800044f4 <inode_open_dec+0x80>
800044b4:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:95
		if ((ret = vop_close(node)) != 0) {
800044b8:	8e220048 	lw	v0,72(s1)
800044bc:	10400025 	beqz	v0,80004554 <inode_open_dec+0xe0>
800044c0:	3c048002 	lui	a0,0x8002
800044c4:	8c420008 	lw	v0,8(v0)
800044c8:	10400022 	beqz	v0,80004554 <inode_open_dec+0xe0>
800044cc:	3c058002 	lui	a1,0x8002
800044d0:	02202021 	move	a0,s1
800044d4:	0c0010e5 	jal	80004394 <inode_check>
800044d8:	24a51260 	addiu	a1,a1,4704
800044dc:	8e220048 	lw	v0,72(s1)
800044e0:	8c420008 	lw	v0,8(v0)
800044e4:	0040f809 	jalr	v0
800044e8:	02202021 	move	a0,s1
800044ec:	14400006 	bnez	v0,80004508 <inode_open_dec+0x94>
800044f0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:100
			kprintf("vfs: warning: vop_close: %e.\n\r", ret);
		}
	}
	return open_count;
}
800044f4:	02001021 	move	v0,s0
800044f8:	8fb10018 	lw	s1,24(sp)
800044fc:	8fb00014 	lw	s0,20(sp)
80004500:	03e00008 	jr	ra
80004504:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:96
{
	assert(inode_open_count(node) > 0);
	int open_count, ret;
	if ((open_count = atomic_sub_return(&(node->open_count), 1)) == 0) {
		if ((ret = vop_close(node)) != 0) {
			kprintf("vfs: warning: vop_close: %e.\n\r", ret);
80004508:	3c048002 	lui	a0,0x8002
8000450c:	24841268 	addiu	a0,a0,4712
80004510:	0c00798a 	jal	8001e628 <kprintf>
80004514:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:100
		}
	}
	return open_count;
}
80004518:	8fbf001c 	lw	ra,28(sp)
8000451c:	02001021 	move	v0,s0
80004520:	8fb10018 	lw	s1,24(sp)
80004524:	8fb00014 	lw	s0,20(sp)
80004528:	03e00008 	jr	ra
8000452c:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80004530:	0c006cbe 	jal	8001b2f8 <intr_disable>
80004534:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004538:	8e220040 	lw	v0,64(s1)
8000453c:	2442ffff 	addiu	v0,v0,-1
80004540:	ae220040 	sw	v0,64(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80004544:	0c006cba 	jal	8001b2e8 <intr_enable>
80004548:	00000000 	nop
8000454c:	0800112b 	j	800044ac <inode_open_dec+0x38>
80004550:	00000000 	nop
inode_open_dec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:95
int inode_open_dec(struct inode *node)
{
	assert(inode_open_count(node) > 0);
	int open_count, ret;
	if ((open_count = atomic_sub_return(&(node->open_count), 1)) == 0) {
		if ((ret = vop_close(node)) != 0) {
80004554:	3c068002 	lui	a2,0x8002
80004558:	3c078002 	lui	a3,0x8002
8000455c:	24841ba4 	addiu	a0,a0,7076
80004560:	2405005f 	li	a1,95
80004564:	24c609b0 	addiu	a2,a2,2480
80004568:	0c006afd 	jal	8001abf4 <__panic>
8000456c:	24e71210 	addiu	a3,a3,4624
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:92
 * invoked by vop_open_dec
 * calls vop_close if the open_count hits zero
 * */
int inode_open_dec(struct inode *node)
{
	assert(inode_open_count(node) > 0);
80004570:	3c048002 	lui	a0,0x8002
80004574:	3c068002 	lui	a2,0x8002
80004578:	3c078002 	lui	a3,0x8002
8000457c:	24841ba4 	addiu	a0,a0,7076
80004580:	2405005c 	li	a1,92
80004584:	24c609b0 	addiu	a2,a2,2480
80004588:	0c006afd 	jal	8001abf4 <__panic>
8000458c:	24e711f4 	addiu	a3,a3,4596

80004590 <inode_ref_dec>:
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80004590:	8c82003c 	lw	v0,60(a0)
inode_ref_dec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:65
 * inode_ref_dec - decrement ref_count
 * invoked by vop_ref_dec
 * calls vop_reclaim if the ref_count hits zero
 * */
int inode_ref_dec(struct inode *node)
{
80004594:	27bdffe0 	addiu	sp,sp,-32
80004598:	afb10018 	sw	s1,24(sp)
8000459c:	afbf001c 	sw	ra,28(sp)
800045a0:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:66
	assert(inode_ref_count(node) > 0);
800045a4:	18400035 	blez	v0,8000467c <inode_ref_dec+0xec>
800045a8:	00808821 	move	s1,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800045ac:	40026000 	mfc0	v0,c0_status
800045b0:	30420001 	andi	v0,v0,0x1
800045b4:	14400021 	bnez	v0,8000463c <inode_ref_dec+0xac>
800045b8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800045bc:	8c82003c 	lw	v0,60(a0)
800045c0:	2442ffff 	addiu	v0,v0,-1
800045c4:	ac82003c 	sw	v0,60(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800045c8:	8e30003c 	lw	s0,60(s1)
inode_ref_dec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:68
	int ref_count, ret;
	if ((ref_count = atomic_sub_return(&(node->ref_count), 1)) == 0) {
800045cc:	16000016 	bnez	s0,80004628 <inode_ref_dec+0x98>
800045d0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:69
		if ((ret = vop_reclaim(node)) != 0 && ret != -E_BUSY) {
800045d4:	8e220048 	lw	v0,72(s1)
800045d8:	10400021 	beqz	v0,80004660 <inode_ref_dec+0xd0>
800045dc:	3c048002 	lui	a0,0x8002
800045e0:	8c420038 	lw	v0,56(v0)
800045e4:	1040001e 	beqz	v0,80004660 <inode_ref_dec+0xd0>
800045e8:	3c058002 	lui	a1,0x8002
800045ec:	02202021 	move	a0,s1
800045f0:	0c0010e5 	jal	80004394 <inode_check>
800045f4:	24a512f4 	addiu	a1,a1,4852
800045f8:	8e220048 	lw	v0,72(s1)
800045fc:	8c420038 	lw	v0,56(v0)
80004600:	0040f809 	jalr	v0
80004604:	02202021 	move	a0,s1
80004608:	10400006 	beqz	v0,80004624 <inode_ref_dec+0x94>
8000460c:	2403fff0 	li	v1,-16
80004610:	10430004 	beq	v0,v1,80004624 <inode_ref_dec+0x94>
80004614:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:70
			kprintf("vfs: warning: vop_reclaim: %e.\n\r", ret);
80004618:	248412fc 	addiu	a0,a0,4860
8000461c:	0c00798a 	jal	8001e628 <kprintf>
80004620:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:74
		}
	}
	return ref_count;
}
80004624:	8fbf001c 	lw	ra,28(sp)
80004628:	02001021 	move	v0,s0
8000462c:	8fb10018 	lw	s1,24(sp)
80004630:	8fb00014 	lw	s0,20(sp)
80004634:	03e00008 	jr	ra
80004638:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000463c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80004640:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004644:	8e22003c 	lw	v0,60(s1)
80004648:	2442ffff 	addiu	v0,v0,-1
8000464c:	ae22003c 	sw	v0,60(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80004650:	0c006cba 	jal	8001b2e8 <intr_enable>
80004654:	00000000 	nop
80004658:	08001172 	j	800045c8 <inode_ref_dec+0x38>
8000465c:	00000000 	nop
inode_ref_dec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:69
int inode_ref_dec(struct inode *node)
{
	assert(inode_ref_count(node) > 0);
	int ref_count, ret;
	if ((ref_count = atomic_sub_return(&(node->ref_count), 1)) == 0) {
		if ((ret = vop_reclaim(node)) != 0 && ret != -E_BUSY) {
80004660:	3c068002 	lui	a2,0x8002
80004664:	3c078002 	lui	a3,0x8002
80004668:	24841ba4 	addiu	a0,a0,7076
8000466c:	24050045 	li	a1,69
80004670:	24c609b0 	addiu	a2,a2,2480
80004674:	0c006afd 	jal	8001abf4 <__panic>
80004678:	24e712a4 	addiu	a3,a3,4772
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:66
 * invoked by vop_ref_dec
 * calls vop_reclaim if the ref_count hits zero
 * */
int inode_ref_dec(struct inode *node)
{
	assert(inode_ref_count(node) > 0);
8000467c:	3c048002 	lui	a0,0x8002
80004680:	3c068002 	lui	a2,0x8002
80004684:	3c078002 	lui	a3,0x8002
80004688:	24841ba4 	addiu	a0,a0,7076
8000468c:	24050042 	li	a1,66
80004690:	24c609b0 	addiu	a2,a2,2480
80004694:	0c006afd 	jal	8001abf4 <__panic>
80004698:	24e71288 	addiu	a3,a3,4744

8000469c <null_vop_pass>:
null_vop_pass():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:122
 * null_vop_* - null vop functions
 * */
int null_vop_pass(void)
{
	return 0;
}
8000469c:	03e00008 	jr	ra
800046a0:	00001021 	move	v0,zero

800046a4 <null_vop_inval>:
null_vop_inval():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:127

int null_vop_inval(void)
{
	return -E_INVAL;
}
800046a4:	03e00008 	jr	ra
800046a8:	2402ffea 	li	v0,-22

800046ac <null_vop_unimp>:
null_vop_unimp():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:132

int null_vop_unimp(void)
{
	return -E_UNIMP;
}
800046ac:	03e00008 	jr	ra
800046b0:	2402ffdd 	li	v0,-35

800046b4 <null_vop_isdir>:
null_vop_isdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:137

int null_vop_isdir(void)
{
	return -E_ISDIR;
}
800046b4:	03e00008 	jr	ra
800046b8:	2402ffeb 	li	v0,-21

800046bc <null_vop_notdir>:
null_vop_notdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/inode.c:142

int null_vop_notdir(void)
{
	return -E_NOTDIR;
}
800046bc:	03e00008 	jr	ra
800046c0:	2402ffec 	li	v0,-20

800046c4 <__alloc_fs>:
__alloc_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:16
static struct inode *bootfs_node = NULL;

extern void vfs_devlist_init(void);

struct fs *__alloc_fs(int type)
{
800046c4:	27bdffe8 	addiu	sp,sp,-24
800046c8:	afb00010 	sw	s0,16(sp)
800046cc:	00808021 	move	s0,a0
800046d0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:18
	struct fs *fs;
	if ((fs = kmalloc(sizeof(struct fs))) != NULL) {
800046d4:	0c005478 	jal	800151e0 <kmalloc>
800046d8:	24040098 	li	a0,152
800046dc:	54400001 	bnezl	v0,800046e4 <__alloc_fs+0x20>
800046e0:	ac500084 	sw	s0,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:22
		fs->fs_type = type;
	}
	return fs;
}
800046e4:	8fbf0014 	lw	ra,20(sp)
800046e8:	8fb00010 	lw	s0,16(sp)
800046ec:	03e00008 	jr	ra
800046f0:	27bd0018 	addiu	sp,sp,24

800046f4 <vfs_set_bootfs>:
vfs_set_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:66
 * pathnames starting with /.
 *
 * It is also incidentally the system's first current directory.
 */
int vfs_set_bootfs(char *fsname)
{
800046f4:	27bdffd8 	addiu	sp,sp,-40
800046f8:	afb00018 	sw	s0,24(sp)
800046fc:	afbf0024 	sw	ra,36(sp)
80004700:	afb20020 	sw	s2,32(sp)
80004704:	afb1001c 	sw	s1,28(sp)
80004708:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:68
	struct inode *node = NULL;
	if (fsname != NULL) {
8000470c:	1080002c 	beqz	a0,800047c0 <vfs_set_bootfs+0xcc>
80004710:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:70
		char *s;
		if ((s = strchr(fsname, ':')) == NULL || s[1] != '\0') {
80004714:	0c005bd1 	jal	80016f44 <strchr>
80004718:	2405003a 	li	a1,58
8000471c:	10400008 	beqz	v0,80004740 <vfs_set_bootfs+0x4c>
80004720:	2411ffea 	li	s1,-22
80004724:	90420001 	lbu	v0,1(v0)
80004728:	14400006 	bnez	v0,80004744 <vfs_set_bootfs+0x50>
8000472c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:74
			return -E_INVAL;
		}
		int ret;
		if ((ret = vfs_chdir(fsname)) != 0) {
80004730:	0c001815 	jal	80006054 <vfs_chdir>
80004734:	02002021 	move	a0,s0
80004738:	10400008 	beqz	v0,8000475c <vfs_set_bootfs+0x68>
8000473c:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:83
			return ret;
		}
	}
	change_bootfs(node);
	return 0;
}
80004740:	8fbf0024 	lw	ra,36(sp)
80004744:	02201021 	move	v0,s1
80004748:	8fb20020 	lw	s2,32(sp)
8000474c:	8fb1001c 	lw	s1,28(sp)
80004750:	8fb00018 	lw	s0,24(sp)
80004754:	03e00008 	jr	ra
80004758:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:77
		}
		int ret;
		if ((ret = vfs_chdir(fsname)) != 0) {
			return ret;
		}
		if ((ret = vfs_get_curdir(&node)) != 0) {
8000475c:	0c00179f 	jal	80005e7c <vfs_get_curdir>
80004760:	27a40010 	addiu	a0,sp,16
80004764:	1440fff6 	bnez	v0,80004740 <vfs_set_bootfs+0x4c>
80004768:	00408821 	move	s1,v0
8000476c:	8fb10010 	lw	s1,16(sp)
lock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:33
	file_system_type_list_init();
}

static void lock_bootfs(void)
{
	down(&bootfs_sem);
80004770:	3c108015 	lui	s0,0x8015
80004774:	0c006711 	jal	80019c44 <down>
80004778:	260444e8 	addiu	a0,s0,17640
change_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:49
static void change_bootfs(struct inode *node)
{
	struct inode *old;
	lock_bootfs();
	{
		old = bootfs_node, bootfs_node = node;
8000477c:	3c028015 	lui	v0,0x8015
80004780:	8c5244fc 	lw	s2,17660(v0)
unlock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
80004784:	260444e8 	addiu	a0,s0,17640
change_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:49
static void change_bootfs(struct inode *node)
{
	struct inode *old;
	lock_bootfs();
	{
		old = bootfs_node, bootfs_node = node;
80004788:	ac5144fc 	sw	s1,17660(v0)
unlock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
8000478c:	0c00670f 	jal	80019c3c <up>
80004790:	00008821 	move	s1,zero
change_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:52
	lock_bootfs();
	{
		old = bootfs_node, bootfs_node = node;
	}
	unlock_bootfs();
	if (old != NULL) {
80004794:	1240ffeb 	beqz	s2,80004744 <vfs_set_bootfs+0x50>
80004798:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:53
		vop_ref_dec(old);
8000479c:	0c001164 	jal	80004590 <inode_ref_dec>
800047a0:	02402021 	move	a0,s2
vfs_set_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:83
			return ret;
		}
	}
	change_bootfs(node);
	return 0;
}
800047a4:	8fbf0024 	lw	ra,36(sp)
800047a8:	02201021 	move	v0,s1
800047ac:	8fb20020 	lw	s2,32(sp)
800047b0:	8fb1001c 	lw	s1,28(sp)
800047b4:	8fb00018 	lw	s0,24(sp)
800047b8:	03e00008 	jr	ra
800047bc:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:68
 * It is also incidentally the system's first current directory.
 */
int vfs_set_bootfs(char *fsname)
{
	struct inode *node = NULL;
	if (fsname != NULL) {
800047c0:	080011dc 	j	80004770 <vfs_set_bootfs+0x7c>
800047c4:	00008821 	move	s1,zero

800047c8 <vfs_get_bootfs>:
vfs_get_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:89

/*
 * Get bootfs_inode.
 */
int vfs_get_bootfs(struct inode **node_store)
{
800047c8:	27bdffd8 	addiu	sp,sp,-40
800047cc:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:91
	struct inode *node = NULL;
	if (bootfs_node != NULL) {
800047d0:	3c108015 	lui	s0,0x8015
800047d4:	8e0344fc 	lw	v1,17660(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:89

/*
 * Get bootfs_inode.
 */
int vfs_get_bootfs(struct inode **node_store)
{
800047d8:	afb20020 	sw	s2,32(sp)
800047dc:	afbf0024 	sw	ra,36(sp)
800047e0:	afb1001c 	sw	s1,28(sp)
800047e4:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:91
	struct inode *node = NULL;
	if (bootfs_node != NULL) {
800047e8:	1060000e 	beqz	v1,80004824 <vfs_get_bootfs+0x5c>
800047ec:	2402fffe 	li	v0,-2
lock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:33
	file_system_type_list_init();
}

static void lock_bootfs(void)
{
	down(&bootfs_sem);
800047f0:	3c118015 	lui	s1,0x8015
800047f4:	262444e8 	addiu	a0,s1,17640
800047f8:	0c006711 	jal	80019c44 <down>
800047fc:	afa20010 	sw	v0,16(sp)
vfs_get_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:94
{
	struct inode *node = NULL;
	if (bootfs_node != NULL) {
		lock_bootfs();
		{
			if ((node = bootfs_node) != NULL) {
80004800:	8e1044fc 	lw	s0,17660(s0)
80004804:	1200000d 	beqz	s0,8000483c <vfs_get_bootfs+0x74>
80004808:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:95
				vop_ref_inc(bootfs_node);
8000480c:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80004810:	02002021 	move	a0,s0
unlock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
80004814:	0c00670f 	jal	80019c3c <up>
80004818:	262444e8 	addiu	a0,s1,17640
vfs_get_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:104
	}
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
	return 0;
8000481c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:103
		unlock_bootfs();
	}
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
80004820:	ae500000 	sw	s0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:105
	return 0;
}
80004824:	8fbf0024 	lw	ra,36(sp)
80004828:	8fb20020 	lw	s2,32(sp)
8000482c:	8fb1001c 	lw	s1,28(sp)
80004830:	8fb00018 	lw	s0,24(sp)
80004834:	03e00008 	jr	ra
80004838:	27bd0028 	addiu	sp,sp,40
unlock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
8000483c:	262444e8 	addiu	a0,s1,17640
80004840:	0c00670f 	jal	80019c3c <up>
80004844:	afa20010 	sw	v0,16(sp)
vfs_get_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:105
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
	return 0;
}
80004848:	8fbf0024 	lw	ra,36(sp)
unlock_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
8000484c:	8fa20010 	lw	v0,16(sp)
vfs_get_bootfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:105
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
	return 0;
}
80004850:	8fb20020 	lw	s2,32(sp)
80004854:	8fb1001c 	lw	s1,28(sp)
80004858:	8fb00018 	lw	s0,24(sp)
8000485c:	03e00008 	jr	ra
80004860:	27bd0028 	addiu	sp,sp,40

80004864 <file_system_type_list_init>:
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80004864:	3c038015 	lui	v1,0x8015
file_system_type_list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:139
}

void file_system_type_list_init(void)
{
	list_init(&file_system_type_list);
	sem_init(&file_system_type_sem, 1);
80004868:	3c048015 	lui	a0,0x8015
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8000486c:	24624500 	addiu	v0,v1,17664
file_system_type_list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:139
80004870:	24844508 	addiu	a0,a0,17672
80004874:	24050001 	li	a1,1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80004878:	ac420004 	sw	v0,4(v0)
file_system_type_list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:139
8000487c:	08006709 	j	80019c24 <sem_init>
80004880:	ac624500 	sw	v0,17664(v1)

80004884 <vfs_init>:
vfs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:26
	return fs;
}

void vfs_init(void)
{
	sem_init(&bootfs_sem, 1);
80004884:	3c048015 	lui	a0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:25
	}
	return fs;
}

void vfs_init(void)
{
80004888:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:26
	sem_init(&bootfs_sem, 1);
8000488c:	248444e8 	addiu	a0,a0,17640
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:25
	}
	return fs;
}

void vfs_init(void)
{
80004890:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:26
	sem_init(&bootfs_sem, 1);
80004894:	0c006709 	jal	80019c24 <sem_init>
80004898:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:27
	vfs_devlist_init();
8000489c:	0c001394 	jal	80004e50 <vfs_devlist_init>
800048a0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:29
	file_system_type_list_init();
}
800048a4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:28

void vfs_init(void)
{
	sem_init(&bootfs_sem, 1);
	vfs_devlist_init();
	file_system_type_list_init();
800048a8:	08001219 	j	80004864 <file_system_type_list_init>
800048ac:	27bd0018 	addiu	sp,sp,24

800048b0 <register_filesystem>:
register_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:143
	list_init(&file_system_type_list);
	sem_init(&file_system_type_sem, 1);
}

int register_filesystem(const char *name, int (*mount) (const char *devname))
{
800048b0:	27bdffd0 	addiu	sp,sp,-48
800048b4:	afb50028 	sw	s5,40(sp)
800048b8:	afb00014 	sw	s0,20(sp)
800048bc:	afbf002c 	sw	ra,44(sp)
800048c0:	afb40024 	sw	s4,36(sp)
800048c4:	afb30020 	sw	s3,32(sp)
800048c8:	afb2001c 	sw	s2,28(sp)
800048cc:	afb10018 	sw	s1,24(sp)
800048d0:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:144
	assert(name != NULL);
800048d4:	10800042 	beqz	a0,800049e0 <register_filesystem+0x130>
800048d8:	00a0a821 	move	s5,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:145
	if (strlen(name) > FS_MAX_DNAME_LEN) {
800048dc:	0c005b6b 	jal	80016dac <strlen>
800048e0:	2412ffe5 	li	s2,-27
800048e4:	2c420020 	sltiu	v0,v0,32
800048e8:	10400020 	beqz	v0,8000496c <register_filesystem+0xbc>
800048ec:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:151
		return -E_TOO_BIG;
	}

	int ret = -E_NO_MEM;
	char *s_name;
	if ((s_name = strdup(name)) == NULL) {
800048f0:	0c005909 	jal	80016424 <strdup>
800048f4:	02002021 	move	a0,s0
800048f8:	00408821 	move	s1,v0
800048fc:	1040001a 	beqz	v0,80004968 <register_filesystem+0xb8>
80004900:	2412fff4 	li	s2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:156
		return ret;
	}

	struct file_system_type *fstype;
	if ((fstype = kmalloc(sizeof(struct file_system_type))) == NULL) {
80004904:	0c005478 	jal	800151e0 <kmalloc>
80004908:	24040010 	li	a0,16
8000490c:	10400014 	beqz	v0,80004960 <register_filesystem+0xb0>
80004910:	00409821 	move	s3,v0
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004914:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:125
	up(&file_system_type_sem);
}

static bool check_file_system_type_name_conflict(const char *name)
{
	list_entry_t *list = &file_system_type_list, *le = list;
80004918:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
8000491c:	26844508 	addiu	a0,s4,17672
80004920:	0c006711 	jal	80019c44 <down>
80004924:	26524500 	addiu	s2,s2,17664
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:125
	up(&file_system_type_sem);
}

static bool check_file_system_type_name_conflict(const char *name)
{
	list_entry_t *list = &file_system_type_list, *le = list;
80004928:	02408021 	move	s0,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000492c:	8e100004 	lw	s0,4(s0)
check_file_system_type_name_conflict():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:126
	while ((le = list_next(le)) != list) {
80004930:	52120017 	beql	s0,s2,80004990 <register_filesystem+0xe0>
80004934:	8e030004 	lw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:129
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, name) == 0) {
80004938:	8e04fff8 	lw	a0,-8(s0)
8000493c:	0c005baa 	jal	80016ea8 <strcmp>
80004940:	02202821 	move	a1,s1
80004944:	5440fffa 	bnezl	v0,80004930 <register_filesystem+0x80>
80004948:	8e100004 	lw	s0,4(s0)
unlock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
8000494c:	0c00670f 	jal	80019c3c <up>
80004950:	26844508 	addiu	a0,s4,17672
register_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:174
	list_add(&file_system_type_list, &(fstype->file_system_type_link));
	unlock_file_system_type_list();
	return 0;

failed_cleanup_fstype:
	kfree(fstype);
80004954:	0c0054a3 	jal	8001528c <kfree>
80004958:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:160
	struct file_system_type *fstype;
	if ((fstype = kmalloc(sizeof(struct file_system_type))) == NULL) {
		goto failed_cleanup_name;
	}

	ret = -E_EXISTS;
8000495c:	2412ffef 	li	s2,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:176
	return 0;

failed_cleanup_fstype:
	kfree(fstype);
failed_cleanup_name:
	kfree(s_name);
80004960:	0c0054a3 	jal	8001528c <kfree>
80004964:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:178
	return ret;
}
80004968:	8fbf002c 	lw	ra,44(sp)
8000496c:	02401021 	move	v0,s2
80004970:	8fb50028 	lw	s5,40(sp)
80004974:	8fb40024 	lw	s4,36(sp)
80004978:	8fb30020 	lw	s3,32(sp)
8000497c:	8fb2001c 	lw	s2,28(sp)
80004980:	8fb10018 	lw	s1,24(sp)
80004984:	8fb00014 	lw	s0,20(sp)
80004988:	03e00008 	jr	ra
8000498c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:169
		goto failed_cleanup_fstype;
	}
	fstype->name = s_name;
	fstype->mount = mount;

	list_add(&file_system_type_list, &(fstype->file_system_type_link));
80004990:	26620008 	addiu	v0,s3,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:166
	lock_file_system_type_list();
	if (!check_file_system_type_name_conflict(s_name)) {
		unlock_file_system_type_list();
		goto failed_cleanup_fstype;
	}
	fstype->name = s_name;
80004994:	ae710000 	sw	s1,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:167
	fstype->mount = mount;
80004998:	ae750004 	sw	s5,4(s3)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8000499c:	ae63000c 	sw	v1,12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800049a0:	ac620000 	sw	v0,0(v1)
800049a4:	ae020004 	sw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
800049a8:	ae700008 	sw	s0,8(s3)
unlock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
800049ac:	0c00670f 	jal	80019c3c <up>
800049b0:	26844508 	addiu	a0,s4,17672
register_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:178
failed_cleanup_fstype:
	kfree(fstype);
failed_cleanup_name:
	kfree(s_name);
	return ret;
}
800049b4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:171
	fstype->name = s_name;
	fstype->mount = mount;

	list_add(&file_system_type_list, &(fstype->file_system_type_link));
	unlock_file_system_type_list();
	return 0;
800049b8:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:178
failed_cleanup_fstype:
	kfree(fstype);
failed_cleanup_name:
	kfree(s_name);
	return ret;
}
800049bc:	02401021 	move	v0,s2
800049c0:	8fb50028 	lw	s5,40(sp)
800049c4:	8fb40024 	lw	s4,36(sp)
800049c8:	8fb30020 	lw	s3,32(sp)
800049cc:	8fb2001c 	lw	s2,28(sp)
800049d0:	8fb10018 	lw	s1,24(sp)
800049d4:	8fb00014 	lw	s0,20(sp)
800049d8:	03e00008 	jr	ra
800049dc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:144
	sem_init(&file_system_type_sem, 1);
}

int register_filesystem(const char *name, int (*mount) (const char *devname))
{
	assert(name != NULL);
800049e0:	3c048002 	lui	a0,0x8002
800049e4:	3c068002 	lui	a2,0x8002
800049e8:	3c078002 	lui	a3,0x8002
800049ec:	24841320 	addiu	a0,a0,4896
800049f0:	24050090 	li	a1,144
800049f4:	24c609b0 	addiu	a2,a2,2480
800049f8:	0c006afd 	jal	8001abf4 <__panic>
800049fc:	24e71328 	addiu	a3,a3,4904

80004a00 <unregister_filesystem>:
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a00:	27bdffd0 	addiu	sp,sp,-48
80004a04:	afb40028 	sw	s4,40(sp)
80004a08:	afb1001c 	sw	s1,28(sp)
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004a0c:	3c148015 	lui	s4,0x8015
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:184

int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004a10:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a14:	afb20020 	sw	s2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:184
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004a18:	26314500 	addiu	s1,s1,17664
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a1c:	00809021 	move	s2,a0
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004a20:	26844508 	addiu	a0,s4,17672
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a24:	afb00018 	sw	s0,24(sp)
80004a28:	afbf002c 	sw	ra,44(sp)
80004a2c:	afb30024 	sw	s3,36(sp)
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004a30:	0c006711 	jal	80019c44 <down>
80004a34:	02208021 	move	s0,s1
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:185
int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004a38:	08001295 	j	80004a54 <unregister_filesystem+0x54>
80004a3c:	8e100004 	lw	s0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:188
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, name) == 0) {
80004a40:	0c005baa 	jal	80016ea8 <strcmp>
80004a44:	8e04fff8 	lw	a0,-8(s0)
80004a48:	50400012 	beqzl	v0,80004a94 <unregister_filesystem+0x94>
80004a4c:	8e050000 	lw	a1,0(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004a50:	8e100004 	lw	s0,4(s0)
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:188
80004a54:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:185
int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004a58:	1611fff9 	bne	s0,s1,80004a40 <unregister_filesystem+0x40>
80004a5c:	2613fff8 	addiu	s3,s0,-8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:182
	return ret;
}

int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
80004a60:	2402ffef 	li	v0,-17
unlock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004a64:	26844508 	addiu	a0,s4,17672
80004a68:	0c00670f 	jal	80019c3c <up>
80004a6c:	afa20010 	sw	v0,16(sp)
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:199
		}
	}

	unlock_file_system_type_list();
	return ret;
}
80004a70:	8fbf002c 	lw	ra,44(sp)
80004a74:	8fa20010 	lw	v0,16(sp)
80004a78:	8fb40028 	lw	s4,40(sp)
80004a7c:	8fb30024 	lw	s3,36(sp)
80004a80:	8fb20020 	lw	s2,32(sp)
80004a84:	8fb1001c 	lw	s1,28(sp)
80004a88:	8fb00018 	lw	s0,24(sp)
80004a8c:	03e00008 	jr	ra
80004a90:	27bd0030 	addiu	sp,sp,48
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80004a94:	8e030004 	lw	v1,4(s0)
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:190
	while ((le = list_next(le)) != list) {
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, name) == 0) {
			list_del(le);
			kfree((char *)fstype->name);
80004a98:	8e04fff8 	lw	a0,-8(s0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80004a9c:	aca30004 	sw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80004aa0:	ac650000 	sw	a1,0(v1)
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:190
80004aa4:	0c0054a3 	jal	8001528c <kfree>
80004aa8:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:191
			kfree(fstype);
80004aac:	0c0054a3 	jal	8001528c <kfree>
80004ab0:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:193
			ret = 0;
			break;
80004ab4:	8fa20010 	lw	v0,16(sp)
unlock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004ab8:	26844508 	addiu	a0,s4,17672
80004abc:	0c00670f 	jal	80019c3c <up>
80004ac0:	afa20010 	sw	v0,16(sp)
unregister_filesystem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:199
		}
	}

	unlock_file_system_type_list();
	return ret;
}
80004ac4:	8fbf002c 	lw	ra,44(sp)
80004ac8:	8fa20010 	lw	v0,16(sp)
80004acc:	8fb40028 	lw	s4,40(sp)
80004ad0:	8fb30024 	lw	s3,36(sp)
80004ad4:	8fb20020 	lw	s2,32(sp)
80004ad8:	8fb1001c 	lw	s1,28(sp)
80004adc:	8fb00018 	lw	s0,24(sp)
80004ae0:	03e00008 	jr	ra
80004ae4:	27bd0030 	addiu	sp,sp,48

80004ae8 <do_mount>:
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:202

int do_mount(const char *devname, const char *fsname)
{
80004ae8:	27bdffd0 	addiu	sp,sp,-48
80004aec:	afb30024 	sw	s3,36(sp)
80004af0:	afb1001c 	sw	s1,28(sp)
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004af4:	3c138015 	lui	s3,0x8015
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:205

int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004af8:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:202
	unlock_file_system_type_list();
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
80004afc:	afb40028 	sw	s4,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:205
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004b00:	26314500 	addiu	s1,s1,17664
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:202
	unlock_file_system_type_list();
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
80004b04:	0080a021 	move	s4,a0
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004b08:	26644508 	addiu	a0,s3,17672
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:202
	unlock_file_system_type_list();
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
80004b0c:	afb20020 	sw	s2,32(sp)
80004b10:	afb00018 	sw	s0,24(sp)
80004b14:	afbf002c 	sw	ra,44(sp)
80004b18:	00a09021 	move	s2,a1
lock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004b1c:	0c006711 	jal	80019c44 <down>
80004b20:	02208021 	move	s0,s1
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:206
int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004b24:	080012d0 	j	80004b40 <do_mount+0x58>
80004b28:	8e100004 	lw	s0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:209
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, fsname) == 0) {
80004b2c:	0c005baa 	jal	80016ea8 <strcmp>
80004b30:	02402821 	move	a1,s2
80004b34:	50400011 	beqzl	v0,80004b7c <do_mount+0x94>
80004b38:	8e02fffc 	lw	v0,-4(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004b3c:	8e100004 	lw	s0,4(s0)
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:206
int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004b40:	5611fffa 	bnel	s0,s1,80004b2c <do_mount+0x44>
80004b44:	8e04fff8 	lw	a0,-8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:203
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
80004b48:	2402ffef 	li	v0,-17
unlock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004b4c:	26644508 	addiu	a0,s3,17672
80004b50:	0c00670f 	jal	80019c3c <up>
80004b54:	afa20010 	sw	v0,16(sp)
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:217
			break;
		}
	}
	unlock_file_system_type_list();
	return ret;
}
80004b58:	8fbf002c 	lw	ra,44(sp)
80004b5c:	8fa20010 	lw	v0,16(sp)
80004b60:	8fb40028 	lw	s4,40(sp)
80004b64:	8fb30024 	lw	s3,36(sp)
80004b68:	8fb20020 	lw	s2,32(sp)
80004b6c:	8fb1001c 	lw	s1,28(sp)
80004b70:	8fb00018 	lw	s0,24(sp)
80004b74:	03e00008 	jr	ra
80004b78:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:210
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, fsname) == 0) {
			assert(fstype->mount);
80004b7c:	1040000f 	beqz	v0,80004bbc <do_mount+0xd4>
80004b80:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:211
			ret = (fstype->mount) (devname);
80004b84:	0040f809 	jalr	v0
80004b88:	02802021 	move	a0,s4
unlock_file_system_type_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004b8c:	26644508 	addiu	a0,s3,17672
80004b90:	0c00670f 	jal	80019c3c <up>
80004b94:	afa20010 	sw	v0,16(sp)
do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:217
			break;
		}
	}
	unlock_file_system_type_list();
	return ret;
}
80004b98:	8fbf002c 	lw	ra,44(sp)
80004b9c:	8fa20010 	lw	v0,16(sp)
80004ba0:	8fb40028 	lw	s4,40(sp)
80004ba4:	8fb30024 	lw	s3,36(sp)
80004ba8:	8fb20020 	lw	s2,32(sp)
80004bac:	8fb1001c 	lw	s1,28(sp)
80004bb0:	8fb00018 	lw	s0,24(sp)
80004bb4:	03e00008 	jr	ra
80004bb8:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:210
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, fsname) == 0) {
			assert(fstype->mount);
80004bbc:	3c068002 	lui	a2,0x8002
80004bc0:	3c078002 	lui	a3,0x8002
80004bc4:	24841320 	addiu	a0,a0,4896
80004bc8:	240500d2 	li	a1,210
80004bcc:	24c609b0 	addiu	a2,a2,2480
80004bd0:	0c006afd 	jal	8001abf4 <__panic>
80004bd4:	24e71338 	addiu	a3,a3,4920

80004bd8 <do_umount>:
do_umount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfs.c:221
	return ret;
}

int do_umount(const char *devname)
{
	return vfs_unmount(devname);
80004bd8:	08001487 	j	8000521c <vfs_unmount>
80004bdc:	00000000 	nop

80004be0 <lock_vdev_list>:
lock_vdev_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:54
static list_entry_t vdev_list;
static semaphore_t vdev_list_sem;

static void lock_vdev_list(void)
{
	down(&vdev_list_sem);
80004be0:	3c048015 	lui	a0,0x8015
80004be4:	08006711 	j	80019c44 <down>
80004be8:	24844524 	addiu	a0,a0,17700

80004bec <unlock_vdev_list>:
unlock_vdev_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:59
}

static void unlock_vdev_list(void)
{
	up(&vdev_list_sem);
80004bec:	3c048015 	lui	a0,0x8015
80004bf0:	0800670f 	j	80019c3c <up>
80004bf4:	24844524 	addiu	a0,a0,17700

80004bf8 <vfs_do_add>:
vfs_do_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:211
 * to have a filesystem mounted on it.
 */
static int
vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs,
	   bool mountable)
{
80004bf8:	27bdffd0 	addiu	sp,sp,-48
80004bfc:	afb60028 	sw	s6,40(sp)
80004c00:	afb20018 	sw	s2,24(sp)
80004c04:	afb10014 	sw	s1,20(sp)
80004c08:	afb00010 	sw	s0,16(sp)
80004c0c:	afbf002c 	sw	ra,44(sp)
80004c10:	afb50024 	sw	s5,36(sp)
80004c14:	afb40020 	sw	s4,32(sp)
80004c18:	afb3001c 	sw	s3,28(sp)
80004c1c:	00808021 	move	s0,a0
80004c20:	00a08821 	move	s1,a1
80004c24:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:212
	assert(devname != NULL);
80004c28:	10800050 	beqz	a0,80004d6c <vfs_do_add+0x174>
80004c2c:	00e0b021 	move	s6,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:213
	assert((devnode == NULL && !mountable)
80004c30:	10a00045 	beqz	a1,80004d48 <vfs_do_add+0x150>
80004c34:	24021234 	li	v0,4660
80004c38:	8ca30038 	lw	v1,56(a1)
80004c3c:	14620044 	bne	v1,v0,80004d50 <vfs_do_add+0x158>
80004c40:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:215
	       || (devnode != NULL && check_inode_type(devnode, device)));
	if (strlen(devname) > FS_MAX_DNAME_LEN) {
80004c44:	0c005b6b 	jal	80016dac <strlen>
80004c48:	02002021 	move	a0,s0
80004c4c:	2c420020 	sltiu	v0,v0,32
80004c50:	1040001c 	beqz	v0,80004cc4 <vfs_do_add+0xcc>
80004c54:	2414ffe5 	li	s4,-27
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:221
		return -E_TOO_BIG;
	}

	int ret = -E_NO_MEM;
	char *s_devname;
	if ((s_devname = strdup(devname)) == NULL) {
80004c58:	0c005909 	jal	80016424 <strdup>
80004c5c:	02002021 	move	a0,s0
80004c60:	00409821 	move	s3,v0
80004c64:	10400017 	beqz	v0,80004cc4 <vfs_do_add+0xcc>
80004c68:	2414fff4 	li	s4,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:226
		return ret;
	}

	vfs_dev_t *vdev;
	if ((vdev = kmalloc(sizeof(vfs_dev_t))) == NULL) {
80004c6c:	0c005478 	jal	800151e0 <kmalloc>
80004c70:	24040018 	li	a0,24
80004c74:	10400011 	beqz	v0,80004cbc <vfs_do_add+0xc4>
80004c78:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:192
	return NULL;
}

static bool check_devname_conflict(const char *devname)
{
	list_entry_t *list = &vdev_list, *le = list;
80004c7c:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:231
	if ((vdev = kmalloc(sizeof(vfs_dev_t))) == NULL) {
		goto failed_cleanup_name;
	}

	ret = -E_EXISTS;
	lock_vdev_list();
80004c80:	0c0012f8 	jal	80004be0 <lock_vdev_list>
80004c84:	2694451c 	addiu	s4,s4,17692
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:192
	return NULL;
}

static bool check_devname_conflict(const char *devname)
{
	list_entry_t *list = &vdev_list, *le = list;
80004c88:	02808021 	move	s0,s4
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80004c8c:	8e100004 	lw	s0,4(s0)
check_devname_conflict():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:193
	while ((le = list_next(le)) != list) {
80004c90:	52140017 	beql	s0,s4,80004cf0 <vfs_do_add+0xf8>
80004c94:	8e020004 	lw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:195
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (strcmp(vdev->devname, devname) == 0) {
80004c98:	8e04fff0 	lw	a0,-16(s0)
80004c9c:	0c005baa 	jal	80016ea8 <strcmp>
80004ca0:	02602821 	move	a1,s3
80004ca4:	5440fffa 	bnezl	v0,80004c90 <vfs_do_add+0x98>
80004ca8:	8e100004 	lw	s0,4(s0)
vfs_do_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:233
	}

	ret = -E_EXISTS;
	lock_vdev_list();
	if (!check_devname_conflict(s_devname)) {
		unlock_vdev_list();
80004cac:	0c0012fb 	jal	80004bec <unlock_vdev_list>
80004cb0:	2414ffef 	li	s4,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:246
	list_add(&vdev_list, &(vdev->vdev_link));
	unlock_vdev_list();
	return 0;

failed_cleanup_vdev:
	kfree(vdev);
80004cb4:	0c0054a3 	jal	8001528c <kfree>
80004cb8:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:248
failed_cleanup_name:
	kfree(s_devname);
80004cbc:	0c0054a3 	jal	8001528c <kfree>
80004cc0:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:250
	return ret;
}
80004cc4:	8fbf002c 	lw	ra,44(sp)
80004cc8:	02801021 	move	v0,s4
80004ccc:	8fb60028 	lw	s6,40(sp)
80004cd0:	8fb50024 	lw	s5,36(sp)
80004cd4:	8fb40020 	lw	s4,32(sp)
80004cd8:	8fb3001c 	lw	s3,28(sp)
80004cdc:	8fb20018 	lw	s2,24(sp)
80004ce0:	8fb10014 	lw	s1,20(sp)
80004ce4:	8fb00010 	lw	s0,16(sp)
80004ce8:	03e00008 	jr	ra
80004cec:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:241
	vdev->devname = s_devname;
	vdev->devnode = devnode;
	vdev->mountable = mountable;
	vdev->fs = fs;

	list_add(&vdev_list, &(vdev->vdev_link));
80004cf0:	26a30010 	addiu	v1,s5,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:236
	lock_vdev_list();
	if (!check_devname_conflict(s_devname)) {
		unlock_vdev_list();
		goto failed_cleanup_vdev;
	}
	vdev->devname = s_devname;
80004cf4:	aeb30000 	sw	s3,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:237
	vdev->devnode = devnode;
80004cf8:	aeb10004 	sw	s1,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:238
	vdev->mountable = mountable;
80004cfc:	aeb6000c 	sw	s6,12(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:239
	vdev->fs = fs;
80004d00:	aeb20008 	sw	s2,8(s5)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80004d04:	aea20014 	sw	v0,20(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80004d08:	ac430000 	sw	v1,0(v0)
80004d0c:	ae030004 	sw	v1,4(s0)
vfs_do_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:242

	list_add(&vdev_list, &(vdev->vdev_link));
	unlock_vdev_list();
80004d10:	0c0012fb 	jal	80004bec <unlock_vdev_list>
80004d14:	aeb00010 	sw	s0,16(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:250
failed_cleanup_vdev:
	kfree(vdev);
failed_cleanup_name:
	kfree(s_devname);
	return ret;
}
80004d18:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:243
	vdev->mountable = mountable;
	vdev->fs = fs;

	list_add(&vdev_list, &(vdev->vdev_link));
	unlock_vdev_list();
	return 0;
80004d1c:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:250
failed_cleanup_vdev:
	kfree(vdev);
failed_cleanup_name:
	kfree(s_devname);
	return ret;
}
80004d20:	02801021 	move	v0,s4
80004d24:	8fb60028 	lw	s6,40(sp)
80004d28:	8fb50024 	lw	s5,36(sp)
80004d2c:	8fb40020 	lw	s4,32(sp)
80004d30:	8fb3001c 	lw	s3,28(sp)
80004d34:	8fb20018 	lw	s2,24(sp)
80004d38:	8fb10014 	lw	s1,20(sp)
80004d3c:	8fb00010 	lw	s0,16(sp)
80004d40:	03e00008 	jr	ra
80004d44:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:213
static int
vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs,
	   bool mountable)
{
	assert(devname != NULL);
	assert((devnode == NULL && !mountable)
80004d48:	10e0ffbe 	beqz	a3,80004c44 <vfs_do_add+0x4c>
80004d4c:	3c048002 	lui	a0,0x8002
80004d50:	3c068002 	lui	a2,0x8002
80004d54:	3c078002 	lui	a3,0x8002
80004d58:	24841348 	addiu	a0,a0,4936
80004d5c:	240500d6 	li	a1,214
80004d60:	24c609b0 	addiu	a2,a2,2480
80004d64:	0c006afd 	jal	8001abf4 <__panic>
80004d68:	24e71364 	addiu	a3,a3,4964
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:212
 */
static int
vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs,
	   bool mountable)
{
	assert(devname != NULL);
80004d6c:	3c048002 	lui	a0,0x8002
80004d70:	3c068002 	lui	a2,0x8002
80004d74:	3c078002 	lui	a3,0x8002
80004d78:	24841348 	addiu	a0,a0,4936
80004d7c:	240500d4 	li	a1,212
80004d80:	24c609b0 	addiu	a2,a2,2480
80004d84:	0c006afd 	jal	8001abf4 <__panic>
80004d88:	24e71354 	addiu	a3,a3,4948

80004d8c <find_mount>:
find_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:276
/*
 * Look for a mountable device named DEVNAME.
 * Should already hold an lock::vdev_list_sem.
 */
static int find_mount(const char *devname, vfs_dev_t ** vdev_store)
{
80004d8c:	27bdffd8 	addiu	sp,sp,-40
80004d90:	afb40020 	sw	s4,32(sp)
80004d94:	afb3001c 	sw	s3,28(sp)
80004d98:	afbf0024 	sw	ra,36(sp)
80004d9c:	afb20018 	sw	s2,24(sp)
80004da0:	afb10014 	sw	s1,20(sp)
80004da4:	afb00010 	sw	s0,16(sp)
80004da8:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:277
	assert(devname != NULL);
80004dac:	10800020 	beqz	a0,80004e30 <find_mount+0xa4>
80004db0:	00a0a021 	move	s4,a1
80004db4:	3c118015 	lui	s1,0x8015
80004db8:	2631451c 	addiu	s1,s1,17692
80004dbc:	02208021 	move	s0,s1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004dc0:	8e100004 	lw	s0,4(s0)
find_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:279
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
80004dc4:	12110012 	beq	s0,s1,80004e10 <find_mount+0x84>
80004dc8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:281
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (vdev->mountable && strcmp(vdev->devname, devname) == 0) {
80004dcc:	8e02fffc 	lw	v0,-4(s0)
80004dd0:	1040fffb 	beqz	v0,80004dc0 <find_mount+0x34>
80004dd4:	2612fff0 	addiu	s2,s0,-16
80004dd8:	8e04fff0 	lw	a0,-16(s0)
80004ddc:	0c005baa 	jal	80016ea8 <strcmp>
80004de0:	02602821 	move	a1,s3
80004de4:	5440fff7 	bnezl	v0,80004dc4 <find_mount+0x38>
80004de8:	8e100004 	lw	s0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:287
			*vdev_store = vdev;
			return 0;
		}
	}
	return -E_NO_DEV;
}
80004dec:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:282
	assert(devname != NULL);
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (vdev->mountable && strcmp(vdev->devname, devname) == 0) {
			*vdev_store = vdev;
80004df0:	ae920000 	sw	s2,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:287
			return 0;
		}
	}
	return -E_NO_DEV;
}
80004df4:	8fb3001c 	lw	s3,28(sp)
80004df8:	8fb40020 	lw	s4,32(sp)
80004dfc:	8fb20018 	lw	s2,24(sp)
80004e00:	8fb10014 	lw	s1,20(sp)
80004e04:	8fb00010 	lw	s0,16(sp)
80004e08:	03e00008 	jr	ra
80004e0c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:286
		if (vdev->mountable && strcmp(vdev->devname, devname) == 0) {
			*vdev_store = vdev;
			return 0;
		}
	}
	return -E_NO_DEV;
80004e10:	2402ffed 	li	v0,-19
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:287
}
80004e14:	8fb40020 	lw	s4,32(sp)
80004e18:	8fb3001c 	lw	s3,28(sp)
80004e1c:	8fb20018 	lw	s2,24(sp)
80004e20:	8fb10014 	lw	s1,20(sp)
80004e24:	8fb00010 	lw	s0,16(sp)
80004e28:	03e00008 	jr	ra
80004e2c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:277
 * Look for a mountable device named DEVNAME.
 * Should already hold an lock::vdev_list_sem.
 */
static int find_mount(const char *devname, vfs_dev_t ** vdev_store)
{
	assert(devname != NULL);
80004e30:	3c048002 	lui	a0,0x8002
80004e34:	3c068002 	lui	a2,0x8002
80004e38:	3c078002 	lui	a3,0x8002
80004e3c:	24841348 	addiu	a0,a0,4936
80004e40:	24050115 	li	a1,277
80004e44:	24c609b0 	addiu	a2,a2,2480
80004e48:	0c006afd 	jal	8001abf4 <__panic>
80004e4c:	24e71354 	addiu	a3,a3,4948

80004e50 <vfs_devlist_init>:
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80004e50:	3c038015 	lui	v1,0x8015
vfs_devlist_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:65
}

void vfs_devlist_init(void)
{
	list_init(&vdev_list);
	sem_init(&vdev_list_sem, 1);
80004e54:	3c048015 	lui	a0,0x8015
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80004e58:	2462451c 	addiu	v0,v1,17692
vfs_devlist_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:65
80004e5c:	24844524 	addiu	a0,a0,17700
80004e60:	24050001 	li	a1,1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80004e64:	ac420004 	sw	v0,4(v0)
vfs_devlist_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:65
80004e68:	08006709 	j	80019c24 <sem_init>
80004e6c:	ac62451c 	sw	v0,17692(v1)

80004e70 <vfs_cleanup>:
vfs_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:72

/*
 * clean up all FS
 */
void vfs_cleanup(void)
{
80004e70:	27bdffe0 	addiu	sp,sp,-32
80004e74:	afb10018 	sw	s1,24(sp)
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80004e78:	3c118015 	lui	s1,0x8015
80004e7c:	2631451c 	addiu	s1,s1,17692
vfs_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:73
	if (!list_empty(&vdev_list)) {
80004e80:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:72

/*
 * clean up all FS
 */
void vfs_cleanup(void)
{
80004e84:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:73
	if (!list_empty(&vdev_list)) {
80004e88:	10510014 	beq	v0,s1,80004edc <vfs_cleanup+0x6c>
80004e8c:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:74
		lock_vdev_list();
80004e90:	0c0012f8 	jal	80004be0 <lock_vdev_list>
80004e94:	02208021 	move	s0,s1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004e98:	8e100004 	lw	s0,4(s0)
vfs_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:77
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004e9c:	1211000b 	beq	s0,s1,80004ecc <vfs_cleanup+0x5c>
80004ea0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:79
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->fs != NULL) {
80004ea4:	8e02fff8 	lw	v0,-8(s0)
80004ea8:	1040fffb 	beqz	v0,80004e98 <vfs_cleanup+0x28>
80004eac:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:80
					fsop_cleanup(vdev->fs);
80004eb0:	8c420094 	lw	v0,148(v0)
80004eb4:	0040f809 	jalr	v0
80004eb8:	00000000 	nop
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80004ebc:	8e100004 	lw	s0,4(s0)
vfs_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:77
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004ec0:	5611fff9 	bnel	s0,s1,80004ea8 <vfs_cleanup+0x38>
80004ec4:	8e02fff8 	lw	v0,-8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:86
				}
			}
		}
		unlock_vdev_list();
	}
}
80004ec8:	8fbf001c 	lw	ra,28(sp)
80004ecc:	8fb10018 	lw	s1,24(sp)
80004ed0:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:84
				if (vdev->fs != NULL) {
					fsop_cleanup(vdev->fs);
				}
			}
		}
		unlock_vdev_list();
80004ed4:	080012fb 	j	80004bec <unlock_vdev_list>
80004ed8:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:86
	}
}
80004edc:	8fbf001c 	lw	ra,28(sp)
80004ee0:	8fb10018 	lw	s1,24(sp)
80004ee4:	8fb00014 	lw	s0,20(sp)
80004ee8:	03e00008 	jr	ra
80004eec:	27bd0020 	addiu	sp,sp,32

80004ef0 <vfs_sync>:
vfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:92

/*
 * Global sync function - call fsos_sync on all devices.
 */
int vfs_sync(void)
{
80004ef0:	27bdffe0 	addiu	sp,sp,-32
80004ef4:	afb10018 	sw	s1,24(sp)
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80004ef8:	3c118015 	lui	s1,0x8015
80004efc:	2631451c 	addiu	s1,s1,17692
vfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:93
	if (!list_empty(&vdev_list)) {
80004f00:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:92

/*
 * Global sync function - call fsos_sync on all devices.
 */
int vfs_sync(void)
{
80004f04:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:93
	if (!list_empty(&vdev_list)) {
80004f08:	10510011 	beq	v0,s1,80004f50 <vfs_sync+0x60>
80004f0c:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:94
		lock_vdev_list();
80004f10:	0c0012f8 	jal	80004be0 <lock_vdev_list>
80004f14:	02208021 	move	s0,s1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004f18:	8e100004 	lw	s0,4(s0)
vfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:97
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004f1c:	1211000a 	beq	s0,s1,80004f48 <vfs_sync+0x58>
80004f20:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:99
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->fs != NULL) {
80004f24:	8e02fff8 	lw	v0,-8(s0)
80004f28:	1040fffb 	beqz	v0,80004f18 <vfs_sync+0x28>
80004f2c:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:100
					fsop_sync(vdev->fs);
80004f30:	8c420088 	lw	v0,136(v0)
80004f34:	0040f809 	jalr	v0
80004f38:	00000000 	nop
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80004f3c:	8e100004 	lw	s0,4(s0)
vfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:97
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004f40:	5611fff9 	bnel	s0,s1,80004f28 <vfs_sync+0x38>
80004f44:	8e02fff8 	lw	v0,-8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:104
				if (vdev->fs != NULL) {
					fsop_sync(vdev->fs);
				}
			}
		}
		unlock_vdev_list();
80004f48:	0c0012fb 	jal	80004bec <unlock_vdev_list>
80004f4c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:107
	}
	return 0;
}
80004f50:	8fbf001c 	lw	ra,28(sp)
80004f54:	00001021 	move	v0,zero
80004f58:	8fb10018 	lw	s1,24(sp)
80004f5c:	8fb00014 	lw	s0,20(sp)
80004f60:	03e00008 	jr	ra
80004f64:	27bd0020 	addiu	sp,sp,32

80004f68 <vfs_get_root>:
vfs_get_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:114
/*
 * Given a device name (lhd0, emu0, somevolname, null, etc.), hand
 * back an appropriate inode.
 */
int vfs_get_root(const char *devname, struct inode **node_store)
{
80004f68:	27bdffd0 	addiu	sp,sp,-48
80004f6c:	afb30028 	sw	s3,40(sp)
80004f70:	afb20024 	sw	s2,36(sp)
80004f74:	afbf002c 	sw	ra,44(sp)
80004f78:	afb10020 	sw	s1,32(sp)
80004f7c:	afb0001c 	sw	s0,28(sp)
80004f80:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:115
	assert(devname != NULL);
80004f84:	1080002d 	beqz	a0,8000503c <vfs_get_root+0xd4>
80004f88:	00a09821 	move	s3,a1
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80004f8c:	3c118015 	lui	s1,0x8015
80004f90:	2631451c 	addiu	s1,s1,17692
vfs_get_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:117
	int ret = -E_NO_DEV;
	if (!list_empty(&vdev_list)) {
80004f94:	8e230004 	lw	v1,4(s1)
80004f98:	10710010 	beq	v1,s1,80004fdc <vfs_get_root+0x74>
80004f9c:	2402ffed 	li	v0,-19
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:118
		lock_vdev_list();
80004fa0:	0c0012f8 	jal	80004be0 <lock_vdev_list>
80004fa4:	02208021 	move	s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:121
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004fa8:	080013f1 	j	80004fc4 <vfs_get_root+0x5c>
80004fac:	8e100004 	lw	s0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:123
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (strcmp(devname, vdev->devname) == 0) {
80004fb0:	0c005baa 	jal	80016ea8 <strcmp>
80004fb4:	02402021 	move	a0,s2
80004fb8:	5040000f 	beqzl	v0,80004ff8 <vfs_get_root+0x90>
80004fbc:	8e04fff8 	lw	a0,-8(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004fc0:	8e100004 	lw	s0,4(s0)
vfs_get_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:121
	int ret = -E_NO_DEV;
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004fc4:	5611fffa 	bnel	s0,s1,80004fb0 <vfs_get_root+0x48>
80004fc8:	8e05fff0 	lw	a1,-16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:116
 * back an appropriate inode.
 */
int vfs_get_root(const char *devname, struct inode **node_store)
{
	assert(devname != NULL);
	int ret = -E_NO_DEV;
80004fcc:	2402ffed 	li	v0,-19
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:163
				 * any of the names of this device, so go on to the
				 * next one. 
				 */
			}
		}
		unlock_vdev_list();
80004fd0:	0c0012fb 	jal	80004bec <unlock_vdev_list>
80004fd4:	afa20010 	sw	v0,16(sp)
80004fd8:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:166
	}
	return ret;
}
80004fdc:	8fbf002c 	lw	ra,44(sp)
80004fe0:	8fb30028 	lw	s3,40(sp)
80004fe4:	8fb20024 	lw	s2,36(sp)
80004fe8:	8fb10020 	lw	s1,32(sp)
80004fec:	8fb0001c 	lw	s0,28(sp)
80004ff0:	03e00008 	jr	ra
80004ff4:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:135
					 *
					 * If it has no mounted filesystem, it's mountable,
					 * and DEVNAME names the device, return -E_NA_DEV.
					 */

					if (vdev->fs != NULL) {
80004ff8:	5080000a 	beqzl	a0,80005024 <vfs_get_root+0xbc>
80004ffc:	8e03fffc 	lw	v1,-4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:136
						found = fsop_get_root(vdev->fs);
80005000:	8c82008c 	lw	v0,140(a0)
80005004:	0040f809 	jalr	v0
80005008:	00000000 	nop
8000500c:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:141
					} else if (!vdev->mountable) {
						vop_ref_inc(vdev->devnode);
						found = vdev->devnode;
					}
					if (found != NULL) {
80005010:	1060ffef 	beqz	v1,80004fd0 <vfs_get_root+0x68>
80005014:	2402fff0 	li	v0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:147
						/*
						 * If DEVNAME names the device, and we get here, it
						 * must have no fs and not be mountable. In this case,
						 * we return the inode of device itself--node_store.
						 */
						ret = 0, *node_store = found;
80005018:	ae630000 	sw	v1,0(s3)
8000501c:	080013f4 	j	80004fd0 <vfs_get_root+0x68>
80005020:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:137
					 * and DEVNAME names the device, return -E_NA_DEV.
					 */

					if (vdev->fs != NULL) {
						found = fsop_get_root(vdev->fs);
					} else if (!vdev->mountable) {
80005024:	1460ffea 	bnez	v1,80004fd0 <vfs_get_root+0x68>
80005028:	2402fff0 	li	v0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:138
						vop_ref_inc(vdev->devnode);
8000502c:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80005030:	8e04fff4 	lw	a0,-12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:139
						found = vdev->devnode;
80005034:	08001404 	j	80005010 <vfs_get_root+0xa8>
80005038:	8e03fff4 	lw	v1,-12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:115
 * Given a device name (lhd0, emu0, somevolname, null, etc.), hand
 * back an appropriate inode.
 */
int vfs_get_root(const char *devname, struct inode **node_store)
{
	assert(devname != NULL);
8000503c:	3c048002 	lui	a0,0x8002
80005040:	3c068002 	lui	a2,0x8002
80005044:	3c078002 	lui	a3,0x8002
80005048:	24841348 	addiu	a0,a0,4936
8000504c:	24050073 	li	a1,115
80005050:	24c609b0 	addiu	a2,a2,2480
80005054:	0c006afd 	jal	8001abf4 <__panic>
80005058:	24e71354 	addiu	a3,a3,4948

8000505c <vfs_get_devname>:
vfs_get_devname():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:172

/*
 * Given a filesystem, hand back the name of the device it's mounted on.
 */
const char *vfs_get_devname(struct fs *fs)
{
8000505c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:173
	assert(fs != NULL);
80005060:	10800011 	beqz	a0,800050a8 <vfs_get_devname+0x4c>
80005064:	afbf0014 	sw	ra,20(sp)
80005068:	3c058015 	lui	a1,0x8015
8000506c:	24a5451c 	addiu	a1,a1,17692
80005070:	08001420 	j	80005080 <vfs_get_devname+0x24>
80005074:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:177
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (vdev->fs == fs) {
80005078:	10640008 	beq	v1,a0,8000509c <vfs_get_devname+0x40>
8000507c:	8fbf0014 	lw	ra,20(sp)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80005080:	8c420004 	lw	v0,4(v0)
vfs_get_devname():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:175
 */
const char *vfs_get_devname(struct fs *fs)
{
	assert(fs != NULL);
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
80005084:	5445fffc 	bnel	v0,a1,80005078 <vfs_get_devname+0x1c>
80005088:	8c43fff8 	lw	v1,-8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:188
			 */
			return vdev->devname;
		}
	}
	return NULL;
}
8000508c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:187
			 * go away until the fs goes away.
			 */
			return vdev->devname;
		}
	}
	return NULL;
80005090:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:188
}
80005094:	03e00008 	jr	ra
80005098:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:184
			 * This is not a race condition: as long as the
			 * guy calling us holds a reference to the fs,
			 * the fs cannot go away, and the device can't
			 * go away until the fs goes away.
			 */
			return vdev->devname;
8000509c:	8c42fff0 	lw	v0,-16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:188
		}
	}
	return NULL;
}
800050a0:	03e00008 	jr	ra
800050a4:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:173
/*
 * Given a filesystem, hand back the name of the device it's mounted on.
 */
const char *vfs_get_devname(struct fs *fs)
{
	assert(fs != NULL);
800050a8:	3c048002 	lui	a0,0x8002
800050ac:	3c068002 	lui	a2,0x8002
800050b0:	3c078002 	lui	a3,0x8002
800050b4:	24841348 	addiu	a0,a0,4936
800050b8:	240500ad 	li	a1,173
800050bc:	24c609b0 	addiu	a2,a2,2480
800050c0:	0c006afd 	jal	8001abf4 <__panic>
800050c4:	24e713c0 	addiu	a3,a3,5056

800050c8 <vfs_add_fs>:
vfs_add_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:259
 * This is used for emufs(not implementation???), but might also be used for network
 * filesystems and the like.
 */
int vfs_add_fs(const char *devname, struct fs *fs)
{
	return vfs_do_add(devname, NULL, fs, 0);
800050c8:	00a03021 	move	a2,a1
800050cc:	00003821 	move	a3,zero
800050d0:	080012fe 	j	80004bf8 <vfs_do_add>
800050d4:	00002821 	move	a1,zero

800050d8 <vfs_add_dev>:
vfs_add_dev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:268
 * Add a new device, by name. See above for the description of
 * mountable.
 */
int vfs_add_dev(const char *devname, struct inode *devnode, bool mountable)
{
	return vfs_do_add(devname, devnode, NULL, mountable);
800050d8:	00c03821 	move	a3,a2
800050dc:	080012fe 	j	80004bf8 <vfs_do_add>
800050e0:	00003021 	move	a2,zero

800050e4 <vfs_mount>:
vfs_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:296
 * set up the filesystem and hand back a struct fs.
 */
int
vfs_mount(const char *devname,
	  int (*mountfunc) (struct device * dev, struct fs ** fs_store))
{
800050e4:	27bdffd0 	addiu	sp,sp,-48
800050e8:	afbf002c 	sw	ra,44(sp)
800050ec:	afb10028 	sw	s1,40(sp)
800050f0:	afb00024 	sw	s0,36(sp)
800050f4:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:298
	int ret;
	lock_vdev_list();
800050f8:	0c0012f8 	jal	80004be0 <lock_vdev_list>
800050fc:	afa40018 	sw	a0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:300
	vfs_dev_t *vdev;
	if ((ret = find_mount(devname, &vdev)) != 0) {
80005100:	8fa40018 	lw	a0,24(sp)
80005104:	0c001363 	jal	80004d8c <find_mount>
80005108:	27a50010 	addiu	a1,sp,16
8000510c:	1440001c 	bnez	v0,80005180 <vfs_mount+0x9c>
80005110:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:303
		goto out;
	}
	if (vdev->fs != NULL) {
80005114:	8fa50010 	lw	a1,16(sp)
80005118:	8ca20008 	lw	v0,8(a1)
8000511c:	14400020 	bnez	v0,800051a0 <vfs_mount+0xbc>
80005120:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:307
		ret = -E_BUSY;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
80005124:	8ca20000 	lw	v0,0(a1)
80005128:	10400025 	beqz	v0,800051c0 <vfs_mount+0xdc>
8000512c:	3c048002 	lui	a0,0x8002
80005130:	8ca2000c 	lw	v0,12(a1)
80005134:	10400023 	beqz	v0,800051c4 <vfs_mount+0xe0>
80005138:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:309

	struct device *dev = vop_info(vdev->devnode, device);
8000513c:	8ca40004 	lw	a0,4(a1)
80005140:	10800026 	beqz	a0,800051dc <vfs_mount+0xf8>
80005144:	24021234 	li	v0,4660
80005148:	8c830038 	lw	v1,56(a0)
8000514c:	54620025 	bnel	v1,v0,800051e4 <vfs_mount+0x100>
80005150:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:310
	if ((ret = mountfunc(dev, &(vdev->fs))) == 0) {
80005154:	0220f809 	jalr	s1
80005158:	24a50008 	addiu	a1,a1,8
8000515c:	14400008 	bnez	v0,80005180 <vfs_mount+0x9c>
80005160:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:311
		assert(vdev->fs != NULL);
80005164:	8fa20010 	lw	v0,16(sp)
80005168:	8c430008 	lw	v1,8(v0)
8000516c:	10600023 	beqz	v1,800051fc <vfs_mount+0x118>
80005170:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:312
		kprintf("\n\rvfs: mount %s.\n\r", vdev->devname);
80005174:	8c450000 	lw	a1,0(v0)
80005178:	0c00798a 	jal	8001e628 <kprintf>
8000517c:	2484140c 	addiu	a0,a0,5132
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:316
	}

out:
	unlock_vdev_list();
80005180:	0c0012fb 	jal	80004bec <unlock_vdev_list>
80005184:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:318
	return ret;
}
80005188:	8fbf002c 	lw	ra,44(sp)
8000518c:	02001021 	move	v0,s0
80005190:	8fb10028 	lw	s1,40(sp)
80005194:	8fb00024 	lw	s0,36(sp)
80005198:	03e00008 	jr	ra
8000519c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:316
		assert(vdev->fs != NULL);
		kprintf("\n\rvfs: mount %s.\n\r", vdev->devname);
	}

out:
	unlock_vdev_list();
800051a0:	0c0012fb 	jal	80004bec <unlock_vdev_list>
800051a4:	2410fff0 	li	s0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:318
	return ret;
}
800051a8:	8fbf002c 	lw	ra,44(sp)
800051ac:	02001021 	move	v0,s0
800051b0:	8fb10028 	lw	s1,40(sp)
800051b4:	8fb00024 	lw	s0,36(sp)
800051b8:	03e00008 	jr	ra
800051bc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:307
	}
	if (vdev->fs != NULL) {
		ret = -E_BUSY;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
800051c0:	3c068002 	lui	a2,0x8002
800051c4:	3c078002 	lui	a3,0x8002
800051c8:	24841348 	addiu	a0,a0,4936
800051cc:	24050133 	li	a1,307
800051d0:	24c609b0 	addiu	a2,a2,2480
800051d4:	0c006afd 	jal	8001abf4 <__panic>
800051d8:	24e713cc 	addiu	a3,a3,5068
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:309

	struct device *dev = vop_info(vdev->devnode, device);
800051dc:	3c048002 	lui	a0,0x8002
800051e0:	3c068002 	lui	a2,0x8002
800051e4:	3c078002 	lui	a3,0x8002
800051e8:	24841348 	addiu	a0,a0,4936
800051ec:	24050135 	li	a1,309
800051f0:	24c609b0 	addiu	a2,a2,2480
800051f4:	0c006afd 	jal	8001abf4 <__panic>
800051f8:	24e70b44 	addiu	a3,a3,2884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:311
	if ((ret = mountfunc(dev, &(vdev->fs))) == 0) {
		assert(vdev->fs != NULL);
800051fc:	3c048002 	lui	a0,0x8002
80005200:	3c068002 	lui	a2,0x8002
80005204:	3c078002 	lui	a3,0x8002
80005208:	24841348 	addiu	a0,a0,4936
8000520c:	24050137 	li	a1,311
80005210:	24c609b0 	addiu	a2,a2,2480
80005214:	0c006afd 	jal	8001abf4 <__panic>
80005218:	24e713f8 	addiu	a3,a3,5112

8000521c <vfs_unmount>:
vfs_unmount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:325
/*
 * Unmount a filesystem/device by name.
 * First calls fsop_sync on the filesystem; then calls fsop_umount.
 */
int vfs_unmount(const char *devname)
{
8000521c:	27bdffd8 	addiu	sp,sp,-40
80005220:	afbf0024 	sw	ra,36(sp)
80005224:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:327
	int ret;
	lock_vdev_list();
80005228:	0c0012f8 	jal	80004be0 <lock_vdev_list>
8000522c:	afa40018 	sw	a0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:329
	vfs_dev_t *vdev;
	if ((ret = find_mount(devname, &vdev)) != 0) {
80005230:	8fa40018 	lw	a0,24(sp)
80005234:	0c001363 	jal	80004d8c <find_mount>
80005238:	27a50010 	addiu	a1,sp,16
8000523c:	14400010 	bnez	v0,80005280 <vfs_unmount+0x64>
80005240:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:332
		goto out;
	}
	if (vdev->fs == NULL) {
80005244:	8fa20010 	lw	v0,16(sp)
80005248:	8c440008 	lw	a0,8(v0)
8000524c:	5080000c 	beqzl	a0,80005280 <vfs_unmount+0x64>
80005250:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:336
		ret = -E_INVAL;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
80005254:	8c430000 	lw	v1,0(v0)
80005258:	50600024 	beqzl	v1,800052ec <vfs_unmount+0xd0>
8000525c:	3c048002 	lui	a0,0x8002
80005260:	8c42000c 	lw	v0,12(v0)
80005264:	50400021 	beqzl	v0,800052ec <vfs_unmount+0xd0>
80005268:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:338

	if ((ret = fsop_sync(vdev->fs)) != 0) {
8000526c:	8c820088 	lw	v0,136(a0)
80005270:	0040f809 	jalr	v0
80005274:	00000000 	nop
80005278:	10400008 	beqz	v0,8000529c <vfs_unmount+0x80>
8000527c:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:348
		vdev->fs = NULL;
		kprintf("vfs: unmount %s.\n\r", vdev->devname);
	}

out:
	unlock_vdev_list();
80005280:	0c0012fb 	jal	80004bec <unlock_vdev_list>
80005284:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:350
	return ret;
}
80005288:	8fbf0024 	lw	ra,36(sp)
8000528c:	02001021 	move	v0,s0
80005290:	8fb00020 	lw	s0,32(sp)
80005294:	03e00008 	jr	ra
80005298:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:341
	assert(vdev->devname != NULL && vdev->mountable);

	if ((ret = fsop_sync(vdev->fs)) != 0) {
		goto out;
	}
	if ((ret = fsop_unmount(vdev->fs)) == 0) {
8000529c:	8fa20010 	lw	v0,16(sp)
800052a0:	8c440008 	lw	a0,8(v0)
800052a4:	8c820090 	lw	v0,144(a0)
800052a8:	0040f809 	jalr	v0
800052ac:	00000000 	nop
800052b0:	1440fff3 	bnez	v0,80005280 <vfs_unmount+0x64>
800052b4:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:343
		/* now drop the filesystem */
		vdev->fs = NULL;
800052b8:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:344
		kprintf("vfs: unmount %s.\n\r", vdev->devname);
800052bc:	3c048002 	lui	a0,0x8002
800052c0:	24841420 	addiu	a0,a0,5152
800052c4:	8c450000 	lw	a1,0(v0)
800052c8:	0c00798a 	jal	8001e628 <kprintf>
800052cc:	ac400008 	sw	zero,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:348
	}

out:
	unlock_vdev_list();
800052d0:	0c0012fb 	jal	80004bec <unlock_vdev_list>
800052d4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:350
	return ret;
}
800052d8:	8fbf0024 	lw	ra,36(sp)
800052dc:	02001021 	move	v0,s0
800052e0:	8fb00020 	lw	s0,32(sp)
800052e4:	03e00008 	jr	ra
800052e8:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:336
	}
	if (vdev->fs == NULL) {
		ret = -E_INVAL;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
800052ec:	3c068002 	lui	a2,0x8002
800052f0:	3c078002 	lui	a3,0x8002
800052f4:	24841348 	addiu	a0,a0,4936
800052f8:	24050150 	li	a1,336
800052fc:	24c609b0 	addiu	a2,a2,2480
80005300:	0c006afd 	jal	8001abf4 <__panic>
80005304:	24e713cc 	addiu	a3,a3,5068

80005308 <vfs_unmount_all>:
vfs_unmount_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:356

/*
 * Global unmount function.
 */
int vfs_unmount_all(void)
{
80005308:	27bdffd8 	addiu	sp,sp,-40
8000530c:	afb10014 	sw	s1,20(sp)
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80005310:	3c118015 	lui	s1,0x8015
80005314:	2631451c 	addiu	s1,s1,17692
vfs_unmount_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:357
	if (!list_empty(&vdev_list)) {
80005318:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:356

/*
 * Global unmount function.
 */
int vfs_unmount_all(void)
{
8000531c:	afbf0024 	sw	ra,36(sp)
80005320:	afb40020 	sw	s4,32(sp)
80005324:	afb3001c 	sw	s3,28(sp)
80005328:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:357
	if (!list_empty(&vdev_list)) {
8000532c:	1051001e 	beq	v0,s1,800053a8 <vfs_unmount_all+0xa0>
80005330:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:379
						     vdev->devname, ret);
						continue;
					}
					/* now drop the filesystem */
					vdev->fs = NULL;
					kprintf("vfs: unmount %s.\n\r",
80005334:	3c148002 	lui	s4,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:358
 * Global unmount function.
 */
int vfs_unmount_all(void)
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
80005338:	0c0012f8 	jal	80004be0 <lock_vdev_list>
8000533c:	3c138002 	lui	s3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:360
		{
			list_entry_t *list = &vdev_list, *le = list;
80005340:	02208021 	move	s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:379
						     vdev->devname, ret);
						continue;
					}
					/* now drop the filesystem */
					vdev->fs = NULL;
					kprintf("vfs: unmount %s.\n\r",
80005344:	26941420 	addiu	s4,s4,5152
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:373
						     vdev->devname, ret);
						continue;
					}
					if ((ret = fsop_unmount(vdev->fs)) != 0) {
						kprintf
						    ("vfs: warning: unmount failed for %s: %e.\n\r",
80005348:	2673145c 	addiu	s3,s3,5212
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:367
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->mountable && vdev->fs != NULL) {
					int ret;
					if ((ret = fsop_sync(vdev->fs)) != 0) {
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n\r",
8000534c:	3c128002 	lui	s2,0x8002
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80005350:	8e100004 	lw	s0,4(s0)
vfs_unmount_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:361
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80005354:	12110012 	beq	s0,s1,800053a0 <vfs_unmount_all+0x98>
80005358:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:363
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->mountable && vdev->fs != NULL) {
8000535c:	8e02fffc 	lw	v0,-4(s0)
80005360:	5040fffc 	beqzl	v0,80005354 <vfs_unmount_all+0x4c>
80005364:	8e100004 	lw	s0,4(s0)
80005368:	8e02fff8 	lw	v0,-8(s0)
8000536c:	1040fff8 	beqz	v0,80005350 <vfs_unmount_all+0x48>
80005370:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:365
					int ret;
					if ((ret = fsop_sync(vdev->fs)) != 0) {
80005374:	8c420088 	lw	v0,136(v0)
80005378:	0040f809 	jalr	v0
8000537c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:367
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n\r",
80005380:	00403021 	move	a2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:365
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->mountable && vdev->fs != NULL) {
					int ret;
					if ((ret = fsop_sync(vdev->fs)) != 0) {
80005384:	10400011 	beqz	v0,800053cc <vfs_unmount_all+0xc4>
80005388:	26441434 	addiu	a0,s2,5172
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:367
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n\r",
8000538c:	0c00798a 	jal	8001e628 <kprintf>
80005390:	8e05fff0 	lw	a1,-16(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80005394:	8e100004 	lw	s0,4(s0)
vfs_unmount_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:361
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80005398:	5611fff1 	bnel	s0,s1,80005360 <vfs_unmount_all+0x58>
8000539c:	8e02fffc 	lw	v0,-4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:384
					kprintf("vfs: unmount %s.\n\r",
						vdev->devname);
				}
			}
		}
		unlock_vdev_list();
800053a0:	0c0012fb 	jal	80004bec <unlock_vdev_list>
800053a4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:387
	}
	return 0;
}
800053a8:	8fbf0024 	lw	ra,36(sp)
800053ac:	00001021 	move	v0,zero
800053b0:	8fb40020 	lw	s4,32(sp)
800053b4:	8fb3001c 	lw	s3,28(sp)
800053b8:	8fb20018 	lw	s2,24(sp)
800053bc:	8fb10014 	lw	s1,20(sp)
800053c0:	8fb00010 	lw	s0,16(sp)
800053c4:	03e00008 	jr	ra
800053c8:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:371
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n\r",
						     vdev->devname, ret);
						continue;
					}
					if ((ret = fsop_unmount(vdev->fs)) != 0) {
800053cc:	8e04fff8 	lw	a0,-8(s0)
800053d0:	8c820090 	lw	v0,144(a0)
800053d4:	0040f809 	jalr	v0
800053d8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:373
						kprintf
						    ("vfs: warning: unmount failed for %s: %e.\n\r",
800053dc:	00403021 	move	a2,v0
800053e0:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:371
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n\r",
						     vdev->devname, ret);
						continue;
					}
					if ((ret = fsop_unmount(vdev->fs)) != 0) {
800053e4:	10400005 	beqz	v0,800053fc <vfs_unmount_all+0xf4>
800053e8:	8e05fff0 	lw	a1,-16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:373
						kprintf
						    ("vfs: warning: unmount failed for %s: %e.\n\r",
800053ec:	0c00798a 	jal	8001e628 <kprintf>
800053f0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:375
						     vdev->devname, ret);
						continue;
800053f4:	080014d5 	j	80005354 <vfs_unmount_all+0x4c>
800053f8:	8e100004 	lw	s0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:378
					}
					/* now drop the filesystem */
					vdev->fs = NULL;
800053fc:	ae00fff8 	sw	zero,-8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsdev.c:379
					kprintf("vfs: unmount %s.\n\r",
80005400:	0c00798a 	jal	8001e628 <kprintf>
80005404:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80005408:	080014d5 	j	80005354 <vfs_unmount_all+0x4c>
8000540c:	8e100004 	lw	s0,4(s0)

80005410 <vfs_open>:
vfs_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:15
#include <error.h>
#include <assert.h>

/* Does most of the work for open(). */
int vfs_open(char *path, uint32_t open_flags, struct inode **node_store)
{
80005410:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:17
	bool can_write = 0;
	switch (open_flags & O_ACCMODE) {
80005414:	30a20003 	andi	v0,a1,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:15
#include <error.h>
#include <assert.h>

/* Does most of the work for open(). */
int vfs_open(char *path, uint32_t open_flags, struct inode **node_store)
{
80005418:	afb2002c 	sw	s2,44(sp)
8000541c:	afb00024 	sw	s0,36(sp)
80005420:	afbf0034 	sw	ra,52(sp)
80005424:	afb30030 	sw	s3,48(sp)
80005428:	afb10028 	sw	s1,40(sp)
8000542c:	00a08021 	move	s0,a1
80005430:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:17
	bool can_write = 0;
	switch (open_flags & O_ACCMODE) {
80005434:	1040000d 	beqz	v0,8000546c <vfs_open+0x5c>
80005438:	00001821 	move	v1,zero
8000543c:	2c420003 	sltiu	v0,v0,3
80005440:	14400009 	bnez	v0,80005468 <vfs_open+0x58>
80005444:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:68
			return ret;
		}
	}
	*node_store = node;
	return 0;
}
80005448:	8fbf0034 	lw	ra,52(sp)
8000544c:	02601021 	move	v0,s3
80005450:	8fb2002c 	lw	s2,44(sp)
80005454:	8fb30030 	lw	s3,48(sp)
80005458:	8fb10028 	lw	s1,40(sp)
8000545c:	8fb00024 	lw	s0,36(sp)
80005460:	03e00008 	jr	ra
80005464:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:22
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		break;
	case O_WRONLY:
	case O_RDWR:
		can_write = 1;
80005468:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:28
		break;
	default:
		return -E_INVAL;
	}

	if (open_flags & O_TRUNC) {
8000546c:	32110200 	andi	s1,s0,0x200
80005470:	12200003 	beqz	s1,80005480 <vfs_open+0x70>
80005474:	32020040 	andi	v0,s0,0x40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:29
		if (!can_write) {
80005478:	1060fff3 	beqz	v1,80005448 <vfs_open+0x38>
8000547c:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:36
		}
	}

	int ret;
	struct inode *dir, *node;
	if (open_flags & O_CREAT) {
80005480:	10400052 	beqz	v0,800055cc <vfs_open+0x1bc>
80005484:	27a50018 	addiu	a1,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:39
		char *name;
		bool excl = (open_flags & O_EXCL) != 0;
		if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
80005488:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
8000548c:	27a60010 	addiu	a2,sp,16
80005490:	1440ffed 	bnez	v0,80005448 <vfs_open+0x38>
80005494:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:42
			return ret;
		}
		ret = vop_create(dir, name, excl, &node);
80005498:	8fb30018 	lw	s3,24(sp)
8000549c:	12600063 	beqz	s3,8000562c <vfs_open+0x21c>
800054a0:	3c048002 	lui	a0,0x8002
800054a4:	8e620048 	lw	v0,72(s3)
800054a8:	10400061 	beqz	v0,80005630 <vfs_open+0x220>
800054ac:	3c068002 	lui	a2,0x8002
800054b0:	8c42004c 	lw	v0,76(v0)
800054b4:	1040005d 	beqz	v0,8000562c <vfs_open+0x21c>
800054b8:	3c058002 	lui	a1,0x8002
800054bc:	02602021 	move	a0,s3
800054c0:	0c0010e5 	jal	80004394 <inode_check>
800054c4:	24a514e4 	addiu	a1,a1,5348
800054c8:	8e620048 	lw	v0,72(s3)
800054cc:	8fa40018 	lw	a0,24(sp)
800054d0:	8fa50010 	lw	a1,16(sp)
800054d4:	8c42004c 	lw	v0,76(v0)
800054d8:	7e0601c0 	ext	a2,s0,0x7,0x1
800054dc:	0040f809 	jalr	v0
800054e0:	27a70014 	addiu	a3,sp,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:43
		vop_ref_dec(dir);
800054e4:	8fa40018 	lw	a0,24(sp)
800054e8:	0c001164 	jal	80004590 <inode_ref_dec>
800054ec:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:48
	} else {
		ret = vfs_lookup(path, &node);
	}

	if (ret != 0) {
800054f0:	1660ffd6 	bnez	s3,8000544c <vfs_open+0x3c>
800054f4:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:51
		return ret;
	}
	assert(node != NULL);
800054f8:	8fb30014 	lw	s3,20(sp)
800054fc:	12600059 	beqz	s3,80005664 <vfs_open+0x254>
80005500:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:53

	if ((ret = vop_open(node, open_flags)) != 0) {
80005504:	8e620048 	lw	v0,72(s3)
80005508:	10400042 	beqz	v0,80005614 <vfs_open+0x204>
8000550c:	3c068002 	lui	a2,0x8002
80005510:	8c420004 	lw	v0,4(v0)
80005514:	1040003e 	beqz	v0,80005610 <vfs_open+0x200>
80005518:	3c058002 	lui	a1,0x8002
8000551c:	02602021 	move	a0,s3
80005520:	0c0010e5 	jal	80004394 <inode_check>
80005524:	24a5153c 	addiu	a1,a1,5436
80005528:	8e620048 	lw	v0,72(s3)
8000552c:	8fa40014 	lw	a0,20(sp)
80005530:	8c420004 	lw	v0,4(v0)
80005534:	0040f809 	jalr	v0
80005538:	02002821 	move	a1,s0
8000553c:	00409821 	move	s3,v0
80005540:	14400029 	bnez	v0,800055e8 <vfs_open+0x1d8>
80005544:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:58
		vop_ref_dec(node);
		return ret;
	}

	vop_open_inc(node);
80005548:	0c0010c9 	jal	80004324 <inode_open_inc>
8000554c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:59
	if (open_flags & O_TRUNC) {
80005550:	12200015 	beqz	s1,800055a8 <vfs_open+0x198>
80005554:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:60
		if ((ret = vop_truncate(node, 0)) != 0) {
80005558:	8fb00014 	lw	s0,20(sp)
8000555c:	1200003a 	beqz	s0,80005648 <vfs_open+0x238>
80005560:	3c048002 	lui	a0,0x8002
80005564:	8e020048 	lw	v0,72(s0)
80005568:	10400038 	beqz	v0,8000564c <vfs_open+0x23c>
8000556c:	3c068002 	lui	a2,0x8002
80005570:	8c420048 	lw	v0,72(v0)
80005574:	10400034 	beqz	v0,80005648 <vfs_open+0x238>
80005578:	3c058002 	lui	a1,0x8002
8000557c:	02002021 	move	a0,s0
80005580:	0c0010e5 	jal	80004394 <inode_check>
80005584:	24a51598 	addiu	a1,a1,5528
80005588:	8e020048 	lw	v0,72(s0)
8000558c:	8fa40014 	lw	a0,20(sp)
80005590:	8c420048 	lw	v0,72(v0)
80005594:	0040f809 	jalr	v0
80005598:	00002821 	move	a1,zero
8000559c:	1440000f 	bnez	v0,800055dc <vfs_open+0x1cc>
800055a0:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:66
			vop_open_dec(node);
			vop_ref_dec(node);
			return ret;
		}
	}
	*node_store = node;
800055a4:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:68
	return 0;
}
800055a8:	8fbf0034 	lw	ra,52(sp)
800055ac:	8fb10028 	lw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:66
			vop_open_dec(node);
			vop_ref_dec(node);
			return ret;
		}
	}
	*node_store = node;
800055b0:	ae420000 	sw	v0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:68
	return 0;
}
800055b4:	8fb00024 	lw	s0,36(sp)
800055b8:	02601021 	move	v0,s3
800055bc:	8fb2002c 	lw	s2,44(sp)
800055c0:	8fb30030 	lw	s3,48(sp)
800055c4:	03e00008 	jr	ra
800055c8:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:45
			return ret;
		}
		ret = vop_create(dir, name, excl, &node);
		vop_ref_dec(dir);
	} else {
		ret = vfs_lookup(path, &node);
800055cc:	0c001732 	jal	80005cc8 <vfs_lookup>
800055d0:	27a50014 	addiu	a1,sp,20
800055d4:	0800153c 	j	800054f0 <vfs_open+0xe0>
800055d8:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:61
	}

	vop_open_inc(node);
	if (open_flags & O_TRUNC) {
		if ((ret = vop_truncate(node, 0)) != 0) {
			vop_open_dec(node);
800055dc:	0c00111d 	jal	80004474 <inode_open_dec>
800055e0:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:62
			vop_ref_dec(node);
800055e4:	8fa40014 	lw	a0,20(sp)
800055e8:	0c001164 	jal	80004590 <inode_ref_dec>
800055ec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:68
			return ret;
		}
	}
	*node_store = node;
	return 0;
}
800055f0:	8fbf0034 	lw	ra,52(sp)
800055f4:	02601021 	move	v0,s3
800055f8:	8fb2002c 	lw	s2,44(sp)
800055fc:	8fb30030 	lw	s3,48(sp)
80005600:	8fb10028 	lw	s1,40(sp)
80005604:	8fb00024 	lw	s0,36(sp)
80005608:	03e00008 	jr	ra
8000560c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:53
	if (ret != 0) {
		return ret;
	}
	assert(node != NULL);

	if ((ret = vop_open(node, open_flags)) != 0) {
80005610:	3c068002 	lui	a2,0x8002
80005614:	3c078002 	lui	a3,0x8002
80005618:	24841488 	addiu	a0,a0,5256
8000561c:	24050035 	li	a1,53
80005620:	24c609b0 	addiu	a2,a2,2480
80005624:	0c006afd 	jal	8001abf4 <__panic>
80005628:	24e714ec 	addiu	a3,a3,5356
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:42
		char *name;
		bool excl = (open_flags & O_EXCL) != 0;
		if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
			return ret;
		}
		ret = vop_create(dir, name, excl, &node);
8000562c:	3c068002 	lui	a2,0x8002
80005630:	3c078002 	lui	a3,0x8002
80005634:	24841488 	addiu	a0,a0,5256
80005638:	2405002a 	li	a1,42
8000563c:	24c609b0 	addiu	a2,a2,2480
80005640:	0c006afd 	jal	8001abf4 <__panic>
80005644:	24e71494 	addiu	a3,a3,5268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:60
		return ret;
	}

	vop_open_inc(node);
	if (open_flags & O_TRUNC) {
		if ((ret = vop_truncate(node, 0)) != 0) {
80005648:	3c068002 	lui	a2,0x8002
8000564c:	3c078002 	lui	a3,0x8002
80005650:	24841488 	addiu	a0,a0,5256
80005654:	2405003c 	li	a1,60
80005658:	24c609b0 	addiu	a2,a2,2480
8000565c:	0c006afd 	jal	8001abf4 <__panic>
80005660:	24e71544 	addiu	a3,a3,5444
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:51
	}

	if (ret != 0) {
		return ret;
	}
	assert(node != NULL);
80005664:	3c068002 	lui	a2,0x8002
80005668:	3c078002 	lui	a3,0x8002
8000566c:	24841488 	addiu	a0,a0,5256
80005670:	24050033 	li	a1,51
80005674:	24c609b0 	addiu	a2,a2,2480
80005678:	0c006afd 	jal	8001abf4 <__panic>
8000567c:	24e72160 	addiu	a3,a3,8544

80005680 <vfs_close>:
vfs_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:72
	return 0;
}

/* Does most of the work for close(). */
int vfs_close(struct inode *node)
{
80005680:	27bdffe8 	addiu	sp,sp,-24
80005684:	afb00010 	sw	s0,16(sp)
80005688:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:88
 *    (2) we're often called from places like process exit
 *        where reporting the error is impossible and
 *        meaningful recovery is entirely impractical.
 */

	vop_open_dec(node);
8000568c:	0c00111d 	jal	80004474 <inode_open_dec>
80005690:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:89
	vop_ref_dec(node);
80005694:	0c001164 	jal	80004590 <inode_ref_dec>
80005698:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:91
	return 0;
}
8000569c:	8fbf0014 	lw	ra,20(sp)
800056a0:	00001021 	move	v0,zero
800056a4:	8fb00010 	lw	s0,16(sp)
800056a8:	03e00008 	jr	ra
800056ac:	27bd0018 	addiu	sp,sp,24

800056b0 <vfs_unlink>:
vfs_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:95

/* Does most of the work for unlink(). */
int vfs_unlink(char *path)
{
800056b0:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:99
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
800056b4:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:95
	return 0;
}

/* Does most of the work for unlink(). */
int vfs_unlink(char *path)
{
800056b8:	afb00018 	sw	s0,24(sp)
800056bc:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:99
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
800056c0:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
800056c4:	27a60014 	addiu	a2,sp,20
800056c8:	14400015 	bnez	v0,80005720 <vfs_unlink+0x70>
800056cc:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:102
		return ret;
	}
	ret = vop_unlink(dir, name);
800056d0:	8fb00010 	lw	s0,16(sp)
800056d4:	12000017 	beqz	s0,80005734 <vfs_unlink+0x84>
800056d8:	3c048002 	lui	a0,0x8002
800056dc:	8e020048 	lw	v0,72(s0)
800056e0:	10400015 	beqz	v0,80005738 <vfs_unlink+0x88>
800056e4:	3c068002 	lui	a2,0x8002
800056e8:	8c420050 	lw	v0,80(v0)
800056ec:	10400011 	beqz	v0,80005734 <vfs_unlink+0x84>
800056f0:	3c058002 	lui	a1,0x8002
800056f4:	02002021 	move	a0,s0
800056f8:	0c0010e5 	jal	80004394 <inode_check>
800056fc:	24a515f4 	addiu	a1,a1,5620
80005700:	8e020048 	lw	v0,72(s0)
80005704:	8fa40010 	lw	a0,16(sp)
80005708:	8c420050 	lw	v0,80(v0)
8000570c:	0040f809 	jalr	v0
80005710:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:103
	vop_ref_dec(dir);
80005714:	8fa40010 	lw	a0,16(sp)
80005718:	0c001164 	jal	80004590 <inode_ref_dec>
8000571c:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:105
	return ret;
}
80005720:	8fbf001c 	lw	ra,28(sp)
80005724:	02001021 	move	v0,s0
80005728:	8fb00018 	lw	s0,24(sp)
8000572c:	03e00008 	jr	ra
80005730:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:102
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
		return ret;
	}
	ret = vop_unlink(dir, name);
80005734:	3c068002 	lui	a2,0x8002
80005738:	3c078002 	lui	a3,0x8002
8000573c:	24841488 	addiu	a0,a0,5256
80005740:	24050066 	li	a1,102
80005744:	24c609b0 	addiu	a2,a2,2480
80005748:	0c006afd 	jal	8001abf4 <__panic>
8000574c:	24e715a4 	addiu	a3,a3,5540

80005750 <vfs_rename>:
vfs_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:109
	return ret;
}

/* Does most of the work for rename(). */
int vfs_rename(char *old_path, char *new_path)
{
80005750:	27bdffd0 	addiu	sp,sp,-48
80005754:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:113
	int ret;
	char *old_name, *new_name;
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
80005758:	27a6001c 	addiu	a2,sp,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:109
	return ret;
}

/* Does most of the work for rename(). */
int vfs_rename(char *old_path, char *new_path)
{
8000575c:	00a08021 	move	s0,a1
80005760:	afb10028 	sw	s1,40(sp)
80005764:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:113
	int ret;
	char *old_name, *new_name;
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
80005768:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
8000576c:	27a50014 	addiu	a1,sp,20
80005770:	10400007 	beqz	v0,80005790 <vfs_rename+0x40>
80005774:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:129
		ret = vop_rename(old_dir, old_name, new_dir, new_name);
	}
	vop_ref_dec(old_dir);
	vop_ref_dec(new_dir);
	return ret;
}
80005778:	8fbf002c 	lw	ra,44(sp)
8000577c:	02201021 	move	v0,s1
80005780:	8fb00024 	lw	s0,36(sp)
80005784:	8fb10028 	lw	s1,40(sp)
80005788:	03e00008 	jr	ra
8000578c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:116
	char *old_name, *new_name;
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
		return ret;
	}
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
80005790:	02002021 	move	a0,s0
80005794:	27a50010 	addiu	a1,sp,16
80005798:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
8000579c:	27a60018 	addiu	a2,sp,24
800057a0:	14400013 	bnez	v0,800057f0 <vfs_rename+0xa0>
800057a4:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:121
		vop_ref_dec(old_dir);
		return ret;
	}

	if (old_dir->in_fs == NULL || old_dir->in_fs != new_dir->in_fs) {
800057a8:	8fb00014 	lw	s0,20(sp)
800057ac:	8e020044 	lw	v0,68(s0)
800057b0:	10400005 	beqz	v0,800057c8 <vfs_rename+0x78>
800057b4:	2411ffee 	li	s1,-18
800057b8:	8fa30010 	lw	v1,16(sp)
800057bc:	8c630044 	lw	v1,68(v1)
800057c0:	5043000f 	beql	v0,v1,80005800 <vfs_rename+0xb0>
800057c4:	8e020048 	lw	v0,72(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:126
		ret = -E_XDEV;
	} else {
		ret = vop_rename(old_dir, old_name, new_dir, new_name);
	}
	vop_ref_dec(old_dir);
800057c8:	0c001164 	jal	80004590 <inode_ref_dec>
800057cc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:127
	vop_ref_dec(new_dir);
800057d0:	0c001164 	jal	80004590 <inode_ref_dec>
800057d4:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:129
	return ret;
}
800057d8:	8fbf002c 	lw	ra,44(sp)
800057dc:	02201021 	move	v0,s1
800057e0:	8fb00024 	lw	s0,36(sp)
800057e4:	8fb10028 	lw	s1,40(sp)
800057e8:	03e00008 	jr	ra
800057ec:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:117
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
		return ret;
	}
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
		vop_ref_dec(old_dir);
800057f0:	0c001164 	jal	80004590 <inode_ref_dec>
800057f4:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:118
		return ret;
800057f8:	080015df 	j	8000577c <vfs_rename+0x2c>
800057fc:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:124
	}

	if (old_dir->in_fs == NULL || old_dir->in_fs != new_dir->in_fs) {
		ret = -E_XDEV;
	} else {
		ret = vop_rename(old_dir, old_name, new_dir, new_name);
80005800:	10400011 	beqz	v0,80005848 <vfs_rename+0xf8>
80005804:	3c048002 	lui	a0,0x8002
80005808:	8c420024 	lw	v0,36(v0)
8000580c:	1040000e 	beqz	v0,80005848 <vfs_rename+0xf8>
80005810:	3c058002 	lui	a1,0x8002
80005814:	02002021 	move	a0,s0
80005818:	0c0010e5 	jal	80004394 <inode_check>
8000581c:	24a5164c 	addiu	a1,a1,5708
80005820:	8e020048 	lw	v0,72(s0)
80005824:	8fa40014 	lw	a0,20(sp)
80005828:	8fa5001c 	lw	a1,28(sp)
8000582c:	8c420024 	lw	v0,36(v0)
80005830:	8fa60010 	lw	a2,16(sp)
80005834:	0040f809 	jalr	v0
80005838:	8fa70018 	lw	a3,24(sp)
8000583c:	00408821 	move	s1,v0
80005840:	080015f2 	j	800057c8 <vfs_rename+0x78>
80005844:	8fb00014 	lw	s0,20(sp)
80005848:	3c068002 	lui	a2,0x8002
8000584c:	3c078002 	lui	a3,0x8002
80005850:	24841488 	addiu	a0,a0,5256
80005854:	2405007c 	li	a1,124
80005858:	24c609b0 	addiu	a2,a2,2480
8000585c:	0c006afd 	jal	8001abf4 <__panic>
80005860:	24e715fc 	addiu	a3,a3,5628

80005864 <vfs_link>:
vfs_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:133
	return ret;
}

/* Does most of the work for link(). */
int vfs_link(char *old_path, char *new_path)
{
80005864:	27bdffd0 	addiu	sp,sp,-48
80005868:	afb00024 	sw	s0,36(sp)
8000586c:	00a08021 	move	s0,a1
80005870:	afb10028 	sw	s1,40(sp)
80005874:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:137
	int ret;
	char *new_name;
	struct inode *old_node, *new_dir;
	if ((ret = vfs_lookup(old_path, &old_node)) != 0) {
80005878:	0c001732 	jal	80005cc8 <vfs_lookup>
8000587c:	27a50014 	addiu	a1,sp,20
80005880:	10400007 	beqz	v0,800058a0 <vfs_link+0x3c>
80005884:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:153
		ret = vop_link(new_dir, new_name, old_node);
	}
	vop_ref_dec(old_node);
	vop_ref_dec(new_dir);
	return ret;
}
80005888:	8fbf002c 	lw	ra,44(sp)
8000588c:	02201021 	move	v0,s1
80005890:	8fb00024 	lw	s0,36(sp)
80005894:	8fb10028 	lw	s1,40(sp)
80005898:	03e00008 	jr	ra
8000589c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:140
	char *new_name;
	struct inode *old_node, *new_dir;
	if ((ret = vfs_lookup(old_path, &old_node)) != 0) {
		return ret;
	}
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
800058a0:	02002021 	move	a0,s0
800058a4:	27a50010 	addiu	a1,sp,16
800058a8:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
800058ac:	27a60018 	addiu	a2,sp,24
800058b0:	00408821 	move	s1,v0
800058b4:	1440000a 	bnez	v0,800058e0 <vfs_link+0x7c>
800058b8:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:145
		vop_ref_dec(old_node);
		return ret;
	}

	if (old_node->in_fs == NULL || old_node->in_fs != new_dir->in_fs) {
800058bc:	8c820044 	lw	v0,68(a0)
800058c0:	10400021 	beqz	v0,80005948 <vfs_link+0xe4>
800058c4:	8fb00010 	lw	s0,16(sp)
800058c8:	8e030044 	lw	v1,68(s0)
800058cc:	1043000c 	beq	v0,v1,80005900 <vfs_link+0x9c>
800058d0:	2411ffee 	li	s1,-18
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:150
		ret = -E_XDEV;
	} else {
		ret = vop_link(new_dir, new_name, old_node);
	}
	vop_ref_dec(old_node);
800058d4:	0c001164 	jal	80004590 <inode_ref_dec>
800058d8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:151
	vop_ref_dec(new_dir);
800058dc:	8fa40010 	lw	a0,16(sp)
800058e0:	0c001164 	jal	80004590 <inode_ref_dec>
800058e4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:153
	return ret;
}
800058e8:	8fbf002c 	lw	ra,44(sp)
800058ec:	02201021 	move	v0,s1
800058f0:	8fb00024 	lw	s0,36(sp)
800058f4:	8fb10028 	lw	s1,40(sp)
800058f8:	03e00008 	jr	ra
800058fc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:148
	}

	if (old_node->in_fs == NULL || old_node->in_fs != new_dir->in_fs) {
		ret = -E_XDEV;
	} else {
		ret = vop_link(new_dir, new_name, old_node);
80005900:	8e020048 	lw	v0,72(s0)
80005904:	10400012 	beqz	v0,80005950 <vfs_link+0xec>
80005908:	3c048002 	lui	a0,0x8002
8000590c:	8c420020 	lw	v0,32(v0)
80005910:	1040000f 	beqz	v0,80005950 <vfs_link+0xec>
80005914:	3c058002 	lui	a1,0x8002
80005918:	02002021 	move	a0,s0
8000591c:	0c0010e5 	jal	80004394 <inode_check>
80005920:	24a51754 	addiu	a1,a1,5972
80005924:	8e020048 	lw	v0,72(s0)
80005928:	8fa40010 	lw	a0,16(sp)
8000592c:	8fa50018 	lw	a1,24(sp)
80005930:	8c420020 	lw	v0,32(v0)
80005934:	0040f809 	jalr	v0
80005938:	8fa60014 	lw	a2,20(sp)
8000593c:	00408821 	move	s1,v0
80005940:	08001635 	j	800058d4 <vfs_link+0x70>
80005944:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:146
		vop_ref_dec(old_node);
		return ret;
	}

	if (old_node->in_fs == NULL || old_node->in_fs != new_dir->in_fs) {
		ret = -E_XDEV;
80005948:	08001635 	j	800058d4 <vfs_link+0x70>
8000594c:	2411ffee 	li	s1,-18
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:148
	} else {
		ret = vop_link(new_dir, new_name, old_node);
80005950:	3c068002 	lui	a2,0x8002
80005954:	3c078002 	lui	a3,0x8002
80005958:	24841488 	addiu	a0,a0,5256
8000595c:	24050094 	li	a1,148
80005960:	24c609b0 	addiu	a2,a2,2480
80005964:	0c006afd 	jal	8001abf4 <__panic>
80005968:	24e71654 	addiu	a3,a3,5716

8000596c <vfs_symlink>:
vfs_symlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:163
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_symlink(char *old_path, char *new_path)
{
8000596c:	27bdffd8 	addiu	sp,sp,-40
80005970:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:167
	int ret;
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
80005974:	27a60014 	addiu	a2,sp,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:163
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_symlink(char *old_path, char *new_path)
{
80005978:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:167
	int ret;
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
8000597c:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:163
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_symlink(char *old_path, char *new_path)
{
80005980:	afb10020 	sw	s1,32(sp)
80005984:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:167
	int ret;
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
80005988:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
8000598c:	27a50010 	addiu	a1,sp,16
80005990:	14400016 	bnez	v0,800059ec <vfs_symlink+0x80>
80005994:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:170
		return ret;
	}
	ret = vop_symlink(new_dir, new_name, old_path);
80005998:	8fb10010 	lw	s1,16(sp)
8000599c:	12200019 	beqz	s1,80005a04 <vfs_symlink+0x98>
800059a0:	3c048002 	lui	a0,0x8002
800059a4:	8e220048 	lw	v0,72(s1)
800059a8:	10400017 	beqz	v0,80005a08 <vfs_symlink+0x9c>
800059ac:	3c068002 	lui	a2,0x8002
800059b0:	8c42002c 	lw	v0,44(v0)
800059b4:	10400013 	beqz	v0,80005a04 <vfs_symlink+0x98>
800059b8:	3c058002 	lui	a1,0x8002
800059bc:	02202021 	move	a0,s1
800059c0:	0c0010e5 	jal	80004394 <inode_check>
800059c4:	24a516f4 	addiu	a1,a1,5876
800059c8:	8e220048 	lw	v0,72(s1)
800059cc:	8fa40010 	lw	a0,16(sp)
800059d0:	8fa50014 	lw	a1,20(sp)
800059d4:	8c42002c 	lw	v0,44(v0)
800059d8:	0040f809 	jalr	v0
800059dc:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:171
	vop_ref_dec(new_dir);
800059e0:	8fa40010 	lw	a0,16(sp)
800059e4:	0c001164 	jal	80004590 <inode_ref_dec>
800059e8:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:173
	return ret;
}
800059ec:	8fbf0024 	lw	ra,36(sp)
800059f0:	02201021 	move	v0,s1
800059f4:	8fb0001c 	lw	s0,28(sp)
800059f8:	8fb10020 	lw	s1,32(sp)
800059fc:	03e00008 	jr	ra
80005a00:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:170
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
		return ret;
	}
	ret = vop_symlink(new_dir, new_name, old_path);
80005a04:	3c068002 	lui	a2,0x8002
80005a08:	3c078002 	lui	a3,0x8002
80005a0c:	24841488 	addiu	a0,a0,5256
80005a10:	240500aa 	li	a1,170
80005a14:	24c609b0 	addiu	a2,a2,2480
80005a18:	0c006afd 	jal	8001abf4 <__panic>
80005a1c:	24e716a4 	addiu	a3,a3,5796

80005a20 <vfs_readlink>:
vfs_readlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:183
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_readlink(char *path, struct iobuf *iob)
{
80005a20:	27bdffd8 	addiu	sp,sp,-40
80005a24:	afb0001c 	sw	s0,28(sp)
80005a28:	00a08021 	move	s0,a1
80005a2c:	afb10020 	sw	s1,32(sp)
80005a30:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:186
	int ret;
	struct inode *node;
	if ((ret = vfs_lookup(path, &node)) != 0) {
80005a34:	0c001732 	jal	80005cc8 <vfs_lookup>
80005a38:	27a50010 	addiu	a1,sp,16
80005a3c:	14400015 	bnez	v0,80005a94 <vfs_readlink+0x74>
80005a40:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:189
		return ret;
	}
	ret = vop_readlink(node, iob);
80005a44:	8fb10010 	lw	s1,16(sp)
80005a48:	12200018 	beqz	s1,80005aac <vfs_readlink+0x8c>
80005a4c:	3c048002 	lui	a0,0x8002
80005a50:	8e220048 	lw	v0,72(s1)
80005a54:	10400016 	beqz	v0,80005ab0 <vfs_readlink+0x90>
80005a58:	3c068002 	lui	a2,0x8002
80005a5c:	8c420028 	lw	v0,40(v0)
80005a60:	10400012 	beqz	v0,80005aac <vfs_readlink+0x8c>
80005a64:	3c058002 	lui	a1,0x8002
80005a68:	02202021 	move	a0,s1
80005a6c:	0c0010e5 	jal	80004394 <inode_check>
80005a70:	24a51750 	addiu	a1,a1,5968
80005a74:	8e220048 	lw	v0,72(s1)
80005a78:	8fa40010 	lw	a0,16(sp)
80005a7c:	8c420028 	lw	v0,40(v0)
80005a80:	0040f809 	jalr	v0
80005a84:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:190
	vop_ref_dec(node);
80005a88:	8fa40010 	lw	a0,16(sp)
80005a8c:	0c001164 	jal	80004590 <inode_ref_dec>
80005a90:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:192
	return ret;
}
80005a94:	8fbf0024 	lw	ra,36(sp)
80005a98:	02201021 	move	v0,s1
80005a9c:	8fb0001c 	lw	s0,28(sp)
80005aa0:	8fb10020 	lw	s1,32(sp)
80005aa4:	03e00008 	jr	ra
80005aa8:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:189
	int ret;
	struct inode *node;
	if ((ret = vfs_lookup(path, &node)) != 0) {
		return ret;
	}
	ret = vop_readlink(node, iob);
80005aac:	3c068002 	lui	a2,0x8002
80005ab0:	3c078002 	lui	a3,0x8002
80005ab4:	24841488 	addiu	a0,a0,5256
80005ab8:	240500bd 	li	a1,189
80005abc:	24c609b0 	addiu	a2,a2,2480
80005ac0:	0c006afd 	jal	8001abf4 <__panic>
80005ac4:	24e716fc 	addiu	a3,a3,5884

80005ac8 <vfs_mkdir>:
vfs_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:198

/*
 * Does most of the work for mkdir.
 */
int vfs_mkdir(char *path)
{
80005ac8:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:202
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
80005acc:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:198

/*
 * Does most of the work for mkdir.
 */
int vfs_mkdir(char *path)
{
80005ad0:	afb00018 	sw	s0,24(sp)
80005ad4:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:202
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
80005ad8:	0c00176a 	jal	80005da8 <vfs_lookup_parent>
80005adc:	27a60014 	addiu	a2,sp,20
80005ae0:	14400015 	bnez	v0,80005b38 <vfs_mkdir+0x70>
80005ae4:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:205
		return ret;
	}
	ret = vop_mkdir(dir, name);
80005ae8:	8fb00010 	lw	s0,16(sp)
80005aec:	12000017 	beqz	s0,80005b4c <vfs_mkdir+0x84>
80005af0:	3c048002 	lui	a0,0x8002
80005af4:	8e020048 	lw	v0,72(s0)
80005af8:	10400015 	beqz	v0,80005b50 <vfs_mkdir+0x88>
80005afc:	3c068002 	lui	a2,0x8002
80005b00:	8c42001c 	lw	v0,28(v0)
80005b04:	10400011 	beqz	v0,80005b4c <vfs_mkdir+0x84>
80005b08:	3c058002 	lui	a1,0x8002
80005b0c:	02002021 	move	a0,s0
80005b10:	0c0010e5 	jal	80004394 <inode_check>
80005b14:	24a517ac 	addiu	a1,a1,6060
80005b18:	8e020048 	lw	v0,72(s0)
80005b1c:	8fa40010 	lw	a0,16(sp)
80005b20:	8c42001c 	lw	v0,28(v0)
80005b24:	0040f809 	jalr	v0
80005b28:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:206
	vop_ref_dec(dir);
80005b2c:	8fa40010 	lw	a0,16(sp)
80005b30:	0c001164 	jal	80004590 <inode_ref_dec>
80005b34:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:208
	return ret;
}
80005b38:	8fbf001c 	lw	ra,28(sp)
80005b3c:	02001021 	move	v0,s0
80005b40:	8fb00018 	lw	s0,24(sp)
80005b44:	03e00008 	jr	ra
80005b48:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfsfile.c:205
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
		return ret;
	}
	ret = vop_mkdir(dir, name);
80005b4c:	3c068002 	lui	a2,0x8002
80005b50:	3c078002 	lui	a3,0x8002
80005b54:	24841488 	addiu	a0,a0,5256
80005b58:	240500cd 	li	a1,205
80005b5c:	24c609b0 	addiu	a2,a2,2480
80005b60:	0c006afd 	jal	8001abf4 <__panic>
80005b64:	24e7175c 	addiu	a3,a3,5980

80005b68 <get_device>:
get_device():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:17
/*
 * Common code to pull the device name, if any, off the front of a
 * path and choose the inode to begin the name lookup relative to.
 */
static int get_device(char *path, char **subpath, struct inode **node_store)
{
80005b68:	27bdffd8 	addiu	sp,sp,-40
80005b6c:	afb00020 	sw	s0,32(sp)
80005b70:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:22
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
80005b74:	90820000 	lbu	v0,0(a0)
80005b78:	10400011 	beqz	v0,80005bc0 <get_device+0x58>
80005b7c:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:23
		if (path[i] == ':') {
80005b80:	2403003a 	li	v1,58
80005b84:	10430023 	beq	v0,v1,80005c14 <get_device+0xac>
80005b88:	2403002f 	li	v1,47
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:27
			colon = i;
			break;
		}
		if (path[i] == '/') {
80005b8c:	10430040 	beq	v0,v1,80005c90 <get_device+0x128>
80005b90:	24830001 	addiu	v1,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:23
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
		if (path[i] == ':') {
80005b94:	2407003a 	li	a3,58
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:22
{
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
80005b98:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:27
		if (path[i] == ':') {
			colon = i;
			break;
		}
		if (path[i] == '/') {
80005b9c:	080016ed 	j	80005bb4 <get_device+0x4c>
80005ba0:	2408002f 	li	t0,47
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:23
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
		if (path[i] == ':') {
80005ba4:	5047000b 	beql	v0,a3,80005bd4 <get_device+0x6c>
80005ba8:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:27
			colon = i;
			break;
		}
		if (path[i] == '/') {
80005bac:	10480004 	beq	v0,t0,80005bc0 <get_device+0x58>
80005bb0:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:22
{
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
80005bb4:	90620000 	lbu	v0,0(v1)
80005bb8:	1440fffa 	bnez	v0,80005ba4 <get_device+0x3c>
80005bbc:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:38
		/* *
		 * No colon before a slash, so no device name specified, and the slash isn't leading
		 * or is also absent, so this is a relative path or just a bare filename. Start from
		 * the current directory, and use the whole thing as the subpath.
		 * */
		*subpath = path;
80005bc0:	acb00000 	sw	s0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:39
		return vfs_get_curdir(node_store);
80005bc4:	0c00179f 	jal	80005e7c <vfs_get_curdir>
80005bc8:	00c02021 	move	a0,a2
80005bcc:	08001702 	j	80005c08 <get_device+0xa0>
80005bd0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:43
	}
	if (colon > 0) {
		/* device:path - get root of device's filesystem */
		path[colon] = '\0';
80005bd4:	a0600000 	sb	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:16

/*
 * Common code to pull the device name, if any, off the front of a
 * path and choose the inode to begin the name lookup relative to.
 */
static int get_device(char *path, char **subpath, struct inode **node_store)
80005bd8:	02042021 	addu	a0,s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:46
	if (colon > 0) {
		/* device:path - get root of device's filesystem */
		path[colon] = '\0';

		/* device:/path - skip slash, treat as device:path */
		while (path[++colon] == '/') ;
80005bdc:	2407002f 	li	a3,47
80005be0:	00801821 	move	v1,a0
80005be4:	24840001 	addiu	a0,a0,1
80005be8:	9082ffff 	lbu	v0,-1(a0)
80005bec:	5047fffd 	beql	v0,a3,80005be4 <get_device+0x7c>
80005bf0:	00801821 	move	v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:48

		*subpath = path + colon;
80005bf4:	aca30000 	sw	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:49
		return vfs_get_root(path, node_store);
80005bf8:	02002021 	move	a0,s0
80005bfc:	0c0013da 	jal	80004f68 <vfs_get_root>
80005c00:	00c02821 	move	a1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:78

	/* ///... or :/... */
	while (*(++path) == '/') ;
	*subpath = path;
	return 0;
}
80005c04:	8fbf0024 	lw	ra,36(sp)
80005c08:	8fb00020 	lw	s0,32(sp)
80005c0c:	03e00008 	jr	ra
80005c10:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:65
			return ret;
		}
	} else {
		assert(*path == ':');
		struct inode *node;
		if ((ret = vfs_get_curdir(&node)) != 0) {
80005c14:	27a40010 	addiu	a0,sp,16
80005c18:	afa5001c 	sw	a1,28(sp)
80005c1c:	0c00179f 	jal	80005e7c <vfs_get_curdir>
80005c20:	afa60018 	sw	a2,24(sp)
80005c24:	8fa5001c 	lw	a1,28(sp)
80005c28:	1440fff6 	bnez	v0,80005c04 <get_device+0x9c>
80005c2c:	8fa60018 	lw	a2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:69
			return ret;
		}
		/* The current directory may not be a device, so it must have a fs. */
		assert(node->in_fs != NULL);
80005c30:	8fa20010 	lw	v0,16(sp)
80005c34:	8c440044 	lw	a0,68(v0)
80005c38:	5080001c 	beqzl	a0,80005cac <get_device+0x144>
80005c3c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:70
		*node_store = fsop_get_root(node->in_fs);
80005c40:	8c82008c 	lw	v0,140(a0)
80005c44:	afa5001c 	sw	a1,28(sp)
80005c48:	0040f809 	jalr	v0
80005c4c:	afa60018 	sw	a2,24(sp)
80005c50:	8fa60018 	lw	a2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:71
		vop_ref_dec(node);
80005c54:	8fa40010 	lw	a0,16(sp)
80005c58:	0c001164 	jal	80004590 <inode_ref_dec>
80005c5c:	acc20000 	sw	v0,0(a2)
80005c60:	8fa5001c 	lw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:75
	}

	/* ///... or :/... */
	while (*(++path) == '/') ;
80005c64:	2403002f 	li	v1,47
80005c68:	26100001 	addiu	s0,s0,1
80005c6c:	92020000 	lbu	v0,0(s0)
80005c70:	5043fffe 	beql	v0,v1,80005c6c <get_device+0x104>
80005c74:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:78
	*subpath = path;
	return 0;
}
80005c78:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:76
		vop_ref_dec(node);
	}

	/* ///... or :/... */
	while (*(++path) == '/') ;
	*subpath = path;
80005c7c:	acb00000 	sw	s0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:77
	return 0;
80005c80:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:78
}
80005c84:	8fb00020 	lw	s0,32(sp)
80005c88:	03e00008 	jr	ra
80005c8c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:59
	 * /path is a path relative to the root of the "boot filesystem"
	 * :path is a path relative to the root of the current filesystem
	 * */
	int ret;
	if (*path == '/') {
		if ((ret = vfs_get_bootfs(node_store)) != 0) {
80005c90:	00c02021 	move	a0,a2
80005c94:	0c0011f2 	jal	800047c8 <vfs_get_bootfs>
80005c98:	afa5001c 	sw	a1,28(sp)
80005c9c:	1040fff1 	beqz	v0,80005c64 <get_device+0xfc>
80005ca0:	8fa5001c 	lw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:78

	/* ///... or :/... */
	while (*(++path) == '/') ;
	*subpath = path;
	return 0;
}
80005ca4:	08001702 	j	80005c08 <get_device+0xa0>
80005ca8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:69
		struct inode *node;
		if ((ret = vfs_get_curdir(&node)) != 0) {
			return ret;
		}
		/* The current directory may not be a device, so it must have a fs. */
		assert(node->in_fs != NULL);
80005cac:	3c068002 	lui	a2,0x8002
80005cb0:	3c078002 	lui	a3,0x8002
80005cb4:	248417b4 	addiu	a0,a0,6068
80005cb8:	24050045 	li	a1,69
80005cbc:	24c609b0 	addiu	a2,a2,2480
80005cc0:	0c006afd 	jal	8001abf4 <__panic>
80005cc4:	24e717c0 	addiu	a3,a3,6080

80005cc8 <vfs_lookup>:
vfs_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:86
 * Name-to-inode translation.
 * (In BSD, both of these are subsumed by namei().)
 */

int vfs_lookup(char *path, struct inode **node_store)
{
80005cc8:	27bdffd8 	addiu	sp,sp,-40
80005ccc:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:89
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005cd0:	27a60010 	addiu	a2,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:86
 * Name-to-inode translation.
 * (In BSD, both of these are subsumed by namei().)
 */

int vfs_lookup(char *path, struct inode **node_store)
{
80005cd4:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:89
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005cd8:	27a50028 	addiu	a1,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:86
 * Name-to-inode translation.
 * (In BSD, both of these are subsumed by namei().)
 */

int vfs_lookup(char *path, struct inode **node_store)
{
80005cdc:	afb10020 	sw	s1,32(sp)
80005ce0:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:89
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005ce4:	0c0016da 	jal	80005b68 <get_device>
80005ce8:	afa40028 	sw	a0,40(sp)
80005cec:	1440001a 	bnez	v0,80005d58 <vfs_lookup+0x90>
80005cf0:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:92
		return ret;
	}
	if (*path != '\0') {
80005cf4:	8fa20028 	lw	v0,40(sp)
80005cf8:	90420000 	lbu	v0,0(v0)
80005cfc:	1040001c 	beqz	v0,80005d70 <vfs_lookup+0xa8>
80005d00:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:93
		ret = vop_lookup(node, path, node_store);
80005d04:	8fb10010 	lw	s1,16(sp)
80005d08:	12200020 	beqz	s1,80005d8c <vfs_lookup+0xc4>
80005d0c:	3c048002 	lui	a0,0x8002
80005d10:	8e220048 	lw	v0,72(s1)
80005d14:	1040001e 	beqz	v0,80005d90 <vfs_lookup+0xc8>
80005d18:	3c068002 	lui	a2,0x8002
80005d1c:	8c420054 	lw	v0,84(v0)
80005d20:	1040001a 	beqz	v0,80005d8c <vfs_lookup+0xc4>
80005d24:	3c058002 	lui	a1,0x8002
80005d28:	02202021 	move	a0,s1
80005d2c:	0c0010e5 	jal	80004394 <inode_check>
80005d30:	24a51824 	addiu	a1,a1,6180
80005d34:	8e220048 	lw	v0,72(s1)
80005d38:	8fa40010 	lw	a0,16(sp)
80005d3c:	8fa50028 	lw	a1,40(sp)
80005d40:	8c420054 	lw	v0,84(v0)
80005d44:	0040f809 	jalr	v0
80005d48:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:94
		vop_ref_dec(node);
80005d4c:	8fa40010 	lw	a0,16(sp)
80005d50:	0c001164 	jal	80004590 <inode_ref_dec>
80005d54:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:99
		return ret;
	}
	*node_store = node;
	return 0;
}
80005d58:	8fbf0024 	lw	ra,36(sp)
80005d5c:	02201021 	move	v0,s1
80005d60:	8fb0001c 	lw	s0,28(sp)
80005d64:	8fb10020 	lw	s1,32(sp)
80005d68:	03e00008 	jr	ra
80005d6c:	27bd0028 	addiu	sp,sp,40
80005d70:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:97
	if (*path != '\0') {
		ret = vop_lookup(node, path, node_store);
		vop_ref_dec(node);
		return ret;
	}
	*node_store = node;
80005d74:	ae020000 	sw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:99
	return 0;
}
80005d78:	02201021 	move	v0,s1
80005d7c:	8fb0001c 	lw	s0,28(sp)
80005d80:	8fb10020 	lw	s1,32(sp)
80005d84:	03e00008 	jr	ra
80005d88:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:93
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
		return ret;
	}
	if (*path != '\0') {
		ret = vop_lookup(node, path, node_store);
80005d8c:	3c068002 	lui	a2,0x8002
80005d90:	3c078002 	lui	a3,0x8002
80005d94:	248417b4 	addiu	a0,a0,6068
80005d98:	2405005d 	li	a1,93
80005d9c:	24c609b0 	addiu	a2,a2,2480
80005da0:	0c006afd 	jal	8001abf4 <__panic>
80005da4:	24e717d4 	addiu	a3,a3,6100

80005da8 <vfs_lookup_parent>:
vfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:102
	*node_store = node;
	return 0;
}

int vfs_lookup_parent(char *path, struct inode **node_store, char **endp)
{
80005da8:	27bdffd8 	addiu	sp,sp,-40
80005dac:	afb1001c 	sw	s1,28(sp)
80005db0:	afb00018 	sw	s0,24(sp)
80005db4:	00a08821 	move	s1,a1
80005db8:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:105
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005dbc:	27a50028 	addiu	a1,sp,40
80005dc0:	27a60010 	addiu	a2,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:102
	*node_store = node;
	return 0;
}

int vfs_lookup_parent(char *path, struct inode **node_store, char **endp)
{
80005dc4:	afb20020 	sw	s2,32(sp)
80005dc8:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:105
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005dcc:	0c0016da 	jal	80005b68 <get_device>
80005dd0:	afa40028 	sw	a0,40(sp)
80005dd4:	1440001b 	bnez	v0,80005e44 <vfs_lookup_parent+0x9c>
80005dd8:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:109
		return ret;
	}
	ret =
	    (*path != '\0') ? vop_lookup_parent(node, path, node_store,
80005ddc:	8fa20028 	lw	v0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:110
						endp) : -E_INVAL;
80005de0:	90420000 	lbu	v0,0(v0)
80005de4:	10400015 	beqz	v0,80005e3c <vfs_lookup_parent+0x94>
80005de8:	2412ffea 	li	s2,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:109
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
		return ret;
	}
	ret =
	    (*path != '\0') ? vop_lookup_parent(node, path, node_store,
80005dec:	8fb20010 	lw	s2,16(sp)
80005df0:	1240001b 	beqz	s2,80005e60 <vfs_lookup_parent+0xb8>
80005df4:	3c048002 	lui	a0,0x8002
80005df8:	8e420048 	lw	v0,72(s2)
80005dfc:	10400019 	beqz	v0,80005e64 <vfs_lookup_parent+0xbc>
80005e00:	3c068002 	lui	a2,0x8002
80005e04:	8c420058 	lw	v0,88(v0)
80005e08:	10400015 	beqz	v0,80005e60 <vfs_lookup_parent+0xb8>
80005e0c:	3c058002 	lui	a1,0x8002
80005e10:	02402021 	move	a0,s2
80005e14:	0c0010e5 	jal	80004394 <inode_check>
80005e18:	24a51884 	addiu	a1,a1,6276
80005e1c:	8e420048 	lw	v0,72(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:110
						endp) : -E_INVAL;
80005e20:	8fa40010 	lw	a0,16(sp)
80005e24:	8fa50028 	lw	a1,40(sp)
80005e28:	8c420058 	lw	v0,88(v0)
80005e2c:	02203021 	move	a2,s1
80005e30:	0040f809 	jalr	v0
80005e34:	02003821 	move	a3,s0
80005e38:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:111
	vop_ref_dec(node);
80005e3c:	0c001164 	jal	80004590 <inode_ref_dec>
80005e40:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:113
	return ret;
}
80005e44:	8fbf0024 	lw	ra,36(sp)
80005e48:	02401021 	move	v0,s2
80005e4c:	8fb1001c 	lw	s1,28(sp)
80005e50:	8fb20020 	lw	s2,32(sp)
80005e54:	8fb00018 	lw	s0,24(sp)
80005e58:	03e00008 	jr	ra
80005e5c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfslookup.c:109
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
		return ret;
	}
	ret =
	    (*path != '\0') ? vop_lookup_parent(node, path, node_store,
80005e60:	3c068002 	lui	a2,0x8002
80005e64:	3c078002 	lui	a3,0x8002
80005e68:	248417b4 	addiu	a0,a0,6068
80005e6c:	2405006e 	li	a1,110
80005e70:	24c609b0 	addiu	a2,a2,2480
80005e74:	0c006afd 	jal	8001abf4 <__panic>
80005e78:	24e7182c 	addiu	a3,a3,6188

80005e7c <vfs_get_curdir>:
get_cwd_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005e7c:	3c028015 	lui	v0,0x8015
80005e80:	8c4377a4 	lw	v1,30628(v0)
vfs_get_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:38
 * 
 * We do not synchronize current->fs_struct->pwd, because it belongs exclusively
 * to its own process(or threads) with the holding lock.
 */
int vfs_get_curdir(struct inode **dir_store)
{
80005e84:	27bdffe0 	addiu	sp,sp,-32
80005e88:	afb00014 	sw	s0,20(sp)
get_cwd_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005e8c:	8c6300bc 	lw	v1,188(v1)
vfs_get_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:38
 * 
 * We do not synchronize current->fs_struct->pwd, because it belongs exclusively
 * to its own process(or threads) with the holding lock.
 */
int vfs_get_curdir(struct inode **dir_store)
{
80005e90:	afb10018 	sw	s1,24(sp)
80005e94:	afbf001c 	sw	ra,28(sp)
get_cwd_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005e98:	8c700000 	lw	s0,0(v1)
vfs_get_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:38
 * 
 * We do not synchronize current->fs_struct->pwd, because it belongs exclusively
 * to its own process(or threads) with the holding lock.
 */
int vfs_get_curdir(struct inode **dir_store)
{
80005e9c:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:40
	struct inode *node;
	if ((node = get_cwd_nolock()) != NULL) {
80005ea0:	12000005 	beqz	s0,80005eb8 <vfs_get_curdir+0x3c>
80005ea4:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:41
		vop_ref_inc(node);
80005ea8:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80005eac:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:42
		*dir_store = node;
80005eb0:	ae300000 	sw	s0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:43
		return 0;
80005eb4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:46
	}
	return -E_NOENT;
}
80005eb8:	8fbf001c 	lw	ra,28(sp)
80005ebc:	8fb10018 	lw	s1,24(sp)
80005ec0:	8fb00014 	lw	s0,20(sp)
80005ec4:	03e00008 	jr	ra
80005ec8:	27bd0020 	addiu	sp,sp,32

80005ecc <vfs_set_curdir>:
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:53
/*
 * Set current directory as a vnode.
 * The passed inode must in fact be a directory.
 */
int vfs_set_curdir(struct inode *dir)
{
80005ecc:	27bdffd0 	addiu	sp,sp,-48
80005ed0:	afb10024 	sw	s1,36(sp)
lock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:23
	pls_read(current)->fs_struct->pwd = pwd;
}

static void lock_cfs(void)
{
	lock_fs(pls_read(current)->fs_struct);
80005ed4:	3c118015 	lui	s1,0x8015
80005ed8:	8e2277a4 	lw	v0,30628(s1)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:53
/*
 * Set current directory as a vnode.
 * The passed inode must in fact be a directory.
 */
int vfs_set_curdir(struct inode *dir)
{
80005edc:	afb00020 	sw	s0,32(sp)
80005ee0:	00808021 	move	s0,a0
lock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:23
	pls_read(current)->fs_struct->pwd = pwd;
}

static void lock_cfs(void)
{
	lock_fs(pls_read(current)->fs_struct);
80005ee4:	8c4400bc 	lw	a0,188(v0)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:53
/*
 * Set current directory as a vnode.
 * The passed inode must in fact be a directory.
 */
int vfs_set_curdir(struct inode *dir)
{
80005ee8:	afb20028 	sw	s2,40(sp)
80005eec:	afbf002c 	sw	ra,44(sp)
lock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:23
	pls_read(current)->fs_struct->pwd = pwd;
}

static void lock_cfs(void)
{
	lock_fs(pls_read(current)->fs_struct);
80005ef0:	0c003272 	jal	8000c9c8 <lock_fs>
80005ef4:	00000000 	nop
get_cwd_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005ef8:	8e2277a4 	lw	v0,30628(s1)
80005efc:	8c4400bc 	lw	a0,188(v0)
80005f00:	8c920000 	lw	s2,0(a0)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:57
int vfs_set_curdir(struct inode *dir)
{
	int ret = 0;
	lock_cfs();
	struct inode *old_dir;
	if ((old_dir = get_cwd_nolock()) != dir) {
80005f04:	52120022 	beql	s0,s2,80005f90 <vfs_set_curdir+0xc4>
80005f08:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:58
		if (dir != NULL) {
80005f0c:	12000019 	beqz	s0,80005f74 <vfs_set_curdir+0xa8>
80005f10:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:60
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
80005f14:	8e020048 	lw	v0,72(s0)
80005f18:	10400047 	beqz	v0,80006038 <vfs_set_curdir+0x16c>
80005f1c:	3c048002 	lui	a0,0x8002
80005f20:	8c420040 	lw	v0,64(v0)
80005f24:	10400044 	beqz	v0,80006038 <vfs_set_curdir+0x16c>
80005f28:	3c058002 	lui	a1,0x8002
80005f2c:	02002021 	move	a0,s0
80005f30:	0c0010e5 	jal	80004394 <inode_check>
80005f34:	24a50bc8 	addiu	a1,a1,3016
80005f38:	8e020048 	lw	v0,72(s0)
80005f3c:	02002021 	move	a0,s0
80005f40:	8c420040 	lw	v0,64(v0)
80005f44:	0040f809 	jalr	v0
80005f48:	27a50010 	addiu	a1,sp,16
80005f4c:	14400019 	bnez	v0,80005fb4 <vfs_set_curdir+0xe8>
80005f50:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:63
				goto out;
			}
			if (!S_ISDIR(type)) {
80005f54:	24024000 	li	v0,16384
80005f58:	3063f000 	andi	v1,v1,0xf000
80005f5c:	1462002b 	bne	v1,v0,8000600c <vfs_set_curdir+0x140>
80005f60:	8e2377a4 	lw	v1,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:67
				ret = -E_NOTDIR;
				goto out;
			}
			vop_ref_inc(dir);
80005f64:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80005f68:	02002021 	move	a0,s0
80005f6c:	8e2277a4 	lw	v0,30628(s1)
80005f70:	8c4400bc 	lw	a0,188(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:70
		}
		set_cwd_nolock(dir);
		if (old_dir != NULL) {
80005f74:	1240001a 	beqz	s2,80005fe0 <vfs_set_curdir+0x114>
80005f78:	ac900000 	sw	s0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:71
			vop_ref_dec(old_dir);
80005f7c:	0c001164 	jal	80004590 <inode_ref_dec>
80005f80:	02402021 	move	a0,s2
80005f84:	8e2377a4 	lw	v1,30628(s1)
80005f88:	00001021 	move	v0,zero
80005f8c:	8c6400bc 	lw	a0,188(v1)
unlock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80005f90:	0c003274 	jal	8000c9d0 <unlock_fs>
80005f94:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80005f98:	8fbf002c 	lw	ra,44(sp)
80005f9c:	8fa20018 	lw	v0,24(sp)
80005fa0:	8fb20028 	lw	s2,40(sp)
80005fa4:	8fb10024 	lw	s1,36(sp)
80005fa8:	8fb00020 	lw	s0,32(sp)
80005fac:	03e00008 	jr	ra
80005fb0:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:60
	lock_cfs();
	struct inode *old_dir;
	if ((old_dir = get_cwd_nolock()) != dir) {
		if (dir != NULL) {
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
80005fb4:	8e2377a4 	lw	v1,30628(s1)
80005fb8:	8c6400bc 	lw	a0,188(v1)
unlock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80005fbc:	0c003274 	jal	8000c9d0 <unlock_fs>
80005fc0:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80005fc4:	8fbf002c 	lw	ra,44(sp)
80005fc8:	8fa20018 	lw	v0,24(sp)
80005fcc:	8fb20028 	lw	s2,40(sp)
80005fd0:	8fb10024 	lw	s1,36(sp)
80005fd4:	8fb00020 	lw	s0,32(sp)
80005fd8:	03e00008 	jr	ra
80005fdc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:70
				goto out;
			}
			vop_ref_inc(dir);
		}
		set_cwd_nolock(dir);
		if (old_dir != NULL) {
80005fe0:	8c4400bc 	lw	a0,188(v0)
80005fe4:	00001021 	move	v0,zero
unlock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80005fe8:	0c003274 	jal	8000c9d0 <unlock_fs>
80005fec:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80005ff0:	8fbf002c 	lw	ra,44(sp)
80005ff4:	8fa20018 	lw	v0,24(sp)
80005ff8:	8fb20028 	lw	s2,40(sp)
80005ffc:	8fb10024 	lw	s1,36(sp)
80006000:	8fb00020 	lw	s0,32(sp)
80006004:	03e00008 	jr	ra
80006008:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:64
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
				goto out;
			}
			if (!S_ISDIR(type)) {
				ret = -E_NOTDIR;
8000600c:	2402ffec 	li	v0,-20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:63
		if (dir != NULL) {
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
				goto out;
			}
			if (!S_ISDIR(type)) {
80006010:	8c6400bc 	lw	a0,188(v1)
unlock_cfs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80006014:	0c003274 	jal	8000c9d0 <unlock_fs>
80006018:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
8000601c:	8fbf002c 	lw	ra,44(sp)
80006020:	8fa20018 	lw	v0,24(sp)
80006024:	8fb20028 	lw	s2,40(sp)
80006028:	8fb10024 	lw	s1,36(sp)
8000602c:	8fb00020 	lw	s0,32(sp)
80006030:	03e00008 	jr	ra
80006034:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:60
	lock_cfs();
	struct inode *old_dir;
	if ((old_dir = get_cwd_nolock()) != dir) {
		if (dir != NULL) {
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
80006038:	3c068002 	lui	a2,0x8002
8000603c:	3c078002 	lui	a3,0x8002
80006040:	24841894 	addiu	a0,a0,6292
80006044:	2405003c 	li	a1,60
80006048:	24c609b0 	addiu	a2,a2,2480
8000604c:	0c006afd 	jal	8001abf4 <__panic>
80006050:	24e70b78 	addiu	a3,a3,2936

80006054 <vfs_chdir>:
vfs_chdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:84
/*
 * Set current directory, as a pathname. Use vfs_lookup to translate
 * it to a inode.
 */
int vfs_chdir(char *path)
{
80006054:	27bdffe0 	addiu	sp,sp,-32
80006058:	afb00018 	sw	s0,24(sp)
8000605c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:87
	int ret;
	struct inode *node;
	if ((ret = vfs_lookup(path, &node)) == 0) {
80006060:	0c001732 	jal	80005cc8 <vfs_lookup>
80006064:	27a50010 	addiu	a1,sp,16
80006068:	14400006 	bnez	v0,80006084 <vfs_chdir+0x30>
8000606c:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:88
		ret = vfs_set_curdir(node);
80006070:	0c0017b3 	jal	80005ecc <vfs_set_curdir>
80006074:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:89
		vop_ref_dec(node);
80006078:	8fa40010 	lw	a0,16(sp)
8000607c:	0c001164 	jal	80004590 <inode_ref_dec>
80006080:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:92
	}
	return ret;
}
80006084:	8fbf001c 	lw	ra,28(sp)
80006088:	02001021 	move	v0,s0
8000608c:	8fb00018 	lw	s0,24(sp)
80006090:	03e00008 	jr	ra
80006094:	27bd0020 	addiu	sp,sp,32

80006098 <vfs_getcwd>:
vfs_getcwd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:99
/*
 * Get current directory, as a pathname.
 * Use vop_namefile to get the pathname.
 */
int vfs_getcwd(struct iobuf *iob)
{
80006098:	27bdffc8 	addiu	sp,sp,-56
8000609c:	afb0002c 	sw	s0,44(sp)
800060a0:	00808021 	move	s0,a0
800060a4:	afb10030 	sw	s1,48(sp)
800060a8:	afbf0034 	sw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:102
	int ret;
	struct inode *node;
	if ((ret = vfs_get_curdir(&node)) != 0) {
800060ac:	0c00179f 	jal	80005e7c <vfs_get_curdir>
800060b0:	27a4001c 	addiu	a0,sp,28
800060b4:	14400014 	bnez	v0,80006108 <vfs_getcwd+0x70>
800060b8:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:106
		return ret;
	}
	/* The current dir must be a directory, and thus it is not a device. */
	assert(node->in_fs != NULL);
800060bc:	8fa2001c 	lw	v0,28(sp)
800060c0:	8c440044 	lw	a0,68(v0)
800060c4:	5080003a 	beqzl	a0,800061b0 <vfs_getcwd+0x118>
800060c8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:108

	const char *devname = vfs_get_devname(node->in_fs);
800060cc:	0c001417 	jal	8000505c <vfs_get_devname>
800060d0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:110
	if ((ret =
	     iobuf_move(iob, (char *)devname, strlen(devname), 1, NULL)) != 0) {
800060d4:	00402021 	move	a0,v0
800060d8:	0c005b6b 	jal	80016dac <strlen>
800060dc:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:109
	}
	/* The current dir must be a directory, and thus it is not a device. */
	assert(node->in_fs != NULL);

	const char *devname = vfs_get_devname(node->in_fs);
	if ((ret =
800060e0:	8fa50020 	lw	a1,32(sp)
800060e4:	00403021 	move	a2,v0
800060e8:	02002021 	move	a0,s0
800060ec:	24070001 	li	a3,1
800060f0:	0c00337a 	jal	8000cde8 <iobuf_move>
800060f4:	afa00010 	sw	zero,16(sp)
800060f8:	10400009 	beqz	v0,80006120 <vfs_getcwd+0x88>
800060fc:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:120
		goto out;
	}
	ret = vop_namefile(node, iob);

out:
	vop_ref_dec(node);
80006100:	0c001164 	jal	80004590 <inode_ref_dec>
80006104:	8fa4001c 	lw	a0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:122
	return ret;
}
80006108:	8fbf0034 	lw	ra,52(sp)
8000610c:	02201021 	move	v0,s1
80006110:	8fb0002c 	lw	s0,44(sp)
80006114:	8fb10030 	lw	s1,48(sp)
80006118:	03e00008 	jr	ra
8000611c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:113
	const char *devname = vfs_get_devname(node->in_fs);
	if ((ret =
	     iobuf_move(iob, (char *)devname, strlen(devname), 1, NULL)) != 0) {
		goto out;
	}
	char colon = ':';
80006120:	2402003a 	li	v0,58
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:114
	if ((ret = iobuf_move(iob, &colon, sizeof(colon), 1, NULL)) != 0) {
80006124:	02002021 	move	a0,s0
80006128:	27a50018 	addiu	a1,sp,24
8000612c:	24060001 	li	a2,1
80006130:	24070001 	li	a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:113
	const char *devname = vfs_get_devname(node->in_fs);
	if ((ret =
	     iobuf_move(iob, (char *)devname, strlen(devname), 1, NULL)) != 0) {
		goto out;
	}
	char colon = ':';
80006134:	a3a20018 	sb	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:114
	if ((ret = iobuf_move(iob, &colon, sizeof(colon), 1, NULL)) != 0) {
80006138:	0c00337a 	jal	8000cde8 <iobuf_move>
8000613c:	afa00010 	sw	zero,16(sp)
80006140:	1440ffef 	bnez	v0,80006100 <vfs_getcwd+0x68>
80006144:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:117
		goto out;
	}
	ret = vop_namefile(node, iob);
80006148:	8fb1001c 	lw	s1,28(sp)
8000614c:	12200011 	beqz	s1,80006194 <vfs_getcwd+0xfc>
80006150:	3c048002 	lui	a0,0x8002
80006154:	8e220048 	lw	v0,72(s1)
80006158:	1040000f 	beqz	v0,80006198 <vfs_getcwd+0x100>
8000615c:	3c068002 	lui	a2,0x8002
80006160:	8c420030 	lw	v0,48(v0)
80006164:	1040000b 	beqz	v0,80006194 <vfs_getcwd+0xfc>
80006168:	3c058002 	lui	a1,0x8002
8000616c:	02202021 	move	a0,s1
80006170:	0c0010e5 	jal	80004394 <inode_check>
80006174:	24a518f4 	addiu	a1,a1,6388
80006178:	8e220048 	lw	v0,72(s1)
8000617c:	8fa4001c 	lw	a0,28(sp)
80006180:	8c420030 	lw	v0,48(v0)
80006184:	0040f809 	jalr	v0
80006188:	02002821 	move	a1,s0
8000618c:	08001840 	j	80006100 <vfs_getcwd+0x68>
80006190:	00408821 	move	s1,v0
80006194:	3c068002 	lui	a2,0x8002
80006198:	3c078002 	lui	a3,0x8002
8000619c:	24841894 	addiu	a0,a0,6292
800061a0:	24050075 	li	a1,117
800061a4:	24c609b0 	addiu	a2,a2,2480
800061a8:	0c006afd 	jal	8001abf4 <__panic>
800061ac:	24e718a0 	addiu	a3,a3,6304
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/vfs/vfspath.c:106
	struct inode *node;
	if ((ret = vfs_get_curdir(&node)) != 0) {
		return ret;
	}
	/* The current dir must be a directory, and thus it is not a device. */
	assert(node->in_fs != NULL);
800061b0:	3c068002 	lui	a2,0x8002
800061b4:	3c078002 	lui	a3,0x8002
800061b8:	24841894 	addiu	a0,a0,6292
800061bc:	2405006a 	li	a1,106
800061c0:	24c609b0 	addiu	a2,a2,2480
800061c4:	0c006afd 	jal	8001abf4 <__panic>
800061c8:	24e717c0 	addiu	a3,a3,6080

800061cc <bitmap_create>:
bitmap_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:18
	uint32_t nwords;
	WORD_TYPE *map;
};

struct bitmap *bitmap_create(uint32_t nbits)
{
800061cc:	27bdffd8 	addiu	sp,sp,-40
800061d0:	afb00018 	sw	s0,24(sp)
800061d4:	afbf0024 	sw	ra,36(sp)
800061d8:	afb20020 	sw	s2,32(sp)
800061dc:	afb1001c 	sw	s1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:20
	static_assert(WORD_BITS != 0);
	assert(nbits != 0 && nbits + WORD_BITS > nbits);
800061e0:	10800036 	beqz	a0,800062bc <bitmap_create+0xf0>
800061e4:	00808021 	move	s0,a0
800061e8:	24820020 	addiu	v0,a0,32
800061ec:	0082102b 	sltu	v0,a0,v0
800061f0:	10400033 	beqz	v0,800062c0 <bitmap_create+0xf4>
800061f4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:23

	struct bitmap *bitmap;
	if ((bitmap = kmalloc(sizeof(struct bitmap))) == NULL) {
800061f8:	0c005478 	jal	800151e0 <kmalloc>
800061fc:	2404000c 	li	a0,12
80006200:	10400023 	beqz	v0,80006290 <bitmap_create+0xc4>
80006204:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:27
		return NULL;
	}

	uint32_t nwords = ROUNDUP_DIV(nbits, WORD_BITS);
80006208:	2612001f 	addiu	s2,s0,31
8000620c:	00129142 	srl	s2,s2,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:29
	WORD_TYPE *map;
	if ((map = kmalloc(sizeof(WORD_TYPE) * nwords)) == NULL) {
80006210:	00123080 	sll	a2,s2,0x2
80006214:	00c02021 	move	a0,a2
80006218:	0c005478 	jal	800151e0 <kmalloc>
8000621c:	afa60010 	sw	a2,16(sp)
80006220:	10400022 	beqz	v0,800062ac <bitmap_create+0xe0>
80006224:	8fa60010 	lw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:34
		kfree(bitmap);
		return NULL;
	}

	bitmap->nbits = nbits, bitmap->nwords = nwords;
80006228:	ae300000 	sw	s0,0(s1)
8000622c:	ae320004 	sw	s2,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:35
	bitmap->map = memset(map, 0xFF, sizeof(WORD_TYPE) * nwords);
80006230:	00402021 	move	a0,v0
80006234:	0c005c44 	jal	80017110 <memset>
80006238:	240500ff 	li	a1,255
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:38

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
8000623c:	00121940 	sll	v1,s2,0x5
80006240:	10700013 	beq	v1,s0,80006290 <bitmap_create+0xc4>
80006244:	ae220008 	sw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:41
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
80006248:	00101942 	srl	v1,s0,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:39
	bitmap->nbits = nbits, bitmap->nwords = nwords;
	bitmap->map = memset(map, 0xFF, sizeof(WORD_TYPE) * nwords);

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;
8000624c:	2652ffff 	addiu	s2,s2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:41

		assert(nbits / WORD_BITS == ix);
80006250:	1472002a 	bne	v1,s2,800062fc <bitmap_create+0x130>
80006254:	00032140 	sll	a0,v1,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:39
	bitmap->nbits = nbits, bitmap->nwords = nwords;
	bitmap->map = memset(map, 0xFF, sizeof(WORD_TYPE) * nwords);

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;
80006258:	02048023 	subu	s0,s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:42

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);
8000625c:	2604ffff 	addiu	a0,s0,-1
80006260:	2c84001f 	sltiu	a0,a0,31
80006264:	1080001d 	beqz	a0,800062dc <bitmap_create+0x110>
80006268:	00031880 	sll	v1,v1,0x2
8000626c:	00431021 	addu	v0,v0,v1
80006270:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:45

		for (; overbits < WORD_BITS; overbits++) {
			bitmap->map[ix] ^= (1 << overbits);
80006274:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:44
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);

		for (; overbits < WORD_BITS; overbits++) {
80006278:	24050020 	li	a1,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:45
			bitmap->map[ix] ^= (1 << overbits);
8000627c:	02062004 	sllv	a0,a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:44
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);

		for (; overbits < WORD_BITS; overbits++) {
80006280:	26100001 	addiu	s0,s0,1
80006284:	1605fffd 	bne	s0,a1,8000627c <bitmap_create+0xb0>
80006288:	00641826 	xor	v1,v1,a0
8000628c:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:49
			bitmap->map[ix] ^= (1 << overbits);
		}
	}
	return bitmap;
}
80006290:	8fbf0024 	lw	ra,36(sp)
80006294:	02201021 	move	v0,s1
80006298:	8fb20020 	lw	s2,32(sp)
8000629c:	8fb1001c 	lw	s1,28(sp)
800062a0:	8fb00018 	lw	s0,24(sp)
800062a4:	03e00008 	jr	ra
800062a8:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:30
	}

	uint32_t nwords = ROUNDUP_DIV(nbits, WORD_BITS);
	WORD_TYPE *map;
	if ((map = kmalloc(sizeof(WORD_TYPE) * nwords)) == NULL) {
		kfree(bitmap);
800062ac:	0c0054a3 	jal	8001528c <kfree>
800062b0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:31
		return NULL;
800062b4:	080018a4 	j	80006290 <bitmap_create+0xc4>
800062b8:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:20
};

struct bitmap *bitmap_create(uint32_t nbits)
{
	static_assert(WORD_BITS != 0);
	assert(nbits != 0 && nbits + WORD_BITS > nbits);
800062bc:	3c048002 	lui	a0,0x8002
800062c0:	3c068002 	lui	a2,0x8002
800062c4:	3c078002 	lui	a3,0x8002
800062c8:	24841900 	addiu	a0,a0,6400
800062cc:	24050014 	li	a1,20
800062d0:	24c609b0 	addiu	a2,a2,2480
800062d4:	0c006afd 	jal	8001abf4 <__panic>
800062d8:	24e71924 	addiu	a3,a3,6436
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:42
	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);
800062dc:	3c048002 	lui	a0,0x8002
800062e0:	3c068002 	lui	a2,0x8002
800062e4:	3c078002 	lui	a3,0x8002
800062e8:	24841900 	addiu	a0,a0,6400
800062ec:	2405002a 	li	a1,42
800062f0:	24c609b0 	addiu	a2,a2,2480
800062f4:	0c006afd 	jal	8001abf4 <__panic>
800062f8:	24e71964 	addiu	a3,a3,6500
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:41

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
800062fc:	3c048002 	lui	a0,0x8002
80006300:	3c068002 	lui	a2,0x8002
80006304:	3c078002 	lui	a3,0x8002
80006308:	24841900 	addiu	a0,a0,6400
8000630c:	24050029 	li	a1,41
80006310:	24c609b0 	addiu	a2,a2,2480
80006314:	0c006afd 	jal	8001abf4 <__panic>
80006318:	24e7194c 	addiu	a3,a3,6476

8000631c <bitmap_alloc>:
bitmap_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:54
}

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
8000631c:	8c820004 	lw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:52
	}
	return bitmap;
}

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
80006320:	27bdffe8 	addiu	sp,sp,-24
80006324:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:55
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
80006328:	1040000d 	beqz	v0,80006360 <bitmap_alloc+0x44>
8000632c:	8c870008 	lw	a3,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:56
		if (map[ix] != 0) {
80006330:	8ce60000 	lw	a2,0(a3)
80006334:	14c0000e 	bnez	a2,80006370 <bitmap_alloc+0x54>
80006338:	24e30004 	addiu	v1,a3,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:55

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
8000633c:	080018d5 	j	80006354 <bitmap_alloc+0x38>
80006340:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:56
		if (map[ix] != 0) {
80006344:	24630004 	addiu	v1,v1,4
80006348:	8c66fffc 	lw	a2,-4(v1)
8000634c:	54c0000a 	bnezl	a2,80006378 <bitmap_alloc+0x5c>
80006350:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:55

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
80006354:	24840001 	addiu	a0,a0,1
80006358:	5482fffa 	bnel	a0,v0,80006344 <bitmap_alloc+0x28>
8000635c:	00603821 	move	a3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:69
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
}
80006360:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:68
				}
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
80006364:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:69
}
80006368:	03e00008 	jr	ra
8000636c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:55

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
80006370:	00002021 	move	a0,zero
80006374:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:58
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
80006378:	24090001 	li	t1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:57
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
8000637c:	080018e3 	j	8000638c <bitmap_alloc+0x70>
80006380:	240a0020 	li	t2,32
80006384:	504a000e 	beql	v0,t2,800063c0 <bitmap_alloc+0xa4>
80006388:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:58
				WORD_TYPE mask = (1 << offset);
8000638c:	00491804 	sllv	v1,t1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:59
				if (map[ix] & mask) {
80006390:	00664024 	and	t0,v1,a2
80006394:	5100fffb 	beqzl	t0,80006384 <bitmap_alloc+0x68>
80006398:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:69
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
}
8000639c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:61
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
				if (map[ix] & mask) {
					map[ix] ^= mask;
					*index_store = ix * WORD_BITS + offset;
800063a0:	00042140 	sll	a0,a0,0x5
800063a4:	00442021 	addu	a0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:60
	for (ix = 0; ix < nwords; ix++) {
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
				if (map[ix] & mask) {
					map[ix] ^= mask;
800063a8:	00663026 	xor	a2,v1,a2
800063ac:	ace60000 	sw	a2,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:62
					*index_store = ix * WORD_BITS + offset;
					return 0;
800063b0:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:61
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
				if (map[ix] & mask) {
					map[ix] ^= mask;
					*index_store = ix * WORD_BITS + offset;
800063b4:	aca40000 	sw	a0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:69
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
}
800063b8:	03e00008 	jr	ra
800063bc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:65
					map[ix] ^= mask;
					*index_store = ix * WORD_BITS + offset;
					return 0;
				}
			}
			assert(0);
800063c0:	3c068002 	lui	a2,0x8002
800063c4:	3c078002 	lui	a3,0x8002
800063c8:	24841900 	addiu	a0,a0,6400
800063cc:	24050041 	li	a1,65
800063d0:	24c609b0 	addiu	a2,a2,2480
800063d4:	0c006afd 	jal	8001abf4 <__panic>
800063d8:	24e71fa4 	addiu	a3,a3,8100

800063dc <bitmap_test>:
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
800063dc:	8c830000 	lw	v1,0(a0)
bitmap_test():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:82
	*word = bitmap->map + ix;
	*mask = (1 << offset);
}

bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
800063e0:	27bdffe8 	addiu	sp,sp,-24
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
800063e4:	00a3182b 	sltu	v1,a1,v1
800063e8:	1060000c 	beqz	v1,8000641c <bitmap_test+0x40>
800063ec:	afbf0014 	sw	ra,20(sp)
bitmap_test():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:85

bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
800063f0:	8c830008 	lw	v1,8(a0)
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:76
static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
800063f4:	00051142 	srl	v0,a1,0x5
bitmap_test():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:85

bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
800063f8:	00021080 	sll	v0,v0,0x2
800063fc:	00621021 	addu	v0,v1,v0
80006400:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:86
}
80006404:	8fbf0014 	lw	ra,20(sp)
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:78
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
	*word = bitmap->map + ix;
	*mask = (1 << offset);
80006408:	24020001 	li	v0,1
8000640c:	00a22804 	sllv	a1,v0,a1
bitmap_test():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:86
bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
}
80006410:	00a31024 	and	v0,a1,v1
80006414:	03e00008 	jr	ra
80006418:	27bd0018 	addiu	sp,sp,24
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8000641c:	0c007e2a 	jal	8001f8a8 <bitmap_translate.part.0>
80006420:	00000000 	nop

80006424 <bitmap_free>:
80006424:	8c820000 	lw	v0,0(a0)
bitmap_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:89
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
}

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
80006428:	27bdffe8 	addiu	sp,sp,-24
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8000642c:	00a2102b 	sltu	v0,a1,v0
80006430:	1040000f 	beqz	v0,80006470 <bitmap_free+0x4c>
80006434:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:77
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
	*word = bitmap->map + ix;
80006438:	8c830008 	lw	v1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:76
static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
8000643c:	00051142 	srl	v0,a1,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:77
	*word = bitmap->map + ix;
80006440:	00021080 	sll	v0,v0,0x2
80006444:	00621021 	addu	v0,v1,v0
bitmap_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:92

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	assert(!(*word & mask));
80006448:	8c430000 	lw	v1,0(v0)
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:78
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
	*word = bitmap->map + ix;
	*mask = (1 << offset);
8000644c:	24040001 	li	a0,1
80006450:	00a42804 	sllv	a1,a0,a1
bitmap_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:92

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	assert(!(*word & mask));
80006454:	00a32024 	and	a0,a1,v1
80006458:	14800007 	bnez	a0,80006478 <bitmap_free+0x54>
8000645c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:93
	*word |= mask;
80006460:	00a32825 	or	a1,a1,v1
80006464:	ac450000 	sw	a1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:94
}
80006468:	03e00008 	jr	ra
8000646c:	27bd0018 	addiu	sp,sp,24
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
80006470:	0c007e2a 	jal	8001f8a8 <bitmap_translate.part.0>
80006474:	00000000 	nop
bitmap_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:92

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	assert(!(*word & mask));
80006478:	3c048002 	lui	a0,0x8002
8000647c:	3c068002 	lui	a2,0x8002
80006480:	3c078002 	lui	a3,0x8002
80006484:	24841900 	addiu	a0,a0,6400
80006488:	2405005c 	li	a1,92
8000648c:	24c609b0 	addiu	a2,a2,2480
80006490:	0c006afd 	jal	8001abf4 <__panic>
80006494:	24e7198c 	addiu	a3,a3,6540

80006498 <bitmap_destroy>:
bitmap_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:97
	*word |= mask;
}

void bitmap_destroy(struct bitmap *bitmap)
{
80006498:	27bdffe8 	addiu	sp,sp,-24
8000649c:	afb00010 	sw	s0,16(sp)
800064a0:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:98
	kfree(bitmap->map);
800064a4:	8c840008 	lw	a0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:97
	assert(!(*word & mask));
	*word |= mask;
}

void bitmap_destroy(struct bitmap *bitmap)
{
800064a8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:98
	kfree(bitmap->map);
800064ac:	0c0054a3 	jal	8001528c <kfree>
800064b0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:99
	kfree(bitmap);
800064b4:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:100
}
800064b8:	8fbf0014 	lw	ra,20(sp)
800064bc:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:99
}

void bitmap_destroy(struct bitmap *bitmap)
{
	kfree(bitmap->map);
	kfree(bitmap);
800064c0:	080054a3 	j	8001528c <kfree>
800064c4:	27bd0018 	addiu	sp,sp,24

800064c8 <bitmap_getdata>:
bitmap_getdata():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:104
}

void *bitmap_getdata(struct bitmap *bitmap, size_t * len_store)
{
	if (len_store != NULL) {
800064c8:	50a00006 	beqzl	a1,800064e4 <bitmap_getdata+0x1c>
800064cc:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:105
		*len_store = sizeof(WORD_TYPE) * bitmap->nwords;
800064d0:	8c820004 	lw	v0,4(a0)
800064d4:	00021080 	sll	v0,v0,0x2
800064d8:	aca20000 	sw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:108
	}
	return bitmap->map;
}
800064dc:	03e00008 	jr	ra
800064e0:	8c820008 	lw	v0,8(a0)
800064e4:	03e00008 	jr	ra
800064e8:	00000000 	nop

800064ec <sfs_init>:
sfs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:10
#include <vfs.h>

void sfs_init(void)
{
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
800064ec:	3c048002 	lui	a0,0x8002
800064f0:	3c058000 	lui	a1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:8
#include <error.h>
#include <assert.h>
#include <vfs.h>

void sfs_init(void)
{
800064f4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:10
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
800064f8:	2484199c 	addiu	a0,a0,6556
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:8
#include <error.h>
#include <assert.h>
#include <vfs.h>

void sfs_init(void)
{
800064fc:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:10
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
80006500:	0c00122c 	jal	800048b0 <register_filesystem>
80006504:	24a56cc0 	addiu	a1,a1,27840
80006508:	14400007 	bnez	v0,80006528 <sfs_init+0x3c>
8000650c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:13
		panic("failed: sfs: register_filesystem: %e.\n", ret);
	}
	if ((ret = sfs_mount("disk0")) != 0) {
80006510:	0c001b30 	jal	80006cc0 <sfs_mount>
80006514:	24840d38 	addiu	a0,a0,3384
80006518:	1440000a 	bnez	v0,80006544 <sfs_init+0x58>
8000651c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:16
		panic("failed: sfs: sfs_mount: %e.\n", ret);
	}
}
80006520:	03e00008 	jr	ra
80006524:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:11

void sfs_init(void)
{
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
		panic("failed: sfs: register_filesystem: %e.\n", ret);
80006528:	3c048002 	lui	a0,0x8002
8000652c:	3c068002 	lui	a2,0x8002
80006530:	248419a0 	addiu	a0,a0,6560
80006534:	2405000b 	li	a1,11
80006538:	24c619a8 	addiu	a2,a2,6568
8000653c:	0c006afd 	jal	8001abf4 <__panic>
80006540:	00403821 	move	a3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs.c:14
	}
	if ((ret = sfs_mount("disk0")) != 0) {
		panic("failed: sfs: sfs_mount: %e.\n", ret);
80006544:	3c048002 	lui	a0,0x8002
80006548:	3c068002 	lui	a2,0x8002
8000654c:	248419a0 	addiu	a0,a0,6560
80006550:	2405000e 	li	a1,14
80006554:	24c619d0 	addiu	a2,a2,6608
80006558:	0c006afd 	jal	8001abf4 <__panic>
8000655c:	00403821 	move	a3,v0

80006560 <sfs_do_mount>:
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:192
 * (Note: for all intents and purposes here, "sector" and
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
80006560:	8c820004 	lw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:175
 * filesystem with the same name mounted at once, or two filesystems
 * mounted on the same device at once.
 */

static int sfs_do_mount(struct device *dev, struct fs **fs_store)
{
80006564:	27bdff98 	addiu	sp,sp,-104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:192
 * (Note: for all intents and purposes here, "sector" and
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
80006568:	24031000 	li	v1,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:175
 * filesystem with the same name mounted at once, or two filesystems
 * mounted on the same device at once.
 */

static int sfs_do_mount(struct device *dev, struct fs **fs_store)
{
8000656c:	afb7005c 	sw	s7,92(sp)
80006570:	afb00040 	sw	s0,64(sp)
80006574:	afbf0064 	sw	ra,100(sp)
80006578:	afbe0060 	sw	s8,96(sp)
8000657c:	afb60058 	sw	s6,88(sp)
80006580:	afb50054 	sw	s5,84(sp)
80006584:	afb40050 	sw	s4,80(sp)
80006588:	afb3004c 	sw	s3,76(sp)
8000658c:	afb20048 	sw	s2,72(sp)
80006590:	afb10044 	sw	s1,68(sp)
80006594:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:192
 * (Note: for all intents and purposes here, "sector" and
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
80006598:	1443008b 	bne	v0,v1,800067c8 <sfs_do_mount+0x268>
8000659c:	00a0b821 	move	s7,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:198
		return -E_NA_DEV;
	}

	/* allocate fs structure */
	struct fs *fs;
	if ((fs = alloc_fs(sfs)) == NULL) {
800065a0:	0c0011b1 	jal	800046c4 <__alloc_fs>
800065a4:	24045679 	li	a0,22137
800065a8:	104000cf 	beqz	v0,800068e8 <sfs_do_mount+0x388>
800065ac:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:203
		return -E_NO_MEM;
	}

	/* get sfs from fs.fs_info.__sfs_info */
	struct sfs_fs *sfs = fsop_info(fs, sfs);
800065b0:	8c430084 	lw	v1,132(v0)
800065b4:	24025679 	li	v0,22137
800065b8:	146200cd 	bne	v1,v0,800068f0 <sfs_do_mount+0x390>
800065bc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:204
	sfs->dev = dev;
800065c0:	ae30002c 	sw	s0,44(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:209

	int ret = -E_NO_MEM;

	void *sfs_buffer;
	if ((sfs->sfs_buffer = sfs_buffer = kmalloc(SFS_BLKSIZE)) == NULL) {
800065c4:	0c005478 	jal	800151e0 <kmalloc>
800065c8:	24041000 	li	a0,4096
800065cc:	00409021 	move	s2,v0
800065d0:	1040008f 	beqz	v0,80006810 <sfs_do_mount+0x2b0>
800065d4:	ae220038 	sw	v0,56(s1)
sfs_init_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:138
	return ret;
}

static int sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer)
{
	struct iobuf __iob, *iob =
800065d8:	27a4001c 	addiu	a0,sp,28
800065dc:	00402821 	move	a1,v0
800065e0:	24061000 	li	a2,4096
800065e4:	0c00333a 	jal	8000cce8 <iobuf_init>
800065e8:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:140
	    iobuf_init(&__iob, blk_buffer, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(dev, iob, 0);
800065ec:	8e030028 	lw	v1,40(s0)
800065f0:	02002021 	move	a0,s0
800065f4:	00402821 	move	a1,v0
800065f8:	0060f809 	jalr	v1
800065fc:	00003021 	move	a2,zero
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:214
	if ((sfs->sfs_buffer = sfs_buffer = kmalloc(SFS_BLKSIZE)) == NULL) {
		goto failed_cleanup_fs;
	}

	/* load and check sfs's superblock */
	if ((ret = sfs_init_read(dev, SFS_BLKN_SUPER, sfs_buffer)) != 0) {
80006600:	14400009 	bnez	v0,80006628 <sfs_do_mount+0xc8>
80006604:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:223
	ret = -E_INVAL;

	struct sfs_super *super = sfs_buffer;

	/* Make some simple sanity checks */
	if (super->magic != SFS_MAGIC) {
80006608:	8e450000 	lw	a1,0(s2)
8000660c:	3c062f8d 	lui	a2,0x2f8d
80006610:	34c6be2a 	ori	a2,a2,0xbe2a
80006614:	10a60015 	beq	a1,a2,8000666c <sfs_do_mount+0x10c>
80006618:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:225
		kprintf
		    ("sfs: wrong magic in superblock. (%08x should be %08x).\n",
8000661c:	0c00798a 	jal	8001e628 <kprintf>
80006620:	24841a28 	addiu	a0,a0,6696
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:218
	/* load and check sfs's superblock */
	if ((ret = sfs_init_read(dev, SFS_BLKN_SUPER, sfs_buffer)) != 0) {
		goto failed_cleanup_sfs_buffer;
	}

	ret = -E_INVAL;
80006624:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:297
failed_cleanup_freemap:
	bitmap_destroy(freemap);
failed_cleanup_hash_list:
	kfree(hash_list);
failed_cleanup_sfs_buffer:
	kfree(sfs_buffer);
80006628:	0c0054a3 	jal	8001528c <kfree>
8000662c:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:299
failed_cleanup_fs:
	kfree(fs);
80006630:	0c0054a3 	jal	8001528c <kfree>
80006634:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:301
	return ret;
}
80006638:	8fbf0064 	lw	ra,100(sp)
8000663c:	02601021 	move	v0,s3
80006640:	8fbe0060 	lw	s8,96(sp)
80006644:	8fb7005c 	lw	s7,92(sp)
80006648:	8fb60058 	lw	s6,88(sp)
8000664c:	8fb50054 	lw	s5,84(sp)
80006650:	8fb40050 	lw	s4,80(sp)
80006654:	8fb3004c 	lw	s3,76(sp)
80006658:	8fb20048 	lw	s2,72(sp)
8000665c:	8fb10044 	lw	s1,68(sp)
80006660:	8fb00040 	lw	s0,64(sp)
80006664:	03e00008 	jr	ra
80006668:	27bd0068 	addiu	sp,sp,104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:229
		kprintf
		    ("sfs: wrong magic in superblock. (%08x should be %08x).\n",
		     super->magic, SFS_MAGIC);
		goto failed_cleanup_sfs_buffer;
	}
	if (super->blocks > dev->d_blocks) {
8000666c:	8e450004 	lw	a1,4(s2)
80006670:	8e060000 	lw	a2,0(s0)
80006674:	00c5102b 	sltu	v0,a2,a1
80006678:	14400061 	bnez	v0,80006800 <sfs_do_mount+0x2a0>
8000667c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:234
		kprintf("sfs: fs has %u blocks, device has %u blocks.\n",
			super->blocks, dev->d_blocks);
		goto failed_cleanup_sfs_buffer;
	}
	super->info[SFS_MAX_INFO_LEN] = '\0';
80006680:	a240002b 	sb	zero,43(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:235
	sfs->super = *super;
80006684:	02401821 	move	v1,s2
80006688:	02201021 	move	v0,s1
8000668c:	26440020 	addiu	a0,s2,32
80006690:	8c680000 	lw	t0,0(v1)
80006694:	8c670004 	lw	a3,4(v1)
80006698:	8c660008 	lw	a2,8(v1)
8000669c:	8c65000c 	lw	a1,12(v1)
800066a0:	24630010 	addiu	v1,v1,16
800066a4:	ac480000 	sw	t0,0(v0)
800066a8:	ac470004 	sw	a3,4(v0)
800066ac:	ac460008 	sw	a2,8(v0)
800066b0:	ac45000c 	sw	a1,12(v0)
800066b4:	1464fff6 	bne	v1,a0,80006690 <sfs_do_mount+0x130>
800066b8:	24420010 	addiu	v0,v0,16
800066bc:	8c660000 	lw	a2,0(v1)
800066c0:	8c650004 	lw	a1,4(v1)
800066c4:	8c630008 	lw	v1,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:243

	uint32_t i;

	/* alloc and initialize hash list */
	list_entry_t *hash_list;
	if ((sfs->hash_list = hash_list =
800066c8:	24042000 	li	a0,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:235
		kprintf("sfs: fs has %u blocks, device has %u blocks.\n",
			super->blocks, dev->d_blocks);
		goto failed_cleanup_sfs_buffer;
	}
	super->info[SFS_MAX_INFO_LEN] = '\0';
	sfs->super = *super;
800066cc:	ac460000 	sw	a2,0(v0)
800066d0:	ac450004 	sw	a1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:243

	uint32_t i;

	/* alloc and initialize hash list */
	list_entry_t *hash_list;
	if ((sfs->hash_list = hash_list =
800066d4:	0c005478 	jal	800151e0 <kmalloc>
800066d8:	ac430008 	sw	v1,8(v0)
800066dc:	afa20034 	sw	v0,52(sp)
800066e0:	1040007d 	beqz	v0,800068d8 <sfs_do_mount+0x378>
800066e4:	ae220080 	sw	v0,128(s1)
800066e8:	24030400 	li	v1,1024
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
800066ec:	2463ffff 	addiu	v1,v1,-1
800066f0:	ac420004 	sw	v0,4(v0)
800066f4:	ac420000 	sw	v0,0(v0)
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:247
	     kmalloc(sizeof(list_entry_t) * SFS_HLIST_SIZE)) == NULL) {
		goto failed_cleanup_sfs_buffer;
	}
	for (i = 0; i < SFS_HLIST_SIZE; i++) {
800066f8:	1460fffc 	bnez	v1,800066ec <sfs_do_mount+0x18c>
800066fc:	24420008 	addiu	v0,v0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:253
		list_init(hash_list + i);
	}

	/* load and check freemap (free space bitmap in disk) */
	struct bitmap *freemap;
	uint32_t freemap_size_nbits = sfs_freemap_bits(super);
80006700:	8e420004 	lw	v0,4(s2)
80006704:	24427fff 	addiu	v0,v0,32767
80006708:	30437fff 	andi	v1,v0,0x7fff
8000670c:	00431823 	subu	v1,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:254
	if ((sfs->freemap = freemap =
80006710:	00602021 	move	a0,v1
80006714:	0c001873 	jal	800061cc <bitmap_create>
80006718:	afa30030 	sw	v1,48(sp)
8000671c:	0040f021 	move	s8,v0
80006720:	1040006f 	beqz	v0,800068e0 <sfs_do_mount+0x380>
80006724:	ae220030 	sw	v0,48(s1)
sfs_init_freemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:148
static int
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
80006728:	00402021 	move	a0,v0
8000672c:	27a50018 	addiu	a1,sp,24
80006730:	0c001932 	jal	800064c8 <bitmap_getdata>
80006734:	8e540004 	lw	s4,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:149
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
80006738:	10400074 	beqz	v0,8000690c <sfs_do_mount+0x3ac>
8000673c:	0040a821 	move	s5,v0
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:258
	uint32_t freemap_size_nbits = sfs_freemap_bits(super);
	if ((sfs->freemap = freemap =
	     bitmap_create(freemap_size_nbits)) == NULL) {
		goto failed_cleanup_hash_list;
	}
	uint32_t freemap_size_nblks = sfs_freemap_blocks(super);
80006740:	26947fff 	addiu	s4,s4,32767
sfs_init_freemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:149
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
80006744:	8fa20018 	lw	v0,24(sp)
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:258
	uint32_t freemap_size_nbits = sfs_freemap_bits(super);
	if ((sfs->freemap = freemap =
	     bitmap_create(freemap_size_nbits)) == NULL) {
		goto failed_cleanup_hash_list;
	}
	uint32_t freemap_size_nblks = sfs_freemap_blocks(super);
80006748:	0014a3c2 	srl	s4,s4,0xf
sfs_init_freemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:149
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
8000674c:	00141b00 	sll	v1,s4,0xc
80006750:	1462006f 	bne	v1,v0,80006910 <sfs_do_mount+0x3b0>
80006754:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:150
	while (nblks != 0) {
80006758:	16800006 	bnez	s4,80006774 <sfs_do_mount+0x214>
8000675c:	24162000 	li	s6,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:266
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
	for (i = 0; i < freemap_size_nbits; i++) {
80006760:	08001a07 	j	8000681c <sfs_do_mount+0x2bc>
80006764:	8fa20030 	lw	v0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:155
	while (nblks != 0) {
		int ret;
		if ((ret = sfs_init_read(dev, blkno, data)) != 0) {
			return ret;
		}
		blkno++, nblks--, data += SFS_BLKSIZE;
80006768:	26b51000 	addiu	s5,s5,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:150
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
	while (nblks != 0) {
8000676c:	1280002a 	beqz	s4,80006818 <sfs_do_mount+0x2b8>
80006770:	26d61000 	addiu	s6,s6,4096
sfs_init_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:138
	return ret;
}

static int sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer)
{
	struct iobuf __iob, *iob =
80006774:	27a4001c 	addiu	a0,sp,28
80006778:	02a02821 	move	a1,s5
8000677c:	24061000 	li	a2,4096
80006780:	0c00333a 	jal	8000cce8 <iobuf_init>
80006784:	02c03821 	move	a3,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:140
	    iobuf_init(&__iob, blk_buffer, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(dev, iob, 0);
80006788:	8e030028 	lw	v1,40(s0)
8000678c:	02002021 	move	a0,s0
80006790:	00402821 	move	a1,v0
80006794:	0060f809 	jalr	v1
80006798:	00003021 	move	a2,zero
sfs_init_freemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:152
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
	while (nblks != 0) {
		int ret;
		if ((ret = sfs_init_read(dev, blkno, data)) != 0) {
8000679c:	1040fff2 	beqz	v0,80006768 <sfs_do_mount+0x208>
800067a0:	2694ffff 	addiu	s4,s4,-1
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:293

	*fs_store = fs;
	return 0;

failed_cleanup_freemap:
	bitmap_destroy(freemap);
800067a4:	03c02021 	move	a0,s8
800067a8:	0c001926 	jal	80006498 <bitmap_destroy>
800067ac:	afa20038 	sw	v0,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:140

static int sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer)
{
	struct iobuf __iob, *iob =
	    iobuf_init(&__iob, blk_buffer, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(dev, iob, 0);
800067b0:	8fa20038 	lw	v0,56(sp)
800067b4:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:295
	return 0;

failed_cleanup_freemap:
	bitmap_destroy(freemap);
failed_cleanup_hash_list:
	kfree(hash_list);
800067b8:	0c0054a3 	jal	8001528c <kfree>
800067bc:	8fa40034 	lw	a0,52(sp)
800067c0:	0800198a 	j	80006628 <sfs_do_mount+0xc8>
800067c4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:301
failed_cleanup_sfs_buffer:
	kfree(sfs_buffer);
failed_cleanup_fs:
	kfree(fs);
	return ret;
}
800067c8:	8fbf0064 	lw	ra,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:193
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
		return -E_NA_DEV;
800067cc:	2413fff0 	li	s3,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:301
failed_cleanup_sfs_buffer:
	kfree(sfs_buffer);
failed_cleanup_fs:
	kfree(fs);
	return ret;
}
800067d0:	02601021 	move	v0,s3
800067d4:	8fbe0060 	lw	s8,96(sp)
800067d8:	8fb7005c 	lw	s7,92(sp)
800067dc:	8fb60058 	lw	s6,88(sp)
800067e0:	8fb50054 	lw	s5,84(sp)
800067e4:	8fb40050 	lw	s4,80(sp)
800067e8:	8fb3004c 	lw	s3,76(sp)
800067ec:	8fb20048 	lw	s2,72(sp)
800067f0:	8fb10044 	lw	s1,68(sp)
800067f4:	8fb00040 	lw	s0,64(sp)
800067f8:	03e00008 	jr	ra
800067fc:	27bd0068 	addiu	sp,sp,104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:230
		    ("sfs: wrong magic in superblock. (%08x should be %08x).\n",
		     super->magic, SFS_MAGIC);
		goto failed_cleanup_sfs_buffer;
	}
	if (super->blocks > dev->d_blocks) {
		kprintf("sfs: fs has %u blocks, device has %u blocks.\n",
80006800:	0c00798a 	jal	8001e628 <kprintf>
80006804:	24841a60 	addiu	a0,a0,6752
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:232
			super->blocks, dev->d_blocks);
		goto failed_cleanup_sfs_buffer;
80006808:	0800198a 	j	80006628 <sfs_do_mount+0xc8>
8000680c:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:206

	/* get sfs from fs.fs_info.__sfs_info */
	struct sfs_fs *sfs = fsop_info(fs, sfs);
	sfs->dev = dev;

	int ret = -E_NO_MEM;
80006810:	0800198c 	j	80006630 <sfs_do_mount+0xd0>
80006814:	2413fff4 	li	s3,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:266
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
	for (i = 0; i < freemap_size_nbits; i++) {
80006818:	8fa20030 	lw	v0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:265
	     sfs_init_freemap(dev, freemap, SFS_BLKN_FREEMAP,
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
8000681c:	8e300004 	lw	s0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:266
	for (i = 0; i < freemap_size_nbits; i++) {
80006820:	00009021 	move	s2,zero
80006824:	1040000a 	beqz	v0,80006850 <sfs_do_mount+0x2f0>
80006828:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:267
		if (bitmap_test(freemap, i)) {
8000682c:	02802821 	move	a1,s4
80006830:	0c0018f7 	jal	800063dc <bitmap_test>
80006834:	03c02021 	move	a0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:268
			unused_blocks++;
80006838:	0002102b 	sltu	v0,zero,v0
8000683c:	02429021 	addu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:266
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
	for (i = 0; i < freemap_size_nbits; i++) {
80006840:	8fa20030 	lw	v0,48(sp)
80006844:	26940001 	addiu	s4,s4,1
80006848:	5682fff9 	bnel	s4,v0,80006830 <sfs_do_mount+0x2d0>
8000684c:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:276
	//YX you can close -O2 option to enable it
	//assert(unused_blocks == sfs->super.unused_blocks);

	/* and other fields */
	sfs->super_dirty = 0;
	sem_init(&(sfs->fs_sem), 1);
80006850:	2624003c 	addiu	a0,s1,60
80006854:	24050001 	li	a1,1
80006858:	0c006709 	jal	80019c24 <sem_init>
8000685c:	ae200034 	sw	zero,52(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:277
	sem_init(&(sfs->io_sem), 1);
80006860:	26240050 	addiu	a0,s1,80
80006864:	0c006709 	jal	80019c24 <sem_init>
80006868:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:278
	sem_init(&(sfs->mutex_sem), 1);
8000686c:	26240064 	addiu	a0,s1,100
80006870:	0c006709 	jal	80019c24 <sem_init>
80006874:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:279
	list_init(&(sfs->inode_list));
80006878:	26220078 	addiu	v0,s1,120
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:280
	kprintf("sfs: mount: '%s' (%d/%d/%d)\n", sfs->super.info,
8000687c:	3c048002 	lui	a0,0x8002
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80006880:	ae22007c 	sw	v0,124(s1)
80006884:	ae220078 	sw	v0,120(s1)
sfs_do_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:280
80006888:	24841abc 	addiu	a0,a0,6844
8000688c:	2625000c 	addiu	a1,s1,12
80006890:	02123023 	subu	a2,s0,s2
80006894:	02403821 	move	a3,s2
80006898:	0c00798a 	jal	8001e628 <kprintf>
8000689c:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:284
		blocks - unused_blocks, unused_blocks, blocks);

	/* Set up abstract fs calls */
	fs->fs_sync = sfs_sync;
800068a0:	3c028000 	lui	v0,0x8000
800068a4:	2442692c 	addiu	v0,v0,26924
800068a8:	ae220088 	sw	v0,136(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:285
	fs->fs_get_root = sfs_get_root;
800068ac:	3c028000 	lui	v0,0x8000
800068b0:	24426c4c 	addiu	v0,v0,27724
800068b4:	ae22008c 	sw	v0,140(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:286
	fs->fs_unmount = sfs_unmount;
800068b8:	3c028000 	lui	v0,0x8000
800068bc:	24426b64 	addiu	v0,v0,27492
800068c0:	ae220090 	sw	v0,144(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:287
	fs->fs_cleanup = sfs_cleanup;
800068c4:	3c028000 	lui	v0,0x8000
800068c8:	24426aa8 	addiu	v0,v0,27304
800068cc:	ae220094 	sw	v0,148(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:290

	*fs_store = fs;
	return 0;
800068d0:	0800198e 	j	80006638 <sfs_do_mount+0xd8>
800068d4:	aef10000 	sw	s1,0(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:237
		goto failed_cleanup_sfs_buffer;
	}
	super->info[SFS_MAX_INFO_LEN] = '\0';
	sfs->super = *super;

	ret = -E_NO_MEM;
800068d8:	0800198a 	j	80006628 <sfs_do_mount+0xc8>
800068dc:	2413fff4 	li	s3,-12
800068e0:	080019ee 	j	800067b8 <sfs_do_mount+0x258>
800068e4:	2413fff4 	li	s3,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:199
	}

	/* allocate fs structure */
	struct fs *fs;
	if ((fs = alloc_fs(sfs)) == NULL) {
		return -E_NO_MEM;
800068e8:	0800198e 	j	80006638 <sfs_do_mount+0xd8>
800068ec:	2413fff4 	li	s3,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:203
	}

	/* get sfs from fs.fs_info.__sfs_info */
	struct sfs_fs *sfs = fsop_info(fs, sfs);
800068f0:	3c068002 	lui	a2,0x8002
800068f4:	3c078002 	lui	a3,0x8002
800068f8:	248419f0 	addiu	a0,a0,6640
800068fc:	240500cb 	li	a1,203
80006900:	24c609b0 	addiu	a2,a2,2480
80006904:	0c006afd 	jal	8001abf4 <__panic>
80006908:	24e719fc 	addiu	a3,a3,6652
sfs_init_freemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:149
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
8000690c:	3c048002 	lui	a0,0x8002
80006910:	3c068002 	lui	a2,0x8002
80006914:	3c078002 	lui	a3,0x8002
80006918:	248419f0 	addiu	a0,a0,6640
8000691c:	24050095 	li	a1,149
80006920:	24c609b0 	addiu	a2,a2,2480
80006924:	0c006afd 	jal	8001abf4 <__panic>
80006928:	24e71a90 	addiu	a3,a3,6800

8000692c <sfs_sync>:
sfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:23
 * Sync routine. This is what gets invoked if you do FS_SYNC on the
 * sfs filesystem structure.
 */

static int sfs_sync(struct fs *fs)
{
8000692c:	27bdffd8 	addiu	sp,sp,-40
80006930:	afb3001c 	sw	s3,28(sp)
80006934:	afbf0024 	sw	ra,36(sp)
80006938:	afb40020 	sw	s4,32(sp)
8000693c:	afb20018 	sw	s2,24(sp)
80006940:	afb10014 	sw	s1,20(sp)
80006944:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:24
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006948:	1080004f 	beqz	a0,80006a88 <sfs_sync+0x15c>
8000694c:	00809821 	move	s3,a0
80006950:	8c830084 	lw	v1,132(a0)
80006954:	24025679 	li	v0,22137
80006958:	5462004c 	bnel	v1,v0,80006a8c <sfs_sync+0x160>
8000695c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:25
	lock_sfs_fs(sfs);
80006960:	0c002c3d 	jal	8000b0f4 <lock_sfs_fs>
80006964:	26710078 	addiu	s1,s3,120
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80006968:	8e70007c 	lw	s0,124(s3)
sfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:57
 * similar things all over the place in ucore, so taking the
 * time to straighten it out in your mind is worthwhile.
 */
	{
		list_entry_t *list = &(sfs->inode_list), *le = list;
		while ((le = list_next(le)) != list) {
8000696c:	1230001e 	beq	s1,s0,800069e8 <sfs_sync+0xbc>
80006970:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:58
			struct sfs_inode *sin = le2sin(le, inode_link);
80006974:	2614ffd8 	addiu	s4,s0,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:59
			vop_fsync(info2node(sin, sfs_inode));
80006978:	1280003c 	beqz	s4,80006a6c <sfs_sync+0x140>
8000697c:	3c048002 	lui	a0,0x8002
80006980:	8e020020 	lw	v0,32(s0)
80006984:	1040003a 	beqz	v0,80006a70 <sfs_sync+0x144>
80006988:	3c068002 	lui	a2,0x8002
8000698c:	8c420018 	lw	v0,24(v0)
80006990:	10400036 	beqz	v0,80006a6c <sfs_sync+0x140>
80006994:	3c128002 	lui	s2,0x8002
80006998:	08001a70 	j	800069c0 <sfs_sync+0x94>
8000699c:	26521b2c 	addiu	s2,s2,6956
800069a0:	12800032 	beqz	s4,80006a6c <sfs_sync+0x140>
800069a4:	3c048002 	lui	a0,0x8002
800069a8:	8e020020 	lw	v0,32(s0)
800069ac:	10400030 	beqz	v0,80006a70 <sfs_sync+0x144>
800069b0:	3c068002 	lui	a2,0x8002
800069b4:	8c420018 	lw	v0,24(v0)
800069b8:	1040002e 	beqz	v0,80006a74 <sfs_sync+0x148>
800069bc:	3c078002 	lui	a3,0x8002
800069c0:	02802021 	move	a0,s4
800069c4:	0c0010e5 	jal	80004394 <inode_check>
800069c8:	02402821 	move	a1,s2
800069cc:	8e020020 	lw	v0,32(s0)
800069d0:	8c420018 	lw	v0,24(v0)
800069d4:	0040f809 	jalr	v0
800069d8:	02802021 	move	a0,s4
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
800069dc:	8e100004 	lw	s0,4(s0)
sfs_sync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:57
 * similar things all over the place in ucore, so taking the
 * time to straighten it out in your mind is worthwhile.
 */
	{
		list_entry_t *list = &(sfs->inode_list), *le = list;
		while ((le = list_next(le)) != list) {
800069e0:	5630ffef 	bnel	s1,s0,800069a0 <sfs_sync+0x74>
800069e4:	2614ffd8 	addiu	s4,s0,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:62
			struct sfs_inode *sin = le2sin(le, inode_link);
			vop_fsync(info2node(sin, sfs_inode));
		}
	}
	unlock_sfs_fs(sfs);
800069e8:	0c002c43 	jal	8000b10c <unlock_sfs_fs>
800069ec:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:65

	int ret;
	if (sfs->super_dirty) {
800069f0:	8e630034 	lw	v1,52(s3)
800069f4:	14600009 	bnez	v1,80006a1c <sfs_sync+0xf0>
800069f8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:79
			sfs->super_dirty = 1;
			return ret;
		}
	}
	return 0;
}
800069fc:	8fbf0024 	lw	ra,36(sp)
80006a00:	8fb40020 	lw	s4,32(sp)
80006a04:	8fb3001c 	lw	s3,28(sp)
80006a08:	8fb20018 	lw	s2,24(sp)
80006a0c:	8fb10014 	lw	s1,20(sp)
80006a10:	8fb00010 	lw	s0,16(sp)
80006a14:	03e00008 	jr	ra
80006a18:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:66
	}
	unlock_sfs_fs(sfs);

	int ret;
	if (sfs->super_dirty) {
		sfs->super_dirty = 0;
80006a1c:	ae600034 	sw	zero,52(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:68
		/* If the superblock needs to be written, write it. */
		if ((ret = sfs_sync_super(sfs)) != 0) {
80006a20:	0c002be6 	jal	8000af98 <sfs_sync_super>
80006a24:	02602021 	move	a0,s3
80006a28:	1040000a 	beqz	v0,80006a54 <sfs_sync+0x128>
80006a2c:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:74
			sfs->super_dirty = 1;
			return ret;
		}
		/* If the free block map needs to be written, write it. */
		if ((ret = sfs_sync_freemap(sfs)) != 0) {
			sfs->super_dirty = 1;
80006a30:	ae630034 	sw	v1,52(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:79
			return ret;
		}
	}
	return 0;
}
80006a34:	8fbf0024 	lw	ra,36(sp)
80006a38:	8fb40020 	lw	s4,32(sp)
80006a3c:	8fb3001c 	lw	s3,28(sp)
80006a40:	8fb20018 	lw	s2,24(sp)
80006a44:	8fb10014 	lw	s1,20(sp)
80006a48:	8fb00010 	lw	s0,16(sp)
80006a4c:	03e00008 	jr	ra
80006a50:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:73
		if ((ret = sfs_sync_super(sfs)) != 0) {
			sfs->super_dirty = 1;
			return ret;
		}
		/* If the free block map needs to be written, write it. */
		if ((ret = sfs_sync_freemap(sfs)) != 0) {
80006a54:	0c002c01 	jal	8000b004 <sfs_sync_freemap>
80006a58:	02602021 	move	a0,s3
80006a5c:	1040ffe7 	beqz	v0,800069fc <sfs_sync+0xd0>
80006a60:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:74
			sfs->super_dirty = 1;
80006a64:	08001a8d 	j	80006a34 <sfs_sync+0x108>
80006a68:	ae630034 	sw	v1,52(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:59
 */
	{
		list_entry_t *list = &(sfs->inode_list), *le = list;
		while ((le = list_next(le)) != list) {
			struct sfs_inode *sin = le2sin(le, inode_link);
			vop_fsync(info2node(sin, sfs_inode));
80006a6c:	3c068002 	lui	a2,0x8002
80006a70:	3c078002 	lui	a3,0x8002
80006a74:	248419f0 	addiu	a0,a0,6640
80006a78:	2405003b 	li	a1,59
80006a7c:	24c609b0 	addiu	a2,a2,2480
80006a80:	0c006afd 	jal	8001abf4 <__panic>
80006a84:	24e71adc 	addiu	a3,a3,6876
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:24
 * sfs filesystem structure.
 */

static int sfs_sync(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006a88:	3c048002 	lui	a0,0x8002
80006a8c:	3c068002 	lui	a2,0x8002
80006a90:	3c078002 	lui	a3,0x8002
80006a94:	248419f0 	addiu	a0,a0,6640
80006a98:	24050018 	li	a1,24
80006a9c:	24c609b0 	addiu	a2,a2,2480
80006aa0:	0c006afd 	jal	8001abf4 <__panic>
80006aa4:	24e719fc 	addiu	a3,a3,6652

80006aa8 <sfs_cleanup>:
sfs_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:104
 *
 * VFS calls FS_SYNC on the filesystem prior to unmounting it.
 */

static int sfs_cleanup(struct fs *fs)
{
80006aa8:	27bdffe8 	addiu	sp,sp,-24
80006aac:	afb00010 	sw	s0,16(sp)
80006ab0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:105
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006ab4:	1080001c 	beqz	a0,80006b28 <sfs_cleanup+0x80>
80006ab8:	00808021 	move	s0,a0
80006abc:	8c830084 	lw	v1,132(a0)
80006ac0:	24025679 	li	v0,22137
80006ac4:	14620018 	bne	v1,v0,80006b28 <sfs_cleanup+0x80>
80006ac8:	24820078 	addiu	v0,a0,120
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:106
	if (!list_empty(&(sfs->inode_list))) {
80006acc:	8c83007c 	lw	v1,124(a0)
80006ad0:	14620011 	bne	v1,v0,80006b18 <sfs_cleanup+0x70>
80006ad4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:109
		return -E_BUSY;
	}
	assert(!sfs->super_dirty);
80006ad8:	8c820034 	lw	v0,52(a0)
80006adc:	5440001a 	bnezl	v0,80006b48 <sfs_cleanup+0xa0>
80006ae0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:110
	bitmap_destroy(sfs->freemap);
80006ae4:	0c001926 	jal	80006498 <bitmap_destroy>
80006ae8:	8c840030 	lw	a0,48(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:111
	kfree(sfs->sfs_buffer);
80006aec:	0c0054a3 	jal	8001528c <kfree>
80006af0:	8e040038 	lw	a0,56(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:112
	kfree(sfs->hash_list);
80006af4:	0c0054a3 	jal	8001528c <kfree>
80006af8:	8e040080 	lw	a0,128(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:113
	kfree(sfs);
80006afc:	0c0054a3 	jal	8001528c <kfree>
80006b00:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:115
	return 0;
}
80006b04:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:114
	assert(!sfs->super_dirty);
	bitmap_destroy(sfs->freemap);
	kfree(sfs->sfs_buffer);
	kfree(sfs->hash_list);
	kfree(sfs);
	return 0;
80006b08:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:115
}
80006b0c:	8fb00010 	lw	s0,16(sp)
80006b10:	03e00008 	jr	ra
80006b14:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:107

static int sfs_cleanup(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
	if (!list_empty(&(sfs->inode_list))) {
		return -E_BUSY;
80006b18:	2402fff0 	li	v0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:115
	bitmap_destroy(sfs->freemap);
	kfree(sfs->sfs_buffer);
	kfree(sfs->hash_list);
	kfree(sfs);
	return 0;
}
80006b1c:	8fb00010 	lw	s0,16(sp)
80006b20:	03e00008 	jr	ra
80006b24:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:105
 * VFS calls FS_SYNC on the filesystem prior to unmounting it.
 */

static int sfs_cleanup(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006b28:	3c048002 	lui	a0,0x8002
80006b2c:	3c068002 	lui	a2,0x8002
80006b30:	3c078002 	lui	a3,0x8002
80006b34:	248419f0 	addiu	a0,a0,6640
80006b38:	24050069 	li	a1,105
80006b3c:	24c609b0 	addiu	a2,a2,2480
80006b40:	0c006afd 	jal	8001abf4 <__panic>
80006b44:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:109
	if (!list_empty(&(sfs->inode_list))) {
		return -E_BUSY;
	}
	assert(!sfs->super_dirty);
80006b48:	3c068002 	lui	a2,0x8002
80006b4c:	3c078002 	lui	a3,0x8002
80006b50:	248419f0 	addiu	a0,a0,6640
80006b54:	2405006d 	li	a1,109
80006b58:	24c609b0 	addiu	a2,a2,2480
80006b5c:	0c006afd 	jal	8001abf4 <__panic>
80006b60:	24e71b34 	addiu	a3,a3,6964

80006b64 <sfs_unmount>:
sfs_unmount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:118
	kfree(sfs);
	return 0;
}

static int sfs_unmount(struct fs *fs)
{
80006b64:	27bdffd0 	addiu	sp,sp,-48
80006b68:	afb10024 	sw	s1,36(sp)
80006b6c:	afbf002c 	sw	ra,44(sp)
80006b70:	afb20028 	sw	s2,40(sp)
80006b74:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:119
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006b78:	1080002c 	beqz	a0,80006c2c <sfs_unmount+0xc8>
80006b7c:	00808821 	move	s1,a0
80006b80:	8c830084 	lw	v1,132(a0)
80006b84:	24025679 	li	v0,22137
80006b88:	14620028 	bne	v1,v0,80006c2c <sfs_unmount+0xc8>
80006b8c:	2492000c 	addiu	s2,a0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:120
	uint32_t blocks = sfs->super.blocks, unused_blocks =
80006b90:	8c870008 	lw	a3,8(a0)
80006b94:	8c820004 	lw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:122
	    sfs->super.unused_blocks;
	kprintf("sfs: unmount: '%s' (%d/%d/%d)\n", sfs->super.info,
80006b98:	3c048002 	lui	a0,0x8002
80006b9c:	24841b48 	addiu	a0,a0,6984
80006ba0:	02402821 	move	a1,s2
80006ba4:	00473023 	subu	a2,v0,a3
80006ba8:	afa20010 	sw	v0,16(sp)
80006bac:	0c00798a 	jal	8001e628 <kprintf>
80006bb0:	24100020 	li	s0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:126
		blocks - unused_blocks, unused_blocks, blocks);
	int i, ret;
	for (i = 0; i < 32; i++) {
		if ((ret = fsop_sync(fs)) == 0) {
80006bb4:	08001af2 	j	80006bc8 <sfs_unmount+0x64>
80006bb8:	8e220088 	lw	v0,136(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:125
	uint32_t blocks = sfs->super.blocks, unused_blocks =
	    sfs->super.unused_blocks;
	kprintf("sfs: unmount: '%s' (%d/%d/%d)\n", sfs->super.info,
		blocks - unused_blocks, unused_blocks, blocks);
	int i, ret;
	for (i = 0; i < 32; i++) {
80006bbc:	1200000c 	beqz	s0,80006bf0 <sfs_unmount+0x8c>
80006bc0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:126
		if ((ret = fsop_sync(fs)) == 0) {
80006bc4:	8e220088 	lw	v0,136(s1)
80006bc8:	0040f809 	jalr	v0
80006bcc:	02202021 	move	a0,s1
80006bd0:	1440fffa 	bnez	v0,80006bbc <sfs_unmount+0x58>
80006bd4:	2610ffff 	addiu	s0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:134
	}
	if (ret != 0) {
		warn("sfs: sync error: '%s': %e.\n", sfs->super.info, ret);
	}
	return ret;
}
80006bd8:	8fbf002c 	lw	ra,44(sp)
80006bdc:	8fb20028 	lw	s2,40(sp)
80006be0:	8fb10024 	lw	s1,36(sp)
80006be4:	8fb00020 	lw	s0,32(sp)
80006be8:	03e00008 	jr	ra
80006bec:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:131
		if ((ret = fsop_sync(fs)) == 0) {
			break;
		}
	}
	if (ret != 0) {
		warn("sfs: sync error: '%s': %e.\n", sfs->super.info, ret);
80006bf0:	3c068002 	lui	a2,0x8002
80006bf4:	02403821 	move	a3,s2
80006bf8:	248419f0 	addiu	a0,a0,6640
80006bfc:	24050083 	li	a1,131
80006c00:	24c61b68 	addiu	a2,a2,7016
80006c04:	afa20010 	sw	v0,16(sp)
80006c08:	0c006b1d 	jal	8001ac74 <__warn>
80006c0c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:134
	}
	return ret;
}
80006c10:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:131
		if ((ret = fsop_sync(fs)) == 0) {
			break;
		}
	}
	if (ret != 0) {
		warn("sfs: sync error: '%s': %e.\n", sfs->super.info, ret);
80006c14:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:134
	}
	return ret;
}
80006c18:	8fb20028 	lw	s2,40(sp)
80006c1c:	8fb10024 	lw	s1,36(sp)
80006c20:	8fb00020 	lw	s0,32(sp)
80006c24:	03e00008 	jr	ra
80006c28:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:119
	return 0;
}

static int sfs_unmount(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006c2c:	3c048002 	lui	a0,0x8002
80006c30:	3c068002 	lui	a2,0x8002
80006c34:	3c078002 	lui	a3,0x8002
80006c38:	248419f0 	addiu	a0,a0,6640
80006c3c:	24050077 	li	a1,119
80006c40:	24c609b0 	addiu	a2,a2,2480
80006c44:	0c006afd 	jal	8001abf4 <__panic>
80006c48:	24e719fc 	addiu	a3,a3,6652

80006c4c <sfs_get_root>:
sfs_get_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:87
 * Get inode for the root of the filesystem.
 * The root inode is always found in block 1 (SFS_ROOT_LOCATION).
 */

static struct inode *sfs_get_root(struct fs *fs)
{
80006c4c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:91
	struct inode *node;
	int ret;
	if ((ret =
	     sfs_load_inode(fsop_info(fs, sfs), &node, SFS_BLKN_ROOT)) != 0) {
80006c50:	1080000c 	beqz	a0,80006c84 <sfs_get_root+0x38>
80006c54:	afbf001c 	sw	ra,28(sp)
80006c58:	8c830084 	lw	v1,132(a0)
80006c5c:	24025679 	li	v0,22137
80006c60:	14620008 	bne	v1,v0,80006c84 <sfs_get_root+0x38>
80006c64:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:90

static struct inode *sfs_get_root(struct fs *fs)
{
	struct inode *node;
	int ret;
	if ((ret =
80006c68:	0c002502 	jal	80009408 <sfs_load_inode>
80006c6c:	24060001 	li	a2,1
80006c70:	1440000c 	bnez	v0,80006ca4 <sfs_get_root+0x58>
80006c74:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:95
	     sfs_load_inode(fsop_info(fs, sfs), &node, SFS_BLKN_ROOT)) != 0) {
		panic("load sfs root failed: %e", ret);
	}
	return node;
}
80006c78:	8fa20010 	lw	v0,16(sp)
80006c7c:	03e00008 	jr	ra
80006c80:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:91
static struct inode *sfs_get_root(struct fs *fs)
{
	struct inode *node;
	int ret;
	if ((ret =
	     sfs_load_inode(fsop_info(fs, sfs), &node, SFS_BLKN_ROOT)) != 0) {
80006c84:	3c048002 	lui	a0,0x8002
80006c88:	3c068002 	lui	a2,0x8002
80006c8c:	3c078002 	lui	a3,0x8002
80006c90:	248419f0 	addiu	a0,a0,6640
80006c94:	2405005b 	li	a1,91
80006c98:	24c609b0 	addiu	a2,a2,2480
80006c9c:	0c006afd 	jal	8001abf4 <__panic>
80006ca0:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:92
		panic("load sfs root failed: %e", ret);
80006ca4:	3c048002 	lui	a0,0x8002
80006ca8:	3c068002 	lui	a2,0x8002
80006cac:	248419f0 	addiu	a0,a0,6640
80006cb0:	2405005c 	li	a1,92
80006cb4:	24c61b84 	addiu	a2,a2,7044
80006cb8:	0c006afd 	jal	8001abf4 <__panic>
80006cbc:	00403821 	move	a3,v0

80006cc0 <sfs_mount>:
sfs_mount():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_fs.c:309
 * Actual function called from high-level code to mount an sfs.
 */

int sfs_mount(const char *devname)
{
	return vfs_mount(devname, sfs_do_mount);
80006cc0:	3c058000 	lui	a1,0x8000
80006cc4:	08001439 	j	800050e4 <vfs_mount>
80006cc8:	24a56560 	addiu	a1,a1,25952

80006ccc <sfs_opendir>:
sfs_opendir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:581
	return sfs_load_inode(sfs, node_store, ino);
}

static int sfs_opendir(struct inode *node, uint32_t open_flags)
{
	switch (open_flags & O_ACCMODE) {
80006ccc:	30a20003 	andi	v0,a1,0x3
80006cd0:	10400003 	beqz	v0,80006ce0 <sfs_opendir+0x14>
80006cd4:	30a50400 	andi	a1,a1,0x400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:593
	}
	if (open_flags & O_APPEND) {
		return -E_ISDIR;
	}
	return 0;
}
80006cd8:	03e00008 	jr	ra
80006cdc:	2402ffeb 	li	v0,-21
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:590
	case O_RDWR:
	default:
		return -E_ISDIR;
	}
	if (open_flags & O_APPEND) {
		return -E_ISDIR;
80006ce0:	2402ffeb 	li	v0,-21
80006ce4:	03e00008 	jr	ra
80006ce8:	0005100a 	movz	v0,zero,a1

80006cec <sfs_openfile>:
sfs_openfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:598
}

static int sfs_openfile(struct inode *node, uint32_t open_flags)
{
	return 0;
}
80006cec:	03e00008 	jr	ra
80006cf0:	00001021 	move	v0,zero

80006cf4 <sfs_set_links>:
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80006cf4:	8c83007c 	lw	v1,124(a0)
sfs_set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:53
{
	return sfs->hash_list + sin_hashfn(ino);
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006cf8:	27bdffe0 	addiu	sp,sp,-32
80006cfc:	00801021 	move	v0,a0
sfs_hash_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:49
	panic("invalid file type %d.\n", type);
}

static list_entry_t *sfs_hash_list(struct sfs_fs *sfs, uint32_t ino)
{
	return sfs->hash_list + sin_hashfn(ino);
80006d00:	8ca40004 	lw	a0,4(a1)
sfs_set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:53
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d04:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:54
	list_add(&(sfs->inode_list), &(sin->inode_link));
80006d08:	24460078 	addiu	a2,v0,120
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:53
{
	return sfs->hash_list + sin_hashfn(ino);
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d0c:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:54
	list_add(&(sfs->inode_list), &(sin->inode_link));
80006d10:	24a50028 	addiu	a1,a1,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:53
{
	return sfs->hash_list + sin_hashfn(ino);
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d14:	afbf001c 	sw	ra,28(sp)
80006d18:	afb10018 	sw	s1,24(sp)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80006d1c:	ac650000 	sw	a1,0(v1)
sfs_hash_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:49
	panic("invalid file type %d.\n", type);
}

static list_entry_t *sfs_hash_list(struct sfs_fs *sfs, uint32_t ino)
{
	return sfs->hash_list + sin_hashfn(ino);
80006d20:	8c510080 	lw	s1,128(v0)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
80006d24:	ac45007c 	sw	a1,124(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80006d28:	ae060028 	sw	a2,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80006d2c:	ae03002c 	sw	v1,44(s0)
sfs_hash_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:49
80006d30:	0c005945 	jal	80016514 <hash32>
80006d34:	2405000a 	li	a1,10
80006d38:	000210c0 	sll	v0,v0,0x3
80006d3c:	02228821 	addu	s1,s1,v0
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80006d40:	8e220004 	lw	v0,4(s1)
sfs_set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:56

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
	list_add(&(sfs->inode_list), &(sin->inode_link));
	list_add(sfs_hash_list(sfs, sin->ino), &(sin->hash_link));
}
80006d44:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:55
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
	list_add(&(sfs->inode_list), &(sin->inode_link));
	list_add(sfs_hash_list(sfs, sin->ino), &(sin->hash_link));
80006d48:	26030030 	addiu	v1,s0,48
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80006d4c:	ae230004 	sw	v1,4(s1)
80006d50:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80006d54:	ae020034 	sw	v0,52(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80006d58:	ae110030 	sw	s1,48(s0)
sfs_set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:56
}
80006d5c:	8fb10018 	lw	s1,24(sp)
80006d60:	8fb00014 	lw	s0,20(sp)
80006d64:	03e00008 	jr	ra
80006d68:	27bd0020 	addiu	sp,sp,32

80006d6c <sfs_lookup_subpath>:
sfs_lookup_subpath():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1367
	unlock_sfs_mutex(sfs);
	return ret;
}

static char *sfs_lookup_subpath(char *path)
{
80006d6c:	27bdffe8 	addiu	sp,sp,-24
80006d70:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1368
	if ((path = strchr(path, '/')) != NULL) {
80006d74:	0c005bd1 	jal	80016f44 <strchr>
80006d78:	2405002f 	li	a1,47
80006d7c:	1040000c 	beqz	v0,80006db0 <sfs_lookup_subpath+0x44>
80006d80:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1369
		while (*path == '/') {
80006d84:	90430000 	lbu	v1,0(v0)
80006d88:	2404002f 	li	a0,47
80006d8c:	54640008 	bnel	v1,a0,80006db0 <sfs_lookup_subpath+0x44>
80006d90:	0003100a 	movz	v0,zero,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1370
			*path++ = '\0';
80006d94:	a0400000 	sb	zero,0(v0)
80006d98:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1369
}

static char *sfs_lookup_subpath(char *path)
{
	if ((path = strchr(path, '/')) != NULL) {
		while (*path == '/') {
80006d9c:	90430000 	lbu	v1,0(v0)
80006da0:	5064fffd 	beql	v1,a0,80006d98 <sfs_lookup_subpath+0x2c>
80006da4:	a0400000 	sb	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1373
			*path++ = '\0';
		}
		if (*path == '\0') {
			return NULL;
80006da8:	0003100a 	movz	v0,zero,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1377
		}
	}
	return path;
}
80006dac:	8fbf0014 	lw	ra,20(sp)
80006db0:	03e00008 	jr	ra
80006db4:	27bd0018 	addiu	sp,sp,24

80006db8 <sfs_gettype>:
sfs_gettype():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1164
	unlock_sfs_fs(sfs);
	return ret;
}

static int sfs_gettype(struct inode *node, uint32_t * type_store)
{
80006db8:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1165
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80006dbc:	10800023 	beqz	a0,80006e4c <sfs_gettype+0x94>
80006dc0:	afbf0014 	sw	ra,20(sp)
80006dc4:	8c830038 	lw	v1,56(a0)
80006dc8:	24021237 	li	v0,4663
80006dcc:	54620020 	bnel	v1,v0,80006e50 <sfs_gettype+0x98>
80006dd0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1166
	switch (din->type) {
80006dd4:	8c820000 	lw	v0,0(a0)
80006dd8:	94470008 	lhu	a3,8(v0)
80006ddc:	24020002 	li	v0,2
80006de0:	10e20015 	beq	a3,v0,80006e38 <sfs_gettype+0x80>
80006de4:	8fbf0014 	lw	ra,20(sp)
80006de8:	24020003 	li	v0,3
80006dec:	10e2000e 	beq	a3,v0,80006e28 <sfs_gettype+0x70>
80006df0:	3402a000 	li	v0,0xa000
80006df4:	24020001 	li	v0,1
80006df8:	10e20006 	beq	a3,v0,80006e14 <sfs_gettype+0x5c>
80006dfc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1177
		return 0;
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
80006e00:	3c068002 	lui	a2,0x8002
80006e04:	24841ba0 	addiu	a0,a0,7072
80006e08:	24050499 	li	a1,1177
80006e0c:	0c006afd 	jal	8001abf4 <__panic>
80006e10:	24c61be4 	addiu	a2,a2,7140
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1171
	switch (din->type) {
	case SFS_TYPE_DIR:
		*type_store = S_IFDIR;
		return 0;
	case SFS_TYPE_FILE:
		*type_store = S_IFREG;
80006e14:	34028000 	li	v0,0x8000
80006e18:	aca20000 	sw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1178
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
}
80006e1c:	27bd0018 	addiu	sp,sp,24
80006e20:	03e00008 	jr	ra
80006e24:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1174
		return 0;
	case SFS_TYPE_FILE:
		*type_store = S_IFREG;
		return 0;
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
80006e28:	aca20000 	sw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1178
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
}
80006e2c:	27bd0018 	addiu	sp,sp,24
80006e30:	03e00008 	jr	ra
80006e34:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1168
static int sfs_gettype(struct inode *node, uint32_t * type_store)
{
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	switch (din->type) {
	case SFS_TYPE_DIR:
		*type_store = S_IFDIR;
80006e38:	24024000 	li	v0,16384
80006e3c:	aca20000 	sw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1178
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
}
80006e40:	27bd0018 	addiu	sp,sp,24
80006e44:	03e00008 	jr	ra
80006e48:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1165
	return ret;
}

static int sfs_gettype(struct inode *node, uint32_t * type_store)
{
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80006e4c:	3c048002 	lui	a0,0x8002
80006e50:	3c068002 	lui	a2,0x8002
80006e54:	3c078002 	lui	a3,0x8002
80006e58:	24841ba0 	addiu	a0,a0,7072
80006e5c:	2405048d 	li	a1,1165
80006e60:	24c609b0 	addiu	a2,a2,2480
80006e64:	0c006afd 	jal	8001abf4 <__panic>
80006e68:	24e71bac 	addiu	a3,a3,7084

80006e6c <sfs_block_inuse>:
sfs_block_inuse():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:65
	list_del(&(sin->inode_link));
	list_del(&(sin->hash_link));
}

static bool sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino)
{
80006e6c:	27bdffe0 	addiu	sp,sp,-32
80006e70:	afbf001c 	sw	ra,28(sp)
80006e74:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:66
	if (ino != 0 && ino < sfs->super.blocks) {
80006e78:	10a0000a 	beqz	a1,80006ea4 <sfs_block_inuse+0x38>
80006e7c:	8c870004 	lw	a3,4(a0)
80006e80:	00a7182b 	sltu	v1,a1,a3
80006e84:	50600008 	beqzl	v1,80006ea8 <sfs_block_inuse+0x3c>
80006e88:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:67
		return !bitmap_test(sfs->freemap, ino);
80006e8c:	0c0018f7 	jal	800063dc <bitmap_test>
80006e90:	8c840030 	lw	a0,48(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:71
	}
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
	      sfs->super.blocks, ino);
}
80006e94:	8fbf001c 	lw	ra,28(sp)
80006e98:	2c420001 	sltiu	v0,v0,1
80006e9c:	03e00008 	jr	ra
80006ea0:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:69
static bool sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino)
{
	if (ino != 0 && ino < sfs->super.blocks) {
		return !bitmap_test(sfs->freemap, ino);
	}
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
80006ea4:	3c048002 	lui	a0,0x8002
80006ea8:	3c068002 	lui	a2,0x8002
80006eac:	24841ba0 	addiu	a0,a0,7072
80006eb0:	24050046 	li	a1,70
80006eb4:	24c61bfc 	addiu	a2,a2,7164
80006eb8:	0c006afd 	jal	8001abf4 <__panic>
80006ebc:	afa20010 	sw	v0,16(sp)

80006ec0 <sfs_create_inode>:
sfs_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:95
}

static int
sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino,
		 struct inode **node_store)
{
80006ec0:	27bdffd0 	addiu	sp,sp,-48
80006ec4:	afb20024 	sw	s2,36(sp)
80006ec8:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:97
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
80006ecc:	24041237 	li	a0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:95
}

static int
sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino,
		 struct inode **node_store)
{
80006ed0:	afb30028 	sw	s3,40(sp)
80006ed4:	afb10020 	sw	s1,32(sp)
80006ed8:	afb0001c 	sw	s0,28(sp)
80006edc:	afbf002c 	sw	ra,44(sp)
80006ee0:	00a08021 	move	s0,a1
80006ee4:	00c08821 	move	s1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:97
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
80006ee8:	0c001083 	jal	8000420c <__alloc_inode>
80006eec:	00e09821 	move	s3,a3
80006ef0:	1040002c 	beqz	v0,80006fa4 <sfs_create_inode+0xe4>
80006ef4:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:98
		vop_init(node, sfs_get_ops(din->type), info2fs(sfs, sfs));
80006ef8:	96070008 	lhu	a3,8(s0)
sfs_get_ops():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:38
	up(&(sin->sem));
}

static const struct inode_ops *sfs_get_ops(uint16_t type)
{
	switch (type) {
80006efc:	10e30008 	beq	a3,v1,80006f20 <sfs_create_inode+0x60>
80006f00:	24030002 	li	v1,2
80006f04:	10e30024 	beq	a3,v1,80006f98 <sfs_create_inode+0xd8>
80006f08:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:44
	case SFS_TYPE_DIR:
		return &sfs_node_dirops;
	case SFS_TYPE_FILE:
		return &sfs_node_fileops;
	}
	panic("invalid file type %d.\n", type);
80006f0c:	3c068002 	lui	a2,0x8002
80006f10:	24841ba0 	addiu	a0,a0,7072
80006f14:	2405002c 	li	a1,44
80006f18:	0c006afd 	jal	8001abf4 <__panic>
80006f1c:	24c61be4 	addiu	a2,a2,7140
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:42
{
	switch (type) {
	case SFS_TYPE_DIR:
		return &sfs_node_dirops;
	case SFS_TYPE_FILE:
		return &sfs_node_fileops;
80006f20:	3c058002 	lui	a1,0x8002
80006f24:	24a5faf8 	addiu	a1,a1,-1288
sfs_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:98
sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino,
		 struct inode **node_store)
{
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
		vop_init(node, sfs_get_ops(din->type), info2fs(sfs, sfs));
80006f28:	00402021 	move	a0,v0
80006f2c:	02403021 	move	a2,s2
80006f30:	0c0010c4 	jal	80004310 <inode_init>
80006f34:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:99
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80006f38:	8fa20010 	lw	v0,16(sp)
80006f3c:	24031237 	li	v1,4663
80006f40:	8c440038 	lw	a0,56(v0)
80006f44:	14830019 	bne	a0,v1,80006fac <sfs_create_inode+0xec>
80006f48:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:100
		sin->din = din, sin->ino = ino, sin->dirty = 0, sin->flags =
80006f4c:	ac500000 	sw	s0,0(v0)
80006f50:	ac510004 	sw	s1,4(v0)
80006f54:	ac40000c 	sw	zero,12(v0)
80006f58:	ac400008 	sw	zero,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:101
		    0, sin->reclaim_count = 1;
80006f5c:	ac430010 	sw	v1,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:102
		sem_init(&(sin->sem), 1);
80006f60:	24440014 	addiu	a0,v0,20
80006f64:	24050001 	li	a1,1
80006f68:	0c006709 	jal	80019c24 <sem_init>
80006f6c:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:103
		*node_store = node;
80006f70:	8fa20010 	lw	v0,16(sp)
80006f74:	ae620000 	sw	v0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:104
		return 0;
80006f78:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:107
	}
	return -E_NO_MEM;
}
80006f7c:	8fbf002c 	lw	ra,44(sp)
80006f80:	8fb30028 	lw	s3,40(sp)
80006f84:	8fb20024 	lw	s2,36(sp)
80006f88:	8fb10020 	lw	s1,32(sp)
80006f8c:	8fb0001c 	lw	s0,28(sp)
80006f90:	03e00008 	jr	ra
80006f94:	27bd0030 	addiu	sp,sp,48
sfs_get_ops():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:40

static const struct inode_ops *sfs_get_ops(uint16_t type)
{
	switch (type) {
	case SFS_TYPE_DIR:
		return &sfs_node_dirops;
80006f98:	3c058002 	lui	a1,0x8002
80006f9c:	08001bca 	j	80006f28 <sfs_create_inode+0x68>
80006fa0:	24a5fa9c 	addiu	a1,a1,-1380
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:106
		    0, sin->reclaim_count = 1;
		sem_init(&(sin->sem), 1);
		*node_store = node;
		return 0;
	}
	return -E_NO_MEM;
80006fa4:	08001bdf 	j	80006f7c <sfs_create_inode+0xbc>
80006fa8:	2402fff4 	li	v0,-12
sfs_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:99
		 struct inode **node_store)
{
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
		vop_init(node, sfs_get_ops(din->type), info2fs(sfs, sfs));
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80006fac:	3c048002 	lui	a0,0x8002
80006fb0:	3c068002 	lui	a2,0x8002
80006fb4:	3c078002 	lui	a3,0x8002
80006fb8:	24841ba0 	addiu	a0,a0,7072
80006fbc:	24050063 	li	a1,99
80006fc0:	24c609b0 	addiu	a2,a2,2480
80006fc4:	0c006afd 	jal	8001abf4 <__panic>
80006fc8:	24e71bac 	addiu	a3,a3,7084

80006fcc <sfs_block_alloc>:
sfs_block_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:74
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
	      sfs->super.blocks, ino);
}

static int sfs_block_alloc(struct sfs_fs *sfs, uint32_t * ino_store)
{
80006fcc:	27bdffe0 	addiu	sp,sp,-32
80006fd0:	afb00014 	sw	s0,20(sp)
80006fd4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:76
	int ret;
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
80006fd8:	8c840030 	lw	a0,48(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:74
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
	      sfs->super.blocks, ino);
}

static int sfs_block_alloc(struct sfs_fs *sfs, uint32_t * ino_store)
{
80006fdc:	afb10018 	sw	s1,24(sp)
80006fe0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:76
	int ret;
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
80006fe4:	0c0018c7 	jal	8000631c <bitmap_alloc>
80006fe8:	00a08821 	move	s1,a1
80006fec:	14400013 	bnez	v0,8000703c <sfs_block_alloc+0x70>
80006ff0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:79
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
80006ff4:	8e020008 	lw	v0,8(s0)
80006ff8:	1040001c 	beqz	v0,8000706c <sfs_block_alloc+0xa0>
80006ffc:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:80
	sfs->super.unused_blocks--, sfs->super_dirty = 1;
80007000:	ae020008 	sw	v0,8(s0)
80007004:	24020001 	li	v0,1
80007008:	ae020034 	sw	v0,52(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:81
	assert(sfs_block_inuse(sfs, *ino_store));
8000700c:	8e250000 	lw	a1,0(s1)
80007010:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
80007014:	02002021 	move	a0,s0
80007018:	1040000c 	beqz	v0,8000704c <sfs_block_alloc+0x80>
8000701c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:82
	return sfs_clear_block(sfs, *ino_store, 1);
80007020:	8e250000 	lw	a1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:83
}
80007024:	8fbf001c 	lw	ra,28(sp)
80007028:	8fb10018 	lw	s1,24(sp)
8000702c:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:82
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
	sfs->super.unused_blocks--, sfs->super_dirty = 1;
	assert(sfs_block_inuse(sfs, *ino_store));
	return sfs_clear_block(sfs, *ino_store, 1);
80007030:	24060001 	li	a2,1
80007034:	08002c14 	j	8000b050 <sfs_clear_block>
80007038:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:83
}
8000703c:	8fb10018 	lw	s1,24(sp)
80007040:	8fb00014 	lw	s0,20(sp)
80007044:	03e00008 	jr	ra
80007048:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:81
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
	sfs->super.unused_blocks--, sfs->super_dirty = 1;
	assert(sfs_block_inuse(sfs, *ino_store));
8000704c:	3c048002 	lui	a0,0x8002
80007050:	3c068002 	lui	a2,0x8002
80007054:	3c078002 	lui	a3,0x8002
80007058:	24841ba0 	addiu	a0,a0,7072
8000705c:	24050051 	li	a1,81
80007060:	24c609b0 	addiu	a2,a2,2480
80007064:	0c006afd 	jal	8001abf4 <__panic>
80007068:	24e71c50 	addiu	a3,a3,7248
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:79
{
	int ret;
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
8000706c:	3c048002 	lui	a0,0x8002
80007070:	3c068002 	lui	a2,0x8002
80007074:	3c078002 	lui	a3,0x8002
80007078:	24841ba0 	addiu	a0,a0,7072
8000707c:	2405004f 	li	a1,79
80007080:	24c609b0 	addiu	a2,a2,2480
80007084:	0c006afd 	jal	8001abf4 <__panic>
80007088:	24e71c30 	addiu	a3,a3,7216

8000708c <sfs_block_free>:
sfs_block_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:86
	assert(sfs_block_inuse(sfs, *ino_store));
	return sfs_clear_block(sfs, *ino_store, 1);
}

static void sfs_block_free(struct sfs_fs *sfs, uint32_t ino)
{
8000708c:	27bdffe0 	addiu	sp,sp,-32
80007090:	afb10018 	sw	s1,24(sp)
80007094:	afb00014 	sw	s0,20(sp)
80007098:	afbf001c 	sw	ra,28(sp)
8000709c:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:87
	assert(sfs_block_inuse(sfs, ino));
800070a0:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
800070a4:	00a08821 	move	s1,a1
800070a8:	1040000e 	beqz	v0,800070e4 <sfs_block_free+0x58>
800070ac:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:88
	bitmap_free(sfs->freemap, ino);
800070b0:	8e040030 	lw	a0,48(s0)
800070b4:	0c001909 	jal	80006424 <bitmap_free>
800070b8:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:89
	sfs->super.unused_blocks++, sfs->super_dirty = 1;
800070bc:	8e020008 	lw	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:90
}
800070c0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:89

static void sfs_block_free(struct sfs_fs *sfs, uint32_t ino)
{
	assert(sfs_block_inuse(sfs, ino));
	bitmap_free(sfs->freemap, ino);
	sfs->super.unused_blocks++, sfs->super_dirty = 1;
800070c4:	24030001 	li	v1,1
800070c8:	24420001 	addiu	v0,v0,1
800070cc:	ae030034 	sw	v1,52(s0)
800070d0:	ae020008 	sw	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:90
}
800070d4:	8fb10018 	lw	s1,24(sp)
800070d8:	8fb00014 	lw	s0,20(sp)
800070dc:	03e00008 	jr	ra
800070e0:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:87
	return sfs_clear_block(sfs, *ino_store, 1);
}

static void sfs_block_free(struct sfs_fs *sfs, uint32_t ino)
{
	assert(sfs_block_inuse(sfs, ino));
800070e4:	3c068002 	lui	a2,0x8002
800070e8:	3c078002 	lui	a3,0x8002
800070ec:	24841ba0 	addiu	a0,a0,7072
800070f0:	24050057 	li	a1,87
800070f4:	24c609b0 	addiu	a2,a2,2480
800070f8:	0c006afd 	jal	8001abf4 <__panic>
800070fc:	24e71cdc 	addiu	a3,a3,7388

80007100 <sfs_bmap_get_sub_nolock>:
sfs_bmap_get_sub_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:167
}

static int
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
80007100:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:168
	assert(index < SFS_BLK_NENTRY);
80007104:	2cc20400 	sltiu	v0,a2,1024
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:167
}

static int
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
80007108:	afb30034 	sw	s3,52(sp)
8000710c:	afb1002c 	sw	s1,44(sp)
80007110:	afb00028 	sw	s0,40(sp)
80007114:	afbf003c 	sw	ra,60(sp)
80007118:	afb40038 	sw	s4,56(sp)
8000711c:	afb20030 	sw	s2,48(sp)
80007120:	00809821 	move	s3,a0
80007124:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:168
	assert(index < SFS_BLK_NENTRY);
80007128:	10400047 	beqz	v0,80007248 <sfs_bmap_get_sub_nolock+0x148>
8000712c:	00e08821 	move	s1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:172
	int ret;
	uint32_t ent, ino = 0;
	off_t offset = index * sizeof(uint32_t);
	if ((ent = *entp) != 0) {
80007130:	8ca70000 	lw	a3,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:170
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
	assert(index < SFS_BLK_NENTRY);
	int ret;
	uint32_t ent, ino = 0;
80007134:	afa00018 	sw	zero,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:171
	off_t offset = index * sizeof(uint32_t);
80007138:	00069080 	sll	s2,a2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:172
	if ((ent = *entp) != 0) {
8000713c:	14e0000e 	bnez	a3,80007178 <sfs_bmap_get_sub_nolock+0x78>
80007140:	afa7001c 	sw	a3,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:181
		}
		if (ino != 0 || !create) {
			goto out;
		}
	} else {
		if (!create) {
80007144:	1620001e 	bnez	s1,800071c0 <sfs_bmap_get_sub_nolock+0xc0>
80007148:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:201

out:
	if (ent != *entp) {
		*entp = ent;
	}
	*ino_store = ino;
8000714c:	8fa30050 	lw	v1,80(sp)
80007150:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:202
	return 0;
80007154:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:209
failed_cleanup:
	if (ent != *entp) {
		sfs_block_free(sfs, ent);
	}
	return ret;
}
80007158:	8fbf003c 	lw	ra,60(sp)
8000715c:	8fb40038 	lw	s4,56(sp)
80007160:	8fb30034 	lw	s3,52(sp)
80007164:	8fb20030 	lw	s2,48(sp)
80007168:	8fb1002c 	lw	s1,44(sp)
8000716c:	8fb00028 	lw	s0,40(sp)
80007170:	03e00008 	jr	ra
80007174:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:173
	assert(index < SFS_BLK_NENTRY);
	int ret;
	uint32_t ent, ino = 0;
	off_t offset = index * sizeof(uint32_t);
	if ((ent = *entp) != 0) {
		if ((ret =
80007178:	27b40018 	addiu	s4,sp,24
8000717c:	02802821 	move	a1,s4
80007180:	24060004 	li	a2,4
80007184:	0c002b74 	jal	8000add0 <sfs_rbuf>
80007188:	afb20010 	sw	s2,16(sp)
8000718c:	1440fff3 	bnez	v0,8000715c <sfs_bmap_get_sub_nolock+0x5c>
80007190:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:177
		     sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
			return ret;
		}
		if (ino != 0 || !create) {
80007194:	8fa20018 	lw	v0,24(sp)
80007198:	54400004 	bnezl	v0,800071ac <sfs_bmap_get_sub_nolock+0xac>
8000719c:	8e040000 	lw	a0,0(s0)
800071a0:	1620000c 	bnez	s1,800071d4 <sfs_bmap_get_sub_nolock+0xd4>
800071a4:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:194
	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
		goto failed_cleanup;
	}
	if ((ret = sfs_wbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
		sfs_block_free(sfs, ino);
		goto failed_cleanup;
800071a8:	8e040000 	lw	a0,0(s0)
800071ac:	8fa3001c 	lw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:198
	}

out:
	if (ent != *entp) {
800071b0:	5464ffe6 	bnel	v1,a0,8000714c <sfs_bmap_get_sub_nolock+0x4c>
800071b4:	ae030000 	sw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:201
		*entp = ent;
	}
	*ino_store = ino;
800071b8:	08001c54 	j	80007150 <sfs_bmap_get_sub_nolock+0x50>
800071bc:	8fa30050 	lw	v1,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:184
		}
	} else {
		if (!create) {
			goto out;
		}
		if ((ret = sfs_block_alloc(sfs, &ent)) != 0) {
800071c0:	0c001bf3 	jal	80006fcc <sfs_block_alloc>
800071c4:	27a5001c 	addiu	a1,sp,28
800071c8:	1440ffe3 	bnez	v0,80007158 <sfs_bmap_get_sub_nolock+0x58>
800071cc:	27b40018 	addiu	s4,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:189
			return ret;
		}
	}

	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
800071d0:	02602021 	move	a0,s3
800071d4:	0c001bf3 	jal	80006fcc <sfs_block_alloc>
800071d8:	02802821 	move	a1,s4
800071dc:	1040000a 	beqz	v0,80007208 <sfs_bmap_get_sub_nolock+0x108>
800071e0:	8fa7001c 	lw	a3,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:205
	}
	*ino_store = ino;
	return 0;

failed_cleanup:
	if (ent != *entp) {
800071e4:	8fa5001c 	lw	a1,28(sp)
800071e8:	8e030000 	lw	v1,0(s0)
800071ec:	1065ffdb 	beq	v1,a1,8000715c <sfs_bmap_get_sub_nolock+0x5c>
800071f0:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:206
		sfs_block_free(sfs, ent);
800071f4:	02602021 	move	a0,s3
800071f8:	0c001c23 	jal	8000708c <sfs_block_free>
800071fc:	afa20020 	sw	v0,32(sp)
80007200:	08001c56 	j	80007158 <sfs_bmap_get_sub_nolock+0x58>
80007204:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:192
	}

	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
		goto failed_cleanup;
	}
	if ((ret = sfs_wbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
80007208:	02602021 	move	a0,s3
8000720c:	02802821 	move	a1,s4
80007210:	24060004 	li	a2,4
80007214:	0c002ba9 	jal	8000aea4 <sfs_wbuf>
80007218:	afb20010 	sw	s2,16(sp)
8000721c:	14400004 	bnez	v0,80007230 <sfs_bmap_get_sub_nolock+0x130>
80007220:	8fa3001c 	lw	v1,28(sp)
80007224:	8e040000 	lw	a0,0(s0)
80007228:	08001c6c 	j	800071b0 <sfs_bmap_get_sub_nolock+0xb0>
8000722c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:193
		sfs_block_free(sfs, ino);
80007230:	8fa50018 	lw	a1,24(sp)
80007234:	02602021 	move	a0,s3
80007238:	0c001c23 	jal	8000708c <sfs_block_free>
8000723c:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:194
		goto failed_cleanup;
80007240:	08001c79 	j	800071e4 <sfs_bmap_get_sub_nolock+0xe4>
80007244:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:168

static int
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
	assert(index < SFS_BLK_NENTRY);
80007248:	3c048002 	lui	a0,0x8002
8000724c:	3c068002 	lui	a2,0x8002
80007250:	3c078002 	lui	a3,0x8002
80007254:	24841ba0 	addiu	a0,a0,7072
80007258:	240500a8 	li	a1,168
8000725c:	24c609b0 	addiu	a2,a2,2480
80007260:	0c006afd 	jal	8001abf4 <__panic>
80007264:	24e71c74 	addiu	a3,a3,7284

80007268 <sfs_dirent_create_inode>:
sfs_dirent_create_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:523
}

static int
sfs_dirent_create_inode(struct sfs_fs *sfs, uint16_t type,
			struct inode **node_store)
{
80007268:	27bdffc8 	addiu	sp,sp,-56
8000726c:	afb10028 	sw	s1,40(sp)
80007270:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:525
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
80007274:	24040048 	li	a0,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:523
}

static int
sfs_dirent_create_inode(struct sfs_fs *sfs, uint16_t type,
			struct inode **node_store)
{
80007278:	afb30030 	sw	s3,48(sp)
8000727c:	afb2002c 	sw	s2,44(sp)
80007280:	afb00024 	sw	s0,36(sp)
80007284:	afbf0034 	sw	ra,52(sp)
80007288:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:525
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
8000728c:	0c005478 	jal	800151e0 <kmalloc>
80007290:	00a09821 	move	s3,a1
80007294:	10400039 	beqz	v0,8000737c <sfs_dirent_create_inode+0x114>
80007298:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:528
		return -E_NO_MEM;
	}
	memset(din, 0, sizeof(struct sfs_disk_inode));
8000729c:	00402021 	move	a0,v0
800072a0:	00002821 	move	a1,zero
800072a4:	0c005c44 	jal	80017110 <memset>
800072a8:	24060048 	li	a2,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:529
	din->type = type;
800072ac:	a6130008 	sh	s3,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:533

	int ret;
	uint32_t ino;
	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
800072b0:	02202021 	move	a0,s1
800072b4:	0c001bf3 	jal	80006fcc <sfs_block_alloc>
800072b8:	27a50014 	addiu	a1,sp,20
800072bc:	14400025 	bnez	v0,80007354 <sfs_dirent_create_inode+0xec>
800072c0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:537
		goto failed_cleanup_din;
	}
	struct inode *node;
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
800072c4:	8fa60014 	lw	a2,20(sp)
800072c8:	02202021 	move	a0,s1
800072cc:	02002821 	move	a1,s0
800072d0:	0c001bb0 	jal	80006ec0 <sfs_create_inode>
800072d4:	27a70010 	addiu	a3,sp,16
800072d8:	14400019 	bnez	v0,80007340 <sfs_dirent_create_inode+0xd8>
800072dc:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:540
		goto failed_cleanup_ino;
	}
	lock_sfs_fs(sfs);
800072e0:	02202021 	move	a0,s1
800072e4:	0c002c3d 	jal	8000b0f4 <lock_sfs_fs>
800072e8:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:542
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
800072ec:	8fa50010 	lw	a1,16(sp)
800072f0:	10a00024 	beqz	a1,80007384 <sfs_dirent_create_inode+0x11c>
800072f4:	8fa20018 	lw	v0,24(sp)
800072f8:	8ca40038 	lw	a0,56(a1)
800072fc:	24031237 	li	v1,4663
80007300:	14830020 	bne	a0,v1,80007384 <sfs_dirent_create_inode+0x11c>
80007304:	02202021 	move	a0,s1
80007308:	0c001b3d 	jal	80006cf4 <sfs_set_links>
8000730c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:544
	}
	unlock_sfs_fs(sfs);
80007310:	0c002c43 	jal	8000b10c <unlock_sfs_fs>
80007314:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:545
	*node_store = node;
80007318:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:553
failed_cleanup_ino:
	sfs_block_free(sfs, ino);
failed_cleanup_din:
	kfree(din);
	return ret;
}
8000731c:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:546
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
	}
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;
80007320:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:545
	lock_sfs_fs(sfs);
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
	}
	unlock_sfs_fs(sfs);
	*node_store = node;
80007324:	ae430000 	sw	v1,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:553
failed_cleanup_ino:
	sfs_block_free(sfs, ino);
failed_cleanup_din:
	kfree(din);
	return ret;
}
80007328:	8fb30030 	lw	s3,48(sp)
8000732c:	8fb2002c 	lw	s2,44(sp)
80007330:	8fb10028 	lw	s1,40(sp)
80007334:	8fb00024 	lw	s0,36(sp)
80007338:	03e00008 	jr	ra
8000733c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:549
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;

failed_cleanup_ino:
	sfs_block_free(sfs, ino);
80007340:	02202021 	move	a0,s1
80007344:	0c001c23 	jal	8000708c <sfs_block_free>
80007348:	afa20018 	sw	v0,24(sp)
8000734c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:551
failed_cleanup_din:
	kfree(din);
80007350:	02002021 	move	a0,s0
80007354:	0c0054a3 	jal	8001528c <kfree>
80007358:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:552
	return ret;
8000735c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:553
}
80007360:	8fbf0034 	lw	ra,52(sp)
80007364:	8fb30030 	lw	s3,48(sp)
80007368:	8fb2002c 	lw	s2,44(sp)
8000736c:	8fb10028 	lw	s1,40(sp)
80007370:	8fb00024 	lw	s0,36(sp)
80007374:	03e00008 	jr	ra
80007378:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:526
sfs_dirent_create_inode(struct sfs_fs *sfs, uint16_t type,
			struct inode **node_store)
{
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
		return -E_NO_MEM;
8000737c:	08001cd8 	j	80007360 <sfs_dirent_create_inode+0xf8>
80007380:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:542
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
		goto failed_cleanup_ino;
	}
	lock_sfs_fs(sfs);
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
80007384:	3c048002 	lui	a0,0x8002
80007388:	3c068002 	lui	a2,0x8002
8000738c:	3c078002 	lui	a3,0x8002
80007390:	24841ba0 	addiu	a0,a0,7072
80007394:	2405021e 	li	a1,542
80007398:	24c609b0 	addiu	a2,a2,2480
8000739c:	0c006afd 	jal	8001abf4 <__panic>
800073a0:	24e71bac 	addiu	a3,a3,7084

800073a4 <sfs_bmap_load_nolock>:
sfs_bmap_load_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073a4:	27bdffc0 	addiu	sp,sp,-64
800073a8:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:341
	struct sfs_disk_inode *din = sin->din;
800073ac:	8cb00000 	lw	s0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073b0:	afb20028 	sw	s2,40(sp)
800073b4:	afb40030 	sw	s4,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:342
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800073b8:	8e12000c 	lw	s2,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073bc:	afb3002c 	sw	s3,44(sp)
800073c0:	afb10024 	sw	s1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:342
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800073c4:	0246102b 	sltu	v0,s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073c8:	afbf003c 	sw	ra,60(sp)
800073cc:	afb60038 	sw	s6,56(sp)
800073d0:	afb50034 	sw	s5,52(sp)
800073d4:	00a08821 	move	s1,a1
800073d8:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:342
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800073dc:	14400071 	bnez	v0,800075a4 <sfs_bmap_load_nolock+0x200>
800073e0:	00e0a021 	move	s4,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:345
	int ret;
	uint32_t ino;
	bool create = (index == din->blocks);
800073e4:	02469026 	xor	s2,s2,a2
sfs_bmap_get_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:218
		    bool create, uint32_t * ino_store)
{
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
800073e8:	2cc2000c 	sltiu	v0,a2,12
800073ec:	10400020 	beqz	v0,80007470 <sfs_bmap_load_nolock+0xcc>
800073f0:	2e520001 	sltiu	s2,s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:219
		if ((ino = din->direct[index]) == 0 && create) {
800073f4:	24d50004 	addiu	s5,a2,4
800073f8:	0015a880 	sll	s5,s5,0x2
800073fc:	0215a821 	addu	s5,s0,s5
80007400:	8eb60000 	lw	s6,0(s5)
80007404:	12c00058 	beqz	s6,80007568 <sfs_bmap_load_nolock+0x1c4>
80007408:	afb60018 	sw	s6,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
8000740c:	02602021 	move	a0,s3
80007410:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
80007414:	02c02821 	move	a1,s6
80007418:	10400071 	beqz	v0,800075e0 <sfs_bmap_load_nolock+0x23c>
8000741c:	8fb60018 	lw	s6,24(sp)
sfs_bmap_load_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:349
	uint32_t ino;
	bool create = (index == din->blocks);
	if ((ret = sfs_bmap_get_nolock(sfs, sin, index, create, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
80007420:	02602021 	move	a0,s3
80007424:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
80007428:	02c02821 	move	a1,s6
8000742c:	10400065 	beqz	v0,800075c4 <sfs_bmap_load_nolock+0x220>
80007430:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:350
	if (create) {
80007434:	56400058 	bnezl	s2,80007598 <sfs_bmap_load_nolock+0x1f4>
80007438:	8e02000c 	lw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:353
		din->blocks++;
	}
	if (ino_store != NULL) {
8000743c:	12800002 	beqz	s4,80007448 <sfs_bmap_load_nolock+0xa4>
80007440:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:354
		*ino_store = ino;
80007444:	ae960000 	sw	s6,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:357
	}
	return 0;
}
80007448:	8fbf003c 	lw	ra,60(sp)
8000744c:	8fb60038 	lw	s6,56(sp)
80007450:	8fb50034 	lw	s5,52(sp)
80007454:	8fb40030 	lw	s4,48(sp)
80007458:	8fb3002c 	lw	s3,44(sp)
8000745c:	8fb20028 	lw	s2,40(sp)
80007460:	8fb10024 	lw	s1,36(sp)
80007464:	8fb00020 	lw	s0,32(sp)
80007468:	03e00008 	jr	ra
8000746c:	27bd0040 	addiu	sp,sp,64
sfs_bmap_get_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:229
			sin->dirty = 1;
		}
		goto out;
	}

	index -= SFS_NDIRECT;
80007470:	24c3fff4 	addiu	v1,a2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:230
	if (index < SFS_BLK_NENTRY) {
80007474:	2c620400 	sltiu	v0,v1,1024
80007478:	50400017 	beqzl	v0,800074d8 <sfs_bmap_load_nolock+0x134>
8000747c:	8e020044 	lw	v0,68(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:231
		ent = din->indirect;
80007480:	8e020040 	lw	v0,64(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:232
		if ((ret =
80007484:	27a5001c 	addiu	a1,sp,28
80007488:	00603021 	move	a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:231
		goto out;
	}

	index -= SFS_NDIRECT;
	if (index < SFS_BLK_NENTRY) {
		ent = din->indirect;
8000748c:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:232
		if ((ret =
80007490:	02403821 	move	a3,s2
80007494:	27a20018 	addiu	v0,sp,24
80007498:	0c001c40 	jal	80007100 <sfs_bmap_get_sub_nolock>
8000749c:	afa20010 	sw	v0,16(sp)
800074a0:	1440ffea 	bnez	v0,8000744c <sfs_bmap_load_nolock+0xa8>
800074a4:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:237
		     sfs_bmap_get_sub_nolock(sfs, &ent, index, create,
					     &ino)) != 0) {
			return ret;
		}
		if (ent != din->indirect) {
800074a8:	8e030040 	lw	v1,64(s0)
800074ac:	8fa2001c 	lw	v0,28(sp)
800074b0:	10620029 	beq	v1,v0,80007558 <sfs_bmap_load_nolock+0x1b4>
800074b4:	8fb60018 	lw	s6,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:238
			assert(din->indirect == 0);
800074b8:	14600058 	bnez	v1,8000761c <sfs_bmap_load_nolock+0x278>
800074bc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:239
			din->indirect = ent;
800074c0:	ae020040 	sw	v0,64(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:240
			sin->dirty = 1;
800074c4:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
800074c8:	12c0ffd5 	beqz	s6,80007420 <sfs_bmap_load_nolock+0x7c>
800074cc:	ae22000c 	sw	v0,12(s1)
800074d0:	08001d04 	j	80007410 <sfs_bmap_load_nolock+0x6c>
800074d4:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:245
			sin->dirty = 1;
		}
		goto out;
	}

	index -= SFS_BLK_NENTRY;
800074d8:	24d5fbf4 	addiu	s5,a2,-1036
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:247
	ent = din->db_indirect;
	if ((ret =
800074dc:	27a5001c 	addiu	a1,sp,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:246
		}
		goto out;
	}

	index -= SFS_BLK_NENTRY;
	ent = din->db_indirect;
800074e0:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:247
	if ((ret =
800074e4:	00153282 	srl	a2,s5,0xa
800074e8:	27a20018 	addiu	v0,sp,24
800074ec:	02403821 	move	a3,s2
800074f0:	0c001c40 	jal	80007100 <sfs_bmap_get_sub_nolock>
800074f4:	afa20010 	sw	v0,16(sp)
800074f8:	1440ffd4 	bnez	v0,8000744c <sfs_bmap_load_nolock+0xa8>
800074fc:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:252
	     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY, create,
				     &ino)) != 0) {
		return ret;
	}
	if (ent != din->db_indirect) {
80007500:	8e030044 	lw	v1,68(s0)
80007504:	8fa2001c 	lw	v0,28(sp)
80007508:	50620007 	beql	v1,v0,80007528 <sfs_bmap_load_nolock+0x184>
8000750c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:253
		assert(din->db_indirect == 0);
80007510:	1460003b 	bnez	v1,80007600 <sfs_bmap_load_nolock+0x25c>
80007514:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:254
		din->db_indirect = ent;
80007518:	ae020044 	sw	v0,68(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:255
		sin->dirty = 1;
8000751c:	24020001 	li	v0,1
80007520:	ae22000c 	sw	v0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:257
	}
	if ((ent = ino) != 0) {
80007524:	8fa20018 	lw	v0,24(sp)
80007528:	0000b021 	move	s6,zero
8000752c:	1040ffbc 	beqz	v0,80007420 <sfs_bmap_load_nolock+0x7c>
80007530:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:258
		if ((ret =
80007534:	27a20018 	addiu	v0,sp,24
80007538:	02602021 	move	a0,s3
8000753c:	27a5001c 	addiu	a1,sp,28
80007540:	32a603ff 	andi	a2,s5,0x3ff
80007544:	02403821 	move	a3,s2
80007548:	0c001c40 	jal	80007100 <sfs_bmap_get_sub_nolock>
8000754c:	afa20010 	sw	v0,16(sp)
80007550:	1440ffbd 	bnez	v0,80007448 <sfs_bmap_load_nolock+0xa4>
80007554:	8fb60018 	lw	s6,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
80007558:	12c0ffb2 	beqz	s6,80007424 <sfs_bmap_load_nolock+0x80>
8000755c:	02602021 	move	a0,s3
80007560:	08001d04 	j	80007410 <sfs_bmap_load_nolock+0x6c>
80007564:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:219
{
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
		if ((ino = din->direct[index]) == 0 && create) {
80007568:	5240ffae 	beqzl	s2,80007424 <sfs_bmap_load_nolock+0x80>
8000756c:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:220
			if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
80007570:	0c001bf3 	jal	80006fcc <sfs_block_alloc>
80007574:	27a50018 	addiu	a1,sp,24
80007578:	1440ffb3 	bnez	v0,80007448 <sfs_bmap_load_nolock+0xa4>
8000757c:	8fb60018 	lw	s6,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:224
				return ret;
			}
			din->direct[index] = ino;
			sin->dirty = 1;
80007580:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:223
	if (index < SFS_NDIRECT) {
		if ((ino = din->direct[index]) == 0 && create) {
			if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
				return ret;
			}
			din->direct[index] = ino;
80007584:	aeb60000 	sw	s6,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
80007588:	12c0ffa5 	beqz	s6,80007420 <sfs_bmap_load_nolock+0x7c>
8000758c:	ae22000c 	sw	v0,12(s1)
80007590:	08001d04 	j	80007410 <sfs_bmap_load_nolock+0x6c>
80007594:	02602021 	move	a0,s3
sfs_bmap_load_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:351
	if ((ret = sfs_bmap_get_nolock(sfs, sin, index, create, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
	if (create) {
		din->blocks++;
80007598:	24420001 	addiu	v0,v0,1
8000759c:	08001d0f 	j	8000743c <sfs_bmap_load_nolock+0x98>
800075a0:	ae02000c 	sw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:342
static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800075a4:	3c048002 	lui	a0,0x8002
800075a8:	3c068002 	lui	a2,0x8002
800075ac:	3c078002 	lui	a3,0x8002
800075b0:	24841ba0 	addiu	a0,a0,7072
800075b4:	24050156 	li	a1,342
800075b8:	24c609b0 	addiu	a2,a2,2480
800075bc:	0c006afd 	jal	8001abf4 <__panic>
800075c0:	24e71c8c 	addiu	a3,a3,7308
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:349
	uint32_t ino;
	bool create = (index == din->blocks);
	if ((ret = sfs_bmap_get_nolock(sfs, sin, index, create, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
800075c4:	3c068002 	lui	a2,0x8002
800075c8:	3c078002 	lui	a3,0x8002
800075cc:	24841ba0 	addiu	a0,a0,7072
800075d0:	2405015d 	li	a1,349
800075d4:	24c609b0 	addiu	a2,a2,2480
800075d8:	0c006afd 	jal	8001abf4 <__panic>
800075dc:	24e71cdc 	addiu	a3,a3,7388
sfs_bmap_get_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
800075e0:	3c048002 	lui	a0,0x8002
800075e4:	3c068002 	lui	a2,0x8002
800075e8:	3c078002 	lui	a3,0x8002
800075ec:	24841ba0 	addiu	a0,a0,7072
800075f0:	2405010a 	li	a1,266
800075f4:	24c609b0 	addiu	a2,a2,2480
800075f8:	0c006afd 	jal	8001abf4 <__panic>
800075fc:	24e71cd0 	addiu	a3,a3,7376
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:253
	     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY, create,
				     &ino)) != 0) {
		return ret;
	}
	if (ent != din->db_indirect) {
		assert(din->db_indirect == 0);
80007600:	3c068002 	lui	a2,0x8002
80007604:	3c078002 	lui	a3,0x8002
80007608:	24841ba0 	addiu	a0,a0,7072
8000760c:	240500fd 	li	a1,253
80007610:	24c609b0 	addiu	a2,a2,2480
80007614:	0c006afd 	jal	8001abf4 <__panic>
80007618:	24e71cb8 	addiu	a3,a3,7352
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:238
		     sfs_bmap_get_sub_nolock(sfs, &ent, index, create,
					     &ino)) != 0) {
			return ret;
		}
		if (ent != din->indirect) {
			assert(din->indirect == 0);
8000761c:	3c068002 	lui	a2,0x8002
80007620:	3c078002 	lui	a3,0x8002
80007624:	24841ba0 	addiu	a0,a0,7072
80007628:	240500ee 	li	a1,238
8000762c:	24c609b0 	addiu	a2,a2,2480
80007630:	0c006afd 	jal	8001abf4 <__panic>
80007634:	24e71ca4 	addiu	a3,a3,7332

80007638 <sfs_io_nolock>:
sfs_io_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:609

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
80007638:	8ca30000 	lw	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:608
}

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
8000763c:	27bdffa8 	addiu	sp,sp,-88
80007640:	afb7004c 	sw	s7,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:610
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
80007644:	94620008 	lhu	v0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:609

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
80007648:	afa30020 	sw	v1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:610
	assert(din->type != SFS_TYPE_DIR);
8000764c:	24030002 	li	v1,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:608
}

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
80007650:	afb50044 	sw	s5,68(sp)
80007654:	afb3003c 	sw	s3,60(sp)
80007658:	afb20038 	sw	s2,56(sp)
8000765c:	0080a821 	move	s5,a0
80007660:	afbf0054 	sw	ra,84(sp)
80007664:	afbe0050 	sw	s8,80(sp)
80007668:	afb60048 	sw	s6,72(sp)
8000766c:	afb40040 	sw	s4,64(sp)
80007670:	afb10034 	sw	s1,52(sp)
80007674:	afb00030 	sw	s0,48(sp)
80007678:	00a0b821 	move	s7,a1
8000767c:	00c09021 	move	s2,a2
80007680:	00e09821 	move	s3,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:610
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
80007684:	10430093 	beq	v0,v1,800078d4 <sfs_io_nolock+0x29c>
80007688:	8fa4006c 	lw	a0,108(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:611
	off_t endpos = offset + *alenp, blkoff;
8000768c:	8fa60068 	lw	a2,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:613
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
80007690:	3c030800 	lui	v1,0x800
80007694:	00e3282b 	sltu	a1,a3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:611
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
	off_t endpos = offset + *alenp, blkoff;
80007698:	8cd60000 	lw	s6,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:614
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
		return -E_INVAL;
8000769c:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:613
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
	off_t endpos = offset + *alenp, blkoff;
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
800076a0:	10a00036 	beqz	a1,8000777c <sfs_io_nolock+0x144>
800076a4:	acc00000 	sw	zero,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:611
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
	off_t endpos = offset + *alenp, blkoff;
800076a8:	02c7b021 	addu	s6,s6,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:613
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
800076ac:	02c7282a 	slt	a1,s6,a3
800076b0:	54a00033 	bnezl	a1,80007780 <sfs_io_nolock+0x148>
800076b4:	8fbf0054 	lw	ra,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:616
		return -E_INVAL;
	}
	if (offset == endpos) {
800076b8:	10f60030 	beq	a3,s6,8000777c <sfs_io_nolock+0x144>
800076bc:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:619
		return 0;
	}
	if (endpos > SFS_MAX_FILE_SIZE) {
800076c0:	24620001 	addiu	v0,v1,1
800076c4:	02c2102b 	sltu	v0,s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:622
		endpos = SFS_MAX_FILE_SIZE;
	}
	if (!write) {
800076c8:	10800071 	beqz	a0,80007890 <sfs_io_nolock+0x258>
800076cc:	0062b00a 	movz	s6,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:636
	int (*sfs_buf_op) (struct sfs_fs * sfs, void *buf, size_t len,
			   uint32_t blkno, off_t offset);
	int (*sfs_block_op) (struct sfs_fs * sfs, void *buf, uint32_t blkno,
			     uint32_t nblks);
	if (write) {
		sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;
800076d0:	3c028001 	lui	v0,0x8001
800076d4:	3c1e8001 	lui	s8,0x8001
800076d8:	2442aea4 	addiu	v0,v0,-20828
800076dc:	27deadb0 	addiu	s8,s8,-21072
800076e0:	afa20024 	sw	v0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:647
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
800076e4:	001317c3 	sra	v0,s3,0x1f
800076e8:	00021502 	srl	v0,v0,0x14
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
800076ec:	2a700000 	slti	s0,s3,0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
800076f0:	2ad10000 	slti	s1,s6,0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
800076f4:	26650fff 	addiu	a1,s3,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
800076f8:	26c40fff 	addiu	a0,s6,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
800076fc:	02621821 	addu	v1,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
80007700:	0270280a 	movz	a1,s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
80007704:	02d1200a 	movz	a0,s6,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
80007708:	30630fff 	andi	v1,v1,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
8000770c:	00058303 	sra	s0,a1,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
80007710:	00048b03 	sra	s1,a0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
80007714:	00621823 	subu	v1,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:645

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
80007718:	02308823 	subu	s1,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
8000771c:	10600031 	beqz	v1,800077e4 <sfs_io_nolock+0x1ac>
80007720:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:649
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
80007724:	02d32023 	subu	a0,s6,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:648
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
		size =
80007728:	16200066 	bnez	s1,800078c4 <sfs_io_nolock+0x28c>
8000772c:	afa40028 	sw	a0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:650
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
80007730:	02a02021 	move	a0,s5
80007734:	02e02821 	move	a1,s7
80007738:	02003021 	move	a2,s0
8000773c:	27a70018 	addiu	a3,sp,24
80007740:	0c001ce9 	jal	800073a4 <sfs_bmap_load_nolock>
80007744:	afa3002c 	sw	v1,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:642
	} else {
		sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;
	}

	int ret = 0;
	size_t size, alen = 0;
80007748:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:650
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
8000774c:	10400017 	beqz	v0,800077ac <sfs_io_nolock+0x174>
80007750:	8fa3002c 	lw	v1,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:685
		}
		alen += size;
	}

out:
	*alenp = alen;
80007754:	8fa30068 	lw	v1,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:686
	if (offset + alen > din->fileinfo.size) {
80007758:	8fa40020 	lw	a0,32(sp)
8000775c:	02939821 	addu	s3,s4,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:685
		}
		alen += size;
	}

out:
	*alenp = alen;
80007760:	ac740000 	sw	s4,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:686
	if (offset + alen > din->fileinfo.size) {
80007764:	8c830000 	lw	v1,0(a0)
80007768:	0073182b 	sltu	v1,v1,s3
8000776c:	10600003 	beqz	v1,8000777c <sfs_io_nolock+0x144>
80007770:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:687
		din->fileinfo.size = offset + alen;
80007774:	ac930000 	sw	s3,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:688
		sin->dirty = 1;
80007778:	aee3000c 	sw	v1,12(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:691
	}
	return ret;
}
8000777c:	8fbf0054 	lw	ra,84(sp)
80007780:	8fbe0050 	lw	s8,80(sp)
80007784:	8fb7004c 	lw	s7,76(sp)
80007788:	8fb60048 	lw	s6,72(sp)
8000778c:	8fb50044 	lw	s5,68(sp)
80007790:	8fb40040 	lw	s4,64(sp)
80007794:	8fb3003c 	lw	s3,60(sp)
80007798:	8fb20038 	lw	s2,56(sp)
8000779c:	8fb10034 	lw	s1,52(sp)
800077a0:	8fb00030 	lw	s0,48(sp)
800077a4:	03e00008 	jr	ra
800077a8:	27bd0058 	addiu	sp,sp,88
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:653
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
			goto out;
		}
		if ((ret = sfs_buf_op(sfs, buf, size, ino, blkoff)) != 0) {
800077ac:	afa30010 	sw	v1,16(sp)
800077b0:	8fa60028 	lw	a2,40(sp)
800077b4:	8fa70018 	lw	a3,24(sp)
800077b8:	8fa30024 	lw	v1,36(sp)
800077bc:	02a02021 	move	a0,s5
800077c0:	0060f809 	jalr	v1
800077c4:	02402821 	move	a1,s2
800077c8:	1440ffe3 	bnez	v0,80007758 <sfs_io_nolock+0x120>
800077cc:	8fa30068 	lw	v1,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:657
			goto out;
		}
		alen += size;
		if (nblks == 0) {
800077d0:	1220ffe1 	beqz	s1,80007758 <sfs_io_nolock+0x120>
800077d4:	8fb40028 	lw	s4,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:660
			goto out;
		}
		buf += size, blkno++, nblks--;
800077d8:	02549021 	addu	s2,s2,s4
800077dc:	26100001 	addiu	s0,s0,1
800077e0:	2631ffff 	addiu	s1,s1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:664
	}

	size = SFS_BLKSIZE;
	while (nblks != 0) {
800077e4:	12200013 	beqz	s1,80007834 <sfs_io_nolock+0x1fc>
800077e8:	001617c3 	sra	v0,s6,0x1f
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:665
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
800077ec:	02a02021 	move	a0,s5
800077f0:	02e02821 	move	a1,s7
800077f4:	02003021 	move	a2,s0
800077f8:	0c001ce9 	jal	800073a4 <sfs_bmap_load_nolock>
800077fc:	27a70018 	addiu	a3,sp,24
80007800:	1440ffd4 	bnez	v0,80007754 <sfs_io_nolock+0x11c>
80007804:	8fa60018 	lw	a2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:668
			goto out;
		}
		if ((ret = sfs_block_op(sfs, buf, ino, 1)) != 0) {
80007808:	02a02021 	move	a0,s5
8000780c:	02402821 	move	a1,s2
80007810:	03c0f809 	jalr	s8
80007814:	24070001 	li	a3,1
80007818:	1440ffce 	bnez	v0,80007754 <sfs_io_nolock+0x11c>
8000781c:	2631ffff 	addiu	s1,s1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:671
			goto out;
		}
		alen += size, buf += size, blkno++, nblks--;
80007820:	26941000 	addiu	s4,s4,4096
80007824:	26521000 	addiu	s2,s2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:664
		}
		buf += size, blkno++, nblks--;
	}

	size = SFS_BLKSIZE;
	while (nblks != 0) {
80007828:	1620fff0 	bnez	s1,800077ec <sfs_io_nolock+0x1b4>
8000782c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:674
			goto out;
		}
		alen += size, buf += size, blkno++, nblks--;
	}

	if ((size = endpos % SFS_BLKSIZE) != 0) {
80007830:	001617c3 	sra	v0,s6,0x1f
80007834:	00021502 	srl	v0,v0,0x14
80007838:	02c2b021 	addu	s6,s6,v0
8000783c:	32d60fff 	andi	s6,s6,0xfff
80007840:	02c2b023 	subu	s6,s6,v0
80007844:	12c0ffc3 	beqz	s6,80007754 <sfs_io_nolock+0x11c>
80007848:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:675
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
8000784c:	02a02021 	move	a0,s5
80007850:	02e02821 	move	a1,s7
80007854:	02003021 	move	a2,s0
80007858:	0c001ce9 	jal	800073a4 <sfs_bmap_load_nolock>
8000785c:	27a70018 	addiu	a3,sp,24
80007860:	1440ffbd 	bnez	v0,80007758 <sfs_io_nolock+0x120>
80007864:	8fa30068 	lw	v1,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:678
			goto out;
		}
		if ((ret = sfs_buf_op(sfs, buf, size, ino, 0)) != 0) {
80007868:	8fa70018 	lw	a3,24(sp)
8000786c:	8fa30024 	lw	v1,36(sp)
80007870:	02c03021 	move	a2,s6
80007874:	afa00010 	sw	zero,16(sp)
80007878:	02a02021 	move	a0,s5
8000787c:	0060f809 	jalr	v1
80007880:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:681
			goto out;
		}
		alen += size;
80007884:	0296b021 	addu	s6,s4,s6
80007888:	08001dd5 	j	80007754 <sfs_io_nolock+0x11c>
8000788c:	02c2a00a 	movz	s4,s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:623
	}
	if (endpos > SFS_MAX_FILE_SIZE) {
		endpos = SFS_MAX_FILE_SIZE;
	}
	if (!write) {
		if (offset >= din->fileinfo.size) {
80007890:	8fa20020 	lw	v0,32(sp)
80007894:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:624
			return 0;
80007898:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:623
	}
	if (endpos > SFS_MAX_FILE_SIZE) {
		endpos = SFS_MAX_FILE_SIZE;
	}
	if (!write) {
		if (offset >= din->fileinfo.size) {
8000789c:	00e3202b 	sltu	a0,a3,v1
800078a0:	1080ffb6 	beqz	a0,8000777c <sfs_io_nolock+0x144>
800078a4:	3c1e8001 	lui	s8,0x8001
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:626
			return 0;
		}
		if (endpos > din->fileinfo.size) {
800078a8:	0076102b 	sltu	v0,v1,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:627
			endpos = din->fileinfo.size;
800078ac:	0062b00b 	movn	s6,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:638
	int (*sfs_block_op) (struct sfs_fs * sfs, void *buf, uint32_t blkno,
			     uint32_t nblks);
	if (write) {
		sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;
	} else {
		sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;
800078b0:	3c028001 	lui	v0,0x8001
800078b4:	2442add0 	addiu	v0,v0,-21040
800078b8:	27dead94 	addiu	s8,s8,-21100
800078bc:	08001db9 	j	800076e4 <sfs_io_nolock+0xac>
800078c0:	afa20024 	sw	v0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:649
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
800078c4:	24021000 	li	v0,4096
800078c8:	00431023 	subu	v0,v0,v1
800078cc:	08001dcc 	j	80007730 <sfs_io_nolock+0xf8>
800078d0:	afa20028 	sw	v0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:610
static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
800078d4:	3c048002 	lui	a0,0x8002
800078d8:	3c068002 	lui	a2,0x8002
800078dc:	3c078002 	lui	a3,0x8002
800078e0:	24841ba0 	addiu	a0,a0,7072
800078e4:	24050262 	li	a1,610
800078e8:	24c609b0 	addiu	a2,a2,2480
800078ec:	0c006afd 	jal	8001abf4 <__panic>
800078f0:	24e71cf8 	addiu	a3,a3,7416

800078f4 <sfs_dirent_read_nolock>:
sfs_dirent_read_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:376

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
	assert(sin->din->type == SFS_TYPE_DIR
800078f4:	8ca20000 	lw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:375
}

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
800078f8:	27bdffd0 	addiu	sp,sp,-48
800078fc:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:376
	assert(sin->din->type == SFS_TYPE_DIR
80007900:	94480008 	lhu	t0,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:375
}

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
80007904:	00e08821 	move	s1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:376
	assert(sin->din->type == SFS_TYPE_DIR
80007908:	24070002 	li	a3,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:375
}

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
8000790c:	afb00024 	sw	s0,36(sp)
80007910:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:376
	assert(sin->din->type == SFS_TYPE_DIR
80007914:	15070021 	bne	t0,a3,8000799c <sfs_dirent_read_nolock+0xa8>
80007918:	00808021 	move	s0,a0
8000791c:	04c20020 	bltzl	a2,800079a0 <sfs_dirent_read_nolock+0xac>
80007920:	3c048002 	lui	a0,0x8002
80007924:	8c42000c 	lw	v0,12(v0)
80007928:	00c2182b 	sltu	v1,a2,v0
8000792c:	5060001c 	beqzl	v1,800079a0 <sfs_dirent_read_nolock+0xac>
80007930:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:380
	       && (slot >= 0 && slot < sin->din->blocks));
	int ret;
	uint32_t ino;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
80007934:	0c001ce9 	jal	800073a4 <sfs_bmap_load_nolock>
80007938:	27a70018 	addiu	a3,sp,24
8000793c:	10400006 	beqz	v0,80007958 <sfs_dirent_read_nolock+0x64>
80007940:	8fa50018 	lw	a1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:391
		      0)) != 0) {
		return ret;
	}
	entry->name[SFS_MAX_FNAME_LEN] = '\0';
	return 0;
}
80007944:	8fbf002c 	lw	ra,44(sp)
80007948:	8fb10028 	lw	s1,40(sp)
8000794c:	8fb00024 	lw	s0,36(sp)
80007950:	03e00008 	jr	ra
80007954:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:383
	int ret;
	uint32_t ino;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
80007958:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
8000795c:	02002021 	move	a0,s0
80007960:	10400016 	beqz	v0,800079bc <sfs_dirent_read_nolock+0xc8>
80007964:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:384
	if ((ret =
80007968:	8fa70018 	lw	a3,24(sp)
8000796c:	02202821 	move	a1,s1
80007970:	24060104 	li	a2,260
80007974:	0c002b74 	jal	8000add0 <sfs_rbuf>
80007978:	afa00010 	sw	zero,16(sp)
8000797c:	1440fff2 	bnez	v0,80007948 <sfs_dirent_read_nolock+0x54>
80007980:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:389
	     sfs_rbuf(sfs, entry, sizeof(struct sfs_disk_entry), ino,
		      0)) != 0) {
		return ret;
	}
	entry->name[SFS_MAX_FNAME_LEN] = '\0';
80007984:	a2200103 	sb	zero,259(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:391
	return 0;
}
80007988:	8fbf002c 	lw	ra,44(sp)
8000798c:	8fb10028 	lw	s1,40(sp)
80007990:	8fb00024 	lw	s0,36(sp)
80007994:	03e00008 	jr	ra
80007998:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:376

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
	assert(sin->din->type == SFS_TYPE_DIR
8000799c:	3c048002 	lui	a0,0x8002
800079a0:	3c068002 	lui	a2,0x8002
800079a4:	3c078002 	lui	a3,0x8002
800079a8:	24841ba0 	addiu	a0,a0,7072
800079ac:	24050179 	li	a1,377
800079b0:	24c609b0 	addiu	a2,a2,2480
800079b4:	0c006afd 	jal	8001abf4 <__panic>
800079b8:	24e71d14 	addiu	a3,a3,7444
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:383
	int ret;
	uint32_t ino;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
800079bc:	3c048002 	lui	a0,0x8002
800079c0:	3c068002 	lui	a2,0x8002
800079c4:	3c078002 	lui	a3,0x8002
800079c8:	24841ba0 	addiu	a0,a0,7072
800079cc:	2405017f 	li	a1,383
800079d0:	24c609b0 	addiu	a2,a2,2480
800079d4:	0c006afd 	jal	8001abf4 <__panic>
800079d8:	24e71cdc 	addiu	a3,a3,7388

800079dc <sfs_dirent_search_nolock>:
sfs_dirent_search_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:474

static int
sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			 const char *name, uint32_t * ino_store, int *slot,
			 int *empty_slot)
{
800079dc:	27bdffc0 	addiu	sp,sp,-64
800079e0:	afb5002c 	sw	s5,44(sp)
800079e4:	0080a821 	move	s5,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:475
	assert(strlen(name) <= SFS_MAX_FNAME_LEN);
800079e8:	00c02021 	move	a0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:474

static int
sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			 const char *name, uint32_t * ino_store, int *slot,
			 int *empty_slot)
{
800079ec:	afbe0038 	sw	s8,56(sp)
800079f0:	afb60030 	sw	s6,48(sp)
800079f4:	afb40028 	sw	s4,40(sp)
800079f8:	afb20020 	sw	s2,32(sp)
800079fc:	afbf003c 	sw	ra,60(sp)
80007a00:	afb70034 	sw	s7,52(sp)
80007a04:	afb30024 	sw	s3,36(sp)
80007a08:	afb1001c 	sw	s1,28(sp)
80007a0c:	afb00018 	sw	s0,24(sp)
80007a10:	00c0b021 	move	s6,a2
80007a14:	00a0a021 	move	s4,a1
80007a18:	00e0f021 	move	s8,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:475
	assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007a1c:	0c005b6b 	jal	80016dac <strlen>
80007a20:	8fb20054 	lw	s2,84(sp)
80007a24:	2c420100 	sltiu	v0,v0,256
80007a28:	10400040 	beqz	v0,80007b2c <sfs_dirent_search_nolock+0x150>
80007a2c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:477
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80007a30:	0c005478 	jal	800151e0 <kmalloc>
80007a34:	24040104 	li	a0,260
80007a38:	00408821 	move	s1,v0
80007a3c:	10400029 	beqz	v0,80007ae4 <sfs_dirent_search_nolock+0x108>
80007a40:	2403fff4 	li	v1,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:481
		return -E_NO_MEM;
	}
#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)
	int ret, i, nslots = sin->din->blocks;
80007a44:	8e820000 	lw	v0,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:482
	set_pvalue(empty_slot, nslots);
80007a48:	12400002 	beqz	s2,80007a54 <sfs_dirent_search_nolock+0x78>
80007a4c:	8c53000c 	lw	s3,12(v0)
80007a50:	ae530000 	sw	s3,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:483
	for (i = 0; i < nslots; i++) {
80007a54:	1a60001f 	blez	s3,80007ad4 <sfs_dirent_search_nolock+0xf8>
80007a58:	2403fffe 	li	v1,-2
80007a5c:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:491
		}
		if (entry->ino == 0) {
			set_pvalue(empty_slot, i);
			continue;
		}
		if (strcmp(name, entry->name) == 0) {
80007a60:	08001e9f 	j	80007a7c <sfs_dirent_search_nolock+0xa0>
80007a64:	26370004 	addiu	s7,s1,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:488
	for (i = 0; i < nslots; i++) {
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
			goto out;
		}
		if (entry->ino == 0) {
			set_pvalue(empty_slot, i);
80007a68:	56400001 	bnezl	s2,80007a70 <sfs_dirent_search_nolock+0x94>
80007a6c:	ae500000 	sw	s0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:483
		return -E_NO_MEM;
	}
#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)
	int ret, i, nslots = sin->din->blocks;
	set_pvalue(empty_slot, nslots);
	for (i = 0; i < nslots; i++) {
80007a70:	26100001 	addiu	s0,s0,1
80007a74:	12700028 	beq	s3,s0,80007b18 <sfs_dirent_search_nolock+0x13c>
80007a78:	2403fffe 	li	v1,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:484
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
80007a7c:	02a02021 	move	a0,s5
80007a80:	02802821 	move	a1,s4
80007a84:	02003021 	move	a2,s0
80007a88:	0c001e3d 	jal	800078f4 <sfs_dirent_read_nolock>
80007a8c:	02203821 	move	a3,s1
80007a90:	14400010 	bnez	v0,80007ad4 <sfs_dirent_search_nolock+0xf8>
80007a94:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:487
			goto out;
		}
		if (entry->ino == 0) {
80007a98:	8e220000 	lw	v0,0(s1)
80007a9c:	1040fff2 	beqz	v0,80007a68 <sfs_dirent_search_nolock+0x8c>
80007aa0:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:491
			set_pvalue(empty_slot, i);
			continue;
		}
		if (strcmp(name, entry->name) == 0) {
80007aa4:	02e02821 	move	a1,s7
80007aa8:	0c005baa 	jal	80016ea8 <strcmp>
80007aac:	afa30010 	sw	v1,16(sp)
80007ab0:	1440ffef 	bnez	v0,80007a70 <sfs_dirent_search_nolock+0x94>
80007ab4:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:492
			set_pvalue(slot, i);
80007ab8:	8fa20050 	lw	v0,80(sp)
80007abc:	54400001 	bnezl	v0,80007ac4 <sfs_dirent_search_nolock+0xe8>
80007ac0:	ac500000 	sw	s0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:493
			set_pvalue(ino_store, entry->ino);
80007ac4:	13c00004 	beqz	s8,80007ad8 <sfs_dirent_search_nolock+0xfc>
80007ac8:	02202021 	move	a0,s1
80007acc:	8e220000 	lw	v0,0(s1)
80007ad0:	afc20000 	sw	v0,0(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:500
		}
	}
#undef set_pvalue
	ret = -E_NOENT;
out:
	kfree(entry);
80007ad4:	02202021 	move	a0,s1
80007ad8:	0c0054a3 	jal	8001528c <kfree>
80007adc:	afa30010 	sw	v1,16(sp)
80007ae0:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:502
	return ret;
}
80007ae4:	8fbf003c 	lw	ra,60(sp)
80007ae8:	00601021 	move	v0,v1
80007aec:	8fbe0038 	lw	s8,56(sp)
80007af0:	8fb70034 	lw	s7,52(sp)
80007af4:	8fb60030 	lw	s6,48(sp)
80007af8:	8fb5002c 	lw	s5,44(sp)
80007afc:	8fb40028 	lw	s4,40(sp)
80007b00:	8fb30024 	lw	s3,36(sp)
80007b04:	8fb20020 	lw	s2,32(sp)
80007b08:	8fb1001c 	lw	s1,28(sp)
80007b0c:	8fb00018 	lw	s0,24(sp)
80007b10:	03e00008 	jr	ra
80007b14:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:500
		}
	}
#undef set_pvalue
	ret = -E_NOENT;
out:
	kfree(entry);
80007b18:	02202021 	move	a0,s1
80007b1c:	0c0054a3 	jal	8001528c <kfree>
80007b20:	afa30010 	sw	v1,16(sp)
80007b24:	08001eb9 	j	80007ae4 <sfs_dirent_search_nolock+0x108>
80007b28:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:475
static int
sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			 const char *name, uint32_t * ino_store, int *slot,
			 int *empty_slot)
{
	assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007b2c:	3c068002 	lui	a2,0x8002
80007b30:	3c078002 	lui	a3,0x8002
80007b34:	24841ba0 	addiu	a0,a0,7072
80007b38:	240501db 	li	a1,475
80007b3c:	24c609b0 	addiu	a2,a2,2480
80007b40:	0c006afd 	jal	8001abf4 <__panic>
80007b44:	24e71d60 	addiu	a3,a3,7520

80007b48 <sfs_dirent_write_nolock>:
sfs_dirent_write_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:397

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
	assert(sin->din->type == SFS_TYPE_DIR
80007b48:	8ca20000 	lw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:396
}

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
80007b4c:	27bdffc8 	addiu	sp,sp,-56
80007b50:	afb3002c 	sw	s3,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:397
	assert(sin->din->type == SFS_TYPE_DIR
80007b54:	94430008 	lhu	v1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:396
}

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
80007b58:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:397
	assert(sin->din->type == SFS_TYPE_DIR
80007b5c:	24040002 	li	a0,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:396
}

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
80007b60:	afb40030 	sw	s4,48(sp)
80007b64:	afb20028 	sw	s2,40(sp)
80007b68:	afb10024 	sw	s1,36(sp)
80007b6c:	afbf0034 	sw	ra,52(sp)
80007b70:	afb00020 	sw	s0,32(sp)
80007b74:	00a09021 	move	s2,a1
80007b78:	00c08821 	move	s1,a2
80007b7c:	afa70044 	sw	a3,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:397
	assert(sin->din->type == SFS_TYPE_DIR
80007b80:	1464003b 	bne	v1,a0,80007c70 <sfs_dirent_write_nolock+0x128>
80007b84:	8fb40048 	lw	s4,72(sp)
80007b88:	04c0003a 	bltz	a2,80007c74 <sfs_dirent_write_nolock+0x12c>
80007b8c:	3c048002 	lui	a0,0x8002
80007b90:	8c42000c 	lw	v0,12(v0)
80007b94:	0046102b 	sltu	v0,v0,a2
80007b98:	14400037 	bnez	v0,80007c78 <sfs_dirent_write_nolock+0x130>
80007b9c:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:400
	       && (slot >= 0 && slot <= sin->din->blocks));
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80007ba0:	0c005478 	jal	800151e0 <kmalloc>
80007ba4:	24040104 	li	a0,260
80007ba8:	1040002f 	beqz	v0,80007c68 <sfs_dirent_write_nolock+0x120>
80007bac:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:403
		return -E_NO_MEM;
	}
	memset(entry, 0, sizeof(struct sfs_disk_entry));
80007bb0:	00402021 	move	a0,v0
80007bb4:	00002821 	move	a1,zero
80007bb8:	0c005c44 	jal	80017110 <memset>
80007bbc:	24060104 	li	a2,260
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:405

	if (ino != 0) {
80007bc0:	8fa20044 	lw	v0,68(sp)
80007bc4:	1040000b 	beqz	v0,80007bf4 <sfs_dirent_write_nolock+0xac>
80007bc8:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:406
		assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007bcc:	0c005b6b 	jal	80016dac <strlen>
80007bd0:	02802021 	move	a0,s4
80007bd4:	2c420100 	sltiu	v0,v0,256
80007bd8:	1040002d 	beqz	v0,80007c90 <sfs_dirent_write_nolock+0x148>
80007bdc:	8fa20044 	lw	v0,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:407
		entry->ino = ino, strcpy(entry->name, name);
80007be0:	26040004 	addiu	a0,s0,4
80007be4:	02802821 	move	a1,s4
80007be8:	0c005b84 	jal	80016e10 <strcpy>
80007bec:	ae020000 	sw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:410
	}
	int ret;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
80007bf0:	02602021 	move	a0,s3
80007bf4:	02402821 	move	a1,s2
80007bf8:	02203021 	move	a2,s1
80007bfc:	0c001ce9 	jal	800073a4 <sfs_bmap_load_nolock>
80007c00:	27a70044 	addiu	a3,sp,68
80007c04:	1040000d 	beqz	v0,80007c3c <sfs_dirent_write_nolock+0xf4>
80007c08:	8fa50044 	lw	a1,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:416
		goto out;
	}
	assert(sfs_block_inuse(sfs, ino));
	ret = sfs_wbuf(sfs, entry, sizeof(struct sfs_disk_entry), ino, 0);
out:
	kfree(entry);
80007c0c:	02002021 	move	a0,s0
80007c10:	0c0054a3 	jal	8001528c <kfree>
80007c14:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:417
	return ret;
80007c18:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:418
}
80007c1c:	8fbf0034 	lw	ra,52(sp)
80007c20:	8fb40030 	lw	s4,48(sp)
80007c24:	8fb3002c 	lw	s3,44(sp)
80007c28:	8fb20028 	lw	s2,40(sp)
80007c2c:	8fb10024 	lw	s1,36(sp)
80007c30:	8fb00020 	lw	s0,32(sp)
80007c34:	03e00008 	jr	ra
80007c38:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:413
	}
	int ret;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		goto out;
	}
	assert(sfs_block_inuse(sfs, ino));
80007c3c:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
80007c40:	02602021 	move	a0,s3
80007c44:	1040001a 	beqz	v0,80007cb0 <sfs_dirent_write_nolock+0x168>
80007c48:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:414
	ret = sfs_wbuf(sfs, entry, sizeof(struct sfs_disk_entry), ino, 0);
80007c4c:	8fa70044 	lw	a3,68(sp)
80007c50:	02002821 	move	a1,s0
80007c54:	24060104 	li	a2,260
80007c58:	0c002ba9 	jal	8000aea4 <sfs_wbuf>
80007c5c:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:416
out:
	kfree(entry);
80007c60:	08001f04 	j	80007c10 <sfs_dirent_write_nolock+0xc8>
80007c64:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:401
{
	assert(sin->din->type == SFS_TYPE_DIR
	       && (slot >= 0 && slot <= sin->din->blocks));
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
80007c68:	08001f07 	j	80007c1c <sfs_dirent_write_nolock+0xd4>
80007c6c:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:397

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
	assert(sin->din->type == SFS_TYPE_DIR
80007c70:	3c048002 	lui	a0,0x8002
80007c74:	3c068002 	lui	a2,0x8002
80007c78:	3c078002 	lui	a3,0x8002
80007c7c:	24841ba0 	addiu	a0,a0,7072
80007c80:	2405018e 	li	a1,398
80007c84:	24c609b0 	addiu	a2,a2,2480
80007c88:	0c006afd 	jal	8001abf4 <__panic>
80007c8c:	24e71d84 	addiu	a3,a3,7556
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:406
		return -E_NO_MEM;
	}
	memset(entry, 0, sizeof(struct sfs_disk_entry));

	if (ino != 0) {
		assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007c90:	3c048002 	lui	a0,0x8002
80007c94:	3c068002 	lui	a2,0x8002
80007c98:	3c078002 	lui	a3,0x8002
80007c9c:	24841ba0 	addiu	a0,a0,7072
80007ca0:	24050196 	li	a1,406
80007ca4:	24c609b0 	addiu	a2,a2,2480
80007ca8:	0c006afd 	jal	8001abf4 <__panic>
80007cac:	24e71d60 	addiu	a3,a3,7520
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:413
	}
	int ret;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		goto out;
	}
	assert(sfs_block_inuse(sfs, ino));
80007cb0:	3c048002 	lui	a0,0x8002
80007cb4:	3c068002 	lui	a2,0x8002
80007cb8:	3c078002 	lui	a3,0x8002
80007cbc:	24841ba0 	addiu	a0,a0,7072
80007cc0:	2405019d 	li	a1,413
80007cc4:	24c609b0 	addiu	a2,a2,2480
80007cc8:	0c006afd 	jal	8001abf4 <__panic>
80007ccc:	24e71cdc 	addiu	a3,a3,7388

80007cd0 <sfs_bmap_free_sub_nolock>:
sfs_bmap_free_sub_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:273
	return 0;
}

static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
80007cd0:	27bdffc8 	addiu	sp,sp,-56
80007cd4:	afb1002c 	sw	s1,44(sp)
80007cd8:	afb00028 	sw	s0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:274
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
80007cdc:	afa60020 	sw	a2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:273
	return 0;
}

static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
80007ce0:	afbf0034 	sw	ra,52(sp)
80007ce4:	afb20030 	sw	s2,48(sp)
80007ce8:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:274
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
80007cec:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
80007cf0:	00a08821 	move	s1,a1
80007cf4:	10400022 	beqz	v0,80007d80 <sfs_bmap_free_sub_nolock+0xb0>
80007cf8:	8fa60020 	lw	a2,32(sp)
80007cfc:	2cc20400 	sltiu	v0,a2,1024
80007d00:	1040001f 	beqz	v0,80007d80 <sfs_bmap_free_sub_nolock+0xb0>
80007d04:	00069080 	sll	s2,a2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:278
	int ret;
	uint32_t ino, zero = 0;
	off_t offset = index * sizeof(uint32_t);
	if ((ret = sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
80007d08:	02002021 	move	a0,s0
80007d0c:	27a5001c 	addiu	a1,sp,28
80007d10:	24060004 	li	a2,4
80007d14:	02203821 	move	a3,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:276
static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
	int ret;
	uint32_t ino, zero = 0;
80007d18:	afa00018 	sw	zero,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:278
	off_t offset = index * sizeof(uint32_t);
	if ((ret = sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
80007d1c:	0c002b74 	jal	8000add0 <sfs_rbuf>
80007d20:	afb20010 	sw	s2,16(sp)
80007d24:	14400003 	bnez	v0,80007d34 <sfs_bmap_free_sub_nolock+0x64>
80007d28:	8fa3001c 	lw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:281
		return ret;
	}
	if (ino != 0) {
80007d2c:	14600007 	bnez	v1,80007d4c <sfs_bmap_free_sub_nolock+0x7c>
80007d30:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:290
			return ret;
		}
		sfs_block_free(sfs, ino);
	}
	return 0;
}
80007d34:	8fbf0034 	lw	ra,52(sp)
80007d38:	8fb20030 	lw	s2,48(sp)
80007d3c:	8fb1002c 	lw	s1,44(sp)
80007d40:	8fb00028 	lw	s0,40(sp)
80007d44:	03e00008 	jr	ra
80007d48:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:282
	off_t offset = index * sizeof(uint32_t);
	if ((ret = sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
		return ret;
	}
	if (ino != 0) {
		if ((ret =
80007d4c:	27a50018 	addiu	a1,sp,24
80007d50:	24060004 	li	a2,4
80007d54:	02203821 	move	a3,s1
80007d58:	0c002ba9 	jal	8000aea4 <sfs_wbuf>
80007d5c:	afb20010 	sw	s2,16(sp)
80007d60:	1440fff5 	bnez	v0,80007d38 <sfs_bmap_free_sub_nolock+0x68>
80007d64:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:287
		     sfs_wbuf(sfs, &zero, sizeof(uint32_t), ent,
			      offset)) != 0) {
			return ret;
		}
		sfs_block_free(sfs, ino);
80007d68:	8fa5001c 	lw	a1,28(sp)
80007d6c:	02002021 	move	a0,s0
80007d70:	0c001c23 	jal	8000708c <sfs_block_free>
80007d74:	afa20020 	sw	v0,32(sp)
80007d78:	08001f4d 	j	80007d34 <sfs_bmap_free_sub_nolock+0x64>
80007d7c:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:274
}

static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
80007d80:	3c048002 	lui	a0,0x8002
80007d84:	3c068002 	lui	a2,0x8002
80007d88:	3c078002 	lui	a3,0x8002
80007d8c:	24841ba0 	addiu	a0,a0,7072
80007d90:	24050112 	li	a1,274
80007d94:	24c609b0 	addiu	a2,a2,2480
80007d98:	0c006afd 	jal	8001abf4 <__panic>
80007d9c:	24e71dd0 	addiu	a3,a3,7632

80007da0 <sfs_bmap_truncate_nolock>:
sfs_bmap_truncate_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:360
	}
	return 0;
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80007da0:	27bdffc8 	addiu	sp,sp,-56
80007da4:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:361
	struct sfs_disk_inode *din = sin->din;
80007da8:	8cb00000 	lw	s0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:360
	}
	return 0;
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80007dac:	afb30030 	sw	s3,48(sp)
80007db0:	afb2002c 	sw	s2,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:362
	struct sfs_disk_inode *din = sin->din;
	assert(din->blocks != 0);
80007db4:	8e13000c 	lw	s3,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:360
	}
	return 0;
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80007db8:	afb10028 	sw	s1,40(sp)
80007dbc:	afbf0034 	sw	ra,52(sp)
80007dc0:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:362
	struct sfs_disk_inode *din = sin->din;
	assert(din->blocks != 0);
80007dc4:	1260003a 	beqz	s3,80007eb0 <sfs_bmap_truncate_nolock+0x110>
80007dc8:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:364
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
80007dcc:	2662ffff 	addiu	v0,s3,-1
sfs_bmap_free_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:298
sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index)
{
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
80007dd0:	2c43000c 	sltiu	v1,v0,12
80007dd4:	10600012 	beqz	v1,80007e20 <sfs_bmap_truncate_nolock+0x80>
80007dd8:	2666fff3 	addiu	a2,s3,-13
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:299
		if ((ino = din->direct[index]) != 0) {
80007ddc:	26730003 	addiu	s3,s3,3
80007de0:	00139080 	sll	s2,s3,0x2
80007de4:	02129021 	addu	s2,s0,s2
80007de8:	8e450000 	lw	a1,0(s2)
80007dec:	14a0002a 	bnez	a1,80007e98 <sfs_bmap_truncate_nolock+0xf8>
80007df0:	afa50018 	sw	a1,24(sp)
sfs_bmap_truncate_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:368
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
		return ret;
	}
	din->blocks--;
	sin->dirty = 1;
80007df4:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:367
	assert(din->blocks != 0);
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
		return ret;
	}
	din->blocks--;
80007df8:	ae02000c 	sw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:369
	sin->dirty = 1;
	return 0;
80007dfc:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:368
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
		return ret;
	}
	din->blocks--;
	sin->dirty = 1;
80007e00:	ae23000c 	sw	v1,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:370
	return 0;
}
80007e04:	8fbf0034 	lw	ra,52(sp)
80007e08:	8fb30030 	lw	s3,48(sp)
80007e0c:	8fb2002c 	lw	s2,44(sp)
80007e10:	8fb10028 	lw	s1,40(sp)
80007e14:	8fb00024 	lw	s0,36(sp)
80007e18:	03e00008 	jr	ra
80007e1c:	27bd0038 	addiu	sp,sp,56
sfs_bmap_free_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:308
		}
		return 0;
	}

	index -= SFS_NDIRECT;
	if (index < SFS_BLK_NENTRY) {
80007e20:	2cc30400 	sltiu	v1,a2,1024
80007e24:	5060000b 	beqzl	v1,80007e54 <sfs_bmap_truncate_nolock+0xb4>
80007e28:	8e030044 	lw	v1,68(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:309
		if ((ent = din->indirect) != 0) {
80007e2c:	8e050040 	lw	a1,64(s0)
80007e30:	10a0fff0 	beqz	a1,80007df4 <sfs_bmap_truncate_nolock+0x54>
80007e34:	afa5001c 	sw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:326
		     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY,
					     0, &ino)) != 0) {
			return ret;
		}
		if ((ent = ino) != 0) {
			if ((ret =
80007e38:	0c001f34 	jal	80007cd0 <sfs_bmap_free_sub_nolock>
80007e3c:	00000000 	nop
80007e40:	1440fff1 	bnez	v0,80007e08 <sfs_bmap_truncate_nolock+0x68>
80007e44:	8fbf0034 	lw	ra,52(sp)
80007e48:	8e13000c 	lw	s3,12(s0)
80007e4c:	08001f7d 	j	80007df4 <sfs_bmap_truncate_nolock+0x54>
80007e50:	2662ffff 	addiu	v0,s3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:319
		}
		return 0;
	}

	index -= SFS_BLK_NENTRY;
	if ((ent = din->db_indirect) != 0) {
80007e54:	1060ffe7 	beqz	v1,80007df4 <sfs_bmap_truncate_nolock+0x54>
80007e58:	afa3001c 	sw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:318
			}
		}
		return 0;
	}

	index -= SFS_BLK_NENTRY;
80007e5c:	2673fbf3 	addiu	s3,s3,-1037
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:320
	if ((ent = din->db_indirect) != 0) {
		if ((ret =
80007e60:	27a20018 	addiu	v0,sp,24
80007e64:	27a5001c 	addiu	a1,sp,28
80007e68:	00133282 	srl	a2,s3,0xa
80007e6c:	00003821 	move	a3,zero
80007e70:	0c001c40 	jal	80007100 <sfs_bmap_get_sub_nolock>
80007e74:	afa20010 	sw	v0,16(sp)
80007e78:	1440ffe3 	bnez	v0,80007e08 <sfs_bmap_truncate_nolock+0x68>
80007e7c:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:325
		     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY,
					     0, &ino)) != 0) {
			return ret;
		}
		if ((ent = ino) != 0) {
80007e80:	8fa50018 	lw	a1,24(sp)
80007e84:	10a0fff0 	beqz	a1,80007e48 <sfs_bmap_truncate_nolock+0xa8>
80007e88:	afa5001c 	sw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:326
			if ((ret =
80007e8c:	02402021 	move	a0,s2
80007e90:	08001f8e 	j	80007e38 <sfs_bmap_truncate_nolock+0x98>
80007e94:	326603ff 	andi	a2,s3,0x3ff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:300
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
		if ((ino = din->direct[index]) != 0) {
			sfs_block_free(sfs, ino);
80007e98:	0c001c23 	jal	8000708c <sfs_block_free>
80007e9c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:301
			din->direct[index] = 0;
80007ea0:	8e13000c 	lw	s3,12(s0)
80007ea4:	ae400000 	sw	zero,0(s2)
80007ea8:	08001f7d 	j	80007df4 <sfs_bmap_truncate_nolock+0x54>
80007eac:	2662ffff 	addiu	v0,s3,-1
sfs_bmap_truncate_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:362
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->blocks != 0);
80007eb0:	3c048002 	lui	a0,0x8002
80007eb4:	3c068002 	lui	a2,0x8002
80007eb8:	3c078002 	lui	a3,0x8002
80007ebc:	24841ba0 	addiu	a0,a0,7072
80007ec0:	2405016a 	li	a1,362
80007ec4:	24c609b0 	addiu	a2,a2,2480
80007ec8:	0c006afd 	jal	8001abf4 <__panic>
80007ecc:	24e71e04 	addiu	a3,a3,7684

80007ed0 <sfs_reclaim>:
sfs_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1113
	kfree(entry);
	return ret;
}

static int sfs_reclaim(struct inode *node)
{
80007ed0:	27bdffd0 	addiu	sp,sp,-48
80007ed4:	afb1001c 	sw	s1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1114
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80007ed8:	8c910044 	lw	s1,68(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1113
	kfree(entry);
	return ret;
}

static int sfs_reclaim(struct inode *node)
{
80007edc:	afb20020 	sw	s2,32(sp)
80007ee0:	afbf002c 	sw	ra,44(sp)
80007ee4:	afb40028 	sw	s4,40(sp)
80007ee8:	afb30024 	sw	s3,36(sp)
80007eec:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1114
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80007ef0:	12200077 	beqz	s1,800080d0 <sfs_reclaim+0x200>
80007ef4:	00809021 	move	s2,a0
80007ef8:	8e230084 	lw	v1,132(s1)
80007efc:	24025679 	li	v0,22137
80007f00:	14620073 	bne	v1,v0,800080d0 <sfs_reclaim+0x200>
80007f04:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1115
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80007f08:	8c830038 	lw	v1,56(a0)
80007f0c:	14620078 	bne	v1,v0,800080f0 <sfs_reclaim+0x220>
80007f10:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1117

	lock_sfs_fs(sfs);
80007f14:	0c002c3d 	jal	8000b0f4 <lock_sfs_fs>
80007f18:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1120

	int ret = -E_BUSY;
	assert(sin->reclaim_count > 0);
80007f1c:	8e420010 	lw	v0,16(s2)
80007f20:	1840007a 	blez	v0,8000810c <sfs_reclaim+0x23c>
80007f24:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1121
	if ((--sin->reclaim_count) != 0) {
80007f28:	14400042 	bnez	v0,80008034 <sfs_reclaim+0x164>
80007f2c:	ae420010 	sw	v0,16(s2)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80007f30:	8e42003c 	lw	v0,60(s2)
sfs_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1124
		goto failed_unlock;
	}
	assert(inode_ref_count(node) == 0 && inode_open_count(node) == 0);
80007f34:	54400084 	bnezl	v0,80008148 <sfs_reclaim+0x278>
80007f38:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
80007f3c:	8e420040 	lw	v0,64(s2)
sfs_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1124
80007f40:	54400081 	bnezl	v0,80008148 <sfs_reclaim+0x278>
80007f44:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1126

	if (sin->din->nlinks == 0) {
80007f48:	8e420000 	lw	v0,0(s2)
80007f4c:	9443000a 	lhu	v1,10(v0)
80007f50:	54600025 	bnezl	v1,80007fe8 <sfs_reclaim+0x118>
80007f54:	8e42000c 	lw	v0,12(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1128
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
80007f58:	8c50000c 	lw	s0,12(v0)
80007f5c:	52000008 	beqzl	s0,80007f80 <sfs_reclaim+0xb0>
80007f60:	8e430028 	lw	v1,40(s2)
80007f64:	2610ffff 	addiu	s0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1129
			sfs_bmap_truncate_nolock(sfs, sin);
80007f68:	02202021 	move	a0,s1
80007f6c:	0c001f68 	jal	80007da0 <sfs_bmap_truncate_nolock>
80007f70:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1128
	}
	assert(inode_ref_count(node) == 0 && inode_open_count(node) == 0);

	if (sin->din->nlinks == 0) {
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
80007f74:	5600fffc 	bnezl	s0,80007f68 <sfs_reclaim+0x98>
80007f78:	2610ffff 	addiu	s0,s0,-1
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80007f7c:	8e430028 	lw	v1,40(s2)
80007f80:	8e42002c 	lw	v0,44(s2)
sfs_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1138
			goto failed_unlock;
		}
	}

	sfs_remove_links(sin);
	unlock_sfs_fs(sfs);
80007f84:	02202021 	move	a0,s1
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80007f88:	ac620004 	sw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80007f8c:	ac430000 	sw	v1,0(v0)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80007f90:	8e430030 	lw	v1,48(s2)
80007f94:	8e420034 	lw	v0,52(s2)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80007f98:	ac620004 	sw	v0,4(v1)
sfs_reclaim():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1138
80007f9c:	0c002c43 	jal	8000b10c <unlock_sfs_fs>
80007fa0:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1140

	if (sin->din->nlinks == 0) {
80007fa4:	8e440000 	lw	a0,0(s2)
80007fa8:	9482000a 	lhu	v0,10(a0)
80007fac:	5040002e 	beqzl	v0,80008068 <sfs_reclaim+0x198>
80007fb0:	8e450004 	lw	a1,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1154
				sfs_bmap_free_sub_nolock(sfs, ent, i);
			}
			sfs_block_free(sfs, ent);
		}
	}
	kfree(sin->din);
80007fb4:	0c0054a3 	jal	8001528c <kfree>
80007fb8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1155
	vop_kill(node);
80007fbc:	0c00108f 	jal	8000423c <inode_kill>
80007fc0:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1161
	return 0;

failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
80007fc4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1156
			sfs_block_free(sfs, ent);
		}
	}
	kfree(sin->din);
	vop_kill(node);
	return 0;
80007fc8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1161

failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
80007fcc:	8fb40028 	lw	s4,40(sp)
80007fd0:	8fb30024 	lw	s3,36(sp)
80007fd4:	8fb20020 	lw	s2,32(sp)
80007fd8:	8fb1001c 	lw	s1,28(sp)
80007fdc:	8fb00018 	lw	s0,24(sp)
80007fe0:	03e00008 	jr	ra
80007fe4:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1131
	if (sin->din->nlinks == 0) {
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
			sfs_bmap_truncate_nolock(sfs, sin);
		}
	} else if (sin->dirty) {
80007fe8:	5040ffe5 	beqzl	v0,80007f80 <sfs_reclaim+0xb0>
80007fec:	8e430028 	lw	v1,40(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1132
		if ((ret = vop_fsync(node)) != 0) {
80007ff0:	8e420048 	lw	v0,72(s2)
80007ff4:	1040004d 	beqz	v0,8000812c <sfs_reclaim+0x25c>
80007ff8:	3c048002 	lui	a0,0x8002
80007ffc:	8c420018 	lw	v0,24(v0)
80008000:	1040004a 	beqz	v0,8000812c <sfs_reclaim+0x25c>
80008004:	3c058002 	lui	a1,0x8002
80008008:	02402021 	move	a0,s2
8000800c:	0c0010e5 	jal	80004394 <inode_check>
80008010:	24a51b2c 	addiu	a1,a1,6956
80008014:	8e420048 	lw	v0,72(s2)
80008018:	8c420018 	lw	v0,24(v0)
8000801c:	0040f809 	jalr	v0
80008020:	02402021 	move	a0,s2
80008024:	14400005 	bnez	v0,8000803c <sfs_reclaim+0x16c>
80008028:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000802c:	08001fe0 	j	80007f80 <sfs_reclaim+0xb0>
80008030:	8e430028 	lw	v1,40(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1119
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);

	lock_sfs_fs(sfs);

	int ret = -E_BUSY;
80008034:	2402fff0 	li	v0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1159
	kfree(sin->din);
	vop_kill(node);
	return 0;

failed_unlock:
	unlock_sfs_fs(sfs);
80008038:	02202021 	move	a0,s1
8000803c:	0c002c43 	jal	8000b10c <unlock_sfs_fs>
80008040:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1161
	return ret;
}
80008044:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1159
	kfree(sin->din);
	vop_kill(node);
	return 0;

failed_unlock:
	unlock_sfs_fs(sfs);
80008048:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1161
	return ret;
}
8000804c:	8fb40028 	lw	s4,40(sp)
80008050:	8fb30024 	lw	s3,36(sp)
80008054:	8fb20020 	lw	s2,32(sp)
80008058:	8fb1001c 	lw	s1,28(sp)
8000805c:	8fb00018 	lw	s0,24(sp)
80008060:	03e00008 	jr	ra
80008064:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1141

	sfs_remove_links(sin);
	unlock_sfs_fs(sfs);

	if (sin->din->nlinks == 0) {
		sfs_block_free(sfs, sin->ino);
80008068:	0c001c23 	jal	8000708c <sfs_block_free>
8000806c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1143
		uint32_t ent;
		if ((ent = sin->din->indirect) != 0) {
80008070:	8e440000 	lw	a0,0(s2)
80008074:	8c850040 	lw	a1,64(a0)
80008078:	14a00011 	bnez	a1,800080c0 <sfs_reclaim+0x1f0>
8000807c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1146
			sfs_block_free(sfs, ent);
		}
		if ((ent = sin->din->db_indirect) != 0) {
80008080:	8c930044 	lw	s3,68(a0)
80008084:	1260ffcb 	beqz	s3,80007fb4 <sfs_reclaim+0xe4>
80008088:	00003021 	move	a2,zero
8000808c:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1148
			int i;
			for (i = 0; i < SFS_BLK_NENTRY; i++) {
80008090:	24140400 	li	s4,1024
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1149
				sfs_bmap_free_sub_nolock(sfs, ent, i);
80008094:	02202021 	move	a0,s1
80008098:	02602821 	move	a1,s3
8000809c:	0c001f34 	jal	80007cd0 <sfs_bmap_free_sub_nolock>
800080a0:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1148
		if ((ent = sin->din->indirect) != 0) {
			sfs_block_free(sfs, ent);
		}
		if ((ent = sin->din->db_indirect) != 0) {
			int i;
			for (i = 0; i < SFS_BLK_NENTRY; i++) {
800080a4:	1614fffb 	bne	s0,s4,80008094 <sfs_reclaim+0x1c4>
800080a8:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1151
				sfs_bmap_free_sub_nolock(sfs, ent, i);
			}
			sfs_block_free(sfs, ent);
800080ac:	02202021 	move	a0,s1
800080b0:	0c001c23 	jal	8000708c <sfs_block_free>
800080b4:	02602821 	move	a1,s3
800080b8:	08001fed 	j	80007fb4 <sfs_reclaim+0xe4>
800080bc:	8e440000 	lw	a0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1144

	if (sin->din->nlinks == 0) {
		sfs_block_free(sfs, sin->ino);
		uint32_t ent;
		if ((ent = sin->din->indirect) != 0) {
			sfs_block_free(sfs, ent);
800080c0:	0c001c23 	jal	8000708c <sfs_block_free>
800080c4:	02202021 	move	a0,s1
800080c8:	08002020 	j	80008080 <sfs_reclaim+0x1b0>
800080cc:	8e440000 	lw	a0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1114
	return ret;
}

static int sfs_reclaim(struct inode *node)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800080d0:	3c048002 	lui	a0,0x8002
800080d4:	3c068002 	lui	a2,0x8002
800080d8:	3c078002 	lui	a3,0x8002
800080dc:	24841ba0 	addiu	a0,a0,7072
800080e0:	2405045a 	li	a1,1114
800080e4:	24c609b0 	addiu	a2,a2,2480
800080e8:	0c006afd 	jal	8001abf4 <__panic>
800080ec:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1115
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800080f0:	3c068002 	lui	a2,0x8002
800080f4:	3c078002 	lui	a3,0x8002
800080f8:	24841ba0 	addiu	a0,a0,7072
800080fc:	2405045b 	li	a1,1115
80008100:	24c609b0 	addiu	a2,a2,2480
80008104:	0c006afd 	jal	8001abf4 <__panic>
80008108:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1120

	lock_sfs_fs(sfs);

	int ret = -E_BUSY;
	assert(sin->reclaim_count > 0);
8000810c:	3c048002 	lui	a0,0x8002
80008110:	3c068002 	lui	a2,0x8002
80008114:	3c078002 	lui	a3,0x8002
80008118:	24841ba0 	addiu	a0,a0,7072
8000811c:	24050460 	li	a1,1120
80008120:	24c609b0 	addiu	a2,a2,2480
80008124:	0c006afd 	jal	8001abf4 <__panic>
80008128:	24e71e18 	addiu	a3,a3,7704
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1132
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
			sfs_bmap_truncate_nolock(sfs, sin);
		}
	} else if (sin->dirty) {
		if ((ret = vop_fsync(node)) != 0) {
8000812c:	3c068002 	lui	a2,0x8002
80008130:	3c078002 	lui	a3,0x8002
80008134:	24841ba0 	addiu	a0,a0,7072
80008138:	2405046c 	li	a1,1132
8000813c:	24c609b0 	addiu	a2,a2,2480
80008140:	0c006afd 	jal	8001abf4 <__panic>
80008144:	24e71adc 	addiu	a3,a3,6876
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1124
	int ret = -E_BUSY;
	assert(sin->reclaim_count > 0);
	if ((--sin->reclaim_count) != 0) {
		goto failed_unlock;
	}
	assert(inode_ref_count(node) == 0 && inode_open_count(node) == 0);
80008148:	3c068002 	lui	a2,0x8002
8000814c:	3c078002 	lui	a3,0x8002
80008150:	24841ba0 	addiu	a0,a0,7072
80008154:	24050464 	li	a1,1124
80008158:	24c609b0 	addiu	a2,a2,2480
8000815c:	0c006afd 	jal	8001abf4 <__panic>
80008160:	24e71e30 	addiu	a3,a3,7728

80008164 <sfs_tryseek>:
sfs_tryseek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1182
	panic("invalid file type %d.\n", din->type);
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
80008164:	3c020800 	lui	v0,0x800
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1181
	}
	panic("invalid file type %d.\n", din->type);
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
80008168:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1182
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
8000816c:	00a2102b 	sltu	v0,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1181
	}
	panic("invalid file type %d.\n", din->type);
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
80008170:	afb10018 	sw	s1,24(sp)
80008174:	afb00014 	sw	s0,20(sp)
80008178:	afbf001c 	sw	ra,28(sp)
8000817c:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1182
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
80008180:	10400021 	beqz	v0,80008208 <sfs_tryseek+0xa4>
80008184:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1185
		return -E_INVAL;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80008188:	10800021 	beqz	a0,80008210 <sfs_tryseek+0xac>
8000818c:	24021237 	li	v0,4663
80008190:	8c830038 	lw	v1,56(a0)
80008194:	5462001f 	bnel	v1,v0,80008214 <sfs_tryseek+0xb0>
80008198:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1186
	if (pos > din->fileinfo.size) {
8000819c:	8c820000 	lw	v0,0(a0)
800081a0:	8c420000 	lw	v0,0(v0)
800081a4:	0045102b 	sltu	v0,v0,a1
800081a8:	10400012 	beqz	v0,800081f4 <sfs_tryseek+0x90>
800081ac:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1187
		return vop_truncate(node, pos);
800081b0:	8c820048 	lw	v0,72(a0)
800081b4:	5040001f 	beqzl	v0,80008234 <sfs_tryseek+0xd0>
800081b8:	3c048002 	lui	a0,0x8002
800081bc:	8c420048 	lw	v0,72(v0)
800081c0:	1040001b 	beqz	v0,80008230 <sfs_tryseek+0xcc>
800081c4:	3c058002 	lui	a1,0x8002
800081c8:	0c0010e5 	jal	80004394 <inode_check>
800081cc:	24a51598 	addiu	a1,a1,5528
800081d0:	8e020048 	lw	v0,72(s0)
800081d4:	02002021 	move	a0,s0
800081d8:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1190
	}
	return 0;
}
800081dc:	8fbf001c 	lw	ra,28(sp)
800081e0:	8fb10018 	lw	s1,24(sp)
800081e4:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1187
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	if (pos > din->fileinfo.size) {
		return vop_truncate(node, pos);
800081e8:	8c590048 	lw	t9,72(v0)
800081ec:	03200008 	jr	t9
800081f0:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1190
	}
	return 0;
}
800081f4:	8fbf001c 	lw	ra,28(sp)
800081f8:	8fb10018 	lw	s1,24(sp)
800081fc:	8fb00014 	lw	s0,20(sp)
80008200:	03e00008 	jr	ra
80008204:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1183
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
80008208:	0800207d 	j	800081f4 <sfs_tryseek+0x90>
8000820c:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1185
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80008210:	3c048002 	lui	a0,0x8002
80008214:	3c068002 	lui	a2,0x8002
80008218:	3c078002 	lui	a3,0x8002
8000821c:	24841ba0 	addiu	a0,a0,7072
80008220:	240504a1 	li	a1,1185
80008224:	24c609b0 	addiu	a2,a2,2480
80008228:	0c006afd 	jal	8001abf4 <__panic>
8000822c:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1187
	if (pos > din->fileinfo.size) {
		return vop_truncate(node, pos);
80008230:	3c048002 	lui	a0,0x8002
80008234:	3c068002 	lui	a2,0x8002
80008238:	3c078002 	lui	a3,0x8002
8000823c:	24841ba0 	addiu	a0,a0,7072
80008240:	240504a3 	li	a1,1187
80008244:	24c609b0 	addiu	a2,a2,2480
80008248:	0c006afd 	jal	8001abf4 <__panic>
8000824c:	24e71544 	addiu	a3,a3,5444

80008250 <sfs_close>:
sfs_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:601
{
	return 0;
}

static int sfs_close(struct inode *node)
{
80008250:	27bdffe8 	addiu	sp,sp,-24
80008254:	afb00010 	sw	s0,16(sp)
80008258:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:602
	return vop_fsync(node);
8000825c:	10800010 	beqz	a0,800082a0 <sfs_close+0x50>
80008260:	00808021 	move	s0,a0
80008264:	8c820048 	lw	v0,72(a0)
80008268:	5040000e 	beqzl	v0,800082a4 <sfs_close+0x54>
8000826c:	3c048002 	lui	a0,0x8002
80008270:	8c420018 	lw	v0,24(v0)
80008274:	1040000a 	beqz	v0,800082a0 <sfs_close+0x50>
80008278:	3c058002 	lui	a1,0x8002
8000827c:	0c0010e5 	jal	80004394 <inode_check>
80008280:	24a51b2c 	addiu	a1,a1,6956
80008284:	8e020048 	lw	v0,72(s0)
80008288:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:603
}
8000828c:	8fbf0014 	lw	ra,20(sp)
80008290:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:602
	return 0;
}

static int sfs_close(struct inode *node)
{
	return vop_fsync(node);
80008294:	8c590018 	lw	t9,24(v0)
80008298:	03200008 	jr	t9
8000829c:	27bd0018 	addiu	sp,sp,24
800082a0:	3c048002 	lui	a0,0x8002
800082a4:	3c068002 	lui	a2,0x8002
800082a8:	3c078002 	lui	a3,0x8002
800082ac:	24841ba0 	addiu	a0,a0,7072
800082b0:	2405025a 	li	a1,602
800082b4:	24c609b0 	addiu	a2,a2,2480
800082b8:	0c006afd 	jal	8001abf4 <__panic>
800082bc:	24e71adc 	addiu	a3,a3,6876

800082c0 <sfs_fstat>:
sfs_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:722
{
	return sfs_io(node, iob, 1);
}

static int sfs_fstat(struct inode *node, struct stat *stat)
{
800082c0:	27bdffe0 	addiu	sp,sp,-32
800082c4:	afb10018 	sw	s1,24(sp)
800082c8:	00a08821 	move	s1,a1
800082cc:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:724
	int ret;
	memset(stat, 0, sizeof(struct stat));
800082d0:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:722
{
	return sfs_io(node, iob, 1);
}

static int sfs_fstat(struct inode *node, struct stat *stat)
{
800082d4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:724
	int ret;
	memset(stat, 0, sizeof(struct stat));
800082d8:	24060010 	li	a2,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:722
{
	return sfs_io(node, iob, 1);
}

static int sfs_fstat(struct inode *node, struct stat *stat)
{
800082dc:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:724
	int ret;
	memset(stat, 0, sizeof(struct stat));
800082e0:	0c005c44 	jal	80017110 <memset>
800082e4:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:725
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
800082e8:	12000026 	beqz	s0,80008384 <sfs_fstat+0xc4>
800082ec:	3c048002 	lui	a0,0x8002
800082f0:	8e020048 	lw	v0,72(s0)
800082f4:	10400024 	beqz	v0,80008388 <sfs_fstat+0xc8>
800082f8:	3c068002 	lui	a2,0x8002
800082fc:	8c420040 	lw	v0,64(v0)
80008300:	10400020 	beqz	v0,80008384 <sfs_fstat+0xc4>
80008304:	3c058002 	lui	a1,0x8002
80008308:	02002021 	move	a0,s0
8000830c:	0c0010e5 	jal	80004394 <inode_check>
80008310:	24a50bc8 	addiu	a1,a1,3016
80008314:	8e020048 	lw	v0,72(s0)
80008318:	02002021 	move	a0,s0
8000831c:	8c420040 	lw	v0,64(v0)
80008320:	0040f809 	jalr	v0
80008324:	02202821 	move	a1,s1
80008328:	1440000e 	bnez	v0,80008364 <sfs_fstat+0xa4>
8000832c:	24031237 	li	v1,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:728
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80008330:	8e040038 	lw	a0,56(s0)
80008334:	1483001a 	bne	a0,v1,800083a0 <sfs_fstat+0xe0>
80008338:	3c048002 	lui	a0,0x8002
8000833c:	8e030000 	lw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:730
	stat->st_nlinks = din->nlinks;
	stat->st_blocks = din->blocks;
80008340:	8c64000c 	lw	a0,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:729
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	stat->st_nlinks = din->nlinks;
80008344:	9466000a 	lhu	a2,10(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:731
	stat->st_blocks = din->blocks;
	if (din->type != SFS_TYPE_DIR) {
80008348:	94650008 	lhu	a1,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:730
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	stat->st_nlinks = din->nlinks;
	stat->st_blocks = din->blocks;
8000834c:	ae240008 	sw	a0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:729
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	stat->st_nlinks = din->nlinks;
80008350:	ae260004 	sw	a2,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:731
	stat->st_blocks = din->blocks;
	if (din->type != SFS_TYPE_DIR) {
80008354:	24040002 	li	a0,2
80008358:	10a40007 	beq	a1,a0,80008378 <sfs_fstat+0xb8>
8000835c:	8c630000 	lw	v1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:734
		stat->st_size = din->fileinfo.size;
	} else {
		stat->st_size = (din->dirinfo.slots + 2) * sfs_dentry_size;
80008360:	ae23000c 	sw	v1,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:737
	}
	return 0;
}
80008364:	8fbf001c 	lw	ra,28(sp)
80008368:	8fb10018 	lw	s1,24(sp)
8000836c:	8fb00014 	lw	s0,20(sp)
80008370:	03e00008 	jr	ra
80008374:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:734
	stat->st_nlinks = din->nlinks;
	stat->st_blocks = din->blocks;
	if (din->type != SFS_TYPE_DIR) {
		stat->st_size = din->fileinfo.size;
	} else {
		stat->st_size = (din->dirinfo.slots + 2) * sfs_dentry_size;
80008378:	24630002 	addiu	v1,v1,2
8000837c:	080020d8 	j	80008360 <sfs_fstat+0xa0>
80008380:	00031a00 	sll	v1,v1,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:725

static int sfs_fstat(struct inode *node, struct stat *stat)
{
	int ret;
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
80008384:	3c068002 	lui	a2,0x8002
80008388:	3c078002 	lui	a3,0x8002
8000838c:	24841ba0 	addiu	a0,a0,7072
80008390:	240502d5 	li	a1,725
80008394:	24c609b0 	addiu	a2,a2,2480
80008398:	0c006afd 	jal	8001abf4 <__panic>
8000839c:	24e70b78 	addiu	a3,a3,2936
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:728
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
800083a0:	3c068002 	lui	a2,0x8002
800083a4:	3c078002 	lui	a3,0x8002
800083a8:	24841ba0 	addiu	a0,a0,7072
800083ac:	240502d8 	li	a1,728
800083b0:	24c609b0 	addiu	a2,a2,2480
800083b4:	0c006afd 	jal	8001abf4 <__panic>
800083b8:	24e71bac 	addiu	a3,a3,7084

800083bc <sfs_dirent_unlink_nolock>:
sfs_dirent_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:439
}

static int
sfs_dirent_unlink_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			 struct sfs_inode *lnksin)
{
800083bc:	27bdffd8 	addiu	sp,sp,-40
800083c0:	afb10020 	sw	s1,32(sp)
800083c4:	00e08821 	move	s1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:441
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
800083c8:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:439
}

static int
sfs_dirent_unlink_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			 struct sfs_inode *lnksin)
{
800083cc:	afb0001c 	sw	s0,28(sp)
800083d0:	afbf0024 	sw	ra,36(sp)
800083d4:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:441
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
800083d8:	0c001ed2 	jal	80007b48 <sfs_dirent_write_nolock>
800083dc:	afa00010 	sw	zero,16(sp)
800083e0:	14400010 	bnez	v0,80008424 <sfs_dirent_unlink_nolock+0x68>
800083e4:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:444
		return ret;
	}
	assert(sin->din->dirinfo.slots != 0 && lnksin->din->nlinks != 0);
800083e8:	8e030000 	lw	v1,0(s0)
800083ec:	8c640000 	lw	a0,0(v1)
800083f0:	50800011 	beqzl	a0,80008438 <sfs_dirent_unlink_nolock+0x7c>
800083f4:	3c048002 	lui	a0,0x8002
800083f8:	8e250000 	lw	a1,0(s1)
800083fc:	94a7000a 	lhu	a3,10(a1)
80008400:	10e0000c 	beqz	a3,80008434 <sfs_dirent_unlink_nolock+0x78>
80008404:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:446
	sin->dirty = 1;
	sin->din->dirinfo.slots--;
80008408:	2484ffff 	addiu	a0,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:448
	lnksin->dirty = 1;
	lnksin->din->nlinks--;
8000840c:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:445
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
		return ret;
	}
	assert(sin->din->dirinfo.slots != 0 && lnksin->din->nlinks != 0);
	sin->dirty = 1;
80008410:	ae06000c 	sw	a2,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:446
	sin->din->dirinfo.slots--;
80008414:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:447
	lnksin->dirty = 1;
80008418:	ae26000c 	sw	a2,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:448
	lnksin->din->nlinks--;
8000841c:	a4a7000a 	sh	a3,10(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:450
	return 0;
}
80008420:	8fbf0024 	lw	ra,36(sp)
80008424:	8fb10020 	lw	s1,32(sp)
80008428:	8fb0001c 	lw	s0,28(sp)
8000842c:	03e00008 	jr	ra
80008430:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:444
{
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
		return ret;
	}
	assert(sin->din->dirinfo.slots != 0 && lnksin->din->nlinks != 0);
80008434:	3c048002 	lui	a0,0x8002
80008438:	3c068002 	lui	a2,0x8002
8000843c:	3c078002 	lui	a3,0x8002
80008440:	24841ba0 	addiu	a0,a0,7072
80008444:	240501bc 	li	a1,444
80008448:	24c609b0 	addiu	a2,a2,2480
8000844c:	0c006afd 	jal	8001abf4 <__panic>
80008450:	24e71e6c 	addiu	a3,a3,7788

80008454 <sfs_dirent_link_nolock>:
sfs_dirent_link_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:423
}

static int
sfs_dirent_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_inode *lnksin, const char *name)
{
80008454:	27bdffd8 	addiu	sp,sp,-40
80008458:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:425
	int ret;
	if ((ret =
8000845c:	8fa20038 	lw	v0,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:423
}

static int
sfs_dirent_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_inode *lnksin, const char *name)
{
80008460:	00e08021 	move	s0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:425
	int ret;
	if ((ret =
80008464:	8ce70004 	lw	a3,4(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:423
}

static int
sfs_dirent_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_inode *lnksin, const char *name)
{
80008468:	afb10020 	sw	s1,32(sp)
8000846c:	afbf0024 	sw	ra,36(sp)
80008470:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:425
	int ret;
	if ((ret =
80008474:	0c001ed2 	jal	80007b48 <sfs_dirent_write_nolock>
80008478:	afa20010 	sw	v0,16(sp)
8000847c:	1440000b 	bnez	v0,800084ac <sfs_dirent_link_nolock+0x58>
80008480:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:430
	     sfs_dirent_write_nolock(sfs, sin, slot, lnksin->ino, name)) != 0) {
		return ret;
	}
	sin->dirty = 1;
	sin->din->dirinfo.slots++;
80008484:	8e230000 	lw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:429
	int ret;
	if ((ret =
	     sfs_dirent_write_nolock(sfs, sin, slot, lnksin->ino, name)) != 0) {
		return ret;
	}
	sin->dirty = 1;
80008488:	ae24000c 	sw	a0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:430
	sin->din->dirinfo.slots++;
8000848c:	8c650000 	lw	a1,0(v1)
80008490:	24a50001 	addiu	a1,a1,1
80008494:	ac650000 	sw	a1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:432
	lnksin->dirty = 1;
	lnksin->din->nlinks++;
80008498:	8e030000 	lw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:431
	     sfs_dirent_write_nolock(sfs, sin, slot, lnksin->ino, name)) != 0) {
		return ret;
	}
	sin->dirty = 1;
	sin->din->dirinfo.slots++;
	lnksin->dirty = 1;
8000849c:	ae04000c 	sw	a0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:432
	lnksin->din->nlinks++;
800084a0:	9464000a 	lhu	a0,10(v1)
800084a4:	24840001 	addiu	a0,a0,1
800084a8:	a464000a 	sh	a0,10(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:434
	return 0;
}
800084ac:	8fbf0024 	lw	ra,36(sp)
800084b0:	8fb10020 	lw	s1,32(sp)
800084b4:	8fb0001c 	lw	s0,28(sp)
800084b8:	03e00008 	jr	ra
800084bc:	27bd0028 	addiu	sp,sp,40

800084c0 <sfs_write>:
sfs_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:717
{
	return sfs_io(node, iob, 0);
}

static int sfs_write(struct inode *node, struct iobuf *iob)
{
800084c0:	27bdffc0 	addiu	sp,sp,-64
800084c4:	afb30034 	sw	s3,52(sp)
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800084c8:	8c930044 	lw	s3,68(a0)
sfs_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:717
{
	return sfs_io(node, iob, 0);
}

static int sfs_write(struct inode *node, struct iobuf *iob)
{
800084cc:	afb20030 	sw	s2,48(sp)
800084d0:	afb00028 	sw	s0,40(sp)
800084d4:	afbf003c 	sw	ra,60(sp)
800084d8:	afb40038 	sw	s4,56(sp)
800084dc:	afb1002c 	sw	s1,44(sp)
800084e0:	00809021 	move	s2,a0
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800084e4:	1260004a 	beqz	s3,80008610 <sfs_write+0x150>
800084e8:	00a08021 	move	s0,a1
800084ec:	8e630084 	lw	v1,132(s3)
800084f0:	24025679 	li	v0,22137
800084f4:	14620046 	bne	v1,v0,80008610 <sfs_write+0x150>
800084f8:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800084fc:	8c830038 	lw	v1,56(a0)
80008500:	5462004b 	bnel	v1,v0,80008630 <sfs_write+0x170>
80008504:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008508:	40026000 	mfc0	v0,c0_status
8000850c:	30420001 	andi	v0,v0,0x1
80008510:	14400029 	bnez	v0,800085b8 <sfs_write+0xf8>
80008514:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008518:	8c910008 	lw	s1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000851c:	32310001 	andi	s1,s1,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008520:	1620001d 	bnez	s1,80008598 <sfs_write+0xd8>
80008524:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80008528:	26510014 	addiu	s1,s2,20
8000852c:	0c006711 	jal	80019c44 <down>
80008530:	02202021 	move	a0,s1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80008534:	40026000 	mfc0	v0,c0_status
80008538:	30420001 	andi	v0,v0,0x1
8000853c:	14400025 	bnez	v0,800085d4 <sfs_write+0x114>
80008540:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008544:	8e540008 	lw	s4,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008548:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000854c:	1680002c 	bnez	s4,80008600 <sfs_write+0x140>
80008550:	02402821 	move	a1,s2
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
80008554:	8e02000c 	lw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
80008558:	8e060000 	lw	a2,0(s0)
8000855c:	8e070004 	lw	a3,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
80008560:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
80008564:	27a20018 	addiu	v0,sp,24
80008568:	afa20010 	sw	v0,16(sp)
8000856c:	02602021 	move	a0,s3
80008570:	24020001 	li	v0,1
80008574:	0c001d8e 	jal	80007638 <sfs_io_nolock>
80008578:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:704
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
8000857c:	8fa50018 	lw	a1,24(sp)
80008580:	14a0001b 	bnez	a1,800085f0 <sfs_write+0x130>
80008584:	02002021 	move	a0,s0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008588:	02202021 	move	a0,s1
8000858c:	0c00670f 	jal	80019c3c <up>
80008590:	afa20020 	sw	v0,32(sp)
80008594:	8fa20020 	lw	v0,32(sp)
sfs_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:719
}

static int sfs_write(struct inode *node, struct iobuf *iob)
{
	return sfs_io(node, iob, 1);
}
80008598:	8fbf003c 	lw	ra,60(sp)
8000859c:	8fb40038 	lw	s4,56(sp)
800085a0:	8fb30034 	lw	s3,52(sp)
800085a4:	8fb20030 	lw	s2,48(sp)
800085a8:	8fb1002c 	lw	s1,44(sp)
800085ac:	8fb00028 	lw	s0,40(sp)
800085b0:	03e00008 	jr	ra
800085b4:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800085b8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800085bc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800085c0:	8e510008 	lw	s1,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800085c4:	0c006cba 	jal	8001b2e8 <intr_enable>
800085c8:	32310001 	andi	s1,s1,0x1
800085cc:	08002148 	j	80008520 <sfs_write+0x60>
800085d0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800085d4:	0c006cbe 	jal	8001b2f8 <intr_disable>
800085d8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800085dc:	8e540008 	lw	s4,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800085e0:	0c006cba 	jal	8001b2e8 <intr_enable>
800085e4:	32940001 	andi	s4,s4,0x1
800085e8:	08002153 	j	8000854c <sfs_write+0x8c>
800085ec:	00000000 	nop
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:705
	}
	size_t alen = iob->io_resid;
	ret =
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
		iobuf_skip(iob, alen);
800085f0:	0c003340 	jal	8000cd00 <iobuf_skip>
800085f4:	afa20020 	sw	v0,32(sp)
800085f8:	08002162 	j	80008588 <sfs_write+0xc8>
800085fc:	8fa20020 	lw	v0,32(sp)
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008600:	0c00670f 	jal	80019c3c <up>
80008604:	02202021 	move	a0,s1
80008608:	08002166 	j	80008598 <sfs_write+0xd8>
8000860c:	2402fffe 	li	v0,-2
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008610:	3c048002 	lui	a0,0x8002
80008614:	3c068002 	lui	a2,0x8002
80008618:	3c078002 	lui	a3,0x8002
8000861c:	24841ba0 	addiu	a0,a0,7072
80008620:	240502b7 	li	a1,695
80008624:	24c609b0 	addiu	a2,a2,2480
80008628:	0c006afd 	jal	8001abf4 <__panic>
8000862c:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008630:	3c068002 	lui	a2,0x8002
80008634:	3c078002 	lui	a3,0x8002
80008638:	24841ba0 	addiu	a0,a0,7072
8000863c:	240502b8 	li	a1,696
80008640:	24c609b0 	addiu	a2,a2,2480
80008644:	0c006afd 	jal	8001abf4 <__panic>
80008648:	24e71bac 	addiu	a3,a3,7084

8000864c <sfs_read>:
sfs_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:712
	unlock_sin(sin);
	return ret;
}

static int sfs_read(struct inode *node, struct iobuf *iob)
{
8000864c:	27bdffc0 	addiu	sp,sp,-64
80008650:	afb30034 	sw	s3,52(sp)
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008654:	8c930044 	lw	s3,68(a0)
sfs_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:712
	unlock_sin(sin);
	return ret;
}

static int sfs_read(struct inode *node, struct iobuf *iob)
{
80008658:	afb20030 	sw	s2,48(sp)
8000865c:	afb00028 	sw	s0,40(sp)
80008660:	afbf003c 	sw	ra,60(sp)
80008664:	afb40038 	sw	s4,56(sp)
80008668:	afb1002c 	sw	s1,44(sp)
8000866c:	00809021 	move	s2,a0
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008670:	12600049 	beqz	s3,80008798 <sfs_read+0x14c>
80008674:	00a08021 	move	s0,a1
80008678:	8e630084 	lw	v1,132(s3)
8000867c:	24025679 	li	v0,22137
80008680:	14620045 	bne	v1,v0,80008798 <sfs_read+0x14c>
80008684:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008688:	8c830038 	lw	v1,56(a0)
8000868c:	5462004a 	bnel	v1,v0,800087b8 <sfs_read+0x16c>
80008690:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008694:	40026000 	mfc0	v0,c0_status
80008698:	30420001 	andi	v0,v0,0x1
8000869c:	14400028 	bnez	v0,80008740 <sfs_read+0xf4>
800086a0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800086a4:	8c910008 	lw	s1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800086a8:	32310001 	andi	s1,s1,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800086ac:	1620001c 	bnez	s1,80008720 <sfs_read+0xd4>
800086b0:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
800086b4:	26510014 	addiu	s1,s2,20
800086b8:	0c006711 	jal	80019c44 <down>
800086bc:	02202021 	move	a0,s1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
800086c0:	40026000 	mfc0	v0,c0_status
800086c4:	30420001 	andi	v0,v0,0x1
800086c8:	14400024 	bnez	v0,8000875c <sfs_read+0x110>
800086cc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800086d0:	8e540008 	lw	s4,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800086d4:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
800086d8:	1680002b 	bnez	s4,80008788 <sfs_read+0x13c>
800086dc:	02402821 	move	a1,s2
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
800086e0:	8e02000c 	lw	v0,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
800086e4:	8e060000 	lw	a2,0(s0)
800086e8:	8e070004 	lw	a3,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
800086ec:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
800086f0:	02602021 	move	a0,s3
800086f4:	27a20018 	addiu	v0,sp,24
800086f8:	afa20010 	sw	v0,16(sp)
800086fc:	0c001d8e 	jal	80007638 <sfs_io_nolock>
80008700:	afa00014 	sw	zero,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:704
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
80008704:	8fa50018 	lw	a1,24(sp)
80008708:	14a0001b 	bnez	a1,80008778 <sfs_read+0x12c>
8000870c:	02002021 	move	a0,s0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008710:	02202021 	move	a0,s1
80008714:	0c00670f 	jal	80019c3c <up>
80008718:	afa20020 	sw	v0,32(sp)
8000871c:	8fa20020 	lw	v0,32(sp)
sfs_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:714
}

static int sfs_read(struct inode *node, struct iobuf *iob)
{
	return sfs_io(node, iob, 0);
}
80008720:	8fbf003c 	lw	ra,60(sp)
80008724:	8fb40038 	lw	s4,56(sp)
80008728:	8fb30034 	lw	s3,52(sp)
8000872c:	8fb20030 	lw	s2,48(sp)
80008730:	8fb1002c 	lw	s1,44(sp)
80008734:	8fb00028 	lw	s0,40(sp)
80008738:	03e00008 	jr	ra
8000873c:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008740:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008744:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008748:	8e510008 	lw	s1,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000874c:	0c006cba 	jal	8001b2e8 <intr_enable>
80008750:	32310001 	andi	s1,s1,0x1
80008754:	080021ab 	j	800086ac <sfs_read+0x60>
80008758:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000875c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008760:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008764:	8e540008 	lw	s4,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008768:	0c006cba 	jal	8001b2e8 <intr_enable>
8000876c:	32940001 	andi	s4,s4,0x1
80008770:	080021b6 	j	800086d8 <sfs_read+0x8c>
80008774:	00000000 	nop
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:705
	}
	size_t alen = iob->io_resid;
	ret =
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
		iobuf_skip(iob, alen);
80008778:	0c003340 	jal	8000cd00 <iobuf_skip>
8000877c:	afa20020 	sw	v0,32(sp)
80008780:	080021c4 	j	80008710 <sfs_read+0xc4>
80008784:	8fa20020 	lw	v0,32(sp)
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008788:	0c00670f 	jal	80019c3c <up>
8000878c:	02202021 	move	a0,s1
80008790:	080021c8 	j	80008720 <sfs_read+0xd4>
80008794:	2402fffe 	li	v0,-2
sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008798:	3c048002 	lui	a0,0x8002
8000879c:	3c068002 	lui	a2,0x8002
800087a0:	3c078002 	lui	a3,0x8002
800087a4:	24841ba0 	addiu	a0,a0,7072
800087a8:	240502b7 	li	a1,695
800087ac:	24c609b0 	addiu	a2,a2,2480
800087b0:	0c006afd 	jal	8001abf4 <__panic>
800087b4:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800087b8:	3c068002 	lui	a2,0x8002
800087bc:	3c078002 	lui	a3,0x8002
800087c0:	24841ba0 	addiu	a0,a0,7072
800087c4:	240502b8 	li	a1,696
800087c8:	24c609b0 	addiu	a2,a2,2480
800087cc:	0c006afd 	jal	8001abf4 <__panic>
800087d0:	24e71bac 	addiu	a3,a3,7084

800087d4 <sfs_mkdir>:
sfs_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:816
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_mkdir(struct inode *node, const char *name)
{
800087d4:	27bdffc0 	addiu	sp,sp,-64
800087d8:	afb00024 	sw	s0,36(sp)
800087dc:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:817
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
800087e0:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:816
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_mkdir(struct inode *node, const char *name)
{
800087e4:	afb10028 	sw	s1,40(sp)
800087e8:	afbf003c 	sw	ra,60(sp)
800087ec:	afb50038 	sw	s5,56(sp)
800087f0:	afb40034 	sw	s4,52(sp)
800087f4:	afb30030 	sw	s3,48(sp)
800087f8:	afb2002c 	sw	s2,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:817
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
800087fc:	0c005b6b 	jal	80016dac <strlen>
80008800:	00a08821 	move	s1,a1
80008804:	2c420100 	sltiu	v0,v0,256
80008808:	10400057 	beqz	v0,80008968 <sfs_mkdir+0x194>
8000880c:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:820
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
80008810:	02202021 	move	a0,s1
80008814:	0c005baa 	jal	80016ea8 <strcmp>
80008818:	24a539e4 	addiu	a1,a1,14820
8000881c:	10400047 	beqz	v0,8000893c <sfs_mkdir+0x168>
80008820:	3c058002 	lui	a1,0x8002
80008824:	02202021 	move	a0,s1
80008828:	0c005baa 	jal	80016ea8 <strcmp>
8000882c:	24a51ea8 	addiu	a1,a1,7848
80008830:	10400043 	beqz	v0,80008940 <sfs_mkdir+0x16c>
80008834:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:823
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008838:	8e120044 	lw	s2,68(s0)
8000883c:	12400085 	beqz	s2,80008a54 <sfs_mkdir+0x280>
80008840:	24025679 	li	v0,22137
80008844:	8e430084 	lw	v1,132(s2)
80008848:	14620082 	bne	v1,v0,80008a54 <sfs_mkdir+0x280>
8000884c:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:824
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008850:	8e030038 	lw	v1,56(s0)
80008854:	14620087 	bne	v1,v0,80008a74 <sfs_mkdir+0x2a0>
80008858:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000885c:	40026000 	mfc0	v0,c0_status
80008860:	30420001 	andi	v0,v0,0x1
80008864:	14400027 	bnez	v0,80008904 <sfs_mkdir+0x130>
80008868:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000886c:	8e130008 	lw	s3,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008870:	32730001 	andi	s3,s3,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008874:	1660003e 	bnez	s3,80008970 <sfs_mkdir+0x19c>
80008878:	26130014 	addiu	s3,s0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000887c:	0c006711 	jal	80019c44 <down>
80008880:	02602021 	move	a0,s3
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80008884:	40026000 	mfc0	v0,c0_status
80008888:	30420001 	andi	v0,v0,0x1
8000888c:	14400024 	bnez	v0,80008920 <sfs_mkdir+0x14c>
80008890:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008894:	8e140008 	lw	s4,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008898:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000889c:	16800058 	bnez	s4,80008a00 <sfs_mkdir+0x22c>
800088a0:	27a2001c 	addiu	v0,sp,28
sfs_mkdir_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:784

static int
sfs_mkdir_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name)
{
	int ret, slot;
	if ((ret =
800088a4:	02402021 	move	a0,s2
800088a8:	02002821 	move	a1,s0
800088ac:	02203021 	move	a2,s1
800088b0:	00003821 	move	a3,zero
800088b4:	afa00010 	sw	zero,16(sp)
800088b8:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
800088bc:	afa20014 	sw	v0,20(sp)
800088c0:	0040a821 	move	s5,v0
800088c4:	2402fffe 	li	v0,-2
800088c8:	12a2002b 	beq	s5,v0,80008978 <sfs_mkdir+0x1a4>
800088cc:	2402ffef 	li	v0,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:787
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
800088d0:	0055a80a 	movz	s5,v0,s5
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
800088d4:	0c00670f 	jal	80019c3c <up>
800088d8:	02602021 	move	a0,s3
sfs_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:831
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_mkdir_nolock(sfs, sin, name);
		unlock_sin(sin);
	}
	return ret;
}
800088dc:	8fbf003c 	lw	ra,60(sp)
800088e0:	02a01021 	move	v0,s5
800088e4:	8fb40034 	lw	s4,52(sp)
800088e8:	8fb50038 	lw	s5,56(sp)
800088ec:	8fb30030 	lw	s3,48(sp)
800088f0:	8fb2002c 	lw	s2,44(sp)
800088f4:	8fb10028 	lw	s1,40(sp)
800088f8:	8fb00024 	lw	s0,36(sp)
800088fc:	03e00008 	jr	ra
80008900:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008904:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008908:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000890c:	8e130008 	lw	s3,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008910:	0c006cba 	jal	8001b2e8 <intr_enable>
80008914:	32730001 	andi	s3,s3,0x1
80008918:	0800221d 	j	80008874 <sfs_mkdir+0xa0>
8000891c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008920:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008924:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008928:	8e140008 	lw	s4,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000892c:	0c006cba 	jal	8001b2e8 <intr_enable>
80008930:	32940001 	andi	s4,s4,0x1
80008934:	08002227 	j	8000889c <sfs_mkdir+0xc8>
80008938:	00000000 	nop
sfs_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:831
8000893c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:821
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
80008940:	2415ffef 	li	s5,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:831
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_mkdir_nolock(sfs, sin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008944:	02a01021 	move	v0,s5
80008948:	8fb40034 	lw	s4,52(sp)
8000894c:	8fb50038 	lw	s5,56(sp)
80008950:	8fb30030 	lw	s3,48(sp)
80008954:	8fb2002c 	lw	s2,44(sp)
80008958:	8fb10028 	lw	s1,40(sp)
8000895c:	8fb00024 	lw	s0,36(sp)
80008960:	03e00008 	jr	ra
80008964:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:818
}

static int sfs_mkdir(struct inode *node, const char *name)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
80008968:	08002237 	j	800088dc <sfs_mkdir+0x108>
8000896c:	2415ffe5 	li	s5,-27
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008970:	08002237 	j	800088dc <sfs_mkdir+0x108>
80008974:	2415fffe 	li	s5,-2
sfs_mkdir_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:790
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
	}
	struct inode *link_node;
	if ((ret = sfs_dirent_create_inode(sfs, SFS_TYPE_DIR, &link_node)) != 0) {
80008978:	02402021 	move	a0,s2
8000897c:	24050002 	li	a1,2
80008980:	0c001c9a 	jal	80007268 <sfs_dirent_create_inode>
80008984:	27a60018 	addiu	a2,sp,24
80008988:	1440ffd2 	bnez	v0,800088d4 <sfs_mkdir+0x100>
8000898c:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:793
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008990:	8fb40018 	lw	s4,24(sp)
80008994:	1280003e 	beqz	s4,80008a90 <sfs_mkdir+0x2bc>
80008998:	24021237 	li	v0,4663
8000899c:	8e830038 	lw	v1,56(s4)
800089a0:	1462003b 	bne	v1,v0,80008a90 <sfs_mkdir+0x2bc>
800089a4:	8fa6001c 	lw	a2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:794
	if ((ret = sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name)) != 0) {
800089a8:	02402021 	move	a0,s2
800089ac:	02002821 	move	a1,s0
800089b0:	02803821 	move	a3,s4
800089b4:	0c002115 	jal	80008454 <sfs_dirent_link_nolock>
800089b8:	afb10010 	sw	s1,16(sp)
800089bc:	10400014 	beqz	v0,80008a10 <sfs_mkdir+0x23c>
800089c0:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:795
		assert(lnksin->din->nlinks == 0);
800089c4:	8e820000 	lw	v0,0(s4)
800089c8:	9442000a 	lhu	v0,10(v0)
800089cc:	14400034 	bnez	v0,80008aa0 <sfs_mkdir+0x2cc>
800089d0:	8fa40018 	lw	a0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:796
		assert(inode_ref_count(link_node) == 1
800089d4:	24020001 	li	v0,1
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
800089d8:	8c83003c 	lw	v1,60(a0)
sfs_mkdir_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:796
800089dc:	54620038 	bnel	v1,v0,80008ac0 <sfs_mkdir+0x2ec>
800089e0:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
800089e4:	8c820040 	lw	v0,64(a0)
sfs_mkdir_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:796
800089e8:	54400035 	bnezl	v0,80008ac0 <sfs_mkdir+0x2ec>
800089ec:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:811

	/* add '..' link to parent */
	sfs_nlinks_inc_nolock(sin);

out:
	vop_ref_dec(link_node);
800089f0:	0c001164 	jal	80004590 <inode_ref_dec>
800089f4:	00000000 	nop
800089f8:	08002235 	j	800088d4 <sfs_mkdir+0x100>
800089fc:	00000000 	nop
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008a00:	0c00670f 	jal	80019c3c <up>
80008a04:	02602021 	move	a0,s3
80008a08:	08002237 	j	800088dc <sfs_mkdir+0x108>
80008a0c:	2415fffe 	li	s5,-2
sfs_dirinfo_set_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:754

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
80008a10:	8e820000 	lw	v0,0(s4)
80008a14:	8e030004 	lw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:753
}

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
80008a18:	24050001 	li	a1,1
sfs_nlinks_inc_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
80008a1c:	9444000a 	lhu	a0,10(v0)
sfs_dirinfo_set_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:753
}

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
80008a20:	ae85000c 	sw	a1,12(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:754
	sin->din->dirinfo.parent = parent->ino;
80008a24:	ac430004 	sw	v1,4(v0)
sfs_nlinks_inc_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
80008a28:	8e030000 	lw	v1,0(s0)
80008a2c:	24840001 	addiu	a0,a0,1
80008a30:	a444000a 	sh	a0,10(v0)
80008a34:	9462000a 	lhu	v0,10(v1)
80008a38:	8fa40018 	lw	a0,24(sp)
80008a3c:	ae05000c 	sw	a1,12(s0)
80008a40:	24420001 	addiu	v0,v0,1
sfs_mkdir_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:811

	/* add '..' link to parent */
	sfs_nlinks_inc_nolock(sin);

out:
	vop_ref_dec(link_node);
80008a44:	0c001164 	jal	80004590 <inode_ref_dec>
80008a48:	a462000a 	sh	v0,10(v1)
80008a4c:	08002235 	j	800088d4 <sfs_mkdir+0x100>
80008a50:	00000000 	nop
sfs_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:823
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008a54:	3c048002 	lui	a0,0x8002
80008a58:	3c068002 	lui	a2,0x8002
80008a5c:	3c078002 	lui	a3,0x8002
80008a60:	24841ba0 	addiu	a0,a0,7072
80008a64:	24050337 	li	a1,823
80008a68:	24c609b0 	addiu	a2,a2,2480
80008a6c:	0c006afd 	jal	8001abf4 <__panic>
80008a70:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:824
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008a74:	24841ba0 	addiu	a0,a0,7072
80008a78:	24050338 	li	a1,824
sfs_mkdir_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:793
	}
	struct inode *link_node;
	if ((ret = sfs_dirent_create_inode(sfs, SFS_TYPE_DIR, &link_node)) != 0) {
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008a7c:	3c068002 	lui	a2,0x8002
80008a80:	3c078002 	lui	a3,0x8002
80008a84:	24c609b0 	addiu	a2,a2,2480
80008a88:	0c006afd 	jal	8001abf4 <__panic>
80008a8c:	24e71bac 	addiu	a3,a3,7084
80008a90:	3c048002 	lui	a0,0x8002
80008a94:	24841ba0 	addiu	a0,a0,7072
80008a98:	0800229f 	j	80008a7c <sfs_mkdir+0x2a8>
80008a9c:	24050319 	li	a1,793
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:795
	if ((ret = sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name)) != 0) {
		assert(lnksin->din->nlinks == 0);
80008aa0:	3c048002 	lui	a0,0x8002
80008aa4:	3c068002 	lui	a2,0x8002
80008aa8:	3c078002 	lui	a3,0x8002
80008aac:	24841ba0 	addiu	a0,a0,7072
80008ab0:	2405031b 	li	a1,795
80008ab4:	24c609b0 	addiu	a2,a2,2480
80008ab8:	0c006afd 	jal	8001abf4 <__panic>
80008abc:	24e71eac 	addiu	a3,a3,7852
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:796
		assert(inode_ref_count(link_node) == 1
80008ac0:	3c068002 	lui	a2,0x8002
80008ac4:	3c078002 	lui	a3,0x8002
80008ac8:	24841ba0 	addiu	a0,a0,7072
80008acc:	2405031d 	li	a1,797
80008ad0:	24c609b0 	addiu	a2,a2,2480
80008ad4:	0c006afd 	jal	8001abf4 <__panic>
80008ad8:	24e71ec8 	addiu	a3,a3,7880

80008adc <sfs_link>:
sfs_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:848
	return sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name);
}

static int
sfs_link(struct inode *node, const char *name, struct inode *link_node)
{
80008adc:	27bdffb8 	addiu	sp,sp,-72
80008ae0:	afb0002c 	sw	s0,44(sp)
80008ae4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:849
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
80008ae8:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:848
	return sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name);
}

static int
sfs_link(struct inode *node, const char *name, struct inode *link_node)
{
80008aec:	afb20034 	sw	s2,52(sp)
80008af0:	afb10030 	sw	s1,48(sp)
80008af4:	afbf0044 	sw	ra,68(sp)
80008af8:	afb50040 	sw	s5,64(sp)
80008afc:	afb4003c 	sw	s4,60(sp)
80008b00:	afb30038 	sw	s3,56(sp)
80008b04:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:849
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
80008b08:	0c005b6b 	jal	80016dac <strlen>
80008b0c:	00c09021 	move	s2,a2
80008b10:	2c420100 	sltiu	v0,v0,256
80008b14:	10400061 	beqz	v0,80008c9c <sfs_link+0x1c0>
80008b18:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:852
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
80008b1c:	02202021 	move	a0,s1
80008b20:	0c005baa 	jal	80016ea8 <strcmp>
80008b24:	24a539e4 	addiu	a1,a1,14820
80008b28:	10400052 	beqz	v0,80008c74 <sfs_link+0x198>
80008b2c:	3c058002 	lui	a1,0x8002
80008b30:	02202021 	move	a0,s1
80008b34:	0c005baa 	jal	80016ea8 <strcmp>
80008b38:	24a51ea8 	addiu	a1,a1,7848
80008b3c:	1040004e 	beqz	v0,80008c78 <sfs_link+0x19c>
80008b40:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:855
		return -E_EXISTS;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008b44:	1240006b 	beqz	s2,80008cf4 <sfs_link+0x218>
80008b48:	24031237 	li	v1,4663
80008b4c:	8e420038 	lw	v0,56(s2)
80008b50:	14430069 	bne	v0,v1,80008cf8 <sfs_link+0x21c>
80008b54:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:856
	if (lnksin->din->type == SFS_TYPE_DIR) {
80008b58:	8e430000 	lw	v1,0(s2)
80008b5c:	94640008 	lhu	a0,8(v1)
80008b60:	24030002 	li	v1,2
80008b64:	5083002d 	beql	a0,v1,80008c1c <sfs_link+0x140>
80008b68:	2402ffeb 	li	v0,-21
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:859
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008b6c:	8e130044 	lw	s3,68(s0)
80008b70:	12600058 	beqz	s3,80008cd4 <sfs_link+0x1f8>
80008b74:	24035679 	li	v1,22137
80008b78:	8e640084 	lw	a0,132(s3)
80008b7c:	54830056 	bnel	a0,v1,80008cd8 <sfs_link+0x1fc>
80008b80:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:860
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008b84:	8e030038 	lw	v1,56(s0)
80008b88:	54620062 	bnel	v1,v0,80008d14 <sfs_link+0x238>
80008b8c:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008b90:	40026000 	mfc0	v0,c0_status
80008b94:	30420001 	andi	v0,v0,0x1
80008b98:	14400028 	bnez	v0,80008c3c <sfs_link+0x160>
80008b9c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008ba0:	8e140008 	lw	s4,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008ba4:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008ba8:	1680001b 	bnez	s4,80008c18 <sfs_link+0x13c>
80008bac:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80008bb0:	26140014 	addiu	s4,s0,20
80008bb4:	0c006711 	jal	80019c44 <down>
80008bb8:	02802021 	move	a0,s4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80008bbc:	40026000 	mfc0	v0,c0_status
80008bc0:	30420001 	andi	v0,v0,0x1
80008bc4:	14400024 	bnez	v0,80008c58 <sfs_link+0x17c>
80008bc8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008bcc:	8e150008 	lw	s5,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008bd0:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80008bd4:	16a0003b 	bnez	s5,80008cc4 <sfs_link+0x1e8>
80008bd8:	02602021 	move	a0,s3
sfs_link_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:838
static int
sfs_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct sfs_inode *lnksin, const char *name)
{
	int ret, slot;
	if ((ret =
80008bdc:	27a20018 	addiu	v0,sp,24
80008be0:	02002821 	move	a1,s0
80008be4:	02203021 	move	a2,s1
80008be8:	00003821 	move	a3,zero
80008bec:	afa00010 	sw	zero,16(sp)
80008bf0:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
80008bf4:	afa20014 	sw	v0,20(sp)
80008bf8:	2403fffe 	li	v1,-2
80008bfc:	10430029 	beq	v0,v1,80008ca4 <sfs_link+0x1c8>
80008c00:	2403ffef 	li	v1,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:841
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
80008c04:	0062100a 	movz	v0,v1,v0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008c08:	02802021 	move	a0,s4
80008c0c:	0c00670f 	jal	80019c3c <up>
80008c10:	afa20020 	sw	v0,32(sp)
80008c14:	8fa20020 	lw	v0,32(sp)
sfs_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:867
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_link_nolock(sfs, sin, lnksin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008c18:	8fbf0044 	lw	ra,68(sp)
80008c1c:	8fb50040 	lw	s5,64(sp)
80008c20:	8fb4003c 	lw	s4,60(sp)
80008c24:	8fb30038 	lw	s3,56(sp)
80008c28:	8fb20034 	lw	s2,52(sp)
80008c2c:	8fb10030 	lw	s1,48(sp)
80008c30:	8fb0002c 	lw	s0,44(sp)
80008c34:	03e00008 	jr	ra
80008c38:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008c3c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008c40:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008c44:	8e140008 	lw	s4,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008c48:	0c006cba 	jal	8001b2e8 <intr_enable>
80008c4c:	32940001 	andi	s4,s4,0x1
80008c50:	080022ea 	j	80008ba8 <sfs_link+0xcc>
80008c54:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008c58:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008c5c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008c60:	8e150008 	lw	s5,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008c64:	0c006cba 	jal	8001b2e8 <intr_enable>
80008c68:	32b50001 	andi	s5,s5,0x1
80008c6c:	080022f5 	j	80008bd4 <sfs_link+0xf8>
80008c70:	00000000 	nop
sfs_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:867
80008c74:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:853
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
80008c78:	2402ffef 	li	v0,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:867
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_link_nolock(sfs, sin, lnksin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008c7c:	8fb50040 	lw	s5,64(sp)
80008c80:	8fb4003c 	lw	s4,60(sp)
80008c84:	8fb30038 	lw	s3,56(sp)
80008c88:	8fb20034 	lw	s2,52(sp)
80008c8c:	8fb10030 	lw	s1,48(sp)
80008c90:	8fb0002c 	lw	s0,44(sp)
80008c94:	03e00008 	jr	ra
80008c98:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:850

static int
sfs_link(struct inode *node, const char *name, struct inode *link_node)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
80008c9c:	08002306 	j	80008c18 <sfs_link+0x13c>
80008ca0:	2402ffe5 	li	v0,-27
sfs_link_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:843
	if ((ret =
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
	}
	return sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name);
80008ca4:	8fa60018 	lw	a2,24(sp)
80008ca8:	02602021 	move	a0,s3
80008cac:	02002821 	move	a1,s0
80008cb0:	02403821 	move	a3,s2
80008cb4:	0c002115 	jal	80008454 <sfs_dirent_link_nolock>
80008cb8:	afb10010 	sw	s1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008cbc:	08002303 	j	80008c0c <sfs_link+0x130>
80008cc0:	02802021 	move	a0,s4
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008cc4:	0c00670f 	jal	80019c3c <up>
80008cc8:	02802021 	move	a0,s4
80008ccc:	08002306 	j	80008c18 <sfs_link+0x13c>
80008cd0:	2402fffe 	li	v0,-2
sfs_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:859
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
	if (lnksin->din->type == SFS_TYPE_DIR) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008cd4:	3c048002 	lui	a0,0x8002
80008cd8:	3c068002 	lui	a2,0x8002
80008cdc:	3c078002 	lui	a3,0x8002
80008ce0:	24841ba0 	addiu	a0,a0,7072
80008ce4:	2405035b 	li	a1,859
80008ce8:	24c609b0 	addiu	a2,a2,2480
80008cec:	0c006afd 	jal	8001abf4 <__panic>
80008cf0:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:855
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008cf4:	3c048002 	lui	a0,0x8002
80008cf8:	24841ba0 	addiu	a0,a0,7072
80008cfc:	24050357 	li	a1,855
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:860
	if (lnksin->din->type == SFS_TYPE_DIR) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008d00:	3c068002 	lui	a2,0x8002
80008d04:	3c078002 	lui	a3,0x8002
80008d08:	24c609b0 	addiu	a2,a2,2480
80008d0c:	0c006afd 	jal	8001abf4 <__panic>
80008d10:	24e71bac 	addiu	a3,a3,7084
80008d14:	24841ba0 	addiu	a0,a0,7072
80008d18:	08002340 	j	80008d00 <sfs_link+0x224>
80008d1c:	2405035c 	li	a1,860

80008d20 <sfs_truncfile>:
sfs_truncfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1194
	return 0;
}

static int sfs_truncfile(struct inode *node, off_t len)
{
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
80008d20:	3c020800 	lui	v0,0x800
80008d24:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1193
	}
	return 0;
}

static int sfs_truncfile(struct inode *node, off_t len)
{
80008d28:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1194
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
80008d2c:	00a2102b 	sltu	v0,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1193
	}
	return 0;
}

static int sfs_truncfile(struct inode *node, off_t len)
{
80008d30:	afb40028 	sw	s4,40(sp)
80008d34:	afb1001c 	sw	s1,28(sp)
80008d38:	afbf0034 	sw	ra,52(sp)
80008d3c:	afb60030 	sw	s6,48(sp)
80008d40:	afb5002c 	sw	s5,44(sp)
80008d44:	afb30024 	sw	s3,36(sp)
80008d48:	afb20020 	sw	s2,32(sp)
80008d4c:	afb00018 	sw	s0,24(sp)
80008d50:	00a0a021 	move	s4,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1194
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
80008d54:	1040006e 	beqz	v0,80008f10 <sfs_truncfile+0x1f0>
80008d58:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1197
		return -E_INVAL;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008d5c:	8c920044 	lw	s2,68(a0)
80008d60:	12400071 	beqz	s2,80008f28 <sfs_truncfile+0x208>
80008d64:	24025679 	li	v0,22137
80008d68:	8e430084 	lw	v1,132(s2)
80008d6c:	1462006e 	bne	v1,v0,80008f28 <sfs_truncfile+0x208>
80008d70:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1198
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008d74:	8c830038 	lw	v1,56(a0)
80008d78:	14620073 	bne	v1,v0,80008f48 <sfs_truncfile+0x228>
80008d7c:	24020002 	li	v0,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1199
	struct sfs_disk_inode *din = sin->din;
80008d80:	8c950000 	lw	s5,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1200
	assert(din->type != SFS_TYPE_DIR);
80008d84:	96a30008 	lhu	v1,8(s5)
80008d88:	10620077 	beq	v1,v0,80008f68 <sfs_truncfile+0x248>
80008d8c:	24b30fff 	addiu	s3,a1,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1204

	int ret = 0;
	uint32_t nblks, tblks = ROUNDUP_DIV(len, SFS_BLKSIZE);
	if (din->fileinfo.size == len) {
80008d90:	8ea20000 	lw	v0,0(s5)
80008d94:	10a2002d 	beq	a1,v0,80008e4c <sfs_truncfile+0x12c>
80008d98:	00139b02 	srl	s3,s3,0xc
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008d9c:	40026000 	mfc0	v0,c0_status
80008da0:	30420001 	andi	v0,v0,0x1
80008da4:	14400048 	bnez	v0,80008ec8 <sfs_truncfile+0x1a8>
80008da8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008dac:	8c900008 	lw	s0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008db0:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008db4:	16000054 	bnez	s0,80008f08 <sfs_truncfile+0x1e8>
80008db8:	26360014 	addiu	s6,s1,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80008dbc:	0c006711 	jal	80019c44 <down>
80008dc0:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80008dc4:	40026000 	mfc0	v0,c0_status
80008dc8:	30420001 	andi	v0,v0,0x1
80008dcc:	14400045 	bnez	v0,80008ee4 <sfs_truncfile+0x1c4>
80008dd0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008dd4:	8e300008 	lw	s0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008dd8:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80008ddc:	1600004e 	bnez	s0,80008f18 <sfs_truncfile+0x1f8>
80008de0:	00000000 	nop
sfs_truncfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1212
	}

	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	nblks = din->blocks;
80008de4:	8eb0000c 	lw	s0,12(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1213
	if (nblks < tblks) {
80008de8:	0213102b 	sltu	v0,s0,s3
80008dec:	14400026 	bnez	v0,80008e88 <sfs_truncfile+0x168>
80008df0:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1222
						  NULL)) != 0) {
				goto out_unlock;
			}
			nblks++;
		}
	} else if (tblks < nblks) {
80008df4:	0270102b 	sltu	v0,s3,s0
80008df8:	1440002d 	bnez	v0,80008eb0 <sfs_truncfile+0x190>
80008dfc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1230
				goto out_unlock;
			}
			nblks--;
		}
	}
	assert(din->blocks == tblks);
80008e00:	16700069 	bne	s3,s0,80008fa8 <sfs_truncfile+0x288>
80008e04:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1231
	din->fileinfo.size = len;
80008e08:	aeb40000 	sw	s4,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1232
	sin->dirty = 1;
80008e0c:	00001021 	move	v0,zero
80008e10:	ae23000c 	sw	v1,12(s1)
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008e14:	02c02021 	move	a0,s6
80008e18:	0c00670f 	jal	80019c3c <up>
80008e1c:	afa20010 	sw	v0,16(sp)
sfs_truncfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1237
	sin->dirty = 1;

out_unlock:
	unlock_sin(sin);
	return ret;
}
80008e20:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1236
	din->fileinfo.size = len;
	sin->dirty = 1;

out_unlock:
	unlock_sin(sin);
	return ret;
80008e24:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1237
}
80008e28:	8fb60030 	lw	s6,48(sp)
80008e2c:	8fb5002c 	lw	s5,44(sp)
80008e30:	8fb40028 	lw	s4,40(sp)
80008e34:	8fb30024 	lw	s3,36(sp)
80008e38:	8fb20020 	lw	s2,32(sp)
80008e3c:	8fb1001c 	lw	s1,28(sp)
80008e40:	8fb00018 	lw	s0,24(sp)
80008e44:	03e00008 	jr	ra
80008e48:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1205
	assert(din->type != SFS_TYPE_DIR);

	int ret = 0;
	uint32_t nblks, tblks = ROUNDUP_DIV(len, SFS_BLKSIZE);
	if (din->fileinfo.size == len) {
		assert(tblks == din->blocks);
80008e4c:	8ea3000c 	lw	v1,12(s5)
80008e50:	1663004d 	bne	s3,v1,80008f88 <sfs_truncfile+0x268>
80008e54:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1237
	sin->dirty = 1;

out_unlock:
	unlock_sin(sin);
	return ret;
}
80008e58:	8fbf0034 	lw	ra,52(sp)
80008e5c:	8fb60030 	lw	s6,48(sp)
80008e60:	8fb5002c 	lw	s5,44(sp)
80008e64:	8fb40028 	lw	s4,40(sp)
80008e68:	8fb30024 	lw	s3,36(sp)
80008e6c:	8fb20020 	lw	s2,32(sp)
80008e70:	8fb1001c 	lw	s1,28(sp)
80008e74:	8fb00018 	lw	s0,24(sp)
80008e78:	03e00008 	jr	ra
80008e7c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1214
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	nblks = din->blocks;
	if (nblks < tblks) {
		while (nblks != tblks) {
80008e80:	1213001f 	beq	s0,s3,80008f00 <sfs_truncfile+0x1e0>
80008e84:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1215
			if ((ret =
80008e88:	02202821 	move	a1,s1
80008e8c:	02003021 	move	a2,s0
80008e90:	0c001ce9 	jal	800073a4 <sfs_bmap_load_nolock>
80008e94:	00003821 	move	a3,zero
80008e98:	1040fff9 	beqz	v0,80008e80 <sfs_truncfile+0x160>
80008e9c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008ea0:	08002386 	j	80008e18 <sfs_truncfile+0xf8>
80008ea4:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1223
				goto out_unlock;
			}
			nblks++;
		}
	} else if (tblks < nblks) {
		while (tblks != nblks) {
80008ea8:	12130015 	beq	s0,s3,80008f00 <sfs_truncfile+0x1e0>
80008eac:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1224
			if ((ret = sfs_bmap_truncate_nolock(sfs, sin)) != 0) {
80008eb0:	0c001f68 	jal	80007da0 <sfs_bmap_truncate_nolock>
80008eb4:	02202821 	move	a1,s1
80008eb8:	1040fffb 	beqz	v0,80008ea8 <sfs_truncfile+0x188>
80008ebc:	2610ffff 	addiu	s0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008ec0:	08002386 	j	80008e18 <sfs_truncfile+0xf8>
80008ec4:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008ec8:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008ecc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008ed0:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008ed4:	0c006cba 	jal	8001b2e8 <intr_enable>
80008ed8:	32100001 	andi	s0,s0,0x1
80008edc:	0800236d 	j	80008db4 <sfs_truncfile+0x94>
80008ee0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008ee4:	0c006cbe 	jal	8001b2f8 <intr_disable>
80008ee8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008eec:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008ef0:	0c006cba 	jal	8001b2e8 <intr_enable>
80008ef4:	32100001 	andi	s0,s0,0x1
80008ef8:	08002377 	j	80008ddc <sfs_truncfile+0xbc>
80008efc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1223
				goto out_unlock;
			}
			nblks++;
		}
	} else if (tblks < nblks) {
		while (tblks != nblks) {
80008f00:	08002380 	j	80008e00 <sfs_truncfile+0xe0>
80008f04:	8eb0000c 	lw	s0,12(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008f08:	08002396 	j	80008e58 <sfs_truncfile+0x138>
80008f0c:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1195
}

static int sfs_truncfile(struct inode *node, off_t len)
{
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
80008f10:	08002396 	j	80008e58 <sfs_truncfile+0x138>
80008f14:	2402ffea 	li	v0,-22
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008f18:	0c00670f 	jal	80019c3c <up>
80008f1c:	02c02021 	move	a0,s6
80008f20:	08002396 	j	80008e58 <sfs_truncfile+0x138>
80008f24:	2402fffe 	li	v0,-2
sfs_truncfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1197
static int sfs_truncfile(struct inode *node, off_t len)
{
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008f28:	3c048002 	lui	a0,0x8002
80008f2c:	3c068002 	lui	a2,0x8002
80008f30:	3c078002 	lui	a3,0x8002
80008f34:	24841ba0 	addiu	a0,a0,7072
80008f38:	240504ad 	li	a1,1197
80008f3c:	24c609b0 	addiu	a2,a2,2480
80008f40:	0c006afd 	jal	8001abf4 <__panic>
80008f44:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1198
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008f48:	3c048002 	lui	a0,0x8002
80008f4c:	3c068002 	lui	a2,0x8002
80008f50:	3c078002 	lui	a3,0x8002
80008f54:	24841ba0 	addiu	a0,a0,7072
80008f58:	240504ae 	li	a1,1198
80008f5c:	24c609b0 	addiu	a2,a2,2480
80008f60:	0c006afd 	jal	8001abf4 <__panic>
80008f64:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1200
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
80008f68:	3c048002 	lui	a0,0x8002
80008f6c:	3c068002 	lui	a2,0x8002
80008f70:	3c078002 	lui	a3,0x8002
80008f74:	24841ba0 	addiu	a0,a0,7072
80008f78:	240504b0 	li	a1,1200
80008f7c:	24c609b0 	addiu	a2,a2,2480
80008f80:	0c006afd 	jal	8001abf4 <__panic>
80008f84:	24e71cf8 	addiu	a3,a3,7416
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1205

	int ret = 0;
	uint32_t nblks, tblks = ROUNDUP_DIV(len, SFS_BLKSIZE);
	if (din->fileinfo.size == len) {
		assert(tblks == din->blocks);
80008f88:	3c048002 	lui	a0,0x8002
80008f8c:	3c068002 	lui	a2,0x8002
80008f90:	3c078002 	lui	a3,0x8002
80008f94:	24841ba0 	addiu	a0,a0,7072
80008f98:	240504b5 	li	a1,1205
80008f9c:	24c609b0 	addiu	a2,a2,2480
80008fa0:	0c006afd 	jal	8001abf4 <__panic>
80008fa4:	24e71f0c 	addiu	a3,a3,7948
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1230
				goto out_unlock;
			}
			nblks--;
		}
	}
	assert(din->blocks == tblks);
80008fa8:	3c048002 	lui	a0,0x8002
80008fac:	3c068002 	lui	a2,0x8002
80008fb0:	3c078002 	lui	a3,0x8002
80008fb4:	24841ba0 	addiu	a0,a0,7072
80008fb8:	240504ce 	li	a1,1230
80008fbc:	24c609b0 	addiu	a2,a2,2480
80008fc0:	0c006afd 	jal	8001abf4 <__panic>
80008fc4:	24e71f24 	addiu	a3,a3,7972

80008fc8 <sfs_getdirentry>:
sfs_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1069
	}
	return -E_NOENT;
}

static int sfs_getdirentry(struct inode *node, struct iobuf *iob)
{
80008fc8:	27bdffb8 	addiu	sp,sp,-72
80008fcc:	afb2002c 	sw	s2,44(sp)
80008fd0:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1071
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80008fd4:	24040104 	li	a0,260
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1069
	}
	return -E_NOENT;
}

static int sfs_getdirentry(struct inode *node, struct iobuf *iob)
{
80008fd8:	afb50038 	sw	s5,56(sp)
80008fdc:	afb10028 	sw	s1,40(sp)
80008fe0:	afbf0044 	sw	ra,68(sp)
80008fe4:	afb70040 	sw	s7,64(sp)
80008fe8:	afb6003c 	sw	s6,60(sp)
80008fec:	afb40034 	sw	s4,52(sp)
80008ff0:	afb30030 	sw	s3,48(sp)
80008ff4:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1071
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80008ff8:	0c005478 	jal	800151e0 <kmalloc>
80008ffc:	00a0a821 	move	s5,a1
80009000:	10400085 	beqz	v0,80009218 <sfs_getdirentry+0x250>
80009004:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1075
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009008:	8e530044 	lw	s3,68(s2)
8000900c:	1260008b 	beqz	s3,8000923c <sfs_getdirentry+0x274>
80009010:	24025679 	li	v0,22137
80009014:	8e630084 	lw	v1,132(s3)
80009018:	14620088 	bne	v1,v0,8000923c <sfs_getdirentry+0x274>
8000901c:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1076
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009020:	8e430038 	lw	v1,56(s2)
80009024:	1462007e 	bne	v1,v0,80009220 <sfs_getdirentry+0x258>
80009028:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1078

	off_t offset = iob->io_offset;
8000902c:	8eb40004 	lw	s4,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1079
	if (offset < 0 || offset % sfs_dentry_size != 0) {
80009030:	06800069 	bltz	s4,800091d8 <sfs_getdirentry+0x210>
80009034:	00000000 	nop
80009038:	328200ff 	andi	v0,s4,0xff
8000903c:	14400066 	bnez	v0,800091d8 <sfs_getdirentry+0x210>
80009040:	0014a202 	srl	s4,s4,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1085
		kfree(entry);
		return -E_INVAL;
	}

	int ret, slot = offset / sfs_dentry_size;
	if (slot >= sin->din->dirinfo.slots + 2) {
80009044:	8e420000 	lw	v0,0(s2)
80009048:	8c420000 	lw	v0,0(v0)
8000904c:	24420002 	addiu	v0,v0,2
80009050:	0282102b 	sltu	v0,s4,v0
80009054:	1040006c 	beqz	v0,80009208 <sfs_getdirentry+0x240>
80009058:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1089
		kfree(entry);
		return -E_NOENT;
	}
	switch (slot) {
8000905c:	1680001b 	bnez	s4,800090cc <sfs_getdirentry+0x104>
80009060:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1091
	case 0:
		strcpy(entry->name, ".");
80009064:	26300004 	addiu	s0,s1,4
80009068:	3c058002 	lui	a1,0x8002
8000906c:	02002021 	move	a0,s0
80009070:	0c005b84 	jal	80016e10 <strcpy>
80009074:	24a539e4 	addiu	a1,a1,14820
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1106
		unlock_sin(sin);
		if (ret != 0) {
			goto out;
		}
	}
	ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);
80009078:	02a02021 	move	a0,s5
8000907c:	02002821 	move	a1,s0
80009080:	24060100 	li	a2,256
80009084:	24070001 	li	a3,1
80009088:	0c00337a 	jal	8000cde8 <iobuf_move>
8000908c:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1108
out:
	kfree(entry);
80009090:	02202021 	move	a0,s1
80009094:	0c0054a3 	jal	8001528c <kfree>
80009098:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1109
	return ret;
8000909c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1110
}
800090a0:	8fbf0044 	lw	ra,68(sp)
800090a4:	8fb70040 	lw	s7,64(sp)
800090a8:	8fb6003c 	lw	s6,60(sp)
800090ac:	8fb50038 	lw	s5,56(sp)
800090b0:	8fb40034 	lw	s4,52(sp)
800090b4:	8fb30030 	lw	s3,48(sp)
800090b8:	8fb2002c 	lw	s2,44(sp)
800090bc:	8fb10028 	lw	s1,40(sp)
800090c0:	8fb00024 	lw	s0,36(sp)
800090c4:	03e00008 	jr	ra
800090c8:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1089
	int ret, slot = offset / sfs_dentry_size;
	if (slot >= sin->din->dirinfo.slots + 2) {
		kfree(entry);
		return -E_NOENT;
	}
	switch (slot) {
800090cc:	1282002c 	beq	s4,v0,80009180 <sfs_getdirentry+0x1b8>
800090d0:	26300004 	addiu	s0,s1,4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800090d4:	40026000 	mfc0	v0,c0_status
800090d8:	30420001 	andi	v0,v0,0x1
800090dc:	1440002e 	bnez	v0,80009198 <sfs_getdirentry+0x1d0>
800090e0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800090e4:	8e500008 	lw	s0,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800090e8:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800090ec:	16000044 	bnez	s0,80009200 <sfs_getdirentry+0x238>
800090f0:	26570014 	addiu	s7,s2,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
800090f4:	0c006711 	jal	80019c44 <down>
800090f8:	02e02021 	move	a0,s7
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
800090fc:	40026000 	mfc0	v0,c0_status
80009100:	30420001 	andi	v0,v0,0x1
80009104:	1440002b 	bnez	v0,800091b4 <sfs_getdirentry+0x1ec>
80009108:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000910c:	8e500008 	lw	s0,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009110:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009114:	16000038 	bnez	s0,800091f8 <sfs_getdirentry+0x230>
80009118:	00000000 	nop
sfs_getdirentry_sub_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1053

static int
sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			   struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
8000911c:	8e420000 	lw	v0,0(s2)
80009120:	8c56000c 	lw	s6,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1054
	for (i = 0; i < nslots; i++) {
80009124:	1ac0002a 	blez	s6,800091d0 <sfs_getdirentry+0x208>
80009128:	2694fffe 	addiu	s4,s4,-2
8000912c:	08002454 	j	80009150 <sfs_getdirentry+0x188>
80009130:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1058
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
			return ret;
		}
		if (entry->ino != 0) {
80009134:	50400004 	beqzl	v0,80009148 <sfs_getdirentry+0x180>
80009138:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1059
			if (slot == 0) {
8000913c:	1280002a 	beqz	s4,800091e8 <sfs_getdirentry+0x220>
80009140:	2694ffff 	addiu	s4,s4,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1054
static int
sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			   struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
	for (i = 0; i < nslots; i++) {
80009144:	26100001 	addiu	s0,s0,1
80009148:	12d00008 	beq	s6,s0,8000916c <sfs_getdirentry+0x1a4>
8000914c:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1055
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
80009150:	02602021 	move	a0,s3
80009154:	02402821 	move	a1,s2
80009158:	02003021 	move	a2,s0
8000915c:	0c001e3d 	jal	800078f4 <sfs_dirent_read_nolock>
80009160:	02203821 	move	a3,s1
80009164:	5040fff3 	beqzl	v0,80009134 <sfs_getdirentry+0x16c>
80009168:	8e220000 	lw	v0,0(s1)
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000916c:	02e02021 	move	a0,s7
80009170:	0c00670f 	jal	80019c3c <up>
80009174:	afa20018 	sw	v0,24(sp)
80009178:	08002424 	j	80009090 <sfs_getdirentry+0xc8>
8000917c:	8fa20018 	lw	v0,24(sp)
sfs_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1094
	switch (slot) {
	case 0:
		strcpy(entry->name, ".");
		break;
	case 1:
		strcpy(entry->name, "..");
80009180:	3c058002 	lui	a1,0x8002
80009184:	02002021 	move	a0,s0
80009188:	0c005b84 	jal	80016e10 <strcpy>
8000918c:	24a51ea8 	addiu	a1,a1,7848
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1095
		break;
80009190:	0800241f 	j	8000907c <sfs_getdirentry+0xb4>
80009194:	02a02021 	move	a0,s5
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009198:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000919c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800091a0:	8e500008 	lw	s0,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800091a4:	0c006cba 	jal	8001b2e8 <intr_enable>
800091a8:	32100001 	andi	s0,s0,0x1
800091ac:	0800243b 	j	800090ec <sfs_getdirentry+0x124>
800091b0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800091b4:	0c006cbe 	jal	8001b2f8 <intr_disable>
800091b8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800091bc:	8e500008 	lw	s0,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800091c0:	0c006cba 	jal	8001b2e8 <intr_enable>
800091c4:	32100001 	andi	s0,s0,0x1
800091c8:	08002445 	j	80009114 <sfs_getdirentry+0x14c>
800091cc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1065
				return 0;
			}
			slot--;
		}
	}
	return -E_NOENT;
800091d0:	0800245b 	j	8000916c <sfs_getdirentry+0x1a4>
800091d4:	2402fffe 	li	v0,-2
sfs_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1080
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);

	off_t offset = iob->io_offset;
	if (offset < 0 || offset % sfs_dentry_size != 0) {
		kfree(entry);
800091d8:	0c0054a3 	jal	8001528c <kfree>
800091dc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1081
		return -E_INVAL;
800091e0:	08002428 	j	800090a0 <sfs_getdirentry+0xd8>
800091e4:	2402ffea 	li	v0,-22
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
800091e8:	0c00670f 	jal	80019c3c <up>
800091ec:	02e02021 	move	a0,s7
800091f0:	0800241e 	j	80009078 <sfs_getdirentry+0xb0>
800091f4:	26300004 	addiu	s0,s1,4
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
800091f8:	0c00670f 	jal	80019c3c <up>
800091fc:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1065
				return 0;
			}
			slot--;
		}
	}
	return -E_NOENT;
80009200:	08002424 	j	80009090 <sfs_getdirentry+0xc8>
80009204:	2402fffe 	li	v0,-2
sfs_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1086
		return -E_INVAL;
	}

	int ret, slot = offset / sfs_dentry_size;
	if (slot >= sin->din->dirinfo.slots + 2) {
		kfree(entry);
80009208:	0c0054a3 	jal	8001528c <kfree>
8000920c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1087
		return -E_NOENT;
80009210:	08002428 	j	800090a0 <sfs_getdirentry+0xd8>
80009214:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1072

static int sfs_getdirentry(struct inode *node, struct iobuf *iob)
{
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
80009218:	08002428 	j	800090a0 <sfs_getdirentry+0xd8>
8000921c:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1076
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009220:	3c068002 	lui	a2,0x8002
80009224:	3c078002 	lui	a3,0x8002
80009228:	24841ba0 	addiu	a0,a0,7072
8000922c:	24050434 	li	a1,1076
80009230:	24c609b0 	addiu	a2,a2,2480
80009234:	0c006afd 	jal	8001abf4 <__panic>
80009238:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1075
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000923c:	3c048002 	lui	a0,0x8002
80009240:	3c068002 	lui	a2,0x8002
80009244:	3c078002 	lui	a3,0x8002
80009248:	24841ba0 	addiu	a0,a0,7072
8000924c:	24050433 	li	a1,1075
80009250:	24c609b0 	addiu	a2,a2,2480
80009254:	0c006afd 	jal	8001abf4 <__panic>
80009258:	24e719fc 	addiu	a3,a3,6652

8000925c <sfs_fsync>:
sfs_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:758
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
}

static int sfs_fsync(struct inode *node)
{
8000925c:	27bdffc8 	addiu	sp,sp,-56
80009260:	afb2002c 	sw	s2,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:759
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009264:	8c920044 	lw	s2,68(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:758
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
}

static int sfs_fsync(struct inode *node)
{
80009268:	afb00024 	sw	s0,36(sp)
8000926c:	afbf0034 	sw	ra,52(sp)
80009270:	afb30030 	sw	s3,48(sp)
80009274:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:759
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009278:	1240005b 	beqz	s2,800093e8 <sfs_fsync+0x18c>
8000927c:	00808021 	move	s0,a0
80009280:	8e430084 	lw	v1,132(s2)
80009284:	24025679 	li	v0,22137
80009288:	14620057 	bne	v1,v0,800093e8 <sfs_fsync+0x18c>
8000928c:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:760
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009290:	8c830038 	lw	v1,56(a0)
80009294:	5462004d 	bnel	v1,v0,800093cc <sfs_fsync+0x170>
80009298:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:761
	if (sin->din->nlinks == 0 || !sin->dirty) {
8000929c:	8c830000 	lw	v1,0(a0)
800092a0:	9463000a 	lhu	v1,10(v1)
800092a4:	10600004 	beqz	v1,800092b8 <sfs_fsync+0x5c>
800092a8:	00001021 	move	v0,zero
800092ac:	8c83000c 	lw	v1,12(a0)
800092b0:	14600008 	bnez	v1,800092d4 <sfs_fsync+0x78>
800092b4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:778
			sin->dirty = 1;
		}
	}
	unlock_sin(sin);
	return ret;
}
800092b8:	8fbf0034 	lw	ra,52(sp)
800092bc:	8fb30030 	lw	s3,48(sp)
800092c0:	8fb2002c 	lw	s2,44(sp)
800092c4:	8fb10028 	lw	s1,40(sp)
800092c8:	8fb00024 	lw	s0,36(sp)
800092cc:	03e00008 	jr	ra
800092d0:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800092d4:	40026000 	mfc0	v0,c0_status
800092d8:	30420001 	andi	v0,v0,0x1
800092dc:	1440001e 	bnez	v0,80009358 <sfs_fsync+0xfc>
800092e0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800092e4:	8c910008 	lw	s1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800092e8:	32310001 	andi	s1,s1,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800092ec:	1620fff2 	bnez	s1,800092b8 <sfs_fsync+0x5c>
800092f0:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
800092f4:	26110014 	addiu	s1,s0,20
800092f8:	0c006711 	jal	80019c44 <down>
800092fc:	02202021 	move	a0,s1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80009300:	40026000 	mfc0	v0,c0_status
80009304:	30420001 	andi	v0,v0,0x1
80009308:	1440001a 	bnez	v0,80009374 <sfs_fsync+0x118>
8000930c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009310:	8e130008 	lw	s3,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009314:	32730001 	andi	s3,s3,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009318:	16600028 	bnez	s3,800093bc <sfs_fsync+0x160>
8000931c:	00000000 	nop
sfs_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:768
	}
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	if (sin->dirty) {
80009320:	8e02000c 	lw	v0,12(s0)
80009324:	5440001a 	bnezl	v0,80009390 <sfs_fsync+0x134>
80009328:	8e050000 	lw	a1,0(s0)
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000932c:	02202021 	move	a0,s1
80009330:	0c00670f 	jal	80019c3c <up>
80009334:	afa20018 	sw	v0,24(sp)
sfs_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:778
			sin->dirty = 1;
		}
	}
	unlock_sin(sin);
	return ret;
}
80009338:	8fbf0034 	lw	ra,52(sp)
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000933c:	8fa20018 	lw	v0,24(sp)
sfs_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:778
			sin->dirty = 1;
		}
	}
	unlock_sin(sin);
	return ret;
}
80009340:	8fb30030 	lw	s3,48(sp)
80009344:	8fb2002c 	lw	s2,44(sp)
80009348:	8fb10028 	lw	s1,40(sp)
8000934c:	8fb00024 	lw	s0,36(sp)
80009350:	03e00008 	jr	ra
80009354:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009358:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000935c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009360:	8e110008 	lw	s1,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009364:	0c006cba 	jal	8001b2e8 <intr_enable>
80009368:	32310001 	andi	s1,s1,0x1
8000936c:	080024bb 	j	800092ec <sfs_fsync+0x90>
80009370:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009374:	0c006cbe 	jal	8001b2f8 <intr_disable>
80009378:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000937c:	8e130008 	lw	s3,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009380:	0c006cba 	jal	8001b2e8 <intr_enable>
80009384:	32730001 	andi	s3,s3,0x1
80009388:	080024c6 	j	80009318 <sfs_fsync+0xbc>
8000938c:	00000000 	nop
sfs_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:770
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	if (sin->dirty) {
		sin->dirty = 0;
		if ((ret =
80009390:	8e070004 	lw	a3,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:769
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	if (sin->dirty) {
		sin->dirty = 0;
80009394:	ae00000c 	sw	zero,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:770
		if ((ret =
80009398:	02402021 	move	a0,s2
8000939c:	24060048 	li	a2,72
800093a0:	0c002ba9 	jal	8000aea4 <sfs_wbuf>
800093a4:	afa00010 	sw	zero,16(sp)
800093a8:	1040ffe1 	beqz	v0,80009330 <sfs_fsync+0xd4>
800093ac:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:773
		     sfs_wbuf(sfs, sin->din, sizeof(struct sfs_disk_inode),
			      sin->ino, 0)) != 0) {
			sin->dirty = 1;
800093b0:	24030001 	li	v1,1
800093b4:	080024cc 	j	80009330 <sfs_fsync+0xd4>
800093b8:	ae03000c 	sw	v1,12(s0)
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
800093bc:	0c00670f 	jal	80019c3c <up>
800093c0:	02202021 	move	a0,s1
800093c4:	080024ae 	j	800092b8 <sfs_fsync+0x5c>
800093c8:	2402fffe 	li	v0,-2
sfs_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:760
}

static int sfs_fsync(struct inode *node)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800093cc:	3c068002 	lui	a2,0x8002
800093d0:	3c078002 	lui	a3,0x8002
800093d4:	24841ba0 	addiu	a0,a0,7072
800093d8:	240502f8 	li	a1,760
800093dc:	24c609b0 	addiu	a2,a2,2480
800093e0:	0c006afd 	jal	8001abf4 <__panic>
800093e4:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:759
	sin->din->dirinfo.parent = parent->ino;
}

static int sfs_fsync(struct inode *node)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800093e8:	3c048002 	lui	a0,0x8002
800093ec:	3c068002 	lui	a2,0x8002
800093f0:	3c078002 	lui	a3,0x8002
800093f4:	24841ba0 	addiu	a0,a0,7072
800093f8:	240502f7 	li	a1,759
800093fc:	24c609b0 	addiu	a2,a2,2480
80009400:	0c006afd 	jal	8001abf4 <__panic>
80009404:	24e719fc 	addiu	a3,a3,6652

80009408 <sfs_load_inode>:
sfs_load_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:127
	}
	return NULL;
}

int sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino)
{
80009408:	27bdffc0 	addiu	sp,sp,-64
8000940c:	afb1002c 	sw	s1,44(sp)
80009410:	afb00028 	sw	s0,40(sp)
80009414:	00808821 	move	s1,a0
80009418:	00c08021 	move	s0,a2
8000941c:	afbf003c 	sw	ra,60(sp)
80009420:	afb40038 	sw	s4,56(sp)
80009424:	afb30034 	sw	s3,52(sp)
80009428:	afb20030 	sw	s2,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:128
	lock_sfs_fs(sfs);
8000942c:	0c002c3d 	jal	8000b0f4 <lock_sfs_fs>
80009430:	00a09021 	move	s2,a1
sfs_hash_list():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:49
	panic("invalid file type %d.\n", type);
}

static list_entry_t *sfs_hash_list(struct sfs_fs *sfs, uint32_t ino)
{
	return sfs->hash_list + sin_hashfn(ino);
80009434:	8e330080 	lw	s3,128(s1)
80009438:	02002021 	move	a0,s0
8000943c:	0c005945 	jal	80016514 <hash32>
80009440:	2405000a 	li	a1,10
80009444:	000210c0 	sll	v0,v0,0x3
80009448:	02629821 	addu	s3,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:112
}

static struct inode *lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino)
{
	struct inode *node;
	list_entry_t *list = sfs_hash_list(sfs, ino), *le = list;
8000944c:	0260a021 	move	s4,s3
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80009450:	8e940004 	lw	s4,4(s4)
lookup_sfs_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:113
	while ((le = list_next(le)) != list) {
80009454:	52740019 	beql	s3,s4,800094bc <sfs_load_inode+0xb4>
80009458:	afa00018 	sw	zero,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:115
		struct sfs_inode *sin = le2sin(le, hash_link);
		if (sin->ino == ino) {
8000945c:	8e83ffd4 	lw	v1,-44(s4)
80009460:	5603fffc 	bnel	s0,v1,80009454 <sfs_load_inode+0x4c>
80009464:	8e940004 	lw	s4,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:114
static struct inode *lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino)
{
	struct inode *node;
	list_entry_t *list = sfs_hash_list(sfs, ino), *le = list;
	while ((le = list_next(le)) != list) {
		struct sfs_inode *sin = le2sin(le, hash_link);
80009468:	2693ffd0 	addiu	s3,s4,-48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:117
		if (sin->ino == ino) {
			node = info2node(sin, sfs_inode);
			if (vop_ref_inc(node) == 1) {
8000946c:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80009470:	02602021 	move	a0,s3
80009474:	24030001 	li	v1,1
80009478:	50430033 	beql	v0,v1,80009548 <sfs_load_inode+0x140>
8000947c:	8e82ffe0 	lw	v0,-32(s4)
sfs_load_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:130

int sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino)
{
	lock_sfs_fs(sfs);
	struct inode *node;
	if ((node = lookup_sfs_nolock(sfs, ino)) != NULL) {
80009480:	1260000e 	beqz	s3,800094bc <sfs_load_inode+0xb4>
80009484:	afb30018 	sw	s3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:153
		goto failed_cleanup_din;
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));

out_unlock:
	unlock_sfs_fs(sfs);
80009488:	0c002c43 	jal	8000b10c <unlock_sfs_fs>
8000948c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:154
	*node_store = node;
80009490:	8fa30018 	lw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:162
failed_cleanup_din:
	kfree(din);
failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
80009494:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:155
	sfs_set_links(sfs, vop_info(node, sfs_inode));

out_unlock:
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;
80009498:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:154
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));

out_unlock:
	unlock_sfs_fs(sfs);
	*node_store = node;
8000949c:	ae430000 	sw	v1,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:162
failed_cleanup_din:
	kfree(din);
failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
800094a0:	8fb40038 	lw	s4,56(sp)
800094a4:	8fb30034 	lw	s3,52(sp)
800094a8:	8fb20030 	lw	s2,48(sp)
800094ac:	8fb1002c 	lw	s1,44(sp)
800094b0:	8fb00028 	lw	s0,40(sp)
800094b4:	03e00008 	jr	ra
800094b8:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:136
		goto out_unlock;
	}

	int ret = -E_NO_MEM;
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
800094bc:	0c005478 	jal	800151e0 <kmalloc>
800094c0:	24040048 	li	a0,72
800094c4:	10400032 	beqz	v0,80009590 <sfs_load_inode+0x188>
800094c8:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:140
		goto failed_unlock;
	}

	assert(sfs_block_inuse(sfs, ino));
800094cc:	02202021 	move	a0,s1
800094d0:	0c001b9b 	jal	80006e6c <sfs_block_inuse>
800094d4:	02002821 	move	a1,s0
800094d8:	1040003f 	beqz	v0,800095d8 <sfs_load_inode+0x1d0>
800094dc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:141
	if ((ret =
800094e0:	02602821 	move	a1,s3
800094e4:	24060048 	li	a2,72
800094e8:	02003821 	move	a3,s0
800094ec:	0c002b74 	jal	8000add0 <sfs_rbuf>
800094f0:	afa00010 	sw	zero,16(sp)
800094f4:	14400017 	bnez	v0,80009554 <sfs_load_inode+0x14c>
800094f8:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:146
	     sfs_rbuf(sfs, din, sizeof(struct sfs_disk_inode), ino, 0)) != 0) {
		goto failed_cleanup_din;
	}

	assert(din->nlinks != 0);
800094fc:	9662000a 	lhu	v0,10(s3)
80009500:	1040002d 	beqz	v0,800095b8 <sfs_load_inode+0x1b0>
80009504:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:147
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
80009508:	02602821 	move	a1,s3
8000950c:	02003021 	move	a2,s0
80009510:	0c001bb0 	jal	80006ec0 <sfs_create_inode>
80009514:	27a70018 	addiu	a3,sp,24
80009518:	1440000e 	bnez	v0,80009554 <sfs_load_inode+0x14c>
8000951c:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:150
		goto failed_cleanup_din;
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));
80009520:	8fa50018 	lw	a1,24(sp)
80009524:	10a0001c 	beqz	a1,80009598 <sfs_load_inode+0x190>
80009528:	24021237 	li	v0,4663
8000952c:	8ca30038 	lw	v1,56(a1)
80009530:	1462001a 	bne	v1,v0,8000959c <sfs_load_inode+0x194>
80009534:	3c048002 	lui	a0,0x8002
80009538:	0c001b3d 	jal	80006cf4 <sfs_set_links>
8000953c:	02202021 	move	a0,s1
80009540:	08002522 	j	80009488 <sfs_load_inode+0x80>
80009544:	00000000 	nop
lookup_sfs_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:118
	while ((le = list_next(le)) != list) {
		struct sfs_inode *sin = le2sin(le, hash_link);
		if (sin->ino == ino) {
			node = info2node(sin, sfs_inode);
			if (vop_ref_inc(node) == 1) {
				sin->reclaim_count++;
80009548:	24420001 	addiu	v0,v0,1
8000954c:	08002520 	j	80009480 <sfs_load_inode+0x78>
80009550:	ae82ffe0 	sw	v0,-32(s4)
sfs_load_inode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:158
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;

failed_cleanup_din:
	kfree(din);
80009554:	0c0054a3 	jal	8001528c <kfree>
80009558:	afa20020 	sw	v0,32(sp)
8000955c:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:160
failed_unlock:
	unlock_sfs_fs(sfs);
80009560:	02202021 	move	a0,s1
80009564:	0c002c43 	jal	8000b10c <unlock_sfs_fs>
80009568:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:162
	return ret;
}
8000956c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:160
	return 0;

failed_cleanup_din:
	kfree(din);
failed_unlock:
	unlock_sfs_fs(sfs);
80009570:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:162
	return ret;
}
80009574:	8fb40038 	lw	s4,56(sp)
80009578:	8fb30034 	lw	s3,52(sp)
8000957c:	8fb20030 	lw	s2,48(sp)
80009580:	8fb1002c 	lw	s1,44(sp)
80009584:	8fb00028 	lw	s0,40(sp)
80009588:	03e00008 	jr	ra
8000958c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:134
	struct inode *node;
	if ((node = lookup_sfs_nolock(sfs, ino)) != NULL) {
		goto out_unlock;
	}

	int ret = -E_NO_MEM;
80009590:	08002558 	j	80009560 <sfs_load_inode+0x158>
80009594:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:150

	assert(din->nlinks != 0);
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
		goto failed_cleanup_din;
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));
80009598:	3c048002 	lui	a0,0x8002
8000959c:	3c068002 	lui	a2,0x8002
800095a0:	3c078002 	lui	a3,0x8002
800095a4:	24841ba0 	addiu	a0,a0,7072
800095a8:	24050096 	li	a1,150
800095ac:	24c609b0 	addiu	a2,a2,2480
800095b0:	0c006afd 	jal	8001abf4 <__panic>
800095b4:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:146
	if ((ret =
	     sfs_rbuf(sfs, din, sizeof(struct sfs_disk_inode), ino, 0)) != 0) {
		goto failed_cleanup_din;
	}

	assert(din->nlinks != 0);
800095b8:	3c048002 	lui	a0,0x8002
800095bc:	3c068002 	lui	a2,0x8002
800095c0:	3c078002 	lui	a3,0x8002
800095c4:	24841ba0 	addiu	a0,a0,7072
800095c8:	24050092 	li	a1,146
800095cc:	24c609b0 	addiu	a2,a2,2480
800095d0:	0c006afd 	jal	8001abf4 <__panic>
800095d4:	24e71e94 	addiu	a3,a3,7828
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:140
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
		goto failed_unlock;
	}

	assert(sfs_block_inuse(sfs, ino));
800095d8:	3c048002 	lui	a0,0x8002
800095dc:	3c068002 	lui	a2,0x8002
800095e0:	3c078002 	lui	a3,0x8002
800095e4:	24841ba0 	addiu	a0,a0,7072
800095e8:	2405008c 	li	a1,140
800095ec:	24c609b0 	addiu	a2,a2,2480
800095f0:	0c006afd 	jal	8001abf4 <__panic>
800095f4:	24e71cdc 	addiu	a3,a3,7388

800095f8 <sfs_namefile>:
sfs_namefile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:992
}

static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
800095f8:	8ca2000c 	lw	v0,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:990
	unlock_sfs_mutex(sfs);
	return ret;
}

static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
800095fc:	27bdffb8 	addiu	sp,sp,-72
80009600:	afb10024 	sw	s1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:992
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
80009604:	2c420003 	sltiu	v0,v0,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:990
	unlock_sfs_mutex(sfs);
	return ret;
}

static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
80009608:	afbf0044 	sw	ra,68(sp)
8000960c:	afbe0040 	sw	s8,64(sp)
80009610:	afb7003c 	sw	s7,60(sp)
80009614:	afb60038 	sw	s6,56(sp)
80009618:	afb50034 	sw	s5,52(sp)
8000961c:	afb40030 	sw	s4,48(sp)
80009620:	afb3002c 	sw	s3,44(sp)
80009624:	afb20028 	sw	s2,40(sp)
80009628:	afb00020 	sw	s0,32(sp)
8000962c:	afa5004c 	sw	a1,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:992
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
80009630:	144000b8 	bnez	v0,80009914 <sfs_namefile+0x31c>
80009634:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:993
	    || (entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80009638:	0c005478 	jal	800151e0 <kmalloc>
8000963c:	24040104 	li	a0,260
80009640:	104000b4 	beqz	v0,80009914 <sfs_namefile+0x31c>
80009644:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:997
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009648:	8e340044 	lw	s4,68(s1)
8000964c:	128000d1 	beqz	s4,80009994 <sfs_namefile+0x39c>
80009650:	24025679 	li	v0,22137
80009654:	8e830084 	lw	v1,132(s4)
80009658:	146200ce 	bne	v1,v0,80009994 <sfs_namefile+0x39c>
8000965c:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:998
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009660:	8e230038 	lw	v1,56(s1)
80009664:	146200d3 	bne	v1,v0,800099b4 <sfs_namefile+0x3bc>
80009668:	8fa3004c 	lw	v1,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1005
	int ret;
	uint32_t ino;
	char *ptr = iob->io_base + iob->io_resid;
	size_t alen, resid = iob->io_resid - 2;

	vop_ref_inc(node);
8000966c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1002
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);

	int ret;
	uint32_t ino;
	char *ptr = iob->io_base + iob->io_resid;
80009670:	8c62000c 	lw	v0,12(v1)
80009674:	8c760000 	lw	s6,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1003
	size_t alen, resid = iob->io_resid - 2;
80009678:	245efffe 	addiu	s8,v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1005

	vop_ref_inc(node);
8000967c:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80009680:	02c2b021 	addu	s6,s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1006
	while ((ino = sin->ino) != SFS_BLKN_ROOT) {
80009684:	8e330004 	lw	s3,4(s1)
80009688:	24020001 	li	v0,1
8000968c:	1262007f 	beq	s3,v0,8000988c <sfs_namefile+0x294>
80009690:	26430004 	addiu	v1,s2,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1026

		if (ret != 0) {
			goto failed;
		}

		if ((alen = strlen(entry->name) + 1) > resid) {
80009694:	afa30018 	sw	v1,24(sp)
sfs_load_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:559

static int
sfs_load_parent(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct inode **parent_store)
{
	return sfs_load_inode(sfs, parent_store, sin->din->dirinfo.parent);
80009698:	8e220000 	lw	v0,0(s1)
8000969c:	02802021 	move	a0,s4
800096a0:	27a50010 	addiu	a1,sp,16
800096a4:	0c002502 	jal	80009408 <sfs_load_inode>
800096a8:	8c460004 	lw	a2,4(v0)
sfs_namefile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1008
	size_t alen, resid = iob->io_resid - 2;

	vop_ref_inc(node);
	while ((ino = sin->ino) != SFS_BLKN_ROOT) {
		struct inode *parent;
		if ((ret = sfs_load_parent(sfs, sin, &parent)) != 0) {
800096ac:	14400039 	bnez	v0,80009794 <sfs_namefile+0x19c>
800096b0:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1011
			goto failed;
		}
		vop_ref_dec(node);
800096b4:	0c001164 	jal	80004590 <inode_ref_dec>
800096b8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1013

		node = parent, sin = vop_info(node, sfs_inode);
800096bc:	8fb10010 	lw	s1,16(sp)
800096c0:	122000ac 	beqz	s1,80009974 <sfs_namefile+0x37c>
800096c4:	24031237 	li	v1,4663
800096c8:	8e220038 	lw	v0,56(s1)
800096cc:	544300aa 	bnel	v0,v1,80009978 <sfs_namefile+0x380>
800096d0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1014
		assert(ino != sin->ino && sin->din->type == SFS_TYPE_DIR);
800096d4:	8e220004 	lw	v0,4(s1)
800096d8:	1053009e 	beq	v0,s3,80009954 <sfs_namefile+0x35c>
800096dc:	24030002 	li	v1,2
800096e0:	8e220000 	lw	v0,0(s1)
800096e4:	94420008 	lhu	v0,8(v0)
800096e8:	5443009b 	bnel	v0,v1,80009958 <sfs_namefile+0x360>
800096ec:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800096f0:	40026000 	mfc0	v0,c0_status
800096f4:	30420001 	andi	v0,v0,0x1
800096f8:	14400039 	bnez	v0,800097e0 <sfs_namefile+0x1e8>
800096fc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009700:	8e300008 	lw	s0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009704:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009708:	16000022 	bnez	s0,80009794 <sfs_namefile+0x19c>
8000970c:	2403fffe 	li	v1,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009710:	26370014 	addiu	s7,s1,20
80009714:	0c006711 	jal	80019c44 <down>
80009718:	02e02021 	move	a0,s7
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000971c:	40026000 	mfc0	v0,c0_status
80009720:	30420001 	andi	v0,v0,0x1
80009724:	14400037 	bnez	v0,80009804 <sfs_namefile+0x20c>
80009728:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000972c:	8e300008 	lw	s0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009730:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009734:	1600003a 	bnez	s0,80009820 <sfs_namefile+0x228>
80009738:	00000000 	nop
sfs_dirent_findino_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:508

static int
sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			  uint32_t ino, struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
8000973c:	8e220000 	lw	v0,0(s1)
80009740:	8c55000c 	lw	s5,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:509
	for (i = 0; i < nslots; i++) {
80009744:	1aa0003a 	blez	s5,80009830 <sfs_namefile+0x238>
80009748:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:510
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
8000974c:	080025db 	j	8000976c <sfs_namefile+0x174>
80009750:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:513
			return ret;
		}
		if (entry->ino == ino) {
80009754:	8e420000 	lw	v0,0(s2)
80009758:	12620037 	beq	s3,v0,80009838 <sfs_namefile+0x240>
8000975c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:509
static int
sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			  uint32_t ino, struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
	for (i = 0; i < nslots; i++) {
80009760:	12b00008 	beq	s5,s0,80009784 <sfs_namefile+0x18c>
80009764:	2403fffe 	li	v1,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:510
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
80009768:	02802021 	move	a0,s4
8000976c:	02202821 	move	a1,s1
80009770:	02003021 	move	a2,s0
80009774:	0c001e3d 	jal	800078f4 <sfs_dirent_read_nolock>
80009778:	02403821 	move	a3,s2
8000977c:	1040fff5 	beqz	v0,80009754 <sfs_namefile+0x15c>
80009780:	00401821 	move	v1,v0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009784:	02e02021 	move	a0,s7
80009788:	0c00670f 	jal	80019c3c <up>
8000978c:	afa3001c 	sw	v1,28(sp)
80009790:	8fa3001c 	lw	v1,28(sp)
sfs_namefile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1044
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
80009794:	02202021 	move	a0,s1
80009798:	0c001164 	jal	80004590 <inode_ref_dec>
8000979c:	afa3001c 	sw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1045
	kfree(entry);
800097a0:	0c0054a3 	jal	8001528c <kfree>
800097a4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1046
	return ret;
800097a8:	8fa3001c 	lw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1047
}
800097ac:	8fbf0044 	lw	ra,68(sp)
800097b0:	8fbe0040 	lw	s8,64(sp)
800097b4:	00601021 	move	v0,v1
800097b8:	8fb7003c 	lw	s7,60(sp)
800097bc:	8fb60038 	lw	s6,56(sp)
800097c0:	8fb50034 	lw	s5,52(sp)
800097c4:	8fb40030 	lw	s4,48(sp)
800097c8:	8fb3002c 	lw	s3,44(sp)
800097cc:	8fb20028 	lw	s2,40(sp)
800097d0:	8fb10024 	lw	s1,36(sp)
800097d4:	8fb00020 	lw	s0,32(sp)
800097d8:	03e00008 	jr	ra
800097dc:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800097e0:	0c006cbe 	jal	8001b2f8 <intr_disable>
800097e4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800097e8:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800097ec:	0c006cba 	jal	8001b2e8 <intr_enable>
800097f0:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800097f4:	1200ffc7 	beqz	s0,80009714 <sfs_namefile+0x11c>
800097f8:	26370014 	addiu	s7,s1,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:517
		}
		if (entry->ino == ino) {
			return 0;
		}
	}
	return -E_NOENT;
800097fc:	080025e5 	j	80009794 <sfs_namefile+0x19c>
80009800:	2403fffe 	li	v1,-2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009804:	0c006cbe 	jal	8001b2f8 <intr_disable>
80009808:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000980c:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009810:	0c006cba 	jal	8001b2e8 <intr_enable>
80009814:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
80009818:	5200ffc9 	beqzl	s0,80009740 <sfs_namefile+0x148>
8000981c:	8e220000 	lw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
			return 0;
		}
		up(&(sin->sem));
80009820:	0c00670f 	jal	80019c3c <up>
80009824:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:517
		}
		if (entry->ino == ino) {
			return 0;
		}
	}
	return -E_NOENT;
80009828:	080025e5 	j	80009794 <sfs_namefile+0x19c>
8000982c:	2403fffe 	li	v1,-2
80009830:	080025e1 	j	80009784 <sfs_namefile+0x18c>
80009834:	2403fffe 	li	v1,-2
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009838:	0c00670f 	jal	80019c3c <up>
8000983c:	02e02021 	move	a0,s7
sfs_namefile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1026

		if (ret != 0) {
			goto failed;
		}

		if ((alen = strlen(entry->name) + 1) > resid) {
80009840:	0c005b6b 	jal	80016dac <strlen>
80009844:	8fa40018 	lw	a0,24(sp)
80009848:	00408021 	move	s0,v0
8000984c:	24420001 	addiu	v0,v0,1
80009850:	03c2182b 	sltu	v1,s8,v0
80009854:	1460003d 	bnez	v1,8000994c <sfs_namefile+0x354>
80009858:	8fa50018 	lw	a1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1029
			goto failed_nomem;
		}
		resid -= alen, ptr -= alen;
8000985c:	02c2b023 	subu	s6,s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1030
		memcpy(ptr, entry->name, alen - 1);
80009860:	02003021 	move	a2,s0
80009864:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1029
		}

		if ((alen = strlen(entry->name) + 1) > resid) {
			goto failed_nomem;
		}
		resid -= alen, ptr -= alen;
80009868:	03c2f023 	subu	s8,s8,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1030
		memcpy(ptr, entry->name, alen - 1);
8000986c:	0c005c6e 	jal	800171b8 <memcpy>
80009870:	02d08021 	addu	s0,s6,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1031
		ptr[alen - 1] = '/';
80009874:	2402002f 	li	v0,47
80009878:	a2020000 	sb	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1006
	uint32_t ino;
	char *ptr = iob->io_base + iob->io_resid;
	size_t alen, resid = iob->io_resid - 2;

	vop_ref_inc(node);
	while ((ino = sin->ino) != SFS_BLKN_ROOT) {
8000987c:	8e330004 	lw	s3,4(s1)
80009880:	24030001 	li	v1,1
80009884:	5663ff85 	bnel	s3,v1,8000969c <sfs_namefile+0xa4>
80009888:	8e220000 	lw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1033
		}
		resid -= alen, ptr -= alen;
		memcpy(ptr, entry->name, alen - 1);
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
8000988c:	0c001164 	jal	80004590 <inode_ref_dec>
80009890:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1034
	alen = iob->io_resid - resid - 2;
80009894:	8fa3004c 	lw	v1,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1035
	ptr = memmove(iob->io_base + 1, ptr, alen);
80009898:	02c02821 	move	a1,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1034
		resid -= alen, ptr -= alen;
		memcpy(ptr, entry->name, alen - 1);
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
	alen = iob->io_resid - resid - 2;
8000989c:	8c62000c 	lw	v0,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1035
	ptr = memmove(iob->io_base + 1, ptr, alen);
800098a0:	8c640000 	lw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1034
		resid -= alen, ptr -= alen;
		memcpy(ptr, entry->name, alen - 1);
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
	alen = iob->io_resid - resid - 2;
800098a4:	2442fffe 	addiu	v0,v0,-2
800098a8:	005ef023 	subu	s8,v0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1035
	ptr = memmove(iob->io_base + 1, ptr, alen);
800098ac:	03c03021 	move	a2,s8
800098b0:	0c005c4e 	jal	80017138 <memmove>
800098b4:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1036
	ptr[-1] = '/', ptr[alen] = '\0';
800098b8:	2404002f 	li	a0,47
800098bc:	a044ffff 	sb	a0,-1(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1037
	iobuf_skip(iob, alen);
800098c0:	8fa4004c 	lw	a0,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1036
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
	alen = iob->io_resid - resid - 2;
	ptr = memmove(iob->io_base + 1, ptr, alen);
	ptr[-1] = '/', ptr[alen] = '\0';
800098c4:	005e1821 	addu	v1,v0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1037
	iobuf_skip(iob, alen);
800098c8:	03c02821 	move	a1,s8
800098cc:	0c003340 	jal	8000cd00 <iobuf_skip>
800098d0:	a0600000 	sb	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1038
	kfree(entry);
800098d4:	0c0054a3 	jal	8001528c <kfree>
800098d8:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1047
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
	kfree(entry);
	return ret;
}
800098dc:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1039
	alen = iob->io_resid - resid - 2;
	ptr = memmove(iob->io_base + 1, ptr, alen);
	ptr[-1] = '/', ptr[alen] = '\0';
	iobuf_skip(iob, alen);
	kfree(entry);
	return 0;
800098e0:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1047
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
	kfree(entry);
	return ret;
}
800098e4:	00601021 	move	v0,v1
800098e8:	8fbe0040 	lw	s8,64(sp)
800098ec:	8fb7003c 	lw	s7,60(sp)
800098f0:	8fb60038 	lw	s6,56(sp)
800098f4:	8fb50034 	lw	s5,52(sp)
800098f8:	8fb40030 	lw	s4,48(sp)
800098fc:	8fb3002c 	lw	s3,44(sp)
80009900:	8fb20028 	lw	s2,40(sp)
80009904:	8fb10024 	lw	s1,36(sp)
80009908:	8fb00020 	lw	s0,32(sp)
8000990c:	03e00008 	jr	ra
80009910:	27bd0048 	addiu	sp,sp,72
80009914:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:994
static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
	    || (entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
80009918:	2403fff4 	li	v1,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1047
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
	kfree(entry);
	return ret;
}
8000991c:	00601021 	move	v0,v1
80009920:	8fbe0040 	lw	s8,64(sp)
80009924:	8fb7003c 	lw	s7,60(sp)
80009928:	8fb60038 	lw	s6,56(sp)
8000992c:	8fb50034 	lw	s5,52(sp)
80009930:	8fb40030 	lw	s4,48(sp)
80009934:	8fb3002c 	lw	s3,44(sp)
80009938:	8fb20028 	lw	s2,40(sp)
8000993c:	8fb10024 	lw	s1,36(sp)
80009940:	8fb00020 	lw	s0,32(sp)
80009944:	03e00008 	jr	ra
80009948:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1042
	iobuf_skip(iob, alen);
	kfree(entry);
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
8000994c:	080025e5 	j	80009794 <sfs_namefile+0x19c>
80009950:	2403fff4 	li	v1,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1014
			goto failed;
		}
		vop_ref_dec(node);

		node = parent, sin = vop_info(node, sfs_inode);
		assert(ino != sin->ino && sin->din->type == SFS_TYPE_DIR);
80009954:	3c048002 	lui	a0,0x8002
80009958:	3c068002 	lui	a2,0x8002
8000995c:	3c078002 	lui	a3,0x8002
80009960:	24841ba0 	addiu	a0,a0,7072
80009964:	240503f6 	li	a1,1014
80009968:	24c609b0 	addiu	a2,a2,2480
8000996c:	0c006afd 	jal	8001abf4 <__panic>
80009970:	24e71f3c 	addiu	a3,a3,7996
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1013
		if ((ret = sfs_load_parent(sfs, sin, &parent)) != 0) {
			goto failed;
		}
		vop_ref_dec(node);

		node = parent, sin = vop_info(node, sfs_inode);
80009974:	3c048002 	lui	a0,0x8002
80009978:	24841ba0 	addiu	a0,a0,7072
8000997c:	240503f5 	li	a1,1013
80009980:	3c068002 	lui	a2,0x8002
80009984:	3c078002 	lui	a3,0x8002
80009988:	24c609b0 	addiu	a2,a2,2480
8000998c:	0c006afd 	jal	8001abf4 <__panic>
80009990:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:997
	if (iob->io_resid <= 2
	    || (entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009994:	3c048002 	lui	a0,0x8002
80009998:	3c068002 	lui	a2,0x8002
8000999c:	3c078002 	lui	a3,0x8002
800099a0:	24841ba0 	addiu	a0,a0,7072
800099a4:	240503e5 	li	a1,997
800099a8:	24c609b0 	addiu	a2,a2,2480
800099ac:	0c006afd 	jal	8001abf4 <__panic>
800099b0:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:998
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800099b4:	3c048002 	lui	a0,0x8002
800099b8:	24841ba0 	addiu	a0,a0,7072
800099bc:	08002660 	j	80009980 <sfs_namefile+0x388>
800099c0:	240503e6 	li	a1,998

800099c4 <sfs_lookup_parent>:
sfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1426
}

static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
800099c4:	27bdffb0 	addiu	sp,sp,-80
800099c8:	afb40038 	sw	s4,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1427
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800099cc:	8c940044 	lw	s4,68(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1426
}

static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
800099d0:	afbe0048 	sw	s8,72(sp)
800099d4:	afb70044 	sw	s7,68(sp)
800099d8:	afb20030 	sw	s2,48(sp)
800099dc:	afb00028 	sw	s0,40(sp)
800099e0:	afbf004c 	sw	ra,76(sp)
800099e4:	afb60040 	sw	s6,64(sp)
800099e8:	afb5003c 	sw	s5,60(sp)
800099ec:	afb30034 	sw	s3,52(sp)
800099f0:	afb1002c 	sw	s1,44(sp)
800099f4:	00809021 	move	s2,a0
800099f8:	00a08021 	move	s0,a1
800099fc:	00c0f021 	move	s8,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1427
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009a00:	128000b7 	beqz	s4,80009ce0 <sfs_lookup_parent+0x31c>
80009a04:	00e0b821 	move	s7,a3
80009a08:	8e830084 	lw	v1,132(s4)
80009a0c:	24025679 	li	v0,22137
80009a10:	546200b4 	bnel	v1,v0,80009ce4 <sfs_lookup_parent+0x320>
80009a14:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1428
	assert(*path != '\0' && *path != '/');
80009a18:	90a20000 	lbu	v0,0(a1)
80009a1c:	104000a8 	beqz	v0,80009cc0 <sfs_lookup_parent+0x2fc>
80009a20:	2403002f 	li	v1,47
80009a24:	504300a7 	beql	v0,v1,80009cc4 <sfs_lookup_parent+0x300>
80009a28:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1429
	vop_ref_inc(node);
80009a2c:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80009a30:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1431
	while (1) {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009a34:	8e430038 	lw	v1,56(s2)
80009a38:	24021237 	li	v0,4663
80009a3c:	14620099 	bne	v1,v0,80009ca4 <sfs_lookup_parent+0x2e0>
80009a40:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1432
		if (sin->din->type != SFS_TYPE_DIR) {
80009a44:	8e420000 	lw	v0,0(s2)
80009a48:	94430008 	lhu	v1,8(v0)
80009a4c:	24020002 	li	v0,2
80009a50:	1462003a 	bne	v1,v0,80009b3c <sfs_lookup_parent+0x178>
80009a54:	3c138002 	lui	s3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1439
			return -E_NOTDIR;
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
80009a58:	02002021 	move	a0,s0
80009a5c:	0c001b5b 	jal	80006d6c <sfs_lookup_subpath>
80009a60:	3c158002 	lui	s5,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1443
			*node_store = node, *endp = path;
			return 0;
		}
		if (strcmp(path, ".") == 0) {
80009a64:	267339e4 	addiu	s3,s3,14820
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1450
			goto next;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009a68:	26b51ea8 	addiu	s5,s5,7848
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1439
			return -E_NOTDIR;
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
80009a6c:	1040000b 	beqz	v0,80009a9c <sfs_lookup_parent+0xd8>
80009a70:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1443
			*node_store = node, *endp = path;
			return 0;
		}
		if (strcmp(path, ".") == 0) {
80009a74:	02002021 	move	a0,s0
80009a78:	0c005baa 	jal	80016ea8 <strcmp>
80009a7c:	02602821 	move	a1,s3
80009a80:	14400016 	bnez	v0,80009adc <sfs_lookup_parent+0x118>
80009a84:	02002021 	move	a0,s0
80009a88:	02208021 	move	s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1439
			return -E_NOTDIR;
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
80009a8c:	0c001b5b 	jal	80006d6c <sfs_lookup_subpath>
80009a90:	02002021 	move	a0,s0
80009a94:	1440fff7 	bnez	v0,80009a74 <sfs_lookup_parent+0xb0>
80009a98:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009a9c:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1441

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
			*node_store = node, *endp = path;
			return 0;
80009aa0:	afa00020 	sw	zero,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1440
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
			*node_store = node, *endp = path;
80009aa4:	afd20000 	sw	s2,0(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009aa8:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1440
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
			*node_store = node, *endp = path;
80009aac:	aef00000 	sw	s0,0(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009ab0:	8fbe0048 	lw	s8,72(sp)
80009ab4:	8fb70044 	lw	s7,68(sp)
80009ab8:	8fb60040 	lw	s6,64(sp)
80009abc:	8fb5003c 	lw	s5,60(sp)
80009ac0:	8fb40038 	lw	s4,56(sp)
80009ac4:	8fb30034 	lw	s3,52(sp)
80009ac8:	8fb20030 	lw	s2,48(sp)
80009acc:	8fb1002c 	lw	s1,44(sp)
80009ad0:	8fb00028 	lw	s0,40(sp)
80009ad4:	03e00008 	jr	ra
80009ad8:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1450
			goto next;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009adc:	0c005baa 	jal	80016ea8 <strcmp>
80009ae0:	02a02821 	move	a1,s5
80009ae4:	1440001a 	bnez	v0,80009b50 <sfs_lookup_parent+0x18c>
80009ae8:	02802021 	move	a0,s4
sfs_load_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:559

static int
sfs_load_parent(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct inode **parent_store)
{
	return sfs_load_inode(sfs, parent_store, sin->din->dirinfo.parent);
80009aec:	8e420000 	lw	v0,0(s2)
80009af0:	27a5001c 	addiu	a1,sp,28
80009af4:	0c002502 	jal	80009408 <sfs_load_inode>
80009af8:	8c460004 	lw	a2,4(v0)
80009afc:	afa20020 	sw	v0,32(sp)
sfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1460
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009b00:	0c001164 	jal	80004590 <inode_ref_dec>
80009b04:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1461
		if (ret != 0) {
80009b08:	8fa20020 	lw	v0,32(sp)
80009b0c:	14400036 	bnez	v0,80009be8 <sfs_lookup_parent+0x224>
80009b10:	8fb2001c 	lw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1431
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	while (1) {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009b14:	12400062 	beqz	s2,80009ca0 <sfs_lookup_parent+0x2dc>
80009b18:	24021237 	li	v0,4663
80009b1c:	8e430038 	lw	v1,56(s2)
80009b20:	14620060 	bne	v1,v0,80009ca4 <sfs_lookup_parent+0x2e0>
80009b24:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1432
		if (sin->din->type != SFS_TYPE_DIR) {
80009b28:	8e420000 	lw	v0,0(s2)
80009b2c:	94430008 	lhu	v1,8(v0)
80009b30:	24020002 	li	v0,2
80009b34:	1062ffd5 	beq	v1,v0,80009a8c <sfs_lookup_parent+0xc8>
80009b38:	02208021 	move	s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1433
			vop_ref_dec(node);
80009b3c:	0c001164 	jal	80004590 <inode_ref_dec>
80009b40:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1434
			return -E_NOTDIR;
80009b44:	2402ffec 	li	v0,-20
80009b48:	080026fa 	j	80009be8 <sfs_lookup_parent+0x224>
80009b4c:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1453
		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
80009b50:	0c005b6b 	jal	80016dac <strlen>
80009b54:	02002021 	move	a0,s0
80009b58:	2c420100 	sltiu	v0,v0,256
80009b5c:	10400046 	beqz	v0,80009c78 <sfs_lookup_parent+0x2b4>
80009b60:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009b64:	40026000 	mfc0	v0,c0_status
80009b68:	30420001 	andi	v0,v0,0x1
80009b6c:	1440002b 	bnez	v0,80009c1c <sfs_lookup_parent+0x258>
80009b70:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009b74:	8e560008 	lw	s6,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009b78:	32d60001 	andi	s6,s6,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009b7c:	16c0002f 	bnez	s6,80009c3c <sfs_lookup_parent+0x278>
80009b80:	2402fffe 	li	v0,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009b84:	26560014 	addiu	s6,s2,20
80009b88:	0c006711 	jal	80019c44 <down>
80009b8c:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80009b90:	40026000 	mfc0	v0,c0_status
80009b94:	30420001 	andi	v0,v0,0x1
80009b98:	1440002a 	bnez	v0,80009c44 <sfs_lookup_parent+0x280>
80009b9c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009ba0:	8e420008 	lw	v0,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009ba4:	30420001 	andi	v0,v0,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009ba8:	14400038 	bnez	v0,80009c8c <sfs_lookup_parent+0x2c8>
80009bac:	02802021 	move	a0,s4
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:571
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
80009bb0:	02402821 	move	a1,s2
80009bb4:	02003021 	move	a2,s0
80009bb8:	27a70018 	addiu	a3,sp,24
80009bbc:	afa00010 	sw	zero,16(sp)
80009bc0:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
80009bc4:	afa00014 	sw	zero,20(sp)
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009bc8:	02c02021 	move	a0,s6
80009bcc:	0c00670f 	jal	80019c3c <up>
80009bd0:	afa20020 	sw	v0,32(sp)
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:573
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
80009bd4:	8fa20020 	lw	v0,32(sp)
80009bd8:	10400022 	beqz	v0,80009c64 <sfs_lookup_parent+0x2a0>
80009bdc:	8fa60018 	lw	a2,24(sp)
sfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1460
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009be0:	0c001164 	jal	80004590 <inode_ref_dec>
80009be4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009be8:	8fbf004c 	lw	ra,76(sp)
80009bec:	8fa20020 	lw	v0,32(sp)
80009bf0:	8fbe0048 	lw	s8,72(sp)
80009bf4:	8fb70044 	lw	s7,68(sp)
80009bf8:	8fb60040 	lw	s6,64(sp)
80009bfc:	8fb5003c 	lw	s5,60(sp)
80009c00:	8fb40038 	lw	s4,56(sp)
80009c04:	8fb30034 	lw	s3,52(sp)
80009c08:	8fb20030 	lw	s2,48(sp)
80009c0c:	8fb1002c 	lw	s1,44(sp)
80009c10:	8fb00028 	lw	s0,40(sp)
80009c14:	03e00008 	jr	ra
80009c18:	27bd0050 	addiu	sp,sp,80
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009c1c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80009c20:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009c24:	8e560008 	lw	s6,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009c28:	0c006cba 	jal	8001b2e8 <intr_enable>
80009c2c:	32d60001 	andi	s6,s6,0x1
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009c30:	12c0ffd5 	beqz	s6,80009b88 <sfs_lookup_parent+0x1c4>
80009c34:	26560014 	addiu	s6,s2,20
sfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1455
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
				return -E_TOO_BIG;
80009c38:	2402fffe 	li	v0,-2
80009c3c:	080026f8 	j	80009be0 <sfs_lookup_parent+0x21c>
80009c40:	afa20020 	sw	v0,32(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009c44:	0c006cbe 	jal	8001b2f8 <intr_disable>
80009c48:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009c4c:	8e420008 	lw	v0,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009c50:	30420001 	andi	v0,v0,0x1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009c54:	0c006cba 	jal	8001b2e8 <intr_enable>
80009c58:	afa20024 	sw	v0,36(sp)
80009c5c:	080026ea 	j	80009ba8 <sfs_lookup_parent+0x1e4>
80009c60:	8fa20024 	lw	v0,36(sp)
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:576
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
		return ret;
	}
	return sfs_load_inode(sfs, node_store, ino);
80009c64:	02802021 	move	a0,s4
80009c68:	0c002502 	jal	80009408 <sfs_load_inode>
80009c6c:	27a5001c 	addiu	a1,sp,28
80009c70:	080026c0 	j	80009b00 <sfs_lookup_parent+0x13c>
80009c74:	afa20020 	sw	v0,32(sp)
sfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1454
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
80009c78:	0c001164 	jal	80004590 <inode_ref_dec>
80009c7c:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1455
				return -E_TOO_BIG;
80009c80:	2402ffe5 	li	v0,-27
80009c84:	080026fa 	j	80009be8 <sfs_lookup_parent+0x224>
80009c88:	afa20020 	sw	v0,32(sp)
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80009c8c:	0c00670f 	jal	80019c3c <up>
80009c90:	02c02021 	move	a0,s6
sfs_lookup_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1455
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
				return -E_TOO_BIG;
80009c94:	2402fffe 	li	v0,-2
80009c98:	080026f8 	j	80009be0 <sfs_lookup_parent+0x21c>
80009c9c:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1431
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	while (1) {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009ca0:	3c048002 	lui	a0,0x8002
80009ca4:	3c068002 	lui	a2,0x8002
80009ca8:	3c078002 	lui	a3,0x8002
80009cac:	24841ba0 	addiu	a0,a0,7072
80009cb0:	24050597 	li	a1,1431
80009cb4:	24c609b0 	addiu	a2,a2,2480
80009cb8:	0c006afd 	jal	8001abf4 <__panic>
80009cbc:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1428
static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
80009cc0:	3c048002 	lui	a0,0x8002
80009cc4:	3c068002 	lui	a2,0x8002
80009cc8:	3c078002 	lui	a3,0x8002
80009ccc:	24841ba0 	addiu	a0,a0,7072
80009cd0:	24050594 	li	a1,1428
80009cd4:	24c609b0 	addiu	a2,a2,2480
80009cd8:	0c006afd 	jal	8001abf4 <__panic>
80009cdc:	24e71f70 	addiu	a3,a3,8048
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1427

static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009ce0:	3c048002 	lui	a0,0x8002
80009ce4:	3c068002 	lui	a2,0x8002
80009ce8:	3c078002 	lui	a3,0x8002
80009cec:	24841ba0 	addiu	a0,a0,7072
80009cf0:	24050593 	li	a1,1427
80009cf4:	24c609b0 	addiu	a2,a2,2480
80009cf8:	0c006afd 	jal	8001abf4 <__panic>
80009cfc:	24e719fc 	addiu	a3,a3,6652

80009d00 <sfs_lookup>:
sfs_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1380
	}
	return path;
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
80009d00:	27bdffb8 	addiu	sp,sp,-72
80009d04:	afb3002c 	sw	s3,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1381
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009d08:	8c930044 	lw	s3,68(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1380
	}
	return path;
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
80009d0c:	afb7003c 	sw	s7,60(sp)
80009d10:	afb40030 	sw	s4,48(sp)
80009d14:	afb20028 	sw	s2,40(sp)
80009d18:	afbf0044 	sw	ra,68(sp)
80009d1c:	afbe0040 	sw	s8,64(sp)
80009d20:	afb60038 	sw	s6,56(sp)
80009d24:	afb50034 	sw	s5,52(sp)
80009d28:	afb10024 	sw	s1,36(sp)
80009d2c:	afb00020 	sw	s0,32(sp)
80009d30:	00809021 	move	s2,a0
80009d34:	00a0b821 	move	s7,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1381
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009d38:	126000ab 	beqz	s3,80009fe8 <sfs_lookup+0x2e8>
80009d3c:	00c0a021 	move	s4,a2
80009d40:	8e630084 	lw	v1,132(s3)
80009d44:	24025679 	li	v0,22137
80009d48:	546200a8 	bnel	v1,v0,80009fec <sfs_lookup+0x2ec>
80009d4c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1382
	assert(*path != '\0' && *path != '/');
80009d50:	90a20000 	lbu	v0,0(a1)
80009d54:	1040009c 	beqz	v0,80009fc8 <sfs_lookup+0x2c8>
80009d58:	2403002f 	li	v1,47
80009d5c:	5043009b 	beql	v0,v1,80009fcc <sfs_lookup+0x2cc>
80009d60:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1383
	vop_ref_inc(node);
80009d64:	0c0010a8 	jal	800042a0 <inode_ref_inc>
80009d68:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1385
	do {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009d6c:	8e430038 	lw	v1,56(s2)
80009d70:	24021237 	li	v0,4663
80009d74:	146200a5 	bne	v1,v0,8000a00c <sfs_lookup+0x30c>
80009d78:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1386
		if (sin->din->type != SFS_TYPE_DIR) {
80009d7c:	8e420000 	lw	v0,0(s2)
80009d80:	94430008 	lhu	v1,8(v0)
80009d84:	24020002 	li	v0,2
80009d88:	14620030 	bne	v1,v0,80009e4c <sfs_lookup+0x14c>
80009d8c:	3c118002 	lui	s1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1393
			return -E_NOTDIR;
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
80009d90:	02e02021 	move	a0,s7
80009d94:	0c001b5b 	jal	80006d6c <sfs_lookup_subpath>
80009d98:	263139e4 	addiu	s1,s1,14820
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1403
			break;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009d9c:	3c158002 	lui	s5,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1394
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
		if (strcmp(path, ".") == 0) {
80009da0:	02e02021 	move	a0,s7
80009da4:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1403
			break;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009da8:	26b51ea8 	addiu	s5,s5,7848
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1394
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
		if (strcmp(path, ".") == 0) {
80009dac:	0c005baa 	jal	80016ea8 <strcmp>
80009db0:	00408021 	move	s0,v0
80009db4:	1440000c 	bnez	v0,80009de8 <sfs_lookup+0xe8>
80009db8:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1395
			if ((path = subpath) != NULL) {
80009dbc:	52000028 	beqzl	s0,80009e60 <sfs_lookup+0x160>
80009dc0:	ae920000 	sw	s2,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1393
			return -E_NOTDIR;
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
80009dc4:	0200b821 	move	s7,s0
80009dc8:	0c001b5b 	jal	80006d6c <sfs_lookup_subpath>
80009dcc:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1394
		if (strcmp(path, ".") == 0) {
80009dd0:	02e02021 	move	a0,s7
80009dd4:	02202821 	move	a1,s1
80009dd8:	0c005baa 	jal	80016ea8 <strcmp>
80009ddc:	00408021 	move	s0,v0
80009de0:	1040fff6 	beqz	v0,80009dbc <sfs_lookup+0xbc>
80009de4:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1403
			break;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009de8:	0c005baa 	jal	80016ea8 <strcmp>
80009dec:	02a02821 	move	a1,s5
80009df0:	14400029 	bnez	v0,80009e98 <sfs_lookup+0x198>
80009df4:	02602021 	move	a0,s3
sfs_load_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:559

static int
sfs_load_parent(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct inode **parent_store)
{
	return sfs_load_inode(sfs, parent_store, sin->din->dirinfo.parent);
80009df8:	8e420000 	lw	v0,0(s2)
80009dfc:	27a5001c 	addiu	a1,sp,28
80009e00:	0c002502 	jal	80009408 <sfs_load_inode>
80009e04:	8c460004 	lw	a2,4(v0)
80009e08:	0040b821 	move	s7,v0
sfs_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1413
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009e0c:	0c001164 	jal	80004590 <inode_ref_dec>
80009e10:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1414
		if (ret != 0) {
80009e14:	16e00014 	bnez	s7,80009e68 <sfs_lookup+0x168>
80009e18:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1418
			return ret;
		}
		node = subnode, path = subpath;
	} while (path != NULL);
80009e1c:	1200000f 	beqz	s0,80009e5c <sfs_lookup+0x15c>
80009e20:	8fb2001c 	lw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1385
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	do {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009e24:	12400078 	beqz	s2,8000a008 <sfs_lookup+0x308>
80009e28:	24021237 	li	v0,4663
80009e2c:	8e430038 	lw	v1,56(s2)
80009e30:	14620076 	bne	v1,v0,8000a00c <sfs_lookup+0x30c>
80009e34:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1386
		if (sin->din->type != SFS_TYPE_DIR) {
80009e38:	8e420000 	lw	v0,0(s2)
80009e3c:	94430008 	lhu	v1,8(v0)
80009e40:	24020002 	li	v0,2
80009e44:	5062ffe0 	beql	v1,v0,80009dc8 <sfs_lookup+0xc8>
80009e48:	0200b821 	move	s7,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1387
			vop_ref_dec(node);
80009e4c:	0c001164 	jal	80004590 <inode_ref_dec>
80009e50:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1388
			return -E_NOTDIR;
80009e54:	08002799 	j	80009e64 <sfs_lookup+0x164>
80009e58:	2417ffec 	li	s7,-20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1419
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	} while (path != NULL);
	*node_store = node;
80009e5c:	ae920000 	sw	s2,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1420
	return 0;
80009e60:	0000b821 	move	s7,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1421
}
80009e64:	8fbf0044 	lw	ra,68(sp)
80009e68:	02e01021 	move	v0,s7
80009e6c:	8fbe0040 	lw	s8,64(sp)
80009e70:	8fb7003c 	lw	s7,60(sp)
80009e74:	8fb60038 	lw	s6,56(sp)
80009e78:	8fb50034 	lw	s5,52(sp)
80009e7c:	8fb40030 	lw	s4,48(sp)
80009e80:	8fb3002c 	lw	s3,44(sp)
80009e84:	8fb20028 	lw	s2,40(sp)
80009e88:	8fb10024 	lw	s1,36(sp)
80009e8c:	8fb00020 	lw	s0,32(sp)
80009e90:	03e00008 	jr	ra
80009e94:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1406
		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
80009e98:	0c005b6b 	jal	80016dac <strlen>
80009e9c:	02e02021 	move	a0,s7
80009ea0:	2c420100 	sltiu	v0,v0,256
80009ea4:	10400044 	beqz	v0,80009fb8 <sfs_lookup+0x2b8>
80009ea8:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009eac:	40026000 	mfc0	v0,c0_status
80009eb0:	30420001 	andi	v0,v0,0x1
80009eb4:	14400029 	bnez	v0,80009f5c <sfs_lookup+0x25c>
80009eb8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009ebc:	8e560008 	lw	s6,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009ec0:	32d60001 	andi	s6,s6,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009ec4:	16c00035 	bnez	s6,80009f9c <sfs_lookup+0x29c>
80009ec8:	26560014 	addiu	s6,s2,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009ecc:	0c006711 	jal	80019c44 <down>
80009ed0:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80009ed4:	40026000 	mfc0	v0,c0_status
80009ed8:	30420001 	andi	v0,v0,0x1
80009edc:	14400026 	bnez	v0,80009f78 <sfs_lookup+0x278>
80009ee0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009ee4:	8e5e0008 	lw	s8,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009ee8:	33de0001 	andi	s8,s8,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009eec:	17c00029 	bnez	s8,80009f94 <sfs_lookup+0x294>
80009ef0:	02602021 	move	a0,s3
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:571
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
80009ef4:	02e03021 	move	a2,s7
80009ef8:	02402821 	move	a1,s2
80009efc:	27a70018 	addiu	a3,sp,24
80009f00:	afa00010 	sw	zero,16(sp)
80009f04:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
80009f08:	afa00014 	sw	zero,20(sp)
80009f0c:	0040b821 	move	s7,v0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009f10:	0c00670f 	jal	80019c3c <up>
80009f14:	02c02021 	move	a0,s6
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:573
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
80009f18:	12e00022 	beqz	s7,80009fa4 <sfs_lookup+0x2a4>
80009f1c:	8fa60018 	lw	a2,24(sp)
sfs_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1413
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009f20:	0c001164 	jal	80004590 <inode_ref_dec>
80009f24:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1421
		}
		node = subnode, path = subpath;
	} while (path != NULL);
	*node_store = node;
	return 0;
}
80009f28:	8fbf0044 	lw	ra,68(sp)
80009f2c:	02e01021 	move	v0,s7
80009f30:	8fbe0040 	lw	s8,64(sp)
80009f34:	8fb7003c 	lw	s7,60(sp)
80009f38:	8fb60038 	lw	s6,56(sp)
80009f3c:	8fb50034 	lw	s5,52(sp)
80009f40:	8fb40030 	lw	s4,48(sp)
80009f44:	8fb3002c 	lw	s3,44(sp)
80009f48:	8fb20028 	lw	s2,40(sp)
80009f4c:	8fb10024 	lw	s1,36(sp)
80009f50:	8fb00020 	lw	s0,32(sp)
80009f54:	03e00008 	jr	ra
80009f58:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009f5c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80009f60:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009f64:	8e560008 	lw	s6,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009f68:	0c006cba 	jal	8001b2e8 <intr_enable>
80009f6c:	32d60001 	andi	s6,s6,0x1
80009f70:	080027b1 	j	80009ec4 <sfs_lookup+0x1c4>
80009f74:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009f78:	0c006cbe 	jal	8001b2f8 <intr_disable>
80009f7c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009f80:	8e5e0008 	lw	s8,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009f84:	0c006cba 	jal	8001b2e8 <intr_enable>
80009f88:	33de0001 	andi	s8,s8,0x1
80009f8c:	080027bb 	j	80009eec <sfs_lookup+0x1ec>
80009f90:	00000000 	nop
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80009f94:	0c00670f 	jal	80019c3c <up>
80009f98:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1420
			return ret;
		}
		node = subnode, path = subpath;
	} while (path != NULL);
	*node_store = node;
	return 0;
80009f9c:	080027c8 	j	80009f20 <sfs_lookup+0x220>
80009fa0:	2417fffe 	li	s7,-2
sfs_lookup_once():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:576
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
		return ret;
	}
	return sfs_load_inode(sfs, node_store, ino);
80009fa4:	02602021 	move	a0,s3
80009fa8:	0c002502 	jal	80009408 <sfs_load_inode>
80009fac:	27a5001c 	addiu	a1,sp,28
80009fb0:	08002783 	j	80009e0c <sfs_lookup+0x10c>
80009fb4:	0040b821 	move	s7,v0
sfs_lookup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1407
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
80009fb8:	0c001164 	jal	80004590 <inode_ref_dec>
80009fbc:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1408
				return -E_TOO_BIG;
80009fc0:	08002799 	j	80009e64 <sfs_lookup+0x164>
80009fc4:	2417ffe5 	li	s7,-27
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1382
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
80009fc8:	3c048002 	lui	a0,0x8002
80009fcc:	3c068002 	lui	a2,0x8002
80009fd0:	3c078002 	lui	a3,0x8002
80009fd4:	24841ba0 	addiu	a0,a0,7072
80009fd8:	24050566 	li	a1,1382
80009fdc:	24c609b0 	addiu	a2,a2,2480
80009fe0:	0c006afd 	jal	8001abf4 <__panic>
80009fe4:	24e71f70 	addiu	a3,a3,8048
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1381
	return path;
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009fe8:	3c048002 	lui	a0,0x8002
80009fec:	3c068002 	lui	a2,0x8002
80009ff0:	3c078002 	lui	a3,0x8002
80009ff4:	24841ba0 	addiu	a0,a0,7072
80009ff8:	24050565 	li	a1,1381
80009ffc:	24c609b0 	addiu	a2,a2,2480
8000a000:	0c006afd 	jal	8001abf4 <__panic>
8000a004:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1385
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	do {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a008:	3c048002 	lui	a0,0x8002
8000a00c:	3c068002 	lui	a2,0x8002
8000a010:	3c078002 	lui	a3,0x8002
8000a014:	24841ba0 	addiu	a0,a0,7072
8000a018:	24050569 	li	a1,1385
8000a01c:	24c609b0 	addiu	a2,a2,2480
8000a020:	0c006afd 	jal	8001abf4 <__panic>
8000a024:	24e71bac 	addiu	a3,a3,7084

8000a028 <sfs_unlink>:
sfs_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1345
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_unlink(struct inode *node, const char *name)
{
8000a028:	27bdffb8 	addiu	sp,sp,-72
8000a02c:	afb0002c 	sw	s0,44(sp)
8000a030:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1346
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a034:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1345
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_unlink(struct inode *node, const char *name)
{
8000a038:	afb30038 	sw	s3,56(sp)
8000a03c:	afbf0044 	sw	ra,68(sp)
8000a040:	afb50040 	sw	s5,64(sp)
8000a044:	afb4003c 	sw	s4,60(sp)
8000a048:	afb20034 	sw	s2,52(sp)
8000a04c:	afb10030 	sw	s1,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1346
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a050:	0c005b6b 	jal	80016dac <strlen>
8000a054:	00a09821 	move	s3,a1
8000a058:	2c420100 	sltiu	v0,v0,256
8000a05c:	10400058 	beqz	v0,8000a1c0 <sfs_unlink+0x198>
8000a060:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1349
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
8000a064:	02602021 	move	a0,s3
8000a068:	0c005baa 	jal	80016ea8 <strcmp>
8000a06c:	24a539e4 	addiu	a1,a1,14820
8000a070:	10400048 	beqz	v0,8000a194 <sfs_unlink+0x16c>
8000a074:	3c058002 	lui	a1,0x8002
8000a078:	02602021 	move	a0,s3
8000a07c:	0c005baa 	jal	80016ea8 <strcmp>
8000a080:	24a51ea8 	addiu	a1,a1,7848
8000a084:	10400044 	beqz	v0,8000a198 <sfs_unlink+0x170>
8000a088:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1352
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a08c:	8e110044 	lw	s1,68(s0)
8000a090:	122000ba 	beqz	s1,8000a37c <sfs_unlink+0x354>
8000a094:	24025679 	li	v0,22137
8000a098:	8e230084 	lw	v1,132(s1)
8000a09c:	146200b7 	bne	v1,v0,8000a37c <sfs_unlink+0x354>
8000a0a0:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1353
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a0a4:	8e030038 	lw	v1,56(s0)
8000a0a8:	146200ad 	bne	v1,v0,8000a360 <sfs_unlink+0x338>
8000a0ac:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1355
	int ret;
	lock_sfs_mutex(sfs);
8000a0b0:	0c002c41 	jal	8000b104 <lock_sfs_mutex>
8000a0b4:	02202021 	move	a0,s1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a0b8:	40026000 	mfc0	v0,c0_status
8000a0bc:	30420001 	andi	v0,v0,0x1
8000a0c0:	14400026 	bnez	v0,8000a15c <sfs_unlink+0x134>
8000a0c4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a0c8:	8e120008 	lw	s2,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a0cc:	32520001 	andi	s2,s2,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a0d0:	16400059 	bnez	s2,8000a238 <sfs_unlink+0x210>
8000a0d4:	26120014 	addiu	s2,s0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a0d8:	0c006711 	jal	80019c44 <down>
8000a0dc:	02402021 	move	a0,s2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000a0e0:	40026000 	mfc0	v0,c0_status
8000a0e4:	30420001 	andi	v0,v0,0x1
8000a0e8:	14400023 	bnez	v0,8000a178 <sfs_unlink+0x150>
8000a0ec:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a0f0:	8e140008 	lw	s4,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a0f4:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a0f8:	1680004d 	bnez	s4,8000a230 <sfs_unlink+0x208>
8000a0fc:	27a20020 	addiu	v0,sp,32
sfs_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1308
static int
sfs_unlink_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name)
{
	int ret, slot;
	uint32_t ino;
	if ((ret =
8000a100:	02202021 	move	a0,s1
8000a104:	02002821 	move	a1,s0
8000a108:	02603021 	move	a2,s3
8000a10c:	27a7001c 	addiu	a3,sp,28
8000a110:	afa20010 	sw	v0,16(sp)
8000a114:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
8000a118:	afa00014 	sw	zero,20(sp)
8000a11c:	1040002a 	beqz	v0,8000a1c8 <sfs_unlink+0x1a0>
8000a120:	0040a821 	move	s5,v0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a124:	0c00670f 	jal	80019c3c <up>
8000a128:	02402021 	move	a0,s2
sfs_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1362
		if ((ret = trylock_sin(sin)) == 0) {
			ret = sfs_unlink_nolock(sfs, sin, name);
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
8000a12c:	0c002c47 	jal	8000b11c <unlock_sfs_mutex>
8000a130:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1364
	return ret;
}
8000a134:	8fbf0044 	lw	ra,68(sp)
8000a138:	02a01021 	move	v0,s5
8000a13c:	8fb4003c 	lw	s4,60(sp)
8000a140:	8fb50040 	lw	s5,64(sp)
8000a144:	8fb30038 	lw	s3,56(sp)
8000a148:	8fb20034 	lw	s2,52(sp)
8000a14c:	8fb10030 	lw	s1,48(sp)
8000a150:	8fb0002c 	lw	s0,44(sp)
8000a154:	03e00008 	jr	ra
8000a158:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a15c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a160:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a164:	8e120008 	lw	s2,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a168:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a16c:	32520001 	andi	s2,s2,0x1
8000a170:	08002834 	j	8000a0d0 <sfs_unlink+0xa8>
8000a174:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a178:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a17c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a180:	8e140008 	lw	s4,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a184:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a188:	32940001 	andi	s4,s4,0x1
8000a18c:	0800283e 	j	8000a0f8 <sfs_unlink+0xd0>
8000a190:	00000000 	nop
sfs_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1364
8000a194:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1350
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_ISDIR;
8000a198:	2415ffeb 	li	s5,-21
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1364
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
	return ret;
}
8000a19c:	02a01021 	move	v0,s5
8000a1a0:	8fb4003c 	lw	s4,60(sp)
8000a1a4:	8fb50040 	lw	s5,64(sp)
8000a1a8:	8fb30038 	lw	s3,56(sp)
8000a1ac:	8fb20034 	lw	s2,52(sp)
8000a1b0:	8fb10030 	lw	s1,48(sp)
8000a1b4:	8fb0002c 	lw	s0,44(sp)
8000a1b8:	03e00008 	jr	ra
8000a1bc:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1347
}

static int sfs_unlink(struct inode *node, const char *name)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000a1c0:	0800284d 	j	8000a134 <sfs_unlink+0x10c>
8000a1c4:	2415ffe5 	li	s5,-27
sfs_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1314
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, &slot,
				      NULL)) != 0) {
		return ret;
	}
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
8000a1c8:	8fa6001c 	lw	a2,28(sp)
8000a1cc:	02202021 	move	a0,s1
8000a1d0:	0c002502 	jal	80009408 <sfs_load_inode>
8000a1d4:	27a50018 	addiu	a1,sp,24
8000a1d8:	1440ffd2 	bnez	v0,8000a124 <sfs_unlink+0xfc>
8000a1dc:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1317
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000a1e0:	8fb30018 	lw	s3,24(sp)
8000a1e4:	12600076 	beqz	s3,8000a3c0 <sfs_unlink+0x398>
8000a1e8:	24021237 	li	v0,4663
8000a1ec:	8e630038 	lw	v1,56(s3)
8000a1f0:	14620074 	bne	v1,v0,8000a3c4 <sfs_unlink+0x39c>
8000a1f4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1318
	if (lnksin->din->type != SFS_TYPE_DIR) {
8000a1f8:	8e620000 	lw	v0,0(s3)
8000a1fc:	94430008 	lhu	v1,8(v0)
8000a200:	24020002 	li	v0,2
8000a204:	1062000e 	beq	v1,v0,8000a240 <sfs_unlink+0x218>
8000a208:	8fa60020 	lw	a2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1319
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
8000a20c:	02202021 	move	a0,s1
8000a210:	02002821 	move	a1,s0
8000a214:	0c0020ef 	jal	800083bc <sfs_dirent_unlink_nolock>
8000a218:	02603821 	move	a3,s3
8000a21c:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1340
				sfs_nlinks_dec_nolock(sin);
			}
			unlock_sin(lnksin);
		}
	}
	vop_ref_dec(link_node);
8000a220:	0c001164 	jal	80004590 <inode_ref_dec>
8000a224:	8fa40018 	lw	a0,24(sp)
8000a228:	08002849 	j	8000a124 <sfs_unlink+0xfc>
8000a22c:	00000000 	nop
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a230:	0c00670f 	jal	80019c3c <up>
8000a234:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1323
	if (lnksin->din->type != SFS_TYPE_DIR) {
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
				ret = -E_NOTEMPTY;
8000a238:	0800284b 	j	8000a12c <sfs_unlink+0x104>
8000a23c:	2415fffe 	li	s5,-2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a240:	40026000 	mfc0	v0,c0_status
8000a244:	30420001 	andi	v0,v0,0x1
8000a248:	14400017 	bnez	v0,8000a2a8 <sfs_unlink+0x280>
8000a24c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a250:	8e740008 	lw	s4,8(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a254:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a258:	1680003f 	bnez	s4,8000a358 <sfs_unlink+0x330>
8000a25c:	26740014 	addiu	s4,s3,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a260:	0c006711 	jal	80019c44 <down>
8000a264:	02802021 	move	a0,s4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000a268:	40026000 	mfc0	v0,c0_status
8000a26c:	30420001 	andi	v0,v0,0x1
8000a270:	14400014 	bnez	v0,8000a2c4 <sfs_unlink+0x29c>
8000a274:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a278:	8e750008 	lw	s5,8(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a27c:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a280:	16a00033 	bnez	s5,8000a350 <sfs_unlink+0x328>
8000a284:	00000000 	nop
sfs_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1322
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
	if (lnksin->din->type != SFS_TYPE_DIR) {
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
8000a288:	8e620000 	lw	v0,0(s3)
8000a28c:	8c420000 	lw	v0,0(v0)
8000a290:	10400013 	beqz	v0,8000a2e0 <sfs_unlink+0x2b8>
8000a294:	2415ffeb 	li	s5,-21
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a298:	0c00670f 	jal	80019c3c <up>
8000a29c:	02802021 	move	a0,s4
8000a2a0:	08002888 	j	8000a220 <sfs_unlink+0x1f8>
8000a2a4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a2a8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a2ac:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a2b0:	8e740008 	lw	s4,8(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a2b4:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a2b8:	32940001 	andi	s4,s4,0x1
8000a2bc:	08002896 	j	8000a258 <sfs_unlink+0x230>
8000a2c0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a2c4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a2c8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a2cc:	8e750008 	lw	s5,8(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a2d0:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a2d4:	32b50001 	andi	s5,s5,0x1
8000a2d8:	080028a0 	j	8000a280 <sfs_unlink+0x258>
8000a2dc:	00000000 	nop
sfs_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1325
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
				ret = -E_NOTEMPTY;
			} else
			    if ((ret =
8000a2e0:	8fa60020 	lw	a2,32(sp)
8000a2e4:	02202021 	move	a0,s1
8000a2e8:	02002821 	move	a1,s0
8000a2ec:	0c0020ef 	jal	800083bc <sfs_dirent_unlink_nolock>
8000a2f0:	02603821 	move	a3,s3
8000a2f4:	1440ffe8 	bnez	v0,8000a298 <sfs_unlink+0x270>
8000a2f8:	0040a821 	move	s5,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a2fc:	40026000 	mfc0	v0,c0_status
8000a300:	30420001 	andi	v0,v0,0x1
8000a304:	14400025 	bnez	v0,8000a39c <sfs_unlink+0x374>
8000a308:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8000a30c:	8e620008 	lw	v0,8(s3)
8000a310:	34420001 	ori	v0,v0,0x1
8000a314:	ae620008 	sw	v0,8(s3)
sfs_nlinks_dec_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a318:	8e640000 	lw	a0,0(s3)
8000a31c:	9485000a 	lhu	a1,10(a0)
8000a320:	10a0002b 	beqz	a1,8000a3d0 <sfs_unlink+0x3a8>
8000a324:	24030001 	li	v1,1
8000a328:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:747
	sin->dirty = 1, --sin->din->nlinks;
8000a32c:	24a5ffff 	addiu	a1,a1,-1
8000a330:	ae63000c 	sw	v1,12(s3)
8000a334:	a485000a 	sh	a1,10(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a338:	9444000a 	lhu	a0,10(v0)
8000a33c:	10800024 	beqz	a0,8000a3d0 <sfs_unlink+0x3a8>
8000a340:	2484ffff 	addiu	a0,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:747
	sin->dirty = 1, --sin->din->nlinks;
8000a344:	ae03000c 	sw	v1,12(s0)
8000a348:	080028a6 	j	8000a298 <sfs_unlink+0x270>
8000a34c:	a444000a 	sh	a0,10(v0)
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a350:	0c00670f 	jal	80019c3c <up>
8000a354:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1323
	if (lnksin->din->type != SFS_TYPE_DIR) {
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
				ret = -E_NOTEMPTY;
8000a358:	08002888 	j	8000a220 <sfs_unlink+0x1f8>
8000a35c:	2415fffe 	li	s5,-2
sfs_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1353
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a360:	24841ba0 	addiu	a0,a0,7072
8000a364:	24050549 	li	a1,1353
sfs_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1317
	}
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000a368:	3c068002 	lui	a2,0x8002
8000a36c:	3c078002 	lui	a3,0x8002
8000a370:	24c609b0 	addiu	a2,a2,2480
8000a374:	0c006afd 	jal	8001abf4 <__panic>
8000a378:	24e71bac 	addiu	a3,a3,7084
sfs_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1352
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a37c:	3c048002 	lui	a0,0x8002
8000a380:	3c068002 	lui	a2,0x8002
8000a384:	3c078002 	lui	a3,0x8002
8000a388:	24841ba0 	addiu	a0,a0,7072
8000a38c:	24050548 	li	a1,1352
8000a390:	24c609b0 	addiu	a2,a2,2480
8000a394:	0c006afd 	jal	8001abf4 <__panic>
8000a398:	24e719fc 	addiu	a3,a3,6652
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a39c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a3a0:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8000a3a4:	8e620008 	lw	v0,8(s3)
8000a3a8:	34420001 	ori	v0,v0,0x1
8000a3ac:	ae620008 	sw	v0,8(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a3b0:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a3b4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a3b8:	080028c7 	j	8000a31c <sfs_unlink+0x2f4>
8000a3bc:	8e640000 	lw	a0,0(s3)
sfs_unlink_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1317
	}
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000a3c0:	3c048002 	lui	a0,0x8002
8000a3c4:	24841ba0 	addiu	a0,a0,7072
8000a3c8:	080028da 	j	8000a368 <sfs_unlink+0x340>
8000a3cc:	24050525 	li	a1,1317
sfs_nlinks_dec_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a3d0:	3c048002 	lui	a0,0x8002
8000a3d4:	3c068002 	lui	a2,0x8002
8000a3d8:	3c078002 	lui	a3,0x8002
8000a3dc:	24841ba0 	addiu	a0,a0,7072
8000a3e0:	240502ea 	li	a1,746
8000a3e4:	24c609b0 	addiu	a2,a2,2480
8000a3e8:	0c006afd 	jal	8001abf4 <__panic>
8000a3ec:	24e71f90 	addiu	a3,a3,8080

8000a3f0 <sfs_create>:
sfs_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1286
}

static int
sfs_create(struct inode *node, const char *name, bool excl,
	   struct inode **node_store)
{
8000a3f0:	27bdffb8 	addiu	sp,sp,-72
8000a3f4:	afb00028 	sw	s0,40(sp)
8000a3f8:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1287
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a3fc:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1286
}

static int
sfs_create(struct inode *node, const char *name, bool excl,
	   struct inode **node_store)
{
8000a400:	afb5003c 	sw	s5,60(sp)
8000a404:	afb40038 	sw	s4,56(sp)
8000a408:	afb1002c 	sw	s1,44(sp)
8000a40c:	afbf0044 	sw	ra,68(sp)
8000a410:	afb60040 	sw	s6,64(sp)
8000a414:	afb30034 	sw	s3,52(sp)
8000a418:	afb20030 	sw	s2,48(sp)
8000a41c:	00a08821 	move	s1,a1
8000a420:	00c0a021 	move	s4,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1287
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a424:	0c005b6b 	jal	80016dac <strlen>
8000a428:	00e0a821 	move	s5,a3
8000a42c:	2c420100 	sltiu	v0,v0,256
8000a430:	1040006e 	beqz	v0,8000a5ec <sfs_create+0x1fc>
8000a434:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1290
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
8000a438:	02202021 	move	a0,s1
8000a43c:	0c005baa 	jal	80016ea8 <strcmp>
8000a440:	24a539e4 	addiu	a1,a1,14820
8000a444:	1040005d 	beqz	v0,8000a5bc <sfs_create+0x1cc>
8000a448:	3c058002 	lui	a1,0x8002
8000a44c:	02202021 	move	a0,s1
8000a450:	0c005baa 	jal	80016ea8 <strcmp>
8000a454:	24a51ea8 	addiu	a1,a1,7848
8000a458:	10400059 	beqz	v0,8000a5c0 <sfs_create+0x1d0>
8000a45c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1293
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a460:	8e120044 	lw	s2,68(s0)
8000a464:	12400085 	beqz	s2,8000a67c <sfs_create+0x28c>
8000a468:	24025679 	li	v0,22137
8000a46c:	8e430084 	lw	v1,132(s2)
8000a470:	14620082 	bne	v1,v0,8000a67c <sfs_create+0x28c>
8000a474:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1294
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a478:	8e030038 	lw	v1,56(s0)
8000a47c:	14620087 	bne	v1,v0,8000a69c <sfs_create+0x2ac>
8000a480:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a484:	40026000 	mfc0	v0,c0_status
8000a488:	30420001 	andi	v0,v0,0x1
8000a48c:	1440003d 	bnez	v0,8000a584 <sfs_create+0x194>
8000a490:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a494:	8e130008 	lw	s3,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a498:	32730001 	andi	s3,s3,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a49c:	16600055 	bnez	s3,8000a5f4 <sfs_create+0x204>
8000a4a0:	26130014 	addiu	s3,s0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a4a4:	0c006711 	jal	80019c44 <down>
8000a4a8:	02602021 	move	a0,s3
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000a4ac:	40026000 	mfc0	v0,c0_status
8000a4b0:	30420001 	andi	v0,v0,0x1
8000a4b4:	1440003a 	bnez	v0,8000a5a0 <sfs_create+0x1b0>
8000a4b8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a4bc:	8e160008 	lw	s6,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a4c0:	32d60001 	andi	s6,s6,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a4c4:	16c00067 	bnez	s6,8000a664 <sfs_create+0x274>
8000a4c8:	27a20020 	addiu	v0,sp,32
sfs_create_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1246
		  bool excl, struct inode **node_store)
{
	int ret, slot;
	uint32_t ino;
	struct inode *link_node;
	if ((ret =
8000a4cc:	02402021 	move	a0,s2
8000a4d0:	02002821 	move	a1,s0
8000a4d4:	02203021 	move	a2,s1
8000a4d8:	27a7001c 	addiu	a3,sp,28
8000a4dc:	afa00010 	sw	zero,16(sp)
8000a4e0:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
8000a4e4:	afa20014 	sw	v0,20(sp)
8000a4e8:	0040b021 	move	s6,v0
8000a4ec:	2402fffe 	li	v0,-2
8000a4f0:	12c20046 	beq	s6,v0,8000a60c <sfs_create+0x21c>
8000a4f4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1249
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, NULL,
				      &slot)) != -E_NOENT) {
		if (ret != 0) {
8000a4f8:	16c00015 	bnez	s6,8000a550 <sfs_create+0x160>
8000a4fc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1252
			return ret;
		}
		if (!excl) {
8000a500:	1680005c 	bnez	s4,8000a674 <sfs_create+0x284>
8000a504:	8fa6001c 	lw	a2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1253
			if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
8000a508:	02402021 	move	a0,s2
8000a50c:	0c002502 	jal	80009408 <sfs_load_inode>
8000a510:	27a50018 	addiu	a1,sp,24
8000a514:	1440000e 	bnez	v0,8000a550 <sfs_create+0x160>
8000a518:	0040b021 	move	s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1256
				return ret;
			}
			if (vop_info(link_node, sfs_inode)->din->type ==
8000a51c:	8fa40018 	lw	a0,24(sp)
8000a520:	10800065 	beqz	a0,8000a6b8 <sfs_create+0x2c8>
8000a524:	24021237 	li	v0,4663
8000a528:	8c830038 	lw	v1,56(a0)
8000a52c:	54620063 	bnel	v1,v0,8000a6bc <sfs_create+0x2cc>
8000a530:	3c048002 	lui	a0,0x8002
8000a534:	8c820000 	lw	v0,0(a0)
8000a538:	94430008 	lhu	v1,8(v0)
8000a53c:	24020001 	li	v0,1
8000a540:	1462002e 	bne	v1,v0,8000a5fc <sfs_create+0x20c>
8000a544:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1279
			return ret;
		}
	}

out:
	*node_store = link_node;
8000a548:	aea40000 	sw	a0,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1280
	return 0;
8000a54c:	0000b021 	move	s6,zero
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a550:	0c00670f 	jal	80019c3c <up>
8000a554:	02602021 	move	a0,s3
sfs_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1301
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_create_nolock(sfs, sin, name, excl, node_store);
		unlock_sin(sin);
	}
	return ret;
}
8000a558:	8fbf0044 	lw	ra,68(sp)
8000a55c:	02c01021 	move	v0,s6
8000a560:	8fb5003c 	lw	s5,60(sp)
8000a564:	8fb60040 	lw	s6,64(sp)
8000a568:	8fb40038 	lw	s4,56(sp)
8000a56c:	8fb30034 	lw	s3,52(sp)
8000a570:	8fb20030 	lw	s2,48(sp)
8000a574:	8fb1002c 	lw	s1,44(sp)
8000a578:	8fb00028 	lw	s0,40(sp)
8000a57c:	03e00008 	jr	ra
8000a580:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a584:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a588:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a58c:	8e130008 	lw	s3,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a590:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a594:	32730001 	andi	s3,s3,0x1
8000a598:	08002927 	j	8000a49c <sfs_create+0xac>
8000a59c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a5a0:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a5a4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a5a8:	8e160008 	lw	s6,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a5ac:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a5b0:	32d60001 	andi	s6,s6,0x1
8000a5b4:	08002931 	j	8000a4c4 <sfs_create+0xd4>
8000a5b8:	00000000 	nop
sfs_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1301
8000a5bc:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1291
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
8000a5c0:	2416ffef 	li	s6,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1301
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_create_nolock(sfs, sin, name, excl, node_store);
		unlock_sin(sin);
	}
	return ret;
}
8000a5c4:	02c01021 	move	v0,s6
8000a5c8:	8fb5003c 	lw	s5,60(sp)
8000a5cc:	8fb60040 	lw	s6,64(sp)
8000a5d0:	8fb40038 	lw	s4,56(sp)
8000a5d4:	8fb30034 	lw	s3,52(sp)
8000a5d8:	8fb20030 	lw	s2,48(sp)
8000a5dc:	8fb1002c 	lw	s1,44(sp)
8000a5e0:	8fb00028 	lw	s0,40(sp)
8000a5e4:	03e00008 	jr	ra
8000a5e8:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1288
static int
sfs_create(struct inode *node, const char *name, bool excl,
	   struct inode **node_store)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000a5ec:	08002956 	j	8000a558 <sfs_create+0x168>
8000a5f0:	2416ffe5 	li	s6,-27
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a5f4:	08002956 	j	8000a558 <sfs_create+0x168>
8000a5f8:	2416fffe 	li	s6,-2
sfs_create_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1260
			}
			if (vop_info(link_node, sfs_inode)->din->type ==
			    SFS_TYPE_FILE) {
				goto out;
			}
			vop_ref_dec(link_node);
8000a5fc:	0c001164 	jal	80004590 <inode_ref_dec>
8000a600:	2416ffef 	li	s6,-17
8000a604:	08002954 	j	8000a550 <sfs_create+0x160>
8000a608:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1264
		}
		return -E_EXISTS;
	} else {
		if ((ret =
8000a60c:	24050001 	li	a1,1
8000a610:	0c001c9a 	jal	80007268 <sfs_dirent_create_inode>
8000a614:	27a60018 	addiu	a2,sp,24
8000a618:	1440ffcd 	bnez	v0,8000a550 <sfs_create+0x160>
8000a61c:	0040b021 	move	s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1271
					     &link_node)) != 0) {
			return ret;
		}
		if ((ret =
		     sfs_dirent_link_nolock(sfs, sin, slot,
					    vop_info(link_node, sfs_inode),
8000a620:	8fa70018 	lw	a3,24(sp)
8000a624:	10e00028 	beqz	a3,8000a6c8 <sfs_create+0x2d8>
8000a628:	8fa60020 	lw	a2,32(sp)
8000a62c:	8ce30038 	lw	v1,56(a3)
8000a630:	24021237 	li	v0,4663
8000a634:	14620024 	bne	v1,v0,8000a6c8 <sfs_create+0x2d8>
8000a638:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1269
		if ((ret =
		     sfs_dirent_create_inode(sfs, SFS_TYPE_FILE,
					     &link_node)) != 0) {
			return ret;
		}
		if ((ret =
8000a63c:	02002821 	move	a1,s0
8000a640:	0c002115 	jal	80008454 <sfs_dirent_link_nolock>
8000a644:	afb10010 	sw	s1,16(sp)
8000a648:	0040b021 	move	s6,v0
8000a64c:	1040ffbe 	beqz	v0,8000a548 <sfs_create+0x158>
8000a650:	8fa40018 	lw	a0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1273
		     sfs_dirent_link_nolock(sfs, sin, slot,
					    vop_info(link_node, sfs_inode),
					    name)) != 0) {
			vop_ref_dec(link_node);
8000a654:	0c001164 	jal	80004590 <inode_ref_dec>
8000a658:	00000000 	nop
8000a65c:	08002954 	j	8000a550 <sfs_create+0x160>
8000a660:	00000000 	nop
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a664:	0c00670f 	jal	80019c3c <up>
8000a668:	02602021 	move	a0,s3
8000a66c:	08002956 	j	8000a558 <sfs_create+0x168>
8000a670:	2416fffe 	li	s6,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1262
			    SFS_TYPE_FILE) {
				goto out;
			}
			vop_ref_dec(link_node);
		}
		return -E_EXISTS;
8000a674:	08002954 	j	8000a550 <sfs_create+0x160>
8000a678:	2416ffef 	li	s6,-17
sfs_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1293
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a67c:	3c048002 	lui	a0,0x8002
8000a680:	3c068002 	lui	a2,0x8002
8000a684:	3c078002 	lui	a3,0x8002
8000a688:	24841ba0 	addiu	a0,a0,7072
8000a68c:	2405050d 	li	a1,1293
8000a690:	24c609b0 	addiu	a2,a2,2480
8000a694:	0c006afd 	jal	8001abf4 <__panic>
8000a698:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1294
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a69c:	24841ba0 	addiu	a0,a0,7072
8000a6a0:	2405050e 	li	a1,1294
sfs_create_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1256
		}
		if (!excl) {
			if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
				return ret;
			}
			if (vop_info(link_node, sfs_inode)->din->type ==
8000a6a4:	3c068002 	lui	a2,0x8002
8000a6a8:	3c078002 	lui	a3,0x8002
8000a6ac:	24c609b0 	addiu	a2,a2,2480
8000a6b0:	0c006afd 	jal	8001abf4 <__panic>
8000a6b4:	24e71bac 	addiu	a3,a3,7084
8000a6b8:	3c048002 	lui	a0,0x8002
8000a6bc:	24841ba0 	addiu	a0,a0,7072
8000a6c0:	080029a9 	j	8000a6a4 <sfs_create+0x2b4>
8000a6c4:	240504e8 	li	a1,1256
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:1271
					     &link_node)) != 0) {
			return ret;
		}
		if ((ret =
		     sfs_dirent_link_nolock(sfs, sin, slot,
					    vop_info(link_node, sfs_inode),
8000a6c8:	3c048002 	lui	a0,0x8002
8000a6cc:	24841ba0 	addiu	a0,a0,7072
8000a6d0:	080029a9 	j	8000a6a4 <sfs_create+0x2b4>
8000a6d4:	240504f7 	li	a1,1271

8000a6d8 <sfs_rename>:
sfs_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:954
}

static int
sfs_rename(struct inode *node, const char *name, struct inode *new_node,
	   const char *new_name)
{
8000a6d8:	27bdffa8 	addiu	sp,sp,-88
8000a6dc:	afb00030 	sw	s0,48(sp)
8000a6e0:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:955
	if (strlen(name) > SFS_MAX_FNAME_LEN
8000a6e4:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:954
}

static int
sfs_rename(struct inode *node, const char *name, struct inode *new_node,
	   const char *new_name)
{
8000a6e8:	afb3003c 	sw	s3,60(sp)
8000a6ec:	afb20038 	sw	s2,56(sp)
8000a6f0:	afb10034 	sw	s1,52(sp)
8000a6f4:	afbf0054 	sw	ra,84(sp)
8000a6f8:	afbe0050 	sw	s8,80(sp)
8000a6fc:	afb7004c 	sw	s7,76(sp)
8000a700:	afb60048 	sw	s6,72(sp)
8000a704:	afb50044 	sw	s5,68(sp)
8000a708:	afb40040 	sw	s4,64(sp)
8000a70c:	00a08821 	move	s1,a1
8000a710:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:955
	if (strlen(name) > SFS_MAX_FNAME_LEN
8000a714:	0c005b6b 	jal	80016dac <strlen>
8000a718:	00e09821 	move	s3,a3
8000a71c:	2c420100 	sltiu	v0,v0,256
8000a720:	10400081 	beqz	v0,8000a928 <sfs_rename+0x250>
8000a724:	8fbf0054 	lw	ra,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:956
	    || strlen(new_name) > SFS_MAX_FNAME_LEN) {
8000a728:	0c005b6b 	jal	80016dac <strlen>
8000a72c:	02602021 	move	a0,s3
8000a730:	2c420100 	sltiu	v0,v0,256
8000a734:	1040007b 	beqz	v0,8000a924 <sfs_rename+0x24c>
8000a738:	3c148002 	lui	s4,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:959
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
8000a73c:	02202021 	move	a0,s1
8000a740:	0c005baa 	jal	80016ea8 <strcmp>
8000a744:	268539e4 	addiu	a1,s4,14820
8000a748:	10400084 	beqz	v0,8000a95c <sfs_rename+0x284>
8000a74c:	3c158002 	lui	s5,0x8002
8000a750:	02202021 	move	a0,s1
8000a754:	0c005baa 	jal	80016ea8 <strcmp>
8000a758:	26a51ea8 	addiu	a1,s5,7848
8000a75c:	1040007f 	beqz	v0,8000a95c <sfs_rename+0x284>
8000a760:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:962
		return -E_INVAL;
	}
	if (strcmp(new_name, ".") == 0 || strcmp(new_name, "..") == 0) {
8000a764:	0c005baa 	jal	80016ea8 <strcmp>
8000a768:	268539e4 	addiu	a1,s4,14820
8000a76c:	5040004b 	beqzl	v0,8000a89c <sfs_rename+0x1c4>
8000a770:	2415ffef 	li	s5,-17
8000a774:	02602021 	move	a0,s3
8000a778:	0c005baa 	jal	80016ea8 <strcmp>
8000a77c:	26a51ea8 	addiu	a1,s5,7848
8000a780:	50400046 	beqzl	v0,8000a89c <sfs_rename+0x1c4>
8000a784:	2415ffef 	li	s5,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:965
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a788:	8e140044 	lw	s4,68(s0)
8000a78c:	128000f9 	beqz	s4,8000ab74 <sfs_rename+0x49c>
8000a790:	24025679 	li	v0,22137
8000a794:	8e830084 	lw	v1,132(s4)
8000a798:	146200f6 	bne	v1,v0,8000ab74 <sfs_rename+0x49c>
8000a79c:	24021237 	li	v0,4663
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:966
	struct sfs_inode *sin = vop_info(node, sfs_inode), *newsin =
8000a7a0:	8e030038 	lw	v1,56(s0)
8000a7a4:	146200ec 	bne	v1,v0,8000ab58 <sfs_rename+0x480>
8000a7a8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:967
	    vop_info(new_node, sfs_inode);
8000a7ac:	124000fa 	beqz	s2,8000ab98 <sfs_rename+0x4c0>
8000a7b0:	24841ba0 	addiu	a0,a0,7072
8000a7b4:	8e430038 	lw	v1,56(s2)
8000a7b8:	146200f6 	bne	v1,v0,8000ab94 <sfs_rename+0x4bc>
8000a7bc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:969
	int ret;
	lock_sfs_mutex(sfs);
8000a7c0:	0c002c41 	jal	8000b104 <lock_sfs_mutex>
8000a7c4:	02802021 	move	a0,s4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a7c8:	40026000 	mfc0	v0,c0_status
8000a7cc:	30420001 	andi	v0,v0,0x1
8000a7d0:	1440003f 	bnez	v0,8000a8d0 <sfs_rename+0x1f8>
8000a7d4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a7d8:	8e150008 	lw	s5,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a7dc:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a7e0:	16a00075 	bnez	s5,8000a9b8 <sfs_rename+0x2e0>
8000a7e4:	26160014 	addiu	s6,s0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a7e8:	0c006711 	jal	80019c44 <down>
8000a7ec:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000a7f0:	40026000 	mfc0	v0,c0_status
8000a7f4:	30420001 	andi	v0,v0,0x1
8000a7f8:	1440003c 	bnez	v0,8000a8ec <sfs_rename+0x214>
8000a7fc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a800:	8e150008 	lw	s5,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a804:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a808:	16a00069 	bnez	s5,8000a9b0 <sfs_rename+0x2d8>
8000a80c:	00000000 	nop
sfs_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:972
	    vop_info(new_node, sfs_inode);
	int ret;
	lock_sfs_mutex(sfs);
	{
		if ((ret = trylock_sin(sin)) == 0) {
			if (sin == newsin) {
8000a810:	5212006b 	beql	s0,s2,8000a9c0 <sfs_rename+0x2e8>
8000a814:	02202021 	move	a0,s1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000a818:	40026000 	mfc0	v0,c0_status
8000a81c:	30420001 	andi	v0,v0,0x1
8000a820:	14400039 	bnez	v0,8000a908 <sfs_rename+0x230>
8000a824:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a828:	8e550008 	lw	s5,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a82c:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a830:	16a0008e 	bnez	s5,8000aa6c <sfs_rename+0x394>
8000a834:	26570014 	addiu	s7,s2,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a838:	0c006711 	jal	80019c44 <down>
8000a83c:	02e02021 	move	a0,s7
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000a840:	40026000 	mfc0	v0,c0_status
8000a844:	30420001 	andi	v0,v0,0x1
8000a848:	14400052 	bnez	v0,8000a994 <sfs_rename+0x2bc>
8000a84c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a850:	8e550008 	lw	s5,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a854:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a858:	16a00082 	bnez	s5,8000aa64 <sfs_rename+0x38c>
8000a85c:	27a20024 	addiu	v0,sp,36
sfs_rename2_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:897
sfs_rename2_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name,
		   struct sfs_inode *newsin, const char *new_name)
{
	uint32_t ino;
	int ret, slot1, slot2;
	if ((ret =
8000a860:	02802021 	move	a0,s4
8000a864:	02002821 	move	a1,s0
8000a868:	02203021 	move	a2,s1
8000a86c:	27a70020 	addiu	a3,sp,32
8000a870:	afa20010 	sw	v0,16(sp)
8000a874:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
8000a878:	afa00014 	sw	zero,20(sp)
8000a87c:	1040006b 	beqz	v0,8000aa2c <sfs_rename+0x354>
8000a880:	0040a821 	move	s5,v0
unlock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a884:	0c00670f 	jal	80019c3c <up>
8000a888:	02e02021 	move	a0,s7
8000a88c:	0c00670f 	jal	80019c3c <up>
8000a890:	02c02021 	move	a0,s6
sfs_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:985
				unlock_sin(newsin);
			}
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
8000a894:	0c002c47 	jal	8000b11c <unlock_sfs_mutex>
8000a898:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:987
	return ret;
}
8000a89c:	8fbf0054 	lw	ra,84(sp)
8000a8a0:	02a01021 	move	v0,s5
8000a8a4:	8fbe0050 	lw	s8,80(sp)
8000a8a8:	8fb7004c 	lw	s7,76(sp)
8000a8ac:	8fb60048 	lw	s6,72(sp)
8000a8b0:	8fb50044 	lw	s5,68(sp)
8000a8b4:	8fb40040 	lw	s4,64(sp)
8000a8b8:	8fb3003c 	lw	s3,60(sp)
8000a8bc:	8fb20038 	lw	s2,56(sp)
8000a8c0:	8fb10034 	lw	s1,52(sp)
8000a8c4:	8fb00030 	lw	s0,48(sp)
8000a8c8:	03e00008 	jr	ra
8000a8cc:	27bd0058 	addiu	sp,sp,88
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a8d0:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a8d4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a8d8:	8e150008 	lw	s5,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a8dc:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a8e0:	32b50001 	andi	s5,s5,0x1
8000a8e4:	080029f8 	j	8000a7e0 <sfs_rename+0x108>
8000a8e8:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a8ec:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a8f0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a8f4:	8e150008 	lw	s5,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a8f8:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a8fc:	32b50001 	andi	s5,s5,0x1
8000a900:	08002a02 	j	8000a808 <sfs_rename+0x130>
8000a904:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a908:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a90c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a910:	8e550008 	lw	s5,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a914:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a918:	32b50001 	andi	s5,s5,0x1
8000a91c:	08002a0c 	j	8000a830 <sfs_rename+0x158>
8000a920:	00000000 	nop
sfs_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:987
8000a924:	8fbf0054 	lw	ra,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:957
sfs_rename(struct inode *node, const char *name, struct inode *new_node,
	   const char *new_name)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN
	    || strlen(new_name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000a928:	2415ffe5 	li	s5,-27
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:987
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
	return ret;
}
8000a92c:	02a01021 	move	v0,s5
8000a930:	8fbe0050 	lw	s8,80(sp)
8000a934:	8fb7004c 	lw	s7,76(sp)
8000a938:	8fb60048 	lw	s6,72(sp)
8000a93c:	8fb50044 	lw	s5,68(sp)
8000a940:	8fb40040 	lw	s4,64(sp)
8000a944:	8fb3003c 	lw	s3,60(sp)
8000a948:	8fb20038 	lw	s2,56(sp)
8000a94c:	8fb10034 	lw	s1,52(sp)
8000a950:	8fb00030 	lw	s0,48(sp)
8000a954:	03e00008 	jr	ra
8000a958:	27bd0058 	addiu	sp,sp,88
8000a95c:	8fbf0054 	lw	ra,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:960
	if (strlen(name) > SFS_MAX_FNAME_LEN
	    || strlen(new_name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_INVAL;
8000a960:	2415ffea 	li	s5,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:987
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
	return ret;
}
8000a964:	02a01021 	move	v0,s5
8000a968:	8fbe0050 	lw	s8,80(sp)
8000a96c:	8fb7004c 	lw	s7,76(sp)
8000a970:	8fb60048 	lw	s6,72(sp)
8000a974:	8fb50044 	lw	s5,68(sp)
8000a978:	8fb40040 	lw	s4,64(sp)
8000a97c:	8fb3003c 	lw	s3,60(sp)
8000a980:	8fb20038 	lw	s2,56(sp)
8000a984:	8fb10034 	lw	s1,52(sp)
8000a988:	8fb00030 	lw	s0,48(sp)
8000a98c:	03e00008 	jr	ra
8000a990:	27bd0058 	addiu	sp,sp,88
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a994:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000a998:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a99c:	8e550008 	lw	s5,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a9a0:	0c006cba 	jal	8001b2e8 <intr_enable>
8000a9a4:	32b50001 	andi	s5,s5,0x1
8000a9a8:	08002a16 	j	8000a858 <sfs_rename+0x180>
8000a9ac:	00000000 	nop
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a9b0:	0c00670f 	jal	80019c3c <up>
8000a9b4:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:905
		return ret;
	}
	if ((ret =
	     sfs_dirent_search_nolock(sfs, newsin, new_name, NULL, NULL,
				      &slot2)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000a9b8:	08002a25 	j	8000a894 <sfs_rename+0x1bc>
8000a9bc:	2415fffe 	li	s5,-2
sfs_rename1_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:873

static int
sfs_rename1_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name,
		   const char *new_name)
{
	if (strcmp(name, new_name) == 0) {
8000a9c0:	0c005baa 	jal	80016ea8 <strcmp>
8000a9c4:	02602821 	move	a1,s3
8000a9c8:	1040ffb0 	beqz	v0,8000a88c <sfs_rename+0x1b4>
8000a9cc:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:878
		return 0;
	}
	int ret, slot;
	uint32_t ino;
	if ((ret =
8000a9d0:	27a20024 	addiu	v0,sp,36
8000a9d4:	02802021 	move	a0,s4
8000a9d8:	02002821 	move	a1,s0
8000a9dc:	02203021 	move	a2,s1
8000a9e0:	27a70020 	addiu	a3,sp,32
8000a9e4:	afa20010 	sw	v0,16(sp)
8000a9e8:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
8000a9ec:	afa00014 	sw	zero,20(sp)
8000a9f0:	1440ffa6 	bnez	v0,8000a88c <sfs_rename+0x1b4>
8000a9f4:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:883
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, &slot,
				      NULL)) != 0) {
		return ret;
	}
	if ((ret =
8000a9f8:	02802021 	move	a0,s4
8000a9fc:	02002821 	move	a1,s0
8000aa00:	02603021 	move	a2,s3
8000aa04:	00003821 	move	a3,zero
8000aa08:	afa00010 	sw	zero,16(sp)
8000aa0c:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
8000aa10:	afa00014 	sw	zero,20(sp)
8000aa14:	0040a821 	move	s5,v0
8000aa18:	2402fffe 	li	v0,-2
8000aa1c:	12a20046 	beq	s5,v0,8000ab38 <sfs_rename+0x460>
8000aa20:	2402ffef 	li	v0,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:886
	     sfs_dirent_search_nolock(sfs, sin, new_name, NULL, NULL,
				      NULL)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000aa24:	08002a23 	j	8000a88c <sfs_rename+0x1b4>
8000aa28:	0055a80a 	movz	s5,v0,s5
sfs_rename2_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:902
	if ((ret =
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, &slot1,
				      NULL)) != 0) {
		return ret;
	}
	if ((ret =
8000aa2c:	27a2001c 	addiu	v0,sp,28
8000aa30:	02802021 	move	a0,s4
8000aa34:	02402821 	move	a1,s2
8000aa38:	02603021 	move	a2,s3
8000aa3c:	00003821 	move	a3,zero
8000aa40:	afa00010 	sw	zero,16(sp)
8000aa44:	0c001e77 	jal	800079dc <sfs_dirent_search_nolock>
8000aa48:	afa20014 	sw	v0,20(sp)
8000aa4c:	0040a821 	move	s5,v0
8000aa50:	2402fffe 	li	v0,-2
8000aa54:	12a20007 	beq	s5,v0,8000aa74 <sfs_rename+0x39c>
8000aa58:	2402ffef 	li	v0,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:905
	     sfs_dirent_search_nolock(sfs, newsin, new_name, NULL, NULL,
				      &slot2)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000aa5c:	08002a21 	j	8000a884 <sfs_rename+0x1ac>
8000aa60:	0055a80a 	movz	s5,v0,s5
trylock_sin():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000aa64:	0c00670f 	jal	80019c3c <up>
8000aa68:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:905
		return ret;
	}
	if ((ret =
	     sfs_dirent_search_nolock(sfs, newsin, new_name, NULL, NULL,
				      &slot2)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000aa6c:	08002a23 	j	8000a88c <sfs_rename+0x1b4>
8000aa70:	2415fffe 	li	s5,-2
sfs_rename2_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:909
	}

	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
8000aa74:	8fa60020 	lw	a2,32(sp)
8000aa78:	02802021 	move	a0,s4
8000aa7c:	0c002502 	jal	80009408 <sfs_load_inode>
8000aa80:	27a50018 	addiu	a1,sp,24
8000aa84:	1440ff7f 	bnez	v0,8000a884 <sfs_rename+0x1ac>
8000aa88:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:913
		return ret;
	}

	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000aa8c:	8fbe0018 	lw	s8,24(sp)
8000aa90:	13c00063 	beqz	s8,8000ac20 <sfs_rename+0x548>
8000aa94:	24021237 	li	v0,4663
8000aa98:	8fc30038 	lw	v1,56(s8)
8000aa9c:	14620060 	bne	v1,v0,8000ac20 <sfs_rename+0x548>
8000aaa0:	8fa60024 	lw	a2,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:914
	if ((ret = sfs_dirent_unlink_nolock(sfs, sin, slot1, lnksin)) != 0) {
8000aaa4:	02802021 	move	a0,s4
8000aaa8:	02002821 	move	a1,s0
8000aaac:	0c0020ef 	jal	800083bc <sfs_dirent_unlink_nolock>
8000aab0:	03c03821 	move	a3,s8
8000aab4:	1440001c 	bnez	v0,8000ab28 <sfs_rename+0x450>
8000aab8:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:918
		goto out;
	}

	int isdir = (lnksin->din->type == SFS_TYPE_DIR);
8000aabc:	8fc20000 	lw	v0,0(s8)
8000aac0:	94430008 	lhu	v1,8(v0)
8000aac4:	38630002 	xori	v1,v1,0x2
8000aac8:	2c630001 	sltiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:921

	/* remove '..' link from old parent */
	if (isdir) {
8000aacc:	54600044 	bnezl	v1,8000abe0 <sfs_rename+0x508>
8000aad0:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:926
		sfs_nlinks_dec_nolock(sin);
	}

	/* if link fails try to recover its old link */
	if ((ret =
8000aad4:	8fa6001c 	lw	a2,28(sp)
8000aad8:	02802021 	move	a0,s4
8000aadc:	02402821 	move	a1,s2
8000aae0:	03c03821 	move	a3,s8
8000aae4:	afa30028 	sw	v1,40(sp)
8000aae8:	0c002115 	jal	80008454 <sfs_dirent_link_nolock>
8000aaec:	afb30010 	sw	s3,16(sp)
8000aaf0:	0040a821 	move	s5,v0
8000aaf4:	1440002a 	bnez	v0,8000aba0 <sfs_rename+0x4c8>
8000aaf8:	8fa30028 	lw	v1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:938
			}
		}
		goto out;
	}

	if (isdir) {
8000aafc:	1060000a 	beqz	v1,8000ab28 <sfs_rename+0x450>
8000ab00:	24020001 	li	v0,1
sfs_nlinks_inc_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
8000ab04:	8e430000 	lw	v1,0(s2)
sfs_dirinfo_set_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:754

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
8000ab08:	8fc40000 	lw	a0,0(s8)
8000ab0c:	8e450004 	lw	a1,4(s2)
sfs_nlinks_inc_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
8000ab10:	9466000a 	lhu	a2,10(v1)
8000ab14:	ae42000c 	sw	v0,12(s2)
8000ab18:	24c60001 	addiu	a2,a2,1
8000ab1c:	a466000a 	sh	a2,10(v1)
sfs_dirinfo_set_parent():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:753
}

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
8000ab20:	afc2000c 	sw	v0,12(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:754
	sin->din->dirinfo.parent = parent->ino;
8000ab24:	ac850004 	sw	a1,4(a0)
sfs_rename2_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:947
		/* update parent relationship */
		sfs_dirinfo_set_parent(lnksin, newsin);
	}

out:
	vop_ref_dec(link_node);
8000ab28:	0c001164 	jal	80004590 <inode_ref_dec>
8000ab2c:	8fa40018 	lw	a0,24(sp)
8000ab30:	08002a21 	j	8000a884 <sfs_rename+0x1ac>
8000ab34:	00000000 	nop
sfs_rename1_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:888
	if ((ret =
	     sfs_dirent_search_nolock(sfs, sin, new_name, NULL, NULL,
				      NULL)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
	}
	return sfs_dirent_write_nolock(sfs, sin, slot, ino, new_name);
8000ab38:	8fa60024 	lw	a2,36(sp)
8000ab3c:	8fa70020 	lw	a3,32(sp)
8000ab40:	02802021 	move	a0,s4
8000ab44:	02002821 	move	a1,s0
8000ab48:	0c001ed2 	jal	80007b48 <sfs_dirent_write_nolock>
8000ab4c:	afb30010 	sw	s3,16(sp)
8000ab50:	08002a23 	j	8000a88c <sfs_rename+0x1b4>
8000ab54:	0040a821 	move	s5,v0
sfs_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:966
	}
	if (strcmp(new_name, ".") == 0 || strcmp(new_name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode), *newsin =
8000ab58:	24841ba0 	addiu	a0,a0,7072
8000ab5c:	240503c6 	li	a1,966
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:967
	    vop_info(new_node, sfs_inode);
8000ab60:	3c068002 	lui	a2,0x8002
8000ab64:	3c078002 	lui	a3,0x8002
8000ab68:	24c609b0 	addiu	a2,a2,2480
8000ab6c:	0c006afd 	jal	8001abf4 <__panic>
8000ab70:	24e71bac 	addiu	a3,a3,7084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:965
		return -E_INVAL;
	}
	if (strcmp(new_name, ".") == 0 || strcmp(new_name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000ab74:	3c048002 	lui	a0,0x8002
8000ab78:	3c068002 	lui	a2,0x8002
8000ab7c:	3c078002 	lui	a3,0x8002
8000ab80:	24841ba0 	addiu	a0,a0,7072
8000ab84:	240503c5 	li	a1,965
8000ab88:	24c609b0 	addiu	a2,a2,2480
8000ab8c:	0c006afd 	jal	8001abf4 <__panic>
8000ab90:	24e719fc 	addiu	a3,a3,6652
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:967
	struct sfs_inode *sin = vop_info(node, sfs_inode), *newsin =
	    vop_info(new_node, sfs_inode);
8000ab94:	24841ba0 	addiu	a0,a0,7072
8000ab98:	08002ad8 	j	8000ab60 <sfs_rename+0x488>
8000ab9c:	240503c7 	li	a1,967
sfs_rename2_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:929

	/* if link fails try to recover its old link */
	if ((ret =
	     sfs_dirent_link_nolock(sfs, newsin, slot2, lnksin,
				    new_name)) != 0) {
		if (sfs_dirent_link_nolock_check(sfs, sin, slot1, lnksin, name)
8000aba0:	8fa60024 	lw	a2,36(sp)
8000aba4:	02802021 	move	a0,s4
8000aba8:	02002821 	move	a1,s0
8000abac:	03c03821 	move	a3,s8
8000abb0:	0c002115 	jal	80008454 <sfs_dirent_link_nolock>
8000abb4:	afb10010 	sw	s1,16(sp)
8000abb8:	14400010 	bnez	v0,8000abfc <sfs_rename+0x524>
8000abbc:	8fa30028 	lw	v1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:931
		    == 0) {
			if (isdir) {
8000abc0:	1060ffd9 	beqz	v1,8000ab28 <sfs_rename+0x450>
8000abc4:	24030001 	li	v1,1
sfs_nlinks_inc_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
8000abc8:	8e020000 	lw	v0,0(s0)
8000abcc:	ae03000c 	sw	v1,12(s0)
8000abd0:	9443000a 	lhu	v1,10(v0)
8000abd4:	24630001 	addiu	v1,v1,1
8000abd8:	08002aca 	j	8000ab28 <sfs_rename+0x450>
8000abdc:	a443000a 	sh	v1,10(v0)
sfs_nlinks_dec_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:746
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000abe0:	9444000a 	lhu	a0,10(v0)
8000abe4:	10800012 	beqz	a0,8000ac30 <sfs_rename+0x558>
8000abe8:	2484ffff 	addiu	a0,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:747
	sin->dirty = 1, --sin->din->nlinks;
8000abec:	24050001 	li	a1,1
8000abf0:	ae05000c 	sw	a1,12(s0)
8000abf4:	08002ab5 	j	8000aad4 <sfs_rename+0x3fc>
8000abf8:	a444000a 	sh	a0,10(v0)
sfs_rename2_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:929

	/* if link fails try to recover its old link */
	if ((ret =
	     sfs_dirent_link_nolock(sfs, newsin, slot2, lnksin,
				    new_name)) != 0) {
		if (sfs_dirent_link_nolock_check(sfs, sin, slot1, lnksin, name)
8000abfc:	3c048002 	lui	a0,0x8002
8000ac00:	3c068002 	lui	a2,0x8002
8000ac04:	24841ba0 	addiu	a0,a0,7072
8000ac08:	240503a1 	li	a1,929
8000ac0c:	24c61fa8 	addiu	a2,a2,8104
8000ac10:	0c006b1d 	jal	8001ac74 <__warn>
8000ac14:	00403821 	move	a3,v0
8000ac18:	08002aca 	j	8000ab28 <sfs_rename+0x450>
8000ac1c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:913
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
		return ret;
	}

	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000ac20:	3c048002 	lui	a0,0x8002
8000ac24:	24841ba0 	addiu	a0,a0,7072
8000ac28:	08002ad8 	j	8000ab60 <sfs_rename+0x488>
8000ac2c:	24050391 	li	a1,913
sfs_nlinks_dec_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000ac30:	3c048002 	lui	a0,0x8002
8000ac34:	3c068002 	lui	a2,0x8002
8000ac38:	3c078002 	lui	a3,0x8002
8000ac3c:	24841ba0 	addiu	a0,a0,7072
8000ac40:	240502ea 	li	a1,746
8000ac44:	24c609b0 	addiu	a2,a2,2480
8000ac48:	0c006afd 	jal	8001abf4 <__panic>
8000ac4c:	24e71f90 	addiu	a3,a3,8080

8000ac50 <sfs_rwblock_nolock>:
sfs_rwblock_nolock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:12
#include <assert.h>

static int
sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write,
		   bool check)
{
8000ac50:	27bdffd0 	addiu	sp,sp,-48
8000ac54:	afb10028 	sw	s1,40(sp)
8000ac58:	afb00024 	sw	s0,36(sp)
8000ac5c:	afbf002c 	sw	ra,44(sp)
8000ac60:	00c01021 	move	v0,a2
8000ac64:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:13
	assert((blkno != 0 || !check) && blkno < sfs->super.blocks);
8000ac68:	14c00004 	bnez	a2,8000ac7c <sfs_rwblock_nolock+0x2c>
8000ac6c:	00e08821 	move	s1,a3
8000ac70:	8fa30040 	lw	v1,64(sp)
8000ac74:	14600013 	bnez	v1,8000acc4 <sfs_rwblock_nolock+0x74>
8000ac78:	3c048002 	lui	a0,0x8002
8000ac7c:	8e030004 	lw	v1,4(s0)
8000ac80:	0043182b 	sltu	v1,v0,v1
8000ac84:	1060000e 	beqz	v1,8000acc0 <sfs_rwblock_nolock+0x70>
8000ac88:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:14
	struct iobuf __iob, *iob =
8000ac8c:	24061000 	li	a2,4096
8000ac90:	0c00333a 	jal	8000cce8 <iobuf_init>
8000ac94:	00023b00 	sll	a3,v0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:16
	    iobuf_init(&__iob, buf, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(sfs->dev, iob, write);
8000ac98:	8e04002c 	lw	a0,44(s0)
8000ac9c:	00402821 	move	a1,v0
8000aca0:	8c820028 	lw	v0,40(a0)
8000aca4:	0040f809 	jalr	v0
8000aca8:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:17
}
8000acac:	8fbf002c 	lw	ra,44(sp)
8000acb0:	8fb10028 	lw	s1,40(sp)
8000acb4:	8fb00024 	lw	s0,36(sp)
8000acb8:	03e00008 	jr	ra
8000acbc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:13

static int
sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write,
		   bool check)
{
	assert((blkno != 0 || !check) && blkno < sfs->super.blocks);
8000acc0:	3c048002 	lui	a0,0x8002
8000acc4:	3c068002 	lui	a2,0x8002
8000acc8:	3c078002 	lui	a3,0x8002
8000accc:	24841fc4 	addiu	a0,a0,8132
8000acd0:	2405000d 	li	a1,13
8000acd4:	24c609b0 	addiu	a2,a2,2480
8000acd8:	0c006afd 	jal	8001abf4 <__panic>
8000acdc:	24e71fd0 	addiu	a3,a3,8144

8000ace0 <sfs_rwblock>:
sfs_rwblock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:22
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
	    bool write)
{
8000ace0:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:23
	int ret = 0;
8000ace4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:22
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
	    bool write)
{
8000ace8:	afb30030 	sw	s3,48(sp)
8000acec:	afb2002c 	sw	s2,44(sp)
8000acf0:	afb10028 	sw	s1,40(sp)
8000acf4:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:24
	int ret = 0;
	lock_sfs_io(sfs);
8000acf8:	afa2001c 	sw	v0,28(sp)
8000acfc:	afa70018 	sw	a3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:22
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
	    bool write)
{
8000ad00:	afbf003c 	sw	ra,60(sp)
8000ad04:	afb50038 	sw	s5,56(sp)
8000ad08:	afb40034 	sw	s4,52(sp)
8000ad0c:	00809021 	move	s2,a0
8000ad10:	00a08821 	move	s1,a1
8000ad14:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:24
	int ret = 0;
	lock_sfs_io(sfs);
8000ad18:	0c002c3f 	jal	8000b0fc <lock_sfs_io>
8000ad1c:	8fb30050 	lw	s3,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:26
	{
		while (nblks != 0) {
8000ad20:	8fa70018 	lw	a3,24(sp)
8000ad24:	10e0000e 	beqz	a3,8000ad60 <sfs_rwblock+0x80>
8000ad28:	8fa2001c 	lw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:20
	    iobuf_init(&__iob, buf, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(sfs->dev, iob, write);
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
8000ad2c:	00f0a821 	addu	s5,a3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:27
{
	int ret = 0;
	lock_sfs_io(sfs);
	{
		while (nblks != 0) {
			if ((ret =
8000ad30:	08002b50 	j	8000ad40 <sfs_rwblock+0x60>
8000ad34:	24140001 	li	s4,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:26
	    bool write)
{
	int ret = 0;
	lock_sfs_io(sfs);
	{
		while (nblks != 0) {
8000ad38:	12150009 	beq	s0,s5,8000ad60 <sfs_rwblock+0x80>
8000ad3c:	26311000 	addiu	s1,s1,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:27
			if ((ret =
8000ad40:	02003021 	move	a2,s0
8000ad44:	02202821 	move	a1,s1
8000ad48:	02402021 	move	a0,s2
8000ad4c:	02603821 	move	a3,s3
8000ad50:	0c002b14 	jal	8000ac50 <sfs_rwblock_nolock>
8000ad54:	afb40010 	sw	s4,16(sp)
8000ad58:	1040fff7 	beqz	v0,8000ad38 <sfs_rwblock+0x58>
8000ad5c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:36
			}
			blkno++, nblks--;
			buf += SFS_BLKSIZE;
		}
	}
	unlock_sfs_io(sfs);
8000ad60:	02402021 	move	a0,s2
8000ad64:	0c002c45 	jal	8000b114 <unlock_sfs_io>
8000ad68:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:38
	return ret;
}
8000ad6c:	8fbf003c 	lw	ra,60(sp)
8000ad70:	8fa2001c 	lw	v0,28(sp)
8000ad74:	8fb50038 	lw	s5,56(sp)
8000ad78:	8fb40034 	lw	s4,52(sp)
8000ad7c:	8fb30030 	lw	s3,48(sp)
8000ad80:	8fb2002c 	lw	s2,44(sp)
8000ad84:	8fb10028 	lw	s1,40(sp)
8000ad88:	8fb00024 	lw	s0,36(sp)
8000ad8c:	03e00008 	jr	ra
8000ad90:	27bd0040 	addiu	sp,sp,64

8000ad94 <sfs_rblock>:
sfs_rblock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:41

int sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks)
{
8000ad94:	27bdffe0 	addiu	sp,sp,-32
8000ad98:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:42
	return sfs_rwblock(sfs, buf, blkno, nblks, 0);
8000ad9c:	0c002b38 	jal	8000ace0 <sfs_rwblock>
8000ada0:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:43
}
8000ada4:	8fbf001c 	lw	ra,28(sp)
8000ada8:	03e00008 	jr	ra
8000adac:	27bd0020 	addiu	sp,sp,32

8000adb0 <sfs_wblock>:
sfs_wblock():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:46

int sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks)
{
8000adb0:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:47
	return sfs_rwblock(sfs, buf, blkno, nblks, 1);
8000adb4:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:46
{
	return sfs_rwblock(sfs, buf, blkno, nblks, 0);
}

int sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks)
{
8000adb8:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:47
	return sfs_rwblock(sfs, buf, blkno, nblks, 1);
8000adbc:	0c002b38 	jal	8000ace0 <sfs_rwblock>
8000adc0:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:48
}
8000adc4:	8fbf001c 	lw	ra,28(sp)
8000adc8:	03e00008 	jr	ra
8000adcc:	27bd0020 	addiu	sp,sp,32

8000add0 <sfs_rbuf>:
sfs_rbuf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:53

int
sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000add0:	27bdffc8 	addiu	sp,sp,-56
8000add4:	afb10024 	sw	s1,36(sp)
8000add8:	8fb10048 	lw	s1,72(sp)
8000addc:	afb3002c 	sw	s3,44(sp)
8000ade0:	afb20028 	sw	s2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:54
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000ade4:	2e221000 	sltiu	v0,s1,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:53
}

int
sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000ade8:	afb00020 	sw	s0,32(sp)
8000adec:	afbf0034 	sw	ra,52(sp)
8000adf0:	afb40030 	sw	s4,48(sp)
8000adf4:	00808021 	move	s0,a0
8000adf8:	00a09821 	move	s3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:54
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000adfc:	10400021 	beqz	v0,8000ae84 <sfs_rbuf+0xb4>
8000ae00:	00c09021 	move	s2,a2
8000ae04:	02261021 	addu	v0,s1,a2
8000ae08:	2c421001 	sltiu	v0,v0,4097
8000ae0c:	5040001e 	beqzl	v0,8000ae88 <sfs_rbuf+0xb8>
8000ae10:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:57
	       && offset + len <= SFS_BLKSIZE);
	int ret;
	lock_sfs_io(sfs);
8000ae14:	0c002c3f 	jal	8000b0fc <lock_sfs_io>
8000ae18:	afa70018 	sw	a3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:59
	{
		if ((ret =
8000ae1c:	8fa70018 	lw	a3,24(sp)
8000ae20:	8e050038 	lw	a1,56(s0)
8000ae24:	24020001 	li	v0,1
8000ae28:	00e03021 	move	a2,a3
8000ae2c:	02002021 	move	a0,s0
8000ae30:	00003821 	move	a3,zero
8000ae34:	0c002b14 	jal	8000ac50 <sfs_rwblock_nolock>
8000ae38:	afa20010 	sw	v0,16(sp)
8000ae3c:	14400006 	bnez	v0,8000ae58 <sfs_rbuf+0x88>
8000ae40:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:62
		     sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 0,
					1)) == 0) {
			memcpy(buf, sfs->sfs_buffer + offset, len);
8000ae44:	8e050038 	lw	a1,56(s0)
8000ae48:	02602021 	move	a0,s3
8000ae4c:	02403021 	move	a2,s2
8000ae50:	0c005c6e 	jal	800171b8 <memcpy>
8000ae54:	00b12821 	addu	a1,a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:65
		}
	}
	unlock_sfs_io(sfs);
8000ae58:	0c002c45 	jal	8000b114 <unlock_sfs_io>
8000ae5c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:67
	return ret;
}
8000ae60:	8fbf0034 	lw	ra,52(sp)
8000ae64:	02801021 	move	v0,s4
8000ae68:	8fb3002c 	lw	s3,44(sp)
8000ae6c:	8fb40030 	lw	s4,48(sp)
8000ae70:	8fb20028 	lw	s2,40(sp)
8000ae74:	8fb10024 	lw	s1,36(sp)
8000ae78:	8fb00020 	lw	s0,32(sp)
8000ae7c:	03e00008 	jr	ra
8000ae80:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:54

int
sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000ae84:	3c048002 	lui	a0,0x8002
8000ae88:	3c068002 	lui	a2,0x8002
8000ae8c:	3c078002 	lui	a3,0x8002
8000ae90:	24841fc4 	addiu	a0,a0,8132
8000ae94:	24050037 	li	a1,55
8000ae98:	24c609b0 	addiu	a2,a2,2480
8000ae9c:	0c006afd 	jal	8001abf4 <__panic>
8000aea0:	24e72004 	addiu	a3,a3,8196

8000aea4 <sfs_wbuf>:
sfs_wbuf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:72
}

int
sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000aea4:	27bdffc0 	addiu	sp,sp,-64
8000aea8:	afb10028 	sw	s1,40(sp)
8000aeac:	8fb10050 	lw	s1,80(sp)
8000aeb0:	afb50038 	sw	s5,56(sp)
8000aeb4:	afb30030 	sw	s3,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:73
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000aeb8:	2e221000 	sltiu	v0,s1,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:72
}

int
sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000aebc:	afb2002c 	sw	s2,44(sp)
8000aec0:	afb00024 	sw	s0,36(sp)
8000aec4:	afbf003c 	sw	ra,60(sp)
8000aec8:	afb40034 	sw	s4,52(sp)
8000aecc:	00808021 	move	s0,a0
8000aed0:	00a0a821 	move	s5,a1
8000aed4:	00c09821 	move	s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:73
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000aed8:	10400027 	beqz	v0,8000af78 <sfs_wbuf+0xd4>
8000aedc:	00e09021 	move	s2,a3
8000aee0:	02261021 	addu	v0,s1,a2
8000aee4:	2c421001 	sltiu	v0,v0,4097
8000aee8:	50400024 	beqzl	v0,8000af7c <sfs_wbuf+0xd8>
8000aeec:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:76
	       && offset + len <= SFS_BLKSIZE);
	int ret;
	lock_sfs_io(sfs);
8000aef0:	0c002c3f 	jal	8000b0fc <lock_sfs_io>
8000aef4:	24140001 	li	s4,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:78
	{
		if ((ret =
8000aef8:	8e050038 	lw	a1,56(s0)
8000aefc:	02002021 	move	a0,s0
8000af00:	02403021 	move	a2,s2
8000af04:	00003821 	move	a3,zero
8000af08:	0c002b14 	jal	8000ac50 <sfs_rwblock_nolock>
8000af0c:	afb40010 	sw	s4,16(sp)
8000af10:	5440000d 	bnezl	v0,8000af48 <sfs_wbuf+0xa4>
8000af14:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:81
		     sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 0,
					1)) == 0) {
			memcpy(sfs->sfs_buffer + offset, buf, len);
8000af18:	8e040038 	lw	a0,56(s0)
8000af1c:	02a02821 	move	a1,s5
8000af20:	02603021 	move	a2,s3
8000af24:	0c005c6e 	jal	800171b8 <memcpy>
8000af28:	00912021 	addu	a0,a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:82
			ret =
8000af2c:	8e050038 	lw	a1,56(s0)
8000af30:	02002021 	move	a0,s0
8000af34:	02403021 	move	a2,s2
8000af38:	24070001 	li	a3,1
8000af3c:	0c002b14 	jal	8000ac50 <sfs_rwblock_nolock>
8000af40:	afb40010 	sw	s4,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:87
			    sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1,
					       1);
		}
	}
	unlock_sfs_io(sfs);
8000af44:	02002021 	move	a0,s0
8000af48:	0c002c45 	jal	8000b114 <unlock_sfs_io>
8000af4c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:89
	return ret;
}
8000af50:	8fbf003c 	lw	ra,60(sp)
8000af54:	8fa20018 	lw	v0,24(sp)
8000af58:	8fb50038 	lw	s5,56(sp)
8000af5c:	8fb40034 	lw	s4,52(sp)
8000af60:	8fb30030 	lw	s3,48(sp)
8000af64:	8fb2002c 	lw	s2,44(sp)
8000af68:	8fb10028 	lw	s1,40(sp)
8000af6c:	8fb00024 	lw	s0,36(sp)
8000af70:	03e00008 	jr	ra
8000af74:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:73

int
sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000af78:	3c048002 	lui	a0,0x8002
8000af7c:	3c068002 	lui	a2,0x8002
8000af80:	3c078002 	lui	a3,0x8002
8000af84:	24841fc4 	addiu	a0,a0,8132
8000af88:	2405004a 	li	a1,74
8000af8c:	24c609b0 	addiu	a2,a2,2480
8000af90:	0c006afd 	jal	8001abf4 <__panic>
8000af94:	24e72004 	addiu	a3,a3,8196

8000af98 <sfs_sync_super>:
sfs_sync_super():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:92
	unlock_sfs_io(sfs);
	return ret;
}

int sfs_sync_super(struct sfs_fs *sfs)
{
8000af98:	27bdffd8 	addiu	sp,sp,-40
8000af9c:	afb00020 	sw	s0,32(sp)
8000afa0:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:94
	int ret;
	lock_sfs_io(sfs);
8000afa4:	0c002c3f 	jal	8000b0fc <lock_sfs_io>
8000afa8:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:96
	{
		memset(sfs->sfs_buffer, 0, SFS_BLKSIZE);
8000afac:	8e040038 	lw	a0,56(s0)
8000afb0:	00002821 	move	a1,zero
8000afb4:	0c005c44 	jal	80017110 <memset>
8000afb8:	24061000 	li	a2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:97
		memcpy(sfs->sfs_buffer, &(sfs->super), sizeof(sfs->super));
8000afbc:	8e040038 	lw	a0,56(s0)
8000afc0:	02002821 	move	a1,s0
8000afc4:	0c005c6e 	jal	800171b8 <memcpy>
8000afc8:	2406002c 	li	a2,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:98
		ret =
8000afcc:	8e050038 	lw	a1,56(s0)
8000afd0:	02002021 	move	a0,s0
8000afd4:	00003021 	move	a2,zero
8000afd8:	24070001 	li	a3,1
8000afdc:	0c002b14 	jal	8000ac50 <sfs_rwblock_nolock>
8000afe0:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:102
		    sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1,
				       0);
	}
	unlock_sfs_io(sfs);
8000afe4:	02002021 	move	a0,s0
8000afe8:	0c002c45 	jal	8000b114 <unlock_sfs_io>
8000afec:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:104
	return ret;
}
8000aff0:	8fbf0024 	lw	ra,36(sp)
8000aff4:	8fa20018 	lw	v0,24(sp)
8000aff8:	8fb00020 	lw	s0,32(sp)
8000affc:	03e00008 	jr	ra
8000b000:	27bd0028 	addiu	sp,sp,40

8000b004 <sfs_sync_freemap>:
sfs_sync_freemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:108

int sfs_sync_freemap(struct sfs_fs *sfs)
{
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
8000b004:	8c870004 	lw	a3,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:107
	unlock_sfs_io(sfs);
	return ret;
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
8000b008:	27bdffe0 	addiu	sp,sp,-32
8000b00c:	afb00018 	sw	s0,24(sp)
8000b010:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:109
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b014:	8c840030 	lw	a0,48(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:108
	return ret;
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
8000b018:	24e77fff 	addiu	a3,a3,32767
8000b01c:	00073bc2 	srl	a3,a3,0xf
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:109
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b020:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:107
	unlock_sfs_io(sfs);
	return ret;
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
8000b024:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:109
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b028:	0c001932 	jal	800064c8 <bitmap_getdata>
8000b02c:	afa70010 	sw	a3,16(sp)
8000b030:	02002021 	move	a0,s0
8000b034:	8fa70010 	lw	a3,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:111
			  SFS_BLKN_FREEMAP, nblks);
}
8000b038:	8fbf001c 	lw	ra,28(sp)
8000b03c:	8fb00018 	lw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:109
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b040:	00402821 	move	a1,v0
8000b044:	24060002 	li	a2,2
8000b048:	08002b6c 	j	8000adb0 <sfs_wblock>
8000b04c:	27bd0020 	addiu	sp,sp,32

8000b050 <sfs_clear_block>:
sfs_clear_block():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:114
			  SFS_BLKN_FREEMAP, nblks);
}

int sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks)
{
8000b050:	27bdffd0 	addiu	sp,sp,-48
8000b054:	afb1001c 	sw	s1,28(sp)
8000b058:	00808821 	move	s1,a0
8000b05c:	afb30024 	sw	s3,36(sp)
8000b060:	afb00018 	sw	s0,24(sp)
8000b064:	00c09821 	move	s3,a2
8000b068:	afbf002c 	sw	ra,44(sp)
8000b06c:	afb40028 	sw	s4,40(sp)
8000b070:	afb20020 	sw	s2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:116
	int ret;
	lock_sfs_io(sfs);
8000b074:	0c002c3f 	jal	8000b0fc <lock_sfs_io>
8000b078:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:118
	{
		memset(sfs->sfs_buffer, 0, SFS_BLKSIZE);
8000b07c:	8e240038 	lw	a0,56(s1)
8000b080:	00002821 	move	a1,zero
8000b084:	0c005c44 	jal	80017110 <memset>
8000b088:	24061000 	li	a2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:119
		while (nblks != 0) {
8000b08c:	1260000e 	beqz	s3,8000b0c8 <sfs_clear_block+0x78>
8000b090:	02709821 	addu	s3,s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:120
			if ((ret =
8000b094:	08002c29 	j	8000b0a4 <sfs_clear_block+0x54>
8000b098:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:119
{
	int ret;
	lock_sfs_io(sfs);
	{
		memset(sfs->sfs_buffer, 0, SFS_BLKSIZE);
		while (nblks != 0) {
8000b09c:	1213000a 	beq	s0,s3,8000b0c8 <sfs_clear_block+0x78>
8000b0a0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:120
			if ((ret =
8000b0a4:	8e250038 	lw	a1,56(s1)
8000b0a8:	02003021 	move	a2,s0
8000b0ac:	02202021 	move	a0,s1
8000b0b0:	24070001 	li	a3,1
8000b0b4:	0c002b14 	jal	8000ac50 <sfs_rwblock_nolock>
8000b0b8:	afb20010 	sw	s2,16(sp)
8000b0bc:	0040a021 	move	s4,v0
8000b0c0:	1040fff6 	beqz	v0,8000b09c <sfs_clear_block+0x4c>
8000b0c4:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:128
				break;
			}
			blkno++, nblks--;
		}
	}
	unlock_sfs_io(sfs);
8000b0c8:	0c002c45 	jal	8000b114 <unlock_sfs_io>
8000b0cc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_io.c:130
	return ret;
}
8000b0d0:	8fbf002c 	lw	ra,44(sp)
8000b0d4:	02801021 	move	v0,s4
8000b0d8:	8fb30024 	lw	s3,36(sp)
8000b0dc:	8fb40028 	lw	s4,40(sp)
8000b0e0:	8fb20020 	lw	s2,32(sp)
8000b0e4:	8fb1001c 	lw	s1,28(sp)
8000b0e8:	8fb00018 	lw	s0,24(sp)
8000b0ec:	03e00008 	jr	ra
8000b0f0:	27bd0030 	addiu	sp,sp,48

8000b0f4 <lock_sfs_fs>:
lock_sfs_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_lock.c:7
#include <sem.h>
#include <sfs.h>

void lock_sfs_fs(struct sfs_fs *sfs)
{
	down(&(sfs->fs_sem));
8000b0f4:	08006711 	j	80019c44 <down>
8000b0f8:	2484003c 	addiu	a0,a0,60

8000b0fc <lock_sfs_io>:
lock_sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_lock.c:12
}

void lock_sfs_io(struct sfs_fs *sfs)
{
	down(&(sfs->io_sem));
8000b0fc:	08006711 	j	80019c44 <down>
8000b100:	24840050 	addiu	a0,a0,80

8000b104 <lock_sfs_mutex>:
lock_sfs_mutex():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_lock.c:17
}

void lock_sfs_mutex(struct sfs_fs *sfs)
{
	down(&(sfs->mutex_sem));
8000b104:	08006711 	j	80019c44 <down>
8000b108:	24840064 	addiu	a0,a0,100

8000b10c <unlock_sfs_fs>:
unlock_sfs_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_lock.c:22
}

void unlock_sfs_fs(struct sfs_fs *sfs)
{
	up(&(sfs->fs_sem));
8000b10c:	0800670f 	j	80019c3c <up>
8000b110:	2484003c 	addiu	a0,a0,60

8000b114 <unlock_sfs_io>:
unlock_sfs_io():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_lock.c:27
}

void unlock_sfs_io(struct sfs_fs *sfs)
{
	up(&(sfs->io_sem));
8000b114:	0800670f 	j	80019c3c <up>
8000b118:	24840050 	addiu	a0,a0,80

8000b11c <unlock_sfs_mutex>:
unlock_sfs_mutex():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/sfs_lock.c:32
}

void unlock_sfs_mutex(struct sfs_fs *sfs)
{
	up(&(sfs->mutex_sem));
8000b11c:	0800670f 	j	80019c3c <up>
8000b120:	24840064 	addiu	a0,a0,100

8000b124 <get_filemap>:
get_filemap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:21

#define testfd(fd)                          ((fd) >= 0 && (fd) < FS_STRUCT_NENTRY)

static struct file *get_filemap(void)
{
	struct fs_struct *fs_struct = pls_read(current)->fs_struct;
8000b124:	3c028015 	lui	v0,0x8015
8000b128:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:20
#include <vmm.h>

#define testfd(fd)                          ((fd) >= 0 && (fd) < FS_STRUCT_NENTRY)

static struct file *get_filemap(void)
{
8000b12c:	27bdffe8 	addiu	sp,sp,-24
8000b130:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:21
	struct fs_struct *fs_struct = pls_read(current)->fs_struct;
8000b134:	8c4200bc 	lw	v0,188(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:22
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000b138:	10400007 	beqz	v0,8000b158 <get_filemap+0x34>
8000b13c:	3c048002 	lui	a0,0x8002
atomic_read():
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000b140:	8c430008 	lw	v1,8(v0)
get_filemap():
8000b144:	18600004 	blez	v1,8000b158 <get_filemap+0x34>
8000b148:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:24
	return fs_struct->filemap;
}
8000b14c:	8c420004 	lw	v0,4(v0)
8000b150:	03e00008 	jr	ra
8000b154:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:22
#define testfd(fd)                          ((fd) >= 0 && (fd) < FS_STRUCT_NENTRY)

static struct file *get_filemap(void)
{
	struct fs_struct *fs_struct = pls_read(current)->fs_struct;
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000b158:	3c068002 	lui	a2,0x8002
8000b15c:	3c078002 	lui	a3,0x8002
8000b160:	24842048 	addiu	a0,a0,8264
8000b164:	24050016 	li	a1,22
8000b168:	24c609b0 	addiu	a2,a2,2480
8000b16c:	0c006afd 	jal	8001abf4 <__panic>
8000b170:	24e72050 	addiu	a3,a3,8272

8000b174 <filemap_alloc>:
filemap_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:37
		file->status = FD_NONE, file->fd = fd;
	}
}

static int filemap_alloc(int fd, struct file **file_store)
{
8000b174:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:38
	struct file *file = get_filemap();
8000b178:	afa40010 	sw	a0,16(sp)
8000b17c:	afa50014 	sw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:37
		file->status = FD_NONE, file->fd = fd;
	}
}

static int filemap_alloc(int fd, struct file **file_store)
{
8000b180:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:38
	struct file *file = get_filemap();
8000b184:	0c002c49 	jal	8000b124 <get_filemap>
8000b188:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:39
	if (fd == NO_FD) {
8000b18c:	8fa40010 	lw	a0,16(sp)
8000b190:	3c03ffff 	lui	v1,0xffff
8000b194:	24636ad9 	addiu	v1,v1,27353
8000b198:	10830014 	beq	a0,v1,8000b1ec <filemap_alloc+0x78>
8000b19c:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:47
				goto found;
			}
		}
		return -E_MAX_OPEN;
	} else {
		if (testfd(fd)) {
8000b1a0:	2c830123 	sltiu	v1,a0,291
8000b1a4:	1060001e 	beqz	v1,8000b220 <filemap_alloc+0xac>
8000b1a8:	00041880 	sll	v1,a0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:48
			file += fd;
8000b1ac:	00042140 	sll	a0,a0,0x5
8000b1b0:	00832023 	subu	a0,a0,v1
8000b1b4:	00442021 	addu	a0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:49
			if (file->status == FD_NONE) {
8000b1b8:	8c820000 	lw	v0,0(a0)
8000b1bc:	14400008 	bnez	v0,8000b1e0 <filemap_alloc+0x6c>
8000b1c0:	2402fff0 	li	v0,-16
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000b1c4:	8c820018 	lw	v0,24(a0)
filemap_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:57
			return -E_BUSY;
		}
		return -E_INVAL;
	}
found:
	assert(fopen_count(file) == 0);
8000b1c8:	14400017 	bnez	v0,8000b228 <filemap_alloc+0xb4>
8000b1cc:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:58
	file->status = FD_INIT, file->node = NULL;
8000b1d0:	ac820000 	sw	v0,0(a0)
8000b1d4:	ac800014 	sw	zero,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:60
	*file_store = file;
	return 0;
8000b1d8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:59
		return -E_INVAL;
	}
found:
	assert(fopen_count(file) == 0);
	file->status = FD_INIT, file->node = NULL;
	*file_store = file;
8000b1dc:	aca40000 	sw	a0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:61
	return 0;
}
8000b1e0:	8fbf001c 	lw	ra,28(sp)
8000b1e4:	03e00008 	jr	ra
8000b1e8:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:41
static int filemap_alloc(int fd, struct file **file_store)
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
			if (file->status == FD_NONE) {
8000b1ec:	8c430000 	lw	v1,0(v0)
8000b1f0:	1060fff4 	beqz	v1,8000b1c4 <filemap_alloc+0x50>
8000b1f4:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:40

static int filemap_alloc(int fd, struct file **file_store)
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b1f8:	2444001c 	addiu	a0,v0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:36
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
	}
}

static int filemap_alloc(int fd, struct file **file_store)
8000b1fc:	24421fd4 	addiu	v0,v0,8148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:41
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
			if (file->status == FD_NONE) {
8000b200:	8c830000 	lw	v1,0(a0)
8000b204:	1060ffef 	beqz	v1,8000b1c4 <filemap_alloc+0x50>
8000b208:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:40

static int filemap_alloc(int fd, struct file **file_store)
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b20c:	2484001c 	addiu	a0,a0,28
8000b210:	5482fffc 	bnel	a0,v0,8000b204 <filemap_alloc+0x90>
8000b214:	8c830000 	lw	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:45
			if (file->status == FD_NONE) {
				goto found;
			}
		}
		return -E_MAX_OPEN;
8000b218:	08002c78 	j	8000b1e0 <filemap_alloc+0x6c>
8000b21c:	2402ffe8 	li	v0,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:54
			if (file->status == FD_NONE) {
				goto found;
			}
			return -E_BUSY;
		}
		return -E_INVAL;
8000b220:	08002c78 	j	8000b1e0 <filemap_alloc+0x6c>
8000b224:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:57
	}
found:
	assert(fopen_count(file) == 0);
8000b228:	3c048002 	lui	a0,0x8002
8000b22c:	3c068002 	lui	a2,0x8002
8000b230:	3c078002 	lui	a3,0x8002
8000b234:	24842048 	addiu	a0,a0,8264
8000b238:	24050039 	li	a1,57
8000b23c:	24c609b0 	addiu	a2,a2,2480
8000b240:	0c006afd 	jal	8001abf4 <__panic>
8000b244:	24e72080 	addiu	a3,a3,8320

8000b248 <filemap_free>:
filemap_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:65
	return 0;
}

static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b248:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:64
	*file_store = file;
	return 0;
}

static void filemap_free(struct file *file)
{
8000b24c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:65
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b250:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:64
	*file_store = file;
	return 0;
}

static void filemap_free(struct file *file)
{
8000b254:	afb00010 	sw	s0,16(sp)
8000b258:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:65
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b25c:	10430004 	beq	v0,v1,8000b270 <filemap_free+0x28>
8000b260:	00808021 	move	s0,a0
8000b264:	24030003 	li	v1,3
8000b268:	54430019 	bnel	v0,v1,8000b2d0 <filemap_free+0x88>
8000b26c:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000b270:	8e030018 	lw	v1,24(s0)
filemap_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:66
	assert(fopen_count(file) == 0);
8000b274:	1460000e 	bnez	v1,8000b2b0 <filemap_free+0x68>
8000b278:	24030003 	li	v1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:67
	if (file->status == FD_CLOSED) {
8000b27c:	10430005 	beq	v0,v1,8000b294 <filemap_free+0x4c>
8000b280:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:70
		vfs_close(file->node);
	}
	file->status = FD_NONE;
8000b284:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:71
}
8000b288:	8fb00010 	lw	s0,16(sp)
8000b28c:	03e00008 	jr	ra
8000b290:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:68
static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
	assert(fopen_count(file) == 0);
	if (file->status == FD_CLOSED) {
		vfs_close(file->node);
8000b294:	0c0015a0 	jal	80005680 <vfs_close>
8000b298:	8e040014 	lw	a0,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:71
	}
	file->status = FD_NONE;
}
8000b29c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:70
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
	assert(fopen_count(file) == 0);
	if (file->status == FD_CLOSED) {
		vfs_close(file->node);
	}
	file->status = FD_NONE;
8000b2a0:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:71
}
8000b2a4:	8fb00010 	lw	s0,16(sp)
8000b2a8:	03e00008 	jr	ra
8000b2ac:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:66
}

static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
	assert(fopen_count(file) == 0);
8000b2b0:	3c048002 	lui	a0,0x8002
8000b2b4:	3c068002 	lui	a2,0x8002
8000b2b8:	3c078002 	lui	a3,0x8002
8000b2bc:	24842048 	addiu	a0,a0,8264
8000b2c0:	24050042 	li	a1,66
8000b2c4:	24c609b0 	addiu	a2,a2,2480
8000b2c8:	0c006afd 	jal	8001abf4 <__panic>
8000b2cc:	24e72080 	addiu	a3,a3,8320
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:65
	return 0;
}

static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b2d0:	3c068002 	lui	a2,0x8002
8000b2d4:	3c078002 	lui	a3,0x8002
8000b2d8:	24842048 	addiu	a0,a0,8264
8000b2dc:	24050041 	li	a1,65
8000b2e0:	24c609b0 	addiu	a2,a2,2480
8000b2e4:	0c006afd 	jal	8001abf4 <__panic>
8000b2e8:	24e72098 	addiu	a3,a3,8344

8000b2ec <filemap_init>:
filemap_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:30

void filemap_init(struct file *filemap)
{
	int fd;
	struct file *file = filemap;
	for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b2ec:	00001021 	move	v0,zero
8000b2f0:	24030123 	li	v1,291
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:32
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
8000b2f4:	ac82000c 	sw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:30

void filemap_init(struct file *filemap)
{
	int fd;
	struct file *file = filemap;
	for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b2f8:	24420001 	addiu	v0,v0,1
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8000b2fc:	ac800018 	sw	zero,24(a0)
filemap_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:32
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
8000b300:	ac800000 	sw	zero,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:30

void filemap_init(struct file *filemap)
{
	int fd;
	struct file *file = filemap;
	for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b304:	1443fffb 	bne	v0,v1,8000b2f4 <filemap_init+0x8>
8000b308:	2484001c 	addiu	a0,a0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:34
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
	}
}
8000b30c:	03e00008 	jr	ra
8000b310:	00000000 	nop

8000b314 <filemap_acquire>:
filemap_acquire():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:75
	file->status = FD_NONE;
}

void filemap_acquire(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b314:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:74
	}
	file->status = FD_NONE;
}

void filemap_acquire(struct file *file)
{
8000b318:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:75
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b31c:	2442fffe 	addiu	v0,v0,-2
8000b320:	2c420002 	sltiu	v0,v0,2
8000b324:	1040001b 	beqz	v0,8000b394 <filemap_acquire+0x80>
8000b328:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b32c:	40026000 	mfc0	v0,c0_status
8000b330:	30420001 	andi	v0,v0,0x1
8000b334:	14400009 	bnez	v0,8000b35c <filemap_acquire+0x48>
8000b338:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b33c:	8c820018 	lw	v0,24(a0)
filemap_acquire():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:77
	fopen_count_inc(file);
}
8000b340:	8fbf001c 	lw	ra,28(sp)
8000b344:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000b348:	24420001 	addiu	v0,v0,1
8000b34c:	ac820018 	sw	v0,24(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b350:	8c820018 	lw	v0,24(a0)
filemap_acquire():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:77
8000b354:	03e00008 	jr	ra
8000b358:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b35c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000b360:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b364:	8fa40010 	lw	a0,16(sp)
8000b368:	8c820018 	lw	v0,24(a0)
8000b36c:	24420001 	addiu	v0,v0,1
8000b370:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b374:	0c006cba 	jal	8001b2e8 <intr_enable>
8000b378:	00000000 	nop
8000b37c:	8fa40010 	lw	a0,16(sp)
filemap_acquire():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:77
8000b380:	8fbf001c 	lw	ra,28(sp)
8000b384:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b388:	8c820018 	lw	v0,24(a0)
filemap_acquire():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:77
8000b38c:	03e00008 	jr	ra
8000b390:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:75
	file->status = FD_NONE;
}

void filemap_acquire(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b394:	3c048002 	lui	a0,0x8002
8000b398:	3c068002 	lui	a2,0x8002
8000b39c:	3c078002 	lui	a3,0x8002
8000b3a0:	24842048 	addiu	a0,a0,8264
8000b3a4:	2405004b 	li	a1,75
8000b3a8:	24c609b0 	addiu	a2,a2,2480
8000b3ac:	0c006afd 	jal	8001abf4 <__panic>
8000b3b0:	24e720d0 	addiu	a3,a3,8400

8000b3b4 <filemap_release>:
filemap_release():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:81
	fopen_count_inc(file);
}

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b3b4:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:80
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
	fopen_count_inc(file);
}

void filemap_release(struct file *file)
{
8000b3b8:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:81
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b3bc:	2442fffe 	addiu	v0,v0,-2
8000b3c0:	2c420002 	sltiu	v0,v0,2
8000b3c4:	10400025 	beqz	v0,8000b45c <filemap_release+0xa8>
8000b3c8:	afbf001c 	sw	ra,28(sp)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000b3cc:	8c820018 	lw	v0,24(a0)
filemap_release():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:82
	assert(fopen_count(file) > 0);
8000b3d0:	5840001b 	blezl	v0,8000b440 <filemap_release+0x8c>
8000b3d4:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b3d8:	40026000 	mfc0	v0,c0_status
8000b3dc:	30420001 	andi	v0,v0,0x1
8000b3e0:	14400009 	bnez	v0,8000b408 <filemap_release+0x54>
8000b3e4:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b3e8:	8c820018 	lw	v0,24(a0)
8000b3ec:	2442ffff 	addiu	v0,v0,-1
8000b3f0:	ac820018 	sw	v0,24(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b3f4:	8c820018 	lw	v0,24(a0)
filemap_release():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:83
	if (fopen_count_dec(file) == 0) {
8000b3f8:	1040000f 	beqz	v0,8000b438 <filemap_release+0x84>
8000b3fc:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:86
		filemap_free(file);
	}
}
8000b400:	03e00008 	jr	ra
8000b404:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b408:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000b40c:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b410:	8fa40010 	lw	a0,16(sp)
8000b414:	8c820018 	lw	v0,24(a0)
8000b418:	2442ffff 	addiu	v0,v0,-1
8000b41c:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b420:	0c006cba 	jal	8001b2e8 <intr_enable>
8000b424:	00000000 	nop
8000b428:	8fa40010 	lw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b42c:	8c820018 	lw	v0,24(a0)
filemap_release():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:83

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
	assert(fopen_count(file) > 0);
	if (fopen_count_dec(file) == 0) {
8000b430:	1440fff3 	bnez	v0,8000b400 <filemap_release+0x4c>
8000b434:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:84
		filemap_free(file);
8000b438:	08002c92 	j	8000b248 <filemap_free>
8000b43c:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:82
}

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
	assert(fopen_count(file) > 0);
8000b440:	3c068002 	lui	a2,0x8002
8000b444:	3c078002 	lui	a3,0x8002
8000b448:	24842048 	addiu	a0,a0,8264
8000b44c:	24050052 	li	a1,82
8000b450:	24c609b0 	addiu	a2,a2,2480
8000b454:	0c006afd 	jal	8001abf4 <__panic>
8000b458:	24e72108 	addiu	a3,a3,8456
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:81
	fopen_count_inc(file);
}

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b45c:	3c048002 	lui	a0,0x8002
8000b460:	3c068002 	lui	a2,0x8002
8000b464:	3c078002 	lui	a3,0x8002
8000b468:	24842048 	addiu	a0,a0,8264
8000b46c:	24050051 	li	a1,81
8000b470:	24c609b0 	addiu	a2,a2,2480
8000b474:	0c006afd 	jal	8001abf4 <__panic>
8000b478:	24e720d0 	addiu	a3,a3,8400

8000b47c <filemap_open>:
filemap_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:90
	}
}

void filemap_open(struct file *file)
{
	assert((file->status == FD_INIT || file->status == FD_OPENED)
8000b47c:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:89
		filemap_free(file);
	}
}

void filemap_open(struct file *file)
{
8000b480:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:90
	assert((file->status == FD_INIT || file->status == FD_OPENED)
8000b484:	2442ffff 	addiu	v0,v0,-1
8000b488:	2c420002 	sltiu	v0,v0,2
8000b48c:	1040001f 	beqz	v0,8000b50c <filemap_open+0x90>
8000b490:	afbf001c 	sw	ra,28(sp)
8000b494:	8c820014 	lw	v0,20(a0)
8000b498:	1040001c 	beqz	v0,8000b50c <filemap_open+0x90>
8000b49c:	24020002 	li	v0,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:92
	       && file->node != NULL);
	file->status = FD_OPENED;
8000b4a0:	ac820000 	sw	v0,0(a0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b4a4:	40026000 	mfc0	v0,c0_status
8000b4a8:	30420001 	andi	v0,v0,0x1
8000b4ac:	14400009 	bnez	v0,8000b4d4 <filemap_open+0x58>
8000b4b0:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b4b4:	8c820018 	lw	v0,24(a0)
filemap_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:94
	fopen_count_inc(file);
}
8000b4b8:	8fbf001c 	lw	ra,28(sp)
8000b4bc:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000b4c0:	24420001 	addiu	v0,v0,1
8000b4c4:	ac820018 	sw	v0,24(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b4c8:	8c820018 	lw	v0,24(a0)
filemap_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:94
8000b4cc:	03e00008 	jr	ra
8000b4d0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b4d4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000b4d8:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b4dc:	8fa40010 	lw	a0,16(sp)
8000b4e0:	8c820018 	lw	v0,24(a0)
8000b4e4:	24420001 	addiu	v0,v0,1
8000b4e8:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b4ec:	0c006cba 	jal	8001b2e8 <intr_enable>
8000b4f0:	00000000 	nop
8000b4f4:	8fa40010 	lw	a0,16(sp)
filemap_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:94
8000b4f8:	8fbf001c 	lw	ra,28(sp)
8000b4fc:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b500:	8c820018 	lw	v0,24(a0)
filemap_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:94
8000b504:	03e00008 	jr	ra
8000b508:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:90
	}
}

void filemap_open(struct file *file)
{
	assert((file->status == FD_INIT || file->status == FD_OPENED)
8000b50c:	3c048002 	lui	a0,0x8002
8000b510:	3c068002 	lui	a2,0x8002
8000b514:	3c078002 	lui	a3,0x8002
8000b518:	24842048 	addiu	a0,a0,8264
8000b51c:	2405005b 	li	a1,91
8000b520:	24c609b0 	addiu	a2,a2,2480
8000b524:	0c006afd 	jal	8001abf4 <__panic>
8000b528:	24e72120 	addiu	a3,a3,8480

8000b52c <filemap_close>:
filemap_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:98
	fopen_count_inc(file);
}

void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
8000b52c:	8c830000 	lw	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:97
	file->status = FD_OPENED;
	fopen_count_inc(file);
}

void filemap_close(struct file *file)
{
8000b530:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:98
	assert(file->status == FD_OPENED);
8000b534:	24020002 	li	v0,2
8000b538:	14620027 	bne	v1,v0,8000b5d8 <filemap_close+0xac>
8000b53c:	afbf001c 	sw	ra,28(sp)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000b540:	8c820018 	lw	v0,24(a0)
filemap_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:99
	assert(fopen_count(file) > 0);
8000b544:	1840001c 	blez	v0,8000b5b8 <filemap_close+0x8c>
8000b548:	24020003 	li	v0,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:100
	file->status = FD_CLOSED;
8000b54c:	ac820000 	sw	v0,0(a0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b550:	40026000 	mfc0	v0,c0_status
8000b554:	30420001 	andi	v0,v0,0x1
8000b558:	14400009 	bnez	v0,8000b580 <filemap_close+0x54>
8000b55c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b560:	8c820018 	lw	v0,24(a0)
8000b564:	2442ffff 	addiu	v0,v0,-1
8000b568:	ac820018 	sw	v0,24(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b56c:	8c820018 	lw	v0,24(a0)
filemap_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:101
	if (fopen_count_dec(file) == 0) {
8000b570:	1040000f 	beqz	v0,8000b5b0 <filemap_close+0x84>
8000b574:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:104
		filemap_free(file);
	}
}
8000b578:	03e00008 	jr	ra
8000b57c:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b580:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000b584:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b588:	8fa40010 	lw	a0,16(sp)
8000b58c:	8c820018 	lw	v0,24(a0)
8000b590:	2442ffff 	addiu	v0,v0,-1
8000b594:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b598:	0c006cba 	jal	8001b2e8 <intr_enable>
8000b59c:	00000000 	nop
8000b5a0:	8fa40010 	lw	a0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b5a4:	8c820018 	lw	v0,24(a0)
filemap_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:101
void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
	assert(fopen_count(file) > 0);
	file->status = FD_CLOSED;
	if (fopen_count_dec(file) == 0) {
8000b5a8:	1440fff3 	bnez	v0,8000b578 <filemap_close+0x4c>
8000b5ac:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:102
		filemap_free(file);
8000b5b0:	08002c92 	j	8000b248 <filemap_free>
8000b5b4:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:99
}

void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
	assert(fopen_count(file) > 0);
8000b5b8:	3c048002 	lui	a0,0x8002
8000b5bc:	3c068002 	lui	a2,0x8002
8000b5c0:	3c078002 	lui	a3,0x8002
8000b5c4:	24842048 	addiu	a0,a0,8264
8000b5c8:	24050063 	li	a1,99
8000b5cc:	24c609b0 	addiu	a2,a2,2480
8000b5d0:	0c006afd 	jal	8001abf4 <__panic>
8000b5d4:	24e72108 	addiu	a3,a3,8456
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:98
	fopen_count_inc(file);
}

void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
8000b5d8:	3c048002 	lui	a0,0x8002
8000b5dc:	3c068002 	lui	a2,0x8002
8000b5e0:	3c078002 	lui	a3,0x8002
8000b5e4:	24842048 	addiu	a0,a0,8264
8000b5e8:	24050062 	li	a1,98
8000b5ec:	24c609b0 	addiu	a2,a2,2480
8000b5f0:	0c006afd 	jal	8001abf4 <__panic>
8000b5f4:	24e72170 	addiu	a3,a3,8560

8000b5f8 <filemap_dup>:
filemap_dup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:108
	}
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b5f8:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:107
		filemap_free(file);
	}
}

void filemap_dup(struct file *to, struct file *from)
{
8000b5fc:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:108
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b600:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:107
		filemap_free(file);
	}
}

void filemap_dup(struct file *to, struct file *from)
{
8000b604:	afb00014 	sw	s0,20(sp)
8000b608:	afbf001c 	sw	ra,28(sp)
8000b60c:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:108
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b610:	14430017 	bne	v0,v1,8000b670 <filemap_dup+0x78>
8000b614:	00808021 	move	s0,a0
8000b618:	8ca30000 	lw	v1,0(a1)
8000b61c:	24020002 	li	v0,2
8000b620:	54620014 	bnel	v1,v0,8000b674 <filemap_dup+0x7c>
8000b624:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:112
	to->pos = from->pos;
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
8000b628:	8cb10014 	lw	s1,20(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:109
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
	to->pos = from->pos;
8000b62c:	8ca40010 	lw	a0,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:110
	to->readable = from->readable;
8000b630:	8ca30004 	lw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:111
	to->writable = from->writable;
8000b634:	8ca20008 	lw	v0,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:109
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
	to->pos = from->pos;
8000b638:	ae040010 	sw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:110
	to->readable = from->readable;
8000b63c:	ae030004 	sw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:113
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
8000b640:	02202021 	move	a0,s1
8000b644:	0c0010a8 	jal	800042a0 <inode_ref_inc>
8000b648:	ae020008 	sw	v0,8(s0)
8000b64c:	0c0010c9 	jal	80004324 <inode_open_inc>
8000b650:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:114
	to->node = node;
8000b654:	ae110014 	sw	s1,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:115
	filemap_open(to);
8000b658:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:116
}
8000b65c:	8fbf001c 	lw	ra,28(sp)
8000b660:	8fb10018 	lw	s1,24(sp)
8000b664:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:115
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
	to->node = node;
	filemap_open(to);
8000b668:	08002d1f 	j	8000b47c <filemap_open>
8000b66c:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:108
	}
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b670:	3c048002 	lui	a0,0x8002
8000b674:	3c068002 	lui	a2,0x8002
8000b678:	3c078002 	lui	a3,0x8002
8000b67c:	24842048 	addiu	a0,a0,8264
8000b680:	2405006c 	li	a1,108
8000b684:	24c609b0 	addiu	a2,a2,2480
8000b688:	0c006afd 	jal	8001abf4 <__panic>
8000b68c:	24e7218c 	addiu	a3,a3,8588

8000b690 <filemap_dup_close>:
filemap_dup_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:120
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b690:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:119
	to->node = node;
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
8000b694:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:120
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b698:	24030003 	li	v1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:119
	to->node = node;
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
8000b69c:	afb00014 	sw	s0,20(sp)
8000b6a0:	afbf001c 	sw	ra,28(sp)
8000b6a4:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:120
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b6a8:	14430015 	bne	v0,v1,8000b700 <filemap_dup_close+0x70>
8000b6ac:	00808021 	move	s0,a0
8000b6b0:	8ca30000 	lw	v1,0(a1)
8000b6b4:	54620013 	bnel	v1,v0,8000b704 <filemap_dup_close+0x74>
8000b6b8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:124
	to->pos = from->pos;
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
8000b6bc:	8cb10014 	lw	s1,20(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:121
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
	to->pos = from->pos;
8000b6c0:	8ca40010 	lw	a0,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:122
	to->readable = from->readable;
8000b6c4:	8ca30004 	lw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:123
	to->writable = from->writable;
8000b6c8:	8ca20008 	lw	v0,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:121
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
	to->pos = from->pos;
8000b6cc:	ae040010 	sw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:122
	to->readable = from->readable;
8000b6d0:	ae030004 	sw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:125
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
8000b6d4:	02202021 	move	a0,s1
8000b6d8:	0c0010a8 	jal	800042a0 <inode_ref_inc>
8000b6dc:	ae020008 	sw	v0,8(s0)
8000b6e0:	0c0010c9 	jal	80004324 <inode_open_inc>
8000b6e4:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:127
	to->node = node;
}
8000b6e8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:126
	to->pos = from->pos;
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
	to->node = node;
8000b6ec:	ae110014 	sw	s1,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:127
}
8000b6f0:	8fb10018 	lw	s1,24(sp)
8000b6f4:	8fb00014 	lw	s0,20(sp)
8000b6f8:	03e00008 	jr	ra
8000b6fc:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:120
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b700:	3c048002 	lui	a0,0x8002
8000b704:	3c068002 	lui	a2,0x8002
8000b708:	3c078002 	lui	a3,0x8002
8000b70c:	24842048 	addiu	a0,a0,8264
8000b710:	24050078 	li	a1,120
8000b714:	24c609b0 	addiu	a2,a2,2480
8000b718:	0c006afd 	jal	8001abf4 <__panic>
8000b71c:	24e721c0 	addiu	a3,a3,8640

8000b720 <file_testfd>:
file_testfd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:158
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

bool file_testfd(int fd, bool readable, bool writable)
{
8000b720:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b724:	2c820123 	sltiu	v0,a0,291
file_testfd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:158
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

bool file_testfd(int fd, bool readable, bool writable)
{
8000b728:	afb00020 	sw	s0,32(sp)
8000b72c:	afbf0024 	sw	ra,36(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b730:	10400018 	beqz	v0,8000b794 <file_testfd+0x74>
8000b734:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000b738:	afa40010 	sw	a0,16(sp)
8000b73c:	afa50014 	sw	a1,20(sp)
8000b740:	0c002c49 	jal	8000b124 <get_filemap>
8000b744:	afa60018 	sw	a2,24(sp)
8000b748:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000b74c:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000b750:	00043940 	sll	a3,a0,0x5
8000b754:	00041880 	sll	v1,a0,0x2
8000b758:	00e31823 	subu	v1,a3,v1
8000b75c:	00431021 	addu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000b760:	8c470000 	lw	a3,0(v0)
8000b764:	24030002 	li	v1,2
8000b768:	14e3000a 	bne	a3,v1,8000b794 <file_testfd+0x74>
8000b76c:	8fa60018 	lw	a2,24(sp)
8000b770:	8c43000c 	lw	v1,12(v0)
8000b774:	14830008 	bne	a0,v1,8000b798 <file_testfd+0x78>
8000b778:	8fbf0024 	lw	ra,36(sp)
file_testfd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:164
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	if (readable && !file->readable) {
8000b77c:	54a0000a 	bnezl	a1,8000b7a8 <file_testfd+0x88>
8000b780:	8c430004 	lw	v1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:167
		return 0;
	}
	if (writable && !file->writable) {
8000b784:	10c00003 	beqz	a2,8000b794 <file_testfd+0x74>
8000b788:	24100001 	li	s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:157
	}
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

bool file_testfd(int fd, bool readable, bool writable)
8000b78c:	8c500008 	lw	s0,8(v0)
8000b790:	0010802b 	sltu	s0,zero,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:171
	}
	if (writable && !file->writable) {
		return 0;
	}
	return 1;
}
8000b794:	8fbf0024 	lw	ra,36(sp)
8000b798:	02001021 	move	v0,s0
8000b79c:	8fb00020 	lw	s0,32(sp)
8000b7a0:	03e00008 	jr	ra
8000b7a4:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:164
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	if (readable && !file->readable) {
8000b7a8:	1460fff6 	bnez	v1,8000b784 <file_testfd+0x64>
8000b7ac:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:171
	}
	if (writable && !file->writable) {
		return 0;
	}
	return 1;
}
8000b7b0:	02001021 	move	v0,s0
8000b7b4:	8fb00020 	lw	s0,32(sp)
8000b7b8:	03e00008 	jr	ra
8000b7bc:	27bd0028 	addiu	sp,sp,40

8000b7c0 <file_open>:
file_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:174

int file_open(char *path, uint32_t open_flags)
{
8000b7c0:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:176
	bool readable = 0, writable = 0;
	switch (open_flags & O_ACCMODE) {
8000b7c4:	30a20003 	andi	v0,a1,0x3
8000b7c8:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:174
	}
	return 1;
}

int file_open(char *path, uint32_t open_flags)
{
8000b7cc:	afb30034 	sw	s3,52(sp)
8000b7d0:	afb00028 	sw	s0,40(sp)
8000b7d4:	afbf003c 	sw	ra,60(sp)
8000b7d8:	afb40038 	sw	s4,56(sp)
8000b7dc:	afb20030 	sw	s2,48(sp)
8000b7e0:	afb1002c 	sw	s1,44(sp)
8000b7e4:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:176
	bool readable = 0, writable = 0;
	switch (open_flags & O_ACCMODE) {
8000b7e8:	10430046 	beq	v0,v1,8000b904 <file_open+0x144>
8000b7ec:	00809821 	move	s3,a0
8000b7f0:	14400039 	bnez	v0,8000b8d8 <file_open+0x118>
8000b7f4:	24030002 	li	v1,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:175
	return 1;
}

int file_open(char *path, uint32_t open_flags)
{
	bool readable = 0, writable = 0;
8000b7f8:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:178
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		readable = 1;
8000b7fc:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:192
		return -E_INVAL;
	}

	int ret;
	struct file *file;
	if ((ret = filemap_alloc(NO_FD, &file)) != 0) {
8000b800:	3c04ffff 	lui	a0,0xffff
8000b804:	24846ad9 	addiu	a0,a0,27353
8000b808:	0c002c5d 	jal	8000b174 <filemap_alloc>
8000b80c:	27a50014 	addiu	a1,sp,20
8000b810:	14400033 	bnez	v0,8000b8e0 <file_open+0x120>
8000b814:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:197
		return ret;
	}

	struct inode *node;
	if ((ret = vfs_open(path, open_flags, &node)) != 0) {
8000b818:	02602021 	move	a0,s3
8000b81c:	02002821 	move	a1,s0
8000b820:	0c001504 	jal	80005410 <vfs_open>
8000b824:	27a60010 	addiu	a2,sp,16
8000b828:	0040a021 	move	s4,v0
8000b82c:	1440003e 	bnez	v0,8000b928 <file_open+0x168>
8000b830:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:203
		filemap_free(file);
		return ret;
	}

	file->pos = 0;
	if (open_flags & O_APPEND) {
8000b834:	32100400 	andi	s0,s0,0x400
8000b838:	12000017 	beqz	s0,8000b898 <file_open+0xd8>
8000b83c:	ac800010 	sw	zero,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:205
		struct stat __stat, *stat = &__stat;
		if ((ret = vop_fstat(node, stat)) != 0) {
8000b840:	8fb00010 	lw	s0,16(sp)
8000b844:	1200003c 	beqz	s0,8000b938 <file_open+0x178>
8000b848:	3c048002 	lui	a0,0x8002
8000b84c:	8e020048 	lw	v0,72(s0)
8000b850:	1040003a 	beqz	v0,8000b93c <file_open+0x17c>
8000b854:	3c068002 	lui	a2,0x8002
8000b858:	8c420014 	lw	v0,20(v0)
8000b85c:	10400036 	beqz	v0,8000b938 <file_open+0x178>
8000b860:	3c058002 	lui	a1,0x8002
8000b864:	02002021 	move	a0,s0
8000b868:	0c0010e5 	jal	80004394 <inode_check>
8000b86c:	24a52248 	addiu	a1,a1,8776
8000b870:	8e020048 	lw	v0,72(s0)
8000b874:	8fa40010 	lw	a0,16(sp)
8000b878:	8c420014 	lw	v0,20(v0)
8000b87c:	0040f809 	jalr	v0
8000b880:	27a50018 	addiu	a1,sp,24
8000b884:	14400025 	bnez	v0,8000b91c <file_open+0x15c>
8000b888:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:210
			vfs_close(node);
			filemap_free(file);
			return ret;
		}
		file->pos = stat->st_size;
8000b88c:	8fa40014 	lw	a0,20(sp)
8000b890:	8fa20024 	lw	v0,36(sp)
8000b894:	ac820010 	sw	v0,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:213
	}

	file->node = node;
8000b898:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:214
	file->readable = readable;
8000b89c:	ac920004 	sw	s2,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:215
	file->writable = writable;
8000b8a0:	ac910008 	sw	s1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:216
	filemap_open(file);
8000b8a4:	0c002d1f 	jal	8000b47c <filemap_open>
8000b8a8:	ac820014 	sw	v0,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:217
	return file->fd;
8000b8ac:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:218
}
8000b8b0:	8fbf003c 	lw	ra,60(sp)
8000b8b4:	8fb30034 	lw	s3,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:217

	file->node = node;
	file->readable = readable;
	file->writable = writable;
	filemap_open(file);
	return file->fd;
8000b8b8:	8c54000c 	lw	s4,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:218
}
8000b8bc:	8fb20030 	lw	s2,48(sp)
8000b8c0:	8fb1002c 	lw	s1,44(sp)
8000b8c4:	02801021 	move	v0,s4
8000b8c8:	8fb00028 	lw	s0,40(sp)
8000b8cc:	8fb40038 	lw	s4,56(sp)
8000b8d0:	03e00008 	jr	ra
8000b8d4:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:176
}

int file_open(char *path, uint32_t open_flags)
{
	bool readable = 0, writable = 0;
	switch (open_flags & O_ACCMODE) {
8000b8d8:	1043000d 	beq	v0,v1,8000b910 <file_open+0x150>
8000b8dc:	2414ffea 	li	s4,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:218
	file->node = node;
	file->readable = readable;
	file->writable = writable;
	filemap_open(file);
	return file->fd;
}
8000b8e0:	8fbf003c 	lw	ra,60(sp)
8000b8e4:	02801021 	move	v0,s4
8000b8e8:	8fb30034 	lw	s3,52(sp)
8000b8ec:	8fb40038 	lw	s4,56(sp)
8000b8f0:	8fb20030 	lw	s2,48(sp)
8000b8f4:	8fb1002c 	lw	s1,44(sp)
8000b8f8:	8fb00028 	lw	s0,40(sp)
8000b8fc:	03e00008 	jr	ra
8000b900:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:181
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		readable = 1;
		break;
	case O_WRONLY:
		writable = 1;
8000b904:	24110001 	li	s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:175
	return 1;
}

int file_open(char *path, uint32_t open_flags)
{
	bool readable = 0, writable = 0;
8000b908:	08002e00 	j	8000b800 <file_open+0x40>
8000b90c:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:184
		break;
	case O_WRONLY:
		writable = 1;
		break;
	case O_RDWR:
		readable = writable = 1;
8000b910:	24110001 	li	s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:185
		break;
8000b914:	08002e00 	j	8000b800 <file_open+0x40>
8000b918:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:206

	file->pos = 0;
	if (open_flags & O_APPEND) {
		struct stat __stat, *stat = &__stat;
		if ((ret = vop_fstat(node, stat)) != 0) {
			vfs_close(node);
8000b91c:	0c0015a0 	jal	80005680 <vfs_close>
8000b920:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:207
			filemap_free(file);
8000b924:	8fa40014 	lw	a0,20(sp)
8000b928:	0c002c92 	jal	8000b248 <filemap_free>
8000b92c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:208
			return ret;
8000b930:	08002e39 	j	8000b8e4 <file_open+0x124>
8000b934:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:205
	}

	file->pos = 0;
	if (open_flags & O_APPEND) {
		struct stat __stat, *stat = &__stat;
		if ((ret = vop_fstat(node, stat)) != 0) {
8000b938:	3c068002 	lui	a2,0x8002
8000b93c:	3c078002 	lui	a3,0x8002
8000b940:	24842048 	addiu	a0,a0,8264
8000b944:	240500cd 	li	a1,205
8000b948:	24c609b0 	addiu	a2,a2,2480
8000b94c:	0c006afd 	jal	8001abf4 <__panic>
8000b950:	24e721f8 	addiu	a3,a3,8696

8000b954 <file_close>:
file_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:221
	filemap_open(file);
	return file->fd;
}

int file_close(int fd)
{
8000b954:	27bdffe0 	addiu	sp,sp,-32
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b958:	2c820123 	sltiu	v0,a0,291
file_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:221
	filemap_open(file);
	return file->fd;
}

int file_close(int fd)
{
8000b95c:	afb10018 	sw	s1,24(sp)
8000b960:	afb00014 	sw	s0,20(sp)
8000b964:	afbf001c 	sw	ra,28(sp)
8000b968:	00808021 	move	s0,a0
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b96c:	10400010 	beqz	v0,8000b9b0 <file_close+0x5c>
8000b970:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000b974:	0c002c49 	jal	8000b124 <get_filemap>
8000b978:	00000000 	nop
8000b97c:	00101940 	sll	v1,s0,0x5
8000b980:	00102080 	sll	a0,s0,0x2
8000b984:	00642023 	subu	a0,v1,a0
8000b988:	00442021 	addu	a0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000b98c:	8c830000 	lw	v1,0(a0)
8000b990:	24020002 	li	v0,2
8000b994:	14620007 	bne	v1,v0,8000b9b4 <file_close+0x60>
8000b998:	8fbf001c 	lw	ra,28(sp)
8000b99c:	8c82000c 	lw	v0,12(a0)
8000b9a0:	16020005 	bne	s0,v0,8000b9b8 <file_close+0x64>
8000b9a4:	02201021 	move	v0,s1
file_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:227
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_close(file);
8000b9a8:	0c002d4b 	jal	8000b52c <filemap_close>
8000b9ac:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:229
	return 0;
}
8000b9b0:	8fbf001c 	lw	ra,28(sp)
8000b9b4:	02201021 	move	v0,s1
8000b9b8:	8fb00014 	lw	s0,20(sp)
8000b9bc:	8fb10018 	lw	s1,24(sp)
8000b9c0:	03e00008 	jr	ra
8000b9c4:	27bd0020 	addiu	sp,sp,32

8000b9c8 <file_read>:
file_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:232

int file_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000b9c8:	27bdffb8 	addiu	sp,sp,-72
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b9cc:	2c820123 	sltiu	v0,a0,291
file_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:232
	filemap_close(file);
	return 0;
}

int file_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000b9d0:	afb10034 	sw	s1,52(sp)
8000b9d4:	afbf0044 	sw	ra,68(sp)
8000b9d8:	afb40040 	sw	s4,64(sp)
8000b9dc:	afb3003c 	sw	s3,60(sp)
8000b9e0:	afb20038 	sw	s2,56(sp)
8000b9e4:	afb00030 	sw	s0,48(sp)
8000b9e8:	00e08821 	move	s1,a3
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b9ec:	10400040 	beqz	v0,8000baf0 <file_read+0x128>
8000b9f0:	ace00000 	sw	zero,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000b9f4:	afa40020 	sw	a0,32(sp)
8000b9f8:	afa50024 	sw	a1,36(sp)
8000b9fc:	0c002c49 	jal	8000b124 <get_filemap>
8000ba00:	afa60028 	sw	a2,40(sp)
8000ba04:	8fa40020 	lw	a0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000ba08:	8fa50024 	lw	a1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000ba0c:	00048080 	sll	s0,a0,0x2
8000ba10:	00041940 	sll	v1,a0,0x5
8000ba14:	00708023 	subu	s0,v1,s0
8000ba18:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000ba1c:	8e120000 	lw	s2,0(s0)
8000ba20:	24020002 	li	v0,2
8000ba24:	16420032 	bne	s2,v0,8000baf0 <file_read+0x128>
8000ba28:	8fa60028 	lw	a2,40(sp)
8000ba2c:	8e02000c 	lw	v0,12(s0)
8000ba30:	14820030 	bne	a0,v0,8000baf4 <file_read+0x12c>
8000ba34:	8fbf0044 	lw	ra,68(sp)
file_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:239
	struct file *file;
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->readable) {
8000ba38:	8e020004 	lw	v0,4(s0)
8000ba3c:	1040002d 	beqz	v0,8000baf4 <file_read+0x12c>
8000ba40:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:242
		return -E_INVAL;
	}
	filemap_acquire(file);
8000ba44:	afa50024 	sw	a1,36(sp)
8000ba48:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000ba4c:	afa60028 	sw	a2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:244

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
8000ba50:	8e070010 	lw	a3,16(s0)
8000ba54:	8fa50024 	lw	a1,36(sp)
8000ba58:	8fa60028 	lw	a2,40(sp)
8000ba5c:	0c00333a 	jal	8000cce8 <iobuf_init>
8000ba60:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:245
	ret = vop_read(file->node, iob);
8000ba64:	8e140014 	lw	s4,20(s0)
8000ba68:	1280002e 	beqz	s4,8000bb24 <file_read+0x15c>
8000ba6c:	00409821 	move	s3,v0
8000ba70:	8e820048 	lw	v0,72(s4)
8000ba74:	1040002c 	beqz	v0,8000bb28 <file_read+0x160>
8000ba78:	3c048002 	lui	a0,0x8002
8000ba7c:	8c42000c 	lw	v0,12(v0)
8000ba80:	10400029 	beqz	v0,8000bb28 <file_read+0x160>
8000ba84:	3c058002 	lui	a1,0x8002
8000ba88:	02802021 	move	a0,s4
8000ba8c:	0c0010e5 	jal	80004394 <inode_check>
8000ba90:	24a522a0 	addiu	a1,a1,8864
8000ba94:	8e820048 	lw	v0,72(s4)
8000ba98:	8e040014 	lw	a0,20(s0)
8000ba9c:	8c42000c 	lw	v0,12(v0)
8000baa0:	0040f809 	jalr	v0
8000baa4:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:247

	size_t copied = iobuf_used(iob);
8000baa8:	8e650008 	lw	a1,8(s3)
8000baac:	8e63000c 	lw	v1,12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:248
	if (file->status == FD_OPENED) {
8000bab0:	8e040000 	lw	a0,0(s0)
8000bab4:	10920017 	beq	a0,s2,8000bb14 <file_read+0x14c>
8000bab8:	00a31823 	subu	v1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:251
		file->pos += copied;
	}
	*copied_store = copied;
8000babc:	ae230000 	sw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:252
	filemap_release(file);
8000bac0:	02002021 	move	a0,s0
8000bac4:	0c002ced 	jal	8000b3b4 <filemap_release>
8000bac8:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:254
	return ret;
}
8000bacc:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:253
	if (file->status == FD_OPENED) {
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
8000bad0:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:254
}
8000bad4:	8fb40040 	lw	s4,64(sp)
8000bad8:	8fb3003c 	lw	s3,60(sp)
8000badc:	8fb20038 	lw	s2,56(sp)
8000bae0:	8fb10034 	lw	s1,52(sp)
8000bae4:	8fb00030 	lw	s0,48(sp)
8000bae8:	03e00008 	jr	ra
8000baec:	27bd0048 	addiu	sp,sp,72
8000baf0:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:240
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->readable) {
		return -E_INVAL;
8000baf4:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:254
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
}
8000baf8:	8fb40040 	lw	s4,64(sp)
8000bafc:	8fb3003c 	lw	s3,60(sp)
8000bb00:	8fb20038 	lw	s2,56(sp)
8000bb04:	8fb10034 	lw	s1,52(sp)
8000bb08:	8fb00030 	lw	s0,48(sp)
8000bb0c:	03e00008 	jr	ra
8000bb10:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:249
	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_read(file->node, iob);

	size_t copied = iobuf_used(iob);
	if (file->status == FD_OPENED) {
		file->pos += copied;
8000bb14:	8e040010 	lw	a0,16(s0)
8000bb18:	00832021 	addu	a0,a0,v1
8000bb1c:	08002eaf 	j	8000babc <file_read+0xf4>
8000bb20:	ae040010 	sw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:245
		return -E_INVAL;
	}
	filemap_acquire(file);

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_read(file->node, iob);
8000bb24:	3c048002 	lui	a0,0x8002
8000bb28:	3c068002 	lui	a2,0x8002
8000bb2c:	3c078002 	lui	a3,0x8002
8000bb30:	24842048 	addiu	a0,a0,8264
8000bb34:	240500f5 	li	a1,245
8000bb38:	24c609b0 	addiu	a2,a2,2480
8000bb3c:	0c006afd 	jal	8001abf4 <__panic>
8000bb40:	24e72250 	addiu	a3,a3,8784

8000bb44 <file_write>:
file_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:257
	filemap_release(file);
	return ret;
}

int file_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000bb44:	27bdffb8 	addiu	sp,sp,-72
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bb48:	2c820123 	sltiu	v0,a0,291
file_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:257
	filemap_release(file);
	return ret;
}

int file_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000bb4c:	afb10034 	sw	s1,52(sp)
8000bb50:	afbf0044 	sw	ra,68(sp)
8000bb54:	afb40040 	sw	s4,64(sp)
8000bb58:	afb3003c 	sw	s3,60(sp)
8000bb5c:	afb20038 	sw	s2,56(sp)
8000bb60:	afb00030 	sw	s0,48(sp)
8000bb64:	00e08821 	move	s1,a3
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bb68:	10400040 	beqz	v0,8000bc6c <file_write+0x128>
8000bb6c:	ace00000 	sw	zero,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000bb70:	afa40020 	sw	a0,32(sp)
8000bb74:	afa50024 	sw	a1,36(sp)
8000bb78:	0c002c49 	jal	8000b124 <get_filemap>
8000bb7c:	afa60028 	sw	a2,40(sp)
8000bb80:	8fa40020 	lw	a0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bb84:	8fa50024 	lw	a1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000bb88:	00048080 	sll	s0,a0,0x2
8000bb8c:	00041940 	sll	v1,a0,0x5
8000bb90:	00708023 	subu	s0,v1,s0
8000bb94:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bb98:	8e120000 	lw	s2,0(s0)
8000bb9c:	24020002 	li	v0,2
8000bba0:	16420032 	bne	s2,v0,8000bc6c <file_write+0x128>
8000bba4:	8fa60028 	lw	a2,40(sp)
8000bba8:	8e02000c 	lw	v0,12(s0)
8000bbac:	14820030 	bne	a0,v0,8000bc70 <file_write+0x12c>
8000bbb0:	8fbf0044 	lw	ra,68(sp)
file_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:264
	struct file *file;
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->writable) {
8000bbb4:	8e020008 	lw	v0,8(s0)
8000bbb8:	1040002d 	beqz	v0,8000bc70 <file_write+0x12c>
8000bbbc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:267
		return -E_INVAL;
	}
	filemap_acquire(file);
8000bbc0:	afa50024 	sw	a1,36(sp)
8000bbc4:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000bbc8:	afa60028 	sw	a2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:269

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
8000bbcc:	8e070010 	lw	a3,16(s0)
8000bbd0:	8fa50024 	lw	a1,36(sp)
8000bbd4:	8fa60028 	lw	a2,40(sp)
8000bbd8:	0c00333a 	jal	8000cce8 <iobuf_init>
8000bbdc:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:270
	ret = vop_write(file->node, iob);
8000bbe0:	8e140014 	lw	s4,20(s0)
8000bbe4:	1280002e 	beqz	s4,8000bca0 <file_write+0x15c>
8000bbe8:	00409821 	move	s3,v0
8000bbec:	8e820048 	lw	v0,72(s4)
8000bbf0:	1040002c 	beqz	v0,8000bca4 <file_write+0x160>
8000bbf4:	3c048002 	lui	a0,0x8002
8000bbf8:	8c420010 	lw	v0,16(v0)
8000bbfc:	10400029 	beqz	v0,8000bca4 <file_write+0x160>
8000bc00:	3c058002 	lui	a1,0x8002
8000bc04:	02802021 	move	a0,s4
8000bc08:	0c0010e5 	jal	80004394 <inode_check>
8000bc0c:	24a522f8 	addiu	a1,a1,8952
8000bc10:	8e820048 	lw	v0,72(s4)
8000bc14:	8e040014 	lw	a0,20(s0)
8000bc18:	8c420010 	lw	v0,16(v0)
8000bc1c:	0040f809 	jalr	v0
8000bc20:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:272

	size_t copied = iobuf_used(iob);
8000bc24:	8e650008 	lw	a1,8(s3)
8000bc28:	8e63000c 	lw	v1,12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:273
	if (file->status == FD_OPENED) {
8000bc2c:	8e040000 	lw	a0,0(s0)
8000bc30:	10920017 	beq	a0,s2,8000bc90 <file_write+0x14c>
8000bc34:	00a31823 	subu	v1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:276
		file->pos += copied;
	}
	*copied_store = copied;
8000bc38:	ae230000 	sw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:277
	filemap_release(file);
8000bc3c:	02002021 	move	a0,s0
8000bc40:	0c002ced 	jal	8000b3b4 <filemap_release>
8000bc44:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:279
	return ret;
}
8000bc48:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:278
	if (file->status == FD_OPENED) {
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
8000bc4c:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:279
}
8000bc50:	8fb40040 	lw	s4,64(sp)
8000bc54:	8fb3003c 	lw	s3,60(sp)
8000bc58:	8fb20038 	lw	s2,56(sp)
8000bc5c:	8fb10034 	lw	s1,52(sp)
8000bc60:	8fb00030 	lw	s0,48(sp)
8000bc64:	03e00008 	jr	ra
8000bc68:	27bd0048 	addiu	sp,sp,72
8000bc6c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:265
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->writable) {
		return -E_INVAL;
8000bc70:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:279
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
}
8000bc74:	8fb40040 	lw	s4,64(sp)
8000bc78:	8fb3003c 	lw	s3,60(sp)
8000bc7c:	8fb20038 	lw	s2,56(sp)
8000bc80:	8fb10034 	lw	s1,52(sp)
8000bc84:	8fb00030 	lw	s0,48(sp)
8000bc88:	03e00008 	jr	ra
8000bc8c:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:274
	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_write(file->node, iob);

	size_t copied = iobuf_used(iob);
	if (file->status == FD_OPENED) {
		file->pos += copied;
8000bc90:	8e040010 	lw	a0,16(s0)
8000bc94:	00832021 	addu	a0,a0,v1
8000bc98:	08002f0e 	j	8000bc38 <file_write+0xf4>
8000bc9c:	ae040010 	sw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:270
		return -E_INVAL;
	}
	filemap_acquire(file);

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_write(file->node, iob);
8000bca0:	3c048002 	lui	a0,0x8002
8000bca4:	3c068002 	lui	a2,0x8002
8000bca8:	3c078002 	lui	a3,0x8002
8000bcac:	24842048 	addiu	a0,a0,8264
8000bcb0:	2405010e 	li	a1,270
8000bcb4:	24c609b0 	addiu	a2,a2,2480
8000bcb8:	0c006afd 	jal	8001abf4 <__panic>
8000bcbc:	24e722a8 	addiu	a3,a3,8872

8000bcc0 <file_seek>:
file_seek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:282
	filemap_release(file);
	return ret;
}

int file_seek(int fd, off_t pos, int whence)
{
8000bcc0:	27bdffc0 	addiu	sp,sp,-64
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bcc4:	2c820123 	sltiu	v0,a0,291
file_seek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:282
	filemap_release(file);
	return ret;
}

int file_seek(int fd, off_t pos, int whence)
{
8000bcc8:	afb30034 	sw	s3,52(sp)
8000bccc:	afb1002c 	sw	s1,44(sp)
8000bcd0:	afb00028 	sw	s0,40(sp)
8000bcd4:	afbf003c 	sw	ra,60(sp)
8000bcd8:	afb40038 	sw	s4,56(sp)
8000bcdc:	afb20030 	sw	s2,48(sp)
8000bce0:	00808821 	move	s1,a0
8000bce4:	00a08021 	move	s0,a1
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bce8:	10400035 	beqz	v0,8000bdc0 <file_seek+0x100>
8000bcec:	00c09821 	move	s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000bcf0:	0c002c49 	jal	8000b124 <get_filemap>
8000bcf4:	00119080 	sll	s2,s1,0x2
8000bcf8:	00111940 	sll	v1,s1,0x5
8000bcfc:	00729023 	subu	s2,v1,s2
8000bd00:	00529021 	addu	s2,v0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bd04:	8e540000 	lw	s4,0(s2)
8000bd08:	24020002 	li	v0,2
8000bd0c:	1682002d 	bne	s4,v0,8000bdc4 <file_seek+0x104>
8000bd10:	8fbf003c 	lw	ra,60(sp)
8000bd14:	8e42000c 	lw	v0,12(s2)
8000bd18:	1622002b 	bne	s1,v0,8000bdc8 <file_seek+0x108>
8000bd1c:	2402ffea 	li	v0,-22
file_seek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:289
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000bd20:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000bd24:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:291

	switch (whence) {
8000bd28:	24020001 	li	v0,1
8000bd2c:	52620042 	beql	s3,v0,8000be38 <file_seek+0x178>
8000bd30:	8e420010 	lw	v0,16(s2)
8000bd34:	5274002b 	beql	s3,s4,8000bde4 <file_seek+0x124>
8000bd38:	8e510014 	lw	s1,20(s2)
8000bd3c:	16600014 	bnez	s3,8000bd90 <file_seek+0xd0>
8000bd40:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:307
	default:
		ret = -E_INVAL;
	}

	if (ret == 0) {
		if ((ret = vop_tryseek(file->node, pos)) == 0) {
8000bd44:	8e510014 	lw	s1,20(s2)
8000bd48:	1220003d 	beqz	s1,8000be40 <file_seek+0x180>
8000bd4c:	3c048002 	lui	a0,0x8002
8000bd50:	8e220048 	lw	v0,72(s1)
8000bd54:	1040003b 	beqz	v0,8000be44 <file_seek+0x184>
8000bd58:	3c068002 	lui	a2,0x8002
8000bd5c:	8c420044 	lw	v0,68(v0)
8000bd60:	10400037 	beqz	v0,8000be40 <file_seek+0x180>
8000bd64:	3c058002 	lui	a1,0x8002
8000bd68:	02202021 	move	a0,s1
8000bd6c:	0c0010e5 	jal	80004394 <inode_check>
8000bd70:	24a52350 	addiu	a1,a1,9040
8000bd74:	8e220048 	lw	v0,72(s1)
8000bd78:	8e440014 	lw	a0,20(s2)
8000bd7c:	8c420044 	lw	v0,68(v0)
8000bd80:	0040f809 	jalr	v0
8000bd84:	02002821 	move	a1,s0
8000bd88:	50400001 	beqzl	v0,8000bd90 <file_seek+0xd0>
8000bd8c:	ae500010 	sw	s0,16(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:311
			file->pos = pos;
		}
	}
	filemap_release(file);
8000bd90:	02402021 	move	a0,s2
8000bd94:	0c002ced 	jal	8000b3b4 <filemap_release>
8000bd98:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:313
	return ret;
}
8000bd9c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:312
		if ((ret = vop_tryseek(file->node, pos)) == 0) {
			file->pos = pos;
		}
	}
	filemap_release(file);
	return ret;
8000bda0:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:313
}
8000bda4:	8fb40038 	lw	s4,56(sp)
8000bda8:	8fb30034 	lw	s3,52(sp)
8000bdac:	8fb20030 	lw	s2,48(sp)
8000bdb0:	8fb1002c 	lw	s1,44(sp)
8000bdb4:	8fb00028 	lw	s0,40(sp)
8000bdb8:	03e00008 	jr	ra
8000bdbc:	27bd0040 	addiu	sp,sp,64
8000bdc0:	8fbf003c 	lw	ra,60(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000bdc4:	2402ffea 	li	v0,-22
file_seek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:313
			file->pos = pos;
		}
	}
	filemap_release(file);
	return ret;
}
8000bdc8:	8fb40038 	lw	s4,56(sp)
8000bdcc:	8fb30034 	lw	s3,52(sp)
8000bdd0:	8fb20030 	lw	s2,48(sp)
8000bdd4:	8fb1002c 	lw	s1,44(sp)
8000bdd8:	8fb00028 	lw	s0,40(sp)
8000bddc:	03e00008 	jr	ra
8000bde0:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:298
		break;
	case LSEEK_CUR:
		pos += file->pos;
		break;
	case LSEEK_END:
		if ((ret = vop_fstat(file->node, stat)) == 0) {
8000bde4:	1220001d 	beqz	s1,8000be5c <file_seek+0x19c>
8000bde8:	3c048002 	lui	a0,0x8002
8000bdec:	8e220048 	lw	v0,72(s1)
8000bdf0:	1040001b 	beqz	v0,8000be60 <file_seek+0x1a0>
8000bdf4:	3c068002 	lui	a2,0x8002
8000bdf8:	8c420014 	lw	v0,20(v0)
8000bdfc:	10400017 	beqz	v0,8000be5c <file_seek+0x19c>
8000be00:	3c058002 	lui	a1,0x8002
8000be04:	02202021 	move	a0,s1
8000be08:	0c0010e5 	jal	80004394 <inode_check>
8000be0c:	24a52248 	addiu	a1,a1,8776
8000be10:	8e220048 	lw	v0,72(s1)
8000be14:	8e440014 	lw	a0,20(s2)
8000be18:	8c420014 	lw	v0,20(v0)
8000be1c:	0040f809 	jalr	v0
8000be20:	27a50010 	addiu	a1,sp,16
8000be24:	5440ffdb 	bnezl	v0,8000bd94 <file_seek+0xd4>
8000be28:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:299
			pos += stat->st_size;
8000be2c:	8fa2001c 	lw	v0,28(sp)
8000be30:	08002f51 	j	8000bd44 <file_seek+0x84>
8000be34:	02028021 	addu	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:296
	switch (whence) {
	case LSEEK_SET:
		break;
	case LSEEK_CUR:
		pos += file->pos;
		break;
8000be38:	08002f51 	j	8000bd44 <file_seek+0x84>
8000be3c:	02028021 	addu	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:307
	default:
		ret = -E_INVAL;
	}

	if (ret == 0) {
		if ((ret = vop_tryseek(file->node, pos)) == 0) {
8000be40:	3c068002 	lui	a2,0x8002
8000be44:	3c078002 	lui	a3,0x8002
8000be48:	24842048 	addiu	a0,a0,8264
8000be4c:	24050133 	li	a1,307
8000be50:	24c609b0 	addiu	a2,a2,2480
8000be54:	0c006afd 	jal	8001abf4 <__panic>
8000be58:	24e72300 	addiu	a3,a3,8960
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:298
		break;
	case LSEEK_CUR:
		pos += file->pos;
		break;
	case LSEEK_END:
		if ((ret = vop_fstat(file->node, stat)) == 0) {
8000be5c:	3c068002 	lui	a2,0x8002
8000be60:	3c078002 	lui	a3,0x8002
8000be64:	24842048 	addiu	a0,a0,8264
8000be68:	2405012a 	li	a1,298
8000be6c:	24c609b0 	addiu	a2,a2,2480
8000be70:	0c006afd 	jal	8001abf4 <__panic>
8000be74:	24e721f8 	addiu	a3,a3,8696

8000be78 <file_fstat>:
file_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:316
	filemap_release(file);
	return ret;
}

int file_fstat(int fd, struct stat *stat)
{
8000be78:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000be7c:	2c820123 	sltiu	v0,a0,291
file_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:316
	filemap_release(file);
	return ret;
}

int file_fstat(int fd, struct stat *stat)
{
8000be80:	afb1001c 	sw	s1,28(sp)
8000be84:	afbf0024 	sw	ra,36(sp)
8000be88:	afb20020 	sw	s2,32(sp)
8000be8c:	afb00018 	sw	s0,24(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000be90:	1040002c 	beqz	v0,8000bf44 <file_fstat+0xcc>
8000be94:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000be98:	0c002c49 	jal	8000b124 <get_filemap>
8000be9c:	afa40010 	sw	a0,16(sp)
8000bea0:	8fa40010 	lw	a0,16(sp)
8000bea4:	00041940 	sll	v1,a0,0x5
8000bea8:	00048080 	sll	s0,a0,0x2
8000beac:	00708023 	subu	s0,v1,s0
8000beb0:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000beb4:	8e030000 	lw	v1,0(s0)
8000beb8:	24020002 	li	v0,2
8000bebc:	14620022 	bne	v1,v0,8000bf48 <file_fstat+0xd0>
8000bec0:	8fbf0024 	lw	ra,36(sp)
8000bec4:	8e02000c 	lw	v0,12(s0)
8000bec8:	14820020 	bne	a0,v0,8000bf4c <file_fstat+0xd4>
8000becc:	2402ffea 	li	v0,-22
file_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:322
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000bed0:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000bed4:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:323
	ret = vop_fstat(file->node, stat);
8000bed8:	8e120014 	lw	s2,20(s0)
8000bedc:	12400020 	beqz	s2,8000bf60 <file_fstat+0xe8>
8000bee0:	3c048002 	lui	a0,0x8002
8000bee4:	8e420048 	lw	v0,72(s2)
8000bee8:	1040001e 	beqz	v0,8000bf64 <file_fstat+0xec>
8000beec:	3c068002 	lui	a2,0x8002
8000bef0:	8c420014 	lw	v0,20(v0)
8000bef4:	1040001a 	beqz	v0,8000bf60 <file_fstat+0xe8>
8000bef8:	3c058002 	lui	a1,0x8002
8000befc:	02402021 	move	a0,s2
8000bf00:	0c0010e5 	jal	80004394 <inode_check>
8000bf04:	24a52248 	addiu	a1,a1,8776
8000bf08:	8e420048 	lw	v0,72(s2)
8000bf0c:	8e040014 	lw	a0,20(s0)
8000bf10:	8c420014 	lw	v0,20(v0)
8000bf14:	0040f809 	jalr	v0
8000bf18:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:324
	filemap_release(file);
8000bf1c:	02002021 	move	a0,s0
8000bf20:	0c002ced 	jal	8000b3b4 <filemap_release>
8000bf24:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:326
	return ret;
}
8000bf28:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:325
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fstat(file->node, stat);
	filemap_release(file);
	return ret;
8000bf2c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:326
}
8000bf30:	8fb20020 	lw	s2,32(sp)
8000bf34:	8fb1001c 	lw	s1,28(sp)
8000bf38:	8fb00018 	lw	s0,24(sp)
8000bf3c:	03e00008 	jr	ra
8000bf40:	27bd0028 	addiu	sp,sp,40
8000bf44:	8fbf0024 	lw	ra,36(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000bf48:	2402ffea 	li	v0,-22
file_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:326
	}
	filemap_acquire(file);
	ret = vop_fstat(file->node, stat);
	filemap_release(file);
	return ret;
}
8000bf4c:	8fb20020 	lw	s2,32(sp)
8000bf50:	8fb1001c 	lw	s1,28(sp)
8000bf54:	8fb00018 	lw	s0,24(sp)
8000bf58:	03e00008 	jr	ra
8000bf5c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:323
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fstat(file->node, stat);
8000bf60:	3c068002 	lui	a2,0x8002
8000bf64:	3c078002 	lui	a3,0x8002
8000bf68:	24842048 	addiu	a0,a0,8264
8000bf6c:	24050143 	li	a1,323
8000bf70:	24c609b0 	addiu	a2,a2,2480
8000bf74:	0c006afd 	jal	8001abf4 <__panic>
8000bf78:	24e721f8 	addiu	a3,a3,8696

8000bf7c <file_fsync>:
file_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:329
	filemap_release(file);
	return ret;
}

int file_fsync(int fd)
{
8000bf7c:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bf80:	2c820123 	sltiu	v0,a0,291
file_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:329
	filemap_release(file);
	return ret;
}

int file_fsync(int fd)
{
8000bf84:	afbf0024 	sw	ra,36(sp)
8000bf88:	afb10020 	sw	s1,32(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bf8c:	1040002a 	beqz	v0,8000c038 <file_fsync+0xbc>
8000bf90:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000bf94:	0c002c49 	jal	8000b124 <get_filemap>
8000bf98:	afa40010 	sw	a0,16(sp)
8000bf9c:	8fa40010 	lw	a0,16(sp)
8000bfa0:	00041940 	sll	v1,a0,0x5
8000bfa4:	00048080 	sll	s0,a0,0x2
8000bfa8:	00708023 	subu	s0,v1,s0
8000bfac:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bfb0:	8e030000 	lw	v1,0(s0)
8000bfb4:	24020002 	li	v0,2
8000bfb8:	14620020 	bne	v1,v0,8000c03c <file_fsync+0xc0>
8000bfbc:	8fbf0024 	lw	ra,36(sp)
8000bfc0:	8e02000c 	lw	v0,12(s0)
8000bfc4:	1482001e 	bne	a0,v0,8000c040 <file_fsync+0xc4>
8000bfc8:	2402ffea 	li	v0,-22
file_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:335
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000bfcc:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000bfd0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:336
	ret = vop_fsync(file->node);
8000bfd4:	8e110014 	lw	s1,20(s0)
8000bfd8:	5220001e 	beqzl	s1,8000c054 <file_fsync+0xd8>
8000bfdc:	3c048002 	lui	a0,0x8002
8000bfe0:	8e220048 	lw	v0,72(s1)
8000bfe4:	5040001b 	beqzl	v0,8000c054 <file_fsync+0xd8>
8000bfe8:	3c048002 	lui	a0,0x8002
8000bfec:	8c420018 	lw	v0,24(v0)
8000bff0:	10400017 	beqz	v0,8000c050 <file_fsync+0xd4>
8000bff4:	3c058002 	lui	a1,0x8002
8000bff8:	02202021 	move	a0,s1
8000bffc:	0c0010e5 	jal	80004394 <inode_check>
8000c000:	24a51b2c 	addiu	a1,a1,6956
8000c004:	8e220048 	lw	v0,72(s1)
8000c008:	8c420018 	lw	v0,24(v0)
8000c00c:	0040f809 	jalr	v0
8000c010:	8e040014 	lw	a0,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:337
	filemap_release(file);
8000c014:	02002021 	move	a0,s0
8000c018:	0c002ced 	jal	8000b3b4 <filemap_release>
8000c01c:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:339
	return ret;
}
8000c020:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:338
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fsync(file->node);
	filemap_release(file);
	return ret;
8000c024:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:339
}
8000c028:	8fb10020 	lw	s1,32(sp)
8000c02c:	8fb0001c 	lw	s0,28(sp)
8000c030:	03e00008 	jr	ra
8000c034:	27bd0028 	addiu	sp,sp,40
8000c038:	8fbf0024 	lw	ra,36(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000c03c:	2402ffea 	li	v0,-22
file_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:339
	}
	filemap_acquire(file);
	ret = vop_fsync(file->node);
	filemap_release(file);
	return ret;
}
8000c040:	8fb10020 	lw	s1,32(sp)
8000c044:	8fb0001c 	lw	s0,28(sp)
8000c048:	03e00008 	jr	ra
8000c04c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:336
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fsync(file->node);
8000c050:	3c048002 	lui	a0,0x8002
8000c054:	3c068002 	lui	a2,0x8002
8000c058:	3c078002 	lui	a3,0x8002
8000c05c:	24842048 	addiu	a0,a0,8264
8000c060:	24050150 	li	a1,336
8000c064:	24c609b0 	addiu	a2,a2,2480
8000c068:	0c006afd 	jal	8001abf4 <__panic>
8000c06c:	24e71adc 	addiu	a3,a3,6876

8000c070 <file_getdirentry>:
file_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:342
	filemap_release(file);
	return ret;
}

int file_getdirentry(int fd, struct dirent *direntp)
{
8000c070:	27bdffc0 	addiu	sp,sp,-64
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c074:	2c820123 	sltiu	v0,a0,291
file_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:342
	filemap_release(file);
	return ret;
}

int file_getdirentry(int fd, struct dirent *direntp)
{
8000c078:	afb10030 	sw	s1,48(sp)
8000c07c:	afbf003c 	sw	ra,60(sp)
8000c080:	afb30038 	sw	s3,56(sp)
8000c084:	afb20034 	sw	s2,52(sp)
8000c088:	afb0002c 	sw	s0,44(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c08c:	10400034 	beqz	v0,8000c160 <file_getdirentry+0xf0>
8000c090:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c094:	0c002c49 	jal	8000b124 <get_filemap>
8000c098:	afa40020 	sw	a0,32(sp)
8000c09c:	8fa40020 	lw	a0,32(sp)
8000c0a0:	00041940 	sll	v1,a0,0x5
8000c0a4:	00048080 	sll	s0,a0,0x2
8000c0a8:	00708023 	subu	s0,v1,s0
8000c0ac:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c0b0:	8e030000 	lw	v1,0(s0)
8000c0b4:	24020002 	li	v0,2
8000c0b8:	1462002a 	bne	v1,v0,8000c164 <file_getdirentry+0xf4>
8000c0bc:	8fbf003c 	lw	ra,60(sp)
8000c0c0:	8e02000c 	lw	v0,12(s0)
8000c0c4:	14820028 	bne	a0,v0,8000c168 <file_getdirentry+0xf8>
8000c0c8:	2402ffea 	li	v0,-22
file_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:348
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000c0cc:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000c0d0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:350

	struct iobuf __iob, *iob =
8000c0d4:	8e270004 	lw	a3,4(s1)
8000c0d8:	27a40010 	addiu	a0,sp,16
8000c0dc:	2625000a 	addiu	a1,s1,10
8000c0e0:	0c00333a 	jal	8000cce8 <iobuf_init>
8000c0e4:	24060100 	li	a2,256
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:353
	    iobuf_init(&__iob, direntp->d_name, sizeof(direntp->d_name),
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
8000c0e8:	8e130014 	lw	s3,20(s0)
8000c0ec:	1260002a 	beqz	s3,8000c198 <file_getdirentry+0x128>
8000c0f0:	00409021 	move	s2,v0
8000c0f4:	8e620048 	lw	v0,72(s3)
8000c0f8:	10400028 	beqz	v0,8000c19c <file_getdirentry+0x12c>
8000c0fc:	3c048002 	lui	a0,0x8002
8000c100:	8c420034 	lw	v0,52(v0)
8000c104:	10400025 	beqz	v0,8000c19c <file_getdirentry+0x12c>
8000c108:	3c058002 	lui	a1,0x8002
8000c10c:	02602021 	move	a0,s3
8000c110:	0c0010e5 	jal	80004394 <inode_check>
8000c114:	24a523ac 	addiu	a1,a1,9132
8000c118:	8e620048 	lw	v0,72(s3)
8000c11c:	8e040014 	lw	a0,20(s0)
8000c120:	8c420034 	lw	v0,52(v0)
8000c124:	0040f809 	jalr	v0
8000c128:	02402821 	move	a1,s2
8000c12c:	50400014 	beqzl	v0,8000c180 <file_getdirentry+0x110>
8000c130:	8e450008 	lw	a1,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:356
		direntp->d_off += iobuf_used(iob);
	}
	filemap_release(file);
8000c134:	02002021 	move	a0,s0
8000c138:	0c002ced 	jal	8000b3b4 <filemap_release>
8000c13c:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:358
	return ret;
}
8000c140:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:357
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
		direntp->d_off += iobuf_used(iob);
	}
	filemap_release(file);
	return ret;
8000c144:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:358
}
8000c148:	8fb30038 	lw	s3,56(sp)
8000c14c:	8fb20034 	lw	s2,52(sp)
8000c150:	8fb10030 	lw	s1,48(sp)
8000c154:	8fb0002c 	lw	s0,44(sp)
8000c158:	03e00008 	jr	ra
8000c15c:	27bd0040 	addiu	sp,sp,64
8000c160:	8fbf003c 	lw	ra,60(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000c164:	2402ffea 	li	v0,-22
file_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:358
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
		direntp->d_off += iobuf_used(iob);
	}
	filemap_release(file);
	return ret;
}
8000c168:	8fb30038 	lw	s3,56(sp)
8000c16c:	8fb20034 	lw	s2,52(sp)
8000c170:	8fb10030 	lw	s1,48(sp)
8000c174:	8fb0002c 	lw	s0,44(sp)
8000c178:	03e00008 	jr	ra
8000c17c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:354

	struct iobuf __iob, *iob =
	    iobuf_init(&__iob, direntp->d_name, sizeof(direntp->d_name),
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
		direntp->d_off += iobuf_used(iob);
8000c180:	8e230004 	lw	v1,4(s1)
8000c184:	8e44000c 	lw	a0,12(s2)
8000c188:	00a31821 	addu	v1,a1,v1
8000c18c:	00641823 	subu	v1,v1,a0
8000c190:	0800304d 	j	8000c134 <file_getdirentry+0xc4>
8000c194:	ae230004 	sw	v1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:353
	filemap_acquire(file);

	struct iobuf __iob, *iob =
	    iobuf_init(&__iob, direntp->d_name, sizeof(direntp->d_name),
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
8000c198:	3c048002 	lui	a0,0x8002
8000c19c:	3c068002 	lui	a2,0x8002
8000c1a0:	3c078002 	lui	a3,0x8002
8000c1a4:	24842048 	addiu	a0,a0,8264
8000c1a8:	24050161 	li	a1,353
8000c1ac:	24c609b0 	addiu	a2,a2,2480
8000c1b0:	0c006afd 	jal	8001abf4 <__panic>
8000c1b4:	24e72358 	addiu	a3,a3,9048

8000c1b8 <file_dup>:
file_dup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:361
	filemap_release(file);
	return ret;
}

int file_dup(int fd1, int fd2)
{
8000c1b8:	27bdffd0 	addiu	sp,sp,-48
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c1bc:	2c820123 	sltiu	v0,a0,291
file_dup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:361
	filemap_release(file);
	return ret;
}

int file_dup(int fd1, int fd2)
{
8000c1c0:	afb20028 	sw	s2,40(sp)
8000c1c4:	afb10024 	sw	s1,36(sp)
8000c1c8:	afbf002c 	sw	ra,44(sp)
8000c1cc:	afb00020 	sw	s0,32(sp)
8000c1d0:	00808821 	move	s1,a0
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c1d4:	10400012 	beqz	v0,8000c220 <file_dup+0x68>
8000c1d8:	2412ffea 	li	s2,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c1dc:	afa50018 	sw	a1,24(sp)
8000c1e0:	0c002c49 	jal	8000b124 <get_filemap>
8000c1e4:	00118080 	sll	s0,s1,0x2
8000c1e8:	00111940 	sll	v1,s1,0x5
8000c1ec:	00708023 	subu	s0,v1,s0
8000c1f0:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c1f4:	8e030000 	lw	v1,0(s0)
8000c1f8:	24020002 	li	v0,2
8000c1fc:	14620008 	bne	v1,v0,8000c220 <file_dup+0x68>
8000c200:	8fa50018 	lw	a1,24(sp)
8000c204:	8e02000c 	lw	v0,12(s0)
8000c208:	16220005 	bne	s1,v0,8000c220 <file_dup+0x68>
8000c20c:	00a02021 	move	a0,a1
file_dup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:367
	int ret;
	struct file *file1, *file2;
	if ((ret = fd2file(fd1, &file1)) != 0) {
		return ret;
	}
	if ((ret = filemap_alloc(fd2, &file2)) != 0) {
8000c210:	0c002c5d 	jal	8000b174 <filemap_alloc>
8000c214:	27a50010 	addiu	a1,sp,16
8000c218:	10400008 	beqz	v0,8000c23c <file_dup+0x84>
8000c21c:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:372
		return ret;
	}
	filemap_dup(file2, file1);
	return file2->fd;
}
8000c220:	8fbf002c 	lw	ra,44(sp)
8000c224:	02401021 	move	v0,s2
8000c228:	8fb10024 	lw	s1,36(sp)
8000c22c:	8fb20028 	lw	s2,40(sp)
8000c230:	8fb00020 	lw	s0,32(sp)
8000c234:	03e00008 	jr	ra
8000c238:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:370
		return ret;
	}
	if ((ret = filemap_alloc(fd2, &file2)) != 0) {
		return ret;
	}
	filemap_dup(file2, file1);
8000c23c:	8fa40010 	lw	a0,16(sp)
8000c240:	0c002d7e 	jal	8000b5f8 <filemap_dup>
8000c244:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:371
	return file2->fd;
8000c248:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:372
}
8000c24c:	8fbf002c 	lw	ra,44(sp)
8000c250:	8fb10024 	lw	s1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:371
	}
	if ((ret = filemap_alloc(fd2, &file2)) != 0) {
		return ret;
	}
	filemap_dup(file2, file1);
	return file2->fd;
8000c254:	8c52000c 	lw	s2,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:372
}
8000c258:	8fb00020 	lw	s0,32(sp)
8000c25c:	02401021 	move	v0,s2
8000c260:	8fb20028 	lw	s2,40(sp)
8000c264:	03e00008 	jr	ra
8000c268:	27bd0030 	addiu	sp,sp,48

8000c26c <file_pipe>:
file_pipe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:375

int file_pipe(int fd[])
{
8000c26c:	27bdffd0 	addiu	sp,sp,-48
8000c270:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:378
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c274:	3c10ffff 	lui	s0,0xffff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:375
	filemap_dup(file2, file1);
	return file2->fd;
}

int file_pipe(int fd[])
{
8000c278:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:378
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c27c:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:375
	filemap_dup(file2, file1);
	return file2->fd;
}

int file_pipe(int fd[])
{
8000c280:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:378
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c284:	26046ad9 	addiu	a0,s0,27353
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:375
	filemap_dup(file2, file1);
	return file2->fd;
}

int file_pipe(int fd[])
{
8000c288:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:377
	int ret;
	struct file *file[2] = { NULL, NULL };
8000c28c:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:378
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c290:	0c002c5d 	jal	8000b174 <filemap_alloc>
8000c294:	afa00014 	sw	zero,20(sp)
8000c298:	10400012 	beqz	v0,8000c2e4 <file_pipe+0x78>
8000c29c:	36046ad9 	ori	a0,s0,0x6ad9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:400

	fd[0] = file[0]->fd, fd[1] = file[1]->fd;
	return 0;

failed_cleanup:
	if (file[0] != NULL) {
8000c2a0:	8fa40010 	lw	a0,16(sp)
8000c2a4:	50800005 	beqzl	a0,8000c2bc <file_pipe+0x50>
8000c2a8:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:401
		filemap_free(file[0]);
8000c2ac:	0c002c92 	jal	8000b248 <filemap_free>
8000c2b0:	afa20018 	sw	v0,24(sp)
8000c2b4:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:403
	}
	if (file[1] != NULL) {
8000c2b8:	8fa40014 	lw	a0,20(sp)
8000c2bc:	10800005 	beqz	a0,8000c2d4 <file_pipe+0x68>
8000c2c0:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:404
		filemap_free(file[1]);
8000c2c4:	0c002c92 	jal	8000b248 <filemap_free>
8000c2c8:	afa20018 	sw	v0,24(sp)
8000c2cc:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:407
	}
	return ret;
}
8000c2d0:	8fbf002c 	lw	ra,44(sp)
8000c2d4:	8fb10028 	lw	s1,40(sp)
8000c2d8:	8fb00024 	lw	s0,36(sp)
8000c2dc:	03e00008 	jr	ra
8000c2e0:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:381
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
		goto failed_cleanup;
	}
	if ((ret = filemap_alloc(NO_FD, &file[1])) != 0) {
8000c2e4:	0c002c5d 	jal	8000b174 <filemap_alloc>
8000c2e8:	27a50014 	addiu	a1,sp,20
8000c2ec:	1440ffed 	bnez	v0,8000c2a4 <file_pipe+0x38>
8000c2f0:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:385
		goto failed_cleanup;
	}

	if ((ret = pipe_open(&(file[0]->node), &(file[1]->node))) != 0) {
8000c2f4:	8fa50014 	lw	a1,20(sp)
8000c2f8:	24840014 	addiu	a0,a0,20
8000c2fc:	0c000d64 	jal	80003590 <pipe_open>
8000c300:	24a50014 	addiu	a1,a1,20
8000c304:	1440ffe7 	bnez	v0,8000c2a4 <file_pipe+0x38>
8000c308:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:388
		goto failed_cleanup;
	}
	file[0]->pos = 0;
8000c30c:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:389
	file[0]->readable = 1, file[0]->writable = 0;
8000c310:	24100001 	li	s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:390
	filemap_open(file[0]);
8000c314:	00602021 	move	a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:388
	}

	if ((ret = pipe_open(&(file[0]->node), &(file[1]->node))) != 0) {
		goto failed_cleanup;
	}
	file[0]->pos = 0;
8000c318:	ac600010 	sw	zero,16(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:389
	file[0]->readable = 1, file[0]->writable = 0;
8000c31c:	ac700004 	sw	s0,4(v1)
8000c320:	ac600008 	sw	zero,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:390
	filemap_open(file[0]);
8000c324:	0c002d1f 	jal	8000b47c <filemap_open>
8000c328:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:392

	file[1]->pos = 0;
8000c32c:	8fa40014 	lw	a0,20(sp)
8000c330:	ac800010 	sw	zero,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:393
	file[1]->readable = 0, file[1]->writable = 1;
8000c334:	ac800004 	sw	zero,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:394
	filemap_open(file[1]);
8000c338:	0c002d1f 	jal	8000b47c <filemap_open>
8000c33c:	ac900008 	sw	s0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:396

	fd[0] = file[0]->fd, fd[1] = file[1]->fd;
8000c340:	8fa30010 	lw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:397
	return 0;
8000c344:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:396

	file[1]->pos = 0;
	file[1]->readable = 0, file[1]->writable = 1;
	filemap_open(file[1]);

	fd[0] = file[0]->fd, fd[1] = file[1]->fd;
8000c348:	8c63000c 	lw	v1,12(v1)
8000c34c:	ae230000 	sw	v1,0(s1)
8000c350:	8fa30014 	lw	v1,20(sp)
8000c354:	8c63000c 	lw	v1,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:397
	return 0;
8000c358:	080030b4 	j	8000c2d0 <file_pipe+0x64>
8000c35c:	ae230004 	sw	v1,4(s1)

8000c360 <file_mkfifo>:
file_mkfifo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:410
	}
	return ret;
}

int file_mkfifo(const char *__name, uint32_t open_flags)
{
8000c360:	27bdffd0 	addiu	sp,sp,-48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:412
	bool readonly = 0;
	switch (open_flags & O_ACCMODE) {
8000c364:	30a20003 	andi	v0,a1,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:410
	}
	return ret;
}

int file_mkfifo(const char *__name, uint32_t open_flags)
{
8000c368:	afb20028 	sw	s2,40(sp)
8000c36c:	afb10024 	sw	s1,36(sp)
8000c370:	afb00020 	sw	s0,32(sp)
8000c374:	afbf002c 	sw	ra,44(sp)
8000c378:	00a09021 	move	s2,a1
8000c37c:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:412
	bool readonly = 0;
	switch (open_flags & O_ACCMODE) {
8000c380:	1040000a 	beqz	v0,8000c3ac <file_mkfifo+0x4c>
8000c384:	24100001 	li	s0,1
8000c388:	10500007 	beq	v0,s0,8000c3a8 <file_mkfifo+0x48>
8000c38c:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:449
failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
}
8000c390:	8fbf002c 	lw	ra,44(sp)
8000c394:	8fb20028 	lw	s2,40(sp)
8000c398:	8fb10024 	lw	s1,36(sp)
8000c39c:	8fb00020 	lw	s0,32(sp)
8000c3a0:	03e00008 	jr	ra
8000c3a4:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:411
	return ret;
}

int file_mkfifo(const char *__name, uint32_t open_flags)
{
	bool readonly = 0;
8000c3a8:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:423
		return -E_INVAL;
	}

	int ret;
	struct file *file;
	if ((ret = filemap_alloc(NO_FD, &file)) != 0) {
8000c3ac:	3c04ffff 	lui	a0,0xffff
8000c3b0:	24846ad9 	addiu	a0,a0,27353
8000c3b4:	0c002c5d 	jal	8000b174 <filemap_alloc>
8000c3b8:	27a50010 	addiu	a1,sp,16
8000c3bc:	1440fff5 	bnez	v0,8000c394 <file_mkfifo+0x34>
8000c3c0:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:428
		return ret;
	}

	char *name;
	const char *device = readonly ? "pipe:r_" : "pipe:w_";
8000c3c4:	1200001c 	beqz	s0,8000c438 <file_mkfifo+0xd8>
8000c3c8:	3c048002 	lui	a0,0x8002
8000c3cc:	3c048002 	lui	a0,0x8002
8000c3d0:	248423b8 	addiu	a0,a0,9144
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:430

	if ((name = stradd(device, __name)) == NULL) {
8000c3d4:	0c005920 	jal	80016480 <stradd>
8000c3d8:	02202821 	move	a1,s1
8000c3dc:	10400027 	beqz	v0,8000c47c <file_mkfifo+0x11c>
8000c3e0:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:435
		ret = -E_NO_MEM;
		goto failed_cleanup_file;
	}

	if ((ret = vfs_open(name, open_flags, &(file->node))) != 0) {
8000c3e4:	8fa60010 	lw	a2,16(sp)
8000c3e8:	00402021 	move	a0,v0
8000c3ec:	02402821 	move	a1,s2
8000c3f0:	0c001504 	jal	80005410 <vfs_open>
8000c3f4:	24c60014 	addiu	a2,a2,20
8000c3f8:	10400011 	beqz	v0,8000c440 <file_mkfifo+0xe0>
8000c3fc:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:445
	filemap_open(file);
	kfree(name);
	return file->fd;

failed_cleanup_name:
	kfree(name);
8000c400:	02202021 	move	a0,s1
8000c404:	0c0054a3 	jal	8001528c <kfree>
8000c408:	afa20018 	sw	v0,24(sp)
8000c40c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:447
failed_cleanup_file:
	filemap_free(file);
8000c410:	8fa40010 	lw	a0,16(sp)
8000c414:	0c002c92 	jal	8000b248 <filemap_free>
8000c418:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:449
	return ret;
}
8000c41c:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:448

failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
8000c420:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:449
}
8000c424:	8fb20028 	lw	s2,40(sp)
8000c428:	8fb10024 	lw	s1,36(sp)
8000c42c:	8fb00020 	lw	s0,32(sp)
8000c430:	03e00008 	jr	ra
8000c434:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:428
	if ((ret = filemap_alloc(NO_FD, &file)) != 0) {
		return ret;
	}

	char *name;
	const char *device = readonly ? "pipe:r_" : "pipe:w_";
8000c438:	080030f5 	j	8000c3d4 <file_mkfifo+0x74>
8000c43c:	248423c0 	addiu	a0,a0,9152
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:439

	if ((ret = vfs_open(name, open_flags, &(file->node))) != 0) {
		goto failed_cleanup_name;
	}
	file->pos = 0;
	file->readable = readonly, file->writable = !readonly;
8000c440:	3a020001 	xori	v0,s0,0x1
8000c444:	ac820008 	sw	v0,8(a0)
8000c448:	ac900004 	sw	s0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:440
	filemap_open(file);
8000c44c:	0c002d1f 	jal	8000b47c <filemap_open>
8000c450:	ac800010 	sw	zero,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:441
	kfree(name);
8000c454:	0c0054a3 	jal	8001528c <kfree>
8000c458:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:442
	return file->fd;
8000c45c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:449
failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
}
8000c460:	8fbf002c 	lw	ra,44(sp)
8000c464:	8fb20028 	lw	s2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:442
	}
	file->pos = 0;
	file->readable = readonly, file->writable = !readonly;
	filemap_open(file);
	kfree(name);
	return file->fd;
8000c468:	8c42000c 	lw	v0,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:449
failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
}
8000c46c:	8fb10024 	lw	s1,36(sp)
8000c470:	8fb00020 	lw	s0,32(sp)
8000c474:	03e00008 	jr	ra
8000c478:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:431

	char *name;
	const char *device = readonly ? "pipe:r_" : "pipe:w_";

	if ((name = stradd(device, __name)) == NULL) {
		ret = -E_NO_MEM;
8000c47c:	08003104 	j	8000c410 <file_mkfifo+0xb0>
8000c480:	2402fff4 	li	v0,-12

8000c484 <__is_linux_devfile>:
__is_linux_devfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:453
	return ret;
}

/* linux devfile adaptor */
bool __is_linux_devfile(int fd)
{
8000c484:	27bdffe0 	addiu	sp,sp,-32
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c488:	2c820123 	sltiu	v0,a0,291
__is_linux_devfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:453
	return ret;
}

/* linux devfile adaptor */
bool __is_linux_devfile(int fd)
{
8000c48c:	afb00018 	sw	s0,24(sp)
8000c490:	afbf001c 	sw	ra,28(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c494:	10400015 	beqz	v0,8000c4ec <__is_linux_devfile+0x68>
8000c498:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c49c:	0c002c49 	jal	8000b124 <get_filemap>
8000c4a0:	afa40010 	sw	a0,16(sp)
8000c4a4:	8fa40010 	lw	a0,16(sp)
8000c4a8:	00042940 	sll	a1,a0,0x5
8000c4ac:	00041880 	sll	v1,a0,0x2
8000c4b0:	00a31823 	subu	v1,a1,v1
8000c4b4:	00431021 	addu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c4b8:	8c450000 	lw	a1,0(v0)
8000c4bc:	24030002 	li	v1,2
8000c4c0:	14a3000b 	bne	a1,v1,8000c4f0 <__is_linux_devfile+0x6c>
8000c4c4:	8fbf001c 	lw	ra,28(sp)
8000c4c8:	8c43000c 	lw	v1,12(v0)
8000c4cc:	54830009 	bnel	a0,v1,8000c4f4 <__is_linux_devfile+0x70>
8000c4d0:	02001021 	move	v0,s0
__is_linux_devfile():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:460
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	if (file->node && check_inode_type(file->node, device)
8000c4d4:	8c420014 	lw	v0,20(v0)
8000c4d8:	10400005 	beqz	v0,8000c4f0 <__is_linux_devfile+0x6c>
8000c4dc:	24031234 	li	v1,4660
8000c4e0:	8c440038 	lw	a0,56(v0)
8000c4e4:	50830006 	beql	a0,v1,8000c500 <__is_linux_devfile+0x7c>
8000c4e8:	8c50000c 	lw	s0,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:464
	    && dev_is_linux_dev(vop_info(file->node, device)))
		return 1;
	return 0;
}
8000c4ec:	8fbf001c 	lw	ra,28(sp)
8000c4f0:	02001021 	move	v0,s0
8000c4f4:	8fb00018 	lw	s0,24(sp)
8000c4f8:	03e00008 	jr	ra
8000c4fc:	27bd0020 	addiu	sp,sp,32
8000c500:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:452
	filemap_free(file);
	return ret;
}

/* linux devfile adaptor */
bool __is_linux_devfile(int fd)
8000c504:	0010802b 	sltu	s0,zero,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:464
	}
	if (file->node && check_inode_type(file->node, device)
	    && dev_is_linux_dev(vop_info(file->node, device)))
		return 1;
	return 0;
}
8000c508:	02001021 	move	v0,s0
8000c50c:	8fb00018 	lw	s0,24(sp)
8000c510:	03e00008 	jr	ra
8000c514:	27bd0020 	addiu	sp,sp,32

8000c518 <linux_devfile_read>:
linux_devfile_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:467

int linux_devfile_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000c518:	27bdffc8 	addiu	sp,sp,-56
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c51c:	2c820123 	sltiu	v0,a0,291
linux_devfile_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:467
		return 1;
	return 0;
}

int linux_devfile_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000c520:	afb10030 	sw	s1,48(sp)
8000c524:	afbf0034 	sw	ra,52(sp)
8000c528:	afb0002c 	sw	s0,44(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c52c:	10400036 	beqz	v0,8000c608 <linux_devfile_read+0xf0>
8000c530:	00e08821 	move	s1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c534:	afa40018 	sw	a0,24(sp)
8000c538:	afa5001c 	sw	a1,28(sp)
8000c53c:	0c002c49 	jal	8000b124 <get_filemap>
8000c540:	afa60020 	sw	a2,32(sp)
8000c544:	8fa40018 	lw	a0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c548:	8fa5001c 	lw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000c54c:	00041940 	sll	v1,a0,0x5
8000c550:	00048080 	sll	s0,a0,0x2
8000c554:	00708023 	subu	s0,v1,s0
8000c558:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c55c:	8e030000 	lw	v1,0(s0)
8000c560:	24020002 	li	v0,2
8000c564:	14620028 	bne	v1,v0,8000c608 <linux_devfile_read+0xf0>
8000c568:	8fa60020 	lw	a2,32(sp)
8000c56c:	8e02000c 	lw	v0,12(s0)
8000c570:	14820026 	bne	a0,v0,8000c60c <linux_devfile_read+0xf4>
8000c574:	8fbf0034 	lw	ra,52(sp)
linux_devfile_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:478
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->readable) {
8000c578:	8e020004 	lw	v0,4(s0)
8000c57c:	10400028 	beqz	v0,8000c620 <linux_devfile_read+0x108>
8000c580:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:481
		return -E_INVAL;
	}
	filemap_acquire(file);
8000c584:	afa5001c 	sw	a1,28(sp)
8000c588:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000c58c:	afa60020 	sw	a2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:482
	offset = file->pos;
8000c590:	8e020010 	lw	v0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:483
	struct device *dev = vop_info(file->node, device);
8000c594:	8e040014 	lw	a0,20(s0)
8000c598:	8fa5001c 	lw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:482

	if (!file->readable) {
		return -E_INVAL;
	}
	filemap_acquire(file);
	offset = file->pos;
8000c59c:	00021fc3 	sra	v1,v0,0x1f
8000c5a0:	afa20010 	sw	v0,16(sp)
8000c5a4:	afa30014 	sw	v1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:483
	struct device *dev = vop_info(file->node, device);
8000c5a8:	1080001f 	beqz	a0,8000c628 <linux_devfile_read+0x110>
8000c5ac:	8fa60020 	lw	a2,32(sp)
8000c5b0:	8c830038 	lw	v1,56(a0)
8000c5b4:	24021234 	li	v0,4660
8000c5b8:	5462001c 	bnel	v1,v0,8000c62c <linux_devfile_read+0x114>
8000c5bc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:485
	assert(dev);
	ret = dev->d_linux_read(dev, base, len, (size_t *) & offset);
8000c5c0:	8c820010 	lw	v0,16(a0)
8000c5c4:	0040f809 	jalr	v0
8000c5c8:	27a70010 	addiu	a3,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:486
	if (ret >= 0) {
8000c5cc:	04400006 	bltz	v0,8000c5e8 <linux_devfile_read+0xd0>
8000c5d0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:487
		*copied_store = (size_t) ret;
8000c5d4:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:488
		file->pos += ret;
8000c5d8:	8e030010 	lw	v1,16(s0)
8000c5dc:	00621021 	addu	v0,v1,v0
8000c5e0:	ae020010 	sw	v0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:489
		ret = 0;
8000c5e4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:491
	}
	filemap_release(file);
8000c5e8:	0c002ced 	jal	8000b3b4 <filemap_release>
8000c5ec:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:492
	return ret;
8000c5f0:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:493
}
8000c5f4:	8fbf0034 	lw	ra,52(sp)
8000c5f8:	8fb10030 	lw	s1,48(sp)
8000c5fc:	8fb0002c 	lw	s0,44(sp)
8000c600:	03e00008 	jr	ra
8000c604:	27bd0038 	addiu	sp,sp,56
8000c608:	8fbf0034 	lw	ra,52(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:475
	struct file *file;
	/* use 8byte int, in case of 64bit off_t
	 * config in linux kernel */
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
8000c60c:	00001021 	move	v0,zero
linux_devfile_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:493
		file->pos += ret;
		ret = 0;
	}
	filemap_release(file);
	return ret;
}
8000c610:	8fb10030 	lw	s1,48(sp)
8000c614:	8fb0002c 	lw	s0,44(sp)
8000c618:	03e00008 	jr	ra
8000c61c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:479
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->readable) {
		return -E_INVAL;
8000c620:	0800317d 	j	8000c5f4 <linux_devfile_read+0xdc>
8000c624:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:483
	}
	filemap_acquire(file);
	offset = file->pos;
	struct device *dev = vop_info(file->node, device);
8000c628:	3c048002 	lui	a0,0x8002
8000c62c:	3c068002 	lui	a2,0x8002
8000c630:	3c078002 	lui	a3,0x8002
8000c634:	24842048 	addiu	a0,a0,8264
8000c638:	240501e3 	li	a1,483
8000c63c:	24c609b0 	addiu	a2,a2,2480
8000c640:	0c006afd 	jal	8001abf4 <__panic>
8000c644:	24e70b44 	addiu	a3,a3,2884

8000c648 <linux_devfile_write>:
linux_devfile_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:496
	filemap_release(file);
	return ret;
}

int linux_devfile_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000c648:	27bdffc8 	addiu	sp,sp,-56
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c64c:	2c820123 	sltiu	v0,a0,291
linux_devfile_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:496
	filemap_release(file);
	return ret;
}

int linux_devfile_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000c650:	afb10030 	sw	s1,48(sp)
8000c654:	afbf0034 	sw	ra,52(sp)
8000c658:	afb0002c 	sw	s0,44(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c65c:	10400036 	beqz	v0,8000c738 <linux_devfile_write+0xf0>
8000c660:	00e08821 	move	s1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c664:	afa40018 	sw	a0,24(sp)
8000c668:	afa5001c 	sw	a1,28(sp)
8000c66c:	0c002c49 	jal	8000b124 <get_filemap>
8000c670:	afa60020 	sw	a2,32(sp)
8000c674:	8fa40018 	lw	a0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c678:	8fa5001c 	lw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000c67c:	00041940 	sll	v1,a0,0x5
8000c680:	00048080 	sll	s0,a0,0x2
8000c684:	00708023 	subu	s0,v1,s0
8000c688:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c68c:	8e030000 	lw	v1,0(s0)
8000c690:	24020002 	li	v0,2
8000c694:	14620028 	bne	v1,v0,8000c738 <linux_devfile_write+0xf0>
8000c698:	8fa60020 	lw	a2,32(sp)
8000c69c:	8e02000c 	lw	v0,12(s0)
8000c6a0:	14820026 	bne	a0,v0,8000c73c <linux_devfile_write+0xf4>
8000c6a4:	8fbf0034 	lw	ra,52(sp)
linux_devfile_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:506
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->writable) {
8000c6a8:	8e020008 	lw	v0,8(s0)
8000c6ac:	10400028 	beqz	v0,8000c750 <linux_devfile_write+0x108>
8000c6b0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:509
		return -E_INVAL;
	}
	filemap_acquire(file);
8000c6b4:	afa5001c 	sw	a1,28(sp)
8000c6b8:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000c6bc:	afa60020 	sw	a2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:510
	offset = file->pos;
8000c6c0:	8e020010 	lw	v0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:511
	struct device *dev = vop_info(file->node, device);
8000c6c4:	8e040014 	lw	a0,20(s0)
8000c6c8:	8fa5001c 	lw	a1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:510

	if (!file->writable) {
		return -E_INVAL;
	}
	filemap_acquire(file);
	offset = file->pos;
8000c6cc:	00021fc3 	sra	v1,v0,0x1f
8000c6d0:	afa20010 	sw	v0,16(sp)
8000c6d4:	afa30014 	sw	v1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:511
	struct device *dev = vop_info(file->node, device);
8000c6d8:	1080001f 	beqz	a0,8000c758 <linux_devfile_write+0x110>
8000c6dc:	8fa60020 	lw	a2,32(sp)
8000c6e0:	8c830038 	lw	v1,56(a0)
8000c6e4:	24021234 	li	v0,4660
8000c6e8:	5462001c 	bnel	v1,v0,8000c75c <linux_devfile_write+0x114>
8000c6ec:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:513
	assert(dev);
	ret = dev->d_linux_write(dev, base, len, (size_t *) & offset);
8000c6f0:	8c820014 	lw	v0,20(a0)
8000c6f4:	0040f809 	jalr	v0
8000c6f8:	27a70010 	addiu	a3,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:514
	if (ret >= 0) {
8000c6fc:	04400006 	bltz	v0,8000c718 <linux_devfile_write+0xd0>
8000c700:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:515
		*copied_store = (size_t) ret;
8000c704:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:516
		file->pos += ret;
8000c708:	8e030010 	lw	v1,16(s0)
8000c70c:	00621021 	addu	v0,v1,v0
8000c710:	ae020010 	sw	v0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:517
		ret = 0;
8000c714:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:519
	}
	filemap_release(file);
8000c718:	0c002ced 	jal	8000b3b4 <filemap_release>
8000c71c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:520
	return ret;
8000c720:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:521
}
8000c724:	8fbf0034 	lw	ra,52(sp)
8000c728:	8fb10030 	lw	s1,48(sp)
8000c72c:	8fb0002c 	lw	s0,44(sp)
8000c730:	03e00008 	jr	ra
8000c734:	27bd0038 	addiu	sp,sp,56
8000c738:	8fbf0034 	lw	ra,52(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:503
	struct file *file;
	/* use 8byte int, in case of 64bit off_t
	 * config in linux kernel */
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
8000c73c:	00001021 	move	v0,zero
linux_devfile_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:521
		file->pos += ret;
		ret = 0;
	}
	filemap_release(file);
	return ret;
}
8000c740:	8fb10030 	lw	s1,48(sp)
8000c744:	8fb0002c 	lw	s0,44(sp)
8000c748:	03e00008 	jr	ra
8000c74c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:507
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->writable) {
		return -E_INVAL;
8000c750:	080031c9 	j	8000c724 <linux_devfile_write+0xdc>
8000c754:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:511
	}
	filemap_acquire(file);
	offset = file->pos;
	struct device *dev = vop_info(file->node, device);
8000c758:	3c048002 	lui	a0,0x8002
8000c75c:	3c068002 	lui	a2,0x8002
8000c760:	3c078002 	lui	a3,0x8002
8000c764:	24842048 	addiu	a0,a0,8264
8000c768:	240501ff 	li	a1,511
8000c76c:	24c609b0 	addiu	a2,a2,2480
8000c770:	0c006afd 	jal	8001abf4 <__panic>
8000c774:	24e70b44 	addiu	a3,a3,2884

8000c778 <linux_devfile_ioctl>:
linux_devfile_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:524
	filemap_release(file);
	return ret;
}

int linux_devfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000c778:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c77c:	2c820123 	sltiu	v0,a0,291
linux_devfile_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:524
	filemap_release(file);
	return ret;
}

int linux_devfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000c780:	afbf0024 	sw	ra,36(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c784:	10400028 	beqz	v0,8000c828 <linux_devfile_ioctl+0xb0>
8000c788:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c78c:	afa40010 	sw	a0,16(sp)
8000c790:	afa50014 	sw	a1,20(sp)
8000c794:	0c002c49 	jal	8000b124 <get_filemap>
8000c798:	afa60018 	sw	a2,24(sp)
8000c79c:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c7a0:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000c7a4:	00041940 	sll	v1,a0,0x5
8000c7a8:	00048080 	sll	s0,a0,0x2
8000c7ac:	00708023 	subu	s0,v1,s0
8000c7b0:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c7b4:	8e030000 	lw	v1,0(s0)
8000c7b8:	24020002 	li	v0,2
8000c7bc:	1462001a 	bne	v1,v0,8000c828 <linux_devfile_ioctl+0xb0>
8000c7c0:	8fa60018 	lw	a2,24(sp)
8000c7c4:	8e02000c 	lw	v0,12(s0)
8000c7c8:	14820017 	bne	a0,v0,8000c828 <linux_devfile_ioctl+0xb0>
8000c7cc:	02002021 	move	a0,s0
linux_devfile_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:530
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	filemap_acquire(file);
8000c7d0:	afa50014 	sw	a1,20(sp)
8000c7d4:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000c7d8:	afa60018 	sw	a2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:531
	struct device *dev = vop_info(file->node, device);
8000c7dc:	8e040014 	lw	a0,20(s0)
8000c7e0:	8fa50014 	lw	a1,20(sp)
8000c7e4:	10800015 	beqz	a0,8000c83c <linux_devfile_ioctl+0xc4>
8000c7e8:	8fa60018 	lw	a2,24(sp)
8000c7ec:	8c830038 	lw	v1,56(a0)
8000c7f0:	24021234 	li	v0,4660
8000c7f4:	54620012 	bnel	v1,v0,8000c840 <linux_devfile_ioctl+0xc8>
8000c7f8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:533
	assert(dev);
	ret = dev->d_linux_ioctl(dev, cmd, arg);
8000c7fc:	8c820018 	lw	v0,24(a0)
8000c800:	0040f809 	jalr	v0
8000c804:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:534
	filemap_release(file);
8000c808:	02002021 	move	a0,s0
8000c80c:	0c002ced 	jal	8000b3b4 <filemap_release>
8000c810:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:536
	return ret;
}
8000c814:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:535
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	ret = dev->d_linux_ioctl(dev, cmd, arg);
	filemap_release(file);
	return ret;
8000c818:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:536
}
8000c81c:	8fb00020 	lw	s0,32(sp)
8000c820:	03e00008 	jr	ra
8000c824:	27bd0028 	addiu	sp,sp,40
8000c828:	8fbf0024 	lw	ra,36(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:528
int linux_devfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
8000c82c:	00001021 	move	v0,zero
linux_devfile_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:536
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	ret = dev->d_linux_ioctl(dev, cmd, arg);
	filemap_release(file);
	return ret;
}
8000c830:	8fb00020 	lw	s0,32(sp)
8000c834:	03e00008 	jr	ra
8000c838:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:531
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
8000c83c:	3c048002 	lui	a0,0x8002
8000c840:	3c068002 	lui	a2,0x8002
8000c844:	3c078002 	lui	a3,0x8002
8000c848:	24842048 	addiu	a0,a0,8264
8000c84c:	24050213 	li	a1,531
8000c850:	24c609b0 	addiu	a2,a2,2480
8000c854:	0c006afd 	jal	8001abf4 <__panic>
8000c858:	24e70b44 	addiu	a3,a3,2884

8000c85c <linux_devfile_mmap2>:
linux_devfile_mmap2():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:540
	return ret;
}

void *linux_devfile_mmap2(void *addr, size_t len, int prot, int flags, int fd,
			  size_t pgoff)
{
8000c85c:	27bdffc0 	addiu	sp,sp,-64
8000c860:	afb10028 	sw	s1,40(sp)
8000c864:	8fb10050 	lw	s1,80(sp)
8000c868:	afb50038 	sw	s5,56(sp)
8000c86c:	afb40034 	sw	s4,52(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c870:	2e220123 	sltiu	v0,s1,291
linux_devfile_mmap2():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:540
	return ret;
}

void *linux_devfile_mmap2(void *addr, size_t len, int prot, int flags, int fd,
			  size_t pgoff)
{
8000c874:	afb30030 	sw	s3,48(sp)
8000c878:	afb2002c 	sw	s2,44(sp)
8000c87c:	afbf003c 	sw	ra,60(sp)
8000c880:	afb00024 	sw	s0,36(sp)
8000c884:	00809021 	move	s2,a0
8000c888:	00a09821 	move	s3,a1
8000c88c:	00c0a021 	move	s4,a2
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c890:	10400029 	beqz	v0,8000c938 <linux_devfile_mmap2+0xdc>
8000c894:	00e0a821 	move	s5,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c898:	0c002c49 	jal	8000b124 <get_filemap>
8000c89c:	00118080 	sll	s0,s1,0x2
8000c8a0:	00111940 	sll	v1,s1,0x5
8000c8a4:	00708023 	subu	s0,v1,s0
8000c8a8:	00508021 	addu	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c8ac:	8e030000 	lw	v1,0(s0)
8000c8b0:	24020002 	li	v0,2
8000c8b4:	14620021 	bne	v1,v0,8000c93c <linux_devfile_mmap2+0xe0>
8000c8b8:	8fbf003c 	lw	ra,60(sp)
8000c8bc:	8e02000c 	lw	v0,12(s0)
8000c8c0:	1622001f 	bne	s1,v0,8000c940 <linux_devfile_mmap2+0xe4>
8000c8c4:	00001021 	move	v0,zero
linux_devfile_mmap2():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:546
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return NULL;
	}
	filemap_acquire(file);
8000c8c8:	0c002cc5 	jal	8000b314 <filemap_acquire>
8000c8cc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:547
	struct device *dev = vop_info(file->node, device);
8000c8d0:	8e040014 	lw	a0,20(s0)
8000c8d4:	10800022 	beqz	a0,8000c960 <linux_devfile_mmap2+0x104>
8000c8d8:	24021234 	li	v0,4660
8000c8dc:	8c830038 	lw	v1,56(a0)
8000c8e0:	1462001f 	bne	v1,v0,8000c960 <linux_devfile_mmap2+0x104>
8000c8e4:	8fa20054 	lw	v0,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:549
	assert(dev);
	void *r = dev->d_linux_mmap(dev, addr, len, prot, flags, pgoff);
8000c8e8:	afb50010 	sw	s5,16(sp)
8000c8ec:	02402821 	move	a1,s2
8000c8f0:	afa20014 	sw	v0,20(sp)
8000c8f4:	8c82001c 	lw	v0,28(a0)
8000c8f8:	02603021 	move	a2,s3
8000c8fc:	0040f809 	jalr	v0
8000c900:	02803821 	move	a3,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:550
	filemap_release(file);
8000c904:	02002021 	move	a0,s0
8000c908:	0c002ced 	jal	8000b3b4 <filemap_release>
8000c90c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:552
	return r;
}
8000c910:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:551
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	void *r = dev->d_linux_mmap(dev, addr, len, prot, flags, pgoff);
	filemap_release(file);
	return r;
8000c914:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:552
}
8000c918:	8fb50038 	lw	s5,56(sp)
8000c91c:	8fb40034 	lw	s4,52(sp)
8000c920:	8fb30030 	lw	s3,48(sp)
8000c924:	8fb2002c 	lw	s2,44(sp)
8000c928:	8fb10028 	lw	s1,40(sp)
8000c92c:	8fb00024 	lw	s0,36(sp)
8000c930:	03e00008 	jr	ra
8000c934:	27bd0040 	addiu	sp,sp,64
8000c938:	8fbf003c 	lw	ra,60(sp)
fd2file():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:544
			  size_t pgoff)
{
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return NULL;
8000c93c:	00001021 	move	v0,zero
linux_devfile_mmap2():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:552
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	void *r = dev->d_linux_mmap(dev, addr, len, prot, flags, pgoff);
	filemap_release(file);
	return r;
}
8000c940:	8fb50038 	lw	s5,56(sp)
8000c944:	8fb40034 	lw	s4,52(sp)
8000c948:	8fb30030 	lw	s3,48(sp)
8000c94c:	8fb2002c 	lw	s2,44(sp)
8000c950:	8fb10028 	lw	s1,40(sp)
8000c954:	8fb00024 	lw	s0,36(sp)
8000c958:	03e00008 	jr	ra
8000c95c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/file.c:547
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return NULL;
	}
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
8000c960:	3c048002 	lui	a0,0x8002
8000c964:	3c068002 	lui	a2,0x8002
8000c968:	3c078002 	lui	a3,0x8002
8000c96c:	24842048 	addiu	a0,a0,8264
8000c970:	24050223 	li	a1,547
8000c974:	24c609b0 	addiu	a2,a2,2480
8000c978:	0c006afd 	jal	8001abf4 <__panic>
8000c97c:	24e70b44 	addiu	a3,a3,2884

8000c980 <fs_init>:
fs_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:13
#include <sfs.h>
#include <inode.h>
#include <assert.h>

void fs_init(void)
{
8000c980:	27bdffe8 	addiu	sp,sp,-24
8000c984:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:14
	vfs_init();
8000c988:	0c001221 	jal	80004884 <vfs_init>
8000c98c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:15
	dev_init();
8000c990:	0c000876 	jal	800021d8 <dev_init>
8000c994:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:16
	pipe_init();
8000c998:	0c000b84 	jal	80002e10 <pipe_init>
8000c99c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:18
	sfs_init();
}
8000c9a0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:17
void fs_init(void)
{
	vfs_init();
	dev_init();
	pipe_init();
	sfs_init();
8000c9a4:	0800193b 	j	800064ec <sfs_init>
8000c9a8:	27bd0018 	addiu	sp,sp,24

8000c9ac <fs_cleanup>:
fs_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:21
}

void fs_cleanup(void)
{
8000c9ac:	27bdffe8 	addiu	sp,sp,-24
8000c9b0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:22
	vfs_unmount_all();
8000c9b4:	0c0014c2 	jal	80005308 <vfs_unmount_all>
8000c9b8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:24
	vfs_cleanup();
}
8000c9bc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:23
}

void fs_cleanup(void)
{
	vfs_unmount_all();
	vfs_cleanup();
8000c9c0:	0800139c 	j	80004e70 <vfs_cleanup>
8000c9c4:	27bd0018 	addiu	sp,sp,24

8000c9c8 <lock_fs>:
lock_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:28
}

void lock_fs(struct fs_struct *fs_struct)
{
	down(&(fs_struct->fs_sem));
8000c9c8:	08006711 	j	80019c44 <down>
8000c9cc:	2484000c 	addiu	a0,a0,12

8000c9d0 <unlock_fs>:
unlock_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:33
}

void unlock_fs(struct fs_struct *fs_struct)
{
	up(&(fs_struct->fs_sem));
8000c9d0:	0800670f 	j	80019c3c <up>
8000c9d4:	2484000c 	addiu	a0,a0,12

8000c9d8 <fs_create>:
fs_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:37
}

struct fs_struct *fs_create(void)
{
8000c9d8:	27bdffe0 	addiu	sp,sp,-32
8000c9dc:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:40
	static_assert((int)FS_STRUCT_NENTRY > 128);
	struct fs_struct *fs_struct;
	if ((fs_struct =
8000c9e0:	0c005478 	jal	800151e0 <kmalloc>
8000c9e4:	24042000 	li	a0,8192
8000c9e8:	1040000c 	beqz	v0,8000ca1c <fs_create+0x44>
8000c9ec:	24430020 	addiu	v1,v0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:43
	     kmalloc(sizeof(struct fs_struct) + FS_STRUCT_BUFSIZE)) != NULL) {
		fs_struct->pwd = NULL;
		fs_struct->filemap = (void *)(fs_struct + 1);
8000c9f0:	ac430004 	sw	v1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:45
		atomic_set(&(fs_struct->fs_count), 0);
		sem_init(&(fs_struct->fs_sem), 1);
8000c9f4:	2444000c 	addiu	a0,v0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:42
{
	static_assert((int)FS_STRUCT_NENTRY > 128);
	struct fs_struct *fs_struct;
	if ((fs_struct =
	     kmalloc(sizeof(struct fs_struct) + FS_STRUCT_BUFSIZE)) != NULL) {
		fs_struct->pwd = NULL;
8000c9f8:	ac400000 	sw	zero,0(v0)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8000c9fc:	ac400008 	sw	zero,8(v0)
fs_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:45
		fs_struct->filemap = (void *)(fs_struct + 1);
		atomic_set(&(fs_struct->fs_count), 0);
		sem_init(&(fs_struct->fs_sem), 1);
8000ca00:	24050001 	li	a1,1
8000ca04:	0c006709 	jal	80019c24 <sem_init>
8000ca08:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:46
		filemap_init(fs_struct->filemap);
8000ca0c:	8fa20010 	lw	v0,16(sp)
8000ca10:	0c002cbb 	jal	8000b2ec <filemap_init>
8000ca14:	8c440004 	lw	a0,4(v0)
8000ca18:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:49
	}
	return fs_struct;
}
8000ca1c:	8fbf001c 	lw	ra,28(sp)
8000ca20:	03e00008 	jr	ra
8000ca24:	27bd0020 	addiu	sp,sp,32

8000ca28 <fs_destroy>:
fs_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:52

void fs_destroy(struct fs_struct *fs_struct)
{
8000ca28:	27bdffd8 	addiu	sp,sp,-40
8000ca2c:	afb40020 	sw	s4,32(sp)
8000ca30:	afbf0024 	sw	ra,36(sp)
8000ca34:	afb3001c 	sw	s3,28(sp)
8000ca38:	afb20018 	sw	s2,24(sp)
8000ca3c:	afb10014 	sw	s1,20(sp)
8000ca40:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:53
	assert(fs_struct != NULL && fs_count(fs_struct) == 0);
8000ca44:	10800032 	beqz	a0,8000cb10 <fs_destroy+0xe8>
8000ca48:	0080a021 	move	s4,a0
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000ca4c:	8c820008 	lw	v0,8(a0)
fs_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:53
8000ca50:	54400030 	bnezl	v0,8000cb14 <fs_destroy+0xec>
8000ca54:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:54
	if (fs_struct->pwd != NULL) {
8000ca58:	8c840000 	lw	a0,0(a0)
8000ca5c:	50800004 	beqzl	a0,8000ca70 <fs_destroy+0x48>
8000ca60:	8e900004 	lw	s0,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:55
		vop_ref_dec(fs_struct->pwd);
8000ca64:	0c001164 	jal	80004590 <inode_ref_dec>
8000ca68:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:58
	}
	int i;
	struct file *file = fs_struct->filemap;
8000ca6c:	8e900004 	lw	s0,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:64
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
			filemap_close(file);
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
8000ca70:	3c138002 	lui	s3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:60
		vop_ref_dec(fs_struct->pwd);
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
8000ca74:	24110002 	li	s1,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:51
		filemap_init(fs_struct->filemap);
	}
	return fs_struct;
}

void fs_destroy(struct fs_struct *fs_struct)
8000ca78:	26121fd4 	addiu	s2,s0,8148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:64
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
			filemap_close(file);
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
8000ca7c:	267323f8 	addiu	s3,s3,9208
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:60
		vop_ref_dec(fs_struct->pwd);
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
8000ca80:	8e020000 	lw	v0,0(s0)
8000ca84:	1051000f 	beq	v0,s1,8000cac4 <fs_destroy+0x9c>
8000ca88:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:63
			filemap_close(file);
		}
		if (file->status != FD_NONE)
8000ca8c:	54400013 	bnezl	v0,8000cadc <fs_destroy+0xb4>
8000ca90:	8e05000c 	lw	a1,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:59
	if (fs_struct->pwd != NULL) {
		vop_ref_dec(fs_struct->pwd);
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
8000ca94:	2610001c 	addiu	s0,s0,28
8000ca98:	5612fffa 	bnel	s0,s2,8000ca84 <fs_destroy+0x5c>
8000ca9c:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:67
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
		assert(file->status == FD_NONE);
	}
	kfree(fs_struct);
8000caa0:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:68
}
8000caa4:	8fbf0024 	lw	ra,36(sp)
8000caa8:	8fb40020 	lw	s4,32(sp)
8000caac:	8fb3001c 	lw	s3,28(sp)
8000cab0:	8fb20018 	lw	s2,24(sp)
8000cab4:	8fb10014 	lw	s1,20(sp)
8000cab8:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:67
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
		assert(file->status == FD_NONE);
	}
	kfree(fs_struct);
8000cabc:	080054a3 	j	8001528c <kfree>
8000cac0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:61
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
			filemap_close(file);
8000cac4:	0c002d4b 	jal	8000b52c <filemap_close>
8000cac8:	02002021 	move	a0,s0
8000cacc:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:63
		}
		if (file->status != FD_NONE)
8000cad0:	5040fff1 	beqzl	v0,8000ca98 <fs_destroy+0x70>
8000cad4:	2610001c 	addiu	s0,s0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:64
			kprintf("file->fd:%d\n", file->fd);
8000cad8:	8e05000c 	lw	a1,12(s0)
8000cadc:	0c00798a 	jal	8001e628 <kprintf>
8000cae0:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:65
		assert(file->status == FD_NONE);
8000cae4:	8e020000 	lw	v0,0(s0)
8000cae8:	5040ffeb 	beqzl	v0,8000ca98 <fs_destroy+0x70>
8000caec:	2610001c 	addiu	s0,s0,28
8000caf0:	3c048002 	lui	a0,0x8002
8000caf4:	3c068002 	lui	a2,0x8002
8000caf8:	3c078002 	lui	a3,0x8002
8000cafc:	248419f4 	addiu	a0,a0,6644
8000cb00:	24050041 	li	a1,65
8000cb04:	24c609b0 	addiu	a2,a2,2480
8000cb08:	0c006afd 	jal	8001abf4 <__panic>
8000cb0c:	24e72408 	addiu	a3,a3,9224
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:53
	return fs_struct;
}

void fs_destroy(struct fs_struct *fs_struct)
{
	assert(fs_struct != NULL && fs_count(fs_struct) == 0);
8000cb10:	3c048002 	lui	a0,0x8002
8000cb14:	3c068002 	lui	a2,0x8002
8000cb18:	3c078002 	lui	a3,0x8002
8000cb1c:	248419f4 	addiu	a0,a0,6644
8000cb20:	24050035 	li	a1,53
8000cb24:	24c609b0 	addiu	a2,a2,2480
8000cb28:	0c006afd 	jal	8001abf4 <__panic>
8000cb2c:	24e723c8 	addiu	a3,a3,9160

8000cb30 <fs_closeall>:
fs_closeall():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:71
	}
	kfree(fs_struct);
}

void fs_closeall(struct fs_struct *fs_struct)
{
8000cb30:	27bdffe0 	addiu	sp,sp,-32
8000cb34:	afbf001c 	sw	ra,28(sp)
8000cb38:	afb20018 	sw	s2,24(sp)
8000cb3c:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:72
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000cb40:	10800018 	beqz	a0,8000cba4 <fs_closeall+0x74>
8000cb44:	afb00010 	sw	s0,16(sp)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000cb48:	8c820008 	lw	v0,8(a0)
fs_closeall():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:72
8000cb4c:	18400015 	blez	v0,8000cba4 <fs_closeall+0x74>
8000cb50:	24120002 	li	s2,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:74
	int i;
	struct file *file = fs_struct->filemap;
8000cb54:	8c910004 	lw	s1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:75
	for (i = 3, file += 2; i < FS_STRUCT_NENTRY; i++, file++) {
8000cb58:	26300038 	addiu	s0,s1,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:70
		assert(file->status == FD_NONE);
	}
	kfree(fs_struct);
}

void fs_closeall(struct fs_struct *fs_struct)
8000cb5c:	080032db 	j	8000cb6c <fs_closeall+0x3c>
8000cb60:	26311fb8 	addiu	s1,s1,8120
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:75
{
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 3, file += 2; i < FS_STRUCT_NENTRY; i++, file++) {
8000cb64:	1211000a 	beq	s0,s1,8000cb90 <fs_closeall+0x60>
8000cb68:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:76
		if (file->status == FD_OPENED) {
8000cb6c:	8e020000 	lw	v0,0(s0)
8000cb70:	5452fffc 	bnel	v0,s2,8000cb64 <fs_closeall+0x34>
8000cb74:	2610001c 	addiu	s0,s0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:77
			filemap_close(file);
8000cb78:	02002021 	move	a0,s0
8000cb7c:	0c002d4b 	jal	8000b52c <filemap_close>
8000cb80:	2610001c 	addiu	s0,s0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:75
void fs_closeall(struct fs_struct *fs_struct)
{
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 3, file += 2; i < FS_STRUCT_NENTRY; i++, file++) {
8000cb84:	5611fffa 	bnel	s0,s1,8000cb70 <fs_closeall+0x40>
8000cb88:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:80
		if (file->status == FD_OPENED) {
			filemap_close(file);
		}
	}
}
8000cb8c:	8fbf001c 	lw	ra,28(sp)
8000cb90:	8fb20018 	lw	s2,24(sp)
8000cb94:	8fb10014 	lw	s1,20(sp)
8000cb98:	8fb00010 	lw	s0,16(sp)
8000cb9c:	03e00008 	jr	ra
8000cba0:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:72
	kfree(fs_struct);
}

void fs_closeall(struct fs_struct *fs_struct)
{
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000cba4:	3c048002 	lui	a0,0x8002
8000cba8:	3c068002 	lui	a2,0x8002
8000cbac:	3c078002 	lui	a3,0x8002
8000cbb0:	248419f4 	addiu	a0,a0,6644
8000cbb4:	24050048 	li	a1,72
8000cbb8:	24c609b0 	addiu	a2,a2,2480
8000cbbc:	0c006afd 	jal	8001abf4 <__panic>
8000cbc0:	24e72050 	addiu	a3,a3,8272

8000cbc4 <dup_fs>:
dup_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:83
		}
	}
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
{
8000cbc4:	27bdffd0 	addiu	sp,sp,-48
8000cbc8:	afb1001c 	sw	s1,28(sp)
8000cbcc:	afbf002c 	sw	ra,44(sp)
8000cbd0:	afb40028 	sw	s4,40(sp)
8000cbd4:	afb30024 	sw	s3,36(sp)
8000cbd8:	afb20020 	sw	s2,32(sp)
8000cbdc:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:84
	assert(to != NULL && from != NULL);
8000cbe0:	10800039 	beqz	a0,8000ccc8 <dup_fs+0x104>
8000cbe4:	00808821 	move	s1,a0
8000cbe8:	50a00038 	beqzl	a1,8000cccc <dup_fs+0x108>
8000cbec:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000cbf0:	8c820008 	lw	v0,8(a0)
dup_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:85
	assert(fs_count(to) == 0 && fs_count(from) > 0);
8000cbf4:	1440002d 	bnez	v0,8000ccac <dup_fs+0xe8>
8000cbf8:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000cbfc:	8ca20008 	lw	v0,8(a1)
dup_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:85
8000cc00:	1840002b 	blez	v0,8000ccb0 <dup_fs+0xec>
8000cc04:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:86
	if ((to->pwd = from->pwd) != NULL) {
8000cc08:	8ca40000 	lw	a0,0(a1)
8000cc0c:	10800004 	beqz	a0,8000cc20 <dup_fs+0x5c>
8000cc10:	ae240000 	sw	a0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:87
		vop_ref_inc(to->pwd);
8000cc14:	0c0010a8 	jal	800042a0 <inode_ref_inc>
8000cc18:	afa50010 	sw	a1,16(sp)
8000cc1c:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:90
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
8000cc20:	8cb00004 	lw	s0,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:92
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
		if (from_file->status == FD_OPENED) {
8000cc24:	24130002 	li	s3,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:90
	assert(fs_count(to) == 0 && fs_count(from) > 0);
	if ((to->pwd = from->pwd) != NULL) {
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
8000cc28:	8e310004 	lw	s1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:92
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
		if (from_file->status == FD_OPENED) {
8000cc2c:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:82
			filemap_close(file);
		}
	}
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
8000cc30:	26121fd4 	addiu	s2,s0,8148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:92
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
		if (from_file->status == FD_OPENED) {
8000cc34:	1453000b 	bne	v0,s3,8000cc64 <dup_fs+0xa0>
8000cc38:	24140001 	li	s4,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:94
			/* alloc_fd first */
			to_file->status = FD_INIT;
8000cc3c:	ae340000 	sw	s4,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:95
			filemap_dup(to_file, from_file);
8000cc40:	02202021 	move	a0,s1
8000cc44:	0c002d7e 	jal	8000b5f8 <filemap_dup>
8000cc48:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:91
	if ((to->pwd = from->pwd) != NULL) {
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
8000cc4c:	2610001c 	addiu	s0,s0,28
8000cc50:	1212000d 	beq	s0,s2,8000cc88 <dup_fs+0xc4>
8000cc54:	2631001c 	addiu	s1,s1,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:92
		if (from_file->status == FD_OPENED) {
8000cc58:	8e020000 	lw	v0,0(s0)
8000cc5c:	5053fff8 	beql	v0,s3,8000cc40 <dup_fs+0x7c>
8000cc60:	ae340000 	sw	s4,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:97
			/* alloc_fd first */
			to_file->status = FD_INIT;
			filemap_dup(to_file, from_file);
		}
		else if(from_file->status != FD_NONE) {
8000cc64:	5040fffa 	beqzl	v0,8000cc50 <dup_fs+0x8c>
8000cc68:	2610001c 	addiu	s0,s0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:98
			to_file->status = from_file->status;
8000cc6c:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:99
			filemap_dup_close(to_file, from_file);
8000cc70:	02202021 	move	a0,s1
8000cc74:	02002821 	move	a1,s0
8000cc78:	0c002da4 	jal	8000b690 <filemap_dup_close>
8000cc7c:	2610001c 	addiu	s0,s0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:91
	if ((to->pwd = from->pwd) != NULL) {
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
8000cc80:	1612fff5 	bne	s0,s2,8000cc58 <dup_fs+0x94>
8000cc84:	2631001c 	addiu	s1,s1,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:103
			to_file->status = from_file->status;
			filemap_dup_close(to_file, from_file);
		}
	}
	return 0;
}
8000cc88:	8fbf002c 	lw	ra,44(sp)
8000cc8c:	00001021 	move	v0,zero
8000cc90:	8fb40028 	lw	s4,40(sp)
8000cc94:	8fb30024 	lw	s3,36(sp)
8000cc98:	8fb20020 	lw	s2,32(sp)
8000cc9c:	8fb1001c 	lw	s1,28(sp)
8000cca0:	8fb00018 	lw	s0,24(sp)
8000cca4:	03e00008 	jr	ra
8000cca8:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:85
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
{
	assert(to != NULL && from != NULL);
	assert(fs_count(to) == 0 && fs_count(from) > 0);
8000ccac:	3c068002 	lui	a2,0x8002
8000ccb0:	3c078002 	lui	a3,0x8002
8000ccb4:	248419f4 	addiu	a0,a0,6644
8000ccb8:	24050055 	li	a1,85
8000ccbc:	24c609b0 	addiu	a2,a2,2480
8000ccc0:	0c006afd 	jal	8001abf4 <__panic>
8000ccc4:	24e7243c 	addiu	a3,a3,9276
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/fs.c:84
	}
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
{
	assert(to != NULL && from != NULL);
8000ccc8:	3c048002 	lui	a0,0x8002
8000cccc:	3c068002 	lui	a2,0x8002
8000ccd0:	3c078002 	lui	a3,0x8002
8000ccd4:	248419f4 	addiu	a0,a0,6644
8000ccd8:	24050054 	li	a1,84
8000ccdc:	24c609b0 	addiu	a2,a2,2480
8000cce0:	0c006afd 	jal	8001abf4 <__panic>
8000cce4:	24e72420 	addiu	a3,a3,9248

8000cce8 <iobuf_init>:
iobuf_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:9
#include <error.h>
#include <assert.h>

struct iobuf *iobuf_init(struct iobuf *iob, void *base, size_t len,
			 off_t offset)
{
8000cce8:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:10
	iob->io_base = base;
8000ccec:	ac850000 	sw	a1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:11
	iob->io_offset = offset;
8000ccf0:	ac870004 	sw	a3,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:12
	iob->io_len = iob->io_resid = len;
8000ccf4:	ac86000c 	sw	a2,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:14
	return iob;
}
8000ccf8:	03e00008 	jr	ra
8000ccfc:	ac860008 	sw	a2,8(a0)

8000cd00 <iobuf_skip>:
iobuf_skip():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:57
	return (len == 0) ? 0 : -E_NO_MEM;
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
	assert(iob->io_resid >= n);
8000cd00:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:56
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
8000cd04:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:57
	assert(iob->io_resid >= n);
8000cd08:	0045182b 	sltu	v1,v0,a1
8000cd0c:	1460000c 	bnez	v1,8000cd40 <iobuf_skip+0x40>
8000cd10:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:58
	iob->io_base += n, iob->io_offset += n, iob->io_resid -= n;
8000cd14:	8c830000 	lw	v1,0(a0)
8000cd18:	8c860004 	lw	a2,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:59
}
8000cd1c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:58
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
	assert(iob->io_resid >= n);
	iob->io_base += n, iob->io_offset += n, iob->io_resid -= n;
8000cd20:	00451023 	subu	v0,v0,a1
8000cd24:	00651821 	addu	v1,v1,a1
8000cd28:	00c52821 	addu	a1,a2,a1
8000cd2c:	ac830000 	sw	v1,0(a0)
8000cd30:	ac850004 	sw	a1,4(a0)
8000cd34:	ac82000c 	sw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:59
}
8000cd38:	03e00008 	jr	ra
8000cd3c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:57
	return (len == 0) ? 0 : -E_NO_MEM;
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
	assert(iob->io_resid >= n);
8000cd40:	3c048002 	lui	a0,0x8002
8000cd44:	3c068002 	lui	a2,0x8002
8000cd48:	3c078002 	lui	a3,0x8002
8000cd4c:	24842464 	addiu	a0,a0,9316
8000cd50:	24050039 	li	a1,57
8000cd54:	24c609b0 	addiu	a2,a2,2480
8000cd58:	0c006afd 	jal	8001abf4 <__panic>
8000cd5c:	24e7246c 	addiu	a3,a3,9324

8000cd60 <iobuf_move_zeros>:
iobuf_move_zeros():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:42
}

int iobuf_move_zeros(struct iobuf *iob, size_t len, size_t * copiedp)
{
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000cd60:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:40
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}

int iobuf_move_zeros(struct iobuf *iob, size_t len, size_t * copiedp)
{
8000cd64:	27bdffd8 	addiu	sp,sp,-40
8000cd68:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:42
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000cd6c:	0045882b 	sltu	s1,v0,a1
8000cd70:	00b1100a 	movz	v0,a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:40
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}

int iobuf_move_zeros(struct iobuf *iob, size_t len, size_t * copiedp)
{
8000cd74:	afb30020 	sw	s3,32(sp)
8000cd78:	afb2001c 	sw	s2,28(sp)
8000cd7c:	afb00014 	sw	s0,20(sp)
8000cd80:	afbf0024 	sw	ra,36(sp)
8000cd84:	00809821 	move	s3,a0
8000cd88:	00a08021 	move	s0,a1
8000cd8c:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:45
	size_t alen;
	if ((alen = iob->io_resid) > len) {
		alen = len;
	}
	if (alen > 0) {
8000cd90:	1440000c 	bnez	v0,8000cdc4 <iobuf_move_zeros+0x64>
8000cd94:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:49
		memset(iob->io_base, 0, alen);
		iobuf_skip(iob, alen), len -= alen;
	}
	if (copiedp != NULL) {
8000cd98:	56400001 	bnezl	s2,8000cda0 <iobuf_move_zeros+0x40>
8000cd9c:	ae510000 	sw	s1,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:53
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}
8000cda0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:52
		iobuf_skip(iob, alen), len -= alen;
	}
	if (copiedp != NULL) {
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
8000cda4:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:53
}
8000cda8:	0010100a 	movz	v0,zero,s0
8000cdac:	8fb30020 	lw	s3,32(sp)
8000cdb0:	8fb2001c 	lw	s2,28(sp)
8000cdb4:	8fb10018 	lw	s1,24(sp)
8000cdb8:	8fb00014 	lw	s0,20(sp)
8000cdbc:	03e00008 	jr	ra
8000cdc0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:46
	size_t alen;
	if ((alen = iob->io_resid) > len) {
		alen = len;
	}
	if (alen > 0) {
		memset(iob->io_base, 0, alen);
8000cdc4:	8c840000 	lw	a0,0(a0)
8000cdc8:	00403021 	move	a2,v0
8000cdcc:	0c005c44 	jal	80017110 <memset>
8000cdd0:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:47
		iobuf_skip(iob, alen), len -= alen;
8000cdd4:	02602021 	move	a0,s3
8000cdd8:	0c003340 	jal	8000cd00 <iobuf_skip>
8000cddc:	02202821 	move	a1,s1
8000cde0:	08003366 	j	8000cd98 <iobuf_move_zeros+0x38>
8000cde4:	02118023 	subu	s0,s0,s1

8000cde8 <iobuf_move>:
iobuf_move():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:21
int
iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b,
	   size_t * copiedp)
{
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000cde8:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:19
}

int
iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b,
	   size_t * copiedp)
{
8000cdec:	27bdffd8 	addiu	sp,sp,-40
8000cdf0:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:21
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000cdf4:	0046882b 	sltu	s1,v0,a2
8000cdf8:	00d1100a 	movz	v0,a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:19
}

int
iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b,
	   size_t * copiedp)
{
8000cdfc:	afb30020 	sw	s3,32(sp)
8000ce00:	afb2001c 	sw	s2,28(sp)
8000ce04:	afb00014 	sw	s0,20(sp)
8000ce08:	afbf0024 	sw	ra,36(sp)
8000ce0c:	00809021 	move	s2,a0
8000ce10:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:21
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000ce14:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:24
		alen = len;
	}
	if (alen > 0) {
8000ce18:	1040000b 	beqz	v0,8000ce48 <iobuf_move+0x60>
8000ce1c:	8fb30038 	lw	s3,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:25
		void *src = iob->io_base, *dst = data;
8000ce20:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:26
		if (m2b) {
8000ce24:	14e00013 	bnez	a3,8000ce74 <iobuf_move+0x8c>
8000ce28:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:30
			void *tmp = src;
			src = dst, dst = tmp;
		}
		memmove(dst, src, alen);
8000ce2c:	02203021 	move	a2,s1
8000ce30:	0c005c4e 	jal	80017138 <memmove>
8000ce34:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:31
		iobuf_skip(iob, alen), len -= alen;
8000ce38:	02402021 	move	a0,s2
8000ce3c:	0c003340 	jal	8000cd00 <iobuf_skip>
8000ce40:	02202821 	move	a1,s1
8000ce44:	02118023 	subu	s0,s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:33
	}
	if (copiedp != NULL) {
8000ce48:	56600001 	bnezl	s3,8000ce50 <iobuf_move+0x68>
8000ce4c:	ae710000 	sw	s1,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:37
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}
8000ce50:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:36
		iobuf_skip(iob, alen), len -= alen;
	}
	if (copiedp != NULL) {
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
8000ce54:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:37
}
8000ce58:	0010100a 	movz	v0,zero,s0
8000ce5c:	8fb30020 	lw	s3,32(sp)
8000ce60:	8fb2001c 	lw	s2,28(sp)
8000ce64:	8fb10018 	lw	s1,24(sp)
8000ce68:	8fb00014 	lw	s0,20(sp)
8000ce6c:	03e00008 	jr	ra
8000ce70:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:28
	}
	if (alen > 0) {
		void *src = iob->io_base, *dst = data;
		if (m2b) {
			void *tmp = src;
			src = dst, dst = tmp;
8000ce74:	00402021 	move	a0,v0
8000ce78:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:30
		}
		memmove(dst, src, alen);
8000ce7c:	02203021 	move	a2,s1
8000ce80:	0c005c4e 	jal	80017138 <memmove>
8000ce84:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/iobuf.c:31
		iobuf_skip(iob, alen), len -= alen;
8000ce88:	02402021 	move	a0,s2
8000ce8c:	0c003340 	jal	8000cd00 <iobuf_skip>
8000ce90:	02202821 	move	a1,s1
8000ce94:	08003392 	j	8000ce48 <iobuf_move+0x60>
8000ce98:	02118023 	subu	s0,s0,s1

8000ce9c <copy_path>:
copy_path():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:21

#define IOBUF_SIZE                          4096

static int copy_path(char **to, const char *from)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000ce9c:	3c028015 	lui	v0,0x8015
8000cea0:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:20
#include <mips_io.h>

#define IOBUF_SIZE                          4096

static int copy_path(char **to, const char *from)
{
8000cea4:	27bdffd8 	addiu	sp,sp,-40
8000cea8:	afb2001c 	sw	s2,28(sp)
8000ceac:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:23
	struct mm_struct *mm = pls_read(current)->mm;
	char *buffer;
	if ((buffer = kmalloc(FS_MAX_FPATH_LEN + 1)) == NULL) {
8000ceb0:	24041000 	li	a0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:20
#include <mips_io.h>

#define IOBUF_SIZE                          4096

static int copy_path(char **to, const char *from)
{
8000ceb4:	afb30020 	sw	s3,32(sp)
8000ceb8:	afb10018 	sw	s1,24(sp)
8000cebc:	afb00014 	sw	s0,20(sp)
8000cec0:	afbf0024 	sw	ra,36(sp)
8000cec4:	00a09821 	move	s3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:23
	struct mm_struct *mm = pls_read(current)->mm;
	char *buffer;
	if ((buffer = kmalloc(FS_MAX_FPATH_LEN + 1)) == NULL) {
8000cec8:	0c005478 	jal	800151e0 <kmalloc>
8000cecc:	8c510020 	lw	s1,32(v0)
8000ced0:	00408021 	move	s0,v0
8000ced4:	1200000e 	beqz	s0,8000cf10 <copy_path+0x74>
8000ced8:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:26
		return -E_NO_MEM;
	}
	lock_mm(mm);
8000cedc:	0c004c18 	jal	80013060 <lock_mm>
8000cee0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:27
	if (!copy_string(mm, buffer, from, FS_MAX_FPATH_LEN + 1)) {
8000cee4:	02202021 	move	a0,s1
8000cee8:	02002821 	move	a1,s0
8000ceec:	02603021 	move	a2,s3
8000cef0:	0c00784d 	jal	8001e134 <copy_string>
8000cef4:	24071000 	li	a3,4096
8000cef8:	1040000c 	beqz	v0,8000cf2c <copy_path+0x90>
8000cefc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:31
		unlock_mm(mm);
		goto failed_cleanup;
	}
	unlock_mm(mm);
8000cf00:	0c004c29 	jal	800130a4 <unlock_mm>
8000cf04:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:32
	*to = buffer;
8000cf08:	ae500000 	sw	s0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:33
	return 0;
8000cf0c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:38

failed_cleanup:
	kfree(buffer);
	return -E_INVAL;
}
8000cf10:	8fbf0024 	lw	ra,36(sp)
8000cf14:	8fb30020 	lw	s3,32(sp)
8000cf18:	8fb2001c 	lw	s2,28(sp)
8000cf1c:	8fb10018 	lw	s1,24(sp)
8000cf20:	8fb00014 	lw	s0,20(sp)
8000cf24:	03e00008 	jr	ra
8000cf28:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:28
	if ((buffer = kmalloc(FS_MAX_FPATH_LEN + 1)) == NULL) {
		return -E_NO_MEM;
	}
	lock_mm(mm);
	if (!copy_string(mm, buffer, from, FS_MAX_FPATH_LEN + 1)) {
		unlock_mm(mm);
8000cf2c:	0c004c29 	jal	800130a4 <unlock_mm>
8000cf30:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:36
	unlock_mm(mm);
	*to = buffer;
	return 0;

failed_cleanup:
	kfree(buffer);
8000cf34:	0c0054a3 	jal	8001528c <kfree>
8000cf38:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:37
	return -E_INVAL;
8000cf3c:	080033c4 	j	8000cf10 <copy_path+0x74>
8000cf40:	2402ffea 	li	v0,-22

8000cf44 <sysfile_open>:
sysfile_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:41
}

int sysfile_open(const char *__path, uint32_t open_flags)
{
8000cf44:	27bdffd8 	addiu	sp,sp,-40
8000cf48:	00801021 	move	v0,a0
8000cf4c:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:44
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000cf50:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:41
	kfree(buffer);
	return -E_INVAL;
}

int sysfile_open(const char *__path, uint32_t open_flags)
{
8000cf54:	00a08021 	move	s0,a1
8000cf58:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:44
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000cf5c:	0c0033a7 	jal	8000ce9c <copy_path>
8000cf60:	00402821 	move	a1,v0
8000cf64:	14400009 	bnez	v0,8000cf8c <sysfile_open+0x48>
8000cf68:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:47
		return ret;
	}
	ret = file_open(path, open_flags);
8000cf6c:	8fa40010 	lw	a0,16(sp)
8000cf70:	0c002df0 	jal	8000b7c0 <file_open>
8000cf74:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:48
	kfree(path);
8000cf78:	8fa40010 	lw	a0,16(sp)
8000cf7c:	0c0054a3 	jal	8001528c <kfree>
8000cf80:	afa20018 	sw	v0,24(sp)
8000cf84:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:50
	return ret;
}
8000cf88:	8fbf0024 	lw	ra,36(sp)
8000cf8c:	8fb00020 	lw	s0,32(sp)
8000cf90:	03e00008 	jr	ra
8000cf94:	27bd0028 	addiu	sp,sp,40

8000cf98 <sysfile_close>:
sysfile_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:54

int sysfile_close(int fd)
{
	return file_close(fd);
8000cf98:	08002e55 	j	8000b954 <file_close>
8000cf9c:	00000000 	nop

8000cfa0 <sysfile_read>:
sysfile_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:62
int sysfile_read(int fd, void *base, size_t len)
{
	int ret = 0;
	//kprintf("*base=%d\n\r",*(int*)base);
	//kprintf("len=%d\n\r",len);
	struct mm_struct *mm = pls_read(current)->mm;
8000cfa0:	3c028015 	lui	v0,0x8015
8000cfa4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:58
{
	return file_close(fd);
}

int sysfile_read(int fd, void *base, size_t len)
{
8000cfa8:	27bdffc0 	addiu	sp,sp,-64
8000cfac:	afb5002c 	sw	s5,44(sp)
8000cfb0:	afb30024 	sw	s3,36(sp)
8000cfb4:	afb20020 	sw	s2,32(sp)
8000cfb8:	afb1001c 	sw	s1,28(sp)
8000cfbc:	afb00018 	sw	s0,24(sp)
8000cfc0:	afbf003c 	sw	ra,60(sp)
8000cfc4:	afbe0038 	sw	s8,56(sp)
8000cfc8:	afb70034 	sw	s7,52(sp)
8000cfcc:	afb60030 	sw	s6,48(sp)
8000cfd0:	afb40028 	sw	s4,40(sp)
8000cfd4:	00c08021 	move	s0,a2
8000cfd8:	00809021 	move	s2,a0
8000cfdc:	00a0a821 	move	s5,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:62
	int ret = 0;
	//kprintf("*base=%d\n\r",*(int*)base);
	//kprintf("len=%d\n\r",len);
	struct mm_struct *mm = pls_read(current)->mm;
8000cfe0:	8c530020 	lw	s3,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:64
	//kprintf("ok1\n\r");
	if (len == 0) {
8000cfe4:	14c0000e 	bnez	a2,8000d020 <sysfile_read+0x80>
8000cfe8:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:115
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000cfec:	8fbf003c 	lw	ra,60(sp)
8000cff0:	02201021 	move	v0,s1
8000cff4:	8fbe0038 	lw	s8,56(sp)
8000cff8:	8fb70034 	lw	s7,52(sp)
8000cffc:	8fb60030 	lw	s6,48(sp)
8000d000:	8fb5002c 	lw	s5,44(sp)
8000d004:	8fb40028 	lw	s4,40(sp)
8000d008:	8fb30024 	lw	s3,36(sp)
8000d00c:	8fb20020 	lw	s2,32(sp)
8000d010:	8fb1001c 	lw	s1,28(sp)
8000d014:	8fb00018 	lw	s0,24(sp)
8000d018:	03e00008 	jr	ra
8000d01c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:68
	//kprintf("ok1\n\r");
	if (len == 0) {
		return 0;
	}

	if (!file_testfd(fd, 1, 0)) {
8000d020:	24050001 	li	a1,1
8000d024:	0c002dc8 	jal	8000b720 <file_testfd>
8000d028:	00003021 	move	a2,zero
8000d02c:	1040ffef 	beqz	v0,8000cfec <sysfile_read+0x4c>
8000d030:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:73
		return -E_INVAL;
	}
	//kprintf("ok2\n\r");
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
8000d034:	0c003121 	jal	8000c484 <__is_linux_devfile>
8000d038:	02402021 	move	a0,s2
8000d03c:	1440003f 	bnez	v0,8000d13c <sysfile_read+0x19c>
8000d040:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:81
		if (ret)
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
8000d044:	0c005478 	jal	800151e0 <kmalloc>
8000d048:	24041000 	li	a0,4096
8000d04c:	1040004f 	beqz	v0,8000d18c <sysfile_read+0x1ec>
8000d050:	0040a021 	move	s4,v0
8000d054:	0000b821 	move	s7,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:87
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
		if ((alen = IOBUF_SIZE) > len) {
8000d058:	24161000 	li	s6,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:99
				if (copy_to_user(mm, base, buffer, alen)) {
					assert(len >= alen);
					base += alen, len -= alen, copied +=
					    alen;
				} else if (ret == 0) {
					ret = -E_INVAL;
8000d05c:	241effea 	li	s8,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:87
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
		if ((alen = IOBUF_SIZE) > len) {
8000d060:	2e021000 	sltiu	v0,s0,4096
8000d064:	afb60010 	sw	s6,16(sp)
8000d068:	10400003 	beqz	v0,8000d078 <sysfile_read+0xd8>
8000d06c:	24061000 	li	a2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:88
			alen = len;
8000d070:	afb00010 	sw	s0,16(sp)
8000d074:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:90
		}
		ret = file_read(fd, buffer, alen, &alen);
8000d078:	02402021 	move	a0,s2
8000d07c:	02802821 	move	a1,s4
8000d080:	0c002e72 	jal	8000b9c8 <file_read>
8000d084:	27a70010 	addiu	a3,sp,16
8000d088:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:91
		if (alen != 0) {
8000d08c:	8fa20010 	lw	v0,16(sp)
8000d090:	14400017 	bnez	v0,8000d0f0 <sysfile_read+0x150>
8000d094:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:104
					ret = -E_INVAL;
				}
			}
			unlock_mm(mm);
		}
		if (ret != 0 || alen == 0) {
8000d098:	16200005 	bnez	s1,8000d0b0 <sysfile_read+0x110>
8000d09c:	8fa20010 	lw	v0,16(sp)
8000d0a0:	10400003 	beqz	v0,8000d0b0 <sysfile_read+0x110>
8000d0a4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:86
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
8000d0a8:	1600ffee 	bnez	s0,8000d064 <sysfile_read+0xc4>
8000d0ac:	2e021000 	sltiu	v0,s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:110
			goto out;
		}
	}

out:
	kfree(buffer);
8000d0b0:	0c0054a3 	jal	8001528c <kfree>
8000d0b4:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:115
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d0b8:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:112
	}

out:
	kfree(buffer);
	if (copied != 0) {
		return copied;
8000d0bc:	02f7880b 	movn	s1,s7,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:115
	}
	return ret;
}
8000d0c0:	02201021 	move	v0,s1
8000d0c4:	8fbe0038 	lw	s8,56(sp)
8000d0c8:	8fb70034 	lw	s7,52(sp)
8000d0cc:	8fb60030 	lw	s6,48(sp)
8000d0d0:	8fb5002c 	lw	s5,44(sp)
8000d0d4:	8fb40028 	lw	s4,40(sp)
8000d0d8:	8fb30024 	lw	s3,36(sp)
8000d0dc:	8fb20020 	lw	s2,32(sp)
8000d0e0:	8fb1001c 	lw	s1,28(sp)
8000d0e4:	8fb00018 	lw	s0,24(sp)
8000d0e8:	03e00008 	jr	ra
8000d0ec:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:92
		if ((alen = IOBUF_SIZE) > len) {
			alen = len;
		}
		ret = file_read(fd, buffer, alen, &alen);
		if (alen != 0) {
			lock_mm(mm);
8000d0f0:	0c004c18 	jal	80013060 <lock_mm>
8000d0f4:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:94
			{
				if (copy_to_user(mm, base, buffer, alen)) {
8000d0f8:	8fa70010 	lw	a3,16(sp)
8000d0fc:	02602021 	move	a0,s3
8000d100:	02a02821 	move	a1,s5
8000d104:	0c007834 	jal	8001e0d0 <copy_to_user>
8000d108:	02803021 	move	a2,s4
8000d10c:	50400007 	beqzl	v0,8000d12c <sysfile_read+0x18c>
8000d110:	03d1880a 	movz	s1,s8,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:95
					assert(len >= alen);
8000d114:	8fa20010 	lw	v0,16(sp)
8000d118:	0202182b 	sltu	v1,s0,v0
8000d11c:	1460001d 	bnez	v1,8000d194 <sysfile_read+0x1f4>
8000d120:	02a2a821 	addu	s5,s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:96
					base += alen, len -= alen, copied +=
8000d124:	02028023 	subu	s0,s0,v0
8000d128:	02e2b821 	addu	s7,s7,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:102
					    alen;
				} else if (ret == 0) {
					ret = -E_INVAL;
				}
			}
			unlock_mm(mm);
8000d12c:	0c004c29 	jal	800130a4 <unlock_mm>
8000d130:	02602021 	move	a0,s3
8000d134:	08003426 	j	8000d098 <sysfile_read+0xf8>
8000d138:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:75
	}
	//kprintf("ok2\n\r");
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
		size_t alen = 0;//kprintf("ok2\n\r");
		ret = linux_devfile_read(fd, base, len, &alen);
8000d13c:	02a02821 	move	a1,s5
8000d140:	02003021 	move	a2,s0
8000d144:	27a70014 	addiu	a3,sp,20
8000d148:	0c003146 	jal	8000c518 <linux_devfile_read>
8000d14c:	afa00014 	sw	zero,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:78
		if (ret)
			return ret;
		return alen;
8000d150:	8fb10014 	lw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:115
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d154:	8fbf003c 	lw	ra,60(sp)
8000d158:	8fbe0038 	lw	s8,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:78
	if (__is_linux_devfile(fd)) {
		size_t alen = 0;//kprintf("ok2\n\r");
		ret = linux_devfile_read(fd, base, len, &alen);
		if (ret)
			return ret;
		return alen;
8000d15c:	0042880b 	movn	s1,v0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:115
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d160:	02201021 	move	v0,s1
8000d164:	8fb70034 	lw	s7,52(sp)
8000d168:	8fb60030 	lw	s6,48(sp)
8000d16c:	8fb5002c 	lw	s5,44(sp)
8000d170:	8fb40028 	lw	s4,40(sp)
8000d174:	8fb30024 	lw	s3,36(sp)
8000d178:	8fb20020 	lw	s2,32(sp)
8000d17c:	8fb1001c 	lw	s1,28(sp)
8000d180:	8fb00018 	lw	s0,24(sp)
8000d184:	03e00008 	jr	ra
8000d188:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:82
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
8000d18c:	080033fb 	j	8000cfec <sysfile_read+0x4c>
8000d190:	2411fff4 	li	s1,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:95
		ret = file_read(fd, buffer, alen, &alen);
		if (alen != 0) {
			lock_mm(mm);
			{
				if (copy_to_user(mm, base, buffer, alen)) {
					assert(len >= alen);
8000d194:	3c048002 	lui	a0,0x8002
8000d198:	3c068002 	lui	a2,0x8002
8000d19c:	3c078002 	lui	a3,0x8002
8000d1a0:	24842480 	addiu	a0,a0,9344
8000d1a4:	2405005f 	li	a1,95
8000d1a8:	24c609b0 	addiu	a2,a2,2480
8000d1ac:	0c006afd 	jal	8001abf4 <__panic>
8000d1b0:	24e7248c 	addiu	a3,a3,9356

8000d1b4 <sysfile_write>:
sysfile_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:120
}

int sysfile_write(int fd, void *base, size_t len)
{
	int ret = 0;
	struct mm_struct *mm = pls_read(current)->mm;
8000d1b4:	3c028015 	lui	v0,0x8015
8000d1b8:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:118
	}
	return ret;
}

int sysfile_write(int fd, void *base, size_t len)
{
8000d1bc:	27bdffb8 	addiu	sp,sp,-72
8000d1c0:	afb70040 	sw	s7,64(sp)
8000d1c4:	afb30030 	sw	s3,48(sp)
8000d1c8:	afb2002c 	sw	s2,44(sp)
8000d1cc:	afb10028 	sw	s1,40(sp)
8000d1d0:	afb00024 	sw	s0,36(sp)
8000d1d4:	afbf0044 	sw	ra,68(sp)
8000d1d8:	afb6003c 	sw	s6,60(sp)
8000d1dc:	afb50038 	sw	s5,56(sp)
8000d1e0:	afb40034 	sw	s4,52(sp)
8000d1e4:	00c08021 	move	s0,a2
8000d1e8:	00809821 	move	s3,a0
8000d1ec:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:120
	int ret = 0;
	struct mm_struct *mm = pls_read(current)->mm;
8000d1f0:	8c510020 	lw	s1,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:121
	if (len == 0) {
8000d1f4:	14c0000d 	bnez	a2,8000d22c <sysfile_write+0x78>
8000d1f8:	0000b821 	move	s7,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:172
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d1fc:	8fbf0044 	lw	ra,68(sp)
8000d200:	02e01021 	move	v0,s7
8000d204:	8fb6003c 	lw	s6,60(sp)
8000d208:	8fb70040 	lw	s7,64(sp)
8000d20c:	8fb50038 	lw	s5,56(sp)
8000d210:	8fb40034 	lw	s4,52(sp)
8000d214:	8fb30030 	lw	s3,48(sp)
8000d218:	8fb2002c 	lw	s2,44(sp)
8000d21c:	8fb10028 	lw	s1,40(sp)
8000d220:	8fb00024 	lw	s0,36(sp)
8000d224:	03e00008 	jr	ra
8000d228:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:124
	int ret = 0;
	struct mm_struct *mm = pls_read(current)->mm;
	if (len == 0) {
		return 0;
	}
	if (!file_testfd(fd, 0, 1)) {
8000d22c:	00002821 	move	a1,zero
8000d230:	0c002dc8 	jal	8000b720 <file_testfd>
8000d234:	24060001 	li	a2,1
8000d238:	1040fff0 	beqz	v0,8000d1fc <sysfile_write+0x48>
8000d23c:	2417ffea 	li	s7,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:128
		return -E_INVAL;
	}
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
8000d240:	0c003121 	jal	8000c484 <__is_linux_devfile>
8000d244:	02602021 	move	a0,s3
8000d248:	14400039 	bnez	v0,8000d330 <sysfile_write+0x17c>
8000d24c:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:138
		if (ret)
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
8000d250:	0c005478 	jal	800151e0 <kmalloc>
8000d254:	24041000 	li	a0,4096
8000d258:	1040004e 	beqz	v0,8000d394 <sysfile_write+0x1e0>
8000d25c:	0040a021 	move	s4,v0
8000d260:	0000b021 	move	s6,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:144
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
		if ((alen = IOBUF_SIZE) > len) {
8000d264:	24151000 	li	s5,4096
8000d268:	2e021000 	sltiu	v0,s0,4096
8000d26c:	10400002 	beqz	v0,8000d278 <sysfile_write+0xc4>
8000d270:	afb50018 	sw	s5,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:145
			alen = len;
8000d274:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:147
		}
		lock_mm(mm);
8000d278:	0c004c18 	jal	80013060 <lock_mm>
8000d27c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:149
		{
			if (!copy_from_user(mm, buffer, base, alen, 0)) {
8000d280:	8fa70018 	lw	a3,24(sp)
8000d284:	02202021 	move	a0,s1
8000d288:	02802821 	move	a1,s4
8000d28c:	02403021 	move	a2,s2
8000d290:	0c00781a 	jal	8001e068 <copy_from_user>
8000d294:	afa00010 	sw	zero,16(sp)
8000d298:	10400038 	beqz	v0,8000d37c <sysfile_write+0x1c8>
8000d29c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:153
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000d2a0:	0c004c29 	jal	800130a4 <unlock_mm>
8000d2a4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:155
		if (ret == 0) {
			ret = file_write(fd, buffer, alen, &alen);
8000d2a8:	8fa60018 	lw	a2,24(sp)
8000d2ac:	02602021 	move	a0,s3
8000d2b0:	02802821 	move	a1,s4
8000d2b4:	0c002ed1 	jal	8000bb44 <file_write>
8000d2b8:	27a70018 	addiu	a3,sp,24
8000d2bc:	0040b821 	move	s7,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:156
			if (alen != 0) {
8000d2c0:	8fa20018 	lw	v0,24(sp)
8000d2c4:	10400005 	beqz	v0,8000d2dc <sysfile_write+0x128>
8000d2c8:	0202182b 	sltu	v1,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:157
				assert(len >= alen);
8000d2cc:	14600033 	bnez	v1,8000d39c <sysfile_write+0x1e8>
8000d2d0:	02429021 	addu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:158
				base += alen, len -= alen, copied += alen;
8000d2d4:	02028023 	subu	s0,s0,v0
8000d2d8:	02c2b021 	addu	s6,s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:161
			}
		}
		if (ret != 0 || alen == 0) {
8000d2dc:	16e00005 	bnez	s7,8000d2f4 <sysfile_write+0x140>
8000d2e0:	00000000 	nop
8000d2e4:	10400003 	beqz	v0,8000d2f4 <sysfile_write+0x140>
8000d2e8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:143
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
8000d2ec:	1600ffdf 	bnez	s0,8000d26c <sysfile_write+0xb8>
8000d2f0:	2e021000 	sltiu	v0,s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:167
			goto out;
		}
	}

out:
	kfree(buffer);
8000d2f4:	0c0054a3 	jal	8001528c <kfree>
8000d2f8:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:169
	if (copied != 0) {
		return copied;
8000d2fc:	02d6b80b 	movn	s7,s6,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:172
	}
	return ret;
}
8000d300:	8fbf0044 	lw	ra,68(sp)
8000d304:	02e01021 	move	v0,s7
8000d308:	8fb6003c 	lw	s6,60(sp)
8000d30c:	8fb70040 	lw	s7,64(sp)
8000d310:	8fb50038 	lw	s5,56(sp)
8000d314:	8fb40034 	lw	s4,52(sp)
8000d318:	8fb30030 	lw	s3,48(sp)
8000d31c:	8fb2002c 	lw	s2,44(sp)
8000d320:	8fb10028 	lw	s1,40(sp)
8000d324:	8fb00024 	lw	s0,36(sp)
8000d328:	03e00008 	jr	ra
8000d32c:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:132
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
		/* use 8byte int, in case of 64bit off_t
		 * config in linux kernel */
		size_t alen = 0;
		ret = linux_devfile_write(fd, base, len, &alen);
8000d330:	02402821 	move	a1,s2
8000d334:	02003021 	move	a2,s0
8000d338:	27a7001c 	addiu	a3,sp,28
8000d33c:	0c003192 	jal	8000c648 <linux_devfile_write>
8000d340:	afa0001c 	sw	zero,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:135
		if (ret)
			return ret;
		return alen;
8000d344:	8fb7001c 	lw	s7,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:172
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d348:	8fbf0044 	lw	ra,68(sp)
8000d34c:	8fb6003c 	lw	s6,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:135
		 * config in linux kernel */
		size_t alen = 0;
		ret = linux_devfile_write(fd, base, len, &alen);
		if (ret)
			return ret;
		return alen;
8000d350:	0042b80b 	movn	s7,v0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:172
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d354:	02e01021 	move	v0,s7
8000d358:	8fb50038 	lw	s5,56(sp)
8000d35c:	8fb70040 	lw	s7,64(sp)
8000d360:	8fb40034 	lw	s4,52(sp)
8000d364:	8fb30030 	lw	s3,48(sp)
8000d368:	8fb2002c 	lw	s2,44(sp)
8000d36c:	8fb10028 	lw	s1,40(sp)
8000d370:	8fb00024 	lw	s0,36(sp)
8000d374:	03e00008 	jr	ra
8000d378:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:153
		{
			if (!copy_from_user(mm, buffer, base, alen, 0)) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000d37c:	0c004c29 	jal	800130a4 <unlock_mm>
8000d380:	2417ffea 	li	s7,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:167
			goto out;
		}
	}

out:
	kfree(buffer);
8000d384:	0c0054a3 	jal	8001528c <kfree>
8000d388:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:169
	if (copied != 0) {
		return copied;
8000d38c:	080034c0 	j	8000d300 <sysfile_write+0x14c>
8000d390:	02d6b80b 	movn	s7,s6,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:139
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
8000d394:	0800347f 	j	8000d1fc <sysfile_write+0x48>
8000d398:	2417fff4 	li	s7,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:157
		}
		unlock_mm(mm);
		if (ret == 0) {
			ret = file_write(fd, buffer, alen, &alen);
			if (alen != 0) {
				assert(len >= alen);
8000d39c:	3c048002 	lui	a0,0x8002
8000d3a0:	3c068002 	lui	a2,0x8002
8000d3a4:	3c078002 	lui	a3,0x8002
8000d3a8:	24842480 	addiu	a0,a0,9344
8000d3ac:	2405009d 	li	a1,157
8000d3b0:	24c609b0 	addiu	a2,a2,2480
8000d3b4:	0c006afd 	jal	8001abf4 <__panic>
8000d3b8:	24e7248c 	addiu	a3,a3,9356

8000d3bc <sysfile_writev>:
sysfile_writev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:175
	}
	return ret;
}

int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
8000d3bc:	27bdffc0 	addiu	sp,sp,-64
8000d3c0:	afb50038 	sw	s5,56(sp)
8000d3c4:	afb40034 	sw	s4,52(sp)
8000d3c8:	afb00024 	sw	s0,36(sp)
8000d3cc:	0080a821 	move	s5,a0
8000d3d0:	00a08021 	move	s0,a1
8000d3d4:	00c0a021 	move	s4,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:177
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
8000d3d8:	3c048002 	lui	a0,0x8002
8000d3dc:	24842498 	addiu	a0,a0,9368
8000d3e0:	02a02821 	move	a1,s5
8000d3e4:	02003021 	move	a2,s0
8000d3e8:	02803821 	move	a3,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:175
	}
	return ret;
}

int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
8000d3ec:	afb30030 	sw	s3,48(sp)
8000d3f0:	afbf003c 	sw	ra,60(sp)
8000d3f4:	afb2002c 	sw	s2,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:177
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
8000d3f8:	0c00798a 	jal	8001e628 <kprintf>
8000d3fc:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:180
	struct iovec *tv;
	int rcode = 0, count = 0, i;
	struct mm_struct *mm = pls_read(current)->mm;
8000d400:	3c028015 	lui	v0,0x8015
8000d404:	8c4377a4 	lw	v1,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:179
int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
	struct iovec *tv;
	int rcode = 0, count = 0, i;
8000d408:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:181
	struct mm_struct *mm = pls_read(current)->mm;
	for (i = 0; i < iovcnt; ++i) {
8000d40c:	1a80001b 	blez	s4,8000d47c <sysfile_writev+0xc0>
8000d410:	8c730020 	lw	s3,32(v1)
8000d414:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:179
int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
	struct iovec *tv;
	int rcode = 0, count = 0, i;
8000d418:	0800350a 	j	8000d428 <sysfile_writev+0x6c>
8000d41c:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:181
	struct mm_struct *mm = pls_read(current)->mm;
	for (i = 0; i < iovcnt; ++i) {
8000d420:	12340015 	beq	s1,s4,8000d478 <sysfile_writev+0xbc>
8000d424:	02429021 	addu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:185
		char *pbase;
		size_t plen;

		copy_from_user(mm, &pbase, &(iov[i].iov_base), sizeof(char *),
8000d428:	02003021 	move	a2,s0
8000d42c:	02602021 	move	a0,s3
8000d430:	27a5001c 	addiu	a1,sp,28
8000d434:	24070004 	li	a3,4
8000d438:	0c00781a 	jal	8001e068 <copy_from_user>
8000d43c:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:187
			       0);
		copy_from_user(mm, &plen, &(iov[i].iov_len), sizeof(size_t), 0);
8000d440:	26060004 	addiu	a2,s0,4
8000d444:	27a50018 	addiu	a1,sp,24
8000d448:	02602021 	move	a0,s3
8000d44c:	24070004 	li	a3,4
8000d450:	0c00781a 	jal	8001e068 <copy_from_user>
8000d454:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:189

		rcode = sysfile_write(fd, pbase, plen);
8000d458:	8fa5001c 	lw	a1,28(sp)
8000d45c:	8fa60018 	lw	a2,24(sp)
8000d460:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:181
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
	struct iovec *tv;
	int rcode = 0, count = 0, i;
	struct mm_struct *mm = pls_read(current)->mm;
	for (i = 0; i < iovcnt; ++i) {
8000d464:	26310001 	addiu	s1,s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:189

		copy_from_user(mm, &pbase, &(iov[i].iov_base), sizeof(char *),
			       0);
		copy_from_user(mm, &plen, &(iov[i].iov_len), sizeof(size_t), 0);

		rcode = sysfile_write(fd, pbase, plen);
8000d468:	0c00346d 	jal	8000d1b4 <sysfile_write>
8000d46c:	26100008 	addiu	s0,s0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:190
		if (rcode < 0)
8000d470:	0441ffeb 	bgez	v0,8000d420 <sysfile_writev+0x64>
8000d474:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:194
			break;
		count += rcode;
	}
	if (count == 0)
8000d478:	0252100b 	movn	v0,s2,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:198
		return (rcode);
	else
		return (count);
}
8000d47c:	8fbf003c 	lw	ra,60(sp)
8000d480:	8fb50038 	lw	s5,56(sp)
8000d484:	8fb40034 	lw	s4,52(sp)
8000d488:	8fb30030 	lw	s3,48(sp)
8000d48c:	8fb2002c 	lw	s2,44(sp)
8000d490:	8fb10028 	lw	s1,40(sp)
8000d494:	8fb00024 	lw	s0,36(sp)
8000d498:	03e00008 	jr	ra
8000d49c:	27bd0040 	addiu	sp,sp,64

8000d4a0 <sysfile_seek>:
sysfile_seek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:202

int sysfile_seek(int fd, off_t pos, int whence)
{
	return file_seek(fd, pos, whence);
8000d4a0:	08002f30 	j	8000bcc0 <file_seek>
8000d4a4:	00000000 	nop

8000d4a8 <sysfile_fstat>:
sysfile_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:207
}

int sysfile_fstat(int fd, struct stat *__stat)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d4a8:	3c028015 	lui	v0,0x8015
8000d4ac:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:206
{
	return file_seek(fd, pos, whence);
}

int sysfile_fstat(int fd, struct stat *__stat)
{
8000d4b0:	27bdffd0 	addiu	sp,sp,-48
8000d4b4:	afb20028 	sw	s2,40(sp)
8000d4b8:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:210
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *stat = &__local_stat;
	if ((ret = file_fstat(fd, stat)) != 0) {
8000d4bc:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:206
{
	return file_seek(fd, pos, whence);
}

int sysfile_fstat(int fd, struct stat *__stat)
{
8000d4c0:	afb10024 	sw	s1,36(sp)
8000d4c4:	afb00020 	sw	s0,32(sp)
8000d4c8:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:210
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *stat = &__local_stat;
	if ((ret = file_fstat(fd, stat)) != 0) {
8000d4cc:	0c002f9e 	jal	8000be78 <file_fstat>
8000d4d0:	8c510020 	lw	s1,32(v0)
8000d4d4:	1440000c 	bnez	v0,8000d508 <sysfile_fstat+0x60>
8000d4d8:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:214
		return ret;
	}

	lock_mm(mm);
8000d4dc:	0c004c18 	jal	80013060 <lock_mm>
8000d4e0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:216
	{
		if (!copy_to_user(mm, __stat, stat, sizeof(struct stat))) {
8000d4e4:	02202021 	move	a0,s1
8000d4e8:	02402821 	move	a1,s2
8000d4ec:	27a60010 	addiu	a2,sp,16
8000d4f0:	0c007834 	jal	8001e0d0 <copy_to_user>
8000d4f4:	24070010 	li	a3,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:217
			ret = -E_INVAL;
8000d4f8:	2403ffea 	li	v1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:220
		}
	}
	unlock_mm(mm);
8000d4fc:	02202021 	move	a0,s1
8000d500:	0c004c29 	jal	800130a4 <unlock_mm>
8000d504:	0062800a 	movz	s0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:222
	return ret;
}
8000d508:	8fbf002c 	lw	ra,44(sp)
8000d50c:	02001021 	move	v0,s0
8000d510:	8fb20028 	lw	s2,40(sp)
8000d514:	8fb10024 	lw	s1,36(sp)
8000d518:	8fb00020 	lw	s0,32(sp)
8000d51c:	03e00008 	jr	ra
8000d520:	27bd0030 	addiu	sp,sp,48

8000d524 <sysfile_linux_fstat>:
sysfile_linux_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:226

int sysfile_linux_fstat(int fd, struct linux_stat __user * buf)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d524:	3c028015 	lui	v0,0x8015
8000d528:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:225
	unlock_mm(mm);
	return ret;
}

int sysfile_linux_fstat(int fd, struct linux_stat __user * buf)
{
8000d52c:	27bdffc8 	addiu	sp,sp,-56
8000d530:	afb2002c 	sw	s2,44(sp)
8000d534:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:229
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d538:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:225
	unlock_mm(mm);
	return ret;
}

int sysfile_linux_fstat(int fd, struct linux_stat __user * buf)
{
8000d53c:	afb30030 	sw	s3,48(sp)
8000d540:	afb10028 	sw	s1,40(sp)
8000d544:	afbf0034 	sw	ra,52(sp)
8000d548:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:229
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d54c:	0c002f9e 	jal	8000be78 <file_fstat>
8000d550:	8c510020 	lw	s1,32(v0)
8000d554:	14400022 	bnez	v0,8000d5e0 <sysfile_linux_fstat+0xbc>
8000d558:	2413ffff 	li	s3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:232
		return -1;
	}
	struct linux_stat *kls = kmalloc(sizeof(struct linux_stat));
8000d55c:	0c005478 	jal	800151e0 <kmalloc>
8000d560:	24040040 	li	a0,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:233
	if (!kls) {
8000d564:	1040001e 	beqz	v0,8000d5e0 <sysfile_linux_fstat+0xbc>
8000d568:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:236
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat));
8000d56c:	00002821 	move	a1,zero
8000d570:	24060040 	li	a2,64
8000d574:	0c005c44 	jal	80017110 <memset>
8000d578:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:239
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d57c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:237
	struct linux_stat *kls = kmalloc(sizeof(struct linux_stat));
	if (!kls) {
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat));
	kls->st_ino = 1;
8000d580:	24030001 	li	v1,1
8000d584:	ae030004 	sw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:239
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d588:	344201ff 	ori	v0,v0,0x1ff
8000d58c:	a6020008 	sh	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:240
	kls->st_nlink = kstat->st_nlinks;
8000d590:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:246
	kls->st_blksize = 512;
	kls->st_blocks = kstat->st_blocks;
	kls->st_size = kstat->st_size;

	ret = 0;
	lock_mm(mm);
8000d594:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:240
	}
	memset(kls, 0, sizeof(struct linux_stat));
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
	kls->st_nlink = kstat->st_nlinks;
8000d598:	a602000a 	sh	v0,10(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:241
	kls->st_blksize = 512;
8000d59c:	24020200 	li	v0,512
8000d5a0:	ae020018 	sw	v0,24(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:242
	kls->st_blocks = kstat->st_blocks;
8000d5a4:	8fa20018 	lw	v0,24(sp)
8000d5a8:	ae02001c 	sw	v0,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:243
	kls->st_size = kstat->st_size;
8000d5ac:	8fa2001c 	lw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:246

	ret = 0;
	lock_mm(mm);
8000d5b0:	0c004c18 	jal	80013060 <lock_mm>
8000d5b4:	ae020014 	sw	v0,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:248
	{
		if (!copy_to_user(mm, buf, kls, sizeof(struct linux_stat))) {
8000d5b8:	02202021 	move	a0,s1
8000d5bc:	02402821 	move	a1,s2
8000d5c0:	02003021 	move	a2,s0
8000d5c4:	0c007834 	jal	8001e0d0 <copy_to_user>
8000d5c8:	24070040 	li	a3,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:252
			ret = -1;
		}
	}
	unlock_mm(mm);
8000d5cc:	02202021 	move	a0,s1
8000d5d0:	0c004c29 	jal	800130a4 <unlock_mm>
8000d5d4:	0002980b 	movn	s3,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:253
	kfree(kls);
8000d5d8:	0c0054a3 	jal	8001528c <kfree>
8000d5dc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:255
	return ret;
}
8000d5e0:	8fbf0034 	lw	ra,52(sp)
8000d5e4:	02601021 	move	v0,s3
8000d5e8:	8fb2002c 	lw	s2,44(sp)
8000d5ec:	8fb30030 	lw	s3,48(sp)
8000d5f0:	8fb10028 	lw	s1,40(sp)
8000d5f4:	8fb00024 	lw	s0,36(sp)
8000d5f8:	03e00008 	jr	ra
8000d5fc:	27bd0038 	addiu	sp,sp,56

8000d600 <sysfile_linux_fstat64>:
sysfile_linux_fstat64():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:259

int sysfile_linux_fstat64(int fd, struct linux_stat64 __user * buf)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d600:	3c028015 	lui	v0,0x8015
8000d604:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:258
	kfree(kls);
	return ret;
}

int sysfile_linux_fstat64(int fd, struct linux_stat64 __user * buf)
{
8000d608:	27bdffc8 	addiu	sp,sp,-56
8000d60c:	afb2002c 	sw	s2,44(sp)
8000d610:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:262
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d614:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:258
	kfree(kls);
	return ret;
}

int sysfile_linux_fstat64(int fd, struct linux_stat64 __user * buf)
{
8000d618:	afb30030 	sw	s3,48(sp)
8000d61c:	afb10028 	sw	s1,40(sp)
8000d620:	afbf0034 	sw	ra,52(sp)
8000d624:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:262
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d628:	0c002f9e 	jal	8000be78 <file_fstat>
8000d62c:	8c510020 	lw	s1,32(v0)
8000d630:	14400026 	bnez	v0,8000d6cc <sysfile_linux_fstat64+0xcc>
8000d634:	2413ffff 	li	s3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:265
		return -1;
	}
	struct linux_stat64 *kls = kmalloc(sizeof(struct linux_stat64));
8000d638:	0c005478 	jal	800151e0 <kmalloc>
8000d63c:	24040068 	li	a0,104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:266
	if (!kls) {
8000d640:	10400022 	beqz	v0,8000d6cc <sysfile_linux_fstat64+0xcc>
8000d644:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:269
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat64));
8000d648:	00002821 	move	a1,zero
8000d64c:	24060068 	li	a2,104
8000d650:	0c005c44 	jal	80017110 <memset>
8000d654:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:272
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d658:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:270
	struct linux_stat64 *kls = kmalloc(sizeof(struct linux_stat64));
	if (!kls) {
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat64));
	kls->st_ino = 1;
8000d65c:	24080001 	li	t0,1
8000d660:	00004821 	move	t1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:272
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d664:	344201ff 	ori	v0,v0,0x1ff
8000d668:	ae020010 	sw	v0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:273
	kls->st_nlink = kstat->st_nlinks;
8000d66c:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:270
	struct linux_stat64 *kls = kmalloc(sizeof(struct linux_stat64));
	if (!kls) {
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat64));
	kls->st_ino = 1;
8000d670:	ae080060 	sw	t0,96(s0)
8000d674:	ae090064 	sw	t1,100(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:273
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
	kls->st_nlink = kstat->st_nlinks;
8000d678:	ae020014 	sw	v0,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:274
	kls->st_blksize = 512;
8000d67c:	24020200 	li	v0,512
8000d680:	ae020038 	sw	v0,56(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:275
	kls->st_blocks = kstat->st_blocks;
8000d684:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:279
	kls->st_size = kstat->st_size;

	ret = 0;
	lock_mm(mm);
8000d688:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:275
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
	kls->st_nlink = kstat->st_nlinks;
	kls->st_blksize = 512;
	kls->st_blocks = kstat->st_blocks;
8000d68c:	ae000044 	sw	zero,68(s0)
8000d690:	ae020040 	sw	v0,64(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:276
	kls->st_size = kstat->st_size;
8000d694:	8fa2001c 	lw	v0,28(sp)
8000d698:	ae000034 	sw	zero,52(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:279

	ret = 0;
	lock_mm(mm);
8000d69c:	0c004c18 	jal	80013060 <lock_mm>
8000d6a0:	ae020030 	sw	v0,48(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:281
	{
		if (!copy_to_user(mm, buf, kls, sizeof(struct linux_stat64))) {
8000d6a4:	02202021 	move	a0,s1
8000d6a8:	02402821 	move	a1,s2
8000d6ac:	02003021 	move	a2,s0
8000d6b0:	0c007834 	jal	8001e0d0 <copy_to_user>
8000d6b4:	24070068 	li	a3,104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:285
			ret = -1;
		}
	}
	unlock_mm(mm);
8000d6b8:	02202021 	move	a0,s1
8000d6bc:	0c004c29 	jal	800130a4 <unlock_mm>
8000d6c0:	0002980b 	movn	s3,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:286
	kfree(kls);
8000d6c4:	0c0054a3 	jal	8001528c <kfree>
8000d6c8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:288
	return ret;
}
8000d6cc:	8fbf0034 	lw	ra,52(sp)
8000d6d0:	02601021 	move	v0,s3
8000d6d4:	8fb2002c 	lw	s2,44(sp)
8000d6d8:	8fb30030 	lw	s3,48(sp)
8000d6dc:	8fb10028 	lw	s1,40(sp)
8000d6e0:	8fb00024 	lw	s0,36(sp)
8000d6e4:	03e00008 	jr	ra
8000d6e8:	27bd0038 	addiu	sp,sp,56

8000d6ec <sysfile_linux_fcntl64>:
sysfile_linux_fcntl64():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:291

int sysfile_linux_fcntl64(int fd, int cmd, int arg)
{
8000d6ec:	00801821 	move	v1,a0
8000d6f0:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:292
	kprintf("sysfile_linux_fcntl64:fd=%08x cmd=%08x arg=%08x\n", fd, cmd,
8000d6f4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:291
	kfree(kls);
	return ret;
}

int sysfile_linux_fcntl64(int fd, int cmd, int arg)
{
8000d6f8:	27bdffe8 	addiu	sp,sp,-24
8000d6fc:	00c03821 	move	a3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:292
	kprintf("sysfile_linux_fcntl64:fd=%08x cmd=%08x arg=%08x\n", fd, cmd,
8000d700:	248424bc 	addiu	a0,a0,9404
8000d704:	00602821 	move	a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:291
	kfree(kls);
	return ret;
}

int sysfile_linux_fcntl64(int fd, int cmd, int arg)
{
8000d708:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:292
	kprintf("sysfile_linux_fcntl64:fd=%08x cmd=%08x arg=%08x\n", fd, cmd,
8000d70c:	0c00798a 	jal	8001e628 <kprintf>
8000d710:	00403021 	move	a2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:295
		arg);
	return 0;
}
8000d714:	8fbf0014 	lw	ra,20(sp)
8000d718:	00001021 	move	v0,zero
8000d71c:	03e00008 	jr	ra
8000d720:	27bd0018 	addiu	sp,sp,24

8000d724 <sysfile_linux_stat>:
sysfile_linux_stat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:298

int sysfile_linux_stat(const char __user * fn, struct linux_stat *__user buf)
{
8000d724:	27bdffe0 	addiu	sp,sp,-32
8000d728:	afb10014 	sw	s1,20(sp)
8000d72c:	00a08821 	move	s1,a1
8000d730:	afb20018 	sw	s2,24(sp)
8000d734:	afb00010 	sw	s0,16(sp)
8000d738:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:299
	int fd = sysfile_open(fn, O_RDONLY);
8000d73c:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000d740:	00002821 	move	a1,zero
8000d744:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:300
	if (fd < 0)
8000d748:	04400007 	bltz	v0,8000d768 <sysfile_linux_stat+0x44>
8000d74c:	2412ffff 	li	s2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:302
		return -1;
	int ret = sysfile_linux_fstat(fd, buf);
8000d750:	00402021 	move	a0,v0
8000d754:	0c003549 	jal	8000d524 <sysfile_linux_fstat>
8000d758:	02202821 	move	a1,s1
sysfile_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:54
	return ret;
}

int sysfile_close(int fd)
{
	return file_close(fd);
8000d75c:	02002021 	move	a0,s0
8000d760:	0c002e55 	jal	8000b954 <file_close>
8000d764:	00409021 	move	s2,v0
sysfile_linux_stat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:306
		return -1;
	int ret = sysfile_linux_fstat(fd, buf);
	sysfile_close(fd);

	return ret;
}
8000d768:	8fbf001c 	lw	ra,28(sp)
8000d76c:	02401021 	move	v0,s2
8000d770:	8fb10014 	lw	s1,20(sp)
8000d774:	8fb20018 	lw	s2,24(sp)
8000d778:	8fb00010 	lw	s0,16(sp)
8000d77c:	03e00008 	jr	ra
8000d780:	27bd0020 	addiu	sp,sp,32

8000d784 <sysfile_linux_stat64>:
sysfile_linux_stat64():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:310

int
sysfile_linux_stat64(const char __user * fn, struct linux_stat64 *__user buf)
{
8000d784:	27bdffe0 	addiu	sp,sp,-32
8000d788:	afb10014 	sw	s1,20(sp)
8000d78c:	00a08821 	move	s1,a1
8000d790:	afb20018 	sw	s2,24(sp)
8000d794:	afb00010 	sw	s0,16(sp)
8000d798:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:311
	int fd = sysfile_open(fn, O_RDONLY);
8000d79c:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000d7a0:	00002821 	move	a1,zero
8000d7a4:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:312
	if (fd < 0)
8000d7a8:	04400007 	bltz	v0,8000d7c8 <sysfile_linux_stat64+0x44>
8000d7ac:	2412ffff 	li	s2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:314
		return -1;
	int ret = sysfile_linux_fstat64(fd, buf);
8000d7b0:	00402021 	move	a0,v0
8000d7b4:	0c003580 	jal	8000d600 <sysfile_linux_fstat64>
8000d7b8:	02202821 	move	a1,s1
sysfile_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:54
	return ret;
}

int sysfile_close(int fd)
{
	return file_close(fd);
8000d7bc:	02002021 	move	a0,s0
8000d7c0:	0c002e55 	jal	8000b954 <file_close>
8000d7c4:	00409021 	move	s2,v0
sysfile_linux_stat64():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:318
		return -1;
	int ret = sysfile_linux_fstat64(fd, buf);
	sysfile_close(fd);

	return ret;
}
8000d7c8:	8fbf001c 	lw	ra,28(sp)
8000d7cc:	02401021 	move	v0,s2
8000d7d0:	8fb10014 	lw	s1,20(sp)
8000d7d4:	8fb20018 	lw	s2,24(sp)
8000d7d8:	8fb00010 	lw	s0,16(sp)
8000d7dc:	03e00008 	jr	ra
8000d7e0:	27bd0020 	addiu	sp,sp,32

8000d7e4 <sysfile_fsync>:
sysfile_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:322

int sysfile_fsync(int fd)
{
	return file_fsync(fd);
8000d7e4:	08002fdf 	j	8000bf7c <file_fsync>
8000d7e8:	00000000 	nop

8000d7ec <sysfile_chdir>:
sysfile_chdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:326
}

int sysfile_chdir(const char *__path)
{
8000d7ec:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:329
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d7f0:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:326
{
	return file_fsync(fd);
}

int sysfile_chdir(const char *__path)
{
8000d7f4:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:329
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d7f8:	0c0033a7 	jal	8000ce9c <copy_path>
8000d7fc:	27a40010 	addiu	a0,sp,16
8000d800:	14400008 	bnez	v0,8000d824 <sysfile_chdir+0x38>
8000d804:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:332
		return ret;
	}
	ret = vfs_chdir(path);
8000d808:	0c001815 	jal	80006054 <vfs_chdir>
8000d80c:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:333
	kfree(path);
8000d810:	8fa40010 	lw	a0,16(sp)
8000d814:	0c0054a3 	jal	8001528c <kfree>
8000d818:	afa20018 	sw	v0,24(sp)
8000d81c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:335
	return ret;
}
8000d820:	8fbf0024 	lw	ra,36(sp)
8000d824:	03e00008 	jr	ra
8000d828:	27bd0028 	addiu	sp,sp,40

8000d82c <sysfile_mkdir>:
sysfile_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:338

int sysfile_mkdir(const char *__path)
{
8000d82c:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:341
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d830:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:338
	kfree(path);
	return ret;
}

int sysfile_mkdir(const char *__path)
{
8000d834:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:341
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d838:	0c0033a7 	jal	8000ce9c <copy_path>
8000d83c:	27a40010 	addiu	a0,sp,16
8000d840:	14400008 	bnez	v0,8000d864 <sysfile_mkdir+0x38>
8000d844:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:344
		return ret;
	}
	ret = vfs_mkdir(path);
8000d848:	0c0016b2 	jal	80005ac8 <vfs_mkdir>
8000d84c:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:345
	kfree(path);
8000d850:	8fa40010 	lw	a0,16(sp)
8000d854:	0c0054a3 	jal	8001528c <kfree>
8000d858:	afa20018 	sw	v0,24(sp)
8000d85c:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:347
	return ret;
}
8000d860:	8fbf0024 	lw	ra,36(sp)
8000d864:	03e00008 	jr	ra
8000d868:	27bd0028 	addiu	sp,sp,40

8000d86c <sysfile_link>:
sysfile_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:350

int sysfile_link(const char *__path1, const char *__path2)
{
8000d86c:	27bdffd8 	addiu	sp,sp,-40
8000d870:	00801021 	move	v0,a0
8000d874:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:353
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d878:	27a40014 	addiu	a0,sp,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:350
	kfree(path);
	return ret;
}

int sysfile_link(const char *__path1, const char *__path2)
{
8000d87c:	00a08021 	move	s0,a1
8000d880:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:353
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d884:	0c0033a7 	jal	8000ce9c <copy_path>
8000d888:	00402821 	move	a1,v0
8000d88c:	10400004 	beqz	v0,8000d8a0 <sysfile_link+0x34>
8000d890:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:363
		return ret;
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d894:	8fb00020 	lw	s0,32(sp)
8000d898:	03e00008 	jr	ra
8000d89c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:356
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
8000d8a0:	27a40010 	addiu	a0,sp,16
8000d8a4:	0c0033a7 	jal	8000ce9c <copy_path>
8000d8a8:	02002821 	move	a1,s0
8000d8ac:	1440000d 	bnez	v0,8000d8e4 <sysfile_link+0x78>
8000d8b0:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:360
		kfree(old_path);
		return ret;
	}
	ret = vfs_link(old_path, new_path);
8000d8b4:	0c001619 	jal	80005864 <vfs_link>
8000d8b8:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:361
	kfree(old_path), kfree(new_path);
8000d8bc:	8fa40014 	lw	a0,20(sp)
8000d8c0:	0c0054a3 	jal	8001528c <kfree>
8000d8c4:	afa20018 	sw	v0,24(sp)
8000d8c8:	0c0054a3 	jal	8001528c <kfree>
8000d8cc:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:363
	return ret;
}
8000d8d0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:361
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
8000d8d4:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:363
	return ret;
}
8000d8d8:	8fb00020 	lw	s0,32(sp)
8000d8dc:	03e00008 	jr	ra
8000d8e0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:357
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
8000d8e4:	0c0054a3 	jal	8001528c <kfree>
8000d8e8:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:363
		return ret;
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d8ec:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:358
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
8000d8f0:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:363
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d8f4:	8fb00020 	lw	s0,32(sp)
8000d8f8:	03e00008 	jr	ra
8000d8fc:	27bd0028 	addiu	sp,sp,40

8000d900 <sysfile_rename>:
sysfile_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:366

int sysfile_rename(const char *__path1, const char *__path2)
{
8000d900:	27bdffd8 	addiu	sp,sp,-40
8000d904:	00801021 	move	v0,a0
8000d908:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:369
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d90c:	27a40014 	addiu	a0,sp,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:366
	kfree(old_path), kfree(new_path);
	return ret;
}

int sysfile_rename(const char *__path1, const char *__path2)
{
8000d910:	00a08021 	move	s0,a1
8000d914:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:369
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d918:	0c0033a7 	jal	8000ce9c <copy_path>
8000d91c:	00402821 	move	a1,v0
8000d920:	10400004 	beqz	v0,8000d934 <sysfile_rename+0x34>
8000d924:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:379
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d928:	8fb00020 	lw	s0,32(sp)
8000d92c:	03e00008 	jr	ra
8000d930:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:372
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
8000d934:	27a40010 	addiu	a0,sp,16
8000d938:	0c0033a7 	jal	8000ce9c <copy_path>
8000d93c:	02002821 	move	a1,s0
8000d940:	1440000d 	bnez	v0,8000d978 <sysfile_rename+0x78>
8000d944:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:376
		kfree(old_path);
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
8000d948:	0c0015d4 	jal	80005750 <vfs_rename>
8000d94c:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:377
	kfree(old_path), kfree(new_path);
8000d950:	8fa40014 	lw	a0,20(sp)
8000d954:	0c0054a3 	jal	8001528c <kfree>
8000d958:	afa20018 	sw	v0,24(sp)
8000d95c:	0c0054a3 	jal	8001528c <kfree>
8000d960:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:379
	return ret;
}
8000d964:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:377
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
8000d968:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:379
	return ret;
}
8000d96c:	8fb00020 	lw	s0,32(sp)
8000d970:	03e00008 	jr	ra
8000d974:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:373
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
8000d978:	0c0054a3 	jal	8001528c <kfree>
8000d97c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:379
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d980:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:374
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
8000d984:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:379
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d988:	8fb00020 	lw	s0,32(sp)
8000d98c:	03e00008 	jr	ra
8000d990:	27bd0028 	addiu	sp,sp,40

8000d994 <sysfile_unlink>:
sysfile_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:382

int sysfile_unlink(const char *__path)
{
8000d994:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:385
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d998:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:382
	kfree(old_path), kfree(new_path);
	return ret;
}

int sysfile_unlink(const char *__path)
{
8000d99c:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:385
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d9a0:	0c0033a7 	jal	8000ce9c <copy_path>
8000d9a4:	27a40010 	addiu	a0,sp,16
8000d9a8:	14400008 	bnez	v0,8000d9cc <sysfile_unlink+0x38>
8000d9ac:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:388
		return ret;
	}
	ret = vfs_unlink(path);
8000d9b0:	0c0015ac 	jal	800056b0 <vfs_unlink>
8000d9b4:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:389
	kfree(path);
8000d9b8:	8fa40010 	lw	a0,16(sp)
8000d9bc:	0c0054a3 	jal	8001528c <kfree>
8000d9c0:	afa20018 	sw	v0,24(sp)
8000d9c4:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:391
	return ret;
}
8000d9c8:	8fbf0024 	lw	ra,36(sp)
8000d9cc:	03e00008 	jr	ra
8000d9d0:	27bd0028 	addiu	sp,sp,40

8000d9d4 <sysfile_getcwd>:
sysfile_getcwd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:395

int sysfile_getcwd(char *buf, size_t len)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d9d4:	3c028015 	lui	v0,0x8015
8000d9d8:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:394
	kfree(path);
	return ret;
}

int sysfile_getcwd(char *buf, size_t len)
{
8000d9dc:	27bdffd0 	addiu	sp,sp,-48
8000d9e0:	afb20028 	sw	s2,40(sp)
8000d9e4:	afb10024 	sw	s1,36(sp)
8000d9e8:	afb00020 	sw	s0,32(sp)
8000d9ec:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:395
	struct mm_struct *mm = pls_read(current)->mm;
8000d9f0:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:394
	kfree(path);
	return ret;
}

int sysfile_getcwd(char *buf, size_t len)
{
8000d9f4:	00a08821 	move	s1,a1
8000d9f8:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:396
	struct mm_struct *mm = pls_read(current)->mm;
	if (len == 0) {
8000d9fc:	10a0000d 	beqz	a1,8000da34 <sysfile_getcwd+0x60>
8000da00:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:400
		return -E_INVAL;
	}

	lock_mm(mm);
8000da04:	0c004c18 	jal	80013060 <lock_mm>
8000da08:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:402
	{
		if (user_mem_check(mm, (uintptr_t) buf, len, 1)) {
8000da0c:	02002021 	move	a0,s0
8000da10:	02402821 	move	a1,s2
8000da14:	02203021 	move	a2,s1
8000da18:	0c005069 	jal	800141a4 <user_mem_check>
8000da1c:	24070001 	li	a3,1
8000da20:	1440000a 	bnez	v0,8000da4c <sysfile_getcwd+0x78>
8000da24:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:408
			struct iobuf __iob, *iob =
			    iobuf_init(&__iob, buf, len, 0);
			vfs_getcwd(iob);
		}
	}
	unlock_mm(mm);
8000da28:	0c004c29 	jal	800130a4 <unlock_mm>
8000da2c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:409
	return 0;
8000da30:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:410
}
8000da34:	8fbf002c 	lw	ra,44(sp)
8000da38:	8fb20028 	lw	s2,40(sp)
8000da3c:	8fb10024 	lw	s1,36(sp)
8000da40:	8fb00020 	lw	s0,32(sp)
8000da44:	03e00008 	jr	ra
8000da48:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:403
	}

	lock_mm(mm);
	{
		if (user_mem_check(mm, (uintptr_t) buf, len, 1)) {
			struct iobuf __iob, *iob =
8000da4c:	02402821 	move	a1,s2
8000da50:	02203021 	move	a2,s1
8000da54:	0c00333a 	jal	8000cce8 <iobuf_init>
8000da58:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:405
			    iobuf_init(&__iob, buf, len, 0);
			vfs_getcwd(iob);
8000da5c:	0c001826 	jal	80006098 <vfs_getcwd>
8000da60:	00402021 	move	a0,v0
8000da64:	0800368a 	j	8000da28 <sysfile_getcwd+0x54>
8000da68:	00000000 	nop

8000da6c <sysfile_getdirentry>:
sysfile_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:414
	return 0;
}

int sysfile_getdirentry(int fd, struct dirent *__direntp, uint32_t * len_store)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000da6c:	3c028015 	lui	v0,0x8015
8000da70:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:413
	unlock_mm(mm);
	return 0;
}

int sysfile_getdirentry(int fd, struct dirent *__direntp, uint32_t * len_store)
{
8000da74:	27bdffc8 	addiu	sp,sp,-56
8000da78:	afb4002c 	sw	s4,44(sp)
8000da7c:	0080a021 	move	s4,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:416
	struct mm_struct *mm = pls_read(current)->mm;
	struct dirent *direntp;
	if ((direntp = kmalloc(sizeof(struct dirent))) == NULL) {
8000da80:	2404010c 	li	a0,268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:413
	unlock_mm(mm);
	return 0;
}

int sysfile_getdirentry(int fd, struct dirent *__direntp, uint32_t * len_store)
{
8000da84:	afb50030 	sw	s5,48(sp)
8000da88:	afb30028 	sw	s3,40(sp)
8000da8c:	afb20024 	sw	s2,36(sp)
8000da90:	afb10020 	sw	s1,32(sp)
8000da94:	afb0001c 	sw	s0,28(sp)
8000da98:	afbf0034 	sw	ra,52(sp)
8000da9c:	00a09821 	move	s3,a1
8000daa0:	00c0a821 	move	s5,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:416
	struct mm_struct *mm = pls_read(current)->mm;
	struct dirent *direntp;
	if ((direntp = kmalloc(sizeof(struct dirent))) == NULL) {
8000daa4:	0c005478 	jal	800151e0 <kmalloc>
8000daa8:	8c510020 	lw	s1,32(v0)
8000daac:	00408021 	move	s0,v0
8000dab0:	10400015 	beqz	v0,8000db08 <sysfile_getdirentry+0x9c>
8000dab4:	2412fff4 	li	s2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:425
	//direntp->d_reclen = sizeof(struct dirent);
	/* libc will ignore entries with d_ino==0 */
	//direntp->d_ino = 1;

	int ret = 0;
	lock_mm(mm);
8000dab8:	0c004c18 	jal	80013060 <lock_mm>
8000dabc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:428
	{
		if (!copy_from_user
		    (mm, &(direntp->d_off), &(__direntp->d_off),
8000dac0:	02202021 	move	a0,s1
8000dac4:	24020001 	li	v0,1
8000dac8:	26050004 	addiu	a1,s0,4
8000dacc:	26660004 	addiu	a2,s3,4
8000dad0:	24070004 	li	a3,4
8000dad4:	0c00781a 	jal	8001e068 <copy_from_user>
8000dad8:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:427
	//direntp->d_ino = 1;

	int ret = 0;
	lock_mm(mm);
	{
		if (!copy_from_user
8000dadc:	10400014 	beqz	v0,8000db30 <sysfile_getdirentry+0xc4>
8000dae0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:433
		    (mm, &(direntp->d_off), &(__direntp->d_off),
		     sizeof(direntp->d_off), 1)) {
			ret = -E_INVAL;
		}
	}
	unlock_mm(mm);
8000dae4:	0c004c29 	jal	800130a4 <unlock_mm>
8000dae8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:435

	if (ret != 0 || (ret = file_getdirentry(fd, direntp)) != 0) {
8000daec:	02802021 	move	a0,s4
8000daf0:	0c00301c 	jal	8000c070 <file_getdirentry>
8000daf4:	02002821 	move	a1,s0
8000daf8:	10400011 	beqz	v0,8000db40 <sysfile_getdirentry+0xd4>
8000dafc:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:451
	unlock_mm(mm);
	if (len_store) {
		*len_store = (direntp->d_name[0]) ? direntp->d_reclen : 0;
	}
out:
	kfree(direntp);
8000db00:	0c0054a3 	jal	8001528c <kfree>
8000db04:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:453
	return ret;
}
8000db08:	8fbf0034 	lw	ra,52(sp)
8000db0c:	02401021 	move	v0,s2
8000db10:	8fb50030 	lw	s5,48(sp)
8000db14:	8fb4002c 	lw	s4,44(sp)
8000db18:	8fb30028 	lw	s3,40(sp)
8000db1c:	8fb20024 	lw	s2,36(sp)
8000db20:	8fb10020 	lw	s1,32(sp)
8000db24:	8fb0001c 	lw	s0,28(sp)
8000db28:	03e00008 	jr	ra
8000db2c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:433
		    (mm, &(direntp->d_off), &(__direntp->d_off),
		     sizeof(direntp->d_off), 1)) {
			ret = -E_INVAL;
		}
	}
	unlock_mm(mm);
8000db30:	0c004c29 	jal	800130a4 <unlock_mm>
8000db34:	2412ffea 	li	s2,-22
8000db38:	080036c0 	j	8000db00 <sysfile_getdirentry+0x94>
8000db3c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:439

	if (ret != 0 || (ret = file_getdirentry(fd, direntp)) != 0) {
		goto out;
	}

	lock_mm(mm);
8000db40:	0c004c18 	jal	80013060 <lock_mm>
8000db44:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:442
	{
		if (!copy_to_user
		    (mm, __direntp, direntp, sizeof(struct dirent))) {
8000db48:	02202021 	move	a0,s1
8000db4c:	02602821 	move	a1,s3
8000db50:	02003021 	move	a2,s0
8000db54:	0c007834 	jal	8001e0d0 <copy_to_user>
8000db58:	2407010c 	li	a3,268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:443
			ret = -E_INVAL;
8000db5c:	2403ffea 	li	v1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:446
		}
	}
	unlock_mm(mm);
8000db60:	02202021 	move	a0,s1
8000db64:	0c004c29 	jal	800130a4 <unlock_mm>
8000db68:	0062900a 	movz	s2,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:447
	if (len_store) {
8000db6c:	12a0ffe4 	beqz	s5,8000db00 <sysfile_getdirentry+0x94>
8000db70:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:448
		*len_store = (direntp->d_name[0]) ? direntp->d_reclen : 0;
8000db74:	9203000a 	lbu	v1,10(s0)
8000db78:	10600002 	beqz	v1,8000db84 <sysfile_getdirentry+0x118>
8000db7c:	00001021 	move	v0,zero
8000db80:	96020008 	lhu	v0,8(s0)
8000db84:	080036c0 	j	8000db00 <sysfile_getdirentry+0x94>
8000db88:	aea20000 	sw	v0,0(s5)

8000db8c <sysfile_dup>:
sysfile_dup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:510
}
#endif

int sysfile_dup(int fd1, int fd2)
{
	return file_dup(fd1, fd2);
8000db8c:	0800306e 	j	8000c1b8 <file_dup>
8000db90:	00000000 	nop

8000db94 <sysfile_pipe>:
sysfile_pipe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:515
}

int sysfile_pipe(int *fd_store)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000db94:	3c028015 	lui	v0,0x8015
8000db98:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:514
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000db9c:	27bdffd8 	addiu	sp,sp,-40
8000dba0:	afb1001c 	sw	s1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:515
	struct mm_struct *mm = pls_read(current)->mm;
8000dba4:	8c510020 	lw	s1,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:514
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dba8:	afb20020 	sw	s2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:517
	struct mm_struct *mm = pls_read(current)->mm;
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
8000dbac:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:514
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dbb0:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:517
	struct mm_struct *mm = pls_read(current)->mm;
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
8000dbb4:	24060008 	li	a2,8
8000dbb8:	24070001 	li	a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:514
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dbbc:	afb00018 	sw	s0,24(sp)
8000dbc0:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:517
	struct mm_struct *mm = pls_read(current)->mm;
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
8000dbc4:	0c005069 	jal	800141a4 <user_mem_check>
8000dbc8:	02202021 	move	a0,s1
8000dbcc:	10400005 	beqz	v0,8000dbe4 <sysfile_pipe+0x50>
8000dbd0:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:520
		return -E_INVAL;
	}
	if ((ret = file_pipe(fd)) == 0) {
8000dbd4:	0c00309b 	jal	8000c26c <file_pipe>
8000dbd8:	27a40010 	addiu	a0,sp,16
8000dbdc:	10400008 	beqz	v0,8000dc00 <sysfile_pipe+0x6c>
8000dbe0:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:533
		if (ret != 0) {
			file_close(fd[0]), file_close(fd[1]);
		}
	}
	return ret;
}
8000dbe4:	8fbf0024 	lw	ra,36(sp)
8000dbe8:	02001021 	move	v0,s0
8000dbec:	8fb20020 	lw	s2,32(sp)
8000dbf0:	8fb1001c 	lw	s1,28(sp)
8000dbf4:	8fb00018 	lw	s0,24(sp)
8000dbf8:	03e00008 	jr	ra
8000dbfc:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:521
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
		return -E_INVAL;
	}
	if ((ret = file_pipe(fd)) == 0) {
		lock_mm(mm);
8000dc00:	0c004c18 	jal	80013060 <lock_mm>
8000dc04:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:523
		{
			if (!copy_to_user(mm, fd_store, fd, sizeof(fd))) {
8000dc08:	02202021 	move	a0,s1
8000dc0c:	02402821 	move	a1,s2
8000dc10:	27a60010 	addiu	a2,sp,16
8000dc14:	0c007834 	jal	8001e0d0 <copy_to_user>
8000dc18:	24070008 	li	a3,8
8000dc1c:	1440000e 	bnez	v0,8000dc58 <sysfile_pipe+0xc4>
8000dc20:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:527
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000dc24:	0c004c29 	jal	800130a4 <unlock_mm>
8000dc28:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:529
		if (ret != 0) {
			file_close(fd[0]), file_close(fd[1]);
8000dc2c:	0c002e55 	jal	8000b954 <file_close>
8000dc30:	8fa40010 	lw	a0,16(sp)
8000dc34:	0c002e55 	jal	8000b954 <file_close>
8000dc38:	8fa40014 	lw	a0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:533
		}
	}
	return ret;
}
8000dc3c:	8fbf0024 	lw	ra,36(sp)
8000dc40:	02001021 	move	v0,s0
8000dc44:	8fb20020 	lw	s2,32(sp)
8000dc48:	8fb1001c 	lw	s1,28(sp)
8000dc4c:	8fb00018 	lw	s0,24(sp)
8000dc50:	03e00008 	jr	ra
8000dc54:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:527
		{
			if (!copy_to_user(mm, fd_store, fd, sizeof(fd))) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000dc58:	0c004c29 	jal	800130a4 <unlock_mm>
8000dc5c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:533
		if (ret != 0) {
			file_close(fd[0]), file_close(fd[1]);
		}
	}
	return ret;
}
8000dc60:	8fbf0024 	lw	ra,36(sp)
8000dc64:	02001021 	move	v0,s0
8000dc68:	8fb20020 	lw	s2,32(sp)
8000dc6c:	8fb1001c 	lw	s1,28(sp)
8000dc70:	8fb00018 	lw	s0,24(sp)
8000dc74:	03e00008 	jr	ra
8000dc78:	27bd0028 	addiu	sp,sp,40

8000dc7c <sysfile_mkfifo>:
sysfile_mkfifo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:536

int sysfile_mkfifo(const char *__name, uint32_t open_flags)
{
8000dc7c:	27bdffd8 	addiu	sp,sp,-40
8000dc80:	00801021 	move	v0,a0
8000dc84:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:539
	int ret;
	char *name;
	if ((ret = copy_path(&name, __name)) != 0) {
8000dc88:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:536
	}
	return ret;
}

int sysfile_mkfifo(const char *__name, uint32_t open_flags)
{
8000dc8c:	00a08021 	move	s0,a1
8000dc90:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:539
	int ret;
	char *name;
	if ((ret = copy_path(&name, __name)) != 0) {
8000dc94:	0c0033a7 	jal	8000ce9c <copy_path>
8000dc98:	00402821 	move	a1,v0
8000dc9c:	14400009 	bnez	v0,8000dcc4 <sysfile_mkfifo+0x48>
8000dca0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:542
		return ret;
	}
	ret = file_mkfifo(name, open_flags);
8000dca4:	8fa40010 	lw	a0,16(sp)
8000dca8:	0c0030d8 	jal	8000c360 <file_mkfifo>
8000dcac:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:543
	kfree(name);
8000dcb0:	8fa40010 	lw	a0,16(sp)
8000dcb4:	0c0054a3 	jal	8001528c <kfree>
8000dcb8:	afa20018 	sw	v0,24(sp)
8000dcbc:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:545
	return ret;
}
8000dcc0:	8fbf0024 	lw	ra,36(sp)
8000dcc4:	8fb00020 	lw	s0,32(sp)
8000dcc8:	03e00008 	jr	ra
8000dccc:	27bd0028 	addiu	sp,sp,40

8000dcd0 <sysfile_ioctl>:
sysfile_ioctl():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:548

int sysfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000dcd0:	27bdffe0 	addiu	sp,sp,-32
8000dcd4:	afb20018 	sw	s2,24(sp)
8000dcd8:	afb10014 	sw	s1,20(sp)
8000dcdc:	00a09021 	move	s2,a1
8000dce0:	00c08821 	move	s1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:549
	if (!file_testfd(fd, 1, 0)) {
8000dce4:	24050001 	li	a1,1
8000dce8:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:548
	kfree(name);
	return ret;
}

int sysfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000dcec:	afb00010 	sw	s0,16(sp)
8000dcf0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:549
	if (!file_testfd(fd, 1, 0)) {
8000dcf4:	0c002dc8 	jal	8000b720 <file_testfd>
8000dcf8:	00808021 	move	s0,a0
8000dcfc:	1040000e 	beqz	v0,8000dd38 <sysfile_ioctl+0x68>
8000dd00:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:552
		return -E_INVAL;
	}
	if (!__is_linux_devfile(fd)) {
8000dd04:	0c003121 	jal	8000c484 <__is_linux_devfile>
8000dd08:	02002021 	move	a0,s0
8000dd0c:	10400009 	beqz	v0,8000dd34 <sysfile_ioctl+0x64>
8000dd10:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:555
		return -E_INVAL;
	}
	return linux_devfile_ioctl(fd, cmd, arg);
8000dd14:	02402821 	move	a1,s2
8000dd18:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:556
}
8000dd1c:	8fbf001c 	lw	ra,28(sp)
8000dd20:	8fb20018 	lw	s2,24(sp)
8000dd24:	8fb10014 	lw	s1,20(sp)
8000dd28:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:555
		return -E_INVAL;
	}
	if (!__is_linux_devfile(fd)) {
		return -E_INVAL;
	}
	return linux_devfile_ioctl(fd, cmd, arg);
8000dd2c:	080031de 	j	8000c778 <linux_devfile_ioctl>
8000dd30:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:556
}
8000dd34:	8fbf001c 	lw	ra,28(sp)
8000dd38:	2402ffea 	li	v0,-22
8000dd3c:	8fb20018 	lw	s2,24(sp)
8000dd40:	8fb10014 	lw	s1,20(sp)
8000dd44:	8fb00010 	lw	s0,16(sp)
8000dd48:	03e00008 	jr	ra
8000dd4c:	27bd0020 	addiu	sp,sp,32

8000dd50 <sysfile_linux_mmap2>:
sysfile_linux_mmap2():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:560

void *sysfile_linux_mmap2(void *addr, size_t len, int prot, int flags,
			  int fd, size_t pgoff)
{
8000dd50:	27bdffd0 	addiu	sp,sp,-48
8000dd54:	afb00018 	sw	s0,24(sp)
8000dd58:	8fb00040 	lw	s0,64(sp)
8000dd5c:	afb40028 	sw	s4,40(sp)
8000dd60:	afb30024 	sw	s3,36(sp)
8000dd64:	afb20020 	sw	s2,32(sp)
8000dd68:	0080a021 	move	s4,a0
8000dd6c:	00a09821 	move	s3,a1
8000dd70:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:561
	if (!file_testfd(fd, 1, 0)) {
8000dd74:	02002021 	move	a0,s0
8000dd78:	24050001 	li	a1,1
8000dd7c:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:560
	return linux_devfile_ioctl(fd, cmd, arg);
}

void *sysfile_linux_mmap2(void *addr, size_t len, int prot, int flags,
			  int fd, size_t pgoff)
{
8000dd80:	afb1001c 	sw	s1,28(sp)
8000dd84:	afbf002c 	sw	ra,44(sp)
8000dd88:	8fb10044 	lw	s1,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:561
	if (!file_testfd(fd, 1, 0)) {
8000dd8c:	0c002dc8 	jal	8000b720 <file_testfd>
8000dd90:	afa70010 	sw	a3,16(sp)
8000dd94:	1440000a 	bnez	v0,8000ddc0 <sysfile_linux_mmap2+0x70>
8000dd98:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:573
	else {
		return linux_regfile_mmap2(addr, len, prot, flags, fd, pgoff);
	}
#endif //UCONFIG_BIONIC_LIBC
	return MAP_FAILED;
}
8000dd9c:	8fbf002c 	lw	ra,44(sp)
8000dda0:	2402ffff 	li	v0,-1
8000dda4:	8fb40028 	lw	s4,40(sp)
8000dda8:	8fb30024 	lw	s3,36(sp)
8000ddac:	8fb20020 	lw	s2,32(sp)
8000ddb0:	8fb1001c 	lw	s1,28(sp)
8000ddb4:	8fb00018 	lw	s0,24(sp)
8000ddb8:	03e00008 	jr	ra
8000ddbc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:564
			  int fd, size_t pgoff)
{
	if (!file_testfd(fd, 1, 0)) {
		return MAP_FAILED;
	}
	if (__is_linux_devfile(fd)) {
8000ddc0:	0c003121 	jal	8000c484 <__is_linux_devfile>
8000ddc4:	02002021 	move	a0,s0
8000ddc8:	1040fff4 	beqz	v0,8000dd9c <sysfile_linux_mmap2+0x4c>
8000ddcc:	8fa70010 	lw	a3,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:565
		return linux_devfile_mmap2(addr, len, prot, flags, fd, pgoff);
8000ddd0:	afb00040 	sw	s0,64(sp)
8000ddd4:	afb10044 	sw	s1,68(sp)
8000ddd8:	02802021 	move	a0,s4
8000dddc:	02602821 	move	a1,s3
8000dde0:	02403021 	move	a2,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:573
	else {
		return linux_regfile_mmap2(addr, len, prot, flags, fd, pgoff);
	}
#endif //UCONFIG_BIONIC_LIBC
	return MAP_FAILED;
}
8000dde4:	8fbf002c 	lw	ra,44(sp)
8000dde8:	8fb40028 	lw	s4,40(sp)
8000ddec:	8fb30024 	lw	s3,36(sp)
8000ddf0:	8fb20020 	lw	s2,32(sp)
8000ddf4:	8fb1001c 	lw	s1,28(sp)
8000ddf8:	8fb00018 	lw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sysfile.c:565
{
	if (!file_testfd(fd, 1, 0)) {
		return MAP_FAILED;
	}
	if (__is_linux_devfile(fd)) {
		return linux_devfile_mmap2(addr, len, prot, flags, fd, pgoff);
8000ddfc:	08003217 	j	8000c85c <linux_devfile_mmap2>
8000de00:	27bd0030 	addiu	sp,sp,48

8000de04 <__intr_save>:
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:11

void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
8000de04:	27bdffe8 	addiu	sp,sp,-24
8000de08:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
	if (!(read_c0_status() & ST0_IE)) {
8000de0c:	40036000 	mfc0	v1,c0_status
8000de10:	30630001 	andi	v1,v1,0x1
8000de14:	10600004 	beqz	v1,8000de28 <__intr_save+0x24>
8000de18:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000de1c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000de20:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8000de24:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:17
}
8000de28:	8fbf0014 	lw	ra,20(sp)
8000de2c:	03e00008 	jr	ra
8000de30:	27bd0018 	addiu	sp,sp,24

8000de34 <user_main>:
user_main():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1961

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// user_main - kernel thread used to exec a user program
static int user_main(void *arg)
{
8000de34:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1962
	sysfile_open("stdin:", O_RDONLY);
8000de38:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1961

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// user_main - kernel thread used to exec a user program
static int user_main(void *arg)
{
8000de3c:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1962
	sysfile_open("stdin:", O_RDONLY);
8000de40:	248424f0 	addiu	a0,a0,9456
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1963
	sysfile_open("stdout:", O_WRONLY);
8000de44:	3c108002 	lui	s0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1961

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// user_main - kernel thread used to exec a user program
static int user_main(void *arg)
{
8000de48:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1962
	sysfile_open("stdin:", O_RDONLY);
8000de4c:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000de50:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1963
	sysfile_open("stdout:", O_WRONLY);
8000de54:	260424f8 	addiu	a0,s0,9464
8000de58:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000de5c:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1964
	sysfile_open("stdout:", O_WRONLY);
8000de60:	260424f8 	addiu	a0,s0,9464
8000de64:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000de68:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1972
	KERNEL_EXECVE3(UNITTEST, TESTSCRIPT);
#else
	KERNEL_EXECVE2(UNITTEST);
#endif
#else
	__KERNEL_EXECVE("/bin/sh", "/bin/sh");
8000de6c:	3c028015 	lui	v0,0x8015
8000de70:	8c4277a4 	lw	v0,30628(v0)
8000de74:	3c108002 	lui	s0,0x8002
8000de78:	26102500 	addiu	s0,s0,9472
8000de7c:	8c450004 	lw	a1,4(v0)
8000de80:	3c048002 	lui	a0,0x8002
8000de84:	3c028002 	lui	v0,0x8002
8000de88:	02003021 	move	a2,s0
8000de8c:	24842514 	addiu	a0,a0,9492
8000de90:	24422508 	addiu	v0,v0,9480
8000de94:	afb00018 	sw	s0,24(sp)
8000de98:	afa0001c 	sw	zero,28(sp)
8000de9c:	afa20010 	sw	v0,16(sp)
8000dea0:	0c00798a 	jal	8001e628 <kprintf>
8000dea4:	afa00014 	sw	zero,20(sp)
8000dea8:	02002021 	move	a0,s0
8000deac:	27a50018 	addiu	a1,sp,24
8000deb0:	0c007900 	jal	8001e400 <kernel_execve>
8000deb4:	27a60010 	addiu	a2,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1974
#endif
	kprintf("user_main execve failed, no /bin/sh?.\n\r");
8000deb8:	3c048002 	lui	a0,0x8002
8000debc:	0c00798a 	jal	8001e628 <kprintf>
8000dec0:	2484253c 	addiu	a0,a0,9532
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1975
}
8000dec4:	8fbf0024 	lw	ra,36(sp)
8000dec8:	8fb00020 	lw	s0,32(sp)
8000decc:	03e00008 	jr	ra
8000ded0:	27bd0028 	addiu	sp,sp,40

8000ded4 <put_kargv>:
put_kargv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1134
bad_mm:
	goto out;
}

static void put_kargv(int argc, char **kargv)
{
8000ded4:	27bdffe0 	addiu	sp,sp,-32
8000ded8:	afb00014 	sw	s0,20(sp)
8000dedc:	afbf001c 	sw	ra,28(sp)
8000dee0:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1135
	while (argc > 0) {
8000dee4:	18800009 	blez	a0,8000df0c <put_kargv+0x38>
8000dee8:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1133
	mm_destroy(mm);
bad_mm:
	goto out;
}

static void put_kargv(int argc, char **kargv)
8000deec:	00048880 	sll	s1,a0,0x2
8000def0:	00b18821 	addu	s1,a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1136
{
	while (argc > 0) {
		kfree(kargv[--argc]);
8000def4:	8e24fffc 	lw	a0,-4(s1)
8000def8:	2610ffff 	addiu	s0,s0,-1
8000defc:	0c0054a3 	jal	8001528c <kfree>
8000df00:	2631fffc 	addiu	s1,s1,-4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1135
	goto out;
}

static void put_kargv(int argc, char **kargv)
{
	while (argc > 0) {
8000df04:	5600fffc 	bnezl	s0,8000def8 <put_kargv+0x24>
8000df08:	8e24fffc 	lw	a0,-4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1138
		kfree(kargv[--argc]);
	}
}
8000df0c:	8fbf001c 	lw	ra,28(sp)
8000df10:	8fb10018 	lw	s1,24(sp)
8000df14:	8fb00014 	lw	s0,20(sp)
8000df18:	03e00008 	jr	ra
8000df1c:	27bd0020 	addiu	sp,sp,32

8000df20 <put_pgdir>:
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000df20:	8c870010 	lw	a3,16(a0)
8000df24:	3c028000 	lui	v0,0x8000
8000df28:	24421000 	addiu	v0,v0,4096
put_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:262
	return 0;
}

// put_pgdir - free the memory space of PDT
static void put_pgdir(struct mm_struct *mm)
{
8000df2c:	27bdffe8 	addiu	sp,sp,-24
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
8000df30:	00e2102b 	sltu	v0,a3,v0
8000df34:	14400011 	bnez	v0,8000df7c <put_pgdir+0x5c>
8000df38:	afbf0014 	sw	ra,20(sp)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8000df3c:	3c028015 	lui	v0,0x8015
8000df40:	3c037fff 	lui	v1,0x7fff
8000df44:	8c427770 	lw	v0,30576(v0)
8000df48:	3463f000 	ori	v1,v1,0xf000
8000df4c:	00e33821 	addu	a3,a3,v1
8000df50:	00073b02 	srl	a3,a3,0xc
8000df54:	00e2102b 	sltu	v0,a3,v0
8000df58:	1040000e 	beqz	v0,8000df94 <put_pgdir+0x74>
8000df5c:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8000df60:	8c4477bc 	lw	a0,30652(v0)
put_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:264
	free_page(kva2page(mm->pgdir));
}
8000df64:	8fbf0014 	lw	ra,20(sp)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
8000df68:	00073940 	sll	a3,a3,0x5
put_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:263
}

// put_pgdir - free the memory space of PDT
static void put_pgdir(struct mm_struct *mm)
{
	free_page(kva2page(mm->pgdir));
8000df6c:	24050001 	li	a1,1
8000df70:	00872021 	addu	a0,a0,a3
8000df74:	080073fb 	j	8001cfec <free_pages>
8000df78:	27bd0018 	addiu	sp,sp,24
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000df7c:	3c048002 	lui	a0,0x8002
8000df80:	3c068002 	lui	a2,0x8002
8000df84:	24842564 	addiu	a0,a0,9572
8000df88:	2405006f 	li	a1,111
8000df8c:	0c006afd 	jal	8001abf4 <__panic>
8000df90:	24c625a8 	addiu	a2,a2,9640
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8000df94:	3c048002 	lui	a0,0x8002
8000df98:	3c068002 	lui	a2,0x8002
8000df9c:	24842564 	addiu	a0,a0,9572
8000dfa0:	24050063 	li	a1,99
8000dfa4:	0c006afd 	jal	8001abf4 <__panic>
8000dfa8:	24c625cc 	addiu	a2,a2,9676

8000dfac <load_icode_read>:
load_icode_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:748
	current->exit_code = error_code;
	return __do_exit();
}

static int load_icode_read(int fd, void *buf, size_t len, off_t offset)
{
8000dfac:	27bdffd8 	addiu	sp,sp,-40
8000dfb0:	afb10018 	sw	s1,24(sp)
8000dfb4:	afb00014 	sw	s0,20(sp)
8000dfb8:	00a08821 	move	s1,a1
8000dfbc:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:750
	int ret;
	if ((ret = sysfile_seek(fd, offset, LSEEK_SET)) != 0) {
8000dfc0:	00e02821 	move	a1,a3
8000dfc4:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:748
	current->exit_code = error_code;
	return __do_exit();
}

static int load_icode_read(int fd, void *buf, size_t len, off_t offset)
{
8000dfc8:	afb30020 	sw	s3,32(sp)
8000dfcc:	afb2001c 	sw	s2,28(sp)
8000dfd0:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:750
	int ret;
	if ((ret = sysfile_seek(fd, offset, LSEEK_SET)) != 0) {
8000dfd4:	0c003528 	jal	8000d4a0 <sysfile_seek>
8000dfd8:	00809821 	move	s3,a0
8000dfdc:	10400009 	beqz	v0,8000e004 <load_icode_read+0x58>
8000dfe0:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:757
	}
	if ((ret = sysfile_read(fd, buf, len)) != len) {
		return (ret < 0) ? ret : -1;
	}
	return 0;
}
8000dfe4:	8fbf0024 	lw	ra,36(sp)
8000dfe8:	02401021 	move	v0,s2
8000dfec:	8fb30020 	lw	s3,32(sp)
8000dff0:	8fb2001c 	lw	s2,28(sp)
8000dff4:	8fb10018 	lw	s1,24(sp)
8000dff8:	8fb00014 	lw	s0,20(sp)
8000dffc:	03e00008 	jr	ra
8000e000:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:753
{
	int ret;
	if ((ret = sysfile_seek(fd, offset, LSEEK_SET)) != 0) {
		return ret;
	}
	if ((ret = sysfile_read(fd, buf, len)) != len) {
8000e004:	02602021 	move	a0,s3
8000e008:	02202821 	move	a1,s1
8000e00c:	0c0033e8 	jal	8000cfa0 <sysfile_read>
8000e010:	02003021 	move	a2,s0
8000e014:	1202fff3 	beq	s0,v0,8000dfe4 <load_icode_read+0x38>
8000e018:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:754
		return (ret < 0) ? ret : -1;
8000e01c:	28430000 	slti	v1,v0,0
8000e020:	2412ffff 	li	s2,-1
8000e024:	0043900b 	movn	s2,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:757
	}
	return 0;
}
8000e028:	02401021 	move	v0,s2
8000e02c:	8fb30020 	lw	s3,32(sp)
8000e030:	8fb2001c 	lw	s2,28(sp)
8000e034:	8fb10018 	lw	s1,24(sp)
8000e038:	8fb00014 	lw	s0,20(sp)
8000e03c:	03e00008 	jr	ra
8000e040:	27bd0028 	addiu	sp,sp,40

8000e044 <copy_kargv.constprop.3>:
copy_kargv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1141
		kfree(kargv[--argc]);
	}
}

static int
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
8000e044:	27bdffb0 	addiu	sp,sp,-80
8000e048:	afb70048 	sw	s7,72(sp)
8000e04c:	afb60044 	sw	s6,68(sp)
8000e050:	afb30038 	sw	s3,56(sp)
8000e054:	afbf004c 	sw	ra,76(sp)
8000e058:	afb50040 	sw	s5,64(sp)
8000e05c:	afb4003c 	sw	s4,60(sp)
8000e060:	afb20034 	sw	s2,52(sp)
8000e064:	afb10030 	sw	s1,48(sp)
8000e068:	afb0002c 	sw	s0,44(sp)
8000e06c:	00809821 	move	s3,a0
8000e070:	00a0b021 	move	s6,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1145
	   int *argc_store)
{
	int i, ret = -E_INVAL;
	if (!argv) {
8000e074:	10c00043 	beqz	a2,8000e184 <copy_kargv.constprop.3+0x140>
8000e078:	00e0b821 	move	s7,a3
8000e07c:	00a08021 	move	s0,a1
8000e080:	00009021 	move	s2,zero
8000e084:	00c5a023 	subu	s4,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1150
		*argc_store = 0;
		return 0;
	}
	char *argv_k;
	for (i = 0; i < max_argc; i++) {
8000e088:	24150020 	li	s5,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1151
		if (!copy_from_user(mm, &argv_k, argv + i, sizeof(char *), 0))
8000e08c:	02602021 	move	a0,s3
8000e090:	02903021 	addu	a2,s4,s0
8000e094:	27a50018 	addiu	a1,sp,24
8000e098:	24070004 	li	a3,4
8000e09c:	0c00781a 	jal	8001e068 <copy_from_user>
8000e0a0:	afa00010 	sw	zero,16(sp)
8000e0a4:	10400020 	beqz	v0,8000e128 <copy_kargv.constprop.3+0xe4>
8000e0a8:	24041000 	li	a0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1153
			goto failed_cleanup;
		if (!argv_k)
8000e0ac:	8fa20018 	lw	v0,24(sp)
8000e0b0:	10400011 	beqz	v0,8000e0f8 <copy_kargv.constprop.3+0xb4>
8000e0b4:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1156
			break;
		char *buffer;
		if ((buffer = kmalloc(EXEC_MAX_ARG_LEN + 1)) == NULL) {
8000e0b8:	0c005478 	jal	800151e0 <kmalloc>
8000e0bc:	00000000 	nop
8000e0c0:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1166
		    !copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
			goto failed_cleanup;
		}
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
8000e0c4:	02602021 	move	a0,s3
8000e0c8:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1156
		if (!copy_from_user(mm, &argv_k, argv + i, sizeof(char *), 0))
			goto failed_cleanup;
		if (!argv_k)
			break;
		char *buffer;
		if ((buffer = kmalloc(EXEC_MAX_ARG_LEN + 1)) == NULL) {
8000e0cc:	10400027 	beqz	v0,8000e16c <copy_kargv.constprop.3+0x128>
8000e0d0:	24071000 	li	a3,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1166
		    !copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
			goto failed_cleanup;
		}
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
8000e0d4:	0c00784d 	jal	8001e134 <copy_string>
8000e0d8:	8fa60018 	lw	a2,24(sp)
8000e0dc:	10400025 	beqz	v0,8000e174 <copy_kargv.constprop.3+0x130>
8000e0e0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1150
	if (!argv) {
		*argc_store = 0;
		return 0;
	}
	char *argv_k;
	for (i = 0; i < max_argc; i++) {
8000e0e4:	26520001 	addiu	s2,s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1170
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
			goto failed_cleanup;
		}
		kargv[i] = buffer;
8000e0e8:	ae110000 	sw	s1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1150
	if (!argv) {
		*argc_store = 0;
		return 0;
	}
	char *argv_k;
	for (i = 0; i < max_argc; i++) {
8000e0ec:	1655ffe7 	bne	s2,s5,8000e08c <copy_kargv.constprop.3+0x48>
8000e0f0:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e0f4:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1172
			kfree(buffer);
			goto failed_cleanup;
		}
		kargv[i] = buffer;
	}
	*argc_store = i;
8000e0f8:	aef20000 	sw	s2,0(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1173
	return 0;
8000e0fc:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e100:	8fb70048 	lw	s7,72(sp)
8000e104:	8fb60044 	lw	s6,68(sp)
8000e108:	8fb50040 	lw	s5,64(sp)
8000e10c:	8fb4003c 	lw	s4,60(sp)
8000e110:	8fb30038 	lw	s3,56(sp)
8000e114:	8fb20034 	lw	s2,52(sp)
8000e118:	8fb10030 	lw	s1,48(sp)
8000e11c:	8fb0002c 	lw	s0,44(sp)
8000e120:	03e00008 	jr	ra
8000e124:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1144

static int
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
	   int *argc_store)
{
	int i, ret = -E_INVAL;
8000e128:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1178
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
8000e12c:	02402021 	move	a0,s2
8000e130:	02c02821 	move	a1,s6
8000e134:	0c0037b5 	jal	8000ded4 <put_kargv>
8000e138:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
	return ret;
}
8000e13c:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1178
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
8000e140:	8fa20020 	lw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
	return ret;
}
8000e144:	8fb70048 	lw	s7,72(sp)
8000e148:	8fb60044 	lw	s6,68(sp)
8000e14c:	8fb50040 	lw	s5,64(sp)
8000e150:	8fb4003c 	lw	s4,60(sp)
8000e154:	8fb30038 	lw	s3,56(sp)
8000e158:	8fb20034 	lw	s2,52(sp)
8000e15c:	8fb10030 	lw	s1,48(sp)
8000e160:	8fb0002c 	lw	s0,44(sp)
8000e164:	03e00008 	jr	ra
8000e168:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1176
	}
	*argc_store = i;
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
8000e16c:	0800384b 	j	8000e12c <copy_kargv.constprop.3+0xe8>
8000e170:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1167
			kfree(buffer);
			goto failed_cleanup;
		}
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
8000e174:	0c0054a3 	jal	8001528c <kfree>
8000e178:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1144

static int
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
	   int *argc_store)
{
	int i, ret = -E_INVAL;
8000e17c:	0800384b 	j	8000e12c <copy_kargv.constprop.3+0xe8>
8000e180:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e184:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1147
	   int *argc_store)
{
	int i, ret = -E_INVAL;
	if (!argv) {
		*argc_store = 0;
		return 0;
8000e188:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e18c:	8fb70048 	lw	s7,72(sp)
8000e190:	8fb60044 	lw	s6,68(sp)
8000e194:	8fb50040 	lw	s5,64(sp)
8000e198:	8fb4003c 	lw	s4,60(sp)
8000e19c:	8fb30038 	lw	s3,56(sp)
8000e1a0:	8fb20034 	lw	s2,52(sp)
8000e1a4:	8fb10030 	lw	s1,48(sp)
8000e1a8:	8fb0002c 	lw	s0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1146
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
	   int *argc_store)
{
	int i, ret = -E_INVAL;
	if (!argv) {
		*argc_store = 0;
8000e1ac:	ace00000 	sw	zero,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e1b0:	03e00008 	jr	ra
8000e1b4:	27bd0050 	addiu	sp,sp,80

8000e1b8 <map_ph>:
map_ph():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:771
	uint32_t vm_flags = 0;
	uint32_t bias = 0;
	pte_perm_t perm = 0;
	ptep_set_u_read(&perm);

	if (ph->p_flags & ELF_PF_X)
8000e1b8:	8ca20018 	lw	v0,24(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e1bc:	27bdffb0 	addiu	sp,sp,-80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:772
	uint32_t bias = 0;
	pte_perm_t perm = 0;
	ptep_set_u_read(&perm);

	if (ph->p_flags & ELF_PF_X)
		vm_flags |= VM_EXEC;
8000e1c0:	24030004 	li	v1,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e1c4:	afb00028 	sw	s0,40(sp)
8000e1c8:	afa50054 	sw	a1,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:771
	uint32_t vm_flags = 0;
	uint32_t bias = 0;
	pte_perm_t perm = 0;
	ptep_set_u_read(&perm);

	if (ph->p_flags & ELF_PF_X)
8000e1cc:	30500001 	andi	s0,v0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:772
		vm_flags |= VM_EXEC;
8000e1d0:	00602821 	move	a1,v1
8000e1d4:	0010280a 	movz	a1,zero,s0
8000e1d8:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:773
	if (ph->p_flags & ELF_PF_W)
8000e1dc:	30450002 	andi	a1,v0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:774
		vm_flags |= VM_WRITE;
8000e1e0:	02058025 	or	s0,s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:776
	if (ph->p_flags & ELF_PF_R)
		vm_flags |= VM_READ;
8000e1e4:	7c420080 	ext	v0,v0,0x2,0x1
8000e1e8:	00508025 	or	s0,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e1ec:	afb60040 	sw	s6,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:778
	if (ph->p_flags & ELF_PF_W)
		vm_flags |= VM_WRITE;
	if (ph->p_flags & ELF_PF_R)
		vm_flags |= VM_READ;

	if (vm_flags & VM_WRITE)
8000e1f0:	32020002 	andi	v0,s0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:65
	*ptep |= PTE_U;
}

static inline void ptep_set_u_write(pte_t * ptep)
{
	*ptep |= PTE_W | PTE_U;
8000e1f4:	24160006 	li	s6,6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e1f8:	afbe0048 	sw	s8,72(sp)
8000e1fc:	afb70044 	sw	s7,68(sp)
8000e200:	afbf004c 	sw	ra,76(sp)
8000e204:	afb5003c 	sw	s5,60(sp)
8000e208:	afb40038 	sw	s4,56(sp)
8000e20c:	afb30034 	sw	s3,52(sp)
8000e210:	afb20030 	sw	s2,48(sp)
8000e214:	afb1002c 	sw	s1,44(sp)
8000e218:	0080f021 	move	s8,a0
8000e21c:	00c0b821 	move	s7,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:781
		vm_flags |= VM_READ;

	if (vm_flags & VM_WRITE)
		ptep_set_u_write(&perm);

	if (pbias) {
8000e220:	10e00055 	beqz	a3,8000e378 <map_ph+0x1c0>
8000e224:	0062b00a 	movz	s6,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:782
		bias = *pbias;
8000e228:	8ce30000 	lw	v1,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:784
	}
	if (!bias && !ph->p_va) {
8000e22c:	10600052 	beqz	v1,8000e378 <map_ph+0x1c0>
8000e230:	afa30018 	sw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:788
		bias = get_unmapped_area(mm, ph->p_memsz + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);
		if (pbias)
			*pbias = bias;
8000e234:	8fa30054 	lw	v1,84(sp)
8000e238:	8c650008 	lw	a1,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:791
	}

	if ((ret =
8000e23c:	8fa30054 	lw	v1,84(sp)
8000e240:	02e02021 	move	a0,s7
8000e244:	02003821 	move	a3,s0
8000e248:	8c660014 	lw	a2,20(v1)
8000e24c:	8fa30018 	lw	v1,24(sp)
8000e250:	afa00010 	sw	zero,16(sp)
8000e254:	0c004e3c 	jal	800138f0 <mm_map>
8000e258:	00a32821 	addu	a1,a1,v1
8000e25c:	14400039 	bnez	v0,8000e344 <map_ph+0x18c>
8000e260:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:796
	     mm_map(mm, ph->p_va + bias, ph->p_memsz, vm_flags, NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
8000e264:	8fa20060 	lw	v0,96(sp)
8000e268:	10400056 	beqz	v0,8000e3c4 <map_ph+0x20c>
8000e26c:	8fa30054 	lw	v1,84(sp)
8000e270:	8c620008 	lw	v0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:804

	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);

	end = ph->p_va + bias + ph->p_filesz;
8000e274:	8fa30054 	lw	v1,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:800

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
		mm->brk_start = ph->p_va + bias + ph->p_memsz;
	}

	off_t offset = ph->p_offset;
8000e278:	8fa40054 	lw	a0,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:802
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);
8000e27c:	2410f000 	li	s0,-4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:804

	end = ph->p_va + bias + ph->p_filesz;
8000e280:	8c750010 	lw	s5,16(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:802
		mm->brk_start = ph->p_va + bias + ph->p_memsz;
	}

	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);
8000e284:	8fa30018 	lw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:800

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
		mm->brk_start = ph->p_va + bias + ph->p_memsz;
	}

	off_t offset = ph->p_offset;
8000e288:	8c940004 	lw	s4,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:802
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);
8000e28c:	00438821 	addu	s1,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:804

	end = ph->p_va + bias + ph->p_filesz;
8000e290:	0235a821 	addu	s5,s1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:805
	while (start < end) {
8000e294:	0235182b 	sltu	v1,s1,s5
8000e298:	14600022 	bnez	v1,8000e324 <map_ph+0x16c>
8000e29c:	02308024 	and	s0,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:822
			goto bad_cleanup_mmap;
		}
		start += size, offset += size;
	}

	end = ph->p_va + bias + ph->p_memsz;
8000e2a0:	080038ff 	j	8000e3fc <map_ph+0x244>
8000e2a4:	8fa30054 	lw	v1,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:810
	while (start < end) {
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
			ret = -E_NO_MEM;
			goto bad_cleanup_mmap;
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
8000e2a8:	02302823 	subu	a1,s1,s0
8000e2ac:	26101000 	addiu	s0,s0,4096
8000e2b0:	24031000 	li	v1,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:811
		if (end < la) {
8000e2b4:	02b0102b 	sltu	v0,s5,s0
8000e2b8:	10400003 	beqz	v0,8000e2c8 <map_ph+0x110>
8000e2bc:	00659023 	subu	s2,v1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:812
			size -= la - end;
8000e2c0:	02509023 	subu	s2,s2,s0
8000e2c4:	02559021 	addu	s2,s2,s5
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e2c8:	3c048015 	lui	a0,0x8015
8000e2cc:	8c8777bc 	lw	a3,30652(a0)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e2d0:	3c038015 	lui	v1,0x8015
8000e2d4:	8c627770 	lw	v0,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e2d8:	02673823 	subu	a3,s3,a3
8000e2dc:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e2e0:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e2e4:	00071b02 	srl	v1,a3,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e2e8:	3c048000 	lui	a0,0x8000
8000e2ec:	34841000 	ori	a0,a0,0x1000
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e2f0:	0062102b 	sltu	v0,v1,v0
8000e2f4:	104000a4 	beqz	v0,8000e588 <map_ph+0x3d0>
8000e2f8:	00e43821 	addu	a3,a3,a0
map_ph():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:814
		}
		if ((ret =
8000e2fc:	00e52821 	addu	a1,a3,a1
8000e300:	03c02021 	move	a0,s8
8000e304:	02403021 	move	a2,s2
8000e308:	0c0037eb 	jal	8000dfac <load_icode_read>
8000e30c:	02803821 	move	a3,s4
8000e310:	14400083 	bnez	v0,8000e520 <map_ph+0x368>
8000e314:	02328821 	addu	s1,s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:805
	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);

	end = ph->p_va + bias + ph->p_filesz;
	while (start < end) {
8000e318:	0235102b 	sltu	v0,s1,s5
8000e31c:	10400034 	beqz	v0,8000e3f0 <map_ph+0x238>
8000e320:	0254a021 	addu	s4,s2,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:806
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
8000e324:	8ee40010 	lw	a0,16(s7)
8000e328:	02002821 	move	a1,s0
8000e32c:	0c005e3f 	jal	800178fc <pgdir_alloc_page>
8000e330:	02c03021 	move	a2,s6
8000e334:	1440ffdc 	bnez	v0,8000e2a8 <map_ph+0xf0>
8000e338:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:840
		       || (end >= la && start == la));
	}

	while (start < end) {
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
			ret = -E_NO_MEM;
8000e33c:	2403fff4 	li	v1,-12
8000e340:	afa3001c 	sw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:854
	}
normal_exit:
	return 0;
bad_cleanup_mmap:
	return ret;
}
8000e344:	8fbf004c 	lw	ra,76(sp)
8000e348:	8fa2001c 	lw	v0,28(sp)
8000e34c:	8fbe0048 	lw	s8,72(sp)
8000e350:	8fb70044 	lw	s7,68(sp)
8000e354:	8fb60040 	lw	s6,64(sp)
8000e358:	8fb5003c 	lw	s5,60(sp)
8000e35c:	8fb40038 	lw	s4,56(sp)
8000e360:	8fb30034 	lw	s3,52(sp)
8000e364:	8fb20030 	lw	s2,48(sp)
8000e368:	8fb1002c 	lw	s1,44(sp)
8000e36c:	8fb00028 	lw	s0,40(sp)
8000e370:	03e00008 	jr	ra
8000e374:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:784
		ptep_set_u_write(&perm);

	if (pbias) {
		bias = *pbias;
	}
	if (!bias && !ph->p_va) {
8000e378:	8fa30054 	lw	v1,84(sp)
8000e37c:	afa00018 	sw	zero,24(sp)
8000e380:	8c650008 	lw	a1,8(v1)
8000e384:	54a0ffae 	bnezl	a1,8000e240 <map_ph+0x88>
8000e388:	8fa30054 	lw	v1,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:785
		bias = get_unmapped_area(mm, ph->p_memsz + PGSIZE);
8000e38c:	8c650014 	lw	a1,20(v1)
8000e390:	02e02021 	move	a0,s7
8000e394:	afa70020 	sw	a3,32(sp)
8000e398:	0c00500e 	jal	80014038 <get_unmapped_area>
8000e39c:	24a51000 	addiu	a1,a1,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:786
		bias = ROUNDUP(bias, PGSIZE);
8000e3a0:	24420fff 	addiu	v0,v0,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:787
		if (pbias)
8000e3a4:	8fa70020 	lw	a3,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:786
	if (pbias) {
		bias = *pbias;
	}
	if (!bias && !ph->p_va) {
		bias = get_unmapped_area(mm, ph->p_memsz + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);
8000e3a8:	30430fff 	andi	v1,v0,0xfff
8000e3ac:	00431823 	subu	v1,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:787
		if (pbias)
8000e3b0:	10e0ffa0 	beqz	a3,8000e234 <map_ph+0x7c>
8000e3b4:	afa30018 	sw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:788
			*pbias = bias;
8000e3b8:	8fa30018 	lw	v1,24(sp)
8000e3bc:	0800388d 	j	8000e234 <map_ph+0x7c>
8000e3c0:	ace30000 	sw	v1,0(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:796
	if ((ret =
	     mm_map(mm, ph->p_va + bias, ph->p_memsz, vm_flags, NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
8000e3c4:	8c620008 	lw	v0,8(v1)
8000e3c8:	8c630014 	lw	v1,20(v1)
8000e3cc:	8fa50018 	lw	a1,24(sp)
8000e3d0:	8ee40024 	lw	a0,36(s7)
8000e3d4:	00431821 	addu	v1,v0,v1
8000e3d8:	00651821 	addu	v1,v1,a1
8000e3dc:	0083202b 	sltu	a0,a0,v1
8000e3e0:	5480ffa4 	bnezl	a0,8000e274 <map_ph+0xbc>
8000e3e4:	aee30024 	sw	v1,36(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:804

	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);

	end = ph->p_va + bias + ph->p_filesz;
8000e3e8:	0800389e 	j	8000e278 <map_ph+0xc0>
8000e3ec:	8fa30054 	lw	v1,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:805
	while (start < end) {
8000e3f0:	8fa30054 	lw	v1,84(sp)
8000e3f4:	8c620008 	lw	v0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:822
			goto bad_cleanup_mmap;
		}
		start += size, offset += size;
	}

	end = ph->p_va + bias + ph->p_memsz;
8000e3f8:	8fa30054 	lw	v1,84(sp)
8000e3fc:	8fa40018 	lw	a0,24(sp)
8000e400:	8c720014 	lw	s2,20(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:824

	if (start < la) {
8000e404:	0230182b 	sltu	v1,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:822
			goto bad_cleanup_mmap;
		}
		start += size, offset += size;
	}

	end = ph->p_va + bias + ph->p_memsz;
8000e408:	00929021 	addu	s2,a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:824

	if (start < la) {
8000e40c:	1060001c 	beqz	v1,8000e480 <map_ph+0x2c8>
8000e410:	02429021 	addu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:825
		if (start == end) {
8000e414:	1232ffcb 	beq	s1,s2,8000e344 <map_ph+0x18c>
8000e418:	02301023 	subu	v0,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:829
			goto normal_exit;
		}
		off = start + PGSIZE - la, size = PGSIZE - off;
		if (end < la) {
8000e41c:	0250a02b 	sltu	s4,s2,s0
8000e420:	16800056 	bnez	s4,8000e57c <map_ph+0x3c4>
8000e424:	0002a823 	negu	s5,v0
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e428:	3c038015 	lui	v1,0x8015
8000e42c:	8c6377bc 	lw	v1,30652(v1)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e430:	3c048015 	lui	a0,0x8015
8000e434:	8c847770 	lw	a0,30576(a0)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e438:	02631823 	subu	v1,s3,v1
8000e43c:	00031943 	sra	v1,v1,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e440:	00031b00 	sll	v1,v1,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e444:	00032b02 	srl	a1,v1,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e448:	3c078000 	lui	a3,0x8000
8000e44c:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e450:	00a4202b 	sltu	a0,a1,a0
8000e454:	1080004c 	beqz	a0,8000e588 <map_ph+0x3d0>
8000e458:	00673821 	addu	a3,v1,a3
map_ph():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:828

	if (start < la) {
		if (start == end) {
			goto normal_exit;
		}
		off = start + PGSIZE - la, size = PGSIZE - off;
8000e45c:	24421000 	addiu	v0,v0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:832
		if (end < la) {
			size -= la - end;
		}
		memset(page2kva(page) + off, 0, size);
8000e460:	00e22021 	addu	a0,a3,v0
8000e464:	00002821 	move	a1,zero
8000e468:	0c005c44 	jal	80017110 <memset>
8000e46c:	02a03021 	move	a2,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:834
		start += size;
		assert((end < la && start == end)
8000e470:	16800039 	bnez	s4,8000e558 <map_ph+0x3a0>
8000e474:	02358821 	addu	s1,s1,s5
8000e478:	16300039 	bne	s1,s0,8000e560 <map_ph+0x3a8>
8000e47c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:838
		       || (end >= la && start == la));
	}

	while (start < end) {
8000e480:	0232102b 	sltu	v0,s1,s2
8000e484:	1040ffaf 	beqz	v0,8000e344 <map_ph+0x18c>
8000e488:	3c148000 	lui	s4,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:843
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
			ret = -E_NO_MEM;
			goto bad_cleanup_mmap;
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
8000e48c:	241e1000 	li	s8,4096
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e490:	3c158015 	lui	s5,0x8015
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e494:	26941000 	addiu	s4,s4,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e498:	0800393f 	j	8000e4fc <map_ph+0x344>
8000e49c:	3c138015 	lui	s3,0x8015
map_ph():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:843
8000e4a0:	26101000 	addiu	s0,s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:844
		if (end < la) {
8000e4a4:	0250282b 	sltu	a1,s2,s0
8000e4a8:	10a00003 	beqz	a1,8000e4b8 <map_ph+0x300>
8000e4ac:	03c41823 	subu	v1,s8,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:845
			size -= la - end;
8000e4b0:	00701823 	subu	v1,v1,s0
8000e4b4:	00721821 	addu	v1,v1,s2
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e4b8:	8ea777bc 	lw	a3,30652(s5)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e4bc:	8e657770 	lw	a1,30576(s3)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e4c0:	00473823 	subu	a3,v0,a3
8000e4c4:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e4c8:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e4cc:	00071302 	srl	v0,a3,0xc
8000e4d0:	0045102b 	sltu	v0,v0,a1
8000e4d4:	1040002c 	beqz	v0,8000e588 <map_ph+0x3d0>
8000e4d8:	00f43821 	addu	a3,a3,s4
map_ph():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:848
		}
		memset(page2kva(page) + off, 0, size);
		start += size;
8000e4dc:	02238821 	addu	s1,s1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:847
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
		if (end < la) {
			size -= la - end;
		}
		memset(page2kva(page) + off, 0, size);
8000e4e0:	00e42021 	addu	a0,a3,a0
8000e4e4:	00002821 	move	a1,zero
8000e4e8:	0c005c44 	jal	80017110 <memset>
8000e4ec:	00603021 	move	a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:838
		start += size;
		assert((end < la && start == end)
		       || (end >= la && start == la));
	}

	while (start < end) {
8000e4f0:	0232102b 	sltu	v0,s1,s2
8000e4f4:	1040ff94 	beqz	v0,8000e348 <map_ph+0x190>
8000e4f8:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:839
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
8000e4fc:	8ee40010 	lw	a0,16(s7)
8000e500:	02002821 	move	a1,s0
8000e504:	0c005e3f 	jal	800178fc <pgdir_alloc_page>
8000e508:	02c03021 	move	a2,s6
8000e50c:	1440ffe4 	bnez	v0,8000e4a0 <map_ph+0x2e8>
8000e510:	02302023 	subu	a0,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:840
			ret = -E_NO_MEM;
8000e514:	2403fff4 	li	v1,-12
8000e518:	080038d1 	j	8000e344 <map_ph+0x18c>
8000e51c:	afa3001c 	sw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:854
	}
normal_exit:
	return 0;
bad_cleanup_mmap:
	return ret;
}
8000e520:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:814
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
		if (end < la) {
			size -= la - end;
		}
		if ((ret =
8000e524:	afa2001c 	sw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:854
	}
normal_exit:
	return 0;
bad_cleanup_mmap:
	return ret;
}
8000e528:	8fa2001c 	lw	v0,28(sp)
8000e52c:	8fbe0048 	lw	s8,72(sp)
8000e530:	8fb70044 	lw	s7,68(sp)
8000e534:	8fb60040 	lw	s6,64(sp)
8000e538:	8fb5003c 	lw	s5,60(sp)
8000e53c:	8fb40038 	lw	s4,56(sp)
8000e540:	8fb30034 	lw	s3,52(sp)
8000e544:	8fb20030 	lw	s2,48(sp)
8000e548:	8fb1002c 	lw	s1,44(sp)
8000e54c:	8fb00028 	lw	s0,40(sp)
8000e550:	03e00008 	jr	ra
8000e554:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:834
		if (end < la) {
			size -= la - end;
		}
		memset(page2kva(page) + off, 0, size);
		start += size;
		assert((end < la && start == end)
8000e558:	1232ff7a 	beq	s1,s2,8000e344 <map_ph+0x18c>
8000e55c:	3c048002 	lui	a0,0x8002
8000e560:	3c068002 	lui	a2,0x8002
8000e564:	3c078002 	lui	a3,0x8002
8000e568:	24842610 	addiu	a0,a0,9744
8000e56c:	24050343 	li	a1,835
8000e570:	24c609b0 	addiu	a2,a2,2480
8000e574:	0c006afd 	jal	8001abf4 <__panic>
8000e578:	24e72618 	addiu	a3,a3,9752
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:830
		if (start == end) {
			goto normal_exit;
		}
		off = start + PGSIZE - la, size = PGSIZE - off;
		if (end < la) {
			size -= la - end;
8000e57c:	0250a823 	subu	s5,s2,s0
8000e580:	0800390a 	j	8000e428 <map_ph+0x270>
8000e584:	02a2a823 	subu	s5,s5,v0
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
8000e588:	3c048002 	lui	a0,0x8002
8000e58c:	3c068002 	lui	a2,0x8002
8000e590:	24842564 	addiu	a0,a0,9572
8000e594:	2405006a 	li	a1,106
8000e598:	0c006afd 	jal	8001abf4 <__panic>
8000e59c:	24c625ec 	addiu	a2,a2,9708

8000e5a0 <setup_pgdir>:
setup_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:248

// setup_pgdir - alloc one page as PDT
// XXX, PDT size != PGSIZE!!!
#ifndef ARCH_ARM
static int setup_pgdir(struct mm_struct *mm)
{
8000e5a0:	27bdffe0 	addiu	sp,sp,-32
8000e5a4:	afb10018 	sw	s1,24(sp)
8000e5a8:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:250
	struct Page *page;
	if ((page = alloc_page()) == NULL) {
8000e5ac:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:248

// setup_pgdir - alloc one page as PDT
// XXX, PDT size != PGSIZE!!!
#ifndef ARCH_ARM
static int setup_pgdir(struct mm_struct *mm)
{
8000e5b0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:250
	struct Page *page;
	if ((page = alloc_page()) == NULL) {
8000e5b4:	0c0073df 	jal	8001cf7c <alloc_pages>
8000e5b8:	afb00014 	sw	s0,20(sp)
8000e5bc:	1040001b 	beqz	v0,8000e62c <setup_pgdir+0x8c>
8000e5c0:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e5c4:	8c7077bc 	lw	s0,30652(v1)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e5c8:	3c038015 	lui	v1,0x8015
8000e5cc:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e5d0:	00501023 	subu	v0,v0,s0
8000e5d4:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e5d8:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e5dc:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e5e0:	3c108000 	lui	s0,0x8000
8000e5e4:	26101000 	addiu	s0,s0,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e5e8:	0083182b 	sltu	v1,a0,v1
8000e5ec:	10600011 	beqz	v1,8000e634 <setup_pgdir+0x94>
8000e5f0:	00508021 	addu	s0,v0,s0
setup_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:254
		return -E_NO_MEM;
	}
	pgd_t *pgdir = page2kva(page);
	memcpy(pgdir, init_pgdir_get(), PGSIZE);
8000e5f4:	3c028015 	lui	v0,0x8015
8000e5f8:	8c45776c 	lw	a1,30572(v0)
8000e5fc:	24061000 	li	a2,4096
8000e600:	0c005c6e 	jal	800171b8 <memcpy>
8000e604:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:255
	map_pgdir(pgdir);
8000e608:	0c0077da 	jal	8001df68 <map_pgdir>
8000e60c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:256
	mm->pgdir = pgdir;
8000e610:	ae300010 	sw	s0,16(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:257
	return 0;
8000e614:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:258
}
8000e618:	8fbf001c 	lw	ra,28(sp)
8000e61c:	8fb10018 	lw	s1,24(sp)
8000e620:	8fb00014 	lw	s0,20(sp)
8000e624:	03e00008 	jr	ra
8000e628:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:251
#ifndef ARCH_ARM
static int setup_pgdir(struct mm_struct *mm)
{
	struct Page *page;
	if ((page = alloc_page()) == NULL) {
		return -E_NO_MEM;
8000e62c:	08003986 	j	8000e618 <setup_pgdir+0x78>
8000e630:	2402fff4 	li	v0,-12
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
8000e634:	3c048002 	lui	a0,0x8002
8000e638:	3c068002 	lui	a2,0x8002
8000e63c:	24842564 	addiu	a0,a0,9572
8000e640:	2405006a 	li	a1,106
8000e644:	24c625ec 	addiu	a2,a2,9708
8000e648:	0c006afd 	jal	8001abf4 <__panic>
8000e64c:	02003821 	move	a3,s0

8000e650 <put_sighand>:
put_sighand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:498
bad_sighand:
	return ret;
}

static void put_sighand(struct proc_struct *proc)
{
8000e650:	27bdffe0 	addiu	sp,sp,-32
8000e654:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:499
	struct sighand_struct *sh = proc->signal_info.sighand;
8000e658:	8c9100c4 	lw	s1,196(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:498
bad_sighand:
	return ret;
}

static void put_sighand(struct proc_struct *proc)
{
8000e65c:	afb00014 	sw	s0,20(sp)
8000e660:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:500
	struct sighand_struct *sh = proc->signal_info.sighand;
	if (sh != NULL) {
8000e664:	1220000d 	beqz	s1,8000e69c <put_sighand+0x4c>
8000e668:	00808021 	move	s0,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e66c:	40026000 	mfc0	v0,c0_status
8000e670:	30420001 	andi	v0,v0,0x1
8000e674:	1440000f 	bnez	v0,8000e6b4 <put_sighand+0x64>
8000e678:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e67c:	8e220000 	lw	v0,0(s1)
8000e680:	2442ffff 	addiu	v0,v0,-1
8000e684:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e688:	8e220000 	lw	v0,0(s1)
put_sighand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:501
		if (sighand_count_dec(sh) == 0) {
8000e68c:	14400004 	bnez	v0,8000e6a0 <put_sighand+0x50>
8000e690:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:502
			sighand_destroy(sh);
8000e694:	0c00457e 	jal	800115f8 <sighand_destroy>
8000e698:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:506
		}
	}
	proc->signal_info.sighand = NULL;
}
8000e69c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:505
	if (sh != NULL) {
		if (sighand_count_dec(sh) == 0) {
			sighand_destroy(sh);
		}
	}
	proc->signal_info.sighand = NULL;
8000e6a0:	ae0000c4 	sw	zero,196(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:506
}
8000e6a4:	8fb10018 	lw	s1,24(sp)
8000e6a8:	8fb00014 	lw	s0,20(sp)
8000e6ac:	03e00008 	jr	ra
8000e6b0:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e6b4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000e6b8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e6bc:	8e220000 	lw	v0,0(s1)
8000e6c0:	2442ffff 	addiu	v0,v0,-1
8000e6c4:	ae220000 	sw	v0,0(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e6c8:	0c006cba 	jal	8001b2e8 <intr_enable>
8000e6cc:	00000000 	nop
8000e6d0:	080039a2 	j	8000e688 <put_sighand+0x38>
8000e6d4:	00000000 	nop

8000e6d8 <put_sem_queue>:
put_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:419
bad_sem_queue:
	return ret;
}

static void put_sem_queue(struct proc_struct *proc)
{
8000e6d8:	27bdffe8 	addiu	sp,sp,-24
8000e6dc:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:420
	sem_queue_t *sem_queue = proc->sem_queue;
8000e6e0:	8c9000ac 	lw	s0,172(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:421
	if (sem_queue != NULL) {
8000e6e4:	12000012 	beqz	s0,8000e730 <put_sem_queue+0x58>
8000e6e8:	afbf0014 	sw	ra,20(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e6ec:	40026000 	mfc0	v0,c0_status
8000e6f0:	30420001 	andi	v0,v0,0x1
8000e6f4:	14400012 	bnez	v0,8000e740 <put_sem_queue+0x68>
8000e6f8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000e6fc:	8e020014 	lw	v0,20(s0)
8000e700:	2442ffff 	addiu	v0,v0,-1
8000e704:	ae020014 	sw	v0,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e708:	8e020014 	lw	v0,20(s0)
put_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:422
		if (sem_queue_count_dec(sem_queue) == 0) {
8000e70c:	14400009 	bnez	v0,8000e734 <put_sem_queue+0x5c>
8000e710:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:423
			exit_sem_queue(sem_queue);
8000e714:	0c0067fa 	jal	80019fe8 <exit_sem_queue>
8000e718:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:424
			sem_queue_destroy(sem_queue);
8000e71c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:427
		}
	}
}
8000e720:	8fbf0014 	lw	ra,20(sp)
8000e724:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:424
{
	sem_queue_t *sem_queue = proc->sem_queue;
	if (sem_queue != NULL) {
		if (sem_queue_count_dec(sem_queue) == 0) {
			exit_sem_queue(sem_queue);
			sem_queue_destroy(sem_queue);
8000e728:	0800674b 	j	80019d2c <sem_queue_destroy>
8000e72c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:427
		}
	}
}
8000e730:	8fbf0014 	lw	ra,20(sp)
8000e734:	8fb00010 	lw	s0,16(sp)
8000e738:	03e00008 	jr	ra
8000e73c:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e740:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000e744:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e748:	8e020014 	lw	v0,20(s0)
8000e74c:	2442ffff 	addiu	v0,v0,-1
8000e750:	ae020014 	sw	v0,20(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e754:	0c006cba 	jal	8001b2e8 <intr_enable>
8000e758:	00000000 	nop
8000e75c:	080039c2 	j	8000e708 <put_sem_queue+0x30>
8000e760:	00000000 	nop

8000e764 <put_signal>:
put_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:460
}

// copy_thread - setup the trapframe on the  process's kernel stack top and
//             - setup the kernel entry point and stack of process
static void put_signal(struct proc_struct *proc)
{
8000e764:	27bdffe0 	addiu	sp,sp,-32
8000e768:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:461
	struct signal_struct *sig = proc->signal_info.signal;
8000e76c:	8c9100c0 	lw	s1,192(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:460
}

// copy_thread - setup the trapframe on the  process's kernel stack top and
//             - setup the kernel entry point and stack of process
static void put_signal(struct proc_struct *proc)
{
8000e770:	afb00014 	sw	s0,20(sp)
8000e774:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:462
	struct signal_struct *sig = proc->signal_info.signal;
	if (sig != NULL) {
8000e778:	1220000d 	beqz	s1,8000e7b0 <put_signal+0x4c>
8000e77c:	00808021 	move	s0,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e780:	40026000 	mfc0	v0,c0_status
8000e784:	30420001 	andi	v0,v0,0x1
8000e788:	1440000f 	bnez	v0,8000e7c8 <put_signal+0x64>
8000e78c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000e790:	8e220000 	lw	v0,0(s1)
8000e794:	2442ffff 	addiu	v0,v0,-1
8000e798:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e79c:	8e220000 	lw	v0,0(s1)
put_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:463
		if (signal_count_dec(sig) == 0) {
8000e7a0:	14400004 	bnez	v0,8000e7b4 <put_signal+0x50>
8000e7a4:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:464
			signal_destroy(sig);
8000e7a8:	0c004550 	jal	80011540 <signal_destroy>
8000e7ac:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:468
		}
	}
	proc->signal_info.signal = NULL;
}
8000e7b0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:467
	if (sig != NULL) {
		if (signal_count_dec(sig) == 0) {
			signal_destroy(sig);
		}
	}
	proc->signal_info.signal = NULL;
8000e7b4:	ae0000c0 	sw	zero,192(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:468
}
8000e7b8:	8fb10018 	lw	s1,24(sp)
8000e7bc:	8fb00014 	lw	s0,20(sp)
8000e7c0:	03e00008 	jr	ra
8000e7c4:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e7c8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000e7cc:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e7d0:	8e220000 	lw	v0,0(s1)
8000e7d4:	2442ffff 	addiu	v0,v0,-1
8000e7d8:	ae220000 	sw	v0,0(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e7dc:	0c006cba 	jal	8001b2e8 <intr_enable>
8000e7e0:	00000000 	nop
8000e7e4:	080039e7 	j	8000e79c <put_signal+0x38>
8000e7e8:	00000000 	nop

8000e7ec <put_fs>:
put_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:539
bad_fs_struct:
	return ret;
}

static void put_fs(struct proc_struct *proc)
{
8000e7ec:	27bdffe8 	addiu	sp,sp,-24
8000e7f0:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:540
	struct fs_struct *fs_struct = proc->fs_struct;
8000e7f4:	8c9000bc 	lw	s0,188(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:541
	if (fs_struct != NULL) {
8000e7f8:	1200000f 	beqz	s0,8000e838 <put_fs+0x4c>
8000e7fc:	afbf0014 	sw	ra,20(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e800:	40026000 	mfc0	v0,c0_status
8000e804:	30420001 	andi	v0,v0,0x1
8000e808:	1440000f 	bnez	v0,8000e848 <put_fs+0x5c>
8000e80c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000e810:	8e020008 	lw	v0,8(s0)
8000e814:	2442ffff 	addiu	v0,v0,-1
8000e818:	ae020008 	sw	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e81c:	8e020008 	lw	v0,8(s0)
put_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:542
		if (fs_count_dec(fs_struct) == 0) {
8000e820:	14400006 	bnez	v0,8000e83c <put_fs+0x50>
8000e824:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:543
			fs_destroy(fs_struct);
8000e828:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:546
		}
	}
}
8000e82c:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:543
static void put_fs(struct proc_struct *proc)
{
	struct fs_struct *fs_struct = proc->fs_struct;
	if (fs_struct != NULL) {
		if (fs_count_dec(fs_struct) == 0) {
			fs_destroy(fs_struct);
8000e830:	0800328a 	j	8000ca28 <fs_destroy>
8000e834:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:546
		}
	}
}
8000e838:	8fbf0014 	lw	ra,20(sp)
8000e83c:	8fb00010 	lw	s0,16(sp)
8000e840:	03e00008 	jr	ra
8000e844:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e848:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000e84c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e850:	8e020008 	lw	v0,8(s0)
8000e854:	2442ffff 	addiu	v0,v0,-1
8000e858:	ae020008 	sw	v0,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e85c:	0c006cba 	jal	8001b2e8 <intr_enable>
8000e860:	00000000 	nop
8000e864:	08003a07 	j	8000e81c <put_fs+0x30>
8000e868:	00000000 	nop

8000e86c <__do_exit>:
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:650
// __do_exit - cause a thread exit (use do_exit, do_exit_thread instead)
//   1. call exit_mmap & put_pgdir & mm_destroy to free the almost all memory space of process
//   2. set process' state as PROC_ZOMBIE, then call wakeup_proc(parent) to ask parent reclaim itself.
//   3. call scheduler to switch to other process
static int __do_exit(void)
{
8000e86c:	27bdffc0 	addiu	sp,sp,-64
8000e870:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:651
	if (current == idleproc) {
8000e874:	3c038015 	lui	v1,0x8015
8000e878:	3c108015 	lui	s0,0x8015
8000e87c:	8e0277a4 	lw	v0,30628(s0)
8000e880:	8c6377a8 	lw	v1,30632(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:650
// __do_exit - cause a thread exit (use do_exit, do_exit_thread instead)
//   1. call exit_mmap & put_pgdir & mm_destroy to free the almost all memory space of process
//   2. set process' state as PROC_ZOMBIE, then call wakeup_proc(parent) to ask parent reclaim itself.
//   3. call scheduler to switch to other process
static int __do_exit(void)
{
8000e884:	afbf003c 	sw	ra,60(sp)
8000e888:	afb50038 	sw	s5,56(sp)
8000e88c:	afb40034 	sw	s4,52(sp)
8000e890:	afb30030 	sw	s3,48(sp)
8000e894:	afb2002c 	sw	s2,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:651
	if (current == idleproc) {
8000e898:	1043008b 	beq	v0,v1,8000eac8 <__do_exit+0x25c>
8000e89c:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:654
		panic("idleproc exit.\n\r");
	}
	if (current == initproc) {
8000e8a0:	3c128015 	lui	s2,0x8015
8000e8a4:	8e437798 	lw	v1,30616(s2)
8000e8a8:	1043008d 	beq	v0,v1,8000eae0 <__do_exit+0x274>
8000e8ac:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:658
		panic("initproc exit.\n\r");
	}

	struct mm_struct *mm = current->mm;
8000e8b0:	8c510020 	lw	s1,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:659
	if (mm != NULL) {
8000e8b4:	1220000f 	beqz	s1,8000e8f4 <__do_exit+0x88>
8000e8b8:	2402ffff 	li	v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:661
		mm->lapic = -1;
		mp_set_mm_pagetable(NULL);
8000e8bc:	00002021 	move	a0,zero
8000e8c0:	0c007b59 	jal	8001ed64 <mp_set_mm_pagetable>
8000e8c4:	ae220048 	sw	v0,72(s1)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:154
 * Requires Modern 486+ processor
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
8000e8c8:	0c003781 	jal	8000de04 <__intr_save>
8000e8cc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
	v->counter += i;
8000e8d0:	8e23001c 	lw	v1,28(s1)
8000e8d4:	2463ffff 	addiu	v1,v1,-1
8000e8d8:	ae23001c 	sw	v1,28(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000e8dc:	14400065 	bnez	v0,8000ea74 <__do_exit+0x208>
8000e8e0:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e8e4:	8e22001c 	lw	v0,28(s1)
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:662
		if (mm_count_dec(mm) == 0) {
8000e8e8:	10400066 	beqz	v0,8000ea84 <__do_exit+0x218>
8000e8ec:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:673
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
		}
		current->mm = NULL;
8000e8f0:	ac400020 	sw	zero,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:675
	}
	put_sighand(current);
8000e8f4:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:687
	struct proc_struct *proc, *parent;
	local_intr_save(intr_flag);
	{
		proc = parent = current->parent;
		do {
			if (proc->wait_state == WT_CHILD) {
8000e8f8:	3c158000 	lui	s5,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:675
			local_intr_restore(intr_flag);
			mm_destroy(mm);
		}
		current->mm = NULL;
	}
	put_sighand(current);
8000e8fc:	0c003994 	jal	8000e650 <put_sighand>
8000e900:	26b50001 	addiu	s5,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:676
	put_signal(current);
8000e904:	0c0039d9 	jal	8000e764 <put_signal>
8000e908:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:677
	put_fs(current);
8000e90c:	0c0039fb 	jal	8000e7ec <put_fs>
8000e910:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:678
	put_sem_queue(current);
8000e914:	0c0039b6 	jal	8000e6d8 <put_sem_queue>
8000e918:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:679
	current->state = PROC_ZOMBIE;
8000e91c:	8e0277a4 	lw	v0,30628(s0)
8000e920:	24030003 	li	v1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:683

	bool intr_flag;
	struct proc_struct *proc, *parent;
	local_intr_save(intr_flag);
8000e924:	0c003781 	jal	8000de04 <__intr_save>
8000e928:	ac430000 	sw	v1,0(v0)
8000e92c:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:685
	{
		proc = parent = current->parent;
8000e930:	8e0277a4 	lw	v0,30628(s0)
8000e934:	8c54001c 	lw	s4,28(v0)
8000e938:	02809821 	move	s3,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:687
		do {
			if (proc->wait_state == WT_CHILD) {
8000e93c:	8e620084 	lw	v0,132(s3)
8000e940:	10550044 	beq	v0,s5,8000ea54 <__do_exit+0x1e8>
8000e944:	00000000 	nop
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8000e948:	8e730098 	lw	s3,152(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:690
				wakeup_proc(proc);
			}
			proc = next_thread(proc);
8000e94c:	2673ff6c 	addiu	s3,s3,-148
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:691
		} while (proc != parent);
8000e950:	5674fffb 	bnel	s3,s4,8000e940 <__do_exit+0xd4>
8000e954:	8e620084 	lw	v0,132(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:693

		if ((parent = next_thread(current)) == current) {
8000e958:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:694
			parent = initproc;
8000e95c:	8e437798 	lw	v1,30616(s2)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8000e960:	8c820098 	lw	v0,152(a0)
de_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:296
#endif

// de_thread - delete this thread "proc" from thread_group list
static void de_thread(struct proc_struct *proc)
{
	if (!list_empty(&(proc->thread_group))) {
8000e964:	24930094 	addiu	s3,a0,148
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:693
				wakeup_proc(proc);
			}
			proc = next_thread(proc);
		} while (proc != parent);

		if ((parent = next_thread(current)) == current) {
8000e968:	2452ff6c 	addiu	s2,v0,-148
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:694
			parent = initproc;
8000e96c:	00922826 	xor	a1,a0,s2
de_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:296
#endif

// de_thread - delete this thread "proc" from thread_group list
static void de_thread(struct proc_struct *proc)
{
	if (!list_empty(&(proc->thread_group))) {
8000e970:	1053000b 	beq	v0,s3,8000e9a0 <__do_exit+0x134>
8000e974:	0065900a 	movz	s2,v1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:298
		bool intr_flag;
		local_intr_save(intr_flag);
8000e978:	0c003781 	jal	8000de04 <__intr_save>
8000e97c:	afa40018 	sw	a0,24(sp)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000e980:	8fa40018 	lw	a0,24(sp)
8000e984:	8c850094 	lw	a1,148(a0)
8000e988:	8c830098 	lw	v1,152(a0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000e98c:	aca30004 	sw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8000e990:	ac650000 	sw	a1,0(v1)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8000e994:	ac930098 	sw	s3,152(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
8000e998:	14400032 	bnez	v0,8000ea64 <__do_exit+0x1f8>
8000e99c:	ac930094 	sw	s3,148(a0)
de_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:305
			list_del_init(&(proc->thread_group));
		}
		local_intr_restore(intr_flag);
	}

	de_thread_arch_hook(proc);
8000e9a0:	0c007923 	jal	8001e48c <de_thread_arch_hook>
8000e9a4:	3c148000 	lui	s4,0x8000
8000e9a8:	8e0477a4 	lw	a0,30628(s0)
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:707
			if ((proc->optr = parent->cptr) != NULL) {
				parent->cptr->yptr = proc;
			}
			proc->parent = parent;
			parent->cptr = proc;
			if (proc->state == PROC_ZOMBIE) {
8000e9ac:	24130003 	li	s3,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:708
				if (parent->wait_state == WT_CHILD) {
8000e9b0:	26940001 	addiu	s4,s4,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:697

		if ((parent = next_thread(current)) == current) {
			parent = initproc;
		}
		de_thread(current);
		while (current->cptr != NULL) {
8000e9b4:	8c820088 	lw	v0,136(a0)
8000e9b8:	50400013 	beqzl	v0,8000ea08 <__do_exit+0x19c>
8000e9bc:	248400b4 	addiu	a0,a0,180
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:699
			proc = current->cptr;
			current->cptr = proc->optr;
8000e9c0:	8c430090 	lw	v1,144(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:701

			proc->yptr = NULL;
8000e9c4:	ac40008c 	sw	zero,140(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:699
			parent = initproc;
		}
		de_thread(current);
		while (current->cptr != NULL) {
			proc = current->cptr;
			current->cptr = proc->optr;
8000e9c8:	ac830088 	sw	v1,136(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:702

			proc->yptr = NULL;
			if ((proc->optr = parent->cptr) != NULL) {
8000e9cc:	8e430088 	lw	v1,136(s2)
8000e9d0:	10600002 	beqz	v1,8000e9dc <__do_exit+0x170>
8000e9d4:	ac430090 	sw	v1,144(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:703
				parent->cptr->yptr = proc;
8000e9d8:	ac62008c 	sw	v0,140(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:707
			}
			proc->parent = parent;
			parent->cptr = proc;
			if (proc->state == PROC_ZOMBIE) {
8000e9dc:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:705

			proc->yptr = NULL;
			if ((proc->optr = parent->cptr) != NULL) {
				parent->cptr->yptr = proc;
			}
			proc->parent = parent;
8000e9e0:	ac52001c 	sw	s2,28(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:707
			parent->cptr = proc;
			if (proc->state == PROC_ZOMBIE) {
8000e9e4:	1473fff3 	bne	v1,s3,8000e9b4 <__do_exit+0x148>
8000e9e8:	ae420088 	sw	v0,136(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:708
				if (parent->wait_state == WT_CHILD) {
8000e9ec:	8e420084 	lw	v0,132(s2)
8000e9f0:	5454fff1 	bnel	v0,s4,8000e9b8 <__do_exit+0x14c>
8000e9f4:	8c820088 	lw	v0,136(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:709
					wakeup_proc(parent);
8000e9f8:	0c0004f7 	jal	800013dc <wakeup_proc>
8000e9fc:	02402021 	move	a0,s2
8000ea00:	08003a6d 	j	8000e9b4 <__do_exit+0x148>
8000ea04:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:715
				}
			}
		}
	}

	wakeup_queue(&(current->event_box.wait_queue), WT_INTERRUPTED, 1);
8000ea08:	3c058000 	lui	a1,0x8000
8000ea0c:	0c0069c6 	jal	8001a718 <wakeup_queue>
8000ea10:	24060001 	li	a2,1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
8000ea14:	12200003 	beqz	s1,8000ea24 <__do_exit+0x1b8>
8000ea18:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000ea1c:	0c006cba 	jal	8001b2e8 <intr_enable>
8000ea20:	00000000 	nop
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:719

	local_intr_restore(intr_flag);

	schedule();
8000ea24:	0c00059e 	jal	80001678 <schedule>
8000ea28:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:720
	panic("__do_exit will not return!! %d %d.\n\r", current->pid,
8000ea2c:	8e0277a4 	lw	v0,30628(s0)
8000ea30:	3c048002 	lui	a0,0x8002
8000ea34:	3c068002 	lui	a2,0x8002
8000ea38:	8c470004 	lw	a3,4(v0)
8000ea3c:	8c420080 	lw	v0,128(v0)
8000ea40:	24842610 	addiu	a0,a0,9744
8000ea44:	240502d1 	li	a1,721
8000ea48:	24c6267c 	addiu	a2,a2,9852
8000ea4c:	0c006afd 	jal	8001abf4 <__panic>
8000ea50:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:688
	local_intr_save(intr_flag);
	{
		proc = parent = current->parent;
		do {
			if (proc->wait_state == WT_CHILD) {
				wakeup_proc(proc);
8000ea54:	0c0004f7 	jal	800013dc <wakeup_proc>
8000ea58:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000ea5c:	08003a53 	j	8000e94c <__do_exit+0xe0>
8000ea60:	8e730098 	lw	s3,152(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
8000ea64:	0c006cba 	jal	8001b2e8 <intr_enable>
8000ea68:	00000000 	nop
8000ea6c:	08003a68 	j	8000e9a0 <__do_exit+0x134>
8000ea70:	8fa40018 	lw	a0,24(sp)
8000ea74:	0c006cba 	jal	8001b2e8 <intr_enable>
8000ea78:	00000000 	nop
8000ea7c:	08003a39 	j	8000e8e4 <__do_exit+0x78>
8000ea80:	00000000 	nop
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:663
	struct mm_struct *mm = current->mm;
	if (mm != NULL) {
		mm->lapic = -1;
		mp_set_mm_pagetable(NULL);
		if (mm_count_dec(mm) == 0) {
			exit_mmap(mm);
8000ea84:	0c004fe2 	jal	80013f88 <exit_mmap>
8000ea88:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:664
			put_pgdir(mm);
8000ea8c:	0c0037c8 	jal	8000df20 <put_pgdir>
8000ea90:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:666
			bool intr_flag;
			local_intr_save(intr_flag);
8000ea94:	0c003781 	jal	8000de04 <__intr_save>
8000ea98:	00000000 	nop
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000ea9c:	8e24002c 	lw	a0,44(s1)
8000eaa0:	8e230030 	lw	v1,48(s1)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000eaa4:	ac830004 	sw	v1,4(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000eaa8:	10400003 	beqz	v0,8000eab8 <__do_exit+0x24c>
8000eaac:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000eab0:	0c006cba 	jal	8001b2e8 <intr_enable>
8000eab4:	00000000 	nop
__do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:671
			{
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
8000eab8:	0c004d53 	jal	8001354c <mm_destroy>
8000eabc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:673
		}
		current->mm = NULL;
8000eac0:	08003a3c 	j	8000e8f0 <__do_exit+0x84>
8000eac4:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:652
//   2. set process' state as PROC_ZOMBIE, then call wakeup_proc(parent) to ask parent reclaim itself.
//   3. call scheduler to switch to other process
static int __do_exit(void)
{
	if (current == idleproc) {
		panic("idleproc exit.\n\r");
8000eac8:	3c048002 	lui	a0,0x8002
8000eacc:	3c068002 	lui	a2,0x8002
8000ead0:	24842610 	addiu	a0,a0,9744
8000ead4:	2405028c 	li	a1,652
8000ead8:	0c006afd 	jal	8001abf4 <__panic>
8000eadc:	24c62654 	addiu	a2,a2,9812
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:655
	}
	if (current == initproc) {
		panic("initproc exit.\n\r");
8000eae0:	3c068002 	lui	a2,0x8002
8000eae4:	24842610 	addiu	a0,a0,9744
8000eae8:	2405028f 	li	a1,655
8000eaec:	0c006afd 	jal	8001abf4 <__panic>
8000eaf0:	24c62668 	addiu	a2,a2,9832

8000eaf4 <put_kstack>:
put_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:241
}

// put_kstack - free the memory space of process kernel stack
static void put_kstack(struct proc_struct *proc)
{
	free_pages(kva2page((void *)(proc->kstack)), KSTACKPAGE);
8000eaf4:	8c870014 	lw	a3,20(a0)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000eaf8:	3c028000 	lui	v0,0x8000
8000eafc:	24421000 	addiu	v0,v0,4096
put_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:240
	return -E_NO_MEM;
}

// put_kstack - free the memory space of process kernel stack
static void put_kstack(struct proc_struct *proc)
{
8000eb00:	27bdffe8 	addiu	sp,sp,-24
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
8000eb04:	00e2102b 	sltu	v0,a3,v0
8000eb08:	14400011 	bnez	v0,8000eb50 <put_kstack+0x5c>
8000eb0c:	afbf0014 	sw	ra,20(sp)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8000eb10:	3c028015 	lui	v0,0x8015
8000eb14:	3c037fff 	lui	v1,0x7fff
8000eb18:	8c427770 	lw	v0,30576(v0)
8000eb1c:	3463f000 	ori	v1,v1,0xf000
8000eb20:	00e33821 	addu	a3,a3,v1
8000eb24:	00073b02 	srl	a3,a3,0xc
8000eb28:	00e2102b 	sltu	v0,a3,v0
8000eb2c:	1040000e 	beqz	v0,8000eb68 <put_kstack+0x74>
8000eb30:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8000eb34:	8c4477bc 	lw	a0,30652(v0)
put_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:242
	free_pages(kva2page((void *)(proc->kstack)), KSTACKPAGE);
}
8000eb38:	8fbf0014 	lw	ra,20(sp)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
8000eb3c:	00073940 	sll	a3,a3,0x5
put_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:241
}

// put_kstack - free the memory space of process kernel stack
static void put_kstack(struct proc_struct *proc)
{
	free_pages(kva2page((void *)(proc->kstack)), KSTACKPAGE);
8000eb40:	24050002 	li	a1,2
8000eb44:	00872021 	addu	a0,a0,a3
8000eb48:	080073fb 	j	8001cfec <free_pages>
8000eb4c:	27bd0018 	addiu	sp,sp,24
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000eb50:	3c048002 	lui	a0,0x8002
8000eb54:	3c068002 	lui	a2,0x8002
8000eb58:	24842564 	addiu	a0,a0,9572
8000eb5c:	2405006f 	li	a1,111
8000eb60:	0c006afd 	jal	8001abf4 <__panic>
8000eb64:	24c625a8 	addiu	a2,a2,9640
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8000eb68:	3c048002 	lui	a0,0x8002
8000eb6c:	3c068002 	lui	a2,0x8002
8000eb70:	24842564 	addiu	a0,a0,9572
8000eb74:	24050063 	li	a1,99
8000eb78:	0c006afd 	jal	8001abf4 <__panic>
8000eb7c:	24c625cc 	addiu	a2,a2,9676

8000eb80 <set_proc_name>:
set_proc_name():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000eb80:	27bdffe0 	addiu	sp,sp,-32
8000eb84:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000eb88:	24900060 	addiu	s0,a0,96
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000eb8c:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000eb90:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000eb94:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000eb98:	24060010 	li	a2,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000eb9c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000eba0:	0c005c44 	jal	80017110 <memset>
8000eba4:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:103
	return memcpy(proc->name, name, PROC_NAME_LEN);
8000eba8:	02002021 	move	a0,s0
8000ebac:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:104
}
8000ebb0:	8fbf001c 	lw	ra,28(sp)
8000ebb4:	8fb10018 	lw	s1,24(sp)
8000ebb8:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:103

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
	memset(proc->name, 0, sizeof(proc->name));
	return memcpy(proc->name, name, PROC_NAME_LEN);
8000ebbc:	2406000f 	li	a2,15
8000ebc0:	08005c6e 	j	800171b8 <memcpy>
8000ebc4:	27bd0020 	addiu	sp,sp,32

8000ebc8 <get_proc_name>:
get_proc_name():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:108
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ebc8:	27bdffe0 	addiu	sp,sp,-32
8000ebcc:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ebd0:	3c108015 	lui	s0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:108
	return memcpy(proc->name, name, PROC_NAME_LEN);
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ebd4:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ebd8:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:108
	return memcpy(proc->name, name, PROC_NAME_LEN);
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ebdc:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ebe0:	24060010 	li	a2,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:108
	return memcpy(proc->name, name, PROC_NAME_LEN);
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ebe4:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ebe8:	0c005c44 	jal	80017110 <memset>
8000ebec:	26044538 	addiu	a0,s0,17720
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:111
	return memcpy(name, proc->name, PROC_NAME_LEN);
8000ebf0:	26044538 	addiu	a0,s0,17720
8000ebf4:	26250060 	addiu	a1,s1,96
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:112
}
8000ebf8:	8fbf001c 	lw	ra,28(sp)
8000ebfc:	8fb10018 	lw	s1,24(sp)
8000ec00:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:111
// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
	return memcpy(name, proc->name, PROC_NAME_LEN);
8000ec04:	2406000f 	li	a2,15
8000ec08:	08005c6e 	j	800171b8 <memcpy>
8000ec0c:	27bd0020 	addiu	sp,sp,32

8000ec10 <proc_run>:
proc_run():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:179
}

// proc_run - make process "proc" running on cpu
// NOTE: before call switch_to, should load  base addr of "proc"'s new PDT
void proc_run(struct proc_struct *proc)
{
8000ec10:	27bdffe0 	addiu	sp,sp,-32
8000ec14:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:180
	if (proc != current) {
8000ec18:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:179
}

// proc_run - make process "proc" running on cpu
// NOTE: before call switch_to, should load  base addr of "proc"'s new PDT
void proc_run(struct proc_struct *proc)
{
8000ec1c:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:180
	if (proc != current) {
8000ec20:	8e5177a4 	lw	s1,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:179
}

// proc_run - make process "proc" running on cpu
// NOTE: before call switch_to, should load  base addr of "proc"'s new PDT
void proc_run(struct proc_struct *proc)
{
8000ec24:	afb00010 	sw	s0,16(sp)
8000ec28:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:180
	if (proc != current) {
8000ec2c:	10910013 	beq	a0,s1,8000ec7c <proc_run+0x6c>
8000ec30:	00808021 	move	s0,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000ec34:	40026000 	mfc0	v0,c0_status
8000ec38:	30420001 	andi	v0,v0,0x1
8000ec3c:	14400015 	bnez	v0,8000ec94 <proc_run+0x84>
8000ec40:	00000000 	nop
proc_run():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:187
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n\r", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
			load_rsp0(next->kstack + KSTACKSIZE);
8000ec44:	8c840014 	lw	a0,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:186
		bool intr_flag;
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n\r", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
8000ec48:	ae5077a4 	sw	s0,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:187
			load_rsp0(next->kstack + KSTACKSIZE);
8000ec4c:	0c0077d8 	jal	8001df60 <load_rsp0>
8000ec50:	24842000 	addiu	a0,a0,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:188
			mp_set_mm_pagetable(next->mm);
8000ec54:	0c007b59 	jal	8001ed64 <mp_set_mm_pagetable>
8000ec58:	8e040020 	lw	a0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:194

#ifdef UCONFIG_BIONIC_LIBC
			// for tls switch
			tls_switch(next);
#endif //UCONFIG_BIONIC_LIBC
			switch_to(&(prev->context), &(next->context));
8000ec5c:	26240024 	addiu	a0,s1,36
8000ec60:	26050024 	addiu	a1,s0,36
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:198
		}
		local_intr_restore(intr_flag);
	}
}
8000ec64:	8fbf001c 	lw	ra,28(sp)
8000ec68:	8fb20018 	lw	s2,24(sp)
8000ec6c:	8fb10014 	lw	s1,20(sp)
8000ec70:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:194

#ifdef UCONFIG_BIONIC_LIBC
			// for tls switch
			tls_switch(next);
#endif //UCONFIG_BIONIC_LIBC
			switch_to(&(prev->context), &(next->context));
8000ec74:	08007e0e 	j	8001f838 <switch_to>
8000ec78:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:198
		}
		local_intr_restore(intr_flag);
	}
}
8000ec7c:	8fbf001c 	lw	ra,28(sp)
8000ec80:	8fb20018 	lw	s2,24(sp)
8000ec84:	8fb10014 	lw	s1,20(sp)
8000ec88:	8fb00010 	lw	s0,16(sp)
8000ec8c:	03e00008 	jr	ra
8000ec90:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000ec94:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000ec98:	00000000 	nop
proc_run():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:187
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n\r", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
			load_rsp0(next->kstack + KSTACKSIZE);
8000ec9c:	8e040014 	lw	a0,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:186
		bool intr_flag;
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n\r", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
8000eca0:	ae5077a4 	sw	s0,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:187
			load_rsp0(next->kstack + KSTACKSIZE);
8000eca4:	0c0077d8 	jal	8001df60 <load_rsp0>
8000eca8:	24842000 	addiu	a0,a0,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:188
			mp_set_mm_pagetable(next->mm);
8000ecac:	0c007b59 	jal	8001ed64 <mp_set_mm_pagetable>
8000ecb0:	8e040020 	lw	a0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:194

#ifdef UCONFIG_BIONIC_LIBC
			// for tls switch
			tls_switch(next);
#endif //UCONFIG_BIONIC_LIBC
			switch_to(&(prev->context), &(next->context));
8000ecb4:	26240024 	addiu	a0,s1,36
8000ecb8:	0c007e0e 	jal	8001f838 <switch_to>
8000ecbc:	26050024 	addiu	a1,s0,36
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:198
		}
		local_intr_restore(intr_flag);
	}
}
8000ecc0:	8fbf001c 	lw	ra,28(sp)
8000ecc4:	8fb20018 	lw	s2,24(sp)
8000ecc8:	8fb10014 	lw	s1,20(sp)
8000eccc:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000ecd0:	08006cba 	j	8001b2e8 <intr_enable>
8000ecd4:	27bd0020 	addiu	sp,sp,32

8000ecd8 <find_proc>:
find_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:215
}

// find_proc - find proc frome proc hash_list according to pid
struct proc_struct *find_proc(int pid)
{
	if (0 < pid && pid < MAX_PID) {
8000ecd8:	2483ffff 	addiu	v1,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:214
	list_del(&(proc->hash_link));
}

// find_proc - find proc frome proc hash_list according to pid
struct proc_struct *find_proc(int pid)
{
8000ecdc:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:215
	if (0 < pid && pid < MAX_PID) {
8000ece0:	2c631fff 	sltiu	v1,v1,8191
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:214
	list_del(&(proc->hash_link));
}

// find_proc - find proc frome proc hash_list according to pid
struct proc_struct *find_proc(int pid)
{
8000ece4:	afb00010 	sw	s0,16(sp)
8000ece8:	afbf0014 	sw	ra,20(sp)
8000ecec:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:215
	if (0 < pid && pid < MAX_PID) {
8000ecf0:	1060000e 	beqz	v1,8000ed2c <find_proc+0x54>
8000ecf4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:216
		list_entry_t *list = hash_list + pid_hashfn(pid), *le = list;
8000ecf8:	0c005945 	jal	80016514 <hash32>
8000ecfc:	2405000a 	li	a1,10
8000ed00:	3c058015 	lui	a1,0x8015
8000ed04:	000210c0 	sll	v0,v0,0x3
8000ed08:	24a54548 	addiu	a1,a1,17736
8000ed0c:	00a22821 	addu	a1,a1,v0
8000ed10:	00a01821 	move	v1,a1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000ed14:	8c630004 	lw	v1,4(v1)
find_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:217
		while ((le = list_next(le)) != list) {
8000ed18:	10a30008 	beq	a1,v1,8000ed3c <find_proc+0x64>
8000ed1c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:219
			struct proc_struct *proc = le2proc(le, hash_link);
			if (proc->pid == pid) {
8000ed20:	8c64ff8c 	lw	a0,-116(v1)
8000ed24:	1490fffb 	bne	a0,s0,8000ed14 <find_proc+0x3c>
8000ed28:	2462ff88 	addiu	v0,v1,-120
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:225
				return proc;
			}
		}
	}
	return NULL;
}
8000ed2c:	8fbf0014 	lw	ra,20(sp)
8000ed30:	8fb00010 	lw	s0,16(sp)
8000ed34:	03e00008 	jr	ra
8000ed38:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:224
			if (proc->pid == pid) {
				return proc;
			}
		}
	}
	return NULL;
8000ed3c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:225
}
8000ed40:	8fb00010 	lw	s0,16(sp)
8000ed44:	03e00008 	jr	ra
8000ed48:	27bd0018 	addiu	sp,sp,24

8000ed4c <may_killed>:
may_killed():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:552

// may_killed - check if current thread should be killed, should be called before go back to user space
void may_killed(void)
{
	// killed by other process, already set exit_code and call __do_exit directly
	if (current->flags & PF_EXITING) {
8000ed4c:	3c028015 	lui	v0,0x8015
8000ed50:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:550
	}
}

// may_killed - check if current thread should be killed, should be called before go back to user space
void may_killed(void)
{
8000ed54:	27bdffe8 	addiu	sp,sp,-24
8000ed58:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:552
	// killed by other process, already set exit_code and call __do_exit directly
	if (current->flags & PF_EXITING) {
8000ed5c:	8c42005c 	lw	v0,92(v0)
8000ed60:	30420001 	andi	v0,v0,0x1
8000ed64:	14400003 	bnez	v0,8000ed74 <may_killed+0x28>
8000ed68:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:555
		__do_exit();
	}
}
8000ed6c:	03e00008 	jr	ra
8000ed70:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:553
// may_killed - check if current thread should be killed, should be called before go back to user space
void may_killed(void)
{
	// killed by other process, already set exit_code and call __do_exit directly
	if (current->flags & PF_EXITING) {
		__do_exit();
8000ed74:	0c003a1b 	jal	8000e86c <__do_exit>
8000ed78:	00000000 	nop

8000ed7c <do_fork>:
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:563
//    1. call alloc_proc to allocate a proc_struct
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
8000ed7c:	27bdffc0 	addiu	sp,sp,-64
8000ed80:	afb30024 	sw	s3,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:566
	int ret = -E_NO_FREE_PROC;
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
8000ed84:	3c138015 	lui	s3,0x8015
8000ed88:	8e626548 	lw	v0,25928(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:563
//    1. call alloc_proc to allocate a proc_struct
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
8000ed8c:	afb60030 	sw	s6,48(sp)
8000ed90:	afb5002c 	sw	s5,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:566
	int ret = -E_NO_FREE_PROC;
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
8000ed94:	28421000 	slti	v0,v0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:563
//    1. call alloc_proc to allocate a proc_struct
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
8000ed98:	afb20020 	sw	s2,32(sp)
8000ed9c:	afbf003c 	sw	ra,60(sp)
8000eda0:	afbe0038 	sw	s8,56(sp)
8000eda4:	afb70034 	sw	s7,52(sp)
8000eda8:	afb40028 	sw	s4,40(sp)
8000edac:	afb1001c 	sw	s1,28(sp)
8000edb0:	afb00018 	sw	s0,24(sp)
8000edb4:	00809021 	move	s2,a0
8000edb8:	00a0b021 	move	s6,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:566
	int ret = -E_NO_FREE_PROC;
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
8000edbc:	10400198 	beqz	v0,8000f420 <do_fork+0x6a4>
8000edc0:	00c0a821 	move	s5,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:572
		goto fork_out;
	}

	ret = -E_NO_MEM;

	if ((proc = alloc_proc()) == NULL) {
8000edc4:	0c00788c 	jal	8001e230 <alloc_proc>
8000edc8:	00000000 	nop
8000edcc:	1040019a 	beqz	v0,8000f438 <do_fork+0x6bc>
8000edd0:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:576
		goto fork_out;
	}

	proc->parent = current;
8000edd4:	3c118015 	lui	s1,0x8015
8000edd8:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:577
	list_init(&(proc->thread_group));
8000eddc:	26140094 	addiu	s4,s0,148
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8000ede0:	ae140098 	sw	s4,152(s0)
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:578
	assert(current->wait_state == 0);
8000ede4:	8c430084 	lw	v1,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:576

	if ((proc = alloc_proc()) == NULL) {
		goto fork_out;
	}

	proc->parent = current;
8000ede8:	ae02001c 	sw	v0,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:578
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);
8000edec:	146001a4 	bnez	v1,8000f480 <do_fork+0x704>
8000edf0:	ae140094 	sw	s4,148(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:580

	assert(current->time_slice >= 0);
8000edf4:	8c4300a8 	lw	v1,168(v0)
8000edf8:	04600199 	bltz	v1,8000f460 <do_fork+0x6e4>
8000edfc:	00031843 	sra	v1,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:581
	proc->time_slice = current->time_slice / 2;
8000ee00:	ae0300a8 	sw	v1,168(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:582
	current->time_slice -= proc->time_slice;
8000ee04:	8c4500a8 	lw	a1,168(v0)
setup_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:230
}

// setup_kstack - alloc pages with size KSTACKPAGE as process kernel stack
static int setup_kstack(struct proc_struct *proc)
{
	struct Page *page = alloc_pages(KSTACKPAGE);
8000ee08:	24040002 	li	a0,2
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:582
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);

	assert(current->time_slice >= 0);
	proc->time_slice = current->time_slice / 2;
	current->time_slice -= proc->time_slice;
8000ee0c:	00a31823 	subu	v1,a1,v1
setup_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:230
}

// setup_kstack - alloc pages with size KSTACKPAGE as process kernel stack
static int setup_kstack(struct proc_struct *proc)
{
	struct Page *page = alloc_pages(KSTACKPAGE);
8000ee10:	0c0073df 	jal	8001cf7c <alloc_pages>
8000ee14:	ac4300a8 	sw	v1,168(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:231
	if (page != NULL) {
8000ee18:	1040014b 	beqz	v0,8000f348 <do_fork+0x5cc>
8000ee1c:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000ee20:	8c6777bc 	lw	a3,30652(v1)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000ee24:	3c038015 	lui	v1,0x8015
8000ee28:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000ee2c:	00471023 	subu	v0,v0,a3
8000ee30:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000ee34:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000ee38:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000ee3c:	3c078000 	lui	a3,0x8000
8000ee40:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000ee44:	0083182b 	sltu	v1,a0,v1
8000ee48:	10600195 	beqz	v1,8000f4a0 <do_fork+0x724>
8000ee4c:	00473821 	addu	a3,v0,a3
copy_sem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:381
	return ret;
}

static int copy_sem(uint32_t clone_flags, struct proc_struct *proc)
{
	sem_queue_t *sem_queue, *old_sem_queue = current->sem_queue;
8000ee50:	8e2277a4 	lw	v0,30628(s1)
setup_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:232
// setup_kstack - alloc pages with size KSTACKPAGE as process kernel stack
static int setup_kstack(struct proc_struct *proc)
{
	struct Page *page = alloc_pages(KSTACKPAGE);
	if (page != NULL) {
		proc->kstack = (uintptr_t) page2kva(page);
8000ee54:	ae070014 	sw	a3,20(s0)
copy_sem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:381
	return ret;
}

static int copy_sem(uint32_t clone_flags, struct proc_struct *proc)
{
	sem_queue_t *sem_queue, *old_sem_queue = current->sem_queue;
8000ee58:	8c5700ac 	lw	s7,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:384

	/* current is kernel thread */
	if (old_sem_queue == NULL) {
8000ee5c:	52e0001e 	beqzl	s7,8000eed8 <do_fork+0x15c>
8000ee60:	8c5e00bc 	lw	s8,188(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:388
		return 0;
	}

	if (clone_flags & CLONE_SEM) {
8000ee64:	7e420400 	ext	v0,s2,0x10,0x1
8000ee68:	14400010 	bnez	v0,8000eeac <do_fork+0x130>
8000ee6c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:394
		sem_queue = old_sem_queue;
		goto good_sem_queue;
	}

	int ret = -E_NO_MEM;
	if ((sem_queue = sem_queue_create()) == NULL) {
8000ee70:	0c00673a 	jal	80019ce8 <sem_queue_create>
8000ee74:	00000000 	nop
8000ee78:	10400131 	beqz	v0,8000f340 <do_fork+0x5c4>
8000ee7c:	0040f021 	move	s8,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:398
		goto bad_sem_queue;
	}

	down(&(old_sem_queue->sem));
8000ee80:	0c006711 	jal	80019c44 <down>
8000ee84:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:399
	ret = dup_sem_queue(sem_queue, old_sem_queue);
8000ee88:	03c02021 	move	a0,s8
8000ee8c:	0c0067c4 	jal	80019f10 <dup_sem_queue>
8000ee90:	02e02821 	move	a1,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:400
	up(&(old_sem_queue->sem));
8000ee94:	02e02021 	move	a0,s7
8000ee98:	0c00670f 	jal	80019c3c <up>
8000ee9c:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:402

	if (ret != 0) {
8000eea0:	8fa20010 	lw	v0,16(sp)
8000eea4:	14400122 	bnez	v0,8000f330 <do_fork+0x5b4>
8000eea8:	03c0b821 	move	s7,s8
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000eeac:	40026000 	mfc0	v0,c0_status
8000eeb0:	30420001 	andi	v0,v0,0x1
8000eeb4:	144000bf 	bnez	v0,8000f1b4 <do_fork+0x438>
8000eeb8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000eebc:	8ee20014 	lw	v0,20(s7)
8000eec0:	24420001 	addiu	v0,v0,1
8000eec4:	aee20014 	sw	v0,20(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000eec8:	8ee20014 	lw	v0,20(s7)
copy_sem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:408
		goto bad_dup_cleanup_sem;
	}

good_sem_queue:
	sem_queue_count_inc(sem_queue);
	proc->sem_queue = sem_queue;
8000eecc:	8e2277a4 	lw	v0,30628(s1)
8000eed0:	ae1700ac 	sw	s7,172(s0)
copy_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:510
	proc->signal_info.sighand = NULL;
}

static int copy_fs(uint32_t clone_flags, struct proc_struct *proc)
{
	struct fs_struct *fs_struct, *old_fs_struct = current->fs_struct;
8000eed4:	8c5e00bc 	lw	s8,188(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:511
	assert(old_fs_struct != NULL);
8000eed8:	13c00159 	beqz	s8,8000f440 <do_fork+0x6c4>
8000eedc:	32420200 	andi	v0,s2,0x200
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:513

	if (clone_flags & CLONE_FS) {
8000eee0:	1440000a 	bnez	v0,8000ef0c <do_fork+0x190>
8000eee4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:519
		fs_struct = old_fs_struct;
		goto good_fs_struct;
	}

	int ret = -E_NO_MEM;
	if ((fs_struct = fs_create()) == NULL) {
8000eee8:	0c003276 	jal	8000c9d8 <fs_create>
8000eeec:	00000000 	nop
8000eef0:	10400130 	beqz	v0,8000f3b4 <do_fork+0x638>
8000eef4:	0040b821 	move	s7,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:523
		goto bad_fs_struct;
	}

	if ((ret = dup_fs(fs_struct, old_fs_struct)) != 0) {
8000eef8:	00402021 	move	a0,v0
8000eefc:	0c0032f1 	jal	8000cbc4 <dup_fs>
8000ef00:	03c02821 	move	a1,s8
8000ef04:	14400148 	bnez	v0,8000f428 <do_fork+0x6ac>
8000ef08:	02e0f021 	move	s8,s7
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000ef0c:	40026000 	mfc0	v0,c0_status
8000ef10:	30420001 	andi	v0,v0,0x1
8000ef14:	144000ce 	bnez	v0,8000f250 <do_fork+0x4d4>
8000ef18:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000ef1c:	8fc20008 	lw	v0,8(s8)
8000ef20:	24420001 	addiu	v0,v0,1
8000ef24:	afc20008 	sw	v0,8(s8)
copy_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:431
	}
}

static int copy_signal(uint32_t clone_flags, struct proc_struct *proc)
{
	struct signal_struct *signal, *oldsig = current->signal_info.signal;
8000ef28:	8e2377a4 	lw	v1,30628(s1)
copy_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000ef2c:	8fc20008 	lw	v0,8(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:529
		goto bad_dup_cleanup_fs;
	}

good_fs_struct:
	fs_count_inc(fs_struct);
	proc->fs_struct = fs_struct;
8000ef30:	ae1e00bc 	sw	s8,188(s0)
copy_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:433

static int copy_signal(uint32_t clone_flags, struct proc_struct *proc)
{
	struct signal_struct *signal, *oldsig = current->signal_info.signal;

	if (oldsig == NULL) {
8000ef34:	8c6200c0 	lw	v0,192(v1)
8000ef38:	50400010 	beqzl	v0,8000ef7c <do_fork+0x200>
8000ef3c:	8c6200c4 	lw	v0,196(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:444
		goto good_signal;
	}
#endif

	int ret = -E_NO_MEM;
	if ((signal = signal_create()) == NULL) {
8000ef40:	0c00453f 	jal	800114fc <signal_create>
8000ef44:	00000000 	nop
8000ef48:	10400118 	beqz	v0,8000f3ac <do_fork+0x630>
8000ef4c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000ef50:	40036000 	mfc0	v1,c0_status
8000ef54:	30630001 	andi	v1,v1,0x1
8000ef58:	14600127 	bnez	v1,8000f3f8 <do_fork+0x67c>
8000ef5c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000ef60:	8c430000 	lw	v1,0(v0)
8000ef64:	24630001 	addiu	v1,v1,1
8000ef68:	ac430000 	sw	v1,0(v0)
copy_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:450
		goto bad_signal;
	}

good_signal:
	signal_count_inc(signal);
	proc->signal_info.signal = signal;
8000ef6c:	8e2377a4 	lw	v1,30628(s1)
signal_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000ef70:	8c440000 	lw	a0,0(v0)
copy_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:450
8000ef74:	ae0200c0 	sw	v0,192(s0)
copy_sighand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:472
	proc->signal_info.signal = NULL;
}

static int copy_sighand(uint32_t clone_flags, struct proc_struct *proc)
{
	struct sighand_struct *sighand, *oldsh = current->signal_info.sighand;
8000ef78:	8c6200c4 	lw	v0,196(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:474

	if (oldsh == NULL) {
8000ef7c:	50400015 	beqzl	v0,8000efd4 <do_fork+0x258>
8000ef80:	8c770020 	lw	s7,32(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:478
		return 0;
	}

	if (clone_flags & (CLONE_SIGHAND | CLONE_THREAD)) {
8000ef84:	3c030001 	lui	v1,0x1
8000ef88:	24630800 	addiu	v1,v1,2048
8000ef8c:	02431824 	and	v1,s2,v1
8000ef90:	14600005 	bnez	v1,8000efa8 <do_fork+0x22c>
8000ef94:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:484
		sighand = oldsh;
		goto good_sighand;
	}

	int ret = -E_NO_MEM;
	if ((sighand = sighand_create()) == NULL) {
8000ef98:	0c004564 	jal	80011590 <sighand_create>
8000ef9c:	00000000 	nop
8000efa0:	10400100 	beqz	v0,8000f3a4 <do_fork+0x628>
8000efa4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000efa8:	40036000 	mfc0	v1,c0_status
8000efac:	30630001 	andi	v1,v1,0x1
8000efb0:	1460009d 	bnez	v1,8000f228 <do_fork+0x4ac>
8000efb4:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000efb8:	8c430000 	lw	v1,0(v0)
8000efbc:	24630001 	addiu	v1,v1,1
8000efc0:	ac430000 	sw	v1,0(v0)
copy_sighand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:490
		goto bad_sighand;
	}

good_sighand:
	sighand_count_inc(sighand);
	proc->signal_info.sighand = sighand;
8000efc4:	8e2377a4 	lw	v1,30628(s1)
sighand_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000efc8:	8c440000 	lw	a0,0(v0)
copy_sighand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:490
8000efcc:	ae0200c4 	sw	v0,196(s0)
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:318

// copy_mm - process "proc" duplicate OR share process "current"'s mm according clone_flags
//         - if clone_flags & CLONE_VM, then "share" ; else "duplicate"
static int copy_mm(uint32_t clone_flags, struct proc_struct *proc)
{
	struct mm_struct *mm, *oldmm = current->mm;
8000efd0:	8c770020 	lw	s7,32(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:321

	/* current is a kernel thread */
	if (oldmm == NULL) {
8000efd4:	12e0000f 	beqz	s7,8000f014 <do_fork+0x298>
8000efd8:	32420100 	andi	v0,s2,0x100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:324
		return 0;
	}
	if (clone_flags & CLONE_VM) {
8000efdc:	104000ae 	beqz	v0,8000f298 <do_fork+0x51c>
8000efe0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000efe4:	40026000 	mfc0	v0,c0_status
8000efe8:	30420001 	andi	v0,v0,0x1
8000efec:	144000a1 	bnez	v0,8000f274 <do_fork+0x4f8>
8000eff0:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000eff4:	8ee2001c 	lw	v0,28(s7)
8000eff8:	24420001 	addiu	v0,v0,1
8000effc:	aee2001c 	sw	v0,28(s7)
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:368
		}
		local_intr_restore(intr_flag);
	}
	mm_count_inc(mm);
	proc->mm = mm;
	set_pgdir(proc, mm->pgdir);
8000f000:	8ee50010 	lw	a1,16(s7)
mm_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f004:	8ee2001c 	lw	v0,28(s7)
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:368
8000f008:	02002021 	move	a0,s0
8000f00c:	0c0077ec 	jal	8001dfb0 <set_pgdir>
8000f010:	ae170020 	sw	s7,32(s0)
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:602
		goto bad_fork_cleanup_signal;
	}
	if (copy_mm(clone_flags, proc) != 0) {
		goto bad_fork_cleanup_sighand;
	}
	if (copy_thread(clone_flags, proc, stack, tf) != 0) {
8000f014:	02402021 	move	a0,s2
8000f018:	02002821 	move	a1,s0
8000f01c:	02c03021 	move	a2,s6
8000f020:	0c0078e2 	jal	8001e388 <copy_thread>
8000f024:	02a03821 	move	a3,s5
8000f028:	144000dc 	bnez	v0,8000f39c <do_fork+0x620>
8000f02c:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:606
		goto bad_fork_cleanup_sighand;
	}

	proc->tls_pointer = current->tls_pointer;
8000f030:	8c4200f0 	lw	v0,240(v0)
8000f034:	ae0200f0 	sw	v0,240(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000f038:	40026000 	mfc0	v0,c0_status
8000f03c:	30420001 	andi	v0,v0,0x1
8000f040:	10400003 	beqz	v0,8000f050 <do_fork+0x2d4>
8000f044:	0000b021 	move	s6,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f048:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f04c:	24160001 	li	s6,1
get_pid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:148
{
	static_assert(MAX_PID > MAX_PROCESS);
	struct proc_struct *proc;
	list_entry_t *list = &proc_list, *le;
	static int next_safe = MAX_PID, last_pid = MAX_PID;
	if (++last_pid >= MAX_PID) {
8000f050:	3c088002 	lui	t0,0x8002
8000f054:	8d04541c 	lw	a0,21532(t0)
8000f058:	24840001 	addiu	a0,a0,1
8000f05c:	28822000 	slti	v0,a0,8192
8000f060:	1440006a 	bnez	v0,8000f20c <do_fork+0x490>
8000f064:	ad04541c 	sw	a0,21532(t0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:149
		last_pid = pls_read(lcpu_count);
8000f068:	3c028015 	lui	v0,0x8015
8000f06c:	8c4477a0 	lw	a0,30624(v0)
8000f070:	3c098002 	lui	t1,0x8002
8000f074:	ad04541c 	sw	a0,21532(t0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:156
	}
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
8000f078:	3c158015 	lui	s5,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:152
	static int next_safe = MAX_PID, last_pid = MAX_PID;
	if (++last_pid >= MAX_PID) {
		last_pid = pls_read(lcpu_count);
		goto inside;
	}
	if (last_pid >= next_safe) {
8000f07c:	8d07541c 	lw	a3,21532(t0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:156
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
8000f080:	26b57788 	addiu	s5,s5,30600
8000f084:	24052000 	li	a1,8192
8000f088:	02a01021 	move	v0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:162
		while ((le = list_next(le)) != list) {
			proc = le2proc(le, list_link);
			if (proc->pid == last_pid) {
				if (++last_pid >= next_safe) {
					if (last_pid >= MAX_PID) {
						last_pid = 1;
8000f08c:	240a0001 	li	t2,1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000f090:	8c420004 	lw	v0,4(v0)
get_pid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:157
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
		while ((le = list_next(le)) != list) {
8000f094:	5055000a 	beql	v0,s5,8000f0c0 <do_fork+0x344>
8000f098:	ad07541c 	sw	a3,21532(t0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:159
			proc = le2proc(le, list_link);
			if (proc->pid == last_pid) {
8000f09c:	8c43ff94 	lw	v1,-108(v0)
8000f0a0:	1064004d 	beq	v1,a0,8000f1d8 <do_fork+0x45c>
8000f0a4:	0083302a 	slt	a2,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:167
						last_pid = 1;
					}
					next_safe = MAX_PID;
					goto repeat;
				}
			} else if (proc->pid > last_pid
8000f0a8:	10c0fffa 	beqz	a2,8000f094 <do_fork+0x318>
8000f0ac:	8c420004 	lw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:168
				   && next_safe > proc->pid) {
8000f0b0:	0065302a 	slt	a2,v1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:157
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
		while ((le = list_next(le)) != list) {
8000f0b4:	1455fff9 	bne	v0,s5,8000f09c <do_fork+0x320>
8000f0b8:	0066280b 	movn	a1,v1,a2
8000f0bc:	ad07541c 	sw	a3,21532(t0)
8000f0c0:	ad255420 	sw	a1,21536(t1)
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:611
	proc->tls_pointer = current->tls_pointer;

	bool intr_flag;
	local_intr_save(intr_flag);
	{
		proc->pid = get_pid();
8000f0c4:	ae040004 	sw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:612
		proc->tid = proc->pid;
8000f0c8:	ae040008 	sw	a0,8(s0)
hash_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:203
}

// hash_proc - add proc into proc hash_list
static void hash_proc(struct proc_struct *proc)
{
	list_add(hash_list + pid_hashfn(proc->pid), &(proc->hash_link));
8000f0cc:	0c005945 	jal	80016514 <hash32>
8000f0d0:	2405000a 	li	a1,10
set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:119
// set_links - set the relation links of process
static void set_links(struct proc_struct *proc)
{
	list_add(&proc_list, &(proc->list_link));
	proc->yptr = NULL;
	if ((proc->optr = proc->parent->cptr) != NULL) {
8000f0d4:	8e03001c 	lw	v1,28(s0)
hash_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:203
}

// hash_proc - add proc into proc hash_list
static void hash_proc(struct proc_struct *proc)
{
	list_add(hash_list + pid_hashfn(proc->pid), &(proc->hash_link));
8000f0d8:	3c048015 	lui	a0,0x8015
8000f0dc:	24844548 	addiu	a0,a0,17736
8000f0e0:	000210c0 	sll	v0,v0,0x3
8000f0e4:	00821021 	addu	v0,a0,v0
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000f0e8:	8c470004 	lw	a3,4(v0)
set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:119
// set_links - set the relation links of process
static void set_links(struct proc_struct *proc)
{
	list_add(&proc_list, &(proc->list_link));
	proc->yptr = NULL;
	if ((proc->optr = proc->parent->cptr) != NULL) {
8000f0ec:	8c640088 	lw	a0,136(v1)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
8000f0f0:	8ea50004 	lw	a1,4(s5)
hash_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:203
}

// hash_proc - add proc into proc hash_list
static void hash_proc(struct proc_struct *proc)
{
	list_add(hash_list + pid_hashfn(proc->pid), &(proc->hash_link));
8000f0f4:	26080078 	addiu	t0,s0,120
set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:117
}

// set_links - set the relation links of process
static void set_links(struct proc_struct *proc)
{
	list_add(&proc_list, &(proc->list_link));
8000f0f8:	26060070 	addiu	a2,s0,112
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f0fc:	ace80000 	sw	t0,0(a3)
8000f100:	ac480004 	sw	t0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8000f104:	ae020078 	sw	v0,120(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8000f108:	ae07007c 	sw	a3,124(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f10c:	aca60000 	sw	a2,0(a1)
8000f110:	aea60004 	sw	a2,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000f114:	ae050074 	sw	a1,116(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8000f118:	ae150070 	sw	s5,112(s0)
set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:118
	proc->yptr = NULL;
8000f11c:	ae00008c 	sw	zero,140(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:119
	if ((proc->optr = proc->parent->cptr) != NULL) {
8000f120:	10800002 	beqz	a0,8000f12c <do_fork+0x3b0>
8000f124:	ae040090 	sw	a0,144(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:120
		proc->optr->yptr = proc;
8000f128:	ac90008c 	sw	s0,140(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:123
	}
	proc->parent->cptr = proc;
	nr_process++;
8000f12c:	8e626548 	lw	v0,25928(s3)
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:615
	{
		proc->pid = get_pid();
		proc->tid = proc->pid;
		hash_proc(proc);
		set_links(proc);
		if (clone_flags & CLONE_THREAD) {
8000f130:	7e520400 	ext	s2,s2,0x10,0x1
set_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:122
	list_add(&proc_list, &(proc->list_link));
	proc->yptr = NULL;
	if ((proc->optr = proc->parent->cptr) != NULL) {
		proc->optr->yptr = proc;
	}
	proc->parent->cptr = proc;
8000f134:	ac700088 	sw	s0,136(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:123
	nr_process++;
8000f138:	24420001 	addiu	v0,v0,1
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:615
	{
		proc->pid = get_pid();
		proc->tid = proc->pid;
		hash_proc(proc);
		set_links(proc);
		if (clone_flags & CLONE_THREAD) {
8000f13c:	12400030 	beqz	s2,8000f200 <do_fork+0x484>
8000f140:	ae626548 	sw	v0,25928(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:616
			list_add_before(&(current->thread_group),
8000f144:	8e2277a4 	lw	v0,30628(s1)
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
8000f148:	8c430094 	lw	v1,148(v0)
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:618
					&(proc->thread_group));
			proc->gid = current->gid;
8000f14c:	8c44000c 	lw	a0,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:616
		proc->pid = get_pid();
		proc->tid = proc->pid;
		hash_proc(proc);
		set_links(proc);
		if (clone_flags & CLONE_THREAD) {
			list_add_before(&(current->thread_group),
8000f150:	24450094 	addiu	a1,v0,148
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f154:	ac540094 	sw	s4,148(v0)
8000f158:	ac740004 	sw	s4,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8000f15c:	ae030094 	sw	v1,148(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8000f160:	ae050098 	sw	a1,152(s0)
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:618
					&(proc->thread_group));
			proc->gid = current->gid;
8000f164:	ae04000c 	sw	a0,12(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000f168:	12c00003 	beqz	s6,8000f178 <do_fork+0x3fc>
8000f16c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000f170:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f174:	00000000 	nop
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:625
			proc->gid = proc->pid;
		}
	}
	local_intr_restore(intr_flag);

	wakeup_proc(proc);
8000f178:	0c0004f7 	jal	800013dc <wakeup_proc>
8000f17c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:627

	ret = proc->pid;
8000f180:	8e020004 	lw	v0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:643
bad_fork_cleanup_kstack:
	put_kstack(proc);
bad_fork_cleanup_proc:
	kfree(proc);
	goto fork_out;
}
8000f184:	8fbf003c 	lw	ra,60(sp)
8000f188:	8fbe0038 	lw	s8,56(sp)
8000f18c:	8fb70034 	lw	s7,52(sp)
8000f190:	8fb60030 	lw	s6,48(sp)
8000f194:	8fb5002c 	lw	s5,44(sp)
8000f198:	8fb40028 	lw	s4,40(sp)
8000f19c:	8fb30024 	lw	s3,36(sp)
8000f1a0:	8fb20020 	lw	s2,32(sp)
8000f1a4:	8fb1001c 	lw	s1,28(sp)
8000f1a8:	8fb00018 	lw	s0,24(sp)
8000f1ac:	03e00008 	jr	ra
8000f1b0:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f1b4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f1b8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f1bc:	8ee20014 	lw	v0,20(s7)
8000f1c0:	24420001 	addiu	v0,v0,1
8000f1c4:	aee20014 	sw	v0,20(s7)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f1c8:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f1cc:	00000000 	nop
8000f1d0:	08003bb2 	j	8000eec8 <do_fork+0x14c>
8000f1d4:	00000000 	nop
get_pid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:160
repeat:
		le = list;
		while ((le = list_next(le)) != list) {
			proc = le2proc(le, list_link);
			if (proc->pid == last_pid) {
				if (++last_pid >= next_safe) {
8000f1d8:	24840001 	addiu	a0,a0,1
8000f1dc:	0085182a 	slt	v1,a0,a1
8000f1e0:	1460ffab 	bnez	v1,8000f090 <do_fork+0x314>
8000f1e4:	00803821 	move	a3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:161
					if (last_pid >= MAX_PID) {
8000f1e8:	28872000 	slti	a3,a0,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:162
						last_pid = 1;
8000f1ec:	0147200a 	movz	a0,t2,a3
8000f1f0:	00803821 	move	a3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:164
					}
					next_safe = MAX_PID;
8000f1f4:	24052000 	li	a1,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:156
	}
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
8000f1f8:	08003c24 	j	8000f090 <do_fork+0x314>
8000f1fc:	02a01021 	move	v0,s5
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:620
		if (clone_flags & CLONE_THREAD) {
			list_add_before(&(current->thread_group),
					&(proc->thread_group));
			proc->gid = current->gid;
		} else {
			proc->gid = proc->pid;
8000f200:	8e020004 	lw	v0,4(s0)
8000f204:	08003c5a 	j	8000f168 <do_fork+0x3ec>
8000f208:	ae02000c 	sw	v0,12(s0)
get_pid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:152
	static int next_safe = MAX_PID, last_pid = MAX_PID;
	if (++last_pid >= MAX_PID) {
		last_pid = pls_read(lcpu_count);
		goto inside;
	}
	if (last_pid >= next_safe) {
8000f20c:	3c098002 	lui	t1,0x8002
8000f210:	8d225420 	lw	v0,21536(t1)
8000f214:	0082102a 	slt	v0,a0,v0
8000f218:	1040ff98 	beqz	v0,8000f07c <do_fork+0x300>
8000f21c:	3c158015 	lui	s5,0x8015
8000f220:	08003c31 	j	8000f0c4 <do_fork+0x348>
8000f224:	26b57788 	addiu	s5,s5,30600
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f228:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f22c:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f230:	8fa20010 	lw	v0,16(sp)
8000f234:	8c430000 	lw	v1,0(v0)
8000f238:	24630001 	addiu	v1,v1,1
8000f23c:	ac430000 	sw	v1,0(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f240:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f244:	00000000 	nop
8000f248:	08003bf1 	j	8000efc4 <do_fork+0x248>
8000f24c:	8fa20010 	lw	v0,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f250:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f254:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f258:	8fc20008 	lw	v0,8(s8)
8000f25c:	24420001 	addiu	v0,v0,1
8000f260:	afc20008 	sw	v0,8(s8)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f264:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f268:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:431
	}
}

static int copy_signal(uint32_t clone_flags, struct proc_struct *proc)
{
	struct signal_struct *signal, *oldsig = current->signal_info.signal;
8000f26c:	08003bcb 	j	8000ef2c <do_fork+0x1b0>
8000f270:	8e2377a4 	lw	v1,30628(s1)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f274:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f278:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f27c:	8ee2001c 	lw	v0,28(s7)
8000f280:	24420001 	addiu	v0,v0,1
8000f284:	aee2001c 	sw	v0,28(s7)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f288:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f28c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:368
		}
		local_intr_restore(intr_flag);
	}
	mm_count_inc(mm);
	proc->mm = mm;
	set_pgdir(proc, mm->pgdir);
8000f290:	08003c01 	j	8000f004 <do_fork+0x288>
8000f294:	8ee50010 	lw	a1,16(s7)
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:330
		mm = oldmm;
		goto good_mm;
	}

	int ret = -E_NO_MEM;
	if ((mm = mm_create()) == NULL) {
8000f298:	0c004c4a 	jal	80013128 <mm_create>
8000f29c:	00000000 	nop
8000f2a0:	1040003e 	beqz	v0,8000f39c <do_fork+0x620>
8000f2a4:	0040f021 	move	s8,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:333
		goto bad_mm;
	}
	if (setup_pgdir(mm) != 0) {
8000f2a8:	0c003968 	jal	8000e5a0 <setup_pgdir>
8000f2ac:	00402021 	move	a0,v0
8000f2b0:	14400038 	bnez	v0,8000f394 <do_fork+0x618>
8000f2b4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:337
		goto bad_pgdir_cleanup_mm;
	}

	lock_mm(oldmm);
8000f2b8:	0c004c18 	jal	80013060 <lock_mm>
8000f2bc:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:339
	{
		ret = dup_mmap(mm, oldmm);
8000f2c0:	03c02021 	move	a0,s8
8000f2c4:	0c004f80 	jal	80013e00 <dup_mmap>
8000f2c8:	02e02821 	move	a1,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:341
	}
	unlock_mm(oldmm);
8000f2cc:	02e02021 	move	a0,s7
8000f2d0:	0c004c29 	jal	800130a4 <unlock_mm>
8000f2d4:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:351
		ret = remapfile(mm, proc);
	}
	unlock_mm(mm);
#endif //UCONFIG_BIONIC_LIBC

	if (ret != 0) {
8000f2d8:	8fa20010 	lw	v0,16(sp)
8000f2dc:	14400029 	bnez	v0,8000f384 <do_fork+0x608>
8000f2e0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:356
		goto bad_dup_cleanup_mmap;
	}

good_mm:
	if (mm != oldmm) {
8000f2e4:	12feff3f 	beq	s7,s8,8000efe4 <do_fork+0x268>
8000f2e8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:357
		mm->brk_start = oldmm->brk_start;
8000f2ec:	8ee30024 	lw	v1,36(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:358
		mm->brk = oldmm->brk;
8000f2f0:	8ee20028 	lw	v0,40(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:357
		goto bad_dup_cleanup_mmap;
	}

good_mm:
	if (mm != oldmm) {
		mm->brk_start = oldmm->brk_start;
8000f2f4:	afc30024 	sw	v1,36(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:358
		mm->brk = oldmm->brk;
8000f2f8:	afc20028 	sw	v0,40(s8)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000f2fc:	40026000 	mfc0	v0,c0_status
8000f300:	30420001 	andi	v0,v0,0x1
8000f304:	1440002f 	bnez	v0,8000f3c4 <do_fork+0x648>
8000f308:	3c028015 	lui	v0,0x8015
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000f30c:	24427780 	addiu	v0,v0,30592
8000f310:	8c430004 	lw	v1,4(v0)
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:362
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000f314:	27c4002c 	addiu	a0,s8,44
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f318:	ac440004 	sw	a0,4(v0)
8000f31c:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000f320:	afc30030 	sw	v1,48(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8000f324:	afc2002c 	sw	v0,44(s8)
8000f328:	08003bf9 	j	8000efe4 <do_fork+0x268>
8000f32c:	03c0b821 	move	s7,s8
copy_sem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:412
	sem_queue_count_inc(sem_queue);
	proc->sem_queue = sem_queue;
	return 0;

bad_dup_cleanup_sem:
	exit_sem_queue(sem_queue);
8000f330:	0c0067fa 	jal	80019fe8 <exit_sem_queue>
8000f334:	03c02021 	move	a0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:413
	sem_queue_destroy(sem_queue);
8000f338:	0c00674b 	jal	80019d2c <sem_queue_destroy>
8000f33c:	03c02021 	move	a0,s8
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:639
bad_fork_cleanup_fs:
	put_fs(proc);
bad_fork_cleanup_sem:
	put_sem_queue(proc);
bad_fork_cleanup_kstack:
	put_kstack(proc);
8000f340:	0c003abd 	jal	8000eaf4 <put_kstack>
8000f344:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:641
bad_fork_cleanup_proc:
	kfree(proc);
8000f348:	0c0054a3 	jal	8001528c <kfree>
8000f34c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:643
	goto fork_out;
}
8000f350:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:570
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
		goto fork_out;
	}

	ret = -E_NO_MEM;
8000f354:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:643
bad_fork_cleanup_kstack:
	put_kstack(proc);
bad_fork_cleanup_proc:
	kfree(proc);
	goto fork_out;
}
8000f358:	8fbe0038 	lw	s8,56(sp)
8000f35c:	8fb70034 	lw	s7,52(sp)
8000f360:	8fb60030 	lw	s6,48(sp)
8000f364:	8fb5002c 	lw	s5,44(sp)
8000f368:	8fb40028 	lw	s4,40(sp)
8000f36c:	8fb30024 	lw	s3,36(sp)
8000f370:	8fb20020 	lw	s2,32(sp)
8000f374:	8fb1001c 	lw	s1,28(sp)
8000f378:	8fb00018 	lw	s0,24(sp)
8000f37c:	03e00008 	jr	ra
8000f380:	27bd0040 	addiu	sp,sp,64
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:371
	mm_count_inc(mm);
	proc->mm = mm;
	set_pgdir(proc, mm->pgdir);
	return 0;
bad_dup_cleanup_mmap:
	exit_mmap(mm);
8000f384:	0c004fe2 	jal	80013f88 <exit_mmap>
8000f388:	03c02021 	move	a0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:372
	put_pgdir(mm);
8000f38c:	0c0037c8 	jal	8000df20 <put_pgdir>
8000f390:	03c02021 	move	a0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:374
bad_pgdir_cleanup_mm:
	mm_destroy(mm);
8000f394:	0c004d53 	jal	8001354c <mm_destroy>
8000f398:	03c02021 	move	a0,s8
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:631

	ret = proc->pid;
fork_out:
	return ret;
bad_fork_cleanup_sighand:
	put_sighand(proc);
8000f39c:	0c003994 	jal	8000e650 <put_sighand>
8000f3a0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:633
bad_fork_cleanup_signal:
	put_signal(proc);
8000f3a4:	0c0039d9 	jal	8000e764 <put_signal>
8000f3a8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:635
bad_fork_cleanup_fs:
	put_fs(proc);
8000f3ac:	0c0039fb 	jal	8000e7ec <put_fs>
8000f3b0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:637
bad_fork_cleanup_sem:
	put_sem_queue(proc);
8000f3b4:	0c0039b6 	jal	8000e6d8 <put_sem_queue>
8000f3b8:	02002021 	move	a0,s0
8000f3bc:	08003cd0 	j	8000f340 <do_fork+0x5c4>
8000f3c0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f3c4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f3c8:	03c0b821 	move	s7,s8
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000f3cc:	3c028015 	lui	v0,0x8015
8000f3d0:	24427780 	addiu	v0,v0,30592
8000f3d4:	8c430004 	lw	v1,4(v0)
copy_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:362
		mm->brk_start = oldmm->brk_start;
		mm->brk = oldmm->brk;
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000f3d8:	27c4002c 	addiu	a0,s8,44
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f3dc:	ac440004 	sw	a0,4(v0)
8000f3e0:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000f3e4:	afc30030 	sw	v1,48(s8)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f3e8:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f3ec:	afc2002c 	sw	v0,44(s8)
8000f3f0:	08003bf9 	j	8000efe4 <do_fork+0x268>
8000f3f4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f3f8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f3fc:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f400:	8fa20010 	lw	v0,16(sp)
8000f404:	8c430000 	lw	v1,0(v0)
8000f408:	24630001 	addiu	v1,v1,1
8000f40c:	ac430000 	sw	v1,0(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f410:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f414:	00000000 	nop
8000f418:	08003bdb 	j	8000ef6c <do_fork+0x1f0>
8000f41c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:564
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
	int ret = -E_NO_FREE_PROC;
8000f420:	08003c61 	j	8000f184 <do_fork+0x408>
8000f424:	2402fff0 	li	v0,-16
copy_fs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:533
	fs_count_inc(fs_struct);
	proc->fs_struct = fs_struct;
	return 0;

bad_dup_cleanup_fs:
	fs_destroy(fs_struct);
8000f428:	0c00328a 	jal	8000ca28 <fs_destroy>
8000f42c:	02e02021 	move	a0,s7
8000f430:	08003ced 	j	8000f3b4 <do_fork+0x638>
8000f434:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:570
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
		goto fork_out;
	}

	ret = -E_NO_MEM;
8000f438:	08003c61 	j	8000f184 <do_fork+0x408>
8000f43c:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:511
}

static int copy_fs(uint32_t clone_flags, struct proc_struct *proc)
{
	struct fs_struct *fs_struct, *old_fs_struct = current->fs_struct;
	assert(old_fs_struct != NULL);
8000f440:	3c048002 	lui	a0,0x8002
8000f444:	3c068002 	lui	a2,0x8002
8000f448:	3c078002 	lui	a3,0x8002
8000f44c:	24842610 	addiu	a0,a0,9744
8000f450:	240501ff 	li	a1,511
8000f454:	24c609b0 	addiu	a2,a2,2480
8000f458:	0c006afd 	jal	8001abf4 <__panic>
8000f45c:	24e726dc 	addiu	a3,a3,9948
do_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:580

	proc->parent = current;
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);

	assert(current->time_slice >= 0);
8000f460:	3c048002 	lui	a0,0x8002
8000f464:	3c068002 	lui	a2,0x8002
8000f468:	3c078002 	lui	a3,0x8002
8000f46c:	24842610 	addiu	a0,a0,9744
8000f470:	24050244 	li	a1,580
8000f474:	24c609b0 	addiu	a2,a2,2480
8000f478:	0c006afd 	jal	8001abf4 <__panic>
8000f47c:	24e726c0 	addiu	a3,a3,9920
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:578
		goto fork_out;
	}

	proc->parent = current;
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);
8000f480:	3c048002 	lui	a0,0x8002
8000f484:	3c068002 	lui	a2,0x8002
8000f488:	3c078002 	lui	a3,0x8002
8000f48c:	24842610 	addiu	a0,a0,9744
8000f490:	24050242 	li	a1,578
8000f494:	24c609b0 	addiu	a2,a2,2480
8000f498:	0c006afd 	jal	8001abf4 <__panic>
8000f49c:	24e726a4 	addiu	a3,a3,9892
setup_kstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
8000f4a0:	3c048002 	lui	a0,0x8002
8000f4a4:	3c068002 	lui	a2,0x8002
8000f4a8:	24842564 	addiu	a0,a0,9572
8000f4ac:	2405006a 	li	a1,106
8000f4b0:	0c006afd 	jal	8001abf4 <__panic>
8000f4b4:	24c625ec 	addiu	a2,a2,9708

8000f4b8 <do_exit_thread>:
do_exit_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:743
}

// do_exit_thread - kill a single thread
int do_exit_thread(int error_code)
{
	current->exit_code = error_code;
8000f4b8:	3c028015 	lui	v0,0x8015
8000f4bc:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:742
	return do_exit_thread(error_code);
}

// do_exit_thread - kill a single thread
int do_exit_thread(int error_code)
{
8000f4c0:	27bdffe8 	addiu	sp,sp,-24
8000f4c4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:744
	current->exit_code = error_code;
	return __do_exit();
8000f4c8:	0c003a1b 	jal	8000e86c <__do_exit>
8000f4cc:	ac440080 	sw	a0,128(v0)

8000f4d0 <do_exit>:
do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:726
	      current->exit_code);
}

// do_exit - kill a thread group, called by syscall or trap handler
int do_exit(int error_code)
{
8000f4d0:	27bdffd8 	addiu	sp,sp,-40
8000f4d4:	afb20020 	sw	s2,32(sp)
8000f4d8:	afb1001c 	sw	s1,28(sp)
8000f4dc:	afb00018 	sw	s0,24(sp)
8000f4e0:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:728
	bool intr_flag;
	local_intr_save(intr_flag);
8000f4e4:	0c003781 	jal	8000de04 <__intr_save>
8000f4e8:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:730
	{
		list_entry_t *list = &(current->thread_group), *le = list;
8000f4ec:	3c038015 	lui	v1,0x8015
8000f4f0:	8c7277a4 	lw	s2,30628(v1)
8000f4f4:	26520094 	addiu	s2,s2,148
8000f4f8:	02408821 	move	s1,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000f4fc:	8e310004 	lw	s1,4(s1)
do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:731
		while ((le = list_next(le)) != list) {
8000f500:	1251000f 	beq	s2,s1,8000f540 <do_exit+0x70>
8000f504:	00000000 	nop
__do_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1496
}

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
8000f508:	8e23ffc8 	lw	v1,-56(s1)
8000f50c:	30640001 	andi	a0,v1,0x1
8000f510:	5480fffb 	bnezl	a0,8000f500 <do_exit+0x30>
8000f514:	8e310004 	lw	s1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1499
		proc->flags |= PF_EXITING;
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
8000f518:	8e24fff0 	lw	a0,-16(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1497

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
		proc->flags |= PF_EXITING;
8000f51c:	34630001 	ori	v1,v1,0x1
8000f520:	ae23ffc8 	sw	v1,-56(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1499
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
8000f524:	0481fff5 	bgez	a0,8000f4fc <do_exit+0x2c>
8000f528:	ae30ffec 	sw	s0,-20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1500
			wakeup_proc(proc);
8000f52c:	2624ff6c 	addiu	a0,s1,-148
8000f530:	0c0004f7 	jal	800013dc <wakeup_proc>
8000f534:	afa20010 	sw	v0,16(sp)
8000f538:	08003d3f 	j	8000f4fc <do_exit+0x2c>
8000f53c:	8fa20010 	lw	v0,16(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000f540:	10400003 	beqz	v0,8000f550 <do_exit+0x80>
8000f544:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000f548:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f54c:	00000000 	nop
do_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:737
			struct proc_struct *proc = le2proc(le, thread_group);
			__do_kill(proc, error_code);
		}
	}
	local_intr_restore(intr_flag);
	return do_exit_thread(error_code);
8000f550:	0c003d2e 	jal	8000f4b8 <do_exit_thread>
8000f554:	02002021 	move	a0,s0

8000f558 <do_execve>:
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f558:	27bdfde8 	addiu	sp,sp,-536
8000f55c:	afb001f0 	sw	s0,496(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1186
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;
8000f560:	3c108015 	lui	s0,0x8015
8000f564:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f568:	afb201f8 	sw	s2,504(sp)
8000f56c:	afb40200 	sw	s4,512(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1186
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;
8000f570:	8c520020 	lw	s2,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f574:	afb301fc 	sw	s3,508(sp)
8000f578:	afb101f4 	sw	s1,500(sp)
8000f57c:	0080a021 	move	s4,a0
8000f580:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1189
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;

	char local_name[PROC_NAME_LEN + 1];
	memset(local_name, 0, sizeof(local_name));
8000f584:	27a40024 	addiu	a0,sp,36
8000f588:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f58c:	00c09821 	move	s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1189
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;

	char local_name[PROC_NAME_LEN + 1];
	memset(local_name, 0, sizeof(local_name));
8000f590:	24060010 	li	a2,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f594:	afbf0214 	sw	ra,532(sp)
8000f598:	afbe0210 	sw	s8,528(sp)
8000f59c:	afb7020c 	sw	s7,524(sp)
8000f5a0:	afb60208 	sw	s6,520(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1189
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;

	char local_name[PROC_NAME_LEN + 1];
	memset(local_name, 0, sizeof(local_name));
8000f5a4:	0c005c44 	jal	80017110 <memset>
8000f5a8:	afb50204 	sw	s5,516(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1195

	char *kargv[EXEC_MAX_ARG_NUM], *kenvp[EXEC_MAX_ENV_NUM];
	const char *path;

	int ret = -E_INVAL;
	lock_mm(mm);
8000f5ac:	0c004c18 	jal	80013060 <lock_mm>
8000f5b0:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1207
			unlock_mm(mm);
			return ret;
		}
	}
#endif
	snprintf(local_name, sizeof(local_name), "<null> %d", current->pid);
8000f5b4:	8e0277a4 	lw	v0,30628(s0)
8000f5b8:	3c068002 	lui	a2,0x8002
8000f5bc:	27a40024 	addiu	a0,sp,36
8000f5c0:	8c470004 	lw	a3,4(v0)
8000f5c4:	24050010 	li	a1,16
8000f5c8:	0c005b32 	jal	80016cc8 <snprintf>
8000f5cc:	24c626f4 	addiu	a2,a2,9972
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1210

	int argc = 0, envc = 0;
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
8000f5d0:	02402021 	move	a0,s2
8000f5d4:	02203021 	move	a2,s1
8000f5d8:	27a5015c 	addiu	a1,sp,348
8000f5dc:	27a70020 	addiu	a3,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1209
		}
	}
#endif
	snprintf(local_name, sizeof(local_name), "<null> %d", current->pid);

	int argc = 0, envc = 0;
8000f5e0:	afa00020 	sw	zero,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1210
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
8000f5e4:	0c003811 	jal	8000e044 <copy_kargv.constprop.3>
8000f5e8:	afa0001c 	sw	zero,28(sp)
8000f5ec:	00408821 	move	s1,v0
8000f5f0:	144000a1 	bnez	v0,8000f878 <do_execve+0x320>
8000f5f4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1214
		unlock_mm(mm);
		return ret;
	}
	if ((ret = copy_kargv(mm, kenvp, envp, EXEC_MAX_ENV_NUM, &envc)) != 0) {
8000f5f8:	27a500dc 	addiu	a1,sp,220
8000f5fc:	02603021 	move	a2,s3
8000f600:	0c003811 	jal	8000e044 <copy_kargv.constprop.3>
8000f604:	27a7001c 	addiu	a3,sp,28
8000f608:	00408821 	move	s1,v0
8000f60c:	14400088 	bnez	v0,8000f830 <do_execve+0x2d8>
8000f610:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1232
		kprintf("## %08x %s\n\r", kenvp[i], kenvp[i]);
#endif
	//path = argv[0];
	//copy_from_user (mm, &path, argv, sizeof (char*), 0);
	path = filename;
	unlock_mm(mm);
8000f614:	0c004c29 	jal	800130a4 <unlock_mm>
8000f618:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1240
	//fs_closeall(current->fs_struct);

	/* sysfile_open will check the first argument path, thus we have to use a user-space pointer, and argv[0] may be incorrect */

	int fd;
	if ((ret = fd = sysfile_open(path, O_RDONLY)) < 0) {
8000f61c:	02802021 	move	a0,s4
8000f620:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000f624:	00002821 	move	a1,zero
8000f628:	0440020f 	bltz	v0,8000fe68 <do_execve+0x910>
8000f62c:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1244
		goto execve_exit;
	}

	if (mm != NULL) {
8000f630:	124000d6 	beqz	s2,8000f98c <do_execve+0x434>
8000f634:	2402ffff 	li	v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1245
		mm->lapic = -1;
8000f638:	ae420048 	sw	v0,72(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1246
		mp_set_mm_pagetable(NULL);
8000f63c:	0c007b59 	jal	8001ed64 <mp_set_mm_pagetable>
8000f640:	00002021 	move	a0,zero
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000f644:	40026000 	mfc0	v0,c0_status
8000f648:	30420001 	andi	v0,v0,0x1
8000f64c:	14400099 	bnez	v0,8000f8b4 <do_execve+0x35c>
8000f650:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f654:	8e42001c 	lw	v0,28(s2)
8000f658:	2442ffff 	addiu	v0,v0,-1
8000f65c:	ae42001c 	sw	v0,28(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f660:	8e42001c 	lw	v0,28(s2)
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1247
		if (mm_count_dec(mm) == 0) {
8000f664:	1040009c 	beqz	v0,8000f8d8 <do_execve+0x380>
8000f668:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1258
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
		}
		current->mm = NULL;
8000f66c:	ac800020 	sw	zero,32(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1260
	}
	put_sem_queue(current);
8000f670:	0c0039b6 	jal	8000e6d8 <put_sem_queue>
8000f674:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1264

	ret = -E_NO_MEM;
	/* init signal */
	put_sighand(current);
8000f678:	0c003994 	jal	8000e650 <put_sighand>
8000f67c:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1265
	if ((current->signal_info.sighand = sighand_create()) == NULL) {
8000f680:	0c004564 	jal	80011590 <sighand_create>
8000f684:	8e1277a4 	lw	s2,30628(s0)
8000f688:	10400122 	beqz	v0,8000fb14 <do_execve+0x5bc>
8000f68c:	ae4200c4 	sw	v0,196(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1268
		goto execve_exit;
	}
	sighand_count_inc(current->signal_info.sighand);
8000f690:	3c028015 	lui	v0,0x8015
8000f694:	8c4277a4 	lw	v0,30628(v0)
8000f698:	8c5200c4 	lw	s2,196(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000f69c:	40026000 	mfc0	v0,c0_status
8000f6a0:	30420001 	andi	v0,v0,0x1
8000f6a4:	144000a5 	bnez	v0,8000f93c <do_execve+0x3e4>
8000f6a8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f6ac:	8e420000 	lw	v0,0(s2)
8000f6b0:	24420001 	addiu	v0,v0,1
8000f6b4:	ae420000 	sw	v0,0(s2)
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1270

	put_signal(current);
8000f6b8:	8e0477a4 	lw	a0,30628(s0)
sighand_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f6bc:	8e420000 	lw	v0,0(s2)
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1270
8000f6c0:	0c0039d9 	jal	8000e764 <put_signal>
8000f6c4:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1271
	if ((current->signal_info.signal = signal_create()) == NULL) {
8000f6c8:	0c00453f 	jal	800114fc <signal_create>
8000f6cc:	8e1377a4 	lw	s3,30628(s0)
8000f6d0:	10400110 	beqz	v0,8000fb14 <do_execve+0x5bc>
8000f6d4:	ae6200c0 	sw	v0,192(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1274
		goto execve_exit;
	}
	signal_count_inc(current->signal_info.signal);
8000f6d8:	8e5377a4 	lw	s3,30628(s2)
8000f6dc:	8e7500c0 	lw	s5,192(s3)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000f6e0:	40026000 	mfc0	v0,c0_status
8000f6e4:	30420001 	andi	v0,v0,0x1
8000f6e8:	1440008b 	bnez	v0,8000f918 <do_execve+0x3c0>
8000f6ec:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f6f0:	8ea20000 	lw	v0,0(s5)
8000f6f4:	24420001 	addiu	v0,v0,1
8000f6f8:	aea20000 	sw	v0,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f6fc:	8ea20000 	lw	v0,0(s5)
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1276

	if ((current->sem_queue = sem_queue_create()) == NULL) {
8000f700:	0c00673a 	jal	80019ce8 <sem_queue_create>
8000f704:	00000000 	nop
8000f708:	10400102 	beqz	v0,8000fb14 <do_execve+0x5bc>
8000f70c:	ae6200ac 	sw	v0,172(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1279
		goto execve_exit;
	}
	sem_queue_count_inc(current->sem_queue);
8000f710:	8e0277a4 	lw	v0,30628(s0)
8000f714:	8c5200ac 	lw	s2,172(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000f718:	40026000 	mfc0	v0,c0_status
8000f71c:	30420001 	andi	v0,v0,0x1
8000f720:	1440008f 	bnez	v0,8000f960 <do_execve+0x408>
8000f724:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f728:	8e420014 	lw	v0,20(s2)
8000f72c:	24420001 	addiu	v0,v0,1
8000f730:	ae420014 	sw	v0,20(s2)
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1281

	if ((ret = load_icode(fd, argc, kargv, envc, kenvp)) != 0) {
8000f734:	8fb60020 	lw	s6,32(sp)
sem_queue_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f738:	8e420014 	lw	v0,20(s2)
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:860

//#endif //UCONFIG_BIONIC_LIBC

static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
8000f73c:	2ec20021 	sltiu	v0,s6,33
8000f740:	104001c1 	beqz	v0,8000fe48 <do_execve+0x8f0>
8000f744:	8fb5001c 	lw	s5,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:861
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
8000f748:	2ea20021 	sltiu	v0,s5,33
8000f74c:	104001b6 	beqz	v0,8000fe28 <do_execve+0x8d0>
8000f750:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:862
	if (current->mm != NULL) {
8000f754:	8c420020 	lw	v0,32(v0)
8000f758:	144001ae 	bnez	v0,8000fe14 <do_execve+0x8bc>
8000f75c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:873
//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t real_entry;
//#endif //UCONFIG_BIONIC_LIBC

	struct mm_struct *mm;
	if ((mm = mm_create()) == NULL) {
8000f760:	0c004c4a 	jal	80013128 <mm_create>
8000f764:	00000000 	nop
8000f768:	104000ea 	beqz	v0,8000fb14 <do_execve+0x5bc>
8000f76c:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:877
		goto bad_mm;
	}

	if (setup_pgdir(mm) != 0) {
8000f770:	0c003968 	jal	8000e5a0 <setup_pgdir>
8000f774:	00402021 	move	a0,v0
8000f778:	14400082 	bnez	v0,8000f984 <do_execve+0x42c>
8000f77c:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:881
		goto bad_pgdir_cleanup_mm;
	}

	mm->brk_start = 0;
8000f780:	ae600024 	sw	zero,36(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:886

	struct Page *page;

	struct elfhdr __elf, *elf = &__elf;
	if ((ret = load_icode_read(fd, elf, sizeof(struct elfhdr), 0)) != 0) {
8000f784:	27a500a8 	addiu	a1,sp,168
8000f788:	24060034 	li	a2,52
8000f78c:	0c0037eb 	jal	8000dfac <load_icode_read>
8000f790:	00003821 	move	a3,zero
8000f794:	14400006 	bnez	v0,8000f7b0 <do_execve+0x258>
8000f798:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:890
		goto bad_elf_cleanup_pgdir;
	}

	if (elf->e_magic != ELF_MAGIC) {
8000f79c:	8fa300a8 	lw	v1,168(sp)
8000f7a0:	3c02464c 	lui	v0,0x464c
8000f7a4:	2442457f 	addiu	v0,v0,17791
8000f7a8:	10620083 	beq	v1,v0,8000f9b8 <do_execve+0x460>
8000f7ac:	2412fff8 	li	s2,-8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1126
out:
	return ret;
bad_cleanup_mmap:
	exit_mmap(mm);
bad_elf_cleanup_pgdir:
	put_pgdir(mm);
8000f7b0:	0c0037c8 	jal	8000df20 <put_pgdir>
8000f7b4:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1128
bad_pgdir_cleanup_mm:
	mm_destroy(mm);
8000f7b8:	0c004d53 	jal	8001354c <mm_destroy>
8000f7bc:	02602021 	move	a0,s3
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1281
	if ((current->sem_queue = sem_queue_create()) == NULL) {
		goto execve_exit;
	}
	sem_queue_count_inc(current->sem_queue);

	if ((ret = load_icode(fd, argc, kargv, envc, kenvp)) != 0) {
8000f7c0:	564000d5 	bnezl	s2,8000fb18 <do_execve+0x5c0>
8000f7c4:	02408821 	move	s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1285
		goto execve_exit;
	}

	set_proc_name(current, local_name);
8000f7c8:	8e0477a4 	lw	a0,30628(s0)
8000f7cc:	0c003ae0 	jal	8000eb80 <set_proc_name>
8000f7d0:	27a50024 	addiu	a1,sp,36
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1287

	if (do_execve_arch_hook(argc, kargv) < 0)
8000f7d4:	8fa40020 	lw	a0,32(sp)
8000f7d8:	0c007960 	jal	8001e580 <do_execve_arch_hook>
8000f7dc:	27a5015c 	addiu	a1,sp,348
8000f7e0:	044000ce 	bltz	v0,8000fb1c <do_execve+0x5c4>
8000f7e4:	8fa40020 	lw	a0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1290
		goto execve_exit;

	put_kargv(argc, kargv);
8000f7e8:	0c0037b5 	jal	8000ded4 <put_kargv>
8000f7ec:	27a5015c 	addiu	a1,sp,348
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1291
	put_kargv(envc, kenvp);
8000f7f0:	8fa4001c 	lw	a0,28(sp)
8000f7f4:	0c0037b5 	jal	8000ded4 <put_kargv>
8000f7f8:	27a500dc 	addiu	a1,sp,220
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1301
	put_kargv(envc, kenvp);
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
	panic("already exit: %e.\n", ret);
}
8000f7fc:	8fbf0214 	lw	ra,532(sp)
8000f800:	02201021 	move	v0,s1
8000f804:	8fbe0210 	lw	s8,528(sp)
8000f808:	8fb7020c 	lw	s7,524(sp)
8000f80c:	8fb60208 	lw	s6,520(sp)
8000f810:	8fb50204 	lw	s5,516(sp)
8000f814:	8fb40200 	lw	s4,512(sp)
8000f818:	8fb301fc 	lw	s3,508(sp)
8000f81c:	8fb201f8 	lw	s2,504(sp)
8000f820:	8fb101f4 	lw	s1,500(sp)
8000f824:	8fb001f0 	lw	s0,496(sp)
8000f828:	03e00008 	jr	ra
8000f82c:	27bd0218 	addiu	sp,sp,536
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1215
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
		unlock_mm(mm);
		return ret;
	}
	if ((ret = copy_kargv(mm, kenvp, envp, EXEC_MAX_ENV_NUM, &envc)) != 0) {
		unlock_mm(mm);
8000f830:	0c004c29 	jal	800130a4 <unlock_mm>
8000f834:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1216
		put_kargv(argc, kargv);
8000f838:	8fa40020 	lw	a0,32(sp)
8000f83c:	0c0037b5 	jal	8000ded4 <put_kargv>
8000f840:	27a5015c 	addiu	a1,sp,348
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1301
	put_kargv(envc, kenvp);
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
	panic("already exit: %e.\n", ret);
}
8000f844:	8fbf0214 	lw	ra,532(sp)
8000f848:	02201021 	move	v0,s1
8000f84c:	8fbe0210 	lw	s8,528(sp)
8000f850:	8fb7020c 	lw	s7,524(sp)
8000f854:	8fb60208 	lw	s6,520(sp)
8000f858:	8fb50204 	lw	s5,516(sp)
8000f85c:	8fb40200 	lw	s4,512(sp)
8000f860:	8fb301fc 	lw	s3,508(sp)
8000f864:	8fb201f8 	lw	s2,504(sp)
8000f868:	8fb101f4 	lw	s1,500(sp)
8000f86c:	8fb001f0 	lw	s0,496(sp)
8000f870:	03e00008 	jr	ra
8000f874:	27bd0218 	addiu	sp,sp,536
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1211
#endif
	snprintf(local_name, sizeof(local_name), "<null> %d", current->pid);

	int argc = 0, envc = 0;
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
		unlock_mm(mm);
8000f878:	0c004c29 	jal	800130a4 <unlock_mm>
8000f87c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1301
	put_kargv(envc, kenvp);
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
	panic("already exit: %e.\n", ret);
}
8000f880:	8fbf0214 	lw	ra,532(sp)
8000f884:	02201021 	move	v0,s1
8000f888:	8fbe0210 	lw	s8,528(sp)
8000f88c:	8fb7020c 	lw	s7,524(sp)
8000f890:	8fb60208 	lw	s6,520(sp)
8000f894:	8fb50204 	lw	s5,516(sp)
8000f898:	8fb40200 	lw	s4,512(sp)
8000f89c:	8fb301fc 	lw	s3,508(sp)
8000f8a0:	8fb201f8 	lw	s2,504(sp)
8000f8a4:	8fb101f4 	lw	s1,500(sp)
8000f8a8:	8fb001f0 	lw	s0,496(sp)
8000f8ac:	03e00008 	jr	ra
8000f8b0:	27bd0218 	addiu	sp,sp,536
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f8b4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f8b8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f8bc:	8e42001c 	lw	v0,28(s2)
8000f8c0:	2442ffff 	addiu	v0,v0,-1
8000f8c4:	ae42001c 	sw	v0,28(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f8c8:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f8cc:	00000000 	nop
8000f8d0:	08003d98 	j	8000f660 <do_execve+0x108>
8000f8d4:	00000000 	nop
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1248

	if (mm != NULL) {
		mm->lapic = -1;
		mp_set_mm_pagetable(NULL);
		if (mm_count_dec(mm) == 0) {
			exit_mmap(mm);
8000f8d8:	0c004fe2 	jal	80013f88 <exit_mmap>
8000f8dc:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1249
			put_pgdir(mm);
8000f8e0:	0c0037c8 	jal	8000df20 <put_pgdir>
8000f8e4:	02402021 	move	a0,s2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000f8e8:	40026000 	mfc0	v0,c0_status
8000f8ec:	30420001 	andi	v0,v0,0x1
8000f8f0:	14400028 	bnez	v0,8000f994 <do_execve+0x43c>
8000f8f4:	00000000 	nop
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000f8f8:	8e43002c 	lw	v1,44(s2)
8000f8fc:	8e420030 	lw	v0,48(s2)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000f900:	ac620004 	sw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8000f904:	ac430000 	sw	v1,0(v0)
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1256
			local_intr_save(intr_flag);
			{
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
8000f908:	0c004d53 	jal	8001354c <mm_destroy>
8000f90c:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1258
		}
		current->mm = NULL;
8000f910:	08003d9b 	j	8000f66c <do_execve+0x114>
8000f914:	8e0477a4 	lw	a0,30628(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f918:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f91c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f920:	8ea20000 	lw	v0,0(s5)
8000f924:	24420001 	addiu	v0,v0,1
8000f928:	aea20000 	sw	v0,0(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f92c:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f930:	00000000 	nop
8000f934:	08003dbf 	j	8000f6fc <do_execve+0x1a4>
8000f938:	8e5377a4 	lw	s3,30628(s2)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f93c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f940:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f944:	8e420000 	lw	v0,0(s2)
8000f948:	24420001 	addiu	v0,v0,1
8000f94c:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f950:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f954:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1270
	if ((current->signal_info.sighand = sighand_create()) == NULL) {
		goto execve_exit;
	}
	sighand_count_inc(current->signal_info.sighand);

	put_signal(current);
8000f958:	08003daf 	j	8000f6bc <do_execve+0x164>
8000f95c:	8e0477a4 	lw	a0,30628(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f960:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f964:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f968:	8e420014 	lw	v0,20(s2)
8000f96c:	24420001 	addiu	v0,v0,1
8000f970:	ae420014 	sw	v0,20(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f974:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f978:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1281
	if ((current->sem_queue = sem_queue_create()) == NULL) {
		goto execve_exit;
	}
	sem_queue_count_inc(current->sem_queue);

	if ((ret = load_icode(fd, argc, kargv, envc, kenvp)) != 0) {
8000f97c:	08003dce 	j	8000f738 <do_execve+0x1e0>
8000f980:	8fb60020 	lw	s6,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:866
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
	if (current->mm != NULL) {
		panic("load_icode: current->mm must be empty.\n");
	}

	int ret = -E_NO_MEM;
8000f984:	08003dee 	j	8000f7b8 <do_execve+0x260>
8000f988:	2412fff4 	li	s2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1244
	int fd;
	if ((ret = fd = sysfile_open(path, O_RDONLY)) < 0) {
		goto execve_exit;
	}

	if (mm != NULL) {
8000f98c:	08003d9c 	j	8000f670 <do_execve+0x118>
8000f990:	8e0477a4 	lw	a0,30628(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f994:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000f998:	00000000 	nop
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000f99c:	8e43002c 	lw	v1,44(s2)
8000f9a0:	8e420030 	lw	v0,48(s2)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000f9a4:	ac620004 	sw	v0,4(v1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f9a8:	0c006cba 	jal	8001b2e8 <intr_enable>
8000f9ac:	ac430000 	sw	v1,0(v0)
8000f9b0:	08003e42 	j	8000f908 <do_execve+0x3b0>
8000f9b4:	00000000 	nop
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:908

//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
8000f9b8:	97a200d4 	lhu	v0,212(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:906
	uint32_t vm_flags, phnum;
	pte_perm_t perm = 0;

//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
8000f9bc:	afa00018 	sw	zero,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:908
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
8000f9c0:	10400034 	beqz	v0,8000fa94 <do_execve+0x53c>
8000f9c4:	afa001e0 	sw	zero,480(sp)
8000f9c8:	08003e7b 	j	8000f9ec <do_execve+0x494>
8000f9cc:	0000b821 	move	s7,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:922
			is_dynamic = 1;
			interp_idx = phnum;
			continue;
		}

		if (ph->p_type != ELF_PT_LOAD) {
8000f9d0:	10430016 	beq	v0,v1,8000fa2c <do_execve+0x4d4>
8000f9d4:	8fa20068 	lw	v0,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:908

//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
8000f9d8:	97a200d4 	lhu	v0,212(sp)
8000f9dc:	26f70001 	addiu	s7,s7,1
8000f9e0:	02e2102b 	sltu	v0,s7,v0
8000f9e4:	5040002c 	beqzl	v0,8000fa98 <do_execve+0x540>
8000f9e8:	8e620024 	lw	v0,36(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:910
		off_t phoff = elf->e_phoff + sizeof(struct proghdr) * phnum;
		if ((ret =
8000f9ec:	8fa200c4 	lw	v0,196(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1182
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
8000f9f0:	00173940 	sll	a3,s7,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:910
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
		off_t phoff = elf->e_phoff + sizeof(struct proghdr) * phnum;
		if ((ret =
8000f9f4:	02802021 	move	a0,s4
8000f9f8:	27a50054 	addiu	a1,sp,84
8000f9fc:	24060020 	li	a2,32
8000fa00:	0c0037eb 	jal	8000dfac <load_icode_read>
8000fa04:	00e23821 	addu	a3,a3,v0
8000fa08:	1440001e 	bnez	v0,8000fa84 <do_execve+0x52c>
8000fa0c:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:916
		     load_icode_read(fd, ph, sizeof(struct proghdr),
				     phoff)) != 0) {
			goto bad_cleanup_mmap;
		}

		if (ph->p_type == ELF_PT_INTERP) {
8000fa10:	8fa20054 	lw	v0,84(sp)
8000fa14:	24030003 	li	v1,3
8000fa18:	1443ffed 	bne	v0,v1,8000f9d0 <do_execve+0x478>
8000fa1c:	24030001 	li	v1,1
8000fa20:	02e0f021 	move	s8,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:917
			is_dynamic = 1;
8000fa24:	08003e76 	j	8000f9d8 <do_execve+0x480>
8000fa28:	afa301e0 	sw	v1,480(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:925
		}

		if (ph->p_type != ELF_PT_LOAD) {
			continue;
		}
		if (ph->p_filesz > ph->p_memsz) {
8000fa2c:	8fa30064 	lw	v1,100(sp)
8000fa30:	0043102b 	sltu	v0,v0,v1
8000fa34:	1440006f 	bnez	v0,8000fbf4 <do_execve+0x69c>
8000fa38:	8fa2005c 	lw	v0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:930
			ret = -E_INVAL_ELF;
			goto bad_cleanup_mmap;
		}

		if (ph->p_va == 0 && !bias) {
8000fa3c:	8fa30018 	lw	v1,24(sp)
8000fa40:	00621025 	or	v0,v1,v0
8000fa44:	14400003 	bnez	v0,8000fa54 <do_execve+0x4fc>
8000fa48:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:931
			bias = 0x30800000;
8000fa4c:	3c063080 	lui	a2,0x3080
8000fa50:	afa60018 	sw	a2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:934
		}

		if ((ret = map_ph(fd, ph, mm, &bias, 0)) != 0) {
8000fa54:	27a50054 	addiu	a1,sp,84
8000fa58:	02603021 	move	a2,s3
8000fa5c:	27a70018 	addiu	a3,sp,24
8000fa60:	0c00386e 	jal	8000e1b8 <map_ph>
8000fa64:	afa00010 	sw	zero,16(sp)
8000fa68:	1040ffdb 	beqz	v0,8000f9d8 <do_execve+0x480>
8000fa6c:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:935
			kprintf("load address: 0x%08x size: %d\n\r", ph->p_va,
8000fa70:	8fa5005c 	lw	a1,92(sp)
8000fa74:	8fa60068 	lw	a2,104(sp)
8000fa78:	3c048002 	lui	a0,0x8002
8000fa7c:	0c00798a 	jal	8001e628 <kprintf>
8000fa80:	24842778 	addiu	a0,a0,10104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1124
#endif //UCONFIG_BIONIC_LIBC
	ret = 0;
out:
	return ret;
bad_cleanup_mmap:
	exit_mmap(mm);
8000fa84:	0c004fe2 	jal	80013f88 <exit_mmap>
8000fa88:	02602021 	move	a0,s3
8000fa8c:	08003dec 	j	8000f7b0 <do_execve+0x258>
8000fa90:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1013
		   }
		 */
	  /**************************************/
	}

	mm->brk_start = mm->brk = ROUNDUP(mm->brk_start, PGSIZE);
8000fa94:	8e620024 	lw	v0,36(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1017

	/* setup user stack */
	vm_flags = VM_READ | VM_WRITE | VM_STACK;
	if ((ret =
8000fa98:	02602021 	move	a0,s3
8000fa9c:	3c057fff 	lui	a1,0x7fff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1013
		   }
		 */
	  /**************************************/
	}

	mm->brk_start = mm->brk = ROUNDUP(mm->brk_start, PGSIZE);
8000faa0:	24420fff 	addiu	v0,v0,4095
8000faa4:	30430fff 	andi	v1,v0,0xfff
8000faa8:	00431023 	subu	v0,v0,v1
8000faac:	ae620028 	sw	v0,40(s3)
8000fab0:	ae620024 	sw	v0,36(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1017

	/* setup user stack */
	vm_flags = VM_READ | VM_WRITE | VM_STACK;
	if ((ret =
8000fab4:	3c060001 	lui	a2,0x1
8000fab8:	2407000b 	li	a3,11
8000fabc:	0c004e3c 	jal	800138f0 <mm_map>
8000fac0:	afa00010 	sw	zero,16(sp)
8000fac4:	1440ffef 	bnez	v0,8000fa84 <do_execve+0x52c>
8000fac8:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1023
	     mm_map(mm, USTACKTOP - USTACKSIZE, USTACKSIZE, vm_flags,
		    NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (is_dynamic) {
8000facc:	8fa301e0 	lw	v1,480(sp)
8000fad0:	1060001d 	beqz	v1,8000fb48 <do_execve+0x5f0>
8000fad4:	8fa300c0 	lw	v1,192(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1024
		elf->e_entry += bias;
8000fad8:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1029

		bias = 0;

		off_t phoff =
		    elf->e_phoff + sizeof(struct proghdr) * interp_idx;
8000fadc:	001e3940 	sll	a3,s8,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1030
		if ((ret =
8000fae0:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1024
		    NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (is_dynamic) {
		elf->e_entry += bias;
8000fae4:	00621021 	addu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1030

		bias = 0;

		off_t phoff =
		    elf->e_phoff + sizeof(struct proghdr) * interp_idx;
		if ((ret =
8000fae8:	8fa300c4 	lw	v1,196(sp)
8000faec:	27a50054 	addiu	a1,sp,84
8000faf0:	24060020 	li	a2,32
8000faf4:	00e33821 	addu	a3,a3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1024
		    NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (is_dynamic) {
		elf->e_entry += bias;
8000faf8:	afa200c0 	sw	v0,192(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1030

		bias = 0;

		off_t phoff =
		    elf->e_phoff + sizeof(struct proghdr) * interp_idx;
		if ((ret =
8000fafc:	0c0037eb 	jal	8000dfac <load_icode_read>
8000fb00:	afa00018 	sw	zero,24(sp)
8000fb04:	10400053 	beqz	v0,8000fc54 <do_execve+0x6fc>
8000fb08:	00000000 	nop
8000fb0c:	08003ea1 	j	8000fa84 <do_execve+0x52c>
8000fb10:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:866
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
	if (current->mm != NULL) {
		panic("load_icode: current->mm must be empty.\n");
	}

	int ret = -E_NO_MEM;
8000fb14:	2411fff4 	li	s1,-12
do_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1295
	put_kargv(argc, kargv);
	put_kargv(envc, kenvp);
	return 0;

execve_exit:
	put_kargv(argc, kargv);
8000fb18:	8fa40020 	lw	a0,32(sp)
8000fb1c:	0c0037b5 	jal	8000ded4 <put_kargv>
8000fb20:	27a5015c 	addiu	a1,sp,348
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1296
	put_kargv(envc, kenvp);
8000fb24:	8fa4001c 	lw	a0,28(sp)
8000fb28:	0c0037b5 	jal	8000ded4 <put_kargv>
8000fb2c:	27a500dc 	addiu	a1,sp,220
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1299
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
8000fb30:	0c003d34 	jal	8000f4d0 <do_exit>
8000fb34:	02202021 	move	a0,s1
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1090
				       1)) == 0);
		}

		real_entry = interp_elf->e_entry + bias;

		sysfile_close(interp_fd);
8000fb38:	0c0033e6 	jal	8000cf98 <sysfile_close>
8000fb3c:	03c02021 	move	a0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1091
		kfree(interp_path);
8000fb40:	0c0054a3 	jal	8001528c <kfree>
8000fb44:	8fa401ec 	lw	a0,492(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1094
	}

	sysfile_close(fd);
8000fb48:	0c0033e6 	jal	8000cf98 <sysfile_close>
8000fb4c:	02802021 	move	a0,s4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000fb50:	40026000 	mfc0	v0,c0_status
8000fb54:	30420001 	andi	v0,v0,0x1
8000fb58:	14400031 	bnez	v0,8000fc20 <do_execve+0x6c8>
8000fb5c:	3c028015 	lui	v0,0x8015
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000fb60:	24427780 	addiu	v0,v0,30592
8000fb64:	8c430004 	lw	v1,4(v0)
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1099

	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000fb68:	2664002c 	addiu	a0,s3,44
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000fb6c:	ac440004 	sw	a0,4(v0)
8000fb70:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000fb74:	ae630030 	sw	v1,48(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8000fb78:	ae62002c 	sw	v0,44(s3)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8000fb7c:	40026000 	mfc0	v0,c0_status
8000fb80:	30420001 	andi	v0,v0,0x1
8000fb84:	1440001d 	bnez	v0,8000fbfc <do_execve+0x6a4>
8000fb88:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000fb8c:	8e62001c 	lw	v0,28(s3)
8000fb90:	24420001 	addiu	v0,v0,1
8000fb94:	ae62001c 	sw	v0,28(s3)
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1103
	}
	local_intr_restore(intr_flag);
	mm_count_inc(mm);
	current->mm = mm;
8000fb98:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1104
	set_pgdir(current, mm->pgdir);
8000fb9c:	8e650010 	lw	a1,16(s3)
mm_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000fba0:	8e63001c 	lw	v1,28(s3)
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1104
8000fba4:	00402021 	move	a0,v0
8000fba8:	0c0077ec 	jal	8001dfb0 <set_pgdir>
8000fbac:	ac530020 	sw	s3,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1105
	mm->lapic = pls_read(lapic_id);
8000fbb0:	3c028015 	lui	v0,0x8015
8000fbb4:	8c4277b0 	lw	v0,30640(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1106
	mp_set_mm_pagetable(mm);
8000fbb8:	02602021 	move	a0,s3
8000fbbc:	0c007b59 	jal	8001ed64 <mp_set_mm_pagetable>
8000fbc0:	ae620048 	sw	v0,72(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1117
	if (init_new_context_dynamic(current, elf, argc, kargv, envc, kenvp,
				     is_dynamic, real_entry, load_address,
				     bias) < 0)
		goto bad_cleanup_mmap;
#else
	if (init_new_context(current, elf, argc, kargv, envc, kenvp) < 0)
8000fbc4:	8e0477a4 	lw	a0,30628(s0)
8000fbc8:	27a300dc 	addiu	v1,sp,220
8000fbcc:	27a500a8 	addiu	a1,sp,168
8000fbd0:	02c03021 	move	a2,s6
8000fbd4:	27a7015c 	addiu	a3,sp,348
8000fbd8:	afb50010 	sw	s5,16(sp)
8000fbdc:	0c007925 	jal	8001e494 <init_new_context>
8000fbe0:	afa30014 	sw	v1,20(sp)
8000fbe4:	0441fef9 	bgez	v0,8000f7cc <do_execve+0x274>
8000fbe8:	8e0477a4 	lw	a0,30628(s0)
8000fbec:	08003ea1 	j	8000fa84 <do_execve+0x52c>
8000fbf0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:926

		if (ph->p_type != ELF_PT_LOAD) {
			continue;
		}
		if (ph->p_filesz > ph->p_memsz) {
			ret = -E_INVAL_ELF;
8000fbf4:	08003ea1 	j	8000fa84 <do_execve+0x52c>
8000fbf8:	2412fff8 	li	s2,-8
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000fbfc:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000fc00:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000fc04:	8e62001c 	lw	v0,28(s3)
8000fc08:	24420001 	addiu	v0,v0,1
8000fc0c:	ae62001c 	sw	v0,28(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000fc10:	0c006cba 	jal	8001b2e8 <intr_enable>
8000fc14:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1103
	{
		list_add(&(proc_mm_list), &(mm->proc_mm_link));
	}
	local_intr_restore(intr_flag);
	mm_count_inc(mm);
	current->mm = mm;
8000fc18:	08003ee7 	j	8000fb9c <do_execve+0x644>
8000fc1c:	8e0277a4 	lw	v0,30628(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000fc20:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000fc24:	00000000 	nop
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000fc28:	3c028015 	lui	v0,0x8015
8000fc2c:	24427780 	addiu	v0,v0,30592
8000fc30:	8c430004 	lw	v1,4(v0)
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1099
	sysfile_close(fd);

	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000fc34:	2664002c 	addiu	a0,s3,44
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000fc38:	ac440004 	sw	a0,4(v0)
8000fc3c:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000fc40:	ae630030 	sw	v1,48(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000fc44:	0c006cba 	jal	8001b2e8 <intr_enable>
8000fc48:	ae62002c 	sw	v0,44(s3)
8000fc4c:	08003edf 	j	8000fb7c <do_execve+0x624>
8000fc50:	00000000 	nop
load_icode():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1036
		     load_icode_read(fd, ph, sizeof(struct proghdr),
				     phoff)) != 0) {
			goto bad_cleanup_mmap;
		}

		char *interp_path = (char *)kmalloc(ph->p_filesz);
8000fc54:	0c005478 	jal	800151e0 <kmalloc>
8000fc58:	8fa40064 	lw	a0,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1037
		load_icode_read(fd, interp_path, ph->p_filesz, ph->p_offset);
8000fc5c:	8fa60064 	lw	a2,100(sp)
8000fc60:	8fa70058 	lw	a3,88(sp)
8000fc64:	02802021 	move	a0,s4
8000fc68:	00402821 	move	a1,v0
8000fc6c:	0c0037eb 	jal	8000dfac <load_icode_read>
8000fc70:	afa201ec 	sw	v0,492(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1039

		int interp_fd = sysfile_open(interp_path, O_RDONLY);
8000fc74:	8fa401ec 	lw	a0,492(sp)
8000fc78:	0c0033d1 	jal	8000cf44 <sysfile_open>
8000fc7c:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1040
		assert(interp_fd >= 0);
8000fc80:	04400097 	bltz	v0,8000fee0 <do_execve+0x988>
8000fc84:	0040f021 	move	s8,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1042
		struct elfhdr interp___elf, *interp_elf = &interp___elf;
		assert((ret =
8000fc88:	00402021 	move	a0,v0
8000fc8c:	27a50074 	addiu	a1,sp,116
8000fc90:	24060034 	li	a2,52
8000fc94:	0c0037eb 	jal	8000dfac <load_icode_read>
8000fc98:	00003821 	move	a3,zero
8000fc9c:	14400088 	bnez	v0,8000fec0 <do_execve+0x968>
8000fca0:	8fa30074 	lw	v1,116(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1045
			load_icode_read(interp_fd, interp_elf,
					sizeof(struct elfhdr), 0)) == 0);
		assert(interp_elf->e_magic == ELF_MAGIC);
8000fca4:	3c02464c 	lui	v0,0x464c
8000fca8:	2442457f 	addiu	v0,v0,17791
8000fcac:	1462007c 	bne	v1,v0,8000fea0 <do_execve+0x948>
8000fcb0:	97a200a0 	lhu	v0,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1050

		struct proghdr interp___ph, *interp_ph = &interp___ph;
		uint32_t interp_phnum;
		uint32_t va_min = 0xffffffff, va_max = 0;
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fcb4:	2403ffff 	li	v1,-1
8000fcb8:	afa001e8 	sw	zero,488(sp)
8000fcbc:	10400024 	beqz	v0,8000fd50 <do_execve+0x7f8>
8000fcc0:	afa301e4 	sw	v1,484(sp)
8000fcc4:	27a30034 	addiu	v1,sp,52
8000fcc8:	0000b821 	move	s7,zero
8000fccc:	08003f3a 	j	8000fce8 <do_execve+0x790>
8000fcd0:	afa301e0 	sw	v1,480(sp)
8000fcd4:	97a200a0 	lhu	v0,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1051
		     ++interp_phnum) {
8000fcd8:	26f70001 	addiu	s7,s7,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1050
		assert(interp_elf->e_magic == ELF_MAGIC);

		struct proghdr interp___ph, *interp_ph = &interp___ph;
		uint32_t interp_phnum;
		uint32_t va_min = 0xffffffff, va_max = 0;
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fcdc:	02e2102b 	sltu	v0,s7,v0
8000fce0:	1040001c 	beqz	v0,8000fd54 <do_execve+0x7fc>
8000fce4:	8fa301e8 	lw	v1,488(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1055
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fce8:	8fa20090 	lw	v0,144(sp)
8000fcec:	8fa501e0 	lw	a1,480(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1182
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
8000fcf0:	00173940 	sll	a3,s7,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1055
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fcf4:	03c02021 	move	a0,s8
8000fcf8:	24060020 	li	a2,32
8000fcfc:	0c0037eb 	jal	8000dfac <load_icode_read>
8000fd00:	00e23821 	addu	a3,a3,v0
8000fd04:	14400062 	bnez	v0,8000fe90 <do_execve+0x938>
8000fd08:	8fa20034 	lw	v0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1059
				load_icode_read(interp_fd, interp_ph,
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
8000fd0c:	24060001 	li	a2,1
8000fd10:	1446fff1 	bne	v0,a2,8000fcd8 <do_execve+0x780>
8000fd14:	97a200a0 	lhu	v0,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1062
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd18:	8fa2003c 	lw	v0,60(sp)
8000fd1c:	8fa301e4 	lw	v1,484(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd20:	8fa601e8 	lw	a2,488(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1062
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd24:	0043282b 	sltu	a1,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd28:	8fa30048 	lw	v1,72(sp)
8000fd2c:	00431821 	addu	v1,v0,v1
8000fd30:	00c3202b 	sltu	a0,a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1062
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd34:	8fa601e4 	lw	a2,484(sp)
8000fd38:	0045300b 	movn	a2,v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd3c:	8fa201e8 	lw	v0,488(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1062
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd40:	afa601e4 	sw	a2,484(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd44:	0064100b 	movn	v0,v1,a0
8000fd48:	08003f35 	j	8000fcd4 <do_execve+0x77c>
8000fd4c:	afa201e8 	sw	v0,488(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1068
				va_max = interp_ph->p_va + interp_ph->p_memsz;
		}

		bias = get_unmapped_area(mm, va_max - va_min + 1 + PGSIZE);
8000fd50:	8fa301e8 	lw	v1,488(sp)
8000fd54:	02602021 	move	a0,s3
8000fd58:	24651001 	addiu	a1,v1,4097
8000fd5c:	8fa301e4 	lw	v1,484(sp)
8000fd60:	0c00500e 	jal	80014038 <get_unmapped_area>
8000fd64:	00a32823 	subu	a1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1069
		bias = ROUNDUP(bias, PGSIZE);
8000fd68:	24420fff 	addiu	v0,v0,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1071

		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fd6c:	97a300a0 	lhu	v1,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1069
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
				va_max = interp_ph->p_va + interp_ph->p_memsz;
		}

		bias = get_unmapped_area(mm, va_max - va_min + 1 + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);
8000fd70:	30440fff 	andi	a0,v0,0xfff
8000fd74:	00441023 	subu	v0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1071

		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fd78:	1060ff6f 	beqz	v1,8000fb38 <do_execve+0x5e0>
8000fd7c:	afa20018 	sw	v0,24(sp)
8000fd80:	27a30034 	addiu	v1,sp,52
8000fd84:	0000b821 	move	s7,zero
8000fd88:	08003f68 	j	8000fda0 <do_execve+0x848>
8000fd8c:	afa301e0 	sw	v1,480(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1072
		     ++interp_phnum) {
8000fd90:	26f70001 	addiu	s7,s7,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1071
		}

		bias = get_unmapped_area(mm, va_max - va_min + 1 + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);

		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fd94:	02e2102b 	sltu	v0,s7,v0
8000fd98:	1040ff67 	beqz	v0,8000fb38 <do_execve+0x5e0>
8000fd9c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1076
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fda0:	8fa20090 	lw	v0,144(sp)
8000fda4:	8fa501e0 	lw	a1,480(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1182
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
8000fda8:	00173940 	sll	a3,s7,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1076
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fdac:	03c02021 	move	a0,s8
8000fdb0:	24060020 	li	a2,32
8000fdb4:	0c0037eb 	jal	8000dfac <load_icode_read>
8000fdb8:	00e23821 	addu	a3,a3,v0
8000fdbc:	1440002c 	bnez	v0,8000fe70 <do_execve+0x918>
8000fdc0:	8fa20034 	lw	v0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1080
				load_icode_read(interp_fd, interp_ph,
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
8000fdc4:	24060001 	li	a2,1
8000fdc8:	1446fff1 	bne	v0,a2,8000fd90 <do_execve+0x838>
8000fdcc:	97a200a0 	lhu	v0,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1083
				continue;
			}
			assert((ret =
8000fdd0:	8fa501e0 	lw	a1,480(sp)
8000fdd4:	24020001 	li	v0,1
8000fdd8:	03c02021 	move	a0,s8
8000fddc:	02603021 	move	a2,s3
8000fde0:	27a70018 	addiu	a3,sp,24
8000fde4:	0c00386e 	jal	8000e1b8 <map_ph>
8000fde8:	afa20010 	sw	v0,16(sp)
8000fdec:	1040ffe8 	beqz	v0,8000fd90 <do_execve+0x838>
8000fdf0:	97a200a0 	lhu	v0,160(sp)
8000fdf4:	3c048002 	lui	a0,0x8002
8000fdf8:	3c068002 	lui	a2,0x8002
8000fdfc:	3c078002 	lui	a3,0x8002
8000fe00:	24842610 	addiu	a0,a0,9744
8000fe04:	2405043d 	li	a1,1085
8000fe08:	24c609b0 	addiu	a2,a2,2480
8000fe0c:	0c006afd 	jal	8001abf4 <__panic>
8000fe10:	24e72878 	addiu	a3,a3,10360
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:863
static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
	if (current->mm != NULL) {
		panic("load_icode: current->mm must be empty.\n");
8000fe14:	3c068002 	lui	a2,0x8002
8000fe18:	24842610 	addiu	a0,a0,9744
8000fe1c:	2405035f 	li	a1,863
8000fe20:	0c006afd 	jal	8001abf4 <__panic>
8000fe24:	24c62750 	addiu	a2,a2,10064
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:861
//#endif //UCONFIG_BIONIC_LIBC

static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
8000fe28:	3c048002 	lui	a0,0x8002
8000fe2c:	3c068002 	lui	a2,0x8002
8000fe30:	3c078002 	lui	a3,0x8002
8000fe34:	24842610 	addiu	a0,a0,9744
8000fe38:	2405035d 	li	a1,861
8000fe3c:	24c609b0 	addiu	a2,a2,2480
8000fe40:	0c006afd 	jal	8001abf4 <__panic>
8000fe44:	24e72728 	addiu	a3,a3,10024
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:860

//#endif //UCONFIG_BIONIC_LIBC

static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
8000fe48:	3c048002 	lui	a0,0x8002
8000fe4c:	3c068002 	lui	a2,0x8002
8000fe50:	3c078002 	lui	a3,0x8002
8000fe54:	24842610 	addiu	a0,a0,9744
8000fe58:	2405035c 	li	a1,860
8000fe5c:	24c609b0 	addiu	a2,a2,2480
8000fe60:	0c006afd 	jal	8001abf4 <__panic>
8000fe64:	24e72700 	addiu	a3,a3,9984
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1240
	//fs_closeall(current->fs_struct);

	/* sysfile_open will check the first argument path, thus we have to use a user-space pointer, and argv[0] may be incorrect */

	int fd;
	if ((ret = fd = sysfile_open(path, O_RDONLY)) < 0) {
8000fe68:	08003ec6 	j	8000fb18 <do_execve+0x5c0>
8000fe6c:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1076
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fe70:	3c048002 	lui	a0,0x8002
8000fe74:	24842610 	addiu	a0,a0,9744
8000fe78:	24050437 	li	a1,1079
8000fe7c:	3c068002 	lui	a2,0x8002
8000fe80:	3c078002 	lui	a3,0x8002
8000fe84:	24c609b0 	addiu	a2,a2,2480
8000fe88:	0c006afd 	jal	8001abf4 <__panic>
8000fe8c:	24e7281c 	addiu	a3,a3,10268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1055
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fe90:	3c048002 	lui	a0,0x8002
8000fe94:	24842610 	addiu	a0,a0,9744
8000fe98:	08003f9f 	j	8000fe7c <do_execve+0x924>
8000fe9c:	24050422 	li	a1,1058
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1045
		assert(interp_fd >= 0);
		struct elfhdr interp___elf, *interp_elf = &interp___elf;
		assert((ret =
			load_icode_read(interp_fd, interp_elf,
					sizeof(struct elfhdr), 0)) == 0);
		assert(interp_elf->e_magic == ELF_MAGIC);
8000fea0:	3c048002 	lui	a0,0x8002
8000fea4:	3c068002 	lui	a2,0x8002
8000fea8:	3c078002 	lui	a3,0x8002
8000feac:	24842610 	addiu	a0,a0,9744
8000feb0:	24050415 	li	a1,1045
8000feb4:	24c609b0 	addiu	a2,a2,2480
8000feb8:	0c006afd 	jal	8001abf4 <__panic>
8000febc:	24e727f8 	addiu	a3,a3,10232
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1042
		load_icode_read(fd, interp_path, ph->p_filesz, ph->p_offset);

		int interp_fd = sysfile_open(interp_path, O_RDONLY);
		assert(interp_fd >= 0);
		struct elfhdr interp___elf, *interp_elf = &interp___elf;
		assert((ret =
8000fec0:	3c048002 	lui	a0,0x8002
8000fec4:	3c068002 	lui	a2,0x8002
8000fec8:	3c078002 	lui	a3,0x8002
8000fecc:	24842610 	addiu	a0,a0,9744
8000fed0:	24050414 	li	a1,1044
8000fed4:	24c609b0 	addiu	a2,a2,2480
8000fed8:	0c006afd 	jal	8001abf4 <__panic>
8000fedc:	24e727a8 	addiu	a3,a3,10152
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1040

		char *interp_path = (char *)kmalloc(ph->p_filesz);
		load_icode_read(fd, interp_path, ph->p_filesz, ph->p_offset);

		int interp_fd = sysfile_open(interp_path, O_RDONLY);
		assert(interp_fd >= 0);
8000fee0:	3c048002 	lui	a0,0x8002
8000fee4:	3c068002 	lui	a2,0x8002
8000fee8:	3c078002 	lui	a3,0x8002
8000feec:	24842610 	addiu	a0,a0,9744
8000fef0:	24050410 	li	a1,1040
8000fef4:	24c609b0 	addiu	a2,a2,2480
8000fef8:	0c006afd 	jal	8001abf4 <__panic>
8000fefc:	24e72798 	addiu	a3,a3,10136

8000ff00 <do_yield>:
do_yield():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1306
}

// do_yield - ask the scheduler to reschedule
int do_yield(void)
{
	current->need_resched = 1;
8000ff00:	3c028015 	lui	v0,0x8015
8000ff04:	8c4377a4 	lw	v1,30628(v0)
8000ff08:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1308
	return 0;
}
8000ff0c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1306
}

// do_yield - ask the scheduler to reschedule
int do_yield(void)
{
	current->need_resched = 1;
8000ff10:	ac640018 	sw	a0,24(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1308
	return 0;
}
8000ff14:	03e00008 	jr	ra
8000ff18:	00000000 	nop

8000ff1c <do_wait>:
do_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1314

// do_wait - wait one OR any children with PROC_ZOMBIE state, and free memory space of kernel stack
//         - proc struct of this child.
// NOTE: only after do_wait function, all resources of the child proces are free.
int do_wait(int pid, int *code_store)
{
8000ff1c:	27bdffb8 	addiu	sp,sp,-72
8000ff20:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1315
	struct mm_struct *mm = current->mm;
8000ff24:	3c108015 	lui	s0,0x8015
8000ff28:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1314

// do_wait - wait one OR any children with PROC_ZOMBIE state, and free memory space of kernel stack
//         - proc struct of this child.
// NOTE: only after do_wait function, all resources of the child proces are free.
int do_wait(int pid, int *code_store)
{
8000ff2c:	afb30030 	sw	s3,48(sp)
8000ff30:	afb2002c 	sw	s2,44(sp)
8000ff34:	afb10028 	sw	s1,40(sp)
8000ff38:	afbf0044 	sw	ra,68(sp)
8000ff3c:	afb70040 	sw	s7,64(sp)
8000ff40:	afb6003c 	sw	s6,60(sp)
8000ff44:	afb50038 	sw	s5,56(sp)
8000ff48:	afb40034 	sw	s4,52(sp)
8000ff4c:	00a09821 	move	s3,a1
8000ff50:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1316
	struct mm_struct *mm = current->mm;
	if (code_store != NULL) {
8000ff54:	10a00007 	beqz	a1,8000ff74 <do_wait+0x58>
8000ff58:	8c520020 	lw	s2,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1317
		if (!user_mem_check(mm, (uintptr_t) code_store, sizeof(int), 1)) {
8000ff5c:	02402021 	move	a0,s2
8000ff60:	24060004 	li	a2,4
8000ff64:	0c005069 	jal	800141a4 <user_mem_check>
8000ff68:	24070001 	li	a3,1
8000ff6c:	1040004b 	beqz	v0,8001009c <do_wait+0x180>
8000ff70:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1375
		} while (cproc != current);
	}
*/
	if (haskid) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_CHILD;
8000ff74:	3c158000 	lui	s5,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1331
	haskid = 0;
	if (pid != 0) {
    	proc = find_proc(pid);
            if (proc != NULL && proc->parent == current) {
         	haskid = 1;
                if (proc->state == PROC_ZOMBIE) {
8000ff78:	24140003 	li	s4,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1374
			cproc = next_thread(cproc);
		} while (cproc != current);
	}
*/
	if (haskid) {
		current->state = PROC_SLEEPING;
8000ff7c:	24160001 	li	s6,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1375
		current->wait_state = WT_CHILD;
8000ff80:	26b50001 	addiu	s5,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1327
	struct proc_struct *proc;//, *cproc;
	bool intr_flag, haskid;
repeat:
	//cproc = current;
	haskid = 0;
	if (pid != 0) {
8000ff84:	16200050 	bnez	s1,800100c8 <do_wait+0x1ac>
8000ff88:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1337
                   goto found;
                }
            }
        }
        else {
            proc = current->cptr;
8000ff8c:	8c570088 	lw	s7,136(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1338
            for (; proc != NULL; proc = proc->optr) {
8000ff90:	56e00006 	bnezl	s7,8000ffac <do_wait+0x90>
8000ff94:	8ee30000 	lw	v1,0(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1408
			}
		}
		unlock_mm(mm);
	}
	return ret;
}
8000ff98:	08004045 	j	80010114 <do_wait+0x1f8>
8000ff9c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1338
                }
            }
        }
        else {
            proc = current->cptr;
            for (; proc != NULL; proc = proc->optr) {
8000ffa0:	52e00055 	beqzl	s7,800100f8 <do_wait+0x1dc>
8000ffa4:	ac560000 	sw	s6,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1340
                haskid = 1;
                if (proc->state == PROC_ZOMBIE) {
8000ffa8:	8ee30000 	lw	v1,0(s7)
8000ffac:	5474fffc 	bnel	v1,s4,8000ffa0 <do_wait+0x84>
8000ffb0:	8ef70090 	lw	s7,144(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1383
		goto repeat;
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
8000ffb4:	3c028015 	lui	v0,0x8015
8000ffb8:	8c4277a8 	lw	v0,30632(v0)
8000ffbc:	12e20062 	beq	s7,v0,80010148 <do_wait+0x22c>
8000ffc0:	3c028015 	lui	v0,0x8015
8000ffc4:	8c427798 	lw	v0,30616(v0)
8000ffc8:	12e20060 	beq	s7,v0,8001014c <do_wait+0x230>
8000ffcc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1386
		panic("wait idleproc or initproc.\n");
	}
	int exit_code = proc->exit_code;
8000ffd0:	8ee20080 	lw	v0,128(s7)
8000ffd4:	afa20010 	sw	v0,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000ffd8:	40026000 	mfc0	v0,c0_status
8000ffdc:	30420001 	andi	v0,v0,0x1
8000ffe0:	10400004 	beqz	v0,8000fff4 <do_wait+0xd8>
8000ffe4:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000ffe8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8000ffec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8000fff0:	24050001 	li	a1,1
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000fff4:	8ee40078 	lw	a0,120(s7)
8000fff8:	8ee3007c 	lw	v1,124(s7)
remove_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:130

// remove_links - clean the relation links of process
static void remove_links(struct proc_struct *proc)
{
	list_del(&(proc->list_link));
	if (proc->optr != NULL) {
8000fffc:	8ee20090 	lw	v0,144(s7)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80010000:	ac830004 	sw	v1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80010004:	ac640000 	sw	a0,0(v1)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80010008:	8ee40070 	lw	a0,112(s7)
8001000c:	8ee30074 	lw	v1,116(s7)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80010010:	ac830004 	sw	v1,4(a0)
remove_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:130
80010014:	10400003 	beqz	v0,80010024 <do_wait+0x108>
80010018:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:131
		proc->optr->yptr = proc->yptr;
8001001c:	8ee3008c 	lw	v1,140(s7)
80010020:	ac43008c 	sw	v1,140(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:133
	}
	if (proc->yptr != NULL) {
80010024:	8ee3008c 	lw	v1,140(s7)
80010028:	50600045 	beqzl	v1,80010140 <do_wait+0x224>
8001002c:	8ee3001c 	lw	v1,28(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:134
		proc->yptr->optr = proc->optr;
80010030:	ac620090 	sw	v0,144(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:138
	} else {
		proc->parent->cptr = proc->optr;
	}
	nr_process--;
80010034:	3c028015 	lui	v0,0x8015
80010038:	8c436548 	lw	v1,25928(v0)
8001003c:	2463ffff 	addiu	v1,v1,-1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80010040:	10a00003 	beqz	a1,80010050 <do_wait+0x134>
80010044:	ac436548 	sw	v1,25928(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80010048:	0c006cba 	jal	8001b2e8 <intr_enable>
8001004c:	00000000 	nop
do_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1393
	{
		unhash_proc(proc);
		remove_links(proc);
	}
	local_intr_restore(intr_flag);
	put_kstack(proc);
80010050:	0c003abd 	jal	8000eaf4 <put_kstack>
80010054:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1394
	kfree(proc);
80010058:	0c0054a3 	jal	8001528c <kfree>
8001005c:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1397

	int ret = 0;
	if (code_store != NULL) {
80010060:	1260000e 	beqz	s3,8001009c <do_wait+0x180>
80010064:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1398
		lock_mm(mm);
80010068:	0c004c18 	jal	80013060 <lock_mm>
8001006c:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1401
		{
			if (!copy_to_user
			    (mm, code_store, &exit_code, sizeof(int))) {
80010070:	02402021 	move	a0,s2
80010074:	02602821 	move	a1,s3
80010078:	27a60010 	addiu	a2,sp,16
8001007c:	0c007834 	jal	8001e0d0 <copy_to_user>
80010080:	24070004 	li	a3,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1396
	}
	local_intr_restore(intr_flag);
	put_kstack(proc);
	kfree(proc);

	int ret = 0;
80010084:	2403ffea 	li	v1,-22
80010088:	0002180b 	movn	v1,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1405
			if (!copy_to_user
			    (mm, code_store, &exit_code, sizeof(int))) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8001008c:	02402021 	move	a0,s2
80010090:	0c004c29 	jal	800130a4 <unlock_mm>
80010094:	afa30018 	sw	v1,24(sp)
80010098:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1408
	}
	return ret;
}
8001009c:	8fbf0044 	lw	ra,68(sp)
800100a0:	8fb70040 	lw	s7,64(sp)
800100a4:	8fb6003c 	lw	s6,60(sp)
800100a8:	8fb50038 	lw	s5,56(sp)
800100ac:	8fb40034 	lw	s4,52(sp)
800100b0:	8fb30030 	lw	s3,48(sp)
800100b4:	8fb2002c 	lw	s2,44(sp)
800100b8:	8fb10028 	lw	s1,40(sp)
800100bc:	8fb00024 	lw	s0,36(sp)
800100c0:	03e00008 	jr	ra
800100c4:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1328
	bool intr_flag, haskid;
repeat:
	//cproc = current;
	haskid = 0;
	if (pid != 0) {
    	proc = find_proc(pid);
800100c8:	0c003b36 	jal	8000ecd8 <find_proc>
800100cc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1329
            if (proc != NULL && proc->parent == current) {
800100d0:	1040000f 	beqz	v0,80010110 <do_wait+0x1f4>
800100d4:	0040b821 	move	s7,v0
800100d8:	8c42001c 	lw	v0,28(v0)
800100dc:	8e0377a4 	lw	v1,30628(s0)
800100e0:	1443000c 	bne	v0,v1,80010114 <do_wait+0x1f8>
800100e4:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1331
         	haskid = 1;
                if (proc->state == PROC_ZOMBIE) {
800100e8:	8ee30000 	lw	v1,0(s7)
800100ec:	5074ffb2 	beql	v1,s4,8000ffb8 <do_wait+0x9c>
800100f0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1374
			cproc = next_thread(cproc);
		} while (cproc != current);
	}
*/
	if (haskid) {
		current->state = PROC_SLEEPING;
800100f4:	ac560000 	sw	s6,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1376
		current->wait_state = WT_CHILD;
		schedule();
800100f8:	0c00059e 	jal	80001678 <schedule>
800100fc:	ac550084 	sw	s5,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1377
		may_killed();
80010100:	0c003b53 	jal	8000ed4c <may_killed>
80010104:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1378
		goto repeat;
80010108:	08003fe1 	j	8000ff84 <do_wait+0x68>
8001010c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1408
			}
		}
		unlock_mm(mm);
	}
	return ret;
}
80010110:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1380
		current->wait_state = WT_CHILD;
		schedule();
		may_killed();
		goto repeat;
	}
	return -E_BAD_PROC;
80010114:	2402fffd 	li	v0,-3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1408
			}
		}
		unlock_mm(mm);
	}
	return ret;
}
80010118:	8fb70040 	lw	s7,64(sp)
8001011c:	8fb6003c 	lw	s6,60(sp)
80010120:	8fb50038 	lw	s5,56(sp)
80010124:	8fb40034 	lw	s4,52(sp)
80010128:	8fb30030 	lw	s3,48(sp)
8001012c:	8fb2002c 	lw	s2,44(sp)
80010130:	8fb10028 	lw	s1,40(sp)
80010134:	8fb00024 	lw	s0,36(sp)
80010138:	03e00008 	jr	ra
8001013c:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:136
		proc->optr->yptr = proc->yptr;
	}
	if (proc->yptr != NULL) {
		proc->yptr->optr = proc->optr;
	} else {
		proc->parent->cptr = proc->optr;
80010140:	0800400d 	j	80010034 <do_wait+0x118>
80010144:	ac620088 	sw	v0,136(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1384
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
		panic("wait idleproc or initproc.\n");
80010148:	3c048002 	lui	a0,0x8002
8001014c:	3c068002 	lui	a2,0x8002
80010150:	24842610 	addiu	a0,a0,9744
80010154:	24050568 	li	a1,1384
80010158:	0c006afd 	jal	8001abf4 <__panic>
8001015c:	24c628b0 	addiu	a2,a2,10416

80010160 <init_main>:
init_main():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1984
{
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n\r");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
80010160:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1979
	kprintf("user_main execve failed, no /bin/sh?.\n\r");
}

// init_main - the second kernel thread used to create kswapd_main & user_main kernel threads
static int init_main(void *arg)
{
80010164:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1984
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n\r");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
80010168:	248428cc 	addiu	a0,a0,10444
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1979
	kprintf("user_main execve failed, no /bin/sh?.\n\r");
}

// init_main - the second kernel thread used to create kswapd_main & user_main kernel threads
static int init_main(void *arg)
{
8001016c:	afbf0024 	sw	ra,36(sp)
80010170:	afb30020 	sw	s3,32(sp)
80010174:	afb2001c 	sw	s2,28(sp)
80010178:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1984
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n\r");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
8001017c:	0c0011bd 	jal	800046f4 <vfs_set_bootfs>
80010180:	afb00014 	sw	s0,20(sp)
80010184:	14400039 	bnez	v0,8001026c <init_main+0x10c>
80010188:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1990
		panic("set boot fs failed: %e.\n\r", ret);
	}
#ifdef DEBUG_PROCESS
	kprintf("exit vfs_set_bootfs\n\r");
#endif
	size_t nr_used_pages_store = nr_used_pages();
8001018c:	0c007806 	jal	8001e018 <nr_used_pages>
80010190:	3c108015 	lui	s0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1991
	size_t slab_allocated_store = slab_allocated();
80010194:	0c005444 	jal	80015110 <slab_allocated>
80010198:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1998
	unsigned int nr_process_store = nr_process;

#ifdef DEBUG_PROCESS
	kprintf("create thread\n\r");
#endif
	int pid = ucore_kernel_thread(user_main, NULL, 0);
8001019c:	3c048001 	lui	a0,0x8001
800101a0:	2484de34 	addiu	a0,a0,-8652
800101a4:	00002821 	move	a1,zero
800101a8:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1991
	}
#ifdef DEBUG_PROCESS
	kprintf("exit vfs_set_bootfs\n\r");
#endif
	size_t nr_used_pages_store = nr_used_pages();
	size_t slab_allocated_store = slab_allocated();
800101ac:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1998
	unsigned int nr_process_store = nr_process;

#ifdef DEBUG_PROCESS
	kprintf("create thread\n\r");
#endif
	int pid = ucore_kernel_thread(user_main, NULL, 0);
800101b0:	0c007921 	jal	8001e484 <ucore_kernel_thread>
800101b4:	8e116548 	lw	s1,25928(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1999
	if (pid <= 0) {
800101b8:	5c400008 	bgtzl	v0,800101dc <init_main+0x7c>
800101bc:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2000
		panic("create user_main failed.\n\r");
800101c0:	080040b6 	j	800102d8 <init_main+0x178>
800101c4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2006
	}
#ifdef DEBUG_PROCESS
	kprintf("sche thread\n\r");
#endif
	while (do_wait(0, NULL) == 0) {
		if (nr_process_store == nr_process) {
800101c8:	12220008 	beq	s1,v0,800101ec <init_main+0x8c>
800101cc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2009
			break;
		}
		schedule();
800101d0:	0c00059e 	jal	80001678 <schedule>
800101d4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2005
		panic("create user_main failed.\n\r");
	}
#ifdef DEBUG_PROCESS
	kprintf("sche thread\n\r");
#endif
	while (do_wait(0, NULL) == 0) {
800101d8:	00002021 	move	a0,zero
800101dc:	0c003fc7 	jal	8000ff1c <do_wait>
800101e0:	00002821 	move	a1,zero
800101e4:	1040fff8 	beqz	v0,800101c8 <init_main+0x68>
800101e8:	8e026548 	lw	v0,25928(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2022
		}
		schedule();
	}
#endif

	mbox_cleanup();
800101ec:	0c006603 	jal	8001980c <mbox_cleanup>
800101f0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2023
	fs_cleanup();
800101f4:	0c00326b 	jal	8000c9ac <fs_cleanup>
800101f8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2025

	kprintf("all user-mode processes have quit.\n\r");
800101fc:	3c048002 	lui	a0,0x8002
80010200:	0c00798a 	jal	8001e628 <kprintf>
80010204:	2484290c 	addiu	a0,a0,10508
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2033
	       && initproc->optr == NULL);
	assert(kswapd->cptr == NULL && kswapd->yptr == NULL
	       && kswapd->optr == NULL);
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
80010208:	3c028015 	lui	v0,0x8015
8001020c:	8c4377a0 	lw	v1,30624(v0)
80010210:	8e026548 	lw	v0,25928(s0)
80010214:	24630001 	addiu	v1,v1,1
80010218:	14620028 	bne	v1,v0,800102bc <init_main+0x15c>
8001021c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2035
#endif
	assert(nr_used_pages_store == nr_used_pages());
80010220:	0c007806 	jal	8001e018 <nr_used_pages>
80010224:	00000000 	nop
80010228:	1662001d 	bne	s3,v0,800102a0 <init_main+0x140>
8001022c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2036
	assert(slab_allocated_store == slab_allocated());
80010230:	0c005444 	jal	80015110 <slab_allocated>
80010234:	00000000 	nop
80010238:	54520012 	bnel	v0,s2,80010284 <init_main+0x124>
8001023c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2037
	kprintf("init check memory pass.\n\r");
80010240:	3c048002 	lui	a0,0x8002
80010244:	0c00798a 	jal	8001e628 <kprintf>
80010248:	248429b0 	addiu	a0,a0,10672
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2039
	return 0;
}
8001024c:	8fbf0024 	lw	ra,36(sp)
80010250:	00001021 	move	v0,zero
80010254:	8fb30020 	lw	s3,32(sp)
80010258:	8fb2001c 	lw	s2,28(sp)
8001025c:	8fb10018 	lw	s1,24(sp)
80010260:	8fb00014 	lw	s0,20(sp)
80010264:	03e00008 	jr	ra
80010268:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1985
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n\r");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
		panic("set boot fs failed: %e.\n\r", ret);
8001026c:	3c068002 	lui	a2,0x8002
80010270:	24842610 	addiu	a0,a0,9744
80010274:	240507c1 	li	a1,1985
80010278:	24c628d4 	addiu	a2,a2,10452
8001027c:	0c006afd 	jal	8001abf4 <__panic>
80010280:	00403821 	move	a3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2036
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
#endif
	assert(nr_used_pages_store == nr_used_pages());
	assert(slab_allocated_store == slab_allocated());
80010284:	3c068002 	lui	a2,0x8002
80010288:	3c078002 	lui	a3,0x8002
8001028c:	24842610 	addiu	a0,a0,9744
80010290:	240507f4 	li	a1,2036
80010294:	24c609b0 	addiu	a2,a2,2480
80010298:	0c006afd 	jal	8001abf4 <__panic>
8001029c:	24e72984 	addiu	a3,a3,10628
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2035
	       && kswapd->optr == NULL);
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
#endif
	assert(nr_used_pages_store == nr_used_pages());
800102a0:	3c068002 	lui	a2,0x8002
800102a4:	3c078002 	lui	a3,0x8002
800102a8:	24842610 	addiu	a0,a0,9744
800102ac:	240507f3 	li	a1,2035
800102b0:	24c609b0 	addiu	a2,a2,2480
800102b4:	0c006afd 	jal	8001abf4 <__panic>
800102b8:	24e7295c 	addiu	a3,a3,10588
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2033
	       && initproc->optr == NULL);
	assert(kswapd->cptr == NULL && kswapd->yptr == NULL
	       && kswapd->optr == NULL);
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
800102bc:	3c068002 	lui	a2,0x8002
800102c0:	3c078002 	lui	a3,0x8002
800102c4:	24842610 	addiu	a0,a0,9744
800102c8:	240507f1 	li	a1,2033
800102cc:	24c609b0 	addiu	a2,a2,2480
800102d0:	0c006afd 	jal	8001abf4 <__panic>
800102d4:	24e72934 	addiu	a3,a3,10548
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2000
#ifdef DEBUG_PROCESS
	kprintf("create thread\n\r");
#endif
	int pid = ucore_kernel_thread(user_main, NULL, 0);
	if (pid <= 0) {
		panic("create user_main failed.\n\r");
800102d8:	3c068002 	lui	a2,0x8002
800102dc:	24842610 	addiu	a0,a0,9744
800102e0:	240507d0 	li	a1,2000
800102e4:	0c006afd 	jal	8001abf4 <__panic>
800102e8:	24c628f0 	addiu	a2,a2,10480

800102ec <do_linux_waitpid>:
do_linux_waitpid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1411
	}
	return ret;
}

int do_linux_waitpid(int pid, int *code_store)
{
800102ec:	27bdffb8 	addiu	sp,sp,-72
800102f0:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1412
	struct mm_struct *mm = current->mm;
800102f4:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1411
	}
	return ret;
}

int do_linux_waitpid(int pid, int *code_store)
{
800102f8:	afb40034 	sw	s4,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1412
	struct mm_struct *mm = current->mm;
800102fc:	8e3477a4 	lw	s4,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1411
	}
	return ret;
}

int do_linux_waitpid(int pid, int *code_store)
{
80010300:	afb30030 	sw	s3,48(sp)
80010304:	afb2002c 	sw	s2,44(sp)
80010308:	afb00024 	sw	s0,36(sp)
8001030c:	afbf0044 	sw	ra,68(sp)
80010310:	afb70040 	sw	s7,64(sp)
80010314:	afb6003c 	sw	s6,60(sp)
80010318:	afb50038 	sw	s5,56(sp)
8001031c:	00a09821 	move	s3,a1
80010320:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1413
	struct mm_struct *mm = current->mm;
	if (code_store != NULL) {
80010324:	10a00007 	beqz	a1,80010344 <do_linux_waitpid+0x58>
80010328:	8e920020 	lw	s2,32(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1414
		if (!user_mem_check(mm, (uintptr_t) code_store, sizeof(int), 1)) {
8001032c:	02402021 	move	a0,s2
80010330:	24060004 	li	a2,4
80010334:	0c005069 	jal	800141a4 <user_mem_check>
80010338:	24070001 	li	a3,1
8001033c:	1040006c 	beqz	v0,800104f0 <do_linux_waitpid+0x204>
80010340:	8e3477a4 	lw	s4,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1440
				cproc = next_thread(cproc);
			} while (cproc != current);
		}
	}
	/* we do NOT have group id, so.. */
	else if (pid == 0 || pid == -1) {	/* pid == 0 */
80010344:	26170001 	addiu	s7,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1457
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_CHILD;
80010348:	3c168000 	lui	s6,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1430
		proc = find_proc(pid);
		if (proc != NULL) {
			do {
				if (proc->parent == cproc) {
					haskid = 1;
					if (proc->state == PROC_ZOMBIE) {
8001034c:	24150003 	li	s5,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1440
				cproc = next_thread(cproc);
			} while (cproc != current);
		}
	}
	/* we do NOT have group id, so.. */
	else if (pid == 0 || pid == -1) {	/* pid == 0 */
80010350:	2ef70002 	sltiu	s7,s7,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1457
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_CHILD;
80010354:	26d60001 	addiu	s6,s6,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1424
	struct proc_struct *proc, *cproc;
	bool intr_flag, haskid;
repeat:
	cproc = current;
	haskid = 0;
	if (pid > 0) {
80010358:	1a00001a 	blez	s0,800103c4 <do_linux_waitpid+0xd8>
8001035c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1425
		proc = find_proc(pid);
80010360:	0c003b36 	jal	8000ecd8 <find_proc>
80010364:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1426
		if (proc != NULL) {
80010368:	5040000a 	beqzl	v0,80010394 <do_linux_waitpid+0xa8>
8001036c:	2410fffd 	li	s0,-3
80010370:	8c44001c 	lw	a0,28(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1436
						goto found;
					}
					break;
				}
				cproc = next_thread(cproc);
			} while (cproc != current);
80010374:	8e2377a4 	lw	v1,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1428
	haskid = 0;
	if (pid > 0) {
		proc = find_proc(pid);
		if (proc != NULL) {
			do {
				if (proc->parent == cproc) {
80010378:	50940080 	beql	a0,s4,8001057c <do_linux_waitpid+0x290>
8001037c:	8c440000 	lw	a0,0(v0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80010380:	8e940098 	lw	s4,152(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1435
					if (proc->state == PROC_ZOMBIE) {
						goto found;
					}
					break;
				}
				cproc = next_thread(cproc);
80010384:	2694ff6c 	addiu	s4,s4,-148
do_linux_waitpid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1436
			} while (cproc != current);
80010388:	1683fffb 	bne	s4,v1,80010378 <do_linux_waitpid+0x8c>
8001038c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1462
		current->wait_state = WT_CHILD;
		schedule();
		may_killed();
		goto repeat;
	}
	return -E_BAD_PROC;
80010390:	2410fffd 	li	s0,-3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1491
			}
		}
		unlock_mm(mm);
	}
	return (ret == 0) ? return_pid : ret;
}
80010394:	8fbf0044 	lw	ra,68(sp)
80010398:	02001021 	move	v0,s0
8001039c:	8fb70040 	lw	s7,64(sp)
800103a0:	8fb6003c 	lw	s6,60(sp)
800103a4:	8fb50038 	lw	s5,56(sp)
800103a8:	8fb40034 	lw	s4,52(sp)
800103ac:	8fb30030 	lw	s3,48(sp)
800103b0:	8fb2002c 	lw	s2,44(sp)
800103b4:	8fb10028 	lw	s1,40(sp)
800103b8:	8fb00024 	lw	s0,36(sp)
800103bc:	03e00008 	jr	ra
800103c0:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1440
				cproc = next_thread(cproc);
			} while (cproc != current);
		}
	}
	/* we do NOT have group id, so.. */
	else if (pid == 0 || pid == -1) {	/* pid == 0 */
800103c4:	12e0004a 	beqz	s7,800104f0 <do_linux_waitpid+0x204>
800103c8:	02802021 	move	a0,s4
800103cc:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1442
		do {
			proc = cproc->cptr;
800103d0:	8c820088 	lw	v0,136(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1443
			for (; proc != NULL; proc = proc->optr) {
800103d4:	54400006 	bnezl	v0,800103f0 <do_linux_waitpid+0x104>
800103d8:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
800103dc:	0800414a 	j	80010528 <do_linux_waitpid+0x23c>
800103e0:	8c840098 	lw	a0,152(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1443
800103e4:	1040004f 	beqz	v0,80010524 <do_linux_waitpid+0x238>
800103e8:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1445
				haskid = 1;
				if (proc->state == PROC_ZOMBIE) {
800103ec:	8c430000 	lw	v1,0(v0)
800103f0:	5475fffc 	bnel	v1,s5,800103e4 <do_linux_waitpid+0xf8>
800103f4:	8c420090 	lw	v0,144(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1465
		goto repeat;
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
800103f8:	3c038015 	lui	v1,0x8015
800103fc:	8c6377a8 	lw	v1,30632(v1)
80010400:	1043006a 	beq	v0,v1,800105ac <do_linux_waitpid+0x2c0>
80010404:	3c038015 	lui	v1,0x8015
80010408:	8c637798 	lw	v1,30616(v1)
8001040c:	10430068 	beq	v0,v1,800105b0 <do_linux_waitpid+0x2c4>
80010410:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1468
		panic("wait idleproc or initproc.\n\r");
	}
	int exit_code = proc->exit_code;
80010414:	8c510080 	lw	s1,128(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1469
	int return_pid = proc->pid;
80010418:	8c500004 	lw	s0,4(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001041c:	40036000 	mfc0	v1,c0_status
80010420:	30630001 	andi	v1,v1,0x1
80010424:	10600005 	beqz	v1,8001043c <do_linux_waitpid+0x150>
80010428:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001042c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80010430:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80010434:	8fa20018 	lw	v0,24(sp)
80010438:	24060001 	li	a2,1
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001043c:	8c450078 	lw	a1,120(v0)
80010440:	8c44007c 	lw	a0,124(v0)
remove_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:130

// remove_links - clean the relation links of process
static void remove_links(struct proc_struct *proc)
{
	list_del(&(proc->list_link));
	if (proc->optr != NULL) {
80010444:	8c430090 	lw	v1,144(v0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80010448:	aca40004 	sw	a0,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8001044c:	ac850000 	sw	a1,0(a0)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80010450:	8c450070 	lw	a1,112(v0)
80010454:	8c440074 	lw	a0,116(v0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80010458:	aca40004 	sw	a0,4(a1)
remove_links():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:130
8001045c:	10600003 	beqz	v1,8001046c <do_linux_waitpid+0x180>
80010460:	ac850000 	sw	a1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:131
		proc->optr->yptr = proc->yptr;
80010464:	8c44008c 	lw	a0,140(v0)
80010468:	ac64008c 	sw	a0,140(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:133
	}
	if (proc->yptr != NULL) {
8001046c:	8c44008c 	lw	a0,140(v0)
80010470:	5080004c 	beqzl	a0,800105a4 <do_linux_waitpid+0x2b8>
80010474:	8c44001c 	lw	a0,28(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:134
		proc->yptr->optr = proc->optr;
80010478:	ac830090 	sw	v1,144(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:138
	} else {
		proc->parent->cptr = proc->optr;
	}
	nr_process--;
8001047c:	3c038015 	lui	v1,0x8015
80010480:	8c646548 	lw	a0,25928(v1)
80010484:	2484ffff 	addiu	a0,a0,-1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80010488:	10c00004 	beqz	a2,8001049c <do_linux_waitpid+0x1b0>
8001048c:	ac646548 	sw	a0,25928(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80010490:	0c006cba 	jal	8001b2e8 <intr_enable>
80010494:	afa20018 	sw	v0,24(sp)
80010498:	8fa20018 	lw	v0,24(sp)
do_linux_waitpid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1476
	{
		unhash_proc(proc);
		remove_links(proc);
	}
	local_intr_restore(intr_flag);
	put_kstack(proc);
8001049c:	00402021 	move	a0,v0
800104a0:	0c003abd 	jal	8000eaf4 <put_kstack>
800104a4:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1477
	kfree(proc);
800104a8:	8fa20018 	lw	v0,24(sp)
800104ac:	0c0054a3 	jal	8001528c <kfree>
800104b0:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1480

	int ret = 0;
	if (code_store != NULL) {
800104b4:	1260ffb8 	beqz	s3,80010398 <do_linux_waitpid+0xac>
800104b8:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1481
		lock_mm(mm);
800104bc:	0c004c18 	jal	80013060 <lock_mm>
800104c0:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1483
		{
			int status = exit_code << 8;
800104c4:	00111200 	sll	v0,s1,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1484
			if (!copy_to_user(mm, code_store, &status, sizeof(int))) {
800104c8:	02402021 	move	a0,s2
800104cc:	02602821 	move	a1,s3
800104d0:	27a60010 	addiu	a2,sp,16
800104d4:	24070004 	li	a3,4
800104d8:	0c007834 	jal	8001e0d0 <copy_to_user>
800104dc:	afa20010 	sw	v0,16(sp)
800104e0:	14400018 	bnez	v0,80010544 <do_linux_waitpid+0x258>
800104e4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1488
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
800104e8:	0c004c29 	jal	800130a4 <unlock_mm>
800104ec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1491
	}
	return (ret == 0) ? return_pid : ret;
}
800104f0:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1485
	if (code_store != NULL) {
		lock_mm(mm);
		{
			int status = exit_code << 8;
			if (!copy_to_user(mm, code_store, &status, sizeof(int))) {
				ret = -E_INVAL;
800104f4:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1491
			}
		}
		unlock_mm(mm);
	}
	return (ret == 0) ? return_pid : ret;
}
800104f8:	02001021 	move	v0,s0
800104fc:	8fb70040 	lw	s7,64(sp)
80010500:	8fb6003c 	lw	s6,60(sp)
80010504:	8fb50038 	lw	s5,56(sp)
80010508:	8fb40034 	lw	s4,52(sp)
8001050c:	8fb30030 	lw	s3,48(sp)
80010510:	8fb2002c 	lw	s2,44(sp)
80010514:	8fb10028 	lw	s1,40(sp)
80010518:	8fb00024 	lw	s0,36(sp)
8001051c:	03e00008 	jr	ra
80010520:	27bd0048 	addiu	sp,sp,72
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80010524:	8c840098 	lw	a0,152(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1449
				haskid = 1;
				if (proc->state == PROC_ZOMBIE) {
					goto found;
				}
			}
			cproc = next_thread(cproc);
80010528:	2484ff6c 	addiu	a0,a0,-148
do_linux_waitpid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1450
		} while (cproc != current);
8001052c:	5684ffa9 	bnel	s4,a0,800103d4 <do_linux_waitpid+0xe8>
80010530:	8c820088 	lw	v0,136(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1455
	} else {		//pid<-1
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
80010534:	5060ff97 	beqzl	v1,80010394 <do_linux_waitpid+0xa8>
80010538:	2410fffd 	li	s0,-3
8001053c:	08004161 	j	80010584 <do_linux_waitpid+0x298>
80010540:	02801821 	move	v1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1488
			int status = exit_code << 8;
			if (!copy_to_user(mm, code_store, &status, sizeof(int))) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
80010544:	0c004c29 	jal	800130a4 <unlock_mm>
80010548:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1491
	}
	return (ret == 0) ? return_pid : ret;
}
8001054c:	8fbf0044 	lw	ra,68(sp)
80010550:	02001021 	move	v0,s0
80010554:	8fb70040 	lw	s7,64(sp)
80010558:	8fb6003c 	lw	s6,60(sp)
8001055c:	8fb50038 	lw	s5,56(sp)
80010560:	8fb40034 	lw	s4,52(sp)
80010564:	8fb30030 	lw	s3,48(sp)
80010568:	8fb2002c 	lw	s2,44(sp)
8001056c:	8fb10028 	lw	s1,40(sp)
80010570:	8fb00024 	lw	s0,36(sp)
80010574:	03e00008 	jr	ra
80010578:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1430
		proc = find_proc(pid);
		if (proc != NULL) {
			do {
				if (proc->parent == cproc) {
					haskid = 1;
					if (proc->state == PROC_ZOMBIE) {
8001057c:	5095ff9f 	beql	a0,s5,800103fc <do_linux_waitpid+0x110>
80010580:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1456
	} else {		//pid<-1
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
		current->state = PROC_SLEEPING;
80010584:	24020001 	li	v0,1
80010588:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1458
		current->wait_state = WT_CHILD;
		schedule();
8001058c:	0c00059e 	jal	80001678 <schedule>
80010590:	ac760084 	sw	s6,132(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1459
		may_killed();
80010594:	0c003b53 	jal	8000ed4c <may_killed>
80010598:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1460
		goto repeat;
8001059c:	080040d6 	j	80010358 <do_linux_waitpid+0x6c>
800105a0:	8e3477a4 	lw	s4,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:136
		proc->optr->yptr = proc->yptr;
	}
	if (proc->yptr != NULL) {
		proc->yptr->optr = proc->optr;
	} else {
		proc->parent->cptr = proc->optr;
800105a4:	0800411f 	j	8001047c <do_linux_waitpid+0x190>
800105a8:	ac830088 	sw	v1,136(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1466
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
		panic("wait idleproc or initproc.\n\r");
800105ac:	3c048002 	lui	a0,0x8002
800105b0:	3c068002 	lui	a2,0x8002
800105b4:	24842610 	addiu	a0,a0,9744
800105b8:	240505ba 	li	a1,1466
800105bc:	0c006afd 	jal	8001abf4 <__panic>
800105c0:	24c629cc 	addiu	a2,a2,10700

800105c4 <do_kill>:
do_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1509
	return -E_KILLED;
}

// do_kill - kill process with pid
int do_kill(int pid, int error_code)
{
800105c4:	27bdffe0 	addiu	sp,sp,-32
800105c8:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1511
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
800105cc:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1509
	return -E_KILLED;
}

// do_kill - kill process with pid
int do_kill(int pid, int error_code)
{
800105d0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1511
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
800105d4:	0c003b36 	jal	8000ecd8 <find_proc>
800105d8:	2410ffea 	li	s0,-22
800105dc:	1040000b 	beqz	v0,8001060c <do_kill+0x48>
800105e0:	8fa50010 	lw	a1,16(sp)
__do_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1496
}

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
800105e4:	8c43005c 	lw	v1,92(v0)
800105e8:	30640001 	andi	a0,v1,0x1
800105ec:	14800007 	bnez	a0,8001060c <do_kill+0x48>
800105f0:	2410ffdb 	li	s0,-37
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1499
		proc->flags |= PF_EXITING;
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
800105f4:	8c440084 	lw	a0,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1497

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
		proc->flags |= PF_EXITING;
800105f8:	34630001 	ori	v1,v1,0x1
800105fc:	ac43005c 	sw	v1,92(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1498
		proc->exit_code = error_code;
80010600:	ac450080 	sw	a1,128(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1499
		if (proc->wait_state & WT_INTERRUPTED) {
80010604:	04800006 	bltz	a0,80010620 <do_kill+0x5c>
80010608:	00008021 	move	s0,zero
do_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1515
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
		return __do_kill(proc, error_code);
	}
	return -E_INVAL;
}
8001060c:	8fbf001c 	lw	ra,28(sp)
80010610:	02001021 	move	v0,s0
80010614:	8fb00018 	lw	s0,24(sp)
80010618:	03e00008 	jr	ra
8001061c:	27bd0020 	addiu	sp,sp,32
__do_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1500
{
	if (!(proc->flags & PF_EXITING)) {
		proc->flags |= PF_EXITING;
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
			wakeup_proc(proc);
80010620:	0c0004f7 	jal	800013dc <wakeup_proc>
80010624:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1515
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
		return __do_kill(proc, error_code);
	}
	return -E_INVAL;
}
80010628:	08004184 	j	80010610 <do_kill+0x4c>
8001062c:	8fbf001c 	lw	ra,28(sp)

80010630 <do_brk>:
do_brk():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1521

// do_brk - adjust(increase/decrease) the size of process heap, align with page size
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
	struct mm_struct *mm = current->mm;
80010630:	3c028015 	lui	v0,0x8015
80010634:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1520
}

// do_brk - adjust(increase/decrease) the size of process heap, align with page size
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
80010638:	27bdffc8 	addiu	sp,sp,-56
8001063c:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1521
	struct mm_struct *mm = current->mm;
80010640:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1520
}

// do_brk - adjust(increase/decrease) the size of process heap, align with page size
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
80010644:	afb10028 	sw	s1,40(sp)
80010648:	afbf0034 	sw	ra,52(sp)
8001064c:	afb30030 	sw	s3,48(sp)
80010650:	afb2002c 	sw	s2,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1522
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010654:	12000048 	beqz	s0,80010778 <do_brk+0x148>
80010658:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1525
		panic("kernel thread call sys_brk!!.\n\r");
	}
	if (brk_store == NULL) {
8001065c:	1080002e 	beqz	a0,80010718 <do_brk+0xe8>
80010660:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1532
		return mm->brk_start;
	}

	uintptr_t brk;

	lock_mm(mm);
80010664:	0c004c18 	jal	80013060 <lock_mm>
80010668:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1533
	if (!copy_from_user(mm, &brk, brk_store, sizeof(uintptr_t), 1)) {
8001066c:	24020001 	li	v0,1
80010670:	02002021 	move	a0,s0
80010674:	27a50018 	addiu	a1,sp,24
80010678:	02203021 	move	a2,s1
8001067c:	24070004 	li	a3,4
80010680:	0c00781a 	jal	8001e068 <copy_from_user>
80010684:	afa20010 	sw	v0,16(sp)
80010688:	10400037 	beqz	v0,80010768 <do_brk+0x138>
8001068c:	8fb30018 	lw	s3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1538
		unlock_mm(mm);
		return -E_INVAL;
	}

	if (brk < mm->brk_start) {
80010690:	8e020024 	lw	v0,36(s0)
80010694:	0262102b 	sltu	v0,s3,v0
80010698:	14400011 	bnez	v0,800106e0 <do_brk+0xb0>
8001069c:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1541
		goto out_unlock;
	}
	uintptr_t newbrk = ROUNDUP(brk, PGSIZE), oldbrk = mm->brk;
800106a0:	8e120028 	lw	s2,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1542
	assert(oldbrk % PGSIZE == 0);
800106a4:	32420fff 	andi	v0,s2,0xfff
800106a8:	14400039 	bnez	v0,80010790 <do_brk+0x160>
800106ac:	26730fff 	addiu	s3,s3,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1541
	}

	if (brk < mm->brk_start) {
		goto out_unlock;
	}
	uintptr_t newbrk = ROUNDUP(brk, PGSIZE), oldbrk = mm->brk;
800106b0:	32620fff 	andi	v0,s3,0xfff
800106b4:	02629823 	subu	s3,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1543
	assert(oldbrk % PGSIZE == 0);
	if (newbrk == oldbrk) {
800106b8:	12720009 	beq	s3,s2,800106e0 <do_brk+0xb0>
800106bc:	0272102b 	sltu	v0,s3,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1546
		goto out_unlock;
	}
	if (newbrk < oldbrk) {
800106c0:	1040001c 	beqz	v0,80010734 <do_brk+0x104>
800106c4:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1547
		if (mm_unmap(mm, newbrk, oldbrk - newbrk) != 0) {
800106c8:	02602821 	move	a1,s3
800106cc:	0c004ecd 	jal	80013b34 <mm_unmap>
800106d0:	02533023 	subu	a2,s2,s3
800106d4:	50400001 	beqzl	v0,800106dc <do_brk+0xac>
800106d8:	ae130028 	sw	s3,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1560
			goto out_unlock;
		}
	}
	mm->brk = newbrk;
out_unlock:
	copy_to_user(mm, brk_store, &mm->brk, sizeof(uintptr_t));
800106dc:	02202821 	move	a1,s1
800106e0:	26060028 	addiu	a2,s0,40
800106e4:	24070004 	li	a3,4
800106e8:	0c007834 	jal	8001e0d0 <copy_to_user>
800106ec:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1561
	unlock_mm(mm);
800106f0:	0c004c29 	jal	800130a4 <unlock_mm>
800106f4:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1562
	return 0;
800106f8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1563
}
800106fc:	8fbf0034 	lw	ra,52(sp)
80010700:	8fb30030 	lw	s3,48(sp)
80010704:	8fb2002c 	lw	s2,44(sp)
80010708:	8fb10028 	lw	s1,40(sp)
8001070c:	8fb00024 	lw	s0,36(sp)
80010710:	03e00008 	jr	ra
80010714:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1527
	if (mm == NULL) {
		panic("kernel thread call sys_brk!!.\n\r");
	}
	if (brk_store == NULL) {
		//     return -E_INVAL;
		return mm->brk_start;
80010718:	8e020024 	lw	v0,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1563
	mm->brk = newbrk;
out_unlock:
	copy_to_user(mm, brk_store, &mm->brk, sizeof(uintptr_t));
	unlock_mm(mm);
	return 0;
}
8001071c:	8fb30030 	lw	s3,48(sp)
80010720:	8fb2002c 	lw	s2,44(sp)
80010724:	8fb10028 	lw	s1,40(sp)
80010728:	8fb00024 	lw	s0,36(sp)
8001072c:	03e00008 	jr	ra
80010730:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1551
	if (newbrk < oldbrk) {
		if (mm_unmap(mm, newbrk, oldbrk - newbrk) != 0) {
			goto out_unlock;
		}
	} else {
		if (find_vma_intersection(mm, oldbrk, newbrk + PGSIZE) != NULL) {
80010734:	02402821 	move	a1,s2
80010738:	0c004cc3 	jal	8001330c <find_vma_intersection>
8001073c:	26661000 	addiu	a2,s3,4096
80010740:	1440ffe7 	bnez	v0,800106e0 <do_brk+0xb0>
80010744:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1554
			goto out_unlock;
		}
		if (mm_brk(mm, oldbrk, newbrk - oldbrk) != 0) {
80010748:	02402821 	move	a1,s2
8001074c:	02002021 	move	a0,s0
80010750:	0c005029 	jal	800140a4 <mm_brk>
80010754:	02723023 	subu	a2,s3,s2
80010758:	1440ffe1 	bnez	v0,800106e0 <do_brk+0xb0>
8001075c:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1558
			goto out_unlock;
		}
	}
	mm->brk = newbrk;
80010760:	080041b8 	j	800106e0 <do_brk+0xb0>
80010764:	ae130028 	sw	s3,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1534

	uintptr_t brk;

	lock_mm(mm);
	if (!copy_from_user(mm, &brk, brk_store, sizeof(uintptr_t), 1)) {
		unlock_mm(mm);
80010768:	0c004c29 	jal	800130a4 <unlock_mm>
8001076c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1535
		return -E_INVAL;
80010770:	080041bf 	j	800106fc <do_brk+0xcc>
80010774:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1523
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call sys_brk!!.\n\r");
80010778:	3c048002 	lui	a0,0x8002
8001077c:	3c068002 	lui	a2,0x8002
80010780:	24842610 	addiu	a0,a0,9744
80010784:	240505f3 	li	a1,1523
80010788:	0c006afd 	jal	8001abf4 <__panic>
8001078c:	24c629ec 	addiu	a2,a2,10732
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1542

	if (brk < mm->brk_start) {
		goto out_unlock;
	}
	uintptr_t newbrk = ROUNDUP(brk, PGSIZE), oldbrk = mm->brk;
	assert(oldbrk % PGSIZE == 0);
80010790:	3c048002 	lui	a0,0x8002
80010794:	3c068002 	lui	a2,0x8002
80010798:	3c078002 	lui	a3,0x8002
8001079c:	24842610 	addiu	a0,a0,9744
800107a0:	24050606 	li	a1,1542
800107a4:	24c609b0 	addiu	a2,a2,2480
800107a8:	0c006afd 	jal	8001abf4 <__panic>
800107ac:	24e72a0c 	addiu	a3,a3,10764

800107b0 <do_linux_brk>:
do_linux_brk():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1569

/* poring from linux */
int do_linux_brk(uintptr_t brk)
{
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
800107b0:	3c028015 	lui	v0,0x8015
800107b4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1567
	return 0;
}

/* poring from linux */
int do_linux_brk(uintptr_t brk)
{
800107b8:	27bdffd8 	addiu	sp,sp,-40
800107bc:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1569
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
800107c0:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1567
	return 0;
}

/* poring from linux */
int do_linux_brk(uintptr_t brk)
{
800107c4:	afb10018 	sw	s1,24(sp)
800107c8:	afbf0024 	sw	ra,36(sp)
800107cc:	afb30020 	sw	s3,32(sp)
800107d0:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1572
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
	uint32_t min_brk;

	if (!mm) {
800107d4:	12000038 	beqz	s0,800108b8 <do_linux_brk+0x108>
800107d8:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1576
		panic("kernel thread call sys_brk!!.\n\r");
	}

	lock_mm(mm);
800107dc:	0c004c18 	jal	80013060 <lock_mm>
800107e0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1580

	min_brk = mm->brk_start;

	if (brk < min_brk)
800107e4:	8e020024 	lw	v0,36(s0)
800107e8:	0222102b 	sltu	v0,s1,v0
800107ec:	14400020 	bnez	v0,80010870 <do_linux_brk+0xc0>
800107f0:	26230fff 	addiu	v1,s1,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1584
		goto out_unlock;

	newbrk = ROUNDUP(brk, PGSIZE);
	oldbrk = ROUNDUP(mm->brk, PGSIZE);
800107f4:	8e040028 	lw	a0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1583
	min_brk = mm->brk_start;

	if (brk < min_brk)
		goto out_unlock;

	newbrk = ROUNDUP(brk, PGSIZE);
800107f8:	30720fff 	andi	s2,v1,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1584
	oldbrk = ROUNDUP(mm->brk, PGSIZE);
800107fc:	24820fff 	addiu	v0,a0,4095
80010800:	30530fff 	andi	s3,v0,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1583
	min_brk = mm->brk_start;

	if (brk < min_brk)
		goto out_unlock;

	newbrk = ROUNDUP(brk, PGSIZE);
80010804:	00729023 	subu	s2,v1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1584
	oldbrk = ROUNDUP(mm->brk, PGSIZE);
80010808:	00539823 	subu	s3,v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1586

	if (oldbrk == newbrk)
8001080c:	12530008 	beq	s2,s3,80010830 <do_linux_brk+0x80>
80010810:	0091202b 	sltu	a0,a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1589
		goto set_brk;

	if (brk <= mm->brk) {
80010814:	14800011 	bnez	a0,8001085c <do_linux_brk+0xac>
80010818:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1590
		if (!mm_unmap(mm, newbrk, oldbrk - newbrk))
8001081c:	02402821 	move	a1,s2
80010820:	0c004ecd 	jal	80013b34 <mm_unmap>
80010824:	02723023 	subu	a2,s3,s2
80010828:	14400012 	bnez	v0,80010874 <do_linux_brk+0xc4>
8001082c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1603
	/* set the brk */
	if (mm_brk(mm, oldbrk, newbrk - oldbrk))
		goto out_unlock;

set_brk:
	mm->brk = brk;
80010830:	ae110028 	sw	s1,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1606
out_unlock:
	retval = mm->brk;
	unlock_mm(mm);
80010834:	0c004c29 	jal	800130a4 <unlock_mm>
80010838:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1608
	return retval;
}
8001083c:	8fbf0024 	lw	ra,36(sp)
80010840:	02201021 	move	v0,s1
80010844:	8fb30020 	lw	s3,32(sp)
80010848:	8fb2001c 	lw	s2,28(sp)
8001084c:	8fb10018 	lw	s1,24(sp)
80010850:	8fb00014 	lw	s0,20(sp)
80010854:	03e00008 	jr	ra
80010858:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1595
		if (!mm_unmap(mm, newbrk, oldbrk - newbrk))
			goto set_brk;
		goto out_unlock;
	}

	if (find_vma_intersection(mm, oldbrk, newbrk + PGSIZE))
8001085c:	02602821 	move	a1,s3
80010860:	0c004cc3 	jal	8001330c <find_vma_intersection>
80010864:	26461000 	addiu	a2,s2,4096
80010868:	1040000c 	beqz	v0,8001089c <do_linux_brk+0xec>
8001086c:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1606

set_brk:
	mm->brk = brk;
out_unlock:
	retval = mm->brk;
	unlock_mm(mm);
80010870:	02002021 	move	a0,s0
80010874:	0c004c29 	jal	800130a4 <unlock_mm>
80010878:	8e110028 	lw	s1,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1608
	return retval;
}
8001087c:	8fbf0024 	lw	ra,36(sp)
80010880:	02201021 	move	v0,s1
80010884:	8fb30020 	lw	s3,32(sp)
80010888:	8fb2001c 	lw	s2,28(sp)
8001088c:	8fb10018 	lw	s1,24(sp)
80010890:	8fb00014 	lw	s0,20(sp)
80010894:	03e00008 	jr	ra
80010898:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1599

	if (find_vma_intersection(mm, oldbrk, newbrk + PGSIZE))
		goto out_unlock;

	/* set the brk */
	if (mm_brk(mm, oldbrk, newbrk - oldbrk))
8001089c:	02002021 	move	a0,s0
800108a0:	0c005029 	jal	800140a4 <mm_brk>
800108a4:	02533023 	subu	a2,s2,s3
800108a8:	1440fff2 	bnez	v0,80010874 <do_linux_brk+0xc4>
800108ac:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1603
		goto out_unlock;

set_brk:
	mm->brk = brk;
800108b0:	0800420d 	j	80010834 <do_linux_brk+0x84>
800108b4:	ae110028 	sw	s1,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1573
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
	uint32_t min_brk;

	if (!mm) {
		panic("kernel thread call sys_brk!!.\n\r");
800108b8:	3c048002 	lui	a0,0x8002
800108bc:	3c068002 	lui	a2,0x8002
800108c0:	24842610 	addiu	a0,a0,9744
800108c4:	24050625 	li	a1,1573
800108c8:	0c006afd 	jal	8001abf4 <__panic>
800108cc:	24c629ec 	addiu	a2,a2,10732

800108d0 <do_sleep>:
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1656

// do_sleep - set current process state to sleep and add timer with "time"
//          - then call scheduler. if process run again, delete timer first.
//      time is jiffies
int do_sleep(unsigned int time)
{
800108d0:	27bdffc0 	addiu	sp,sp,-64
800108d4:	afb00034 	sw	s0,52(sp)
800108d8:	afbf003c 	sw	ra,60(sp)
800108dc:	afb10038 	sw	s1,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1657
	assert(!ucore_in_interrupt());
800108e0:	0c007d8c 	jal	8001f630 <ucore_in_interrupt>
800108e4:	00808021 	move	s0,a0
800108e8:	1440003a 	bnez	v0,800109d4 <do_sleep+0x104>
800108ec:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1658
	if (time == 0) {
800108f0:	16000006 	bnez	s0,8001090c <do_sleep+0x3c>
800108f4:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1673

	schedule();

	del_timer(timer);
	return 0;
}
800108f8:	00001021 	move	v0,zero
800108fc:	8fb10038 	lw	s1,56(sp)
80010900:	8fb00034 	lw	s0,52(sp)
80010904:	03e00008 	jr	ra
80010908:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001090c:	40026000 	mfc0	v0,c0_status
80010910:	30420001 	andi	v0,v0,0x1
80010914:	1440001a 	bnez	v0,80010980 <do_sleep+0xb0>
80010918:	3c028015 	lui	v0,0x8015
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1663
	if (time == 0) {
		return 0;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
8001091c:	8c4277a4 	lw	v0,30628(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80010920:	27a30024 	addiu	v1,sp,36
80010924:	afa30028 	sw	v1,40(sp)
80010928:	afa30024 	sw	v1,36(sp)
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1665
	current->state = PROC_SLEEPING;
	current->wait_state = WT_TIMER;
8001092c:	3c038000 	lui	v1,0x8000
80010930:	24630002 	addiu	v1,v1,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1666
	add_timer(timer);
80010934:	27b10010 	addiu	s1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1665
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
	current->state = PROC_SLEEPING;
	current->wait_state = WT_TIMER;
80010938:	ac430084 	sw	v1,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1664
		return 0;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
	current->state = PROC_SLEEPING;
8001093c:	24030001 	li	v1,1
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80010940:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:29
	timer->proc = proc;
80010944:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->linux_timer.linux_timer = NULL;
80010948:	afa00018 	sw	zero,24(sp)
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1666
	current->wait_state = WT_TIMER;
	add_timer(timer);
8001094c:	02202021 	move	a0,s1
80010950:	0c0005e4 	jal	80001790 <add_timer>
80010954:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1669
	local_intr_restore(intr_flag);

	schedule();
80010958:	0c00059e 	jal	80001678 <schedule>
8001095c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1671

	del_timer(timer);
80010960:	0c00062c 	jal	800018b0 <del_timer>
80010964:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1673
	return 0;
}
80010968:	8fbf003c 	lw	ra,60(sp)
8001096c:	00001021 	move	v0,zero
80010970:	8fb10038 	lw	s1,56(sp)
80010974:	8fb00034 	lw	s0,52(sp)
80010978:	03e00008 	jr	ra
8001097c:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80010980:	0c006cbe 	jal	8001b2f8 <intr_disable>
80010984:	27b10010 	addiu	s1,sp,16
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1663
	if (time == 0) {
		return 0;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
80010988:	3c028015 	lui	v0,0x8015
8001098c:	8c4277a4 	lw	v0,30628(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010990:	27a30024 	addiu	v1,sp,36
80010994:	afa30028 	sw	v1,40(sp)
80010998:	afa30024 	sw	v1,36(sp)
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1664
	current->state = PROC_SLEEPING;
8001099c:	24030001 	li	v1,1
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:29

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
800109a0:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
800109a4:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
800109a8:	afa00018 	sw	zero,24(sp)
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1664
800109ac:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1665
	current->wait_state = WT_TIMER;
800109b0:	3c038000 	lui	v1,0x8000
800109b4:	24630002 	addiu	v1,v1,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1666
	add_timer(timer);
800109b8:	02202021 	move	a0,s1
800109bc:	0c0005e4 	jal	80001790 <add_timer>
800109c0:	ac430084 	sw	v1,132(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800109c4:	0c006cba 	jal	8001b2e8 <intr_enable>
800109c8:	00000000 	nop
800109cc:	08004256 	j	80010958 <do_sleep+0x88>
800109d0:	00000000 	nop
do_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1657
// do_sleep - set current process state to sleep and add timer with "time"
//          - then call scheduler. if process run again, delete timer first.
//      time is jiffies
int do_sleep(unsigned int time)
{
	assert(!ucore_in_interrupt());
800109d4:	3c068002 	lui	a2,0x8002
800109d8:	3c078002 	lui	a3,0x8002
800109dc:	24842610 	addiu	a0,a0,9744
800109e0:	24050679 	li	a1,1657
800109e4:	24c609b0 	addiu	a2,a2,2480
800109e8:	0c006afd 	jal	8001abf4 <__panic>
800109ec:	24e72a24 	addiu	a3,a3,10788

800109f0 <do_linux_sleep>:
do_linux_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1678
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
	struct mm_struct *mm = current->mm;
800109f0:	3c028015 	lui	v0,0x8015
800109f4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
800109f8:	27bdffc8 	addiu	sp,sp,-56
800109fc:	afb00028 	sw	s0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1678
	struct mm_struct *mm = current->mm;
80010a00:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a04:	00803021 	move	a2,a0
80010a08:	afbf0034 	sw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1680
	struct mm_struct *mm = current->mm;
	struct linux_timespec kts;
	lock_mm(mm);
80010a0c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a10:	afb20030 	sw	s2,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1680
	struct mm_struct *mm = current->mm;
	struct linux_timespec kts;
	lock_mm(mm);
80010a14:	afa60020 	sw	a2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a18:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1680
	struct mm_struct *mm = current->mm;
	struct linux_timespec kts;
	lock_mm(mm);
80010a1c:	0c004c18 	jal	80013060 <lock_mm>
80010a20:	afb1002c 	sw	s1,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1681
	if (!copy_from_user(mm, &kts, req, sizeof(struct linux_timespec), 1)) {
80010a24:	8fa60020 	lw	a2,32(sp)
80010a28:	02002021 	move	a0,s0
80010a2c:	24020001 	li	v0,1
80010a30:	27a50018 	addiu	a1,sp,24
80010a34:	24070008 	li	a3,8
80010a38:	0c00781a 	jal	8001e068 <copy_from_user>
80010a3c:	afa20010 	sw	v0,16(sp)
80010a40:	10400033 	beqz	v0,80010b10 <do_linux_sleep+0x120>
80010a44:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1685
		unlock_mm(mm);
		return -E_INVAL;
	}
	unlock_mm(mm);
80010a48:	0c004c29 	jal	800130a4 <unlock_mm>
80010a4c:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1686
	long msec = kts.tv_sec * 1000 + kts.tv_nsec / 1000000;
80010a50:	8fa3001c 	lw	v1,28(sp)
80010a54:	3c04431b 	lui	a0,0x431b
80010a58:	3484de83 	ori	a0,a0,0xde83
80010a5c:	00640018 	mult	v1,a0
80010a60:	8fa50018 	lw	a1,24(sp)
80010a64:	00031fc3 	sra	v1,v1,0x1f
80010a68:	00051080 	sll	v0,a1,0x2
80010a6c:	000531c0 	sll	a2,a1,0x7
80010a70:	00c21023 	subu	v0,a2,v0
80010a74:	00451021 	addu	v0,v0,a1
80010a78:	000210c0 	sll	v0,v0,0x3
80010a7c:	00002010 	mfhi	a0
80010a80:	00042483 	sra	a0,a0,0x12
80010a84:	00831823 	subu	v1,a0,v1
80010a88:	00431021 	addu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1687
	if (msec < 0)
80010a8c:	04400019 	bltz	v0,80010af4 <do_linux_sleep+0x104>
80010a90:	3c036666 	lui	v1,0x6666
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1692
		return -E_INVAL;
#ifdef UCONFIG_HAVE_LINUX_DDE_BASE
	unsigned long j = msecs_to_jiffies(msec);
#else
	unsigned long j = msec / 10;
80010a94:	24636667 	addiu	v1,v1,26215
80010a98:	00430018 	mult	v0,v1
80010a9c:	000217c3 	sra	v0,v0,0x1f
80010aa0:	00001810 	mfhi	v1
80010aa4:	00031883 	sra	v1,v1,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1695
#endif
	//kprintf("do_linux_sleep: sleep %d msec, %d jiffies\n\r", msec, j);
	int ret = do_sleep(j);
80010aa8:	0c004234 	jal	800108d0 <do_sleep>
80010aac:	00622023 	subu	a0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1696
	if (rem) {
80010ab0:	12400010 	beqz	s2,80010af4 <do_linux_sleep+0x104>
80010ab4:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1697
		memset(&kts, 0, sizeof(struct linux_timespec));
80010ab8:	00002821 	move	a1,zero
80010abc:	24060008 	li	a2,8
80010ac0:	0c005c44 	jal	80017110 <memset>
80010ac4:	27a40018 	addiu	a0,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1698
		lock_mm(mm);
80010ac8:	0c004c18 	jal	80013060 <lock_mm>
80010acc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1699
		if (!copy_to_user(mm, rem, &kts, sizeof(struct linux_timespec))) {
80010ad0:	02002021 	move	a0,s0
80010ad4:	02402821 	move	a1,s2
80010ad8:	27a60018 	addiu	a2,sp,24
80010adc:	0c007834 	jal	8001e0d0 <copy_to_user>
80010ae0:	24070008 	li	a3,8
80010ae4:	1040000a 	beqz	v0,80010b10 <do_linux_sleep+0x120>
80010ae8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1703
			unlock_mm(mm);
			return -E_INVAL;
		}
		unlock_mm(mm);
80010aec:	0c004c29 	jal	800130a4 <unlock_mm>
80010af0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1706
	}
	return ret;
}
80010af4:	8fbf0034 	lw	ra,52(sp)
80010af8:	02201021 	move	v0,s1
80010afc:	8fb20030 	lw	s2,48(sp)
80010b00:	8fb1002c 	lw	s1,44(sp)
80010b04:	8fb00028 	lw	s0,40(sp)
80010b08:	03e00008 	jr	ra
80010b0c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1700
	int ret = do_sleep(j);
	if (rem) {
		memset(&kts, 0, sizeof(struct linux_timespec));
		lock_mm(mm);
		if (!copy_to_user(mm, rem, &kts, sizeof(struct linux_timespec))) {
			unlock_mm(mm);
80010b10:	0c004c29 	jal	800130a4 <unlock_mm>
80010b14:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1701
			return -E_INVAL;
80010b18:	080042be 	j	80010af8 <do_linux_sleep+0x108>
80010b1c:	8fbf0034 	lw	ra,52(sp)

80010b20 <__do_linux_mmap>:
__do_linux_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1711
}

int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
80010b20:	3c028015 	lui	v0,0x8015
80010b24:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1710
	return ret;
}

int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010b28:	27bdffd0 	addiu	sp,sp,-48
80010b2c:	afb20028 	sw	s2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1711
	struct mm_struct *mm = current->mm;
80010b30:	8c520020 	lw	s2,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1710
	return ret;
}

int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010b34:	afb10024 	sw	s1,36(sp)
80010b38:	afbf002c 	sw	ra,44(sp)
80010b3c:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1712
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010b40:	12400031 	beqz	s2,80010c08 <__do_linux_mmap+0xe8>
80010b44:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1715
		panic("kernel thread call mmap!!.\n\r");
	}
	if (addr_store == NULL || len == 0) {
80010b48:	1080001d 	beqz	a0,80010bc0 <__do_linux_mmap+0xa0>
80010b4c:	2402ffea 	li	v0,-22
80010b50:	10a0001b 	beqz	a1,80010bc0 <__do_linux_mmap+0xa0>
80010b54:	2403f000 	li	v1,-4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1722
	}

	int ret = -E_INVAL;

	uintptr_t addr;
	addr = *addr_store;
80010b58:	8c820000 	lw	v0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1733
	uint32_t vm_flags = VM_READ;

	/* set anonymous flag */
	vm_flags |= VM_ANONYMOUS;

	if (mmap_flags & MMAP_WRITE)
80010b5c:	30c40100 	andi	a0,a2,0x100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1725

	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010b60:	00a22821 	addu	a1,a1,v0
80010b64:	24a50fff 	addiu	a1,a1,4095
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1724
	int ret = -E_INVAL;

	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010b68:	00431024 	and	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1734

	/* set anonymous flag */
	vm_flags |= VM_ANONYMOUS;

	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
80010b6c:	24070023 	li	a3,35
80010b70:	24030021 	li	v1,33
80010b74:	0064380a 	movz	a3,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1725

	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010b78:	30a30fff 	andi	v1,a1,0xfff
80010b7c:	00a32823 	subu	a1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1735
	/* set anonymous flag */
	vm_flags |= VM_ANONYMOUS;

	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
80010b80:	30c40200 	andi	a0,a2,0x200
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1736
		vm_flags |= VM_STACK;
80010b84:	34e30008 	ori	v1,a3,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1739

	ret = -E_NO_MEM;
	if (addr == 0) {
80010b88:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1726
	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;
80010b8c:	00a23023 	subu	a2,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1739
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
80010b90:	14400011 	bnez	v0,80010bd8 <__do_linux_mmap+0xb8>
80010b94:	0064380b 	movn	a3,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1740
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010b98:	00c02821 	move	a1,a2
80010b9c:	02402021 	move	a0,s2
80010ba0:	afa6001c 	sw	a2,28(sp)
80010ba4:	0c00500e 	jal	80014038 <get_unmapped_area>
80010ba8:	afa70018 	sw	a3,24(sp)
80010bac:	00408021 	move	s0,v0
80010bb0:	8fa6001c 	lw	a2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1738
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
80010bb4:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1740
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010bb8:	16000007 	bnez	s0,80010bd8 <__do_linux_mmap+0xb8>
80010bbc:	8fa70018 	lw	a3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1749
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
		*addr_store = addr;
	}
out_unlock:
	return ret;
}
80010bc0:	8fbf002c 	lw	ra,44(sp)
80010bc4:	8fb20028 	lw	s2,40(sp)
80010bc8:	8fb10024 	lw	s1,36(sp)
80010bcc:	8fb00020 	lw	s0,32(sp)
80010bd0:	03e00008 	jr	ra
80010bd4:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1744
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
			goto out_unlock;
		}
	}
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
80010bd8:	02402021 	move	a0,s2
80010bdc:	02002821 	move	a1,s0
80010be0:	0c004e3c 	jal	800138f0 <mm_map>
80010be4:	afa00010 	sw	zero,16(sp)
80010be8:	1440fff6 	bnez	v0,80010bc4 <__do_linux_mmap+0xa4>
80010bec:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1745
		*addr_store = addr;
80010bf0:	ae300000 	sw	s0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1749
	}
out_unlock:
	return ret;
}
80010bf4:	8fb20028 	lw	s2,40(sp)
80010bf8:	8fb10024 	lw	s1,36(sp)
80010bfc:	8fb00020 	lw	s0,32(sp)
80010c00:	03e00008 	jr	ra
80010c04:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1713
int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call mmap!!.\n\r");
80010c08:	3c048002 	lui	a0,0x8002
80010c0c:	3c068002 	lui	a2,0x8002
80010c10:	24842610 	addiu	a0,a0,9744
80010c14:	240506b1 	li	a1,1713
80010c18:	0c006afd 	jal	8001abf4 <__panic>
80010c1c:	24c62a3c 	addiu	a2,a2,10812

80010c20 <do_mmap>:
do_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1754
}

// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
80010c20:	3c028015 	lui	v0,0x8015
80010c24:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1753
	return ret;
}

// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010c28:	27bdffb8 	addiu	sp,sp,-72
80010c2c:	afb0002c 	sw	s0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1754
	struct mm_struct *mm = current->mm;
80010c30:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1753
	return ret;
}

// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010c34:	afb50040 	sw	s5,64(sp)
80010c38:	afb30038 	sw	s3,56(sp)
80010c3c:	afb10030 	sw	s1,48(sp)
80010c40:	afbf0044 	sw	ra,68(sp)
80010c44:	afb4003c 	sw	s4,60(sp)
80010c48:	afb20034 	sw	s2,52(sp)
80010c4c:	00808821 	move	s1,a0
80010c50:	00a09821 	move	s3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1755
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010c54:	12000042 	beqz	s0,80010d60 <do_mmap+0x140>
80010c58:	00c0a821 	move	s5,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1758
		panic("kernel thread call mmap!!.\n\r");
	}
	if (addr_store == NULL || len == 0) {
80010c5c:	10800010 	beqz	a0,80010ca0 <do_mmap+0x80>
80010c60:	2412ffea 	li	s2,-22
80010c64:	10a0000f 	beqz	a1,80010ca4 <do_mmap+0x84>
80010c68:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1766

	int ret = -E_INVAL;

	uintptr_t addr;

	lock_mm(mm);
80010c6c:	0c004c18 	jal	80013060 <lock_mm>
80010c70:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1767
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
80010c74:	24140001 	li	s4,1
80010c78:	02002021 	move	a0,s0
80010c7c:	27a50018 	addiu	a1,sp,24
80010c80:	02203021 	move	a2,s1
80010c84:	24070004 	li	a3,4
80010c88:	0c00781a 	jal	8001e068 <copy_from_user>
80010c8c:	afb40010 	sw	s4,16(sp)
80010c90:	1440000d 	bnez	v0,80010cc8 <do_mmap+0xa8>
80010c94:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1791
	}
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
		copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
	}
out_unlock:
	unlock_mm(mm);
80010c98:	0c004c29 	jal	800130a4 <unlock_mm>
80010c9c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1793
	return ret;
}
80010ca0:	8fbf0044 	lw	ra,68(sp)
80010ca4:	02401021 	move	v0,s2
80010ca8:	8fb50040 	lw	s5,64(sp)
80010cac:	8fb4003c 	lw	s4,60(sp)
80010cb0:	8fb30038 	lw	s3,56(sp)
80010cb4:	8fb20034 	lw	s2,52(sp)
80010cb8:	8fb10030 	lw	s1,48(sp)
80010cbc:	8fb0002c 	lw	s0,44(sp)
80010cc0:	03e00008 	jr	ra
80010cc4:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1776
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
80010cc8:	32a30100 	andi	v1,s5,0x100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1777
		vm_flags |= VM_WRITE;
80010ccc:	24070003 	li	a3,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1772
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010cd0:	24460fff 	addiu	a2,v0,4095
80010cd4:	00d39821 	addu	s3,a2,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1777
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
80010cd8:	0283380a 	movz	a3,s4,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1772
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010cdc:	32660fff 	andi	a2,s3,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1771
	lock_mm(mm);
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010ce0:	2405f000 	li	a1,-4096
80010ce4:	00452824 	and	a1,v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1772
	    ROUNDUP(addr + len, PGSIZE);
80010ce8:	02669823 	subu	s3,s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1778
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
80010cec:	32b50200 	andi	s5,s5,0x200
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1779
		vm_flags |= VM_STACK;
80010cf0:	34e20008 	ori	v0,a3,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1773
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;
80010cf4:	afa50018 	sw	a1,24(sp)
80010cf8:	02653023 	subu	a2,s3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1782
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
80010cfc:	14a0000c 	bnez	a1,80010d30 <do_mmap+0x110>
80010d00:	0055380b 	movn	a3,v0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1783
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010d04:	00c02821 	move	a1,a2
80010d08:	02002021 	move	a0,s0
80010d0c:	afa60024 	sw	a2,36(sp)
80010d10:	0c00500e 	jal	80014038 <get_unmapped_area>
80010d14:	afa70020 	sw	a3,32(sp)
80010d18:	00402821 	move	a1,v0
80010d1c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1781
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
80010d20:	2412fff4 	li	s2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1783
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010d24:	8fa60024 	lw	a2,36(sp)
80010d28:	1040ffdb 	beqz	v0,80010c98 <do_mmap+0x78>
80010d2c:	8fa70020 	lw	a3,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1787
			goto out_unlock;
		}
	}
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
80010d30:	02002021 	move	a0,s0
80010d34:	0c004e3c 	jal	800138f0 <mm_map>
80010d38:	afa00010 	sw	zero,16(sp)
80010d3c:	1440ffd6 	bnez	v0,80010c98 <do_mmap+0x78>
80010d40:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1788
		copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
80010d44:	02002021 	move	a0,s0
80010d48:	02202821 	move	a1,s1
80010d4c:	27a60018 	addiu	a2,sp,24
80010d50:	0c007834 	jal	8001e0d0 <copy_to_user>
80010d54:	24070004 	li	a3,4
80010d58:	08004326 	j	80010c98 <do_mmap+0x78>
80010d5c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1756
// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call mmap!!.\n\r");
80010d60:	3c048002 	lui	a0,0x8002
80010d64:	3c068002 	lui	a2,0x8002
80010d68:	24842610 	addiu	a0,a0,9744
80010d6c:	240506dc 	li	a1,1756
80010d70:	0c006afd 	jal	8001abf4 <__panic>
80010d74:	24c62a3c 	addiu	a2,a2,10812

80010d78 <do_munmap>:
do_munmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1798
}

// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
	struct mm_struct *mm = current->mm;
80010d78:	3c028015 	lui	v0,0x8015
80010d7c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1797
	return ret;
}

// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
80010d80:	27bdffd8 	addiu	sp,sp,-40
80010d84:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1798
	struct mm_struct *mm = current->mm;
80010d88:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1797
	return ret;
}

// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
80010d8c:	afb10020 	sw	s1,32(sp)
80010d90:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1799
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010d94:	12000013 	beqz	s0,80010de4 <do_munmap+0x6c>
80010d98:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1802
		panic("kernel thread call munmap!!.\n\r");
	}
	if (len == 0) {
80010d9c:	10a0000c 	beqz	a1,80010dd0 <do_munmap+0x58>
80010da0:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1806
		return -E_INVAL;
	}
	int ret;
	lock_mm(mm);
80010da4:	02002021 	move	a0,s0
80010da8:	0c004c18 	jal	80013060 <lock_mm>
80010dac:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1808
	{
		ret = mm_unmap(mm, addr, len);
80010db0:	8fa60010 	lw	a2,16(sp)
80010db4:	02002021 	move	a0,s0
80010db8:	0c004ecd 	jal	80013b34 <mm_unmap>
80010dbc:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1810
	}
	unlock_mm(mm);
80010dc0:	02002021 	move	a0,s0
80010dc4:	0c004c29 	jal	800130a4 <unlock_mm>
80010dc8:	afa20010 	sw	v0,16(sp)
80010dcc:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1812
	return ret;
}
80010dd0:	8fbf0024 	lw	ra,36(sp)
80010dd4:	8fb10020 	lw	s1,32(sp)
80010dd8:	8fb0001c 	lw	s0,28(sp)
80010ddc:	03e00008 	jr	ra
80010de0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1800
// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call munmap!!.\n\r");
80010de4:	3c048002 	lui	a0,0x8002
80010de8:	3c068002 	lui	a2,0x8002
80010dec:	24842610 	addiu	a0,a0,9744
80010df0:	24050708 	li	a1,1800
80010df4:	0c006afd 	jal	8001abf4 <__panic>
80010df8:	24c62a5c 	addiu	a2,a2,10844

80010dfc <do_shmem>:
do_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1895
#endif //UCONFIG_BIONIC_LIBC

// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
80010dfc:	3c028015 	lui	v0,0x8015
80010e00:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1894

#endif //UCONFIG_BIONIC_LIBC

// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
80010e04:	27bdffc0 	addiu	sp,sp,-64
80010e08:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1895
	struct mm_struct *mm = current->mm;
80010e0c:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1894

#endif //UCONFIG_BIONIC_LIBC

// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
80010e10:	afb40034 	sw	s4,52(sp)
80010e14:	afb2002c 	sw	s2,44(sp)
80010e18:	afb10028 	sw	s1,40(sp)
80010e1c:	afbf003c 	sw	ra,60(sp)
80010e20:	afb50038 	sw	s5,56(sp)
80010e24:	afb30030 	sw	s3,48(sp)
80010e28:	00808821 	move	s1,a0
80010e2c:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1896
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010e30:	12000051 	beqz	s0,80010f78 <do_shmem+0x17c>
80010e34:	00c0a021 	move	s4,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1899
		panic("kernel thread call mmap!!.\n\r");
	}
	if (addr_store == NULL || len == 0) {
80010e38:	10800030 	beqz	a0,80010efc <do_shmem+0x100>
80010e3c:	2413ffea 	li	s3,-22
80010e40:	10a0002f 	beqz	a1,80010f00 <do_shmem+0x104>
80010e44:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1907

	int ret = -E_INVAL;

	uintptr_t addr;

	lock_mm(mm);
80010e48:	0c004c18 	jal	80013060 <lock_mm>
80010e4c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1908
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
80010e50:	24130001 	li	s3,1
80010e54:	02002021 	move	a0,s0
80010e58:	27a50018 	addiu	a1,sp,24
80010e5c:	02203021 	move	a2,s1
80010e60:	24070004 	li	a3,4
80010e64:	0c00781a 	jal	8001e068 <copy_from_user>
80010e68:	afb30010 	sw	s3,16(sp)
80010e6c:	10400039 	beqz	v0,80010f54 <do_shmem+0x158>
80010e70:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1917
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
80010e74:	32830100 	andi	v1,s4,0x100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1918
		vm_flags |= VM_WRITE;
80010e78:	24150003 	li	s5,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1913
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010e7c:	24440fff 	addiu	a0,v0,4095
80010e80:	00929021 	addu	s2,a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1918
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
80010e84:	0263a80a 	movz	s5,s3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1912
	lock_mm(mm);
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010e88:	2404f000 	li	a0,-4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1913
	    ROUNDUP(addr + len, PGSIZE);
80010e8c:	32430fff 	andi	v1,s2,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1912
	lock_mm(mm);
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010e90:	00441024 	and	v0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1913
	    ROUNDUP(addr + len, PGSIZE);
80010e94:	02439023 	subu	s2,s2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1919
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
80010e98:	32940200 	andi	s4,s4,0x200
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1920
		vm_flags |= VM_STACK;
80010e9c:	36a30008 	ori	v1,s5,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1914
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;
80010ea0:	afa20018 	sw	v0,24(sp)
80010ea4:	02429023 	subu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1923
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
80010ea8:	1040001e 	beqz	v0,80010f24 <do_shmem+0x128>
80010eac:	0074a80b 	movn	s5,v1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1929
		if ((addr = get_unmapped_area(mm, len)) == 0) {
			goto out_unlock;
		}
	}
	struct shmem_struct *shmem;
	if ((shmem = shmem_create(len)) == NULL) {
80010eb0:	0c0049d8 	jal	80012760 <shmem_create>
80010eb4:	02402021 	move	a0,s2
80010eb8:	10400024 	beqz	v0,80010f4c <do_shmem+0x150>
80010ebc:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1932
		goto out_unlock;
	}
	if ((ret = mm_map_shmem(mm, addr, vm_flags, shmem, NULL)) != 0) {
80010ec0:	8fa50018 	lw	a1,24(sp)
80010ec4:	02002021 	move	a0,s0
80010ec8:	02a03021 	move	a2,s5
80010ecc:	00403821 	move	a3,v0
80010ed0:	0c004e7a 	jal	800139e8 <mm_map_shmem>
80010ed4:	afa00010 	sw	zero,16(sp)
80010ed8:	10400020 	beqz	v0,80010f5c <do_shmem+0x160>
80010edc:	00409821 	move	s3,v0
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80010ee0:	8e420010 	lw	v0,16(s2)
do_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1933
		assert(shmem_ref(shmem) == 0);
80010ee4:	1440002a 	bnez	v0,80010f90 <do_shmem+0x194>
80010ee8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1934
		shmem_destroy(shmem);
80010eec:	0c0049ee 	jal	800127b8 <shmem_destroy>
80010ef0:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1939
		goto out_unlock;
	}
	copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
out_unlock:
	unlock_mm(mm);
80010ef4:	0c004c29 	jal	800130a4 <unlock_mm>
80010ef8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1941
	return ret;
}
80010efc:	8fbf003c 	lw	ra,60(sp)
80010f00:	02601021 	move	v0,s3
80010f04:	8fb50038 	lw	s5,56(sp)
80010f08:	8fb40034 	lw	s4,52(sp)
80010f0c:	8fb30030 	lw	s3,48(sp)
80010f10:	8fb2002c 	lw	s2,44(sp)
80010f14:	8fb10028 	lw	s1,40(sp)
80010f18:	8fb00024 	lw	s0,36(sp)
80010f1c:	03e00008 	jr	ra
80010f20:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1924
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010f24:	02002021 	move	a0,s0
80010f28:	0c00500e 	jal	80014038 <get_unmapped_area>
80010f2c:	02402821 	move	a1,s2
80010f30:	afa20018 	sw	v0,24(sp)
80010f34:	1040ffef 	beqz	v0,80010ef4 <do_shmem+0xf8>
80010f38:	2413fff4 	li	s3,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1929
			goto out_unlock;
		}
	}
	struct shmem_struct *shmem;
	if ((shmem = shmem_create(len)) == NULL) {
80010f3c:	0c0049d8 	jal	80012760 <shmem_create>
80010f40:	02402021 	move	a0,s2
80010f44:	1440ffde 	bnez	v0,80010ec0 <do_shmem+0xc4>
80010f48:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1922
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
80010f4c:	080043bd 	j	80010ef4 <do_shmem+0xf8>
80010f50:	2413fff4 	li	s3,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1903
	}
	if (addr_store == NULL || len == 0) {
		return -E_INVAL;
	}

	int ret = -E_INVAL;
80010f54:	080043bd 	j	80010ef4 <do_shmem+0xf8>
80010f58:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1937
	if ((ret = mm_map_shmem(mm, addr, vm_flags, shmem, NULL)) != 0) {
		assert(shmem_ref(shmem) == 0);
		shmem_destroy(shmem);
		goto out_unlock;
	}
	copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
80010f5c:	02002021 	move	a0,s0
80010f60:	02202821 	move	a1,s1
80010f64:	27a60018 	addiu	a2,sp,24
80010f68:	0c007834 	jal	8001e0d0 <copy_to_user>
80010f6c:	24070004 	li	a3,4
80010f70:	080043bd 	j	80010ef4 <do_shmem+0xf8>
80010f74:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1897
// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call mmap!!.\n\r");
80010f78:	3c048002 	lui	a0,0x8002
80010f7c:	3c068002 	lui	a2,0x8002
80010f80:	24842610 	addiu	a0,a0,9744
80010f84:	24050769 	li	a1,1897
80010f88:	0c006afd 	jal	8001abf4 <__panic>
80010f8c:	24c62a3c 	addiu	a2,a2,10812
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:1933
	struct shmem_struct *shmem;
	if ((shmem = shmem_create(len)) == NULL) {
		goto out_unlock;
	}
	if ((ret = mm_map_shmem(mm, addr, vm_flags, shmem, NULL)) != 0) {
		assert(shmem_ref(shmem) == 0);
80010f90:	3c068002 	lui	a2,0x8002
80010f94:	3c078002 	lui	a3,0x8002
80010f98:	24842610 	addiu	a0,a0,9744
80010f9c:	2405078d 	li	a1,1933
80010fa0:	24c609b0 	addiu	a2,a2,2480
80010fa4:	0c006afd 	jal	8001abf4 <__panic>
80010fa8:	24e72a7c 	addiu	a3,a3,10876

80010fac <proc_init>:
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80010fac:	27bdffb8 	addiu	sp,sp,-72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2046
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
80010fb0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80010fb4:	afb10034 	sw	s1,52(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010fb8:	3c058015 	lui	a1,0x8015
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2046
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
80010fbc:	8c517790 	lw	s1,30608(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2047
	int lapic_id = pls_read(lapic_id);
80010fc0:	3c028015 	lui	v0,0x8015
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010fc4:	24a37788 	addiu	v1,a1,30600
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80010fc8:	afb40040 	sw	s4,64(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010fcc:	3c048015 	lui	a0,0x8015
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2047
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);
80010fd0:	8c5477b0 	lw	s4,30640(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2048
	int lcpu_count = pls_read(lcpu_count);
80010fd4:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80010fd8:	afb20038 	sw	s2,56(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010fdc:	aca37788 	sw	v1,30600(a1)
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2048
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);
	int lcpu_count = pls_read(lcpu_count);
80010fe0:	8c5277a0 	lw	s2,30624(v0)
80010fe4:	3c058015 	lui	a1,0x8015
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010fe8:	24827780 	addiu	v0,a0,30592
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80010fec:	afbf0044 	sw	ra,68(sp)
80010ff0:	afb3003c 	sw	s3,60(sp)
80010ff4:	afb00030 	sw	s0,48(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80010ff8:	ac827780 	sw	v0,30592(a0)
80010ffc:	ac630004 	sw	v1,4(v1)
80011000:	ac420004 	sw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2052
	int lapic_id = pls_read(lapic_id);
	int lcpu_count = pls_read(lcpu_count);

	list_init(&proc_list);
	list_init(&proc_mm_list);
	for (i = 0; i < HASH_LIST_SIZE; i++) {
80011004:	00001821 	move	v1,zero
80011008:	24a54548 	addiu	a1,a1,17736
proc_init():
8001100c:	24040400 	li	a0,1024
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2053
		list_init(hash_list + i);
80011010:	000310c0 	sll	v0,v1,0x3
80011014:	00a21021 	addu	v0,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2052
	int lapic_id = pls_read(lapic_id);
	int lcpu_count = pls_read(lcpu_count);

	list_init(&proc_list);
	list_init(&proc_mm_list);
	for (i = 0; i < HASH_LIST_SIZE; i++) {
80011018:	24630001 	addiu	v1,v1,1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8001101c:	ac420004 	sw	v0,4(v0)
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2052
80011020:	1464fffb 	bne	v1,a0,80011010 <proc_init+0x64>
80011024:	ac420000 	sw	v0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2056
		list_init(hash_list + i);
	}

	pls_write(idleproc, alloc_proc());
80011028:	0c00788c 	jal	8001e230 <alloc_proc>
8001102c:	3c108015 	lui	s0,0x8015
80011030:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2057
	if (idleproc == NULL) {
80011034:	10400056 	beqz	v0,80011190 <proc_init+0x1e4>
80011038:	ae0277a8 	sw	v0,30632(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2061
		panic("cannot alloc idleproc.\n");
	}

	idleproc->pid = lcpu_idx;
8001103c:	ac510004 	sw	s1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2062
	idleproc->state = PROC_RUNNABLE;
80011040:	24020002 	li	v0,2
80011044:	ae620000 	sw	v0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2065
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
80011048:	24020001 	li	v0,1
8001104c:	ae620018 	sw	v0,24(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2067
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
80011050:	0c003276 	jal	8000c9d8 <fs_create>
80011054:	ae600054 	sw	zero,84(s3)
80011058:	10400047 	beqz	v0,80011178 <proc_init+0x1cc>
8001105c:	ae6200bc 	sw	v0,188(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2070
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);
80011060:	8e0277a8 	lw	v0,30632(s0)
80011064:	8c5300bc 	lw	s3,188(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80011068:	40026000 	mfc0	v0,c0_status
8001106c:	30420001 	andi	v0,v0,0x1
80011070:	14400038 	bnez	v0,80011154 <proc_init+0x1a8>
80011074:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80011078:	8e620008 	lw	v0,8(s3)
8001107c:	24420001 	addiu	v0,v0,1
80011080:	ae620008 	sw	v0,8(s3)
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2073

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
80011084:	3c068002 	lui	a2,0x8002
80011088:	24c62ad4 	addiu	a2,a2,10964
8001108c:	02803821 	move	a3,s4
80011090:	27a40010 	addiu	a0,sp,16
80011094:	24050020 	li	a1,32
fs_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80011098:	8e620008 	lw	v0,8(s3)
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2073
8001109c:	0c005b32 	jal	80016cc8 <snprintf>
800110a0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2075

	set_proc_name(idleproc, namebuf);
800110a4:	8e0477a8 	lw	a0,30632(s0)
800110a8:	0c003ae0 	jal	8000eb80 <set_proc_name>
800110ac:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2076
	nr_process++;
800110b0:	3c028015 	lui	v0,0x8015
800110b4:	8c476548 	lw	a3,25928(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2078

	pls_write(current, idleproc);
800110b8:	8e0377a8 	lw	v1,30632(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2080

	int pid = ucore_kernel_thread(init_main, NULL, 0);
800110bc:	3c048001 	lui	a0,0x8001
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2076

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);

	set_proc_name(idleproc, namebuf);
	nr_process++;
800110c0:	24e70001 	addiu	a3,a3,1
800110c4:	ac476548 	sw	a3,25928(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2080

	pls_write(current, idleproc);

	int pid = ucore_kernel_thread(init_main, NULL, 0);
800110c8:	24840160 	addiu	a0,a0,352
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2078
	snprintf(namebuf, 32, "idle/%d", lapic_id);

	set_proc_name(idleproc, namebuf);
	nr_process++;

	pls_write(current, idleproc);
800110cc:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2080

	int pid = ucore_kernel_thread(init_main, NULL, 0);
800110d0:	00002821 	move	a1,zero
800110d4:	00003021 	move	a2,zero
800110d8:	0c007921 	jal	8001e484 <ucore_kernel_thread>
800110dc:	ac4377a4 	sw	v1,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2081
	if (pid <= 0) {
800110e0:	1840003f 	blez	v0,800111e0 <proc_init+0x234>
800110e4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2085
		panic("create init_main failed.\n");
	}

	initproc = find_proc(pid);
800110e8:	0c003b36 	jal	8000ecd8 <find_proc>
800110ec:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2086
	set_proc_name(initproc, "kinit");
800110f0:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2085
	int pid = ucore_kernel_thread(init_main, NULL, 0);
	if (pid <= 0) {
		panic("create init_main failed.\n");
	}

	initproc = find_proc(pid);
800110f4:	3c108015 	lui	s0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2086
	set_proc_name(initproc, "kinit");
800110f8:	00402021 	move	a0,v0
800110fc:	24a52af8 	addiu	a1,a1,11000
80011100:	0c003ae0 	jal	8000eb80 <set_proc_name>
80011104:	ae027798 	sw	v0,30616(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2088

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
80011108:	3c028015 	lui	v0,0x8015
8001110c:	8c4277a8 	lw	v0,30632(v0)
80011110:	1040002c 	beqz	v0,800111c4 <proc_init+0x218>
80011114:	3c048002 	lui	a0,0x8002
80011118:	8c420004 	lw	v0,4(v0)
8001111c:	14510029 	bne	v0,s1,800111c4 <proc_init+0x218>
80011120:	8e027798 	lw	v0,30616(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2089
	assert(initproc != NULL && initproc->pid == lcpu_count);
80011124:	10400021 	beqz	v0,800111ac <proc_init+0x200>
80011128:	3c068002 	lui	a2,0x8002
8001112c:	8c420004 	lw	v0,4(v0)
80011130:	1452001d 	bne	v0,s2,800111a8 <proc_init+0x1fc>
80011134:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2090
}
80011138:	8fb40040 	lw	s4,64(sp)
8001113c:	8fb3003c 	lw	s3,60(sp)
80011140:	8fb20038 	lw	s2,56(sp)
80011144:	8fb10034 	lw	s1,52(sp)
80011148:	8fb00030 	lw	s0,48(sp)
8001114c:	03e00008 	jr	ra
80011150:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80011154:	0c006cbe 	jal	8001b2f8 <intr_disable>
80011158:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8001115c:	8e620008 	lw	v0,8(s3)
80011160:	24420001 	addiu	v0,v0,1
80011164:	ae620008 	sw	v0,8(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80011168:	0c006cba 	jal	8001b2e8 <intr_enable>
8001116c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2073
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
80011170:	08004422 	j	80011088 <proc_init+0xdc>
80011174:	3c068002 	lui	a2,0x8002
proc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2068
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
		panic("create fs_struct (idleproc) failed.\n");
80011178:	3c048002 	lui	a0,0x8002
8001117c:	3c068002 	lui	a2,0x8002
80011180:	24842610 	addiu	a0,a0,9744
80011184:	24050814 	li	a1,2068
80011188:	0c006afd 	jal	8001abf4 <__panic>
8001118c:	24c62aac 	addiu	a2,a2,10924
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2058
		list_init(hash_list + i);
	}

	pls_write(idleproc, alloc_proc());
	if (idleproc == NULL) {
		panic("cannot alloc idleproc.\n");
80011190:	3c048002 	lui	a0,0x8002
80011194:	3c068002 	lui	a2,0x8002
80011198:	24842610 	addiu	a0,a0,9744
8001119c:	2405080a 	li	a1,2058
800111a0:	0c006afd 	jal	8001abf4 <__panic>
800111a4:	24c62a94 	addiu	a2,a2,10900
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2089

	initproc = find_proc(pid);
	set_proc_name(initproc, "kinit");

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
800111a8:	3c068002 	lui	a2,0x8002
800111ac:	3c078002 	lui	a3,0x8002
800111b0:	24842610 	addiu	a0,a0,9744
800111b4:	24050829 	li	a1,2089
800111b8:	24c609b0 	addiu	a2,a2,2480
800111bc:	0c006afd 	jal	8001abf4 <__panic>
800111c0:	24e72b30 	addiu	a3,a3,11056
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2088
	}

	initproc = find_proc(pid);
	set_proc_name(initproc, "kinit");

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
800111c4:	3c068002 	lui	a2,0x8002
800111c8:	3c078002 	lui	a3,0x8002
800111cc:	24842610 	addiu	a0,a0,9744
800111d0:	24050828 	li	a1,2088
800111d4:	24c609b0 	addiu	a2,a2,2480
800111d8:	0c006afd 	jal	8001abf4 <__panic>
800111dc:	24e72b00 	addiu	a3,a3,11008
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2082

	pls_write(current, idleproc);

	int pid = ucore_kernel_thread(init_main, NULL, 0);
	if (pid <= 0) {
		panic("create init_main failed.\n");
800111e0:	3c068002 	lui	a2,0x8002
800111e4:	24842610 	addiu	a0,a0,9744
800111e8:	24050822 	li	a1,2082
800111ec:	0c006afd 	jal	8001abf4 <__panic>
800111f0:	24c62adc 	addiu	a2,a2,10972

800111f4 <proc_init_ap>:
proc_init_ap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2093
	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
}

void proc_init_ap(void)
{
800111f4:	27bdffb8 	addiu	sp,sp,-72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2094
	int lcpu_idx = pls_read(lcpu_idx);
800111f8:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2093
	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
}

void proc_init_ap(void)
{
800111fc:	afb10038 	sw	s1,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2094
	int lcpu_idx = pls_read(lcpu_idx);
80011200:	8c517790 	lw	s1,30608(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2095
	int lapic_id = pls_read(lapic_id);
80011204:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2093
	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
}

void proc_init_ap(void)
{
80011208:	afb30040 	sw	s3,64(sp)
8001120c:	afb2003c 	sw	s2,60(sp)
80011210:	afb00034 	sw	s0,52(sp)
80011214:	afbf0044 	sw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2095
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);
80011218:	8c5377b0 	lw	s3,30640(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2097

	pls_write(idleproc, alloc_proc());
8001121c:	0c00788c 	jal	8001e230 <alloc_proc>
80011220:	3c108015 	lui	s0,0x8015
80011224:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2098
	if (idleproc == NULL) {
80011228:	10400046 	beqz	v0,80011344 <proc_init_ap+0x150>
8001122c:	ae0277a8 	sw	v0,30632(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2102
		panic("cannot alloc idleproc.\n");
	}

	idleproc->pid = lcpu_idx;
80011230:	ac510004 	sw	s1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2103
	idleproc->state = PROC_RUNNABLE;
80011234:	24020002 	li	v0,2
80011238:	ae420000 	sw	v0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2106
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
8001123c:	24020001 	li	v0,1
80011240:	ae420018 	sw	v0,24(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2108
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
80011244:	0c003276 	jal	8000c9d8 <fs_create>
80011248:	ae400054 	sw	zero,84(s2)
8001124c:	10400037 	beqz	v0,8001132c <proc_init_ap+0x138>
80011250:	ae4200bc 	sw	v0,188(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2111
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);
80011254:	8e0277a8 	lw	v0,30632(s0)
80011258:	8c5200bc 	lw	s2,188(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001125c:	40026000 	mfc0	v0,c0_status
80011260:	30420001 	andi	v0,v0,0x1
80011264:	14400020 	bnez	v0,800112e8 <proc_init_ap+0xf4>
80011268:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8001126c:	8e420008 	lw	v0,8(s2)
80011270:	24420001 	addiu	v0,v0,1
80011274:	ae420008 	sw	v0,8(s2)
proc_init_ap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2114

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
80011278:	3c068002 	lui	a2,0x8002
8001127c:	27a40010 	addiu	a0,sp,16
80011280:	24050020 	li	a1,32
80011284:	24c62ad4 	addiu	a2,a2,10964
80011288:	02603821 	move	a3,s3
fs_count_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8001128c:	8e420008 	lw	v0,8(s2)
proc_init_ap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2114
80011290:	0c005b32 	jal	80016cc8 <snprintf>
80011294:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2116

	set_proc_name(idleproc, namebuf);
80011298:	8e0477a8 	lw	a0,30632(s0)
8001129c:	0c003ae0 	jal	8000eb80 <set_proc_name>
800112a0:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2117
	nr_process++;
800112a4:	3c038015 	lui	v1,0x8015
800112a8:	8c646548 	lw	a0,25928(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2119

	pls_write(current, idleproc);
800112ac:	8e0277a8 	lw	v0,30632(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2117

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);

	set_proc_name(idleproc, namebuf);
	nr_process++;
800112b0:	24840001 	addiu	a0,a0,1
800112b4:	ac646548 	sw	a0,25928(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2119

	pls_write(current, idleproc);
800112b8:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2121

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
800112bc:	10400013 	beqz	v0,8001130c <proc_init_ap+0x118>
800112c0:	ac6277a4 	sw	v0,30628(v1)
800112c4:	8c420004 	lw	v0,4(v0)
800112c8:	14510010 	bne	v0,s1,8001130c <proc_init_ap+0x118>
800112cc:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2122
}
800112d0:	8fb30040 	lw	s3,64(sp)
800112d4:	8fb2003c 	lw	s2,60(sp)
800112d8:	8fb10038 	lw	s1,56(sp)
800112dc:	8fb00034 	lw	s0,52(sp)
800112e0:	03e00008 	jr	ra
800112e4:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800112e8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800112ec:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800112f0:	8e420008 	lw	v0,8(s2)
800112f4:	24420001 	addiu	v0,v0,1
800112f8:	ae420008 	sw	v0,8(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800112fc:	0c006cba 	jal	8001b2e8 <intr_enable>
80011300:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2114
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
80011304:	0800449f 	j	8001127c <proc_init_ap+0x88>
80011308:	3c068002 	lui	a2,0x8002
proc_init_ap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2121
	set_proc_name(idleproc, namebuf);
	nr_process++;

	pls_write(current, idleproc);

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
8001130c:	3c048002 	lui	a0,0x8002
80011310:	3c068002 	lui	a2,0x8002
80011314:	3c078002 	lui	a3,0x8002
80011318:	24842610 	addiu	a0,a0,9744
8001131c:	24050849 	li	a1,2121
80011320:	24c609b0 	addiu	a2,a2,2480
80011324:	0c006afd 	jal	8001abf4 <__panic>
80011328:	24e72b00 	addiu	a3,a3,11008
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2109
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
		panic("create fs_struct (idleproc) failed.\n");
8001132c:	3c048002 	lui	a0,0x8002
80011330:	3c068002 	lui	a2,0x8002
80011334:	24842610 	addiu	a0,a0,9744
80011338:	2405083d 	li	a1,2109
8001133c:	0c006afd 	jal	8001abf4 <__panic>
80011340:	24c62aac 	addiu	a2,a2,10924
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2099
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);

	pls_write(idleproc, alloc_proc());
	if (idleproc == NULL) {
		panic("cannot alloc idleproc.\n");
80011344:	3c048002 	lui	a0,0x8002
80011348:	3c068002 	lui	a2,0x8002
8001134c:	24842610 	addiu	a0,a0,9744
80011350:	24050833 	li	a1,2099
80011354:	0c006afd 	jal	8001abf4 <__panic>
80011358:	24c62a94 	addiu	a2,a2,10900

8001135c <do_linux_ugetrlimit>:
do_linux_ugetrlimit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2125

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
}

int do_linux_ugetrlimit(int res, struct linux_rlimit *__user __limit)
{
8001135c:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2127
	struct linux_rlimit limit;
	switch (res) {
80011360:	24020003 	li	v0,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2125

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
}

int do_linux_ugetrlimit(int res, struct linux_rlimit *__user __limit)
{
80011364:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2127
	struct linux_rlimit limit;
	switch (res) {
80011368:	10820006 	beq	a0,v0,80011384 <do_linux_ugetrlimit+0x28>
8001136c:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2143
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
}
80011370:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2133
	case RLIMIT_STACK:
		limit.rlim_cur = USTACKSIZE;
		limit.rlim_max = USTACKSIZE;
		break;
	default:
		return -E_INVAL;
80011374:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2143
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
}
80011378:	8fb00020 	lw	s0,32(sp)
8001137c:	03e00008 	jr	ra
80011380:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2135
		limit.rlim_max = USTACKSIZE;
		break;
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
80011384:	3c028015 	lui	v0,0x8015
80011388:	8c4377a4 	lw	v1,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2129
int do_linux_ugetrlimit(int res, struct linux_rlimit *__user __limit)
{
	struct linux_rlimit limit;
	switch (res) {
	case RLIMIT_STACK:
		limit.rlim_cur = USTACKSIZE;
8001138c:	3c020001 	lui	v0,0x1
80011390:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2135
		limit.rlim_max = USTACKSIZE;
		break;
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
80011394:	8c700020 	lw	s0,32(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2130
{
	struct linux_rlimit limit;
	switch (res) {
	case RLIMIT_STACK:
		limit.rlim_cur = USTACKSIZE;
		limit.rlim_max = USTACKSIZE;
80011398:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2136
		break;
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
	lock_mm(mm);
8001139c:	afa50018 	sw	a1,24(sp)
800113a0:	0c004c18 	jal	80013060 <lock_mm>
800113a4:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2138
	int ret = 0;
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
800113a8:	8fa50018 	lw	a1,24(sp)
800113ac:	02002021 	move	a0,s0
800113b0:	27a60010 	addiu	a2,sp,16
800113b4:	0c007834 	jal	8001e0d0 <copy_to_user>
800113b8:	24070008 	li	a3,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2137
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
	lock_mm(mm);
	int ret = 0;
800113bc:	2403ffea 	li	v1,-22
800113c0:	0002180b 	movn	v1,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2141
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
800113c4:	02002021 	move	a0,s0
800113c8:	0c004c29 	jal	800130a4 <unlock_mm>
800113cc:	afa30018 	sw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2143
	return ret;
}
800113d0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2142
	int ret = 0;
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
800113d4:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/proc.c:2143
}
800113d8:	8fb00020 	lw	s0,32(sp)
800113dc:	03e00008 	jr	ra
800113e0:	27bd0028 	addiu	sp,sp,40

800113e4 <remove_from_queue>:
remove_from_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:42
}

// remove sign from the pending queue
static void remove_from_queue(int sign, struct sigpending *queue)
{
	if (!sigismember(queue->signal, sign))
800113e4:	8ca2000c 	lw	v0,12(a1)
800113e8:	8ca30008 	lw	v1,8(a1)
800113ec:	2484ffff 	addiu	a0,a0,-1
800113f0:	00043027 	nor	a2,zero,a0
800113f4:	00024040 	sll	t0,v0,0x1
800113f8:	00c84004 	sllv	t0,t0,a2
800113fc:	00833006 	srlv	a2,v1,a0
80011400:	01063025 	or	a2,t0,a2
80011404:	30870020 	andi	a3,a0,0x20
80011408:	00824006 	srlv	t0,v0,a0
8001140c:	0107300b 	movn	a2,t0,a3
80011410:	30c60001 	andi	a2,a2,0x1
80011414:	10c0000b 	beqz	a2,80011444 <remove_from_queue+0x60>
80011418:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:44
		return;
	sigset_del(queue->signal, sign);
8001141c:	00862004 	sllv	a0,a2,a0
80011420:	00803021 	move	a2,a0
80011424:	0007300a 	movz	a2,zero,a3
80011428:	0007200b 	movn	a0,zero,a3
8001142c:	00042027 	nor	a0,zero,a0
80011430:	00063027 	nor	a2,zero,a2
80011434:	00831824 	and	v1,a0,v1
80011438:	00c21024 	and	v0,a2,v0
8001143c:	aca30008 	sw	v1,8(a1)
80011440:	aca2000c 	sw	v0,12(a1)
80011444:	03e00008 	jr	ra
80011448:	00000000 	nop

8001144c <lock_sig>:
lock_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:21

//#define __SIGDEBUG

void lock_sig(struct sighand_struct *sh)
{
	if (sh != NULL) {
8001144c:	10800003 	beqz	a0,8001145c <lock_sig+0x10>
80011450:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:22
		down(&(sh->sig_sem));
80011454:	08006711 	j	80019c44 <down>
80011458:	24840608 	addiu	a0,a0,1544
8001145c:	03e00008 	jr	ra
80011460:	00000000 	nop

80011464 <unlock_sig>:
unlock_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:28
	}
}

void unlock_sig(struct sighand_struct *sh)
{
	if (sh != NULL) {
80011464:	10800003 	beqz	a0,80011474 <unlock_sig+0x10>
80011468:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:29
		up(&(sh->sig_sem));
8001146c:	0800670f 	j	80019c3c <up>
80011470:	24840608 	addiu	a0,a0,1544
80011474:	03e00008 	jr	ra
80011478:	00000000 	nop

8001147c <next_thread>:
next_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:36
}

// next_thread - get the next thread "proc" from thread_group list
struct proc_struct *next_thread(struct proc_struct *proc)
{
	return le2proc(list_next(&(proc->thread_group)), thread_group);
8001147c:	8c820098 	lw	v0,152(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:37
}
80011480:	03e00008 	jr	ra
80011484:	2442ff6c 	addiu	v0,v0,-148

80011488 <sig_recalc_pending>:
sig_recalc_pending():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:63
}

// calculate is there a signal in proc
void sig_recalc_pending(struct proc_struct *proc)
{
	if ((get_si(proc)->pending.signal & ~(get_si(proc)->blocked)) != 0
80011488:	8c8300c8 	lw	v1,200(a0)
8001148c:	8c8200cc 	lw	v0,204(a0)
80011490:	8c8600e0 	lw	a2,224(a0)
80011494:	8c8500e4 	lw	a1,228(a0)
80011498:	00031827 	nor	v1,zero,v1
8001149c:	00021027 	nor	v0,zero,v0
800114a0:	00c33024 	and	a2,a2,v1
800114a4:	00a22824 	and	a1,a1,v0
800114a8:	00c52825 	or	a1,a2,a1
800114ac:	54a0000f 	bnezl	a1,800114ec <sig_recalc_pending+0x64>
800114b0:	8c83005c 	lw	v1,92(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:64
	    || (get_si(proc)->signal->
800114b4:	8c8500c0 	lw	a1,192(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:65
		shared_pending.signal & ~(get_si(proc)->blocked)) != 0) {
800114b8:	8ca60010 	lw	a2,16(a1)
800114bc:	8ca50014 	lw	a1,20(a1)
800114c0:	00c31824 	and	v1,a2,v1
800114c4:	00a21024 	and	v0,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:64

// calculate is there a signal in proc
void sig_recalc_pending(struct proc_struct *proc)
{
	if ((get_si(proc)->pending.signal & ~(get_si(proc)->blocked)) != 0
	    || (get_si(proc)->signal->
800114c8:	00621025 	or	v0,v1,v0
800114cc:	14400006 	bnez	v0,800114e8 <sig_recalc_pending+0x60>
800114d0:	3c02fffe 	lui	v0,0xfffe
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:68
		shared_pending.signal & ~(get_si(proc)->blocked)) != 0) {
		proc->flags |= TIF_SIGPENDING;
	} else {
		proc->flags &= ~TIF_SIGPENDING;
800114d4:	8c83005c 	lw	v1,92(a0)
800114d8:	3442ffff 	ori	v0,v0,0xffff
800114dc:	00621024 	and	v0,v1,v0
800114e0:	03e00008 	jr	ra
800114e4:	ac82005c 	sw	v0,92(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:66
void sig_recalc_pending(struct proc_struct *proc)
{
	if ((get_si(proc)->pending.signal & ~(get_si(proc)->blocked)) != 0
	    || (get_si(proc)->signal->
		shared_pending.signal & ~(get_si(proc)->blocked)) != 0) {
		proc->flags |= TIF_SIGPENDING;
800114e8:	8c83005c 	lw	v1,92(a0)
800114ec:	3c020001 	lui	v0,0x1
800114f0:	00621025 	or	v0,v1,v0
800114f4:	03e00008 	jr	ra
800114f8:	ac82005c 	sw	v0,92(a0)

800114fc <signal_create>:
signal_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:127
	return proc->flags & TIF_SIGPENDING;
}

// create a signal_struct and init it
struct signal_struct *signal_create(void)
{
800114fc:	27bdffe8 	addiu	sp,sp,-24
80011500:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:128
	struct signal_struct *sig =
80011504:	0c005478 	jal	800151e0 <kmalloc>
80011508:	24040020 	li	a0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:130
	    (struct signal_struct *)kmalloc(sizeof(struct signal_struct));
	if (sig != NULL) {
8001150c:	10400009 	beqz	v0,80011534 <signal_create+0x38>
80011510:	24430008 	addiu	v1,v0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:134
		set_signal_count(sig, 0);
		sig->curr_target = NULL;
		list_init(&(sig->shared_pending.list));
		sigset_initwith(sig->shared_pending.signal, 0);
80011514:	00002021 	move	a0,zero
80011518:	00002821 	move	a1,zero
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8001151c:	ac400000 	sw	zero,0(v0)
signal_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:132
{
	struct signal_struct *sig =
	    (struct signal_struct *)kmalloc(sizeof(struct signal_struct));
	if (sig != NULL) {
		set_signal_count(sig, 0);
		sig->curr_target = NULL;
80011520:	ac400004 	sw	zero,4(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80011524:	ac43000c 	sw	v1,12(v0)
80011528:	ac430008 	sw	v1,8(v0)
signal_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:134
		list_init(&(sig->shared_pending.list));
		sigset_initwith(sig->shared_pending.signal, 0);
8001152c:	ac440010 	sw	a0,16(v0)
80011530:	ac450014 	sw	a1,20(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:137
	}
	return sig;
}
80011534:	8fbf0014 	lw	ra,20(sp)
80011538:	03e00008 	jr	ra
8001153c:	27bd0018 	addiu	sp,sp,24

80011540 <signal_destroy>:
signal_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:141

// free a signal_struct
void signal_destroy(struct signal_struct *sig)
{
80011540:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:142
	assert(sig != NULL && signal_count(sig) == 0);
80011544:	1080000a 	beqz	a0,80011570 <signal_destroy+0x30>
80011548:	afbf0014 	sw	ra,20(sp)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001154c:	8c830000 	lw	v1,0(a0)
signal_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:142
80011550:	14600007 	bnez	v1,80011570 <signal_destroy+0x30>
80011554:	8fbf0014 	lw	ra,20(sp)
flush_sigqueue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:107
}

// clean the pending queue
static void flush_sigqueue(struct sigpending *queue)
{
	sigset_initwith(queue->signal, 0);
80011558:	00003021 	move	a2,zero
8001155c:	00003821 	move	a3,zero
80011560:	ac860010 	sw	a2,16(a0)
80011564:	ac870014 	sw	a3,20(a0)
signal_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:144
// free a signal_struct
void signal_destroy(struct signal_struct *sig)
{
	assert(sig != NULL && signal_count(sig) == 0);
	flush_sigqueue(&(sig->shared_pending));
	kfree(sig);
80011568:	080054a3 	j	8001528c <kfree>
8001156c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:142
}

// free a signal_struct
void signal_destroy(struct signal_struct *sig)
{
	assert(sig != NULL && signal_count(sig) == 0);
80011570:	3c048002 	lui	a0,0x8002
80011574:	3c068002 	lui	a2,0x8002
80011578:	3c078002 	lui	a3,0x8002
8001157c:	24842b60 	addiu	a0,a0,11104
80011580:	2405008e 	li	a1,142
80011584:	24c609b0 	addiu	a2,a2,2480
80011588:	0c006afd 	jal	8001abf4 <__panic>
8001158c:	24e72b6c 	addiu	a3,a3,11116

80011590 <sighand_create>:
sighand_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:149
	kfree(sig);
}

// create a sighand_struct and init it
struct sighand_struct *sighand_create(void)
{
80011590:	27bdffe0 	addiu	sp,sp,-32
80011594:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:150
	struct sighand_struct *sh =
80011598:	0c005478 	jal	800151e0 <kmalloc>
8001159c:	24040620 	li	a0,1568
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:152
	    (struct sighand_struct *)kmalloc(sizeof(struct sighand_struct));
	if (sh != NULL) {
800115a0:	10400013 	beqz	v0,800115f0 <sighand_create+0x60>
800115a4:	8fbf001c 	lw	ra,28(sp)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
800115a8:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:148
	flush_sigqueue(&(sig->shared_pending));
	kfree(sig);
}

// create a sighand_struct and init it
struct sighand_struct *sighand_create(void)
800115ac:	24430008 	addiu	v1,v0,8
sighand_create():
800115b0:	24040040 	li	a0,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:157
	if (sh != NULL) {
		set_sighand_count(sh, 0);
		int i;
		for (i = 0; i < sizeof(sh->action) / sizeof(sh->action[0]); ++i) {
			sh->action[i].sa_handler = SIG_DFL;
			sigset_initwith(sh->action[i].sa_mask, 0);
800115b4:	00003021 	move	a2,zero
800115b8:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:158
			sh->action[i].sa_flags = 0;
800115bc:	2484ffff 	addiu	a0,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:156
	    (struct sighand_struct *)kmalloc(sizeof(struct sighand_struct));
	if (sh != NULL) {
		set_sighand_count(sh, 0);
		int i;
		for (i = 0; i < sizeof(sh->action) / sizeof(sh->action[0]); ++i) {
			sh->action[i].sa_handler = SIG_DFL;
800115c0:	ac600000 	sw	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:157
			sigset_initwith(sh->action[i].sa_mask, 0);
800115c4:	ac660008 	sw	a2,8(v1)
800115c8:	ac67000c 	sw	a3,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:158
			sh->action[i].sa_flags = 0;
800115cc:	ac600010 	sw	zero,16(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:155
	struct sighand_struct *sh =
	    (struct sighand_struct *)kmalloc(sizeof(struct sighand_struct));
	if (sh != NULL) {
		set_sighand_count(sh, 0);
		int i;
		for (i = 0; i < sizeof(sh->action) / sizeof(sh->action[0]); ++i) {
800115d0:	1480fff9 	bnez	a0,800115b8 <sighand_create+0x28>
800115d4:	24630018 	addiu	v1,v1,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:160
			sh->action[i].sa_handler = SIG_DFL;
			sigset_initwith(sh->action[i].sa_mask, 0);
			sh->action[i].sa_flags = 0;
		}
		sem_init(&(sh->sig_sem), 1);
800115d8:	24440608 	addiu	a0,v0,1544
800115dc:	24050001 	li	a1,1
800115e0:	0c006709 	jal	80019c24 <sem_init>
800115e4:	afa20010 	sw	v0,16(sp)
800115e8:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:163
	}
	return sh;
}
800115ec:	8fbf001c 	lw	ra,28(sp)
800115f0:	03e00008 	jr	ra
800115f4:	27bd0020 	addiu	sp,sp,32

800115f8 <sighand_destroy>:
sighand_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:167

// free a sighand_struct
void sighand_destroy(struct sighand_struct *sh)
{
800115f8:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:168
	assert(sh != NULL && sighand_count(sh) == 0);
800115fc:	10800006 	beqz	a0,80011618 <sighand_destroy+0x20>
80011600:	afbf0014 	sw	ra,20(sp)
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80011604:	8c820000 	lw	v0,0(a0)
sighand_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:168
80011608:	14400003 	bnez	v0,80011618 <sighand_destroy+0x20>
8001160c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:169
	kfree(sh);
80011610:	080054a3 	j	8001528c <kfree>
80011614:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:168
}

// free a sighand_struct
void sighand_destroy(struct sighand_struct *sh)
{
	assert(sh != NULL && sighand_count(sh) == 0);
80011618:	3c048002 	lui	a0,0x8002
8001161c:	3c068002 	lui	a2,0x8002
80011620:	3c078002 	lui	a3,0x8002
80011624:	24842b60 	addiu	a0,a0,11104
80011628:	240500a8 	li	a1,168
8001162c:	24c609b0 	addiu	a2,a2,2480
80011630:	0c006afd 	jal	8001abf4 <__panic>
80011634:	24e72b94 	addiu	a3,a3,11156

80011638 <do_sigaction>:
do_sigaction():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:188
						  || sign == SIGURG));
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
80011638:	27bdffb8 	addiu	sp,sp,-72
8001163c:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:189
	assert(get_si(current)->sighand);
80011640:	3c108015 	lui	s0,0x8015
80011644:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:188
						  || sign == SIGURG));
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
80011648:	afb40034 	sw	s4,52(sp)
8001164c:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:189
	assert(get_si(current)->sighand);
80011650:	8c4300c4 	lw	v1,196(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:188
						  || sign == SIGURG));
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
80011654:	afbf0044 	sw	ra,68(sp)
80011658:	afb70040 	sw	s7,64(sp)
8001165c:	afb6003c 	sw	s6,60(sp)
80011660:	afb50038 	sw	s5,56(sp)
80011664:	afb30030 	sw	s3,48(sp)
80011668:	afb2002c 	sw	s2,44(sp)
8001166c:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:189
	assert(get_si(current)->sighand);
80011670:	1060006b 	beqz	v1,80011820 <do_sigaction+0x1e8>
80011674:	00a0a021 	move	s4,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:193
#ifdef __SIGDEBUG
	kprintf("do_sigaction(): sign = %d, pid = %d\n", sign, current->pid);
#endif
	struct sigaction *k = &(get_si(current)->sighand->action[sign - 1]);
80011678:	2496ffff 	addiu	s6,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:199

	if (k == NULL) {
		panic("kernel thread call sigaction (i guess)\n");
	}
	int ret = 0;
	struct mm_struct *mm = current->mm;
8001167c:	8c520020 	lw	s2,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:193
{
	assert(get_si(current)->sighand);
#ifdef __SIGDEBUG
	kprintf("do_sigaction(): sign = %d, pid = %d\n", sign, current->pid);
#endif
	struct sigaction *k = &(get_si(current)->sighand->action[sign - 1]);
80011680:	0016a8c0 	sll	s5,s6,0x3
80011684:	0016b140 	sll	s6,s6,0x5
80011688:	02d59823 	subu	s3,s6,s5
8001168c:	26730008 	addiu	s3,s3,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:200
	if (k == NULL) {
		panic("kernel thread call sigaction (i guess)\n");
	}
	int ret = 0;
	struct mm_struct *mm = current->mm;
	lock_mm(mm);
80011690:	02402021 	move	a0,s2
80011694:	afa60018 	sw	a2,24(sp)
80011698:	0c004c18 	jal	80013060 <lock_mm>
8001169c:	00739821 	addu	s3,v1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:201
	if (old != NULL && !copy_to_user(mm, old, k, sizeof(struct sigaction))) {
800116a0:	8fa60018 	lw	a2,24(sp)
800116a4:	10c00007 	beqz	a2,800116c4 <do_sigaction+0x8c>
800116a8:	00c02821 	move	a1,a2
800116ac:	02402021 	move	a0,s2
800116b0:	02603021 	move	a2,s3
800116b4:	0c007834 	jal	8001e0d0 <copy_to_user>
800116b8:	24070018 	li	a3,24
800116bc:	10400048 	beqz	v0,800117e0 <do_sigaction+0x1a8>
800116c0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:206
		unlock_mm(mm);
		ret = -E_INVAL;
		goto out;
	}
	if (act == NULL
800116c4:	12800046 	beqz	s4,800117e0 <do_sigaction+0x1a8>
800116c8:	24170001 	li	s7,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:207
	    || !copy_from_user(mm, k, act, sizeof(struct sigaction), 1)) {
800116cc:	02402021 	move	a0,s2
800116d0:	02602821 	move	a1,s3
800116d4:	02803021 	move	a2,s4
800116d8:	24070018 	li	a3,24
800116dc:	0c00781a 	jal	8001e068 <copy_from_user>
800116e0:	afb70010 	sw	s7,16(sp)
800116e4:	1040003e 	beqz	v0,800117e0 <do_sigaction+0x1a8>
800116e8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:212
		unlock_mm(mm);
		ret = -E_INVAL;
		goto out;
	}
	unlock_mm(mm);
800116ec:	0c004c29 	jal	800130a4 <unlock_mm>
800116f0:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:213
	lock_sig(get_si(current)->sighand);
800116f4:	8e0277a4 	lw	v0,30628(s0)
800116f8:	0c004513 	jal	8001144c <lock_sig>
800116fc:	8c4400c4 	lw	a0,196(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:215
	sigset_del(k->sa_mask, SIGKILL);
	sigset_del(k->sa_mask, SIGSTOP);
80011700:	8e630008 	lw	v1,8(s3)
80011704:	3c02fffb 	lui	v0,0xfffb
80011708:	3442feff 	ori	v0,v0,0xfeff
8001170c:	00621024 	and	v0,v1,v0
ignore_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80011710:	24030009 	li	v1,9
do_sigaction():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:215
		goto out;
	}
	unlock_mm(mm);
	lock_sig(get_si(current)->sighand);
	sigset_del(k->sa_mask, SIGKILL);
	sigset_del(k->sa_mask, SIGSTOP);
80011714:	ae620008 	sw	v0,8(s3)
ignore_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80011718:	1223003f 	beq	s1,v1,80011818 <do_sigaction+0x1e0>
8001171c:	8e0277a4 	lw	v0,30628(s0)
80011720:	24030013 	li	v1,19
80011724:	12230008 	beq	s1,v1,80011748 <do_sigaction+0x110>
80011728:	8c4400c4 	lw	a0,196(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:178
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
8001172c:	02d5a823 	subu	s5,s6,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:179
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
80011730:	0095a821 	addu	s5,a0,s5
80011734:	8ea30008 	lw	v1,8(s5)
80011738:	50770019 	beql	v1,s7,800117a0 <do_sigaction+0x168>
8001173c:	8c4500c0 	lw	a1,192(v0)
80011740:	1060000f 	beqz	v1,80011780 <do_sigaction+0x148>
80011744:	2623ffef 	addiu	v1,s1,-17
do_sigaction():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:227
			remove_from_queue(sign, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
80011748:	0c004519 	jal	80011464 <unlock_sig>
8001174c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:230
out:
	return ret;
}
80011750:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:198
	struct sigaction *k = &(get_si(current)->sighand->action[sign - 1]);

	if (k == NULL) {
		panic("kernel thread call sigaction (i guess)\n");
	}
	int ret = 0;
80011754:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:230
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
out:
	return ret;
}
80011758:	8fb70040 	lw	s7,64(sp)
8001175c:	8fb6003c 	lw	s6,60(sp)
80011760:	8fb50038 	lw	s5,56(sp)
80011764:	8fb40034 	lw	s4,52(sp)
80011768:	8fb30030 	lw	s3,48(sp)
8001176c:	8fb2002c 	lw	s2,44(sp)
80011770:	8fb10028 	lw	s1,40(sp)
80011774:	8fb00024 	lw	s0,36(sp)
80011778:	03e00008 	jr	ra
8001177c:	27bd0048 	addiu	sp,sp,72
ignore_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:180
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
					      && (sign == SIGCONT
80011780:	2c630002 	sltiu	v1,v1,2
80011784:	14600005 	bnez	v1,8001179c <do_sigaction+0x164>
80011788:	2403001c 	li	v1,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:182
						  || sign == SIGCHLD
						  || sign == SIGWINCH
8001178c:	12230003 	beq	s1,v1,8001179c <do_sigaction+0x164>
80011790:	24030017 	li	v1,23
do_sigaction():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:216
	}
	unlock_mm(mm);
	lock_sig(get_si(current)->sighand);
	sigset_del(k->sa_mask, SIGKILL);
	sigset_del(k->sa_mask, SIGSTOP);
	if (ignore_sig(sign, current)) {
80011794:	1623ffec 	bne	s1,v1,80011748 <do_sigaction+0x110>
80011798:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:218
		// i'm not very sure that if we should lock
		remove_from_queue(sign,
8001179c:	8c4500c0 	lw	a1,192(v0)
800117a0:	02202021 	move	a0,s1
800117a4:	0c0044f9 	jal	800113e4 <remove_from_queue>
800117a8:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:220
				  &(get_si(current)->signal->shared_pending));
		struct proc_struct *proc = current;
800117ac:	8e1277a4 	lw	s2,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:222
		do {
			remove_from_queue(sign, &(get_si(proc)->pending));
800117b0:	264500d8 	addiu	a1,s2,216
800117b4:	0c0044f9 	jal	800113e4 <remove_from_queue>
800117b8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:223
			sig_recalc_pending(proc);
800117bc:	0c004522 	jal	80011488 <sig_recalc_pending>
800117c0:	02402021 	move	a0,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800117c4:	8e520098 	lw	s2,152(s2)
do_sigaction():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:225
			proc = next_thread(proc);
		} while (proc != current);
800117c8:	8e0277a4 	lw	v0,30628(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:224
				  &(get_si(current)->signal->shared_pending));
		struct proc_struct *proc = current;
		do {
			remove_from_queue(sign, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
800117cc:	2652ff6c 	addiu	s2,s2,-148
do_sigaction():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:225
		} while (proc != current);
800117d0:	1642fff8 	bne	s2,v0,800117b4 <do_sigaction+0x17c>
800117d4:	264500d8 	addiu	a1,s2,216
800117d8:	080045d2 	j	80011748 <do_sigaction+0x110>
800117dc:	8e4400c4 	lw	a0,196(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:208
		ret = -E_INVAL;
		goto out;
	}
	if (act == NULL
	    || !copy_from_user(mm, k, act, sizeof(struct sigaction), 1)) {
		unlock_mm(mm);
800117e0:	0c004c29 	jal	800130a4 <unlock_mm>
800117e4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:230
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
out:
	return ret;
}
800117e8:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:209
		goto out;
	}
	if (act == NULL
	    || !copy_from_user(mm, k, act, sizeof(struct sigaction), 1)) {
		unlock_mm(mm);
		ret = -E_INVAL;
800117ec:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:230
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
out:
	return ret;
}
800117f0:	8fb70040 	lw	s7,64(sp)
800117f4:	8fb6003c 	lw	s6,60(sp)
800117f8:	8fb50038 	lw	s5,56(sp)
800117fc:	8fb40034 	lw	s4,52(sp)
80011800:	8fb30030 	lw	s3,48(sp)
80011804:	8fb2002c 	lw	s2,44(sp)
80011808:	8fb10028 	lw	s1,40(sp)
8001180c:	8fb00024 	lw	s0,36(sp)
80011810:	03e00008 	jr	ra
80011814:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80011818:	080045d2 	j	80011748 <do_sigaction+0x110>
8001181c:	8c4400c4 	lw	a0,196(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:189
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
	assert(get_si(current)->sighand);
80011820:	3c048002 	lui	a0,0x8002
80011824:	3c068002 	lui	a2,0x8002
80011828:	3c078002 	lui	a3,0x8002
8001182c:	24842b60 	addiu	a0,a0,11104
80011830:	240500bd 	li	a1,189
80011834:	24c609b0 	addiu	a2,a2,2480
80011838:	0c006afd 	jal	8001abf4 <__panic>
8001183c:	24e72bbc 	addiu	a3,a3,11196

80011840 <do_sigpending>:
do_sigpending():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:234
	return ret;
}

// do syscall sigpending
int do_sigpending(sigset_t * set)
{
80011840:	27bdffd8 	addiu	sp,sp,-40
80011844:	afb00020 	sw	s0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:235
	assert(get_si(current)->sighand);
80011848:	3c108015 	lui	s0,0x8015
8001184c:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:234
	return ret;
}

// do syscall sigpending
int do_sigpending(sigset_t * set)
{
80011850:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:235
	assert(get_si(current)->sighand);
80011854:	8c6200c4 	lw	v0,196(v1)
80011858:	10400025 	beqz	v0,800118f0 <do_sigpending+0xb0>
8001185c:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:239
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
	    signal->shared_pending.signal;
80011860:	8c6200c0 	lw	v0,192(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:238
int do_sigpending(sigset_t * set)
{
	assert(get_si(current)->sighand);
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
80011864:	8c6400e0 	lw	a0,224(v1)
80011868:	8c6800e4 	lw	t0,228(v1)
8001186c:	8c490010 	lw	t1,16(v0)
80011870:	8c420014 	lw	v0,20(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:240
	    signal->shared_pending.signal;
	pending &= get_si(current)->blocked;
80011874:	8c6700c8 	lw	a3,200(v1)
80011878:	8c6600cc 	lw	a2,204(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:238
int do_sigpending(sigset_t * set)
{
	assert(get_si(current)->sighand);
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
8001187c:	01242025 	or	a0,t1,a0
80011880:	00481025 	or	v0,v0,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:240
	    signal->shared_pending.signal;
	pending &= get_si(current)->blocked;
80011884:	00c21024 	and	v0,a2,v0
80011888:	00e42024 	and	a0,a3,a0
8001188c:	afa20014 	sw	v0,20(sp)
80011890:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:242
	int ret = 0;
	if (set != NULL) {
80011894:	10a00012 	beqz	a1,800118e0 <do_sigpending+0xa0>
80011898:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:243
		lock_mm(current->mm);
8001189c:	8c640020 	lw	a0,32(v1)
800118a0:	0c004c18 	jal	80013060 <lock_mm>
800118a4:	afa50018 	sw	a1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:244
		if (!copy_to_user(current->mm, set, &pending, sizeof(sigset_t))) {
800118a8:	8e0277a4 	lw	v0,30628(s0)
800118ac:	8fa50018 	lw	a1,24(sp)
800118b0:	27a60010 	addiu	a2,sp,16
800118b4:	8c440020 	lw	a0,32(v0)
800118b8:	0c007834 	jal	8001e0d0 <copy_to_user>
800118bc:	24070008 	li	a3,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:247
			ret = -E_INVAL;
		}
		unlock_mm(current->mm);
800118c0:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:241
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
	    signal->shared_pending.signal;
	pending &= get_si(current)->blocked;
	int ret = 0;
800118c4:	2404ffea 	li	a0,-22
800118c8:	0002200b 	movn	a0,zero,v0
800118cc:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:247
	if (set != NULL) {
		lock_mm(current->mm);
		if (!copy_to_user(current->mm, set, &pending, sizeof(sigset_t))) {
			ret = -E_INVAL;
		}
		unlock_mm(current->mm);
800118d0:	8c640020 	lw	a0,32(v1)
800118d4:	0c004c29 	jal	800130a4 <unlock_mm>
800118d8:	afa20018 	sw	v0,24(sp)
800118dc:	8fa20018 	lw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:250
	}
	return ret;
}
800118e0:	8fbf0024 	lw	ra,36(sp)
800118e4:	8fb00020 	lw	s0,32(sp)
800118e8:	03e00008 	jr	ra
800118ec:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:235
}

// do syscall sigpending
int do_sigpending(sigset_t * set)
{
	assert(get_si(current)->sighand);
800118f0:	3c048002 	lui	a0,0x8002
800118f4:	3c068002 	lui	a2,0x8002
800118f8:	3c078002 	lui	a3,0x8002
800118fc:	24842b60 	addiu	a0,a0,11104
80011900:	240500eb 	li	a1,235
80011904:	24c609b0 	addiu	a2,a2,2480
80011908:	0c006afd 	jal	8001abf4 <__panic>
8001190c:	24e72bbc 	addiu	a3,a3,11196

80011910 <do_sigprocmask>:
do_sigprocmask():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:254
	return ret;
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
80011910:	27bdffc0 	addiu	sp,sp,-64
80011914:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:255
	assert(get_si(current)->signal);
80011918:	3c118015 	lui	s1,0x8015
8001191c:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:254
	return ret;
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
80011920:	afb50038 	sw	s5,56(sp)
80011924:	afb40034 	sw	s4,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:255
	assert(get_si(current)->signal);
80011928:	8c4300c0 	lw	v1,192(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:254
	return ret;
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
8001192c:	afb2002c 	sw	s2,44(sp)
80011930:	afbf003c 	sw	ra,60(sp)
80011934:	afb30030 	sw	s3,48(sp)
80011938:	afb00024 	sw	s0,36(sp)
8001193c:	00809021 	move	s2,a0
80011940:	00a0a821 	move	s5,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:255
	assert(get_si(current)->signal);
80011944:	10600051 	beqz	v1,80011a8c <do_sigprocmask+0x17c>
80011948:	00c0a021 	move	s4,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:258
	sigset_t new;
	int ret = -E_INVAL;
	if (set == NULL) {
8001194c:	10a0002e 	beqz	a1,80011a08 <do_sigprocmask+0xf8>
80011950:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:261
		goto out;
	}
	struct mm_struct *mm = current->mm;
80011954:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:262
	lock_mm(mm);
80011958:	0c004c18 	jal	80013060 <lock_mm>
8001195c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:263
	if (!copy_from_user(mm, &new, set, sizeof(sigset_t), 1)) {
80011960:	24020001 	li	v0,1
80011964:	02002021 	move	a0,s0
80011968:	27a50018 	addiu	a1,sp,24
8001196c:	02a03021 	move	a2,s5
80011970:	24070008 	li	a3,8
80011974:	0c00781a 	jal	8001e068 <copy_from_user>
80011978:	afa20010 	sw	v0,16(sp)
8001197c:	1040003f 	beqz	v0,80011a7c <do_sigprocmask+0x16c>
80011980:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:267
		unlock_mm(mm);
		goto out;
	}
	if (old != NULL
80011984:	12800008 	beqz	s4,800119a8 <do_sigprocmask+0x98>
80011988:	8e2677a4 	lw	a2,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:268
	    && !copy_to_user(mm, old, &(get_si(current)->blocked),
8001198c:	02002021 	move	a0,s0
80011990:	02802821 	move	a1,s4
80011994:	24c600c8 	addiu	a2,a2,200
80011998:	0c007834 	jal	8001e0d0 <copy_to_user>
8001199c:	24070008 	li	a3,8
800119a0:	10400036 	beqz	v0,80011a7c <do_sigprocmask+0x16c>
800119a4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:273
			     sizeof(sigset_t))) {
		unlock_mm(mm);
		goto out;
	}
	unlock_mm(mm);
800119a8:	0c004c29 	jal	800130a4 <unlock_mm>
800119ac:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:275
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
800119b0:	8fa40018 	lw	a0,24(sp)
800119b4:	3c03fffb 	lui	v1,0xfffb
800119b8:	3463feff 	ori	v1,v1,0xfeff
800119bc:	00831824 	and	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:277
	ret = 0;
	switch (how) {
800119c0:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:275
		unlock_mm(mm);
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
800119c4:	8fa2001c 	lw	v0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:277
	ret = 0;
	switch (how) {
800119c8:	1244001f 	beq	s2,a0,80011a48 <do_sigprocmask+0x138>
800119cc:	afa30018 	sw	v1,24(sp)
800119d0:	24040002 	li	a0,2
800119d4:	12440016 	beq	s2,a0,80011a30 <do_sigprocmask+0x120>
800119d8:	8e2477a4 	lw	a0,30628(s1)
800119dc:	16400008 	bnez	s2,80011a00 <do_sigprocmask+0xf0>
800119e0:	2413ffea 	li	s3,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:279
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
800119e4:	8c8600c8 	lw	a2,200(a0)
800119e8:	8c8500cc 	lw	a1,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:276
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
	ret = 0;
800119ec:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:279
	switch (how) {
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
800119f0:	00c31825 	or	v1,a2,v1
800119f4:	00a21025 	or	v0,a1,v0
800119f8:	ac8300c8 	sw	v1,200(a0)
800119fc:	ac8200cc 	sw	v0,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:290
		sigset_initwith(get_si(current)->blocked, new);
		break;
	default:
		ret = -E_INVAL;
	}
	sig_recalc_pending(current);
80011a00:	0c004522 	jal	80011488 <sig_recalc_pending>
80011a04:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:293
out:
	return ret;
}
80011a08:	8fbf003c 	lw	ra,60(sp)
80011a0c:	02601021 	move	v0,s3
80011a10:	8fb50038 	lw	s5,56(sp)
80011a14:	8fb40034 	lw	s4,52(sp)
80011a18:	8fb30030 	lw	s3,48(sp)
80011a1c:	8fb2002c 	lw	s2,44(sp)
80011a20:	8fb10028 	lw	s1,40(sp)
80011a24:	8fb00024 	lw	s0,36(sp)
80011a28:	03e00008 	jr	ra
80011a2c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:276
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
	ret = 0;
80011a30:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:285
		break;
	case SIG_UNBLOCK:
		sigset_delmask(get_si(current)->blocked, new);
		break;
	case SIG_SETMASK:
		sigset_initwith(get_si(current)->blocked, new);
80011a34:	ac8300c8 	sw	v1,200(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:290
		break;
	default:
		ret = -E_INVAL;
	}
	sig_recalc_pending(current);
80011a38:	0c004522 	jal	80011488 <sig_recalc_pending>
80011a3c:	ac8200cc 	sw	v0,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:293
out:
	return ret;
}
80011a40:	08004683 	j	80011a0c <do_sigprocmask+0xfc>
80011a44:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:282
	switch (how) {
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
		break;
	case SIG_UNBLOCK:
		sigset_delmask(get_si(current)->blocked, new);
80011a48:	8e2477a4 	lw	a0,30628(s1)
80011a4c:	00031827 	nor	v1,zero,v1
80011a50:	00021027 	nor	v0,zero,v0
80011a54:	8c8600c8 	lw	a2,200(a0)
80011a58:	8c8500cc 	lw	a1,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:276
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
	ret = 0;
80011a5c:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:282
	switch (how) {
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
		break;
	case SIG_UNBLOCK:
		sigset_delmask(get_si(current)->blocked, new);
80011a60:	00c31824 	and	v1,a2,v1
80011a64:	00a21024 	and	v0,a1,v0
80011a68:	ac8300c8 	sw	v1,200(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:290
		sigset_initwith(get_si(current)->blocked, new);
		break;
	default:
		ret = -E_INVAL;
	}
	sig_recalc_pending(current);
80011a6c:	0c004522 	jal	80011488 <sig_recalc_pending>
80011a70:	ac8200cc 	sw	v0,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:293
out:
	return ret;
}
80011a74:	08004683 	j	80011a0c <do_sigprocmask+0xfc>
80011a78:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:270
		goto out;
	}
	if (old != NULL
	    && !copy_to_user(mm, old, &(get_si(current)->blocked),
			     sizeof(sigset_t))) {
		unlock_mm(mm);
80011a7c:	0c004c29 	jal	800130a4 <unlock_mm>
80011a80:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:271
		goto out;
80011a84:	08004683 	j	80011a0c <do_sigprocmask+0xfc>
80011a88:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:255
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
	assert(get_si(current)->signal);
80011a8c:	3c048002 	lui	a0,0x8002
80011a90:	3c068002 	lui	a2,0x8002
80011a94:	3c078002 	lui	a3,0x8002
80011a98:	24842b60 	addiu	a0,a0,11104
80011a9c:	240500ff 	li	a1,255
80011aa0:	24c609b0 	addiu	a2,a2,2480
80011aa4:	0c006afd 	jal	8001abf4 <__panic>
80011aa8:	24e72bd8 	addiu	a3,a3,11224

80011aac <do_signal>:
do_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:553
	schedule();
}

// do the signals in current
int do_signal(struct trapframe *tf, sigset_t * old)
{
80011aac:	27bdffc0 	addiu	sp,sp,-64
80011ab0:	afb60030 	sw	s6,48(sp)
80011ab4:	afb5002c 	sw	s5,44(sp)
80011ab8:	afbf003c 	sw	ra,60(sp)
80011abc:	afbe0038 	sw	s8,56(sp)
80011ac0:	afb70034 	sw	s7,52(sp)
80011ac4:	afb40028 	sw	s4,40(sp)
80011ac8:	afb30024 	sw	s3,36(sp)
80011acc:	afb20020 	sw	s2,32(sp)
80011ad0:	afb1001c 	sw	s1,28(sp)
80011ad4:	afb00018 	sw	s0,24(sp)
80011ad8:	0080a821 	move	s5,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:554
	assert(!trap_in_kernel(tf));
80011adc:	0c007b80 	jal	8001ee00 <trap_in_kernel>
80011ae0:	00a0b021 	move	s6,a1
80011ae4:	144000e4 	bnez	v0,80011e78 <do_signal+0x3cc>
80011ae8:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:555
	if (!get_si(current)->signal || !get_si(current)->sighand)
80011aec:	8c7e77a4 	lw	s8,30628(v1)
80011af0:	8fc300c0 	lw	v1,192(s8)
80011af4:	10600053 	beqz	v1,80011c44 <do_signal+0x198>
80011af8:	00008021 	move	s0,zero
80011afc:	8fc300c4 	lw	v1,196(s8)
80011b00:	10600050 	beqz	v1,80011c44 <do_signal+0x198>
80011b04:	00408021 	move	s0,v0
signal_pending():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:122
}

// is there a signal pending in proc
static inline bool signal_pending(struct proc_struct *proc)
{
	return proc->flags & TIF_SIGPENDING;
80011b08:	8fc3005c 	lw	v1,92(s8)
80011b0c:	7c620400 	ext	v0,v1,0x10,0x1
do_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:557
int do_signal(struct trapframe *tf, sigset_t * old)
{
	assert(!trap_in_kernel(tf));
	if (!get_si(current)->signal || !get_si(current)->sighand)
		return 0;
	if (!signal_pending(current))
80011b10:	1040004c 	beqz	v0,80011c44 <do_signal+0x198>
80011b14:	27c200c8 	addiu	v0,s8,200
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:561
		return 0;
	int sign;
	if (old == NULL) {
		old = &get_si(current)->blocked;
80011b18:	0056b00a 	movz	s6,v0,s6
dequeue_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:77
// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
		while (++sign < 64) {
80011b1c:	24170040 	li	s7,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:76

// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
80011b20:	8fcb00e0 	lw	t3,224(s8)
80011b24:	8fca00e4 	lw	t2,228(s8)
80011b28:	016a1025 	or	v0,t3,t2
80011b2c:	50400053 	beqzl	v0,80011c7c <do_signal+0x1d0>
80011b30:	8fc500c0 	lw	a1,192(s8)
80011b34:	8fc700cc 	lw	a3,204(s8)
80011b38:	8fc900c8 	lw	t1,200(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:77
		while (++sign < 64) {
80011b3c:	24100001 	li	s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:76

// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
80011b40:	00001821 	move	v1,zero
80011b44:	00074040 	sll	t0,a3,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:79
		while (++sign < 64) {
			if (!sigismember(get_si(proc)->blocked, sign)
			    && sigismember(get_si(proc)->pending.signal, sign)) {
80011b48:	080046d7 	j	80011b5c <do_signal+0xb0>
80011b4c:	000a6040 	sll	t4,t2,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:77
// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
		while (++sign < 64) {
80011b50:	10570049 	beq	v0,s7,80011c78 <do_signal+0x1cc>
80011b54:	02001821 	move	v1,s0
80011b58:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:78
			if (!sigismember(get_si(proc)->blocked, sign)
80011b5c:	00032827 	nor	a1,zero,v1
80011b60:	00a83004 	sllv	a2,t0,a1
80011b64:	00691006 	srlv	v0,t1,v1
80011b68:	00c21025 	or	v0,a2,v0
80011b6c:	30640020 	andi	a0,v1,0x20
80011b70:	00673006 	srlv	a2,a3,v1
80011b74:	00c4100b 	movn	v0,a2,a0
80011b78:	30420001 	andi	v0,v0,0x1
80011b7c:	1440fff4 	bnez	v0,80011b50 <do_signal+0xa4>
80011b80:	26020001 	addiu	v0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:79
			    && sigismember(get_si(proc)->pending.signal, sign)) {
80011b84:	006b1006 	srlv	v0,t3,v1
80011b88:	00ac2804 	sllv	a1,t4,a1
80011b8c:	00a21025 	or	v0,a1,v0
80011b90:	006a1806 	srlv	v1,t2,v1
80011b94:	0064100b 	movn	v0,v1,a0
80011b98:	30420001 	andi	v0,v0,0x1
80011b9c:	1040ffec 	beqz	v0,80011b50 <do_signal+0xa4>
80011ba0:	26020001 	addiu	v0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:80
				remove_from_queue(sign,
80011ba4:	02002021 	move	a0,s0
80011ba8:	0c0044f9 	jal	800113e4 <remove_from_queue>
80011bac:	27c500d8 	addiu	a1,s8,216
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:82
						  &(get_si(proc)->pending));
				sig_recalc_pending(proc);
80011bb0:	0c004522 	jal	80011488 <sig_recalc_pending>
80011bb4:	03c02021 	move	a0,s8
do_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:570
#ifdef __SIGDEBUG
		kprintf("do_signal(): sign = %d, pid = %d\n", sign,
			current->pid);
#endif
		struct sigaction *act =
		    &(get_si(current)->sighand->action[sign - 1]);
80011bb8:	3c028015 	lui	v0,0x8015
80011bbc:	8c5e77a4 	lw	s8,30628(v0)
80011bc0:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:571
		if (sign == SIGKILL) {
80011bc4:	24020009 	li	v0,9
80011bc8:	1202001c 	beq	s0,v0,80011c3c <do_signal+0x190>
80011bcc:	8fc300c4 	lw	v1,196(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:574
			do_exit(-E_KILLED);
			break;
		} else if (sign == SIGSTOP) {
80011bd0:	24020013 	li	v0,19
80011bd4:	1202005e 	beq	s0,v0,80011d50 <do_signal+0x2a4>
80011bd8:	2611ffff 	addiu	s1,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:569
	while ((sign = dequeue_signal(current)) != 0) {
#ifdef __SIGDEBUG
		kprintf("do_signal(): sign = %d, pid = %d\n", sign,
			current->pid);
#endif
		struct sigaction *act =
80011bdc:	001110c0 	sll	v0,s1,0x3
80011be0:	00119140 	sll	s2,s1,0x5
80011be4:	02429023 	subu	s2,s2,v0
80011be8:	26520008 	addiu	s2,s2,8
80011bec:	00729021 	addu	s2,v1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:576
		if (sign == SIGKILL) {
			do_exit(-E_KILLED);
			break;
		} else if (sign == SIGSTOP) {
			do_signal_stop(current);
		} else if (act->sa_handler == SIG_IGN) {
80011bf0:	8e420000 	lw	v0,0(s2)
80011bf4:	24130001 	li	s3,1
80011bf8:	5053ffca 	beql	v0,s3,80011b24 <do_signal+0x78>
80011bfc:	8fcb00e0 	lw	t3,224(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:578
			continue;
		} else if (act->sa_handler == SIG_DFL) {
80011c00:	14400072 	bnez	v0,80011dcc <do_signal+0x320>
80011c04:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:579
			if (current == initproc) {
80011c08:	8c627798 	lw	v0,30616(v1)
80011c0c:	13c2ffc4 	beq	s8,v0,80011b20 <do_signal+0x74>
80011c10:	2602ffef 	addiu	v0,s0,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:581
				continue;
			} else if (sign == SIGCONT || sign == SIGCHLD
80011c14:	2c420002 	sltiu	v0,v0,2
80011c18:	1440ffc1 	bnez	v0,80011b20 <do_signal+0x74>
80011c1c:	2402001c 	li	v0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:582
				   || sign == SIGWINCH || sign == SIGURG) {
80011c20:	1202ffbf 	beq	s0,v0,80011b20 <do_signal+0x74>
80011c24:	24020017 	li	v0,23
80011c28:	1202ffbd 	beq	s0,v0,80011b20 <do_signal+0x74>
80011c2c:	2602ffec 	addiu	v0,s0,-20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:584
				continue;
			} else if (sign == SIGTSTP || sign == SIGTTIN
80011c30:	2c420003 	sltiu	v0,v0,3
80011c34:	5440ffbb 	bnezl	v0,80011b24 <do_signal+0x78>
80011c38:	8fcb00e0 	lw	t3,224(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:593
			} else {
#ifdef __SIGDEBUG
				kprintf("do_signal() exit pid = %d\n",
					current->pid);
#endif
				do_exit(-E_KILLED);
80011c3c:	0c003d34 	jal	8000f4d0 <do_exit>
80011c40:	2404ffdb 	li	a0,-37
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011c44:	8fbf003c 	lw	ra,60(sp)
80011c48:	02001021 	move	v0,s0
80011c4c:	8fbe0038 	lw	s8,56(sp)
80011c50:	8fb70034 	lw	s7,52(sp)
80011c54:	8fb60030 	lw	s6,48(sp)
80011c58:	8fb5002c 	lw	s5,44(sp)
80011c5c:	8fb40028 	lw	s4,40(sp)
80011c60:	8fb30024 	lw	s3,36(sp)
80011c64:	8fb20020 	lw	s2,32(sp)
80011c68:	8fb1001c 	lw	s1,28(sp)
80011c6c:	8fb00018 	lw	s0,24(sp)
80011c70:	03e00008 	jr	ra
80011c74:	27bd0040 	addiu	sp,sp,64
dequeue_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:88
				return sign;
			}
		}
	}
	sign = 0;
	if (get_si(proc)->signal->shared_pending.signal != 0) {
80011c78:	8fc500c0 	lw	a1,192(s8)
80011c7c:	8cac0010 	lw	t4,16(a1)
80011c80:	8cab0014 	lw	t3,20(a1)
80011c84:	018b1025 	or	v0,t4,t3
80011c88:	10400023 	beqz	v0,80011d18 <do_signal+0x26c>
80011c8c:	24100001 	li	s0,1
80011c90:	8fc800cc 	lw	t0,204(s8)
80011c94:	8fca00c8 	lw	t2,200(s8)
80011c98:	00001021 	move	v0,zero
80011c9c:	00084840 	sll	t1,t0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:91
		while (++sign < 64) {
			if (!sigismember(get_si(proc)->blocked, sign)
			    && sigismember(get_si(proc)->signal->
80011ca0:	0800472d 	j	80011cb4 <do_signal+0x208>
80011ca4:	000b6840 	sll	t5,t3,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:89
			}
		}
	}
	sign = 0;
	if (get_si(proc)->signal->shared_pending.signal != 0) {
		while (++sign < 64) {
80011ca8:	1077001b 	beq	v1,s7,80011d18 <do_signal+0x26c>
80011cac:	02001021 	move	v0,s0
80011cb0:	00608021 	move	s0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:90
			if (!sigismember(get_si(proc)->blocked, sign)
80011cb4:	00023027 	nor	a2,zero,v0
80011cb8:	00c93804 	sllv	a3,t1,a2
80011cbc:	004a1806 	srlv	v1,t2,v0
80011cc0:	00e31825 	or	v1,a3,v1
80011cc4:	30440020 	andi	a0,v0,0x20
80011cc8:	00483806 	srlv	a3,t0,v0
80011ccc:	00e4180b 	movn	v1,a3,a0
80011cd0:	30630001 	andi	v1,v1,0x1
80011cd4:	1460fff4 	bnez	v1,80011ca8 <do_signal+0x1fc>
80011cd8:	26030001 	addiu	v1,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:91
			    && sigismember(get_si(proc)->signal->
80011cdc:	004c1806 	srlv	v1,t4,v0
80011ce0:	00cd3004 	sllv	a2,t5,a2
80011ce4:	00c31825 	or	v1,a2,v1
80011ce8:	004b1006 	srlv	v0,t3,v0
80011cec:	0044180b 	movn	v1,v0,a0
80011cf0:	30630001 	andi	v1,v1,0x1
80011cf4:	1060ffec 	beqz	v1,80011ca8 <do_signal+0x1fc>
80011cf8:	26030001 	addiu	v1,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:93
					   shared_pending.signal, sign)) {
				remove_from_queue(sign,
80011cfc:	02002021 	move	a0,s0
80011d00:	0c0044f9 	jal	800113e4 <remove_from_queue>
80011d04:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:96
						  &(get_si(proc)->
						    signal->shared_pending));
				sig_recalc_pending(proc);
80011d08:	0c004522 	jal	80011488 <sig_recalc_pending>
80011d0c:	03c02021 	move	a0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:570
#ifdef __SIGDEBUG
		kprintf("do_signal(): sign = %d, pid = %d\n", sign,
			current->pid);
#endif
		struct sigaction *act =
		    &(get_si(current)->sighand->action[sign - 1]);
80011d10:	080046ef 	j	80011bbc <do_signal+0x110>
80011d14:	3c028015 	lui	v0,0x8015
do_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011d18:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:88
				return sign;
			}
		}
	}
	sign = 0;
	if (get_si(proc)->signal->shared_pending.signal != 0) {
80011d1c:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011d20:	02001021 	move	v0,s0
80011d24:	8fbe0038 	lw	s8,56(sp)
80011d28:	8fb70034 	lw	s7,52(sp)
80011d2c:	8fb60030 	lw	s6,48(sp)
80011d30:	8fb5002c 	lw	s5,44(sp)
80011d34:	8fb40028 	lw	s4,40(sp)
80011d38:	8fb30024 	lw	s3,36(sp)
80011d3c:	8fb20020 	lw	s2,32(sp)
80011d40:	8fb1001c 	lw	s1,28(sp)
80011d44:	8fb00018 	lw	s0,24(sp)
80011d48:	03e00008 	jr	ra
80011d4c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:574
		struct sigaction *act =
		    &(get_si(current)->sighand->action[sign - 1]);
		if (sign == SIGKILL) {
			do_exit(-E_KILLED);
			break;
		} else if (sign == SIGSTOP) {
80011d50:	03c08021 	move	s0,s8
do_signal_stop():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:538
// stop thread group
static void do_signal_stop(struct proc_struct *proc)
{
	struct proc_struct *next = proc;
	do {
		if (next->state == PROC_UNINIT || next->state == PROC_ZOMBIE
80011d54:	24110003 	li	s1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:542
		    || next->flags & PF_EXITING) {
			continue;
		}
		if (next->state == PROC_SLEEPING
80011d58:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:538
// stop thread group
static void do_signal_stop(struct proc_struct *proc)
{
	struct proc_struct *next = proc;
	do {
		if (next->state == PROC_UNINIT || next->state == PROC_ZOMBIE
80011d5c:	8e020000 	lw	v0,0(s0)
80011d60:	5040000d 	beqzl	v0,80011d98 <do_signal+0x2ec>
80011d64:	8e100098 	lw	s0,152(s0)
80011d68:	5051000b 	beql	v0,s1,80011d98 <do_signal+0x2ec>
80011d6c:	8e100098 	lw	s0,152(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:539
		    || next->flags & PF_EXITING) {
80011d70:	8e03005c 	lw	v1,92(s0)
80011d74:	30630001 	andi	v1,v1,0x1
80011d78:	54600007 	bnezl	v1,80011d98 <do_signal+0x2ec>
80011d7c:	8e100098 	lw	s0,152(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:542
			continue;
		}
		if (next->state == PROC_SLEEPING
80011d80:	1452000d 	bne	v0,s2,80011db8 <do_signal+0x30c>
80011d84:	3c058000 	lui	a1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:543
		    && !(next->wait_state & WT_INTERRUPTED)) {
80011d88:	8e020084 	lw	v0,132(s0)
80011d8c:	0440000b 	bltz	v0,80011dbc <do_signal+0x310>
80011d90:	02002021 	move	a0,s0
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80011d94:	8e100098 	lw	s0,152(s0)
do_signal_stop():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:547
			continue;
		}
		stop_proc(next, WT_SIGNAL);
	} while ((next = next_thread(next)) != proc);
80011d98:	2610ff6c 	addiu	s0,s0,-148
80011d9c:	57d0fff0 	bnel	s8,s0,80011d60 <do_signal+0x2b4>
80011da0:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:548
	schedule();
80011da4:	0c00059e 	jal	80001678 <schedule>
80011da8:	00000000 	nop
80011dac:	3c028015 	lui	v0,0x8015
80011db0:	080046c8 	j	80011b20 <do_signal+0x74>
80011db4:	8c5e77a4 	lw	s8,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:546
		}
		if (next->state == PROC_SLEEPING
		    && !(next->wait_state & WT_INTERRUPTED)) {
			continue;
		}
		stop_proc(next, WT_SIGNAL);
80011db8:	02002021 	move	a0,s0
80011dbc:	0c0004d3 	jal	8000134c <stop_proc>
80011dc0:	34a50400 	ori	a1,a1,0x400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80011dc4:	08004766 	j	80011d98 <do_signal+0x2ec>
80011dc8:	8e100098 	lw	s0,152(s0)
handle_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:517
// prepare block for signal handler
static int
handle_signal(int sign, struct sigaction *act, sigset_t oldset,
	      struct trapframe *tf)
{
	int ret = __sig_setup_frame(sign, act, oldset, tf);
80011dcc:	8ec60000 	lw	a2,0(s6)
80011dd0:	8ec70004 	lw	a3,4(s6)
80011dd4:	02002021 	move	a0,s0
80011dd8:	02402821 	move	a1,s2
80011ddc:	0c007962 	jal	8001e588 <__sig_setup_frame>
80011de0:	afb50010 	sw	s5,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:519

	if (ret != 0) {
80011de4:	14400004 	bnez	v0,80011df8 <do_signal+0x34c>
80011de8:	8e420010 	lw	v0,16(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:523
		return ret;
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
80011dec:	7c430780 	ext	v1,v0,0x1e,0x1
80011df0:	50600008 	beqzl	v1,80011e14 <do_signal+0x368>
80011df4:	8e8277a4 	lw	v0,30628(s4)
do_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:602
		} else {
#ifdef __SIGDEBUG
			kprintf("do_signal() call user %d\n", sign);
#endif
			handle_signal(sign, act, *old, tf);
			if ((act->sa_flags & SA_ONESHOT) != 0) {
80011df8:	3c038000 	lui	v1,0x8000
80011dfc:	24631000 	addiu	v1,v1,4096
80011e00:	00431024 	and	v0,v0,v1
80011e04:	5440ff8f 	bnezl	v0,80011c44 <do_signal+0x198>
80011e08:	ae400000 	sw	zero,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011e0c:	08004712 	j	80011c48 <do_signal+0x19c>
80011e10:	8fbf003c 	lw	ra,60(sp)
handle_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:526
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
		get_si(current)->blocked |= act->sa_mask;
		sigset_add(get_si(current)->blocked, sign);
80011e14:	02339804 	sllv	s3,s3,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:524
	if (ret != 0) {
		return ret;
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
80011e18:	0c004513 	jal	8001144c <lock_sig>
80011e1c:	8c4400c4 	lw	a0,196(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:525
		get_si(current)->blocked |= act->sa_mask;
80011e20:	8e8277a4 	lw	v0,30628(s4)
80011e24:	8e480008 	lw	t0,8(s2)
80011e28:	8e46000c 	lw	a2,12(s2)
80011e2c:	8c4700c8 	lw	a3,200(v0)
80011e30:	8c4300cc 	lw	v1,204(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:526
		sigset_add(get_si(current)->blocked, sign);
80011e34:	32240020 	andi	a0,s1,0x20
80011e38:	02602821 	move	a1,s3
80011e3c:	0004280a 	movz	a1,zero,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:525
		return ret;
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
		get_si(current)->blocked |= act->sa_mask;
80011e40:	01078825 	or	s1,t0,a3
80011e44:	00c31825 	or	v1,a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:526
		sigset_add(get_si(current)->blocked, sign);
80011e48:	0004980b 	movn	s3,zero,a0
80011e4c:	00651825 	or	v1,v1,a1
80011e50:	02338825 	or	s1,s1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:527
		sig_recalc_pending(current);
80011e54:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:526
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
		get_si(current)->blocked |= act->sa_mask;
		sigset_add(get_si(current)->blocked, sign);
80011e58:	ac5100c8 	sw	s1,200(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:527
		sig_recalc_pending(current);
80011e5c:	0c004522 	jal	80011488 <sig_recalc_pending>
80011e60:	ac4300cc 	sw	v1,204(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:528
		unlock_sig(get_si(current)->sighand);
80011e64:	8e8277a4 	lw	v0,30628(s4)
80011e68:	0c004519 	jal	80011464 <unlock_sig>
80011e6c:	8c4400c4 	lw	a0,196(v0)
80011e70:	0800477e 	j	80011df8 <do_signal+0x34c>
80011e74:	8e420010 	lw	v0,16(s2)
do_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:554
}

// do the signals in current
int do_signal(struct trapframe *tf, sigset_t * old)
{
	assert(!trap_in_kernel(tf));
80011e78:	3c048002 	lui	a0,0x8002
80011e7c:	3c068002 	lui	a2,0x8002
80011e80:	3c078002 	lui	a3,0x8002
80011e84:	24842b60 	addiu	a0,a0,11104
80011e88:	2405022a 	li	a1,554
80011e8c:	24c609b0 	addiu	a2,a2,2480
80011e90:	0c006afd 	jal	8001abf4 <__panic>
80011e94:	24e72bf0 	addiu	a3,a3,11248

80011e98 <do_sigsuspend>:
do_sigsuspend():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011e98:	27bdffb8 	addiu	sp,sp,-72
80011e9c:	afb00034 	sw	s0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:298
	struct mm_struct *mm = pls_read(current)->mm;
80011ea0:	3c108015 	lui	s0,0x8015
80011ea4:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011ea8:	afb10038 	sw	s1,56(sp)
80011eac:	00803021 	move	a2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:298
	struct mm_struct *mm = pls_read(current)->mm;
80011eb0:	8c510020 	lw	s1,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011eb4:	afbf0044 	sw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:300
	struct mm_struct *mm = pls_read(current)->mm;
	sigset_t mask;
	lock_mm(mm);
80011eb8:	afa60028 	sw	a2,40(sp)
80011ebc:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011ec0:	afb30040 	sw	s3,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:300
	struct mm_struct *mm = pls_read(current)->mm;
	sigset_t mask;
	lock_mm(mm);
80011ec4:	0c004c18 	jal	80013060 <lock_mm>
80011ec8:	afb2003c 	sw	s2,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:302
	{
		if (!copy_from_user(mm, &mask, pmask, sizeof(sigset_t), 0)) {
80011ecc:	8fa60028 	lw	a2,40(sp)
80011ed0:	02202021 	move	a0,s1
80011ed4:	27a50020 	addiu	a1,sp,32
80011ed8:	24070008 	li	a3,8
80011edc:	0c00781a 	jal	8001e068 <copy_from_user>
80011ee0:	afa00010 	sw	zero,16(sp)
80011ee4:	10400023 	beqz	v0,80011f74 <do_sigsuspend+0xdc>
80011ee8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:307
			unlock_mm(mm);
			return -E_INVAL;
		}
	}
	unlock_mm(mm);
80011eec:	0c004c29 	jal	800130a4 <unlock_mm>
80011ef0:	3c118000 	lui	s1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:318
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011ef4:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:314

	sigset_t set;
	sigset_initwith(set, 0);
	sigset_addmask(set, mask);
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
80011ef8:	8fa60020 	lw	a2,32(sp)
80011efc:	3c05fffb 	lui	a1,0xfffb
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:318
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f00:	8c8200c8 	lw	v0,200(a0)
80011f04:	8c8300cc 	lw	v1,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:314

	sigset_t set;
	sigset_initwith(set, 0);
	sigset_addmask(set, mask);
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
80011f08:	34a5feff 	ori	a1,a1,0xfeff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:318
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f0c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:319
	get_si(current)->blocked = set;
80011f10:	8fa20024 	lw	v0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:314

	sigset_t set;
	sigset_initwith(set, 0);
	sigset_addmask(set, mask);
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
80011f14:	00c52824 	and	a1,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:318
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f18:	afa3001c 	sw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:319
	get_si(current)->blocked = set;
80011f1c:	ac8500c8 	sw	a1,200(a0)
80011f20:	ac8200cc 	sw	v0,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:322

	while (1) {
		current->state = PROC_SLEEPING;
80011f24:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:323
		current->wait_state = WT_SIGNAL;
80011f28:	02009821 	move	s3,s0
80011f2c:	26310400 	addiu	s1,s1,1024
80011f30:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:322

	sigset_t old_blocked = get_si(current)->blocked;
	get_si(current)->blocked = set;

	while (1) {
		current->state = PROC_SLEEPING;
80011f34:	ac920000 	sw	s2,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:324
		current->wait_state = WT_SIGNAL;
		schedule();
80011f38:	0c00059e 	jal	80001678 <schedule>
80011f3c:	ac510084 	sw	s1,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:327
		//kprintf("# HERE %08x %08x\n", current->state, current->wait_state);
		int ret;
		if ((ret = do_signal(current->tf, &old_blocked)) != 0) {
80011f40:	8e0277a4 	lw	v0,30628(s0)
80011f44:	27a50018 	addiu	a1,sp,24
80011f48:	0c0046ab 	jal	80011aac <do_signal>
80011f4c:	8c440054 	lw	a0,84(v0)
80011f50:	5040fff7 	beqzl	v0,80011f30 <do_sigsuspend+0x98>
80011f54:	8e6477a4 	lw	a0,30628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:331
			return ret;
		}
	}
}
80011f58:	8fbf0044 	lw	ra,68(sp)
80011f5c:	8fb30040 	lw	s3,64(sp)
80011f60:	8fb2003c 	lw	s2,60(sp)
80011f64:	8fb10038 	lw	s1,56(sp)
80011f68:	8fb00034 	lw	s0,52(sp)
80011f6c:	03e00008 	jr	ra
80011f70:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:303
	struct mm_struct *mm = pls_read(current)->mm;
	sigset_t mask;
	lock_mm(mm);
	{
		if (!copy_from_user(mm, &mask, pmask, sizeof(sigset_t), 0)) {
			unlock_mm(mm);
80011f74:	0c004c29 	jal	800130a4 <unlock_mm>
80011f78:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:304
			return -E_INVAL;
80011f7c:	080047d6 	j	80011f58 <do_sigsuspend+0xc0>
80011f80:	2402ffea 	li	v0,-22

80011f84 <raise_signal>:
raise_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:612
	}
	return sign;
}

int raise_signal(struct proc_struct *proc, int sign, bool group)
{
80011f84:	27bdffc8 	addiu	sp,sp,-56
80011f88:	afb10020 	sw	s1,32(sp)
80011f8c:	afb0001c 	sw	s0,28(sp)
80011f90:	afbf0034 	sw	ra,52(sp)
80011f94:	afb50030 	sw	s5,48(sp)
80011f98:	afb4002c 	sw	s4,44(sp)
80011f9c:	afb30028 	sw	s3,40(sp)
80011fa0:	afb20024 	sw	s2,36(sp)
80011fa4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:617
	struct siginfo_t info;
	info.si_signo = sign;
	info.si_errno = 0;
	info.si_code = SI_USER;
	if (group) {
80011fa8:	14c0004d 	bnez	a2,800120e0 <raise_signal+0x15c>
80011fac:	00a08821 	move	s1,a1
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:391
static int
specific_send_sig_info(int sign, struct siginfo_t *info, struct proc_struct *to)
{
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
80011fb0:	0c004513 	jal	8001144c <lock_sig>
80011fb4:	8c8400c4 	lw	a0,196(a0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80011fb8:	40026000 	mfc0	v0,c0_status
80011fbc:	30420001 	andi	v0,v0,0x1
80011fc0:	14400090 	bnez	v0,80012204 <raise_signal+0x280>
80011fc4:	00009021 	move	s2,zero
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:394
	local_intr_save(intr_flag);

	if (!sigismember(get_si(to)->blocked, sign)
80011fc8:	8e0400cc 	lw	a0,204(s0)
80011fcc:	8e0200c8 	lw	v0,200(s0)
80011fd0:	2623ffff 	addiu	v1,s1,-1
80011fd4:	00043840 	sll	a3,a0,0x1
80011fd8:	00033027 	nor	a2,zero,v1
80011fdc:	00c73804 	sllv	a3,a3,a2
80011fe0:	00621006 	srlv	v0,v0,v1
80011fe4:	30650020 	andi	a1,v1,0x20
80011fe8:	00e21025 	or	v0,a3,v0
80011fec:	00642006 	srlv	a0,a0,v1
80011ff0:	0085100b 	movn	v0,a0,a1
80011ff4:	30480001 	andi	t0,v0,0x1
80011ff8:	55000012 	bnezl	t0,80012044 <raise_signal+0xc0>
80011ffc:	8e0700e4 	lw	a3,228(s0)
ignore_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80012000:	24020009 	li	v0,9
80012004:	5222000f 	beql	s1,v0,80012044 <raise_signal+0xc0>
80012008:	8e0700e4 	lw	a3,228(s0)
8001200c:	24020013 	li	v0,19
80012010:	1222000b 	beq	s1,v0,80012040 <raise_signal+0xbc>
80012014:	00033940 	sll	a3,v1,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:179
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
80012018:	8e0400c4 	lw	a0,196(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:178
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
8001201c:	000310c0 	sll	v0,v1,0x3
80012020:	00e21023 	subu	v0,a3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:179
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
80012024:	00821021 	addu	v0,a0,v0
80012028:	8c440008 	lw	a0,8(v0)
8001202c:	24070001 	li	a3,1
80012030:	10870019 	beq	a0,a3,80012098 <raise_signal+0x114>
80012034:	00001021 	move	v0,zero
80012038:	108000f0 	beqz	a0,800123fc <raise_signal+0x478>
8001203c:	2624ffef 	addiu	a0,s1,-17
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:398

	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
		goto out;
	}
	if (sigismember(get_si(to)->pending.signal, sign)) {
80012040:	8e0700e4 	lw	a3,228(s0)
80012044:	8e0900e0 	lw	t1,224(s0)
80012048:	00072040 	sll	a0,a3,0x1
8001204c:	00c43004 	sllv	a2,a0,a2
80012050:	00692006 	srlv	a0,t1,v1
80012054:	00c42025 	or	a0,a2,a0
80012058:	00673006 	srlv	a2,a3,v1
8001205c:	00c5200b 	movn	a0,a2,a1
80012060:	30840001 	andi	a0,a0,0x1
80012064:	1480000c 	bnez	a0,80012098 <raise_signal+0x114>
80012068:	00001021 	move	v0,zero
send_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:362
		q->info.si_code = SI_KERNEL;
	} else {
		memcpy(&(q->info), info, sizeof(struct siginfo_t));
	}
#endif
	sigset_add(pending->signal, sign);
8001206c:	24020001 	li	v0,1
80012070:	00621804 	sllv	v1,v0,v1
80012074:	00601021 	move	v0,v1
80012078:	0005100a 	movz	v0,zero,a1
8001207c:	0005180b 	movn	v1,zero,a1
80012080:	00473825 	or	a3,v0,a3
80012084:	00691825 	or	v1,v1,t1
80012088:	ae0300e0 	sw	v1,224(s0)
8001208c:	ae0700e4 	sw	a3,228(s0)
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:402
	}
	if (sigismember(get_si(to)->pending.signal, sign)) {
		goto out;;
	}
	if (send_signal(sign, info, to, &(get_si(to)->pending)) == 0
	    && !sigismember(get_si(to)->blocked, sign)) {
80012090:	1100006e 	beqz	t0,8001224c <raise_signal+0x2c8>
80012094:	24020001 	li	v0,1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80012098:	52400005 	beqzl	s2,800120b0 <raise_signal+0x12c>
8001209c:	8e0400c4 	lw	a0,196(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800120a0:	0c006cba 	jal	8001b2e8 <intr_enable>
800120a4:	afa20010 	sw	v0,16(sp)
800120a8:	8fa20010 	lw	v0,16(sp)
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:408
		signal_wakeup(sign, to);
	}
	ret = 1;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
800120ac:	8e0400c4 	lw	a0,196(s0)
800120b0:	0c004519 	jal	80011464 <unlock_sig>
800120b4:	afa20010 	sw	v0,16(sp)
800120b8:	8fa20010 	lw	v0,16(sp)
raise_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:622
	if (group) {
		return group_send_sig_info(sign, &info, proc);
	} else {
		return specific_send_sig_info(sign, &info, proc);
	}
}
800120bc:	8fbf0034 	lw	ra,52(sp)
800120c0:	8fb50030 	lw	s5,48(sp)
800120c4:	8fb4002c 	lw	s4,44(sp)
800120c8:	8fb30028 	lw	s3,40(sp)
800120cc:	8fb20024 	lw	s2,36(sp)
800120d0:	8fb10020 	lw	s1,32(sp)
800120d4:	8fb0001c 	lw	s0,28(sp)
800120d8:	03e00008 	jr	ra
800120dc:	27bd0038 	addiu	sp,sp,56
group_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:482

// send a signal to thread group
static int
group_send_sig_info(int sign, struct siginfo_t *info, struct proc_struct *to)
{
	if (sign < 0 || sign > 64) {
800120e0:	2ca30041 	sltiu	v1,a1,65
800120e4:	1060fff5 	beqz	v1,800120bc <raise_signal+0x138>
800120e8:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:485
		return -E_INVAL;
	}
	if (sign == 0 || get_si(to)->sighand == NULL) {
800120ec:	10a0fff3 	beqz	a1,800120bc <raise_signal+0x138>
800120f0:	00001021 	move	v0,zero
800120f4:	8c8400c4 	lw	a0,196(a0)
800120f8:	1080fff1 	beqz	a0,800120c0 <raise_signal+0x13c>
800120fc:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:490
		return 0;
	}
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
80012100:	0c004513 	jal	8001144c <lock_sig>
80012104:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012108:	40026000 	mfc0	v0,c0_status
8001210c:	30420001 	andi	v0,v0,0x1
80012110:	144000b6 	bnez	v0,800123ec <raise_signal+0x468>
80012114:	00009021 	move	s2,zero
handle_stop_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:416

// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
80012118:	2622ffed 	addiu	v0,s1,-19
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:415
}

// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
8001211c:	2c420004 	sltiu	v0,v0,4
80012120:	144000a0 	bnez	v0,800123a4 <raise_signal+0x420>
80012124:	24020012 	li	v0,18
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:425
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	} else if (sign == SIGCONT) {
80012128:	522200bd 	beql	s1,v0,80012420 <raise_signal+0x49c>
8001212c:	8e0500c0 	lw	a1,192(s0)
group_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:493
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
80012130:	8e0200cc 	lw	v0,204(s0)
80012134:	8e0500c8 	lw	a1,200(s0)
80012138:	2623ffff 	addiu	v1,s1,-1
8001213c:	00023040 	sll	a2,v0,0x1
80012140:	00034027 	nor	t0,zero,v1
80012144:	01063004 	sllv	a2,a2,t0
80012148:	00652006 	srlv	a0,a1,v1
8001214c:	00c42025 	or	a0,a2,a0
80012150:	30670020 	andi	a3,v1,0x20
80012154:	00623006 	srlv	a2,v0,v1
80012158:	00c7200b 	movn	a0,a2,a3
8001215c:	30840001 	andi	a0,a0,0x1
80012160:	5480004a 	bnezl	a0,8001228c <raise_signal+0x308>
80012164:	8e0600c0 	lw	a2,192(s0)
ignore_sig():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80012168:	24040009 	li	a0,9
8001216c:	12240046 	beq	s1,a0,80012288 <raise_signal+0x304>
80012170:	24040013 	li	a0,19
80012174:	12240044 	beq	s1,a0,80012288 <raise_signal+0x304>
80012178:	000320c0 	sll	a0,v1,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:179
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
8001217c:	8e0600c4 	lw	a2,196(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:178
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
80012180:	00034940 	sll	t1,v1,0x5
80012184:	01242023 	subu	a0,t1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:179
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
80012188:	00c42021 	addu	a0,a2,a0
8001218c:	8c840008 	lw	a0,8(a0)
80012190:	24060001 	li	a2,1
80012194:	1086000b 	beq	a0,a2,800121c4 <raise_signal+0x240>
80012198:	00000000 	nop
8001219c:	5480003b 	bnezl	a0,8001228c <raise_signal+0x308>
800121a0:	8e0600c0 	lw	a2,192(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:181
					      && (sign == SIGCONT
						  || sign == SIGCHLD
800121a4:	2624ffef 	addiu	a0,s1,-17
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:180
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
					      && (sign == SIGCONT
800121a8:	2c840002 	sltiu	a0,a0,2
800121ac:	14800005 	bnez	a0,800121c4 <raise_signal+0x240>
800121b0:	2404001c 	li	a0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:182
						  || sign == SIGCHLD
						  || sign == SIGWINCH
800121b4:	12240003 	beq	s1,a0,800121c4 <raise_signal+0x240>
800121b8:	24040017 	li	a0,23
group_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:494
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
800121bc:	56240033 	bnel	s1,a0,8001228c <raise_signal+0x308>
800121c0:	8e0600c0 	lw	a2,192(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800121c4:	16400073 	bnez	s2,80012394 <raise_signal+0x410>
800121c8:	00000000 	nop
group_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:508
	}
	group_complete_send(sign, to);
	ret = 0;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
800121cc:	8e0400c4 	lw	a0,196(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:509
	return ret;
800121d0:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:508
	}
	group_complete_send(sign, to);
	ret = 0;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
800121d4:	0c004519 	jal	80011464 <unlock_sig>
800121d8:	afa20010 	sw	v0,16(sp)
raise_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:622
	if (group) {
		return group_send_sig_info(sign, &info, proc);
	} else {
		return specific_send_sig_info(sign, &info, proc);
	}
}
800121dc:	8fbf0034 	lw	ra,52(sp)
800121e0:	8fa20010 	lw	v0,16(sp)
800121e4:	8fb50030 	lw	s5,48(sp)
800121e8:	8fb4002c 	lw	s4,44(sp)
800121ec:	8fb30028 	lw	s3,40(sp)
800121f0:	8fb20024 	lw	s2,36(sp)
800121f4:	8fb10020 	lw	s1,32(sp)
800121f8:	8fb0001c 	lw	s0,28(sp)
800121fc:	03e00008 	jr	ra
80012200:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80012204:	0c006cbe 	jal	8001b2f8 <intr_disable>
80012208:	24120001 	li	s2,1
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:394
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);

	if (!sigismember(get_si(to)->blocked, sign)
8001220c:	8e0400cc 	lw	a0,204(s0)
80012210:	8e0200c8 	lw	v0,200(s0)
80012214:	2623ffff 	addiu	v1,s1,-1
80012218:	00043840 	sll	a3,a0,0x1
8001221c:	00033027 	nor	a2,zero,v1
80012220:	00c73804 	sllv	a3,a3,a2
80012224:	00621006 	srlv	v0,v0,v1
80012228:	30650020 	andi	a1,v1,0x20
8001222c:	00e21025 	or	v0,a3,v0
80012230:	00642006 	srlv	a0,a0,v1
80012234:	0085100b 	movn	v0,a0,a1
80012238:	30480001 	andi	t0,v0,0x1
8001223c:	5500ff81 	bnezl	t0,80012044 <raise_signal+0xc0>
80012240:	8e0700e4 	lw	a3,228(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80012244:	08004801 	j	80012004 <raise_signal+0x80>
80012248:	24020009 	li	v0,9
signal_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
8001224c:	8e05005c 	lw	a1,92(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:378
	if (proc->state == PROC_SLEEPING
80012250:	8e030000 	lw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
80012254:	3c040001 	lui	a0,0x1
80012258:	00a42025 	or	a0,a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:378
	if (proc->state == PROC_SLEEPING
8001225c:	1462ff8e 	bne	v1,v0,80012098 <raise_signal+0x114>
80012260:	ae04005c 	sw	a0,92(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:379
	    && (proc->wait_state & WT_INTERRUPTED || sign == SIGKILL)) {
80012264:	8e030084 	lw	v1,132(s0)
80012268:	04600003 	bltz	v1,80012278 <raise_signal+0x2f4>
8001226c:	24030009 	li	v1,9
80012270:	1623ff89 	bne	s1,v1,80012098 <raise_signal+0x114>
80012274:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:380
		try_to_wakeup(proc);
80012278:	0c00053c 	jal	800014f0 <try_to_wakeup>
8001227c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:405
	}
	if (send_signal(sign, info, to, &(get_si(to)->pending)) == 0
	    && !sigismember(get_si(to)->blocked, sign)) {
		signal_wakeup(sign, to);
	}
	ret = 1;
80012280:	08004826 	j	80012098 <raise_signal+0x114>
80012284:	24020001 	li	v0,1
group_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:497
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
		goto out;
	}
	if (sigismember(get_si(to)->signal->shared_pending.signal, sign)) {
80012288:	8e0600c0 	lw	a2,192(s0)
8001228c:	8cc90014 	lw	t1,20(a2)
80012290:	8cca0010 	lw	t2,16(a2)
80012294:	00092040 	sll	a0,t1,0x1
80012298:	01044004 	sllv	t0,a0,t0
8001229c:	006a2006 	srlv	a0,t2,v1
800122a0:	01042025 	or	a0,t0,a0
800122a4:	00694006 	srlv	t0,t1,v1
800122a8:	0107200b 	movn	a0,t0,a3
800122ac:	30840001 	andi	a0,a0,0x1
800122b0:	1480ffc4 	bnez	a0,800121c4 <raise_signal+0x240>
800122b4:	24040001 	li	a0,1
send_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:362
		q->info.si_code = SI_KERNEL;
	} else {
		memcpy(&(q->info), info, sizeof(struct siginfo_t));
	}
#endif
	sigset_add(pending->signal, sign);
800122b8:	00641804 	sllv	v1,a0,v1
800122bc:	00604021 	move	t0,v1
group_complete_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:465

// select a proc who wants signal from thread group
static void group_complete_send(int sign, struct proc_struct *proc)
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
800122c0:	8cc40004 	lw	a0,4(a2)
send_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:362
		q->info.si_code = SI_KERNEL;
	} else {
		memcpy(&(q->info), info, sizeof(struct siginfo_t));
	}
#endif
	sigset_add(pending->signal, sign);
800122c4:	0007400a 	movz	t0,zero,a3
800122c8:	0007180b 	movn	v1,zero,a3
800122cc:	006a5025 	or	t2,v1,t2
800122d0:	01094825 	or	t1,t0,t1
800122d4:	acca0010 	sw	t2,16(a2)
group_complete_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:466
// select a proc who wants signal from thread group
static void group_complete_send(int sign, struct proc_struct *proc)
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
800122d8:	10800078 	beqz	a0,800124bc <raise_signal+0x538>
800122dc:	acc90014 	sw	t1,20(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:470
		pick = get_si(proc)->signal->curr_target = proc;
	while (!wants_signal(sign, pick)) {
		pick = next_thread(pick);
		if (pick == get_si(proc)->signal->curr_target) {
800122e0:	8c8500c8 	lw	a1,200(a0)
800122e4:	8c8200cc 	lw	v0,204(a0)
wants_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:452
// does the proc want a signal
static bool wants_signal(int sign, struct proc_struct *proc)
{
	if (sigismember(get_si(proc)->blocked, sign)) {
		return 0;
	} else if (proc->flags & PF_EXITING || proc->state == PROC_ZOMBIE) {
800122e8:	240a0003 	li	t2,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:454
		return 0;
	} else if (sign == SIGKILL) {
800122ec:	240b0009 	li	t3,9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:122
}

// is there a signal pending in proc
static inline bool signal_pending(struct proc_struct *proc)
{
	return proc->flags & TIF_SIGPENDING;
800122f0:	080048c7 	j	8001231c <raise_signal+0x398>
800122f4:	3c090001 	lui	t1,0x1
group_complete_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:468
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
		pick = get_si(proc)->signal->curr_target = proc;
	while (!wants_signal(sign, pick)) {
800122f8:	50e00017 	beqzl	a3,80012358 <raise_signal+0x3d4>
800122fc:	3c030001 	lui	v1,0x1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80012300:	8c820098 	lw	v0,152(a0)
group_complete_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:470
		pick = next_thread(pick);
		if (pick == get_si(proc)->signal->curr_target) {
80012304:	8cc50004 	lw	a1,4(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:469
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
		pick = get_si(proc)->signal->curr_target = proc;
	while (!wants_signal(sign, pick)) {
		pick = next_thread(pick);
80012308:	2444ff6c 	addiu	a0,v0,-148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:470
		if (pick == get_si(proc)->signal->curr_target) {
8001230c:	1085ffad 	beq	a0,a1,800121c4 <raise_signal+0x240>
80012310:	00000000 	nop
80012314:	8c450034 	lw	a1,52(v0)
80012318:	8c420038 	lw	v0,56(v0)
wants_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:450
}

// does the proc want a signal
static bool wants_signal(int sign, struct proc_struct *proc)
{
	if (sigismember(get_si(proc)->blocked, sign)) {
8001231c:	00652824 	and	a1,v1,a1
80012320:	01021024 	and	v0,t0,v0
80012324:	00a21025 	or	v0,a1,v0
80012328:	5440fff6 	bnezl	v0,80012304 <raise_signal+0x380>
8001232c:	8c820098 	lw	v0,152(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:452
		return 0;
	} else if (proc->flags & PF_EXITING || proc->state == PROC_ZOMBIE) {
80012330:	8c82005c 	lw	v0,92(a0)
80012334:	30450001 	andi	a1,v0,0x1
80012338:	54a0fff2 	bnezl	a1,80012304 <raise_signal+0x380>
8001233c:	8c820098 	lw	v0,152(a0)
80012340:	8c850000 	lw	a1,0(a0)
80012344:	10aaffee 	beq	a1,t2,80012300 <raise_signal+0x37c>
80012348:	00493824 	and	a3,v0,t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:454
		return 0;
	} else if (sign == SIGKILL) {
8001234c:	162bffea 	bne	s1,t3,800122f8 <raise_signal+0x374>
80012350:	00000000 	nop
signal_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
80012354:	3c030001 	lui	v1,0x1
80012358:	00431025 	or	v0,v0,v1
group_complete_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:474
		pick = next_thread(pick);
		if (pick == get_si(proc)->signal->curr_target) {
			return;
		}
	}
	get_si(proc)->signal->curr_target = pick;
8001235c:	acc40004 	sw	a0,4(a2)
signal_wakeup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
80012360:	ac82005c 	sw	v0,92(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:378
	if (proc->state == PROC_SLEEPING
80012364:	24020001 	li	v0,1
80012368:	14a2ff96 	bne	a1,v0,800121c4 <raise_signal+0x240>
8001236c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:379
	    && (proc->wait_state & WT_INTERRUPTED || sign == SIGKILL)) {
80012370:	8c820084 	lw	v0,132(a0)
80012374:	04400003 	bltz	v0,80012384 <raise_signal+0x400>
80012378:	24020009 	li	v0,9
8001237c:	1622ff91 	bne	s1,v0,800121c4 <raise_signal+0x240>
80012380:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:380
		try_to_wakeup(proc);
80012384:	0c00053c 	jal	800014f0 <try_to_wakeup>
80012388:	00000000 	nop
8001238c:	08004871 	j	800121c4 <raise_signal+0x240>
80012390:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012394:	0c006cba 	jal	8001b2e8 <intr_enable>
80012398:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:508
	}
	group_complete_send(sign, to);
	ret = 0;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
8001239c:	08004874 	j	800121d0 <raise_signal+0x24c>
800123a0:	8e0400c4 	lw	a0,196(s0)
handle_stop_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:417
// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
		remove_from_queue(SIGCONT,
800123a4:	8e0500c0 	lw	a1,192(s0)
800123a8:	24040012 	li	a0,18
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:419
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
800123ac:	3c158015 	lui	s5,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:417
// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
		remove_from_queue(SIGCONT,
800123b0:	0c0044f9 	jal	800113e4 <remove_from_queue>
800123b4:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:419
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
800123b8:	8eb377a4 	lw	s3,30628(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:421
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
800123bc:	266500d8 	addiu	a1,s3,216
800123c0:	0c0044f9 	jal	800113e4 <remove_from_queue>
800123c4:	24040012 	li	a0,18
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:422
			sig_recalc_pending(proc);
800123c8:	0c004522 	jal	80011488 <sig_recalc_pending>
800123cc:	02602021 	move	a0,s3
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
800123d0:	8e730098 	lw	s3,152(s3)
handle_stop_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:424
			proc = next_thread(proc);
		} while (proc != current);
800123d4:	8ea277a4 	lw	v0,30628(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:423
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
800123d8:	2673ff6c 	addiu	s3,s3,-148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:424
		} while (proc != current);
800123dc:	1662fff8 	bne	s3,v0,800123c0 <raise_signal+0x43c>
800123e0:	266500d8 	addiu	a1,s3,216
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:493
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
800123e4:	0800484d 	j	80012134 <raise_signal+0x1b0>
800123e8:	8e0200cc 	lw	v0,204(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800123ec:	0c006cbe 	jal	8001b2f8 <intr_disable>
800123f0:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:416

// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
800123f4:	08004847 	j	8001211c <raise_signal+0x198>
800123f8:	2622ffed 	addiu	v0,s1,-19
specific_send_sig_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:180
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
					      && (sign == SIGCONT
800123fc:	2c840002 	sltiu	a0,a0,2
80012400:	1480ff25 	bnez	a0,80012098 <raise_signal+0x114>
80012404:	2404001c 	li	a0,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:182
						  || sign == SIGCHLD
						  || sign == SIGWINCH
80012408:	1224ff23 	beq	s1,a0,80012098 <raise_signal+0x114>
8001240c:	24040017 	li	a0,23
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:395
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);

	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
80012410:	1224ff21 	beq	s1,a0,80012098 <raise_signal+0x114>
80012414:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:398
		goto out;
	}
	if (sigismember(get_si(to)->pending.signal, sign)) {
80012418:	08004811 	j	80012044 <raise_signal+0xc0>
8001241c:	8e0700e4 	lw	a3,228(s0)
handle_stop_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:426
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	} else if (sign == SIGCONT) {
		remove_from_queue(SIGSTOP,
80012420:	24040013 	li	a0,19
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:434
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTIN,
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTOU,
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
80012424:	3c158015 	lui	s5,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:426
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	} else if (sign == SIGCONT) {
		remove_from_queue(SIGSTOP,
80012428:	0c0044f9 	jal	800113e4 <remove_from_queue>
8001242c:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:428
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTSTP,
80012430:	8e0500c0 	lw	a1,192(s0)
80012434:	24040014 	li	a0,20
80012438:	0c0044f9 	jal	800113e4 <remove_from_queue>
8001243c:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:430
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTIN,
80012440:	8e0500c0 	lw	a1,192(s0)
80012444:	24040015 	li	a0,21
80012448:	0c0044f9 	jal	800113e4 <remove_from_queue>
8001244c:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:432
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTOU,
80012450:	8e0500c0 	lw	a1,192(s0)
80012454:	24040016 	li	a0,22
80012458:	0c0044f9 	jal	800113e4 <remove_from_queue>
8001245c:	24a50008 	addiu	a1,a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:434
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
80012460:	8eb377a4 	lw	s3,30628(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:436
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
80012464:	267400d8 	addiu	s4,s3,216
80012468:	24040012 	li	a0,18
8001246c:	0c0044f9 	jal	800113e4 <remove_from_queue>
80012470:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:437
			remove_from_queue(SIGTSTP, &(get_si(proc)->pending));
80012474:	24040014 	li	a0,20
80012478:	0c0044f9 	jal	800113e4 <remove_from_queue>
8001247c:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:438
			remove_from_queue(SIGTTIN, &(get_si(proc)->pending));
80012480:	24040015 	li	a0,21
80012484:	0c0044f9 	jal	800113e4 <remove_from_queue>
80012488:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:439
			remove_from_queue(SIGTTOU, &(get_si(proc)->pending));
8001248c:	02802821 	move	a1,s4
80012490:	0c0044f9 	jal	800113e4 <remove_from_queue>
80012494:	24040016 	li	a0,22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:440
			sig_recalc_pending(proc);
80012498:	0c004522 	jal	80011488 <sig_recalc_pending>
8001249c:	02602021 	move	a0,s3
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
800124a0:	8e730098 	lw	s3,152(s3)
handle_stop_signal():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:442
			proc = next_thread(proc);
		} while (proc != current);
800124a4:	8ea277a4 	lw	v0,30628(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:441
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			remove_from_queue(SIGTSTP, &(get_si(proc)->pending));
			remove_from_queue(SIGTTIN, &(get_si(proc)->pending));
			remove_from_queue(SIGTTOU, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
800124a8:	2673ff6c 	addiu	s3,s3,-148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:442
		} while (proc != current);
800124ac:	1662ffee 	bne	s3,v0,80012468 <raise_signal+0x4e4>
800124b0:	267400d8 	addiu	s4,s3,216
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:493
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
800124b4:	0800484d 	j	80012134 <raise_signal+0x1b0>
800124b8:	8e0200cc 	lw	v0,204(s0)
group_complete_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:467
static void group_complete_send(int sign, struct proc_struct *proc)
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
		pick = get_si(proc)->signal->curr_target = proc;
800124bc:	acd00004 	sw	s0,4(a2)
800124c0:	080048ba 	j	800122e8 <raise_signal+0x364>
800124c4:	02002021 	move	a0,s0

800124c8 <do_sigtkill>:
do_sigtkill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:625
		return specific_send_sig_info(sign, &info, proc);
	}
}

int do_sigtkill(int pid, int sign)
{
800124c8:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:626
	struct proc_struct *proc = find_proc(pid);
800124cc:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:625
		return specific_send_sig_info(sign, &info, proc);
	}
}

int do_sigtkill(int pid, int sign)
{
800124d0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:626
	struct proc_struct *proc = find_proc(pid);
800124d4:	0c003b36 	jal	8000ecd8 <find_proc>
800124d8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:627
	if (proc == NULL || proc->state == PROC_ZOMBIE) {
800124dc:	10400009 	beqz	v0,80012504 <do_sigtkill+0x3c>
800124e0:	8fa50010 	lw	a1,16(sp)
800124e4:	8c440000 	lw	a0,0(v0)
800124e8:	24030003 	li	v1,3
800124ec:	10830005 	beq	a0,v1,80012504 <do_sigtkill+0x3c>
800124f0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:630
		return -E_INVAL;
	}
	return raise_signal(proc, sign, 0);
800124f4:	00402021 	move	a0,v0
800124f8:	00003021 	move	a2,zero
800124fc:	080047e1 	j	80011f84 <raise_signal>
80012500:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:631
}
80012504:	8fbf001c 	lw	ra,28(sp)
80012508:	2402ffea 	li	v0,-22
8001250c:	03e00008 	jr	ra
80012510:	27bd0020 	addiu	sp,sp,32

80012514 <do_sigkill>:
do_sigkill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:634

int do_sigkill(int pid, int sign)
{
80012514:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:635
	struct proc_struct *proc = find_proc(pid);
80012518:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:634
	}
	return raise_signal(proc, sign, 0);
}

int do_sigkill(int pid, int sign)
{
8001251c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:635
	struct proc_struct *proc = find_proc(pid);
80012520:	0c003b36 	jal	8000ecd8 <find_proc>
80012524:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:636
	if (proc == NULL || proc->state == PROC_ZOMBIE) {
80012528:	10400009 	beqz	v0,80012550 <do_sigkill+0x3c>
8001252c:	8fa50010 	lw	a1,16(sp)
80012530:	8c440000 	lw	a0,0(v0)
80012534:	24030003 	li	v1,3
80012538:	10830005 	beq	a0,v1,80012550 <do_sigkill+0x3c>
8001253c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:642
		return -E_INVAL;
	}
#ifdef __SIGDEBUG
	kprintf("do_sigkill: pid=%d sig=%d\n", pid, sign);
#endif
	return raise_signal(proc, sign, 1);
80012540:	00402021 	move	a0,v0
80012544:	24060001 	li	a2,1
80012548:	080047e1 	j	80011f84 <raise_signal>
8001254c:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:643
}
80012550:	8fbf001c 	lw	ra,28(sp)
80012554:	2402ffea 	li	v0,-22
80012558:	03e00008 	jr	ra
8001255c:	27bd0020 	addiu	sp,sp,32

80012560 <do_sigaltstack>:
do_sigaltstack():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:647

// do syscall sigaltstack
int do_sigaltstack(const stack_t * ss, stack_t * old)
{
80012560:	27bdffb8 	addiu	sp,sp,-72
80012564:	afb10038 	sw	s1,56(sp)
80012568:	afbf0044 	sw	ra,68(sp)
8001256c:	afb30040 	sw	s3,64(sp)
80012570:	afb2003c 	sw	s2,60(sp)
80012574:	afb00034 	sw	s0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:649
	int ret = -E_INVAL;
	if (ss == NULL) {
80012578:	10800024 	beqz	a0,8001260c <do_sigaltstack+0xac>
8001257c:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:653
		return ret;
	}

	struct mm_struct *mm = current->mm;
80012580:	3c138015 	lui	s3,0x8015
80012584:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:654
	stack_t stack =
80012588:	afa0001c 	sw	zero,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:657
	    { get_si(current)->sas_ss_sp, 0, get_si(current)->sas_ss_size };
	lock_mm(mm);
	if (old != NULL && !copy_to_user(mm, old, &stack, sizeof(stack_t))) {
8001258c:	27b20018 	addiu	s2,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:653
	int ret = -E_INVAL;
	if (ss == NULL) {
		return ret;
	}

	struct mm_struct *mm = current->mm;
80012590:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:654
	stack_t stack =
80012594:	8c4300e8 	lw	v1,232(v0)
80012598:	8c4200ec 	lw	v0,236(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:656
	    { get_si(current)->sas_ss_sp, 0, get_si(current)->sas_ss_size };
	lock_mm(mm);
8001259c:	02002021 	move	a0,s0
800125a0:	afa50028 	sw	a1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:654
	if (ss == NULL) {
		return ret;
	}

	struct mm_struct *mm = current->mm;
	stack_t stack =
800125a4:	afa30018 	sw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:656
	    { get_si(current)->sas_ss_sp, 0, get_si(current)->sas_ss_size };
	lock_mm(mm);
800125a8:	0c004c18 	jal	80013060 <lock_mm>
800125ac:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:657
	if (old != NULL && !copy_to_user(mm, old, &stack, sizeof(stack_t))) {
800125b0:	8fa50028 	lw	a1,40(sp)
800125b4:	10a00006 	beqz	a1,800125d0 <do_sigaltstack+0x70>
800125b8:	02002021 	move	a0,s0
800125bc:	02403021 	move	a2,s2
800125c0:	0c007834 	jal	8001e0d0 <copy_to_user>
800125c4:	2407000c 	li	a3,12
800125c8:	10400011 	beqz	v0,80012610 <do_sigaltstack+0xb0>
800125cc:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:660
		goto out;
	}
	if (copy_from_user(mm, &stack, ss, sizeof(stack_t), 1)) {
800125d0:	24020001 	li	v0,1
800125d4:	02002021 	move	a0,s0
800125d8:	02402821 	move	a1,s2
800125dc:	02203021 	move	a2,s1
800125e0:	2407000c 	li	a3,12
800125e4:	0c00781a 	jal	8001e068 <copy_from_user>
800125e8:	afa20010 	sw	v0,16(sp)
800125ec:	10400005 	beqz	v0,80012604 <do_sigaltstack+0xa4>
800125f0:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:661
		get_si(current)->sas_ss_sp = stack.sp;
800125f4:	8fa30018 	lw	v1,24(sp)
800125f8:	ac4300e8 	sw	v1,232(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:662
		get_si(current)->sas_ss_size = stack.size;
800125fc:	8fa30020 	lw	v1,32(sp)
80012600:	ac4300ec 	sw	v1,236(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:664
	}
	unlock_mm(mm);
80012604:	0c004c29 	jal	800130a4 <unlock_mm>
80012608:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:667
out:
	return ret;
}
8001260c:	8fbf0044 	lw	ra,68(sp)
80012610:	2402ffea 	li	v0,-22
80012614:	8fb30040 	lw	s3,64(sp)
80012618:	8fb2003c 	lw	s2,60(sp)
8001261c:	8fb10038 	lw	s1,56(sp)
80012620:	8fb00034 	lw	s0,52(sp)
80012624:	03e00008 	jr	ra
80012628:	27bd0048 	addiu	sp,sp,72

8001262c <do_sigwaitinfo>:
do_sigwaitinfo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:670

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
8001262c:	27bdffb8 	addiu	sp,sp,-72
80012630:	afb00034 	sw	s0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:672
	sigset_t set;
	struct mm_struct *mm = current->mm;
80012634:	3c108015 	lui	s0,0x8015
80012638:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:670
out:
	return ret;
}

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
8001263c:	afb10038 	sw	s1,56(sp)
80012640:	afbf0044 	sw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:672
	sigset_t set;
	struct mm_struct *mm = current->mm;
80012644:	8c510020 	lw	s1,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:670
out:
	return ret;
}

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
80012648:	afb30040 	sw	s3,64(sp)
8001264c:	afb2003c 	sw	s2,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:673
	sigset_t set;
	struct mm_struct *mm = current->mm;
	assert(mm != NULL);
80012650:	1220003b 	beqz	s1,80012740 <do_sigwaitinfo+0x114>
80012654:	00803021 	move	a2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:674
	lock_mm(mm);
80012658:	02202021 	move	a0,s1
8001265c:	0c004c18 	jal	80013060 <lock_mm>
80012660:	afa60028 	sw	a2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:675
	if (setp == NULL
80012664:	8fa60028 	lw	a2,40(sp)
80012668:	10c0002d 	beqz	a2,80012720 <do_sigwaitinfo+0xf4>
8001266c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:676
	    || !copy_from_user(mm, &set, setp, sizeof(sigset_t), 0)) {
80012670:	27a50020 	addiu	a1,sp,32
80012674:	24070008 	li	a3,8
80012678:	0c00781a 	jal	8001e068 <copy_from_user>
8001267c:	afa00010 	sw	zero,16(sp)
80012680:	50400028 	beqzl	v0,80012724 <do_sigwaitinfo+0xf8>
80012684:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:681
		assert(0);
		unlock_mm(mm);
		return -1;
	}
	unlock_mm(mm);
80012688:	0c004c29 	jal	800130a4 <unlock_mm>
8001268c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:685

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
	sigset_t old_blocked = get_si(current)->blocked;
80012690:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:684
		return -1;
	}
	unlock_mm(mm);

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
80012694:	8fa70020 	lw	a3,32(sp)
80012698:	8fa50024 	lw	a1,36(sp)
8001269c:	3c060004 	lui	a2,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:685
	sigset_t old_blocked = get_si(current)->blocked;
800126a0:	8c8200c8 	lw	v0,200(a0)
800126a4:	8c8300cc 	lw	v1,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:684
		return -1;
	}
	unlock_mm(mm);

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
800126a8:	24c60100 	addiu	a2,a2,256
800126ac:	00e63025 	or	a2,a3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:686
	sigset_t old_blocked = get_si(current)->blocked;
	get_si(current)->blocked = ~set;
800126b0:	00064027 	nor	t0,zero,a2
800126b4:	00053827 	nor	a3,zero,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:694
		current->pid);
#endif

	while (1) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_SIGNAL;
800126b8:	3c118000 	lui	s1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:684
		return -1;
	}
	unlock_mm(mm);

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
800126bc:	afa60020 	sw	a2,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:685
	sigset_t old_blocked = get_si(current)->blocked;
800126c0:	afa20018 	sw	v0,24(sp)
800126c4:	afa3001c 	sw	v1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:686
	get_si(current)->blocked = ~set;
800126c8:	ac8800c8 	sw	t0,200(a0)
800126cc:	ac8700cc 	sw	a3,204(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:693
	kprintf("do_sigwaitinfo(): set = %016llx, pid = %d\n", set,
		current->pid);
#endif

	while (1) {
		current->state = PROC_SLEEPING;
800126d0:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:694
		current->wait_state = WT_SIGNAL;
800126d4:	02009821 	move	s3,s0
800126d8:	26310400 	addiu	s1,s1,1024
800126dc:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:693
	kprintf("do_sigwaitinfo(): set = %016llx, pid = %d\n", set,
		current->pid);
#endif

	while (1) {
		current->state = PROC_SLEEPING;
800126e0:	ac920000 	sw	s2,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:695
		current->wait_state = WT_SIGNAL;
		schedule();
800126e4:	0c00059e 	jal	80001678 <schedule>
800126e8:	ac510084 	sw	s1,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:696
		int sign = do_signal(current->tf, &old_blocked);
800126ec:	8e0277a4 	lw	v0,30628(s0)
800126f0:	27a50018 	addiu	a1,sp,24
800126f4:	0c0046ab 	jal	80011aac <do_signal>
800126f8:	8c440054 	lw	a0,84(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:697
		if (sign != 0) {
800126fc:	5040fff7 	beqzl	v0,800126dc <do_sigwaitinfo+0xb0>
80012700:	8e6477a4 	lw	a0,30628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:706
			     set, sign, current->pid);
#endif
			return sign;
		}
	}
}
80012704:	8fbf0044 	lw	ra,68(sp)
80012708:	8fb30040 	lw	s3,64(sp)
8001270c:	8fb2003c 	lw	s2,60(sp)
80012710:	8fb10038 	lw	s1,56(sp)
80012714:	8fb00034 	lw	s0,52(sp)
80012718:	03e00008 	jr	ra
8001271c:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:677
	struct mm_struct *mm = current->mm;
	assert(mm != NULL);
	lock_mm(mm);
	if (setp == NULL
	    || !copy_from_user(mm, &set, setp, sizeof(sigset_t), 0)) {
		assert(0);
80012720:	3c048002 	lui	a0,0x8002
80012724:	3c068002 	lui	a2,0x8002
80012728:	3c078002 	lui	a3,0x8002
8001272c:	24842b60 	addiu	a0,a0,11104
80012730:	240502a5 	li	a1,677
80012734:	24c609b0 	addiu	a2,a2,2480
80012738:	0c006afd 	jal	8001abf4 <__panic>
8001273c:	24e71fa4 	addiu	a3,a3,8100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/process/signal.c:673

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
	sigset_t set;
	struct mm_struct *mm = current->mm;
	assert(mm != NULL);
80012740:	3c048002 	lui	a0,0x8002
80012744:	3c068002 	lui	a2,0x8002
80012748:	3c078002 	lui	a3,0x8002
8001274c:	24842b60 	addiu	a0,a0,11104
80012750:	240502a1 	li	a1,673
80012754:	24c609b0 	addiu	a2,a2,2480
80012758:	0c006afd 	jal	8001abf4 <__panic>
8001275c:	24e72c04 	addiu	a3,a3,11268

80012760 <shmem_create>:
shmem_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:12
#include <swap.h>
#include <error.h>
#include <sem.h>

struct shmem_struct *shmem_create(size_t len)
{
80012760:	27bdffe0 	addiu	sp,sp,-32
80012764:	afb00018 	sw	s0,24(sp)
80012768:	00808021 	move	s0,a0
8001276c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:13
	struct shmem_struct *shmem = kmalloc(sizeof(struct shmem_struct));
80012770:	0c005478 	jal	800151e0 <kmalloc>
80012774:	24040028 	li	a0,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:14
	if (shmem != NULL) {
80012778:	1040000c 	beqz	v0,800127ac <shmem_create+0x4c>
8001277c:	8fbf001c 	lw	ra,28(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80012780:	ac420004 	sw	v0,4(v0)
80012784:	ac420000 	sw	v0,0(v0)
shmem_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:16
		list_init(&(shmem->shmn_list));
		shmem->shmn_cache = NULL;
80012788:	ac400008 	sw	zero,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:17
		shmem->len = len;
8001278c:	ac50000c 	sw	s0,12(v0)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80012790:	ac400010 	sw	zero,16(v0)
shmem_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:19
		set_shmem_ref(shmem, 0);
		sem_init(&(shmem->shmem_sem), 1);
80012794:	24440014 	addiu	a0,v0,20
80012798:	24050001 	li	a1,1
8001279c:	0c006709 	jal	80019c24 <sem_init>
800127a0:	afa20010 	sw	v0,16(sp)
800127a4:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:22
	}
	return shmem;
}
800127a8:	8fbf001c 	lw	ra,28(sp)
800127ac:	8fb00018 	lw	s0,24(sp)
800127b0:	03e00008 	jr	ra
800127b4:	27bd0020 	addiu	sp,sp,32

800127b8 <shmem_destroy>:
shmem_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:140

	list_add_after(le_prev, &(shmn->list_link));
}

void shmem_destroy(struct shmem_struct *shmem)
{
800127b8:	27bdffc8 	addiu	sp,sp,-56
800127bc:	afb20018 	sw	s2,24(sp)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800127c0:	8c920004 	lw	s2,4(a0)
shmem_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:140
800127c4:	afb7002c 	sw	s7,44(sp)
800127c8:	afbf0034 	sw	ra,52(sp)
800127cc:	afbe0030 	sw	s8,48(sp)
800127d0:	afb60028 	sw	s6,40(sp)
800127d4:	afb50024 	sw	s5,36(sp)
800127d8:	afb40020 	sw	s4,32(sp)
800127dc:	afb3001c 	sw	s3,28(sp)
800127e0:	afb10014 	sw	s1,20(sp)
800127e4:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:142
	list_entry_t *list = &(shmem->shmn_list), *le;
	while ((le = list_next(list)) != list) {
800127e8:	10920057 	beq	a0,s2,80012948 <shmem_destroy+0x190>
800127ec:	0080b821 	move	s7,a0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800127f0:	3c157fff 	lui	s5,0x7fff
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
800127f4:	2416f000 	li	s6,-4096
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800127f8:	36b5f000 	ori	s5,s5,0xf000
800127fc:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012800:	3c138015 	lui	s3,0x8015
shmn_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:81

static void shmn_destroy(shmn_t * shmn)
{
	int i;
	for (i = 0; i < SHMN_NENTRY; i++) {
		shmem_remove_entry_pte(shmn->entry + i);
80012804:	8e47fffc 	lw	a3,-4(s2)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80012808:	8e430000 	lw	v1,0(s2)
8001280c:	8e420004 	lw	v0,4(s2)
shmn_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:81
80012810:	00e08821 	move	s1,a3
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80012814:	ac620004 	sw	v0,4(v1)
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:47

static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
80012818:	10e0001f 	beqz	a3,80012898 <shmem_destroy+0xe0>
8001281c:	ac430000 	sw	v1,0(v0)
80012820:	24100004 	li	s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:201
}

int shmem_remove_entry(struct shmem_struct *shmem, uintptr_t addr)
{
	return shmem_insert_entry(shmem, addr, 0);
}
80012824:	8e3e0000 	lw	s8,0(s1)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80012828:	33c20001 	andi	v0,s8,0x1
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:48
static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
	if (ptep_present(ptep)) {
8001282c:	10400026 	beqz	v0,800128c8 <shmem_destroy+0x110>
80012830:	03d61024 	and	v0,s8,s6
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012834:	8e837770 	lw	v1,30576(s4)
80012838:	00551021 	addu	v0,v0,s5
8001283c:	00021302 	srl	v0,v0,0xc
80012840:	0043182b 	sltu	v1,v0,v1
80012844:	1060004d 	beqz	v1,8001297c <shmem_destroy+0x1c4>
80012848:	8e7e77bc 	lw	s8,30652(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001284c:	00021140 	sll	v0,v0,0x5
80012850:	03c2f021 	addu	s8,s8,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012854:	40026000 	mfc0	v0,c0_status
80012858:	30420001 	andi	v0,v0,0x1
8001285c:	1440001e 	bnez	v0,800128d8 <shmem_destroy+0x120>
80012860:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012864:	8fc20000 	lw	v0,0(s8)
80012868:	2442ffff 	addiu	v0,v0,-1
8001286c:	afc20000 	sw	v0,0(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012870:	8fc20000 	lw	v0,0(s8)
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:62
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
#else
		if (page_ref_dec(page) == 0) {
80012874:	10400010 	beqz	v0,800128b8 <shmem_destroy+0x100>
80012878:	03c02021 	move	a0,s8
8001287c:	8e47fffc 	lw	a3,-4(s2)
ptep_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
80012880:	ae200000 	sw	zero,0(s1)
shmn_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:80
}

static void shmn_destroy(shmn_t * shmn)
{
	int i;
	for (i = 0; i < SHMN_NENTRY; i++) {
80012884:	24021000 	li	v0,4096
80012888:	1202001c 	beq	s0,v0,800128fc <shmem_destroy+0x144>
8001288c:	00f08821 	addu	s1,a3,s0
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:47

static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
80012890:	1620ffe4 	bnez	s1,80012824 <shmem_destroy+0x6c>
80012894:	26100004 	addiu	s0,s0,4
80012898:	3c048002 	lui	a0,0x8002
8001289c:	3c068002 	lui	a2,0x8002
800128a0:	3c078002 	lui	a3,0x8002
800128a4:	24842c10 	addiu	a0,a0,11280
800128a8:	2405002f 	li	a1,47
800128ac:	24c609b0 	addiu	a2,a2,2480
800128b0:	0c006afd 	jal	8001abf4 <__panic>
800128b4:	24e72c30 	addiu	a3,a3,11312
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:63
			}
			page_ref_dec(page);
		}
#else
		if (page_ref_dec(page) == 0) {
			free_page(page);
800128b8:	0c0073fb 	jal	8001cfec <free_pages>
800128bc:	24050001 	li	a1,1
800128c0:	08004a20 	j	80012880 <shmem_destroy+0xc8>
800128c4:	8e47fffc 	lw	a3,-4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:67
		}
#endif /* UCONFIG_SWAP */
		ptep_unmap(ptep);
	} else if (!ptep_invalid(ptep)) {
800128c8:	13c0ffef 	beqz	s8,80012888 <shmem_destroy+0xd0>
800128cc:	24021000 	li	v0,4096
800128d0:	0c007e3e 	jal	8001f8f8 <shmem_remove_entry_pte.part.6>
800128d4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800128d8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800128dc:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800128e0:	8fc20000 	lw	v0,0(s8)
800128e4:	2442ffff 	addiu	v0,v0,-1
800128e8:	afc20000 	sw	v0,0(s8)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800128ec:	0c006cba 	jal	8001b2e8 <intr_enable>
800128f0:	00000000 	nop
800128f4:	08004a1c 	j	80012870 <shmem_destroy+0xb8>
800128f8:	00000000 	nop
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
800128fc:	3c028000 	lui	v0,0x8000
80012900:	24421000 	addiu	v0,v0,4096
80012904:	00e2102b 	sltu	v0,a3,v0
80012908:	14400022 	bnez	v0,80012994 <shmem_destroy+0x1dc>
8001290c:	8e837770 	lw	v1,30576(s4)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012910:	00f51021 	addu	v0,a3,s5
80012914:	00021302 	srl	v0,v0,0xc
80012918:	0043182b 	sltu	v1,v0,v1
8001291c:	10600017 	beqz	v1,8001297c <shmem_destroy+0x1c4>
80012920:	8e6477bc 	lw	a0,30652(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012924:	00021140 	sll	v0,v0,0x5
shmn_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:83
{
	int i;
	for (i = 0; i < SHMN_NENTRY; i++) {
		shmem_remove_entry_pte(shmn->entry + i);
	}
	free_page(kva2page(shmn->entry));
80012928:	24050001 	li	a1,1
8001292c:	0c0073fb 	jal	8001cfec <free_pages>
80012930:	00822021 	addu	a0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:84
	kfree(shmn);
80012934:	0c0054a3 	jal	8001528c <kfree>
80012938:	2644fff4 	addiu	a0,s2,-12
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001293c:	8ef20004 	lw	s2,4(s7)
shmem_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:142
}

void shmem_destroy(struct shmem_struct *shmem)
{
	list_entry_t *list = &(shmem->shmn_list), *le;
	while ((le = list_next(list)) != list) {
80012940:	56f2ffb1 	bnel	s7,s2,80012808 <shmem_destroy+0x50>
80012944:	8e47fffc 	lw	a3,-4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:146
		list_del(le);
		shmn_destroy(le2shmn(le, list_link));
	}
	kfree(shmem);
80012948:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:147
}
8001294c:	8fbf0034 	lw	ra,52(sp)
80012950:	8fbe0030 	lw	s8,48(sp)
80012954:	8fb7002c 	lw	s7,44(sp)
80012958:	8fb60028 	lw	s6,40(sp)
8001295c:	8fb50024 	lw	s5,36(sp)
80012960:	8fb40020 	lw	s4,32(sp)
80012964:	8fb3001c 	lw	s3,28(sp)
80012968:	8fb20018 	lw	s2,24(sp)
8001296c:	8fb10014 	lw	s1,20(sp)
80012970:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:146
	list_entry_t *list = &(shmem->shmn_list), *le;
	while ((le = list_next(list)) != list) {
		list_del(le);
		shmn_destroy(le2shmn(le, list_link));
	}
	kfree(shmem);
80012974:	080054a3 	j	8001528c <kfree>
80012978:	27bd0038 	addiu	sp,sp,56
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001297c:	3c048002 	lui	a0,0x8002
80012980:	3c068002 	lui	a2,0x8002
80012984:	24842564 	addiu	a0,a0,9572
80012988:	24050063 	li	a1,99
8001298c:	0c006afd 	jal	8001abf4 <__panic>
80012990:	24c625cc 	addiu	a2,a2,9676
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80012994:	3c048002 	lui	a0,0x8002
80012998:	3c068002 	lui	a2,0x8002
8001299c:	24842564 	addiu	a0,a0,9572
800129a0:	2405006f 	li	a1,111
800129a4:	0c006afd 	jal	8001abf4 <__panic>
800129a8:	24c625a8 	addiu	a2,a2,9640

800129ac <shmem_get_entry>:
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:151
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
	assert(addr < shmem->len);
800129ac:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:150
	}
	kfree(shmem);
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
800129b0:	27bdffd8 	addiu	sp,sp,-40
800129b4:	afb30020 	sw	s3,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:151
	assert(addr < shmem->len);
800129b8:	00a2102b 	sltu	v0,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:150
	}
	kfree(shmem);
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
800129bc:	afb2001c 	sw	s2,28(sp)
800129c0:	afbf0024 	sw	ra,36(sp)
800129c4:	afb10018 	sw	s1,24(sp)
800129c8:	afb00014 	sw	s0,20(sp)
800129cc:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:151
	assert(addr < shmem->len);
800129d0:	104000ac 	beqz	v0,80012c84 <shmem_get_entry+0x2d8>
800129d4:	00c09821 	move	s3,a2
find_shmn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:89
	kfree(shmn);
}

static shmn_t *find_shmn(struct shmem_struct *shmem, uintptr_t addr)
{
	shmn_t *shmn = shmem->shmn_cache;
800129d8:	8c910008 	lw	s1,8(a0)
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:152
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
	assert(addr < shmem->len);
	addr = ROUNDDOWN(addr, PGSIZE);
800129dc:	2410f000 	li	s0,-4096
find_shmn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:90
}

static shmn_t *find_shmn(struct shmem_struct *shmem, uintptr_t addr)
{
	shmn_t *shmn = shmem->shmn_cache;
	if (!(shmn != NULL && shmn->start <= addr && addr < shmn->end)) {
800129e0:	1220001e 	beqz	s1,80012a5c <shmem_get_entry+0xb0>
800129e4:	00b08024 	and	s0,a1,s0
800129e8:	8e230000 	lw	v1,0(s1)
800129ec:	0203102b 	sltu	v0,s0,v1
800129f0:	1440001b 	bnez	v0,80012a60 <shmem_get_entry+0xb4>
800129f4:	02401021 	move	v0,s2
800129f8:	8e220004 	lw	v0,4(s1)
800129fc:	0202102b 	sltu	v0,s0,v0
80012a00:	10400017 	beqz	v0,80012a60 <shmem_get_entry+0xb4>
80012a04:	02401021 	move	v0,s2
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:155
{
	assert(addr < shmem->len);
	addr = ROUNDDOWN(addr, PGSIZE);
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
80012a08:	8e220004 	lw	v0,4(s1)
80012a0c:	0202102b 	sltu	v0,s0,v0
80012a10:	10400094 	beqz	v0,80012c64 <shmem_get_entry+0x2b8>
80012a14:	ae510008 	sw	s1,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:163
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
		}
		insert_shmn(shmem, shmn);
	}
	int index = (addr - shmn->start) / PGSIZE;
80012a18:	02038023 	subu	s0,s0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:164
	if (shmn->entry[index] == 0) {
80012a1c:	8e220008 	lw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:163
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
		}
		insert_shmn(shmem, shmn);
	}
	int index = (addr - shmn->start) / PGSIZE;
80012a20:	00108302 	srl	s0,s0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:164
	if (shmn->entry[index] == 0) {
80012a24:	00108080 	sll	s0,s0,0x2
80012a28:	00501021 	addu	v0,v0,s0
80012a2c:	8c430000 	lw	v1,0(v0)
80012a30:	14600004 	bnez	v1,80012a44 <shmem_get_entry+0x98>
80012a34:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:165
		if (create) {
80012a38:	16600062 	bnez	s3,80012bc4 <shmem_get_entry+0x218>
80012a3c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:174
				page_ref_inc(page);
			}
		}
	}
	return shmn->entry + index;
}
80012a40:	8fbf0024 	lw	ra,36(sp)
80012a44:	8fb30020 	lw	s3,32(sp)
80012a48:	8fb2001c 	lw	s2,28(sp)
80012a4c:	8fb10018 	lw	s1,24(sp)
80012a50:	8fb00014 	lw	s0,20(sp)
80012a54:	03e00008 	jr	ra
80012a58:	27bd0028 	addiu	sp,sp,40
find_shmn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:92
static shmn_t *find_shmn(struct shmem_struct *shmem, uintptr_t addr)
{
	shmn_t *shmn = shmem->shmn_cache;
	if (!(shmn != NULL && shmn->start <= addr && addr < shmn->end)) {
		shmn = NULL;
		list_entry_t *list = &(shmem->shmn_list), *le = list;
80012a5c:	02401021 	move	v0,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80012a60:	8c420004 	lw	v0,4(v0)
find_shmn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:93
		while ((le = list_next(le)) != list) {
80012a64:	1242000b 	beq	s2,v0,80012a94 <shmem_get_entry+0xe8>
80012a68:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:95
			shmn_t *tmp = le2shmn(le, list_link);
			if (tmp->start <= addr && addr < tmp->end) {
80012a6c:	8c43fff4 	lw	v1,-12(v0)
80012a70:	0203202b 	sltu	a0,s0,v1
80012a74:	1480fffa 	bnez	a0,80012a60 <shmem_get_entry+0xb4>
80012a78:	2451fff4 	addiu	s1,v0,-12
80012a7c:	8c44fff8 	lw	a0,-8(v0)
80012a80:	0204202b 	sltu	a0,s0,a0
80012a84:	5080fff7 	beqzl	a0,80012a64 <shmem_get_entry+0xb8>
80012a88:	8c420004 	lw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:101
				shmn = tmp;
				break;
			}
		}
	}
	if (shmn != NULL) {
80012a8c:	5620ffdf 	bnezl	s1,80012a0c <shmem_get_entry+0x60>
80012a90:	8e220004 	lw	v0,4(s1)
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:158
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
		if (!create || (shmn = shmn_create(start)) == NULL) {
80012a94:	1260ffea 	beqz	s3,80012a40 <shmem_get_entry+0x94>
80012a98:	00001021 	move	v0,zero
shmn_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:27
}

static shmn_t *shmn_create(uintptr_t start)
{
	assert(start % PGSIZE * SHMN_NENTRY == 0);
	shmn_t *shmn = kmalloc(sizeof(shmn_t));
80012a9c:	0c005478 	jal	800151e0 <kmalloc>
80012aa0:	24040014 	li	a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:28
	if (shmn != NULL) {
80012aa4:	1040007f 	beqz	v0,80012ca4 <shmem_get_entry+0x2f8>
80012aa8:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:30
		struct Page *page;
		if ((page = alloc_page()) != NULL) {
80012aac:	0c0073df 	jal	8001cf7c <alloc_pages>
80012ab0:	24040001 	li	a0,1
80012ab4:	1040007d 	beqz	v0,80012cac <shmem_get_entry+0x300>
80012ab8:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012abc:	8c6477bc 	lw	a0,30652(v1)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012ac0:	3c038015 	lui	v1,0x8015
80012ac4:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012ac8:	00441023 	subu	v0,v0,a0
80012acc:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012ad0:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012ad4:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012ad8:	3c078000 	lui	a3,0x8000
80012adc:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012ae0:	0083182b 	sltu	v1,a0,v1
80012ae4:	10600086 	beqz	v1,80012d00 <shmem_get_entry+0x354>
80012ae8:	00473821 	addu	a3,v0,a3
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:157
	addr = ROUNDDOWN(addr, PGSIZE);
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
80012aec:	3c02ffc0 	lui	v0,0xffc0
80012af0:	02021024 	and	v0,s0,v0
shmn_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:33
	if (shmn != NULL) {
		struct Page *page;
		if ((page = alloc_page()) != NULL) {
			shmn->entry = (pte_t *) page2kva(page);
			shmn->start = start;
			shmn->end = start + PGSIZE * SHMN_NENTRY;
80012af4:	3c030040 	lui	v1,0x40
80012af8:	00431821 	addu	v1,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:34
			memset(shmn->entry, 0, PGSIZE);
80012afc:	00e02021 	move	a0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:31
	assert(start % PGSIZE * SHMN_NENTRY == 0);
	shmn_t *shmn = kmalloc(sizeof(shmn_t));
	if (shmn != NULL) {
		struct Page *page;
		if ((page = alloc_page()) != NULL) {
			shmn->entry = (pte_t *) page2kva(page);
80012b00:	ae270008 	sw	a3,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:32
			shmn->start = start;
80012b04:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:33
			shmn->end = start + PGSIZE * SHMN_NENTRY;
80012b08:	ae230004 	sw	v1,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:34
			memset(shmn->entry, 0, PGSIZE);
80012b0c:	00002821 	move	a1,zero
80012b10:	0c005c44 	jal	80017110 <memset>
80012b14:	24061000 	li	a2,4096
80012b18:	02402021 	move	a0,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80012b1c:	8c820004 	lw	v0,4(a0)
insert_shmn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:118

static void insert_shmn(struct shmem_struct *shmem, shmn_t * shmn)
{
	list_entry_t *list = &(shmem->shmn_list), *le = list;
	list_entry_t *le_prev = list, *le_next;
	while ((le = list_next(le)) != list) {
80012b20:	52420006 	beql	s2,v0,80012b3c <shmem_get_entry+0x190>
80012b24:	02401021 	move	v0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:120
		shmn_t *shmn_prev = le2shmn(le, list_link);
		if (shmn_prev->start > shmn->start) {
80012b28:	8c45fff4 	lw	a1,-12(v0)
80012b2c:	8e230000 	lw	v1,0(s1)
80012b30:	0065182b 	sltu	v1,v1,a1
80012b34:	5060fff9 	beqzl	v1,80012b1c <shmem_get_entry+0x170>
80012b38:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:129
	}

	le_next = list_next(le_prev);

	/* check overlap */
	if (le_prev != list) {
80012b3c:	5244000e 	beql	s2,a0,80012b78 <shmem_get_entry+0x1cc>
80012b40:	8e230000 	lw	v1,0(s1)
check_shmn_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
80012b44:	8c85fff8 	lw	a1,-8(a0)
80012b48:	8c83fff4 	lw	v1,-12(a0)
80012b4c:	0065182b 	sltu	v1,v1,a1
80012b50:	10600069 	beqz	v1,80012cf8 <shmem_get_entry+0x34c>
80012b54:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:110
	assert(prev->end <= next->start);
80012b58:	8e230000 	lw	v1,0(s1)
80012b5c:	0065282b 	sltu	a1,v1,a1
80012b60:	54a0005e 	bnezl	a1,80012cdc <shmem_get_entry+0x330>
80012b64:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:111
	assert(next->start < next->end);
80012b68:	8e250004 	lw	a1,4(s1)
80012b6c:	0065282b 	sltu	a1,v1,a1
80012b70:	50a00053 	beqzl	a1,80012cc0 <shmem_get_entry+0x314>
80012b74:	3c048002 	lui	a0,0x8002
insert_shmn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:132

	/* check overlap */
	if (le_prev != list) {
		check_shmn_overlap(le2shmn(le_prev, list_link), shmn);
	}
	if (le_next != list) {
80012b78:	1242000d 	beq	s2,v0,80012bb0 <shmem_get_entry+0x204>
80012b7c:	2625000c 	addiu	a1,s1,12
check_shmn_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
80012b80:	8e260004 	lw	a2,4(s1)
80012b84:	0066282b 	sltu	a1,v1,a2
80012b88:	10a0005b 	beqz	a1,80012cf8 <shmem_get_entry+0x34c>
80012b8c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:110
	assert(prev->end <= next->start);
80012b90:	8c45fff4 	lw	a1,-12(v0)
80012b94:	00a6302b 	sltu	a2,a1,a2
80012b98:	54c00050 	bnezl	a2,80012cdc <shmem_get_entry+0x330>
80012b9c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:111
	assert(next->start < next->end);
80012ba0:	8c46fff8 	lw	a2,-8(v0)
80012ba4:	00a6282b 	sltu	a1,a1,a2
80012ba8:	10a00044 	beqz	a1,80012cbc <shmem_get_entry+0x310>
80012bac:	2625000c 	addiu	a1,s1,12
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80012bb0:	ac450000 	sw	a1,0(v0)
80012bb4:	ac850004 	sw	a1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80012bb8:	ae24000c 	sw	a0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80012bbc:	08004a86 	j	80012a18 <shmem_get_entry+0x6c>
80012bc0:	ae220010 	sw	v0,16(s1)
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:166
		insert_shmn(shmem, shmn);
	}
	int index = (addr - shmn->start) / PGSIZE;
	if (shmn->entry[index] == 0) {
		if (create) {
			struct Page *page = alloc_page();
80012bc4:	0c0073df 	jal	8001cf7c <alloc_pages>
80012bc8:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:167
			if (page != NULL) {
80012bcc:	10400017 	beqz	v0,80012c2c <shmem_get_entry+0x280>
80012bd0:	00409021 	move	s2,v0
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012bd4:	3c028015 	lui	v0,0x8015
80012bd8:	8c4477bc 	lw	a0,30652(v0)
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012bdc:	3c038000 	lui	v1,0x8000
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:168
				ptep_map(&(shmn->entry[index]), page2pa(page));
80012be0:	8e220008 	lw	v0,8(s1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012be4:	02442023 	subu	a0,s2,a0
80012be8:	00042143 	sra	a0,a0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012bec:	00042300 	sll	a0,a0,0xc
80012bf0:	24631000 	addiu	v1,v1,4096
80012bf4:	00831821 	addu	v1,a0,v1
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:168
80012bf8:	00501021 	addu	v0,v0,s0
ptep_map():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:11

typedef pte_t pte_perm_t;

static inline void ptep_map(pte_t * ptep, uintptr_t pa)
{
	*ptep = (pa | PTE_P);
80012bfc:	34630001 	ori	v1,v1,0x1
80012c00:	ac430000 	sw	v1,0(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012c04:	40036000 	mfc0	v1,c0_status
80012c08:	30630001 	andi	v1,v1,0x1
80012c0c:	1460000a 	bnez	v1,80012c38 <shmem_get_entry+0x28c>
80012c10:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80012c14:	8e430000 	lw	v1,0(s2)
80012c18:	24630001 	addiu	v1,v1,1
80012c1c:	ae430000 	sw	v1,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012c20:	8e430000 	lw	v1,0(s2)
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:173
				page_ref_inc(page);
			}
		}
	}
	return shmn->entry + index;
80012c24:	08004a91 	j	80012a44 <shmem_get_entry+0x98>
80012c28:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:167
	}
	int index = (addr - shmn->start) / PGSIZE;
	if (shmn->entry[index] == 0) {
		if (create) {
			struct Page *page = alloc_page();
			if (page != NULL) {
80012c2c:	8e220008 	lw	v0,8(s1)
80012c30:	08004a90 	j	80012a40 <shmem_get_entry+0x94>
80012c34:	00501021 	addu	v0,v0,s0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80012c38:	0c006cbe 	jal	8001b2f8 <intr_disable>
80012c3c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012c40:	8e420000 	lw	v0,0(s2)
80012c44:	24420001 	addiu	v0,v0,1
80012c48:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012c4c:	0c006cba 	jal	8001b2e8 <intr_enable>
80012c50:	00000000 	nop
80012c54:	8e220008 	lw	v0,8(s1)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012c58:	8e430000 	lw	v1,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
80012c5c:	08004a90 	j	80012a40 <shmem_get_entry+0x94>
80012c60:	00501021 	addu	v0,v0,s0
shmem_get_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:155
{
	assert(addr < shmem->len);
	addr = ROUNDDOWN(addr, PGSIZE);
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
80012c64:	3c048002 	lui	a0,0x8002
80012c68:	3c068002 	lui	a2,0x8002
80012c6c:	3c078002 	lui	a3,0x8002
80012c70:	24842c10 	addiu	a0,a0,11280
80012c74:	2405009b 	li	a1,155
80012c78:	24c609b0 	addiu	a2,a2,2480
80012c7c:	0c006afd 	jal	8001abf4 <__panic>
80012c80:	24e72c78 	addiu	a3,a3,11384
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:151
	kfree(shmem);
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
	assert(addr < shmem->len);
80012c84:	3c048002 	lui	a0,0x8002
80012c88:	3c068002 	lui	a2,0x8002
80012c8c:	3c078002 	lui	a3,0x8002
80012c90:	24842c10 	addiu	a0,a0,11280
80012c94:	24050097 	li	a1,151
80012c98:	24c609b0 	addiu	a2,a2,2480
80012c9c:	0c006afd 	jal	8001abf4 <__panic>
80012ca0:	24e72c64 	addiu	a3,a3,11364
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:159

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
80012ca4:	08004a90 	j	80012a40 <shmem_get_entry+0x94>
80012ca8:	00001021 	move	v0,zero
shmn_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:36
			shmn->entry = (pte_t *) page2kva(page);
			shmn->start = start;
			shmn->end = start + PGSIZE * SHMN_NENTRY;
			memset(shmn->entry, 0, PGSIZE);
		} else {
			kfree(shmn);
80012cac:	0c0054a3 	jal	8001528c <kfree>
80012cb0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:159

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
80012cb4:	08004a90 	j	80012a40 <shmem_get_entry+0x94>
80012cb8:	00001021 	move	v0,zero
check_shmn_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:111

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
	assert(prev->end <= next->start);
	assert(next->start < next->end);
80012cbc:	3c048002 	lui	a0,0x8002
80012cc0:	3c068002 	lui	a2,0x8002
80012cc4:	3c078002 	lui	a3,0x8002
80012cc8:	24842c10 	addiu	a0,a0,11280
80012ccc:	2405006f 	li	a1,111
80012cd0:	24c609b0 	addiu	a2,a2,2480
80012cd4:	0c006afd 	jal	8001abf4 <__panic>
80012cd8:	24e72cd0 	addiu	a3,a3,11472
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:110
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
	assert(prev->end <= next->start);
80012cdc:	3c068002 	lui	a2,0x8002
80012ce0:	3c078002 	lui	a3,0x8002
80012ce4:	24842c10 	addiu	a0,a0,11280
80012ce8:	2405006e 	li	a1,110
80012cec:	24c609b0 	addiu	a2,a2,2480
80012cf0:	0c006afd 	jal	8001abf4 <__panic>
80012cf4:	24e72cb4 	addiu	a3,a3,11444
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
80012cf8:	0c007e34 	jal	8001f8d0 <check_shmn_overlap.part.5>
80012cfc:	00000000 	nop
shmn_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012d00:	3c048002 	lui	a0,0x8002
80012d04:	3c068002 	lui	a2,0x8002
80012d08:	24842564 	addiu	a0,a0,9572
80012d0c:	2405006a 	li	a1,106
80012d10:	0c006afd 	jal	8001abf4 <__panic>
80012d14:	24c625ec 	addiu	a2,a2,9708

80012d18 <shmem_insert_entry>:
shmem_insert_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:177
	}
	return shmn->entry + index;
}

int shmem_insert_entry(struct shmem_struct *shmem, uintptr_t addr, pte_t entry)
{
80012d18:	27bdffd8 	addiu	sp,sp,-40
80012d1c:	afb0001c 	sw	s0,28(sp)
80012d20:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:178
	pte_t *ptep = shmem_get_entry(shmem, addr, 1);
80012d24:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:177
	}
	return shmn->entry + index;
}

int shmem_insert_entry(struct shmem_struct *shmem, uintptr_t addr, pte_t entry)
{
80012d28:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:178
	pte_t *ptep = shmem_get_entry(shmem, addr, 1);
80012d2c:	0c004a6b 	jal	800129ac <shmem_get_entry>
80012d30:	afb10020 	sw	s1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:179
	if (ptep == NULL) {
80012d34:	5040001e 	beqzl	v0,80012db0 <shmem_insert_entry+0x98>
80012d38:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:201
}

int shmem_remove_entry(struct shmem_struct *shmem, uintptr_t addr)
{
	return shmem_insert_entry(shmem, addr, 0);
}
80012d3c:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:182
{
	pte_t *ptep = shmem_get_entry(shmem, addr, 1);
	if (ptep == NULL) {
		return -E_NO_MEM;
	}
	if (!ptep_invalid(ptep)) {
80012d40:	1460002a 	bnez	v1,80012dec <shmem_insert_entry+0xd4>
80012d44:	30640001 	andi	a0,v1,0x1
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80012d48:	32030001 	andi	v1,s0,0x1
shmem_insert_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:185
		shmem_remove_entry_pte(ptep);
	}
	if (ptep_present(&entry)) {
80012d4c:	1060001d 	beqz	v1,80012dc4 <shmem_insert_entry+0xac>
80012d50:	3c038015 	lui	v1,0x8015
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012d54:	8c647770 	lw	a0,30576(v1)
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80012d58:	2411f000 	li	s1,-4096
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012d5c:	3c037fff 	lui	v1,0x7fff
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80012d60:	02118824 	and	s1,s0,s1
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012d64:	3463f000 	ori	v1,v1,0xf000
80012d68:	02231821 	addu	v1,s1,v1
80012d6c:	00031b02 	srl	v1,v1,0xc
80012d70:	0064202b 	sltu	a0,v1,a0
80012d74:	10800054 	beqz	a0,80012ec8 <shmem_insert_entry+0x1b0>
80012d78:	3c048015 	lui	a0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012d7c:	8c9177bc 	lw	s1,30652(a0)
80012d80:	00031940 	sll	v1,v1,0x5
80012d84:	02238821 	addu	s1,s1,v1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012d88:	40036000 	mfc0	v1,c0_status
80012d8c:	30630001 	andi	v1,v1,0x1
80012d90:	14600037 	bnez	v1,80012e70 <shmem_insert_entry+0x158>
80012d94:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012d98:	8e230000 	lw	v1,0(s1)
80012d9c:	24630001 	addiu	v1,v1,1
80012da0:	ae230000 	sw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012da4:	8e230000 	lw	v1,0(s1)
ptep_copy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:99
	*ptep |= perm;
}

static inline void ptep_copy(pte_t * to, pte_t * from)
{
	*to = *from;
80012da8:	ac500000 	sw	s0,0(v0)
shmem_insert_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:195
#else
		assert(0);
#endif
	}
	ptep_copy(ptep, &entry);
	return 0;
80012dac:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:196
}
80012db0:	8fbf0024 	lw	ra,36(sp)
80012db4:	8fb10020 	lw	s1,32(sp)
80012db8:	8fb0001c 	lw	s0,28(sp)
80012dbc:	03e00008 	jr	ra
80012dc0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:187
	if (!ptep_invalid(ptep)) {
		shmem_remove_entry_pte(ptep);
	}
	if (ptep_present(&entry)) {
		page_ref_inc(pte2page(entry));
	} else if (!ptep_invalid(&entry)) {
80012dc4:	5200fff9 	beqzl	s0,80012dac <shmem_insert_entry+0x94>
80012dc8:	ac500000 	sw	s0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:191
#ifdef UCONFIG_SWAP
		swap_duplicate(entry);
#else
		assert(0);
80012dcc:	3c048002 	lui	a0,0x8002
80012dd0:	3c068002 	lui	a2,0x8002
80012dd4:	3c078002 	lui	a3,0x8002
80012dd8:	24842c10 	addiu	a0,a0,11280
80012ddc:	240500bf 	li	a1,191
80012de0:	24c609b0 	addiu	a2,a2,2480
80012de4:	0c006afd 	jal	8001abf4 <__panic>
80012de8:	24e71fa4 	addiu	a3,a3,8100
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:48
static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
	if (ptep_present(ptep)) {
80012dec:	10800034 	beqz	a0,80012ec0 <shmem_insert_entry+0x1a8>
80012df0:	2404f000 	li	a0,-4096
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80012df4:	00641824 	and	v1,v1,a0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012df8:	3c057fff 	lui	a1,0x7fff
80012dfc:	3c048015 	lui	a0,0x8015
80012e00:	8c847770 	lw	a0,30576(a0)
80012e04:	34a5f000 	ori	a1,a1,0xf000
80012e08:	00651821 	addu	v1,v1,a1
80012e0c:	00031b02 	srl	v1,v1,0xc
80012e10:	0064202b 	sltu	a0,v1,a0
80012e14:	1080002c 	beqz	a0,80012ec8 <shmem_insert_entry+0x1b0>
80012e18:	3c048015 	lui	a0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012e1c:	8c9177bc 	lw	s1,30652(a0)
80012e20:	00031940 	sll	v1,v1,0x5
80012e24:	02238821 	addu	s1,s1,v1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80012e28:	40036000 	mfc0	v1,c0_status
80012e2c:	30630001 	andi	v1,v1,0x1
80012e30:	1460001a 	bnez	v1,80012e9c <shmem_insert_entry+0x184>
80012e34:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012e38:	8e230000 	lw	v1,0(s1)
80012e3c:	2463ffff 	addiu	v1,v1,-1
80012e40:	ae230000 	sw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012e44:	8e230000 	lw	v1,0(s1)
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:62
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
#else
		if (page_ref_dec(page) == 0) {
80012e48:	10600003 	beqz	v1,80012e58 <shmem_insert_entry+0x140>
80012e4c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
80012e50:	08004b52 	j	80012d48 <shmem_insert_entry+0x30>
80012e54:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:63
			free_page(page);
80012e58:	24050001 	li	a1,1
80012e5c:	0c0073fb 	jal	8001cfec <free_pages>
80012e60:	afa20010 	sw	v0,16(sp)
80012e64:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
80012e68:	08004b52 	j	80012d48 <shmem_insert_entry+0x30>
80012e6c:	ac400000 	sw	zero,0(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80012e70:	0c006cbe 	jal	8001b2f8 <intr_disable>
80012e74:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012e78:	8e230000 	lw	v1,0(s1)
80012e7c:	24630001 	addiu	v1,v1,1
80012e80:	ae230000 	sw	v1,0(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012e84:	0c006cba 	jal	8001b2e8 <intr_enable>
80012e88:	00000000 	nop
80012e8c:	8fa20010 	lw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012e90:	8e230000 	lw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:99
	*ptep |= perm;
}

static inline void ptep_copy(pte_t * to, pte_t * from)
{
	*to = *from;
80012e94:	08004b6b 	j	80012dac <shmem_insert_entry+0x94>
80012e98:	ac500000 	sw	s0,0(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80012e9c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80012ea0:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012ea4:	8e230000 	lw	v1,0(s1)
80012ea8:	2463ffff 	addiu	v1,v1,-1
80012eac:	ae230000 	sw	v1,0(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012eb0:	0c006cba 	jal	8001b2e8 <intr_enable>
80012eb4:	00000000 	nop
80012eb8:	08004b91 	j	80012e44 <shmem_insert_entry+0x12c>
80012ebc:	8fa20010 	lw	v0,16(sp)
ptep_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
80012ec0:	0c007e3e 	jal	8001f8f8 <shmem_remove_entry_pte.part.6>
80012ec4:	00000000 	nop
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
80012ec8:	3c048002 	lui	a0,0x8002
80012ecc:	3c068002 	lui	a2,0x8002
80012ed0:	24842564 	addiu	a0,a0,9572
80012ed4:	24050063 	li	a1,99
80012ed8:	0c006afd 	jal	8001abf4 <__panic>
80012edc:	24c625cc 	addiu	a2,a2,9676

80012ee0 <shmem_remove_entry>:
shmem_remove_entry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:200
	return 0;
}

int shmem_remove_entry(struct shmem_struct *shmem, uintptr_t addr)
{
	return shmem_insert_entry(shmem, addr, 0);
80012ee0:	08004b46 	j	80012d18 <shmem_insert_entry>
80012ee4:	00003021 	move	a2,zero

80012ee8 <vma_compare>:
vma_compare():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:217
// vma_compare - compare vma1->vm_start < vma2->vm_start ?
static inline int vma_compare(rb_node * node1, rb_node * node2)
{
	struct vma_struct *vma1 = rbn2vma(node1, rb_link);
	struct vma_struct *vma2 = rbn2vma(node2, rb_link);
	uintptr_t start1 = vma1->vm_start, start2 = vma2->vm_start;
80012ee8:	8c83fff4 	lw	v1,-12(a0)
80012eec:	8ca4fff4 	lw	a0,-12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:219
	return (start1 < start2) ? -1 : (start1 > start2) ? 1 : 0;
}
80012ef0:	2405ffff 	li	a1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:218
static inline int vma_compare(rb_node * node1, rb_node * node2)
{
	struct vma_struct *vma1 = rbn2vma(node1, rb_link);
	struct vma_struct *vma2 = rbn2vma(node2, rb_link);
	uintptr_t start1 = vma1->vm_start, start2 = vma2->vm_start;
	return (start1 < start2) ? -1 : (start1 > start2) ? 1 : 0;
80012ef4:	0064102b 	sltu	v0,v1,a0
80012ef8:	0083182b 	sltu	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:219
}
80012efc:	0062280a 	movz	a1,v1,v0
80012f00:	03e00008 	jr	ra
80012f04:	00a01021 	move	v0,a1

80012f08 <vma_resize>:
vma_resize():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:433
		*vma_store = vma;
	}
	return 0;
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
80012f08:	00c51025 	or	v0,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:434
{
80012f0c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:433
		*vma_store = vma;
	}
	return 0;
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
80012f10:	30420fff 	andi	v0,v0,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:435
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80012f14:	14400020 	bnez	v0,80012f98 <vma_resize+0x90>
80012f18:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:436
	assert(vma->vm_start <= start && start < end && end <= vma->vm_end);
80012f1c:	8c820004 	lw	v0,4(a0)
80012f20:	00a2182b 	sltu	v1,a1,v0
80012f24:	14600014 	bnez	v1,80012f78 <vma_resize+0x70>
80012f28:	00a6182b 	sltu	v1,a1,a2
80012f2c:	50600013 	beqzl	v1,80012f7c <vma_resize+0x74>
80012f30:	3c048002 	lui	a0,0x8002
80012f34:	8c830008 	lw	v1,8(a0)
80012f38:	0066182b 	sltu	v1,v1,a2
80012f3c:	5460000f 	bnezl	v1,80012f7c <vma_resize+0x74>
80012f40:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:437
	if (vma->vm_flags & VM_SHARE) {
80012f44:	8c83000c 	lw	v1,12(a0)
80012f48:	30630010 	andi	v1,v1,0x10
80012f4c:	10600006 	beqz	v1,80012f68 <vma_resize+0x60>
80012f50:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:438
		vma->shmem_off += start - vma->vm_start;
80012f54:	8c83002c 	lw	v1,44(a0)
80012f58:	00621023 	subu	v0,v1,v0
80012f5c:	00451021 	addu	v0,v0,a1
80012f60:	ac82002c 	sw	v0,44(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:447
		vma->mfile.offset += start - vma->vm_start;
	}
#endif //UCONFIG_BIONIC_LIBC

	vma->vm_start = start, vma->vm_end = end;
}
80012f64:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:446
	if (vma->mfile.file != NULL) {
		vma->mfile.offset += start - vma->vm_start;
	}
#endif //UCONFIG_BIONIC_LIBC

	vma->vm_start = start, vma->vm_end = end;
80012f68:	ac850004 	sw	a1,4(a0)
80012f6c:	ac860008 	sw	a2,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:447
}
80012f70:	03e00008 	jr	ra
80012f74:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:436
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(vma->vm_start <= start && start < end && end <= vma->vm_end);
80012f78:	3c048002 	lui	a0,0x8002
80012f7c:	3c068002 	lui	a2,0x8002
80012f80:	3c078002 	lui	a3,0x8002
80012f84:	24842ce8 	addiu	a0,a0,11496
80012f88:	240501b4 	li	a1,436
80012f8c:	24c609b0 	addiu	a2,a2,2480
80012f90:	0c006afd 	jal	8001abf4 <__panic>
80012f94:	24e72d1c 	addiu	a3,a3,11548
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:435
	return 0;
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80012f98:	3c048002 	lui	a0,0x8002
80012f9c:	3c068002 	lui	a2,0x8002
80012fa0:	3c078002 	lui	a3,0x8002
80012fa4:	24842ce8 	addiu	a0,a0,11496
80012fa8:	240501b3 	li	a1,435
80012fac:	24c609b0 	addiu	a2,a2,2480
80012fb0:	0c006afd 	jal	8001abf4 <__panic>
80012fb4:	24e72cf0 	addiu	a3,a3,11504

80012fb8 <vma_destroy>:
vma_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:140
}

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
	if (vma->vm_flags & VM_SHARE) {
80012fb8:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:139
	return vma;
}

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
80012fbc:	27bdffe0 	addiu	sp,sp,-32
80012fc0:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:140
	if (vma->vm_flags & VM_SHARE) {
80012fc4:	30420010 	andi	v0,v0,0x10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:139
	return vma;
}

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
80012fc8:	afbf001c 	sw	ra,28(sp)
80012fcc:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:140
	if (vma->vm_flags & VM_SHARE) {
80012fd0:	14400007 	bnez	v0,80012ff0 <vma_destroy+0x38>
80012fd4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:145
		if (shmem_ref_dec(vma->shmem) == 0) {
			shmem_destroy(vma->shmem);
		}
	}
	kfree(vma);
80012fd8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:146
}
80012fdc:	8fbf001c 	lw	ra,28(sp)
80012fe0:	8fb10018 	lw	s1,24(sp)
80012fe4:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:145
	if (vma->vm_flags & VM_SHARE) {
		if (shmem_ref_dec(vma->shmem) == 0) {
			shmem_destroy(vma->shmem);
		}
	}
	kfree(vma);
80012fe8:	080054a3 	j	8001528c <kfree>
80012fec:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:141

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
	if (vma->vm_flags & VM_SHARE) {
		if (shmem_ref_dec(vma->shmem) == 0) {
80012ff0:	8c910028 	lw	s1,40(a0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012ff4:	40026000 	mfc0	v0,c0_status
80012ff8:	30420001 	andi	v0,v0,0x1
80012ffc:	1440000f 	bnez	v0,8001303c <vma_destroy+0x84>
80013000:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80013004:	8e220010 	lw	v0,16(s1)
80013008:	2442ffff 	addiu	v0,v0,-1
8001300c:	ae220010 	sw	v0,16(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013010:	8e220010 	lw	v0,16(s1)
vma_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:141
80013014:	1440fff1 	bnez	v0,80012fdc <vma_destroy+0x24>
80013018:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:142
			shmem_destroy(vma->shmem);
8001301c:	0c0049ee 	jal	800127b8 <shmem_destroy>
80013020:	8e040028 	lw	a0,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:145
		}
	}
	kfree(vma);
80013024:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:146
}
80013028:	8fbf001c 	lw	ra,28(sp)
8001302c:	8fb10018 	lw	s1,24(sp)
80013030:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:145
	if (vma->vm_flags & VM_SHARE) {
		if (shmem_ref_dec(vma->shmem) == 0) {
			shmem_destroy(vma->shmem);
		}
	}
	kfree(vma);
80013034:	080054a3 	j	8001528c <kfree>
80013038:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001303c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80013040:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013044:	8e220010 	lw	v0,16(s1)
80013048:	2442ffff 	addiu	v0,v0,-1
8001304c:	ae220010 	sw	v0,16(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013050:	0c006cba 	jal	8001b2e8 <intr_enable>
80013054:	00000000 	nop
80013058:	08004c04 	j	80013010 <vma_destroy+0x58>
8001305c:	00000000 	nop

80013060 <lock_mm>:
lock_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:66
static void check_vmm(void);
static void check_vma_struct(void);
static void check_pgfault(void);

void lock_mm(struct mm_struct *mm)
{
80013060:	27bdffe8 	addiu	sp,sp,-24
80013064:	afb00010 	sw	s0,16(sp)
80013068:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:67
	if (mm != NULL) {
8001306c:	10800009 	beqz	a0,80013094 <lock_mm+0x34>
80013070:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:68
		down(&(mm->mm_sem));
80013074:	0c006711 	jal	80019c44 <down>
80013078:	24840034 	addiu	a0,a0,52
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:69
		struct proc_struct *current = pls_read(current);
8001307c:	3c028015 	lui	v0,0x8015
80013080:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:70
		if (current != NULL) {
80013084:	10400004 	beqz	v0,80013098 <lock_mm+0x38>
80013088:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:71
			mm->locked_by = current->pid;
8001308c:	8c420004 	lw	v0,4(v0)
80013090:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:74
		}
	}
}
80013094:	8fbf0014 	lw	ra,20(sp)
80013098:	8fb00010 	lw	s0,16(sp)
8001309c:	03e00008 	jr	ra
800130a0:	27bd0018 	addiu	sp,sp,24

800130a4 <unlock_mm>:
unlock_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:77

void unlock_mm(struct mm_struct *mm)
{
800130a4:	27bdffe8 	addiu	sp,sp,-24
800130a8:	afb00010 	sw	s0,16(sp)
800130ac:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:78
	if (mm != NULL) {
800130b0:	10800004 	beqz	a0,800130c4 <unlock_mm+0x20>
800130b4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:79
		up(&(mm->mm_sem));
800130b8:	0c00670f 	jal	80019c3c <up>
800130bc:	24840034 	addiu	a0,a0,52
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:80
		mm->locked_by = 0;
800130c0:	ae000020 	sw	zero,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:82
	}
}
800130c4:	8fbf0014 	lw	ra,20(sp)
800130c8:	8fb00010 	lw	s0,16(sp)
800130cc:	03e00008 	jr	ra
800130d0:	27bd0018 	addiu	sp,sp,24

800130d4 <try_lock_mm>:
try_lock_mm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:85

bool try_lock_mm(struct mm_struct *mm)
{
800130d4:	27bdffe8 	addiu	sp,sp,-24
800130d8:	afb00010 	sw	s0,16(sp)
800130dc:	afbf0014 	sw	ra,20(sp)
800130e0:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:86
	if (mm != NULL) {
800130e4:	1080000b 	beqz	a0,80013114 <try_lock_mm+0x40>
800130e8:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:87
		if (!try_down(&(mm->mm_sem))) {
800130ec:	0c006722 	jal	80019c88 <try_down>
800130f0:	24840034 	addiu	a0,a0,52
800130f4:	10400007 	beqz	v0,80013114 <try_lock_mm+0x40>
800130f8:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:90
			return 0;
		}
		struct proc_struct *current = pls_read(current);
800130fc:	3c028015 	lui	v0,0x8015
80013100:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:91
		if (current != NULL) {
80013104:	10400003 	beqz	v0,80013114 <try_lock_mm+0x40>
80013108:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:92
			mm->locked_by = current->pid;
8001310c:	8c420004 	lw	v0,4(v0)
80013110:	ae020020 	sw	v0,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:96
		}
	}
	return 1;
}
80013114:	8fbf0014 	lw	ra,20(sp)
80013118:	00601021 	move	v0,v1
8001311c:	8fb00010 	lw	s0,16(sp)
80013120:	03e00008 	jr	ra
80013124:	27bd0018 	addiu	sp,sp,24

80013128 <mm_create>:
mm_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:100

// mm_create -  alloc a mm_struct & initialize it.
struct mm_struct *mm_create(void)
{
80013128:	27bdffe0 	addiu	sp,sp,-32
8001312c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:101
	struct mm_struct *mm = kmalloc(sizeof(struct mm_struct));
80013130:	0c005478 	jal	800151e0 <kmalloc>
80013134:	2404004c 	li	a0,76
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:102
	if (mm != NULL) {
80013138:	10400015 	beqz	v0,80013190 <mm_create+0x68>
8001313c:	2443002c 	addiu	v1,v0,44
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80013140:	ac430030 	sw	v1,48(v0)
80013144:	ac43002c 	sw	v1,44(v0)
80013148:	ac420004 	sw	v0,4(v0)
8001314c:	ac420000 	sw	v0,0(v0)
mm_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:104
		list_init(&(mm->mmap_list));
		mm->mmap_tree = NULL;
80013150:	ac400008 	sw	zero,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:105
		mm->mmap_cache = NULL;
80013154:	ac40000c 	sw	zero,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:106
		mm->pgdir = NULL;
80013158:	ac400010 	sw	zero,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:107
		mm->map_count = 0;
8001315c:	ac400014 	sw	zero,20(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:108
		mm->swap_address = 0;
80013160:	ac400018 	sw	zero,24(v0)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80013164:	ac40001c 	sw	zero,28(v0)
mm_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:110
		set_mm_count(mm, 0);
		mm->locked_by = 0;
80013168:	ac400020 	sw	zero,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:111
		mm->brk_start = mm->brk = 0;
8001316c:	ac400028 	sw	zero,40(v0)
80013170:	ac400024 	sw	zero,36(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:113
		list_init(&(mm->proc_mm_link));
		sem_init(&(mm->mm_sem), 1);
80013174:	24440034 	addiu	a0,v0,52
80013178:	24050001 	li	a1,1
8001317c:	0c006709 	jal	80019c24 <sem_init>
80013180:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:114
		mm->lapic = -1;
80013184:	8fa20010 	lw	v0,16(sp)
80013188:	2403ffff 	li	v1,-1
8001318c:	ac430048 	sw	v1,72(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:117
	}
	return mm;
}
80013190:	8fbf001c 	lw	ra,28(sp)
80013194:	03e00008 	jr	ra
80013198:	27bd0020 	addiu	sp,sp,32

8001319c <vma_create>:
vma_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:122

// vma_create - alloc a vma_struct & initialize it. (addr range: vm_start~vm_end)
struct vma_struct *vma_create(uintptr_t vm_start, uintptr_t vm_end,
			      uint32_t vm_flags)
{
8001319c:	27bdffe0 	addiu	sp,sp,-32
800131a0:	afb00018 	sw	s0,24(sp)
800131a4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:123
	struct vma_struct *vma = kmalloc(sizeof(struct vma_struct));
800131a8:	afa50010 	sw	a1,16(sp)
800131ac:	afa60014 	sw	a2,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:122
}

// vma_create - alloc a vma_struct & initialize it. (addr range: vm_start~vm_end)
struct vma_struct *vma_create(uintptr_t vm_start, uintptr_t vm_end,
			      uint32_t vm_flags)
{
800131b0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:123
	struct vma_struct *vma = kmalloc(sizeof(struct vma_struct));
800131b4:	0c005478 	jal	800151e0 <kmalloc>
800131b8:	24040030 	li	a0,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:124
	if (vma != NULL) {
800131bc:	8fa50010 	lw	a1,16(sp)
800131c0:	10400006 	beqz	v0,800131dc <vma_create+0x40>
800131c4:	8fa60014 	lw	a2,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:125
		vma->vm_start = vm_start;
800131c8:	ac500004 	sw	s0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:126
		vma->vm_end = vm_end;
800131cc:	ac450008 	sw	a1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:127
		vma->vm_flags = vm_flags;
800131d0:	ac46000c 	sw	a2,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:128
		vma->shmem = NULL;
800131d4:	ac400028 	sw	zero,40(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:129
		vma->shmem_off = 0;
800131d8:	ac40002c 	sw	zero,44(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:135
#ifdef UCONFIG_BIONIC_LIBC
		vma->mfile.file = NULL;
#endif //UCONFIG_BIONIC_LIBC
	}
	return vma;
}
800131dc:	8fbf001c 	lw	ra,28(sp)
800131e0:	8fb00018 	lw	s0,24(sp)
800131e4:	03e00008 	jr	ra
800131e8:	27bd0020 	addiu	sp,sp,32

800131ec <find_vma>:
find_vma():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:170
	return vma;
}

// find_vma - find a vma  (vma->vm_start <= addr <= vma_vm_end)
struct vma_struct *find_vma(struct mm_struct *mm, uintptr_t addr)
{
800131ec:	27bdffd8 	addiu	sp,sp,-40
800131f0:	afb30020 	sw	s3,32(sp)
800131f4:	afb10018 	sw	s1,24(sp)
800131f8:	afb00014 	sw	s0,20(sp)
800131fc:	afbf0024 	sw	ra,36(sp)
80013200:	afb2001c 	sw	s2,28(sp)
80013204:	00809821 	move	s3,a0
80013208:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:172
	struct vma_struct *vma = NULL;
	if (mm != NULL) {
8001320c:	10800020 	beqz	a0,80013290 <find_vma+0xa4>
80013210:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:173
		vma = mm->mmap_cache;
80013214:	8c91000c 	lw	s1,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:174
		if (!
80013218:	52200006 	beqzl	s1,80013234 <find_vma+0x48>
8001321c:	8e720008 	lw	s2,8(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:175
		    (vma != NULL && vma->vm_start <= addr
80013220:	8e220004 	lw	v0,4(s1)
80013224:	00a2102b 	sltu	v0,a1,v0
80013228:	50400027 	beqzl	v0,800132c8 <find_vma+0xdc>
8001322c:	8e220008 	lw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:177
		     && vma->vm_end > addr)) {
			if (mm->mmap_tree != NULL) {
80013230:	8e720008 	lw	s2,8(s3)
80013234:	1240002a 	beqz	s2,800132e0 <find_vma+0xf4>
80013238:	02601021 	move	v0,s3
find_vma_rb():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:151
}

// find_vma_rb - find a vma  (vma->vm_start <= addr <= vma_vm_end) in rb tree
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
8001323c:	0c00570d 	jal	80015c34 <rb_node_root>
80013240:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:153
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
80013244:	10400012 	beqz	v0,80013290 <find_vma+0xa4>
80013248:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:155
		tmp = rbn2vma(node, rb_link);
		if (tmp->vm_end > addr) {
8001324c:	8c43fff8 	lw	v1,-8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:160
			vma = tmp;
			if (tmp->vm_start <= addr) {
				break;
			}
			node = rb_node_left(tree, node);
80013250:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:155
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
		tmp = rbn2vma(node, rb_link);
		if (tmp->vm_end > addr) {
80013254:	0203182b 	sltu	v1,s0,v1
80013258:	10600015 	beqz	v1,800132b0 <find_vma+0xc4>
8001325c:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:157
			vma = tmp;
			if (tmp->vm_start <= addr) {
80013260:	8c43fff4 	lw	v1,-12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:154
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
		tmp = rbn2vma(node, rb_link);
80013264:	2451fff0 	addiu	s1,v0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:157
		if (tmp->vm_end > addr) {
			vma = tmp;
			if (tmp->vm_start <= addr) {
80013268:	0203102b 	sltu	v0,s0,v1
8001326c:	10400005 	beqz	v0,80013284 <find_vma+0x98>
80013270:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:160
				break;
			}
			node = rb_node_left(tree, node);
80013274:	0c005714 	jal	80015c50 <rb_node_left>
80013278:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:153
// find_vma_rb - find a vma  (vma->vm_start <= addr <= vma_vm_end) in rb tree
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
8001327c:	5440fff4 	bnezl	v0,80013250 <find_vma+0x64>
80013280:	8c43fff8 	lw	v1,-8(v0)
find_vma():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:195
				if (!found) {
					vma = NULL;
				}
			}
		}
		if (vma != NULL) {
80013284:	12200003 	beqz	s1,80013294 <find_vma+0xa8>
80013288:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:196
			mm->mmap_cache = vma;
8001328c:	ae71000c 	sw	s1,12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:200
		}
	}
	return vma;
}
80013290:	8fbf0024 	lw	ra,36(sp)
80013294:	02201021 	move	v0,s1
80013298:	8fb30020 	lw	s3,32(sp)
8001329c:	8fb2001c 	lw	s2,28(sp)
800132a0:	8fb10018 	lw	s1,24(sp)
800132a4:	8fb00014 	lw	s0,20(sp)
800132a8:	03e00008 	jr	ra
800132ac:	27bd0028 	addiu	sp,sp,40
find_vma_rb():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:162
			if (tmp->vm_start <= addr) {
				break;
			}
			node = rb_node_left(tree, node);
		} else {
			node = rb_node_right(tree, node);
800132b0:	0c00571a 	jal	80015c68 <rb_node_right>
800132b4:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:153
// find_vma_rb - find a vma  (vma->vm_start <= addr <= vma_vm_end) in rb tree
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
800132b8:	5440ffe5 	bnezl	v0,80013250 <find_vma+0x64>
800132bc:	8c43fff8 	lw	v1,-8(v0)
800132c0:	08004ca1 	j	80013284 <find_vma+0x98>
800132c4:	00000000 	nop
find_vma():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:174
struct vma_struct *find_vma(struct mm_struct *mm, uintptr_t addr)
{
	struct vma_struct *vma = NULL;
	if (mm != NULL) {
		vma = mm->mmap_cache;
		if (!
800132c8:	00a2102b 	sltu	v0,a1,v0
800132cc:	5440fff0 	bnezl	v0,80013290 <find_vma+0xa4>
800132d0:	ae71000c 	sw	s1,12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:177
		    (vma != NULL && vma->vm_start <= addr
		     && vma->vm_end > addr)) {
			if (mm->mmap_tree != NULL) {
800132d4:	8e720008 	lw	s2,8(s3)
800132d8:	1640ffd8 	bnez	s2,8001323c <find_vma+0x50>
800132dc:	02601021 	move	v0,s3
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800132e0:	8c420004 	lw	v0,4(v0)
find_vma():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:183
				vma = find_vma_rb(mm->mmap_tree, addr);
			} else {
				bool found = 0;
				list_entry_t *list = &(mm->mmap_list), *le =
				    list;
				while ((le = list_next(le)) != list) {
800132e4:	1262ffea 	beq	s3,v0,80013290 <find_vma+0xa4>
800132e8:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:185
					vma = le2vma(le, list_link);
					if (addr < vma->vm_end) {
800132ec:	8c43ffe8 	lw	v1,-24(v0)
800132f0:	0203182b 	sltu	v1,s0,v1
800132f4:	1060fffa 	beqz	v1,800132e0 <find_vma+0xf4>
800132f8:	2451ffe0 	addiu	s1,v0,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:195
				if (!found) {
					vma = NULL;
				}
			}
		}
		if (vma != NULL) {
800132fc:	5620ffe4 	bnezl	s1,80013290 <find_vma+0xa4>
80013300:	ae71000c 	sw	s1,12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:200
			mm->mmap_cache = vma;
		}
	}
	return vma;
}
80013304:	08004ca5 	j	80013294 <find_vma+0xa8>
80013308:	8fbf0024 	lw	ra,36(sp)

8001330c <find_vma_intersection>:
find_vma_intersection():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:204

struct vma_struct *find_vma_intersection(struct mm_struct *mm, uintptr_t start,
					 uintptr_t end)
{
8001330c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:205
	struct vma_struct *vma = find_vma(mm, start);
80013310:	afa60010 	sw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:204
	return vma;
}

struct vma_struct *find_vma_intersection(struct mm_struct *mm, uintptr_t start,
					 uintptr_t end)
{
80013314:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:205
	struct vma_struct *vma = find_vma(mm, start);
80013318:	0c004c7b 	jal	800131ec <find_vma>
8001331c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:206
	if (vma != NULL && end <= vma->vm_start) {
80013320:	10400004 	beqz	v0,80013334 <find_vma_intersection+0x28>
80013324:	8fa60010 	lw	a2,16(sp)
80013328:	8c430004 	lw	v1,4(v0)
8001332c:	0066302b 	sltu	a2,v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:207
		vma = NULL;
80013330:	0006100a 	movz	v0,zero,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:210
	}
	return vma;
}
80013334:	8fbf001c 	lw	ra,28(sp)
80013338:	03e00008 	jr	ra
8001333c:	27bd0020 	addiu	sp,sp,32

80013340 <insert_vma_struct>:
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:291
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
80013340:	8ca20004 	lw	v0,4(a1)
80013344:	8ca30008 	lw	v1,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:290
	}
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
80013348:	27bdffd8 	addiu	sp,sp,-40
8001334c:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:291
	assert(vma->vm_start < vma->vm_end);
80013350:	0043182b 	sltu	v1,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:290
	}
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
80013354:	afb00014 	sw	s0,20(sp)
80013358:	afbf0024 	sw	ra,36(sp)
8001335c:	afb30020 	sw	s3,32(sp)
80013360:	afb2001c 	sw	s2,28(sp)
80013364:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:291
	assert(vma->vm_start < vma->vm_end);
80013368:	10600070 	beqz	v1,8001352c <insert_vma_struct+0x1ec>
8001336c:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:294
	list_entry_t *list = &(mm->mmap_list);
	list_entry_t *le_prev = list, *le_next;
	if (mm->mmap_tree != NULL) {
80013370:	8c920008 	lw	s2,8(a0)
80013374:	1240003e 	beqz	s2,80013470 <insert_vma_struct+0x130>
80013378:	24b30010 	addiu	s3,a1,16
insert_vma_rb():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:281
static inline void
insert_vma_rb(rb_tree * tree, struct vma_struct *vma,
	      struct vma_struct **vma_prevp)
{
	rb_node *node = &(vma->rb_link), *prev;
	rb_insert(tree, node);
8001337c:	02402021 	move	a0,s2
80013380:	0c005567 	jal	8001559c <rb_insert>
80013384:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:283
	if (vma_prevp != NULL) {
		prev = rb_node_prev(tree, node);
80013388:	02402021 	move	a0,s2
8001338c:	0c0056d0 	jal	80015b40 <rb_node_prev>
80013390:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:284
		*vma_prevp = (prev != NULL) ? rbn2vma(prev, rb_link) : NULL;
80013394:	50400053 	beqzl	v0,800134e4 <insert_vma_struct+0x1a4>
80013398:	8e040004 	lw	a0,4(s0)
8001339c:	2443fff0 	addiu	v1,v0,-16
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:297
	list_entry_t *list = &(mm->mmap_list);
	list_entry_t *le_prev = list, *le_next;
	if (mm->mmap_tree != NULL) {
		struct vma_struct *mmap_prev;
		insert_vma_rb(mm->mmap_tree, vma, &mmap_prev);
		if (mmap_prev != NULL) {
800133a0:	50600050 	beqzl	v1,800134e4 <insert_vma_struct+0x1a4>
800133a4:	8e040004 	lw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:298
			le_prev = &(mmap_prev->list_link);
800133a8:	8c440014 	lw	a0,20(v0)
800133ac:	24430010 	addiu	v1,v0,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:314
	}

	le_next = list_next(le_prev);

	/* check overlap */
	if (le_prev != list) {
800133b0:	1070000e 	beq	v1,s0,800133ec <insert_vma_struct+0xac>
800133b4:	00000000 	nop
check_vma_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
800133b8:	8c65ffe8 	lw	a1,-24(v1)
800133bc:	8c62ffe4 	lw	v0,-28(v1)
800133c0:	0045102b 	sltu	v0,v0,a1
800133c4:	10400057 	beqz	v0,80013524 <insert_vma_struct+0x1e4>
800133c8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:271
	assert(prev->vm_end <= next->vm_start);
800133cc:	8e220004 	lw	v0,4(s1)
800133d0:	0045282b 	sltu	a1,v0,a1
800133d4:	54a0004c 	bnezl	a1,80013508 <insert_vma_struct+0x1c8>
800133d8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:272
	assert(next->vm_start < next->vm_end);
800133dc:	8e250008 	lw	a1,8(s1)
800133e0:	0045102b 	sltu	v0,v0,a1
800133e4:	50400041 	beqzl	v0,800134ec <insert_vma_struct+0x1ac>
800133e8:	3c048002 	lui	a0,0x8002
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:317

	/* check overlap */
	if (le_prev != list) {
		check_vma_overlap(le2vma(le_prev, list_link), vma);
	}
	if (le_next != list) {
800133ec:	5204000f 	beql	s0,a0,8001342c <insert_vma_struct+0xec>
800133f0:	8e050014 	lw	a1,20(s0)
check_vma_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
800133f4:	8e220008 	lw	v0,8(s1)
800133f8:	8e250004 	lw	a1,4(s1)
800133fc:	00a2282b 	sltu	a1,a1,v0
80013400:	10a00048 	beqz	a1,80013524 <insert_vma_struct+0x1e4>
80013404:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:271
	assert(prev->vm_end <= next->vm_start);
80013408:	8c85ffe4 	lw	a1,-28(a0)
8001340c:	00a2102b 	sltu	v0,a1,v0
80013410:	5440003d 	bnezl	v0,80013508 <insert_vma_struct+0x1c8>
80013414:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:272
	assert(next->vm_start < next->vm_end);
80013418:	8c82ffe8 	lw	v0,-24(a0)
8001341c:	00a2282b 	sltu	a1,a1,v0
80013420:	50a00032 	beqzl	a1,800134ec <insert_vma_struct+0x1ac>
80013424:	3c048002 	lui	a0,0x8002
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:324
	}

	vma->vm_mm = mm;
	list_add_after(le_prev, &(vma->list_link));

	mm->map_count++;
80013428:	8e050014 	lw	a1,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:325
	if (mm->mmap_tree == NULL && mm->map_count >= RB_MIN_MAP_COUNT) {
8001342c:	8e060008 	lw	a2,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:322
	if (le_next != list) {
		check_vma_overlap(vma, le2vma(le_next, list_link));
	}

	vma->vm_mm = mm;
	list_add_after(le_prev, &(vma->list_link));
80013430:	26220020 	addiu	v0,s1,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:324

	mm->map_count++;
80013434:	24a50001 	addiu	a1,a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:321
	}
	if (le_next != list) {
		check_vma_overlap(vma, le2vma(le_next, list_link));
	}

	vma->vm_mm = mm;
80013438:	ae300000 	sw	s0,0(s1)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001343c:	ac820000 	sw	v0,0(a0)
80013440:	ac620004 	sw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80013444:	ae230020 	sw	v1,32(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80013448:	ae240024 	sw	a0,36(s1)
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:325
	list_add_after(le_prev, &(vma->list_link));

	mm->map_count++;
	if (mm->mmap_tree == NULL && mm->map_count >= RB_MIN_MAP_COUNT) {
8001344c:	10c00012 	beqz	a2,80013498 <insert_vma_struct+0x158>
80013450:	ae050014 	sw	a1,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:338
				insert_vma_rb(mm->mmap_tree,
					      le2vma(le, list_link), NULL);
			}
		}
	}
}
80013454:	8fbf0024 	lw	ra,36(sp)
80013458:	8fb30020 	lw	s3,32(sp)
8001345c:	8fb2001c 	lw	s2,28(sp)
80013460:	8fb10018 	lw	s1,24(sp)
80013464:	8fb00014 	lw	s0,20(sp)
80013468:	03e00008 	jr	ra
8001346c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:294
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
	list_entry_t *list = &(mm->mmap_list);
	list_entry_t *le_prev = list, *le_next;
	if (mm->mmap_tree != NULL) {
80013470:	00801821 	move	v1,a0
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80013474:	8c840004 	lw	a0,4(a0)
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:302
		if (mmap_prev != NULL) {
			le_prev = &(mmap_prev->list_link);
		}
	} else {
		list_entry_t *le = list;
		while ((le = list_next(le)) != list) {
80013478:	1204ffcd 	beq	s0,a0,800133b0 <insert_vma_struct+0x70>
8001347c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:304
			struct vma_struct *mmap_prev = le2vma(le, list_link);
			if (mmap_prev->vm_start > vma->vm_start) {
80013480:	8c85ffe4 	lw	a1,-28(a0)
80013484:	0045282b 	sltu	a1,v0,a1
80013488:	50a0fffa 	beqzl	a1,80013474 <insert_vma_struct+0x134>
8001348c:	00801821 	move	v1,a0
80013490:	08004cec 	j	800133b0 <insert_vma_struct+0x70>
80013494:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:325

	vma->vm_mm = mm;
	list_add_after(le_prev, &(vma->list_link));

	mm->map_count++;
	if (mm->mmap_tree == NULL && mm->map_count >= RB_MIN_MAP_COUNT) {
80013498:	28a50020 	slti	a1,a1,32
8001349c:	14a0ffee 	bnez	a1,80013458 <insert_vma_struct+0x118>
800134a0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:328

		/* try to build red-black tree now, but may fail. */
		mm->mmap_tree = rb_tree_create(vma_compare);
800134a4:	3c048001 	lui	a0,0x8001
800134a8:	0c005536 	jal	800154d8 <rb_tree_create>
800134ac:	24842ee8 	addiu	a0,a0,12008
800134b0:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:330

		if (mm->mmap_tree != NULL) {
800134b4:	1040ffe7 	beqz	v0,80013454 <insert_vma_struct+0x114>
800134b8:	ae020008 	sw	v0,8(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
800134bc:	8e110004 	lw	s1,4(s0)
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:332
			list_entry_t *list = &(mm->mmap_list), *le = list;
			while ((le = list_next(le)) != list) {
800134c0:	1211ffe5 	beq	s0,s1,80013458 <insert_vma_struct+0x118>
800134c4:	8fbf0024 	lw	ra,36(sp)
insert_vma_rb():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:281
static inline void
insert_vma_rb(rb_tree * tree, struct vma_struct *vma,
	      struct vma_struct **vma_prevp)
{
	rb_node *node = &(vma->rb_link), *prev;
	rb_insert(tree, node);
800134c8:	0c005567 	jal	8001559c <rb_insert>
800134cc:	2625fff0 	addiu	a1,s1,-16
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
800134d0:	8e310004 	lw	s1,4(s1)
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:332
		/* try to build red-black tree now, but may fail. */
		mm->mmap_tree = rb_tree_create(vma_compare);

		if (mm->mmap_tree != NULL) {
			list_entry_t *list = &(mm->mmap_list), *le = list;
			while ((le = list_next(le)) != list) {
800134d4:	5611fffc 	bnel	s0,s1,800134c8 <insert_vma_struct+0x188>
800134d8:	8e040008 	lw	a0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:338
				insert_vma_rb(mm->mmap_tree,
					      le2vma(le, list_link), NULL);
			}
		}
	}
}
800134dc:	08004d16 	j	80013458 <insert_vma_struct+0x118>
800134e0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:292

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
	list_entry_t *list = &(mm->mmap_list);
800134e4:	08004cfb 	j	800133ec <insert_vma_struct+0xac>
800134e8:	02001821 	move	v1,s0
check_vma_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:272
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
	assert(prev->vm_end <= next->vm_start);
	assert(next->vm_start < next->vm_end);
800134ec:	3c068002 	lui	a2,0x8002
800134f0:	3c078002 	lui	a3,0x8002
800134f4:	24842ce8 	addiu	a0,a0,11496
800134f8:	24050110 	li	a1,272
800134fc:	24c609b0 	addiu	a2,a2,2480
80013500:	0c006afd 	jal	8001abf4 <__panic>
80013504:	24e72db4 	addiu	a3,a3,11700
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:271
// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
	assert(prev->vm_end <= next->vm_start);
80013508:	3c068002 	lui	a2,0x8002
8001350c:	3c078002 	lui	a3,0x8002
80013510:	24842ce8 	addiu	a0,a0,11496
80013514:	2405010f 	li	a1,271
80013518:	24c609b0 	addiu	a2,a2,2480
8001351c:	0c006afd 	jal	8001abf4 <__panic>
80013520:	24e72d94 	addiu	a3,a3,11668
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
80013524:	0c007e48 	jal	8001f920 <check_vma_overlap.part.5>
80013528:	00000000 	nop
insert_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:291
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
8001352c:	3c048002 	lui	a0,0x8002
80013530:	3c068002 	lui	a2,0x8002
80013534:	3c078002 	lui	a3,0x8002
80013538:	24842ce8 	addiu	a0,a0,11496
8001353c:	24050123 	li	a1,291
80013540:	24c609b0 	addiu	a2,a2,2480
80013544:	0c006afd 	jal	8001abf4 <__panic>
80013548:	24e72d78 	addiu	a3,a3,11640

8001354c <mm_destroy>:
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001354c:	8c82001c 	lw	v0,28(a0)
mm_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:357
	return 0;
}

// mm_destroy - free mm and mm internal fields
void mm_destroy(struct mm_struct *mm)
{
80013550:	27bdffe8 	addiu	sp,sp,-24
80013554:	afb00010 	sw	s0,16(sp)
80013558:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:358
	assert(mm_count(mm) == 0);
8001355c:	14400015 	bnez	v0,800135b4 <mm_destroy+0x68>
80013560:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:359
	if (mm->mmap_tree != NULL) {
80013564:	8c840008 	lw	a0,8(a0)
80013568:	5080000b 	beqzl	a0,80013598 <mm_destroy+0x4c>
8001356c:	8e040004 	lw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:360
		rb_tree_destroy(mm->mmap_tree);
80013570:	0c0056c2 	jal	80015b08 <rb_tree_destroy>
80013574:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80013578:	08004d66 	j	80013598 <mm_destroy+0x4c>
8001357c:	8e040004 	lw	a0,4(s0)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80013580:	8c820004 	lw	v0,4(a0)
mm_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:365
	}
	list_entry_t *list = &(mm->mmap_list), *le;
	while ((le = list_next(list)) != list) {
		list_del(le);
		vma_destroy(le2vma(le, list_link));
80013584:	2484ffe0 	addiu	a0,a0,-32
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80013588:	ac620004 	sw	v0,4(v1)
mm_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:365
8001358c:	0c004bee 	jal	80012fb8 <vma_destroy>
80013590:	ac430000 	sw	v1,0(v0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80013594:	8e040004 	lw	a0,4(s0)
mm_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:363
	assert(mm_count(mm) == 0);
	if (mm->mmap_tree != NULL) {
		rb_tree_destroy(mm->mmap_tree);
	}
	list_entry_t *list = &(mm->mmap_list), *le;
	while ((le = list_next(list)) != list) {
80013598:	5604fff9 	bnel	s0,a0,80013580 <mm_destroy+0x34>
8001359c:	8c830000 	lw	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:367
		list_del(le);
		vma_destroy(le2vma(le, list_link));
	}
	kfree(mm);
800135a0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:368
}
800135a4:	8fbf0014 	lw	ra,20(sp)
800135a8:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:367
	list_entry_t *list = &(mm->mmap_list), *le;
	while ((le = list_next(list)) != list) {
		list_del(le);
		vma_destroy(le2vma(le, list_link));
	}
	kfree(mm);
800135ac:	080054a3 	j	8001528c <kfree>
800135b0:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:358
}

// mm_destroy - free mm and mm internal fields
void mm_destroy(struct mm_struct *mm)
{
	assert(mm_count(mm) == 0);
800135b4:	3c048002 	lui	a0,0x8002
800135b8:	3c068002 	lui	a2,0x8002
800135bc:	3c078002 	lui	a3,0x8002
800135c0:	24842ce8 	addiu	a0,a0,11496
800135c4:	24050166 	li	a1,358
800135c8:	24c609b0 	addiu	a2,a2,2480
800135cc:	0c006afd 	jal	8001abf4 <__panic>
800135d0:	24e72dd4 	addiu	a3,a3,11732

800135d4 <vmm_init>:
vmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:373
}

// vmm_init - initialize virtual memory management
//          - now just call check_vmm to check correctness of vmm
void vmm_init(void)
{
800135d4:	27bdffd0 	addiu	sp,sp,-48
800135d8:	afbf002c 	sw	ra,44(sp)
800135dc:	afb60028 	sw	s6,40(sp)
800135e0:	afb50024 	sw	s5,36(sp)
800135e4:	afb40020 	sw	s4,32(sp)
800135e8:	afb3001c 	sw	s3,28(sp)
800135ec:	afb20018 	sw	s2,24(sp)
800135f0:	afb10014 	sw	s1,20(sp)
check_vmm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:735
}

// check_vmm - check correctness of vmm
static void check_vmm(void)
{
	size_t nr_used_pages_store = nr_used_pages();
800135f4:	0c007806 	jal	8001e018 <nr_used_pages>
800135f8:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:737
	//YX
	size_t slab_allocated_store = slab_allocated();
800135fc:	0c005444 	jal	80015110 <slab_allocated>
80013600:	0040a021 	move	s4,v0
check_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:749
	kprintf("check_vmm() succeeded.\n\r");
}

static void check_vma_struct(void)
{
	size_t nr_used_pages_store = nr_used_pages();
80013604:	0c007806 	jal	8001e018 <nr_used_pages>
80013608:	00409821 	move	s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:750
	size_t slab_allocated_store = slab_allocated();
8001360c:	0c005444 	jal	80015110 <slab_allocated>
80013610:	0040b021 	move	s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:752

	struct mm_struct *mm = mm_create();
80013614:	0c004c4a 	jal	80013128 <mm_create>
80013618:	0040a821 	move	s5,v0
8001361c:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:753
	assert(mm != NULL);
80013620:	24100140 	li	s0,320
80013624:	10400095 	beqz	v0,8001387c <vmm_init+0x2a8>
80013628:	2412fffb 	li	s2,-5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:759
	//10 
	int step1 = RB_MIN_MAP_COUNT * 2, step2 = step1 * 10;

	int i;
	for (i = step1; i >= 0; i--) {
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
8001362c:	02002021 	move	a0,s0
80013630:	26050002 	addiu	a1,s0,2
80013634:	0c004c67 	jal	8001319c <vma_create>
80013638:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:760
		assert(vma != NULL);
8001363c:	1040008b 	beqz	v0,8001386c <vmm_init+0x298>
80013640:	2610fffb 	addiu	s0,s0,-5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:761
		insert_vma_struct(mm, vma);
80013644:	02202021 	move	a0,s1
80013648:	0c004cd0 	jal	80013340 <insert_vma_struct>
8001364c:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:758
	assert(mm != NULL);
	//10 
	int step1 = RB_MIN_MAP_COUNT * 2, step2 = step1 * 10;

	int i;
	for (i = step1; i >= 0; i--) {
80013650:	1612fff7 	bne	s0,s2,80013630 <vmm_init+0x5c>
80013654:	02002021 	move	a0,s0
80013658:	24100145 	li	s0,325
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:764
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
		insert_vma_struct(mm, vma);
	}

	for (i = step1 + 1; i <= step2; i++) {
8001365c:	24120c85 	li	s2,3205
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:765
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
80013660:	02002021 	move	a0,s0
80013664:	26050002 	addiu	a1,s0,2
80013668:	0c004c67 	jal	8001319c <vma_create>
8001366c:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:766
		assert(vma != NULL);
80013670:	10400072 	beqz	v0,8001383c <vmm_init+0x268>
80013674:	26100005 	addiu	s0,s0,5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:767
		insert_vma_struct(mm, vma);
80013678:	02202021 	move	a0,s1
8001367c:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013680:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:764
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
		insert_vma_struct(mm, vma);
	}

	for (i = step1 + 1; i <= step2; i++) {
80013684:	1612fff7 	bne	s0,s2,80013664 <vmm_init+0x90>
80013688:	02002021 	move	a0,s0
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8001368c:	8e220004 	lw	v0,4(s1)
80013690:	24030002 	li	v1,2
check_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:772
		insert_vma_struct(mm, vma);
	}

	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
80013694:	24060c87 	li	a2,3207
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:773
		assert(le != &(mm->mmap_list));
80013698:	12220061 	beq	s1,v0,80013820 <vmm_init+0x24c>
8001369c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:775
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
800136a0:	8c44ffe4 	lw	a0,-28(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:372
	kfree(mm);
}

// vmm_init - initialize virtual memory management
//          - now just call check_vmm to check correctness of vmm
void vmm_init(void)
800136a4:	2465fffe 	addiu	a1,v1,-2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:775
	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
		assert(le != &(mm->mmap_list));
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
800136a8:	14a4004e 	bne	a1,a0,800137e4 <vmm_init+0x210>
800136ac:	3c048002 	lui	a0,0x8002
800136b0:	8c44ffe8 	lw	a0,-24(v0)
800136b4:	1483004a 	bne	a0,v1,800137e0 <vmm_init+0x20c>
800136b8:	24630005 	addiu	v1,v1,5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:772
		insert_vma_struct(mm, vma);
	}

	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
800136bc:	1466fff6 	bne	v1,a2,80013698 <vmm_init+0xc4>
800136c0:	8c420004 	lw	v0,4(v0)
800136c4:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:779
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
		le = list_next(le);
	}

	for (i = 0; i < 5 * step2 + 2; i++) {
800136c8:	24120c82 	li	s2,3202
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:780
		struct vma_struct *vma = find_vma(mm, i);
800136cc:	02202021 	move	a0,s1
800136d0:	0c004c7b 	jal	800131ec <find_vma>
800136d4:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:781
		assert(vma != NULL);
800136d8:	10400060 	beqz	v0,8001385c <vmm_init+0x288>
800136dc:	001018c2 	srl	v1,s0,0x3
__divu5():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:44
}

static inline unsigned __divu5(unsigned int n)
{
	unsigned int q, r;
	q = (n >> 3) + (n >> 4);
800136e0:	00102102 	srl	a0,s0,0x4
800136e4:	00832021 	addu	a0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:45
	q = q + (q >> 4);
800136e8:	00041902 	srl	v1,a0,0x4
800136ec:	00642021 	addu	a0,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:46
	q = q + (q >> 8);
800136f0:	00041a02 	srl	v1,a0,0x8
800136f4:	00642021 	addu	a0,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:48
	q = q + (q >> 16);
	r = n - q * 5;
800136f8:	00041880 	sll	v1,a0,0x2
800136fc:	00641821 	addu	v1,v1,a0
80013700:	02031823 	subu	v1,s0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:49
	return q + (13 * r >> 6);
80013704:	00032880 	sll	a1,v1,0x2
80013708:	00033100 	sll	a2,v1,0x4
8001370c:	00c52823 	subu	a1,a2,a1
80013710:	00a31821 	addu	v1,a1,v1
80013714:	00031982 	srl	v1,v1,0x6
80013718:	00642021 	addu	a0,v1,a0
check_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:783
		int j = __divu5(i);//i / 5;
		if (i >= 5 * j + 2) {
8001371c:	00041880 	sll	v1,a0,0x2
80013720:	00641821 	addu	v1,v1,a0
80013724:	24650001 	addiu	a1,v1,1
80013728:	00b0282a 	slt	a1,a1,s0
8001372c:	50a00005 	beqzl	a1,80013744 <vmm_init+0x170>
80013730:	8c440004 	lw	a0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:784
			j++;
80013734:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:783

	for (i = 0; i < 5 * step2 + 2; i++) {
		struct vma_struct *vma = find_vma(mm, i);
		assert(vma != NULL);
		int j = __divu5(i);//i / 5;
		if (i >= 5 * j + 2) {
80013738:	00041880 	sll	v1,a0,0x2
8001373c:	00641821 	addu	v1,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:786
			j++;
		}
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
80013740:	8c440004 	lw	a0,4(v0)
80013744:	1483002e 	bne	a0,v1,80013800 <vmm_init+0x22c>
80013748:	24630002 	addiu	v1,v1,2
8001374c:	8c420008 	lw	v0,8(v0)
80013750:	1443002b 	bne	v0,v1,80013800 <vmm_init+0x22c>
80013754:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:779
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
		le = list_next(le);
	}

	for (i = 0; i < 5 * step2 + 2; i++) {
80013758:	1612ffdd 	bne	s0,s2,800136d0 <vmm_init+0xfc>
8001375c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:789
			j++;
		}
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
	}

	mm_destroy(mm);
80013760:	0c004d53 	jal	8001354c <mm_destroy>
80013764:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:791

	__CHECK_MEMORY_LEAK();
80013768:	0c007806 	jal	8001e018 <nr_used_pages>
8001376c:	00000000 	nop
80013770:	16c20051 	bne	s6,v0,800138b8 <vmm_init+0x2e4>
80013774:	3c048002 	lui	a0,0x8002
80013778:	0c005444 	jal	80015110 <slab_allocated>
8001377c:	00000000 	nop
80013780:	56a20046 	bnel	s5,v0,8001389c <vmm_init+0x2c8>
80013784:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:793

	kprintf("check_vma_struct() succeeded!\n\r");
80013788:	3c048002 	lui	a0,0x8002
8001378c:	0c00798a 	jal	8001e628 <kprintf>
80013790:	24842e78 	addiu	a0,a0,11896
check_vmm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:742
	size_t slab_allocated_store = slab_allocated();

	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();
80013794:	0c007806 	jal	8001e018 <nr_used_pages>
80013798:	00000000 	nop
8001379c:	16820051 	bne	s4,v0,800138e4 <vmm_init+0x310>
800137a0:	3c048002 	lui	a0,0x8002
800137a4:	0c005444 	jal	80015110 <slab_allocated>
800137a8:	00000000 	nop
800137ac:	16620049 	bne	s3,v0,800138d4 <vmm_init+0x300>
800137b0:	8fbf002c 	lw	ra,44(sp)
vmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:375
// vmm_init - initialize virtual memory management
//          - now just call check_vmm to check correctness of vmm
void vmm_init(void)
{
	check_vmm();
}
800137b4:	8fb60028 	lw	s6,40(sp)
800137b8:	8fb50024 	lw	s5,36(sp)
800137bc:	8fb40020 	lw	s4,32(sp)
800137c0:	8fb3001c 	lw	s3,28(sp)
800137c4:	8fb20018 	lw	s2,24(sp)
800137c8:	8fb10014 	lw	s1,20(sp)
800137cc:	8fb00010 	lw	s0,16(sp)
check_vmm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:744
	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();

	kprintf("check_vmm() succeeded.\n\r");
800137d0:	3c048002 	lui	a0,0x8002
800137d4:	24842e98 	addiu	a0,a0,11928
800137d8:	0800798a 	j	8001e628 <kprintf>
800137dc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:775
	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
		assert(le != &(mm->mmap_list));
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
800137e0:	3c048002 	lui	a0,0x8002
800137e4:	3c068002 	lui	a2,0x8002
800137e8:	3c078002 	lui	a3,0x8002
800137ec:	24842ce8 	addiu	a0,a0,11496
800137f0:	24050307 	li	a1,775
800137f4:	24c609b0 	addiu	a2,a2,2480
800137f8:	0c006afd 	jal	8001abf4 <__panic>
800137fc:	24e72e0c 	addiu	a3,a3,11788
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:786
		assert(vma != NULL);
		int j = __divu5(i);//i / 5;
		if (i >= 5 * j + 2) {
			j++;
		}
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
80013800:	3c048002 	lui	a0,0x8002
80013804:	3c068002 	lui	a2,0x8002
80013808:	3c078002 	lui	a3,0x8002
8001380c:	24842ce8 	addiu	a0,a0,11496
80013810:	24050312 	li	a1,786
80013814:	24c609b0 	addiu	a2,a2,2480
80013818:	0c006afd 	jal	8001abf4 <__panic>
8001381c:	24e72e44 	addiu	a3,a3,11844
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:773
	}

	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
		assert(le != &(mm->mmap_list));
80013820:	3c068002 	lui	a2,0x8002
80013824:	3c078002 	lui	a3,0x8002
80013828:	24842ce8 	addiu	a0,a0,11496
8001382c:	24050305 	li	a1,773
80013830:	24c609b0 	addiu	a2,a2,2480
80013834:	0c006afd 	jal	8001abf4 <__panic>
80013838:	24e72df4 	addiu	a3,a3,11764
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:766
		insert_vma_struct(mm, vma);
	}

	for (i = step1 + 1; i <= step2; i++) {
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
8001383c:	3c048002 	lui	a0,0x8002
80013840:	24842ce8 	addiu	a0,a0,11496
80013844:	240502fe 	li	a1,766
80013848:	3c068002 	lui	a2,0x8002
8001384c:	3c078002 	lui	a3,0x8002
80013850:	24c609b0 	addiu	a2,a2,2480
80013854:	0c006afd 	jal	8001abf4 <__panic>
80013858:	24e72de8 	addiu	a3,a3,11752
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:781
		le = list_next(le);
	}

	for (i = 0; i < 5 * step2 + 2; i++) {
		struct vma_struct *vma = find_vma(mm, i);
		assert(vma != NULL);
8001385c:	3c048002 	lui	a0,0x8002
80013860:	24842ce8 	addiu	a0,a0,11496
80013864:	08004e12 	j	80013848 <vmm_init+0x274>
80013868:	2405030d 	li	a1,781
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:760
	int step1 = RB_MIN_MAP_COUNT * 2, step2 = step1 * 10;

	int i;
	for (i = step1; i >= 0; i--) {
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
8001386c:	3c048002 	lui	a0,0x8002
80013870:	24842ce8 	addiu	a0,a0,11496
80013874:	08004e12 	j	80013848 <vmm_init+0x274>
80013878:	240502f8 	li	a1,760
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:753
{
	size_t nr_used_pages_store = nr_used_pages();
	size_t slab_allocated_store = slab_allocated();

	struct mm_struct *mm = mm_create();
	assert(mm != NULL);
8001387c:	3c048002 	lui	a0,0x8002
80013880:	3c068002 	lui	a2,0x8002
80013884:	3c078002 	lui	a3,0x8002
80013888:	24842ce8 	addiu	a0,a0,11496
8001388c:	240502f1 	li	a1,753
80013890:	24c609b0 	addiu	a2,a2,2480
80013894:	0c006afd 	jal	8001abf4 <__panic>
80013898:	24e72c04 	addiu	a3,a3,11268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:791
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
	}

	mm_destroy(mm);

	__CHECK_MEMORY_LEAK();
8001389c:	24842ce8 	addiu	a0,a0,11496
800138a0:	24050317 	li	a1,791
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:742
	size_t slab_allocated_store = slab_allocated();

	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();
800138a4:	3c068002 	lui	a2,0x8002
800138a8:	3c078002 	lui	a3,0x8002
800138ac:	24c609b0 	addiu	a2,a2,2480
800138b0:	0c006afd 	jal	8001abf4 <__panic>
800138b4:	24e72984 	addiu	a3,a3,10628
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:791
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
	}

	mm_destroy(mm);

	__CHECK_MEMORY_LEAK();
800138b8:	24842ce8 	addiu	a0,a0,11496
800138bc:	24050317 	li	a1,791
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:742
	size_t slab_allocated_store = slab_allocated();

	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();
800138c0:	3c068002 	lui	a2,0x8002
800138c4:	3c078002 	lui	a3,0x8002
800138c8:	24c609b0 	addiu	a2,a2,2480
800138cc:	0c006afd 	jal	8001abf4 <__panic>
800138d0:	24e7295c 	addiu	a3,a3,10588
800138d4:	3c048002 	lui	a0,0x8002
800138d8:	24842ce8 	addiu	a0,a0,11496
800138dc:	08004e29 	j	800138a4 <vmm_init+0x2d0>
800138e0:	240502e6 	li	a1,742
800138e4:	24842ce8 	addiu	a0,a0,11496
800138e8:	08004e30 	j	800138c0 <vmm_init+0x2ec>
800138ec:	240502e6 	li	a1,742

800138f0 <mm_map>:
mm_map():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:380
}

int
mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,
       struct vma_struct **vma_store)
{
800138f0:	27bdffd0 	addiu	sp,sp,-48
800138f4:	afb10020 	sw	s1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:382
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
800138f8:	24b10fff 	addiu	s1,a1,4095
800138fc:	02268821 	addu	s1,s1,a2
80013900:	32220fff 	andi	v0,s1,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:380
}

int
mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,
       struct vma_struct **vma_store)
{
80013904:	afb20024 	sw	s2,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:381
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80013908:	2412f000 	li	s2,-4096
8001390c:	00b29024 	and	s2,a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:382
	    ROUNDUP(addr + len, PGSIZE);
80013910:	02228823 	subu	s1,s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:383
	if (!USER_ACCESS(start, end)) {
80013914:	0251102b 	sltu	v0,s2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:380
}

int
mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,
       struct vma_struct **vma_store)
{
80013918:	afb30028 	sw	s3,40(sp)
8001391c:	afb0001c 	sw	s0,28(sp)
80013920:	afbf002c 	sw	ra,44(sp)
80013924:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:383
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
80013928:	10400025 	beqz	v0,800139c0 <mm_map+0xd0>
8001392c:	8fb30040 	lw	s3,64(sp)
80013930:	3c028000 	lui	v0,0x8000
80013934:	24420001 	addiu	v0,v0,1
80013938:	0222102b 	sltu	v0,s1,v0
8001393c:	10400019 	beqz	v0,800139a4 <mm_map+0xb4>
80013940:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:387
		return -E_INVAL;
	}

	assert(mm != NULL);
80013944:	10800020 	beqz	a0,800139c8 <mm_map+0xd8>
80013948:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:392

	int ret = -E_INVAL;

	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) != NULL && end > vma->vm_start) {
8001394c:	0c004c7b 	jal	800131ec <find_vma>
80013950:	afa70010 	sw	a3,16(sp)
80013954:	10400005 	beqz	v0,8001396c <mm_map+0x7c>
80013958:	8fa70010 	lw	a3,16(sp)
8001395c:	8c430004 	lw	v1,4(v0)
80013960:	0071182b 	sltu	v1,v1,s1
80013964:	1460000f 	bnez	v1,800139a4 <mm_map+0xb4>
80013968:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:397
		goto out;
	}
	ret = -E_NO_MEM;
	vm_flags &= ~VM_SHARE;
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
8001396c:	2406ffef 	li	a2,-17
80013970:	02202821 	move	a1,s1
80013974:	02402021 	move	a0,s2
80013978:	0c004c67 	jal	8001319c <vma_create>
8001397c:	00e63024 	and	a2,a3,a2
80013980:	00408821 	move	s1,v0
80013984:	12200007 	beqz	s1,800139a4 <mm_map+0xb4>
80013988:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:400
		goto out;
	}
	insert_vma_struct(mm, vma);
8001398c:	02002021 	move	a0,s0
80013990:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013994:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:401
	if (vma_store != NULL) {
80013998:	12600002 	beqz	s3,800139a4 <mm_map+0xb4>
8001399c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:402
		*vma_store = vma;
800139a0:	ae710000 	sw	s1,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:408
	}
	ret = 0;

out:
	return ret;
}
800139a4:	8fbf002c 	lw	ra,44(sp)
800139a8:	8fb30028 	lw	s3,40(sp)
800139ac:	8fb20024 	lw	s2,36(sp)
800139b0:	8fb10020 	lw	s1,32(sp)
800139b4:	8fb0001c 	lw	s0,28(sp)
800139b8:	03e00008 	jr	ra
800139bc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:384
       struct vma_struct **vma_store)
{
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
		return -E_INVAL;
800139c0:	08004e69 	j	800139a4 <mm_map+0xb4>
800139c4:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:387
	}

	assert(mm != NULL);
800139c8:	3c048002 	lui	a0,0x8002
800139cc:	3c068002 	lui	a2,0x8002
800139d0:	3c078002 	lui	a3,0x8002
800139d4:	24842ce8 	addiu	a0,a0,11496
800139d8:	24050183 	li	a1,387
800139dc:	24c609b0 	addiu	a2,a2,2480
800139e0:	0c006afd 	jal	8001abf4 <__panic>
800139e4:	24e72c04 	addiu	a3,a3,11268

800139e8 <mm_map_shmem>:
mm_map_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:413
}

int
mm_map_shmem(struct mm_struct *mm, uintptr_t addr, uint32_t vm_flags,
	     struct shmem_struct *shmem, struct vma_struct **vma_store)
{
800139e8:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:414
	if ((addr % PGSIZE) != 0 || shmem == NULL) {
800139ec:	30a30fff 	andi	v1,a1,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:413
}

int
mm_map_shmem(struct mm_struct *mm, uintptr_t addr, uint32_t vm_flags,
	     struct shmem_struct *shmem, struct vma_struct **vma_store)
{
800139f0:	afb20030 	sw	s2,48(sp)
800139f4:	afb1002c 	sw	s1,44(sp)
800139f8:	afb00028 	sw	s0,40(sp)
800139fc:	afbf0034 	sw	ra,52(sp)
80013a00:	00c09021 	move	s2,a2
80013a04:	00e08021 	move	s0,a3
80013a08:	8fb10048 	lw	s1,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:414
	if ((addr % PGSIZE) != 0 || shmem == NULL) {
80013a0c:	14600019 	bnez	v1,80013a74 <mm_map_shmem+0x8c>
80013a10:	2402ffea 	li	v0,-22
80013a14:	10e00018 	beqz	a3,80013a78 <mm_map_shmem+0x90>
80013a18:	8fbf0034 	lw	ra,52(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80013a1c:	40026000 	mfc0	v0,c0_status
80013a20:	30420001 	andi	v0,v0,0x1
80013a24:	54400019 	bnezl	v0,80013a8c <mm_map_shmem+0xa4>
80013a28:	afa40020 	sw	a0,32(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013a2c:	8ce20010 	lw	v0,16(a3)
mm_map_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:420
		return -E_INVAL;
	}
	int ret;
	struct vma_struct *vma;
	shmem_ref_inc(shmem);
	if ((ret = mm_map(mm, addr, shmem->len, vm_flags, &vma)) != 0) {
80013a30:	8e06000c 	lw	a2,12(s0)
shmem_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80013a34:	24420001 	addiu	v0,v0,1
80013a38:	ace20010 	sw	v0,16(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013a3c:	8e020010 	lw	v0,16(s0)
mm_map_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:420
80013a40:	02403821 	move	a3,s2
80013a44:	27a20018 	addiu	v0,sp,24
80013a48:	0c004e3c 	jal	800138f0 <mm_map>
80013a4c:	afa20010 	sw	v0,16(sp)
80013a50:	1440001f 	bnez	v0,80013ad0 <mm_map_shmem+0xe8>
80013a54:	8fa30018 	lw	v1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:426
		shmem_ref_dec(shmem);
		return ret;
	}
	vma->shmem = shmem;
	vma->shmem_off = 0;
	vma->vm_flags |= VM_SHARE;
80013a58:	8c64000c 	lw	a0,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:424
	shmem_ref_inc(shmem);
	if ((ret = mm_map(mm, addr, shmem->len, vm_flags, &vma)) != 0) {
		shmem_ref_dec(shmem);
		return ret;
	}
	vma->shmem = shmem;
80013a5c:	ac700028 	sw	s0,40(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:425
	vma->shmem_off = 0;
80013a60:	ac60002c 	sw	zero,44(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:426
	vma->vm_flags |= VM_SHARE;
80013a64:	34840010 	ori	a0,a0,0x10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:427
	if (vma_store != NULL) {
80013a68:	12200002 	beqz	s1,80013a74 <mm_map_shmem+0x8c>
80013a6c:	ac64000c 	sw	a0,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:428
		*vma_store = vma;
80013a70:	ae230000 	sw	v1,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:431
	}
	return 0;
}
80013a74:	8fbf0034 	lw	ra,52(sp)
80013a78:	8fb20030 	lw	s2,48(sp)
80013a7c:	8fb1002c 	lw	s1,44(sp)
80013a80:	8fb00028 	lw	s0,40(sp)
80013a84:	03e00008 	jr	ra
80013a88:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013a8c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80013a90:	afa50024 	sw	a1,36(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013a94:	8e020010 	lw	v0,16(s0)
80013a98:	24420001 	addiu	v0,v0,1
80013a9c:	ae020010 	sw	v0,16(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013aa0:	0c006cba 	jal	8001b2e8 <intr_enable>
80013aa4:	00000000 	nop
mm_map_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:420
		return -E_INVAL;
	}
	int ret;
	struct vma_struct *vma;
	shmem_ref_inc(shmem);
	if ((ret = mm_map(mm, addr, shmem->len, vm_flags, &vma)) != 0) {
80013aa8:	8e06000c 	lw	a2,12(s0)
80013aac:	8fa40020 	lw	a0,32(sp)
80013ab0:	8fa50024 	lw	a1,36(sp)
shmem_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013ab4:	8e020010 	lw	v0,16(s0)
mm_map_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:420
80013ab8:	02403821 	move	a3,s2
80013abc:	27a20018 	addiu	v0,sp,24
80013ac0:	0c004e3c 	jal	800138f0 <mm_map>
80013ac4:	afa20010 	sw	v0,16(sp)
80013ac8:	1040ffe3 	beqz	v0,80013a58 <mm_map_shmem+0x70>
80013acc:	8fa30018 	lw	v1,24(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80013ad0:	40036000 	mfc0	v1,c0_status
80013ad4:	30630001 	andi	v1,v1,0x1
80013ad8:	1460000b 	bnez	v1,80013b08 <mm_map_shmem+0x120>
80013adc:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013ae0:	8e030010 	lw	v1,16(s0)
80013ae4:	2463ffff 	addiu	v1,v1,-1
80013ae8:	ae030010 	sw	v1,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013aec:	8e030010 	lw	v1,16(s0)
mm_map_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:431
	vma->vm_flags |= VM_SHARE;
	if (vma_store != NULL) {
		*vma_store = vma;
	}
	return 0;
}
80013af0:	8fbf0034 	lw	ra,52(sp)
80013af4:	8fb20030 	lw	s2,48(sp)
80013af8:	8fb1002c 	lw	s1,44(sp)
80013afc:	8fb00028 	lw	s0,40(sp)
80013b00:	03e00008 	jr	ra
80013b04:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013b08:	0c006cbe 	jal	8001b2f8 <intr_disable>
80013b0c:	afa20020 	sw	v0,32(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013b10:	8e030010 	lw	v1,16(s0)
80013b14:	2463ffff 	addiu	v1,v1,-1
80013b18:	ae030010 	sw	v1,16(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013b1c:	0c006cba 	jal	8001b2e8 <intr_enable>
80013b20:	00000000 	nop
80013b24:	8fa20020 	lw	v0,32(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013b28:	8e030010 	lw	v1,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:431
80013b2c:	08004ebd 	j	80013af4 <mm_map_shmem+0x10c>
80013b30:	8fbf0034 	lw	ra,52(sp)

80013b34 <mm_unmap>:
mm_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:450

	vma->vm_start = start, vma->vm_end = end;
}

int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80013b34:	27bdffc0 	addiu	sp,sp,-64
80013b38:	afb20024 	sw	s2,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:452
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80013b3c:	24b20fff 	addiu	s2,a1,4095
80013b40:	02469021 	addu	s2,s2,a2
80013b44:	32420fff 	andi	v0,s2,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:450

	vma->vm_start = start, vma->vm_end = end;
}

int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80013b48:	afb30028 	sw	s3,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:451
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80013b4c:	2413f000 	li	s3,-4096
80013b50:	00b39824 	and	s3,a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:452
	    ROUNDUP(addr + len, PGSIZE);
80013b54:	02429023 	subu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:453
	if (!USER_ACCESS(start, end)) {
80013b58:	0272102b 	sltu	v0,s3,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:450

	vma->vm_start = start, vma->vm_end = end;
}

int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80013b5c:	afb10020 	sw	s1,32(sp)
80013b60:	afbf003c 	sw	ra,60(sp)
80013b64:	afb70038 	sw	s7,56(sp)
80013b68:	afb60034 	sw	s6,52(sp)
80013b6c:	afb50030 	sw	s5,48(sp)
80013b70:	afb4002c 	sw	s4,44(sp)
80013b74:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:453
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
80013b78:	10400090 	beqz	v0,80013dbc <mm_unmap+0x288>
80013b7c:	00808821 	move	s1,a0
80013b80:	3c028000 	lui	v0,0x8000
80013b84:	24420001 	addiu	v0,v0,1
80013b88:	0242102b 	sltu	v0,s2,v0
80013b8c:	10400060 	beqz	v0,80013d10 <mm_unmap+0x1dc>
80013b90:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:457
		return -E_INVAL;
	}

	assert(mm != NULL);
80013b94:	50800093 	beqzl	a0,80013de4 <mm_unmap+0x2b0>
80013b98:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:460

	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) == NULL || end <= vma->vm_start) {
80013b9c:	0c004c7b 	jal	800131ec <find_vma>
80013ba0:	02602821 	move	a1,s3
80013ba4:	10400059 	beqz	v0,80013d0c <mm_unmap+0x1d8>
80013ba8:	00408021 	move	s0,v0
80013bac:	8c440004 	lw	a0,4(v0)
80013bb0:	0092102b 	sltu	v0,a0,s2
80013bb4:	10400055 	beqz	v0,80013d0c <mm_unmap+0x1d8>
80013bb8:	0093102b 	sltu	v0,a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:464
		return 0;
	}

	if (vma->vm_start < start && end < vma->vm_end) {
80013bbc:	5440005f 	bnezl	v0,80013d3c <mm_unmap+0x208>
80013bc0:	8e020008 	lw	v0,8(s0)
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:343
}

// remove_vma_struct - remove vma from mm's rb tree link & list link
static int remove_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(mm == vma->vm_mm);
80013bc4:	8e020000 	lw	v0,0(s0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80013bc8:	27b60010 	addiu	s6,sp,16
80013bcc:	afb60014 	sw	s6,20(sp)
80013bd0:	afb60010 	sw	s6,16(sp)
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:343
80013bd4:	12220014 	beq	s1,v0,80013c28 <mm_unmap+0xf4>
80013bd8:	8e140024 	lw	s4,36(s0)
80013bdc:	08004f72 	j	80013dc8 <mm_unmap+0x294>
80013be0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:351
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013be4:	8e240014 	lw	a0,20(s1)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80013be8:	8fa20014 	lw	v0,20(sp)
mm_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:484
	list_entry_t free_list, *le;
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
80013bec:	26030020 	addiu	v1,s0,32
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:351
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013bf0:	2484ffff 	addiu	a0,a0,-1
80013bf4:	ae240014 	sw	a0,20(s1)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80013bf8:	afa30014 	sw	v1,20(sp)
80013bfc:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80013c00:	ae020024 	sw	v0,36(s0)
mm_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:485
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
		if (le == &(mm->mmap_list)) {
80013c04:	1234001e 	beq	s1,s4,80013c80 <mm_unmap+0x14c>
80013c08:	ae160020 	sw	s6,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:481
		return 0;
	}

	list_entry_t free_list, *le;
	list_init(&free_list);
	while (vma->vm_start < end) {
80013c0c:	8e82ffe4 	lw	v0,-28(s4)
80013c10:	0052102b 	sltu	v0,v0,s2
80013c14:	1040001a 	beqz	v0,80013c80 <mm_unmap+0x14c>
80013c18:	2690ffe0 	addiu	s0,s4,-32
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:343
}

// remove_vma_struct - remove vma from mm's rb tree link & list link
static int remove_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(mm == vma->vm_mm);
80013c1c:	8e82ffe0 	lw	v0,-32(s4)
80013c20:	16220068 	bne	s1,v0,80013dc4 <mm_unmap+0x290>
80013c24:	8e940004 	lw	s4,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:344
	if (mm->mmap_tree != NULL) {
80013c28:	8e240008 	lw	a0,8(s1)
80013c2c:	50800004 	beqzl	a0,80013c40 <mm_unmap+0x10c>
80013c30:	8e030020 	lw	v1,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:345
		rb_delete(mm->mmap_tree, &(vma->rb_link));
80013c34:	0c005618 	jal	80015860 <rb_delete>
80013c38:	26050010 	addiu	a1,s0,16
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80013c3c:	8e030020 	lw	v1,32(s0)
80013c40:	8e020024 	lw	v0,36(s0)
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:348
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
80013c44:	8e24000c 	lw	a0,12(s1)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80013c48:	ac620004 	sw	v0,4(v1)
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:348
80013c4c:	1604ffe5 	bne	s0,a0,80013be4 <mm_unmap+0xb0>
80013c50:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:351
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013c54:	8e240014 	lw	a0,20(s1)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80013c58:	8fa20014 	lw	v0,20(sp)
mm_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:484
	list_entry_t free_list, *le;
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
80013c5c:	26030020 	addiu	v1,s0,32
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:351
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013c60:	2484ffff 	addiu	a0,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:349
	if (mm->mmap_tree != NULL) {
		rb_delete(mm->mmap_tree, &(vma->rb_link));
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
80013c64:	ae20000c 	sw	zero,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:351
	}
	mm->map_count--;
80013c68:	ae240014 	sw	a0,20(s1)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80013c6c:	afa30014 	sw	v1,20(sp)
80013c70:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80013c74:	ae020024 	sw	v0,36(s0)
mm_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:485
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
		if (le == &(mm->mmap_list)) {
80013c78:	1634ffe4 	bne	s1,s4,80013c0c <mm_unmap+0xd8>
80013c7c:	ae160020 	sw	s6,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:492
		}
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
80013c80:	16c30011 	bne	s6,v1,80013cc8 <mm_unmap+0x194>
80013c84:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:516
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
	}
	return 0;
}
80013c88:	08004f45 	j	80013d14 <mm_unmap+0x1e0>
80013c8c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:504
			insert_vma_struct(mm, vma);
		} else {
			un_start = vma->vm_start, un_end = vma->vm_end;
			if (end < un_end) {
				un_end = end;
				vma_resize(vma, un_end, vma->vm_end);
80013c90:	02e02021 	move	a0,s7
80013c94:	0c004bc2 	jal	80012f08 <vma_resize>
80013c98:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:505
				insert_vma_struct(mm, vma);
80013c9c:	02202021 	move	a0,s1
80013ca0:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013ca4:	02e02821 	move	a1,s7
80013ca8:	0240a021 	move	s4,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:513
				vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
				vma_destroy(vma);
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
80013cac:	8e240010 	lw	a0,16(s1)
80013cb0:	02002821 	move	a1,s0
80013cb4:	0c005e76 	jal	800179d8 <unmap_range>
80013cb8:	02803021 	move	a2,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:492
		}
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
80013cbc:	12d50014 	beq	s6,s5,80013d10 <mm_unmap+0x1dc>
80013cc0:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:494
		vma = le2vma(le, list_link);
		le = list_next(le);
80013cc4:	02a01821 	move	v1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:496
		uintptr_t un_start, un_end;
		if (vma->vm_start < start) {
80013cc8:	8c70ffe4 	lw	s0,-28(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:493
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
		vma = le2vma(le, list_link);
80013ccc:	2477ffe0 	addiu	s7,v1,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:496
		le = list_next(le);
		uintptr_t un_start, un_end;
		if (vma->vm_start < start) {
80013cd0:	0213102b 	sltu	v0,s0,s3
80013cd4:	1440002f 	bnez	v0,80013d94 <mm_unmap+0x260>
80013cd8:	8c750004 	lw	s5,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:501
			un_start = start, un_end = vma->vm_end;
			vma_resize(vma, vma->vm_start, un_start);
			insert_vma_struct(mm, vma);
		} else {
			un_start = vma->vm_start, un_end = vma->vm_end;
80013cdc:	8c74ffe8 	lw	s4,-24(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:502
			if (end < un_end) {
80013ce0:	0254102b 	sltu	v0,s2,s4
80013ce4:	1440ffea 	bnez	v0,80013c90 <mm_unmap+0x15c>
80013ce8:	02803021 	move	a2,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:510
				insert_vma_struct(mm, vma);
			} else {
#ifdef UCONFIG_BIONIC_LIBC
				vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
				vma_destroy(vma);
80013cec:	0c004bee 	jal	80012fb8 <vma_destroy>
80013cf0:	02e02021 	move	a0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:513
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
80013cf4:	8e240010 	lw	a0,16(s1)
80013cf8:	02002821 	move	a1,s0
80013cfc:	0c005e76 	jal	800179d8 <unmap_range>
80013d00:	02803021 	move	a2,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:492
		}
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
80013d04:	16d5fff0 	bne	s6,s5,80013cc8 <mm_unmap+0x194>
80013d08:	02a01821 	move	v1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:461

	assert(mm != NULL);

	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) == NULL || end <= vma->vm_start) {
		return 0;
80013d0c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:516
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
	}
	return 0;
}
80013d10:	8fbf003c 	lw	ra,60(sp)
80013d14:	8fb70038 	lw	s7,56(sp)
80013d18:	8fb60034 	lw	s6,52(sp)
80013d1c:	8fb50030 	lw	s5,48(sp)
80013d20:	8fb4002c 	lw	s4,44(sp)
80013d24:	8fb30028 	lw	s3,40(sp)
80013d28:	8fb20024 	lw	s2,36(sp)
80013d2c:	8fb10020 	lw	s1,32(sp)
80013d30:	8fb0001c 	lw	s0,28(sp)
80013d34:	03e00008 	jr	ra
80013d38:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:464
	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) == NULL || end <= vma->vm_start) {
		return 0;
	}

	if (vma->vm_start < start && end < vma->vm_end) {
80013d3c:	0242102b 	sltu	v0,s2,v0
80013d40:	5040ffa1 	beqzl	v0,80013bc8 <mm_unmap+0x94>
80013d44:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:466
		struct vma_struct *nvma;
		if ((nvma =
80013d48:	8e06000c 	lw	a2,12(s0)
80013d4c:	0c004c67 	jal	8001319c <vma_create>
80013d50:	02602821 	move	a1,s3
80013d54:	0040a021 	move	s4,v0
80013d58:	1280ffed 	beqz	s4,80013d10 <mm_unmap+0x1dc>
80013d5c:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:473
			return -E_NO_MEM;
		}
#ifdef UCONFIG_BIONIC_LIBC
		vma_copymapfile(nvma, vma);
#endif //UCONFIG_BIONIC_LIBC
		vma_resize(vma, end, vma->vm_end);
80013d60:	8e060008 	lw	a2,8(s0)
80013d64:	02002021 	move	a0,s0
80013d68:	0c004bc2 	jal	80012f08 <vma_resize>
80013d6c:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:474
		insert_vma_struct(mm, nvma);
80013d70:	02202021 	move	a0,s1
80013d74:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013d78:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:475
		unmap_range(mm->pgdir, start, end);
80013d7c:	8e240010 	lw	a0,16(s1)
80013d80:	02602821 	move	a1,s3
80013d84:	0c005e76 	jal	800179d8 <unmap_range>
80013d88:	02403021 	move	a2,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:476
		return 0;
80013d8c:	08004f44 	j	80013d10 <mm_unmap+0x1dc>
80013d90:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:498
		vma = le2vma(le, list_link);
		le = list_next(le);
		uintptr_t un_start, un_end;
		if (vma->vm_start < start) {
			un_start = start, un_end = vma->vm_end;
			vma_resize(vma, vma->vm_start, un_start);
80013d94:	02002821 	move	a1,s0
80013d98:	02603021 	move	a2,s3
80013d9c:	02e02021 	move	a0,s7
80013da0:	0c004bc2 	jal	80012f08 <vma_resize>
80013da4:	8c74ffe8 	lw	s4,-24(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:499
			insert_vma_struct(mm, vma);
80013da8:	02202021 	move	a0,s1
80013dac:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013db0:	02e02821 	move	a1,s7
80013db4:	08004f2b 	j	80013cac <mm_unmap+0x178>
80013db8:	02608021 	move	s0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:454
int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
		return -E_INVAL;
80013dbc:	08004f44 	j	80013d10 <mm_unmap+0x1dc>
80013dc0:	2402ffea 	li	v0,-22
remove_vma_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:343
}

// remove_vma_struct - remove vma from mm's rb tree link & list link
static int remove_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(mm == vma->vm_mm);
80013dc4:	3c048002 	lui	a0,0x8002
80013dc8:	3c068002 	lui	a2,0x8002
80013dcc:	3c078002 	lui	a3,0x8002
80013dd0:	24842ce8 	addiu	a0,a0,11496
80013dd4:	24050157 	li	a1,343
80013dd8:	24c609b0 	addiu	a2,a2,2480
80013ddc:	0c006afd 	jal	8001abf4 <__panic>
80013de0:	24e72eb4 	addiu	a3,a3,11956
mm_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:457
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
		return -E_INVAL;
	}

	assert(mm != NULL);
80013de4:	3c068002 	lui	a2,0x8002
80013de8:	3c078002 	lui	a3,0x8002
80013dec:	24842ce8 	addiu	a0,a0,11496
80013df0:	240501c9 	li	a1,457
80013df4:	24c609b0 	addiu	a2,a2,2480
80013df8:	0c006afd 	jal	8001abf4 <__panic>
80013dfc:	24e72c04 	addiu	a3,a3,11268

80013e00 <dup_mmap>:
dup_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:587
	return 0;
}
#endif //UCONFIG_BIONIC_LIBC

int dup_mmap(struct mm_struct *to, struct mm_struct *from)
{
80013e00:	27bdffc8 	addiu	sp,sp,-56
80013e04:	afb2002c 	sw	s2,44(sp)
80013e08:	afb10028 	sw	s1,40(sp)
80013e0c:	afbf0034 	sw	ra,52(sp)
80013e10:	afb30030 	sw	s3,48(sp)
80013e14:	afb00024 	sw	s0,36(sp)
80013e18:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:588
	assert(to != NULL && from != NULL);
80013e1c:	10800052 	beqz	a0,80013f68 <dup_mmap+0x168>
80013e20:	00a08821 	move	s1,a1
80013e24:	14a0000f 	bnez	a1,80013e64 <dup_mmap+0x64>
80013e28:	00a08021 	move	s0,a1
80013e2c:	08004fdb 	j	80013f6c <dup_mmap+0x16c>
80013e30:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:606
			}
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
80013e34:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013e38:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:607
		bool share = (vma->vm_flags & VM_SHARE);
80013e3c:	8e02ffec 	lw	v0,-20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013e40:	8e06ffe4 	lw	a2,-28(s0)
80013e44:	8e07ffe8 	lw	a3,-24(s0)
80013e48:	8e440010 	lw	a0,16(s2)
80013e4c:	8e250010 	lw	a1,16(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:607
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
80013e50:	30420010 	andi	v0,v0,0x10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013e54:	0c005f4e 	jal	80017d38 <copy_range>
80013e58:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:608
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
		if (copy_range
80013e5c:	14400029 	bnez	v0,80013f04 <dup_mmap+0x104>
80013e60:	8fbf0034 	lw	ra,52(sp)
list_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
80013e64:	8e100000 	lw	s0,0(s0)
dup_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:590

int dup_mmap(struct mm_struct *to, struct mm_struct *from)
{
	assert(to != NULL && from != NULL);
	list_entry_t *list = &(from->mmap_list), *le = list;
	while ((le = list_prev(le)) != list) {
80013e68:	12300038 	beq	s1,s0,80013f4c <dup_mmap+0x14c>
80013e6c:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:593
		struct vma_struct *vma, *nvma;
		vma = le2vma(le, list_link);
		nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);
80013e70:	8e04ffe4 	lw	a0,-28(s0)
80013e74:	8e05ffe8 	lw	a1,-24(s0)
80013e78:	0c004c67 	jal	8001319c <vma_create>
80013e7c:	8e06ffec 	lw	a2,-20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:594
		if (nvma == NULL) {
80013e80:	10400020 	beqz	v0,80013f04 <dup_mmap+0x104>
80013e84:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:597
			return -E_NO_MEM;
		} else {
			if (vma->vm_flags & VM_SHARE) {
80013e88:	8e03ffec 	lw	v1,-20(s0)
80013e8c:	30630010 	andi	v1,v1,0x10
80013e90:	1060ffe8 	beqz	v1,80013e34 <dup_mmap+0x34>
80013e94:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:598
				nvma->shmem = vma->shmem;
80013e98:	8e040008 	lw	a0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:599
				nvma->shmem_off = vma->shmem_off;
80013e9c:	8e03000c 	lw	v1,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:598
		nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);
		if (nvma == NULL) {
			return -E_NO_MEM;
		} else {
			if (vma->vm_flags & VM_SHARE) {
				nvma->shmem = vma->shmem;
80013ea0:	ac440028 	sw	a0,40(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:599
				nvma->shmem_off = vma->shmem_off;
80013ea4:	ac43002c 	sw	v1,44(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:600
				shmem_ref_inc(vma->shmem);
80013ea8:	8e130008 	lw	s3,8(s0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80013eac:	40036000 	mfc0	v1,c0_status
80013eb0:	30630001 	andi	v1,v1,0x1
80013eb4:	1460001a 	bnez	v1,80013f20 <dup_mmap+0x120>
80013eb8:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013ebc:	8e630010 	lw	v1,16(s3)
80013ec0:	24630001 	addiu	v1,v1,1
80013ec4:	ae630010 	sw	v1,16(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013ec8:	8e630010 	lw	v1,16(s3)
dup_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:606
			}
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
80013ecc:	00402821 	move	a1,v0
80013ed0:	0c004cd0 	jal	80013340 <insert_vma_struct>
80013ed4:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:607
		bool share = (vma->vm_flags & VM_SHARE);
80013ed8:	8e02ffec 	lw	v0,-20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013edc:	8e06ffe4 	lw	a2,-28(s0)
80013ee0:	8e07ffe8 	lw	a3,-24(s0)
80013ee4:	8e440010 	lw	a0,16(s2)
80013ee8:	8e250010 	lw	a1,16(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:607
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
80013eec:	30420010 	andi	v0,v0,0x10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013ef0:	0c005f4e 	jal	80017d38 <copy_range>
80013ef4:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:608
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
		if (copy_range
80013ef8:	5040ffdb 	beqzl	v0,80013e68 <dup_mmap+0x68>
80013efc:	8e100000 	lw	s0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:615
		     share) != 0) {
			return -E_NO_MEM;
		}
	}
	return 0;
}
80013f00:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:611
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
		     share) != 0) {
			return -E_NO_MEM;
80013f04:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:615
		}
	}
	return 0;
}
80013f08:	8fb30030 	lw	s3,48(sp)
80013f0c:	8fb2002c 	lw	s2,44(sp)
80013f10:	8fb10028 	lw	s1,40(sp)
80013f14:	8fb00024 	lw	s0,36(sp)
80013f18:	03e00008 	jr	ra
80013f1c:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013f20:	0c006cbe 	jal	8001b2f8 <intr_disable>
80013f24:	afa20018 	sw	v0,24(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013f28:	8e630010 	lw	v1,16(s3)
80013f2c:	24630001 	addiu	v1,v1,1
80013f30:	ae630010 	sw	v1,16(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013f34:	0c006cba 	jal	8001b2e8 <intr_enable>
80013f38:	00000000 	nop
80013f3c:	8fa20018 	lw	v0,24(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013f40:	8e630010 	lw	v1,16(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:606
			}
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
80013f44:	08004fb4 	j	80013ed0 <dup_mmap+0xd0>
80013f48:	00402821 	move	a1,v0
dup_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:614
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
		     share) != 0) {
			return -E_NO_MEM;
		}
	}
	return 0;
80013f4c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:615
}
80013f50:	8fb30030 	lw	s3,48(sp)
80013f54:	8fb2002c 	lw	s2,44(sp)
80013f58:	8fb10028 	lw	s1,40(sp)
80013f5c:	8fb00024 	lw	s0,36(sp)
80013f60:	03e00008 	jr	ra
80013f64:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:588
}
#endif //UCONFIG_BIONIC_LIBC

int dup_mmap(struct mm_struct *to, struct mm_struct *from)
{
	assert(to != NULL && from != NULL);
80013f68:	3c048002 	lui	a0,0x8002
80013f6c:	3c068002 	lui	a2,0x8002
80013f70:	3c078002 	lui	a3,0x8002
80013f74:	24842ce8 	addiu	a0,a0,11496
80013f78:	2405024c 	li	a1,588
80013f7c:	24c609b0 	addiu	a2,a2,2480
80013f80:	0c006afd 	jal	8001abf4 <__panic>
80013f84:	24e72420 	addiu	a3,a3,9248

80013f88 <exit_mmap>:
exit_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:618
	}
	return 0;
}

void exit_mmap(struct mm_struct *mm)
{
80013f88:	27bdffe0 	addiu	sp,sp,-32
80013f8c:	afb10014 	sw	s1,20(sp)
80013f90:	afbf001c 	sw	ra,28(sp)
80013f94:	afb20018 	sw	s2,24(sp)
80013f98:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:619
	assert(mm != NULL && mm_count(mm) == 0);
80013f9c:	1080001e 	beqz	a0,80014018 <exit_mmap+0x90>
80013fa0:	00808821 	move	s1,a0
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80013fa4:	8c82001c 	lw	v0,28(a0)
exit_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:619
80013fa8:	5440001c 	bnezl	v0,8001401c <exit_mmap+0x94>
80013fac:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80013fb0:	8c900004 	lw	s0,4(a0)
exit_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:622
	pgd_t *pgdir = mm->pgdir;
	list_entry_t *list = &(mm->mmap_list), *le = list;
	while ((le = list_next(le)) != list) {
80013fb4:	1090000f 	beq	a0,s0,80013ff4 <exit_mmap+0x6c>
80013fb8:	8c920010 	lw	s2,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:624
		struct vma_struct *vma = le2vma(le, list_link);
		unmap_range(pgdir, vma->vm_start, vma->vm_end);
80013fbc:	8e05ffe4 	lw	a1,-28(s0)
80013fc0:	8e06ffe8 	lw	a2,-24(s0)
80013fc4:	0c005e76 	jal	800179d8 <unmap_range>
80013fc8:	02402021 	move	a0,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80013fcc:	8e100004 	lw	s0,4(s0)
exit_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:622
void exit_mmap(struct mm_struct *mm)
{
	assert(mm != NULL && mm_count(mm) == 0);
	pgd_t *pgdir = mm->pgdir;
	list_entry_t *list = &(mm->mmap_list), *le = list;
	while ((le = list_next(le)) != list) {
80013fd0:	5630fffb 	bnel	s1,s0,80013fc0 <exit_mmap+0x38>
80013fd4:	8e05ffe4 	lw	a1,-28(s0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80013fd8:	8e100004 	lw	s0,4(s0)
exit_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:630

#ifdef UCONFIG_BIONIC_LIBC
		vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
	}
	while ((le = list_next(le)) != list) {
80013fdc:	12300009 	beq	s1,s0,80014004 <exit_mmap+0x7c>
80013fe0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:632
		struct vma_struct *vma = le2vma(le, list_link);
		exit_range(pgdir, vma->vm_start, vma->vm_end);
80013fe4:	8e05ffe4 	lw	a1,-28(s0)
80013fe8:	8e06ffe8 	lw	a2,-24(s0)
80013fec:	0c005ef7 	jal	80017bdc <exit_range>
80013ff0:	02402021 	move	a0,s2
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80013ff4:	8e100004 	lw	s0,4(s0)
exit_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:630

#ifdef UCONFIG_BIONIC_LIBC
		vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
	}
	while ((le = list_next(le)) != list) {
80013ff8:	5630fffb 	bnel	s1,s0,80013fe8 <exit_mmap+0x60>
80013ffc:	8e05ffe4 	lw	a1,-28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:634
		struct vma_struct *vma = le2vma(le, list_link);
		exit_range(pgdir, vma->vm_start, vma->vm_end);
	}
}
80014000:	8fbf001c 	lw	ra,28(sp)
80014004:	8fb20018 	lw	s2,24(sp)
80014008:	8fb10014 	lw	s1,20(sp)
8001400c:	8fb00010 	lw	s0,16(sp)
80014010:	03e00008 	jr	ra
80014014:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:619
	return 0;
}

void exit_mmap(struct mm_struct *mm)
{
	assert(mm != NULL && mm_count(mm) == 0);
80014018:	3c048002 	lui	a0,0x8002
8001401c:	3c068002 	lui	a2,0x8002
80014020:	3c078002 	lui	a3,0x8002
80014024:	24842ce8 	addiu	a0,a0,11496
80014028:	2405026b 	li	a1,619
8001402c:	24c609b0 	addiu	a2,a2,2480
80014030:	0c006afd 	jal	8001abf4 <__panic>
80014034:	24e72ec8 	addiu	a3,a3,11976

80014038 <get_unmapped_area>:
get_unmapped_area():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:658
}
#endif //UCONFIG_BIONIC_LIBC

uintptr_t get_unmapped_area(struct mm_struct * mm, size_t len)
{
	if (len == 0 || len > USERTOP) {
80014038:	24a3ffff 	addiu	v1,a1,-1
8001403c:	04600015 	bltz	v1,80014094 <get_unmapped_area+0x5c>
80014040:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:661
		return 0;
	}
	uintptr_t start = USERTOP - len;
80014044:	3c028000 	lui	v0,0x8000
80014048:	00451023 	subu	v0,v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:662
	list_entry_t *list = &(mm->mmap_list), *le = list;
8001404c:	00801821 	move	v1,a0
list_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
80014050:	8c630000 	lw	v1,0(v1)
get_unmapped_area():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:663
	while ((le = list_prev(le)) != list) {
80014054:	1083000f 	beq	a0,v1,80014094 <get_unmapped_area+0x5c>
80014058:	00453821 	addu	a3,v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:665
		struct vma_struct *vma = le2vma(le, list_link);
		if (start >= vma->vm_end) {
8001405c:	8c66ffe8 	lw	a2,-24(v1)
80014060:	0046302b 	sltu	a2,v0,a2
80014064:	10c0000d 	beqz	a2,8001409c <get_unmapped_area+0x64>
80014068:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:668
			return start;
		}
		if (start + len > vma->vm_start) {
8001406c:	8c66ffe4 	lw	a2,-28(v1)
80014070:	00c7382b 	sltu	a3,a2,a3
80014074:	10e0fff6 	beqz	a3,80014050 <get_unmapped_area+0x18>
80014078:	00a6402b 	sltu	t0,a1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:669
			if (len >= vma->vm_start) {
8001407c:	11000005 	beqz	t0,80014094 <get_unmapped_area+0x5c>
80014080:	00001021 	move	v0,zero
list_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:144
80014084:	8c630000 	lw	v1,0(v1)
get_unmapped_area():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:672
				return 0;
			}
			start = vma->vm_start - len;
80014088:	00c51023 	subu	v0,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:663
	if (len == 0 || len > USERTOP) {
		return 0;
	}
	uintptr_t start = USERTOP - len;
	list_entry_t *list = &(mm->mmap_list), *le = list;
	while ((le = list_prev(le)) != list) {
8001408c:	1483fff3 	bne	a0,v1,8001405c <get_unmapped_area+0x24>
80014090:	00453821 	addu	a3,v0,a1
80014094:	03e00008 	jr	ra
80014098:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:676
			}
			start = vma->vm_start - len;
		}
	}
	return (start >= USERBASE) ? start : 0;
}
8001409c:	03e00008 	jr	ra
800140a0:	00000000 	nop

800140a4 <mm_brk>:
mm_brk():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:679

int mm_brk(struct mm_struct *mm, uintptr_t addr, size_t len)
{
800140a4:	27bdffd8 	addiu	sp,sp,-40
800140a8:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:681
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
800140ac:	24b10fff 	addiu	s1,a1,4095
800140b0:	02268821 	addu	s1,s1,a2
800140b4:	32220fff 	andi	v0,s1,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:679
	}
	return (start >= USERBASE) ? start : 0;
}

int mm_brk(struct mm_struct *mm, uintptr_t addr, size_t len)
{
800140b8:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:680
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
800140bc:	2410f000 	li	s0,-4096
800140c0:	00b08024 	and	s0,a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:681
	    ROUNDUP(addr + len, PGSIZE);
800140c4:	02228823 	subu	s1,s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:682
	if (!USER_ACCESS(start, end)) {
800140c8:	0211102b 	sltu	v0,s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:679
	}
	return (start >= USERBASE) ? start : 0;
}

int mm_brk(struct mm_struct *mm, uintptr_t addr, size_t len)
{
800140cc:	afb30020 	sw	s3,32(sp)
800140d0:	afb2001c 	sw	s2,28(sp)
800140d4:	afbf0024 	sw	ra,36(sp)
800140d8:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:682
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
800140dc:	1040000a 	beqz	v0,80014108 <mm_brk+0x64>
800140e0:	2412ffea 	li	s2,-22
800140e4:	3c028000 	lui	v0,0x8000
800140e8:	24420001 	addiu	v0,v0,1
800140ec:	0222102b 	sltu	v0,s1,v0
800140f0:	10400005 	beqz	v0,80014108 <mm_brk+0x64>
800140f4:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:687
		return -E_INVAL;
	}

	int ret;
	if ((ret = mm_unmap(mm, start, end - start)) != 0) {
800140f8:	0c004ecd 	jal	80013b34 <mm_unmap>
800140fc:	02303023 	subu	a2,s1,s0
80014100:	10400009 	beqz	v0,80014128 <mm_brk+0x84>
80014104:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:701
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
		return -E_NO_MEM;
	}
	insert_vma_struct(mm, vma);
	return 0;
}
80014108:	8fbf0024 	lw	ra,36(sp)
8001410c:	02401021 	move	v0,s2
80014110:	8fb30020 	lw	s3,32(sp)
80014114:	8fb2001c 	lw	s2,28(sp)
80014118:	8fb10018 	lw	s1,24(sp)
8001411c:	8fb00014 	lw	s0,20(sp)
80014120:	03e00008 	jr	ra
80014124:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:691
	int ret;
	if ((ret = mm_unmap(mm, start, end - start)) != 0) {
		return ret;
	}
	uint32_t vm_flags = VM_READ | VM_WRITE;
	struct vma_struct *vma = find_vma(mm, start - 1);
80014128:	02602021 	move	a0,s3
8001412c:	0c004c7b 	jal	800131ec <find_vma>
80014130:	2605ffff 	addiu	a1,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:692
	if (vma != NULL && vma->vm_end == start && vma->vm_flags == vm_flags) {
80014134:	10400005 	beqz	v0,8001414c <mm_brk+0xa8>
80014138:	02002021 	move	a0,s0
8001413c:	8c430008 	lw	v1,8(v0)
80014140:	52030011 	beql	s0,v1,80014188 <mm_brk+0xe4>
80014144:	8c44000c 	lw	a0,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:696
		vma->vm_end = end;
		return 0;
	}
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
80014148:	02002021 	move	a0,s0
8001414c:	02202821 	move	a1,s1
80014150:	0c004c67 	jal	8001319c <vma_create>
80014154:	24060003 	li	a2,3
80014158:	10400010 	beqz	v0,8001419c <mm_brk+0xf8>
8001415c:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:699
		return -E_NO_MEM;
	}
	insert_vma_struct(mm, vma);
80014160:	0c004cd0 	jal	80013340 <insert_vma_struct>
80014164:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:701
	return 0;
}
80014168:	8fbf0024 	lw	ra,36(sp)
8001416c:	02401021 	move	v0,s2
80014170:	8fb30020 	lw	s3,32(sp)
80014174:	8fb2001c 	lw	s2,28(sp)
80014178:	8fb10018 	lw	s1,24(sp)
8001417c:	8fb00014 	lw	s0,20(sp)
80014180:	03e00008 	jr	ra
80014184:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:692
	if ((ret = mm_unmap(mm, start, end - start)) != 0) {
		return ret;
	}
	uint32_t vm_flags = VM_READ | VM_WRITE;
	struct vma_struct *vma = find_vma(mm, start - 1);
	if (vma != NULL && vma->vm_end == start && vma->vm_flags == vm_flags) {
80014188:	24030003 	li	v1,3
8001418c:	1483ffef 	bne	a0,v1,8001414c <mm_brk+0xa8>
80014190:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:694
		vma->vm_end = end;
		return 0;
80014194:	08005042 	j	80014108 <mm_brk+0x64>
80014198:	ac510008 	sw	s1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:697
	}
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
		return -E_NO_MEM;
8001419c:	08005042 	j	80014108 <mm_brk+0x64>
800141a0:	2412fff4 	li	s2,-12

800141a4 <user_mem_check>:
user_mem_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:705
	return 0;
}

bool
user_mem_check(struct mm_struct * mm, uintptr_t addr, size_t len, bool write)
{
800141a4:	27bdffd8 	addiu	sp,sp,-40
800141a8:	afb3001c 	sw	s3,28(sp)
800141ac:	afb00010 	sw	s0,16(sp)
800141b0:	afbf0024 	sw	ra,36(sp)
800141b4:	afb40020 	sw	s4,32(sp)
800141b8:	afb20018 	sw	s2,24(sp)
800141bc:	afb10014 	sw	s1,20(sp)
800141c0:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:706
	if (mm != NULL) {
800141c4:	1080002e 	beqz	a0,80014280 <user_mem_check+0xdc>
800141c8:	00e09821 	move	s3,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:707
		if (!USER_ACCESS(addr, addr + len)) {
800141cc:	00c59021 	addu	s2,a2,a1
800141d0:	00b2182b 	sltu	v1,a1,s2
800141d4:	10600022 	beqz	v1,80014260 <user_mem_check+0xbc>
800141d8:	00001021 	move	v0,zero
800141dc:	3c038000 	lui	v1,0x8000
800141e0:	24630001 	addiu	v1,v1,1
800141e4:	0243182b 	sltu	v1,s2,v1
800141e8:	1060001d 	beqz	v1,80014260 <user_mem_check+0xbc>
800141ec:	24140002 	li	s4,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:717
		while (start < end) {
			if ((vma = find_vma(mm, start)) == NULL
			    || start < vma->vm_start) {
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
800141f0:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:707

bool
user_mem_check(struct mm_struct * mm, uintptr_t addr, size_t len, bool write)
{
	if (mm != NULL) {
		if (!USER_ACCESS(addr, addr + len)) {
800141f4:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:717
		while (start < end) {
			if ((vma = find_vma(mm, start)) == NULL
			    || start < vma->vm_start) {
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
800141f8:	08005092 	j	80014248 <user_mem_check+0xa4>
800141fc:	0047a00a 	movz	s4,v0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:714
		}
		struct vma_struct *vma;
		uintptr_t start = addr, end = addr + len;
		while (start < end) {
			if ((vma = find_vma(mm, start)) == NULL
			    || start < vma->vm_start) {
80014200:	0224182b 	sltu	v1,s1,a0
80014204:	54600016 	bnezl	v1,80014260 <user_mem_check+0xbc>
80014208:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:717
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
8001420c:	8c43000c 	lw	v1,12(v0)
80014210:	02832824 	and	a1,s4,v1
80014214:	10a00011 	beqz	a1,8001425c <user_mem_check+0xb8>
80014218:	30630008 	andi	v1,v1,0x8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:720
				return 0;
			}
			if (write && (vma->vm_flags & VM_STACK)) {
8001421c:	52600007 	beqzl	s3,8001423c <user_mem_check+0x98>
80014220:	8c510008 	lw	s1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:721
				if (start < vma->vm_start + PGSIZE) {
80014224:	24841000 	addiu	a0,a0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:720
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
				return 0;
			}
			if (write && (vma->vm_flags & VM_STACK)) {
80014228:	10600003 	beqz	v1,80014238 <user_mem_check+0x94>
8001422c:	0224202b 	sltu	a0,s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:721
				if (start < vma->vm_start + PGSIZE) {
80014230:	5480000b 	bnezl	a0,80014260 <user_mem_check+0xbc>
80014234:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:725
					return 0;
				}
			}
			start = vma->vm_end;
80014238:	8c510008 	lw	s1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:712
		if (!USER_ACCESS(addr, addr + len)) {
			return 0;
		}
		struct vma_struct *vma;
		uintptr_t start = addr, end = addr + len;
		while (start < end) {
8001423c:	0232102b 	sltu	v0,s1,s2
80014240:	10400007 	beqz	v0,80014260 <user_mem_check+0xbc>
80014244:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:713
			if ((vma = find_vma(mm, start)) == NULL
80014248:	02202821 	move	a1,s1
8001424c:	0c004c7b 	jal	800131ec <find_vma>
80014250:	02002021 	move	a0,s0
80014254:	5440ffea 	bnezl	v0,80014200 <user_mem_check+0x5c>
80014258:	8c440004 	lw	a0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:722
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
				return 0;
			}
			if (write && (vma->vm_flags & VM_STACK)) {
				if (start < vma->vm_start + PGSIZE) {
					return 0;
8001425c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:730
			start = vma->vm_end;
		}
		return 1;
	}
	return KERN_ACCESS(addr, addr + len);
}
80014260:	8fbf0024 	lw	ra,36(sp)
80014264:	8fb40020 	lw	s4,32(sp)
80014268:	8fb3001c 	lw	s3,28(sp)
8001426c:	8fb20018 	lw	s2,24(sp)
80014270:	8fb10014 	lw	s1,20(sp)
80014274:	8fb00010 	lw	s0,16(sp)
80014278:	03e00008 	jr	ra
8001427c:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:729
			}
			start = vma->vm_end;
		}
		return 1;
	}
	return KERN_ACCESS(addr, addr + len);
80014280:	3c038000 	lui	v1,0x8000
80014284:	24631000 	addiu	v1,v1,4096
80014288:	00a3182b 	sltu	v1,a1,v1
8001428c:	1460fff4 	bnez	v1,80014260 <user_mem_check+0xbc>
80014290:	00001021 	move	v0,zero
80014294:	00c53021 	addu	a2,a2,a1
80014298:	00a6282b 	sltu	a1,a1,a2
8001429c:	10a0fff1 	beqz	a1,80014264 <user_mem_check+0xc0>
800142a0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:704
	insert_vma_struct(mm, vma);
	return 0;
}

bool
user_mem_check(struct mm_struct * mm, uintptr_t addr, size_t len, bool write)
800142a4:	3c028200 	lui	v0,0x8200
800142a8:	24421001 	addiu	v0,v0,4097
800142ac:	08005099 	j	80014264 <user_mem_check+0xc0>
800142b0:	00c2102b 	sltu	v0,a2,v0

800142b4 <do_madvise>:
do_madvise():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:872
#endif //UCONFIG_BIONIC_LIBC

int do_madvise(void *addr, size_t len, int advice)
{
	return 0;
}
800142b4:	03e00008 	jr	ra
800142b8:	00001021 	move	v0,zero

800142bc <do_pgfault>:
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:875

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
800142bc:	27bdffb8 	addiu	sp,sp,-72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:876
	struct proc_struct *current = pls_read(current);
800142c0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:875
{
	return 0;
}

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
800142c4:	afb50038 	sw	s5,56(sp)
800142c8:	afb2002c 	sw	s2,44(sp)
800142cc:	afb10028 	sw	s1,40(sp)
800142d0:	afb00024 	sw	s0,36(sp)
800142d4:	afbf0044 	sw	ra,68(sp)
800142d8:	afb70040 	sw	s7,64(sp)
800142dc:	afb6003c 	sw	s6,60(sp)
800142e0:	afb40034 	sw	s4,52(sp)
800142e4:	afb30030 	sw	s3,48(sp)
800142e8:	00808021 	move	s0,a0
800142ec:	00a0a821 	move	s5,a1
800142f0:	00c08821 	move	s1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:877
	struct proc_struct *current = pls_read(current);
	if (mm == NULL) {
800142f4:	10800047 	beqz	a0,80014414 <do_pgfault+0x158>
800142f8:	8c5277a4 	lw	s2,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:889
		     current->pid, current->name, error_code, addr);
		return -E_KILLED;
	}

	bool need_unlock = 1;
	if (!try_lock_mm(mm)) {
800142fc:	0c004c35 	jal	800130d4 <try_lock_mm>
80014300:	24130001 	li	s3,1
80014304:	1440000b 	bnez	v0,80014334 <do_pgfault+0x78>
80014308:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:890
		if (current != NULL && mm->locked_by == current->pid) {
8001430c:	12400005 	beqz	s2,80014324 <do_pgfault+0x68>
80014310:	00000000 	nop
80014314:	8e030020 	lw	v1,32(s0)
80014318:	8e420004 	lw	v0,4(s2)
8001431c:	10620005 	beq	v1,v0,80014334 <do_pgfault+0x78>
80014320:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:893
			need_unlock = 0;
		} else {
			lock_mm(mm);
80014324:	0c004c18 	jal	80013060 <lock_mm>
80014328:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:888
		    ("page fault in kernel thread: pid = %d, name = %s, %d %08x.\n\r",
		     current->pid, current->name, error_code, addr);
		return -E_KILLED;
	}

	bool need_unlock = 1;
8001432c:	24130001 	li	s3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:898
			lock_mm(mm);
		}
	}

	int ret = -E_INVAL;
	struct vma_struct *vma = find_vma(mm, addr);
80014330:	02002021 	move	a0,s0
80014334:	0c004c7b 	jal	800131ec <find_vma>
80014338:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:899
	if (vma == NULL || vma->vm_start > addr) {
8001433c:	1040004b 	beqz	v0,8001446c <do_pgfault+0x1b0>
80014340:	0040a021 	move	s4,v0
80014344:	8c420004 	lw	v0,4(v0)
80014348:	0222182b 	sltu	v1,s1,v0
8001434c:	1060000f 	beqz	v1,8001438c <do_pgfault+0xd0>
80014350:	2412ffea 	li	s2,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
80014354:	16600021 	bnez	s3,800143dc <do_pgfault+0x120>
80014358:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
		unlock_mm(mm);
	}
	return ret;
}
8001435c:	8fbf0044 	lw	ra,68(sp)
80014360:	02401021 	move	v0,s2
80014364:	8fb70040 	lw	s7,64(sp)
80014368:	8fb6003c 	lw	s6,60(sp)
8001436c:	8fb50038 	lw	s5,56(sp)
80014370:	8fb40034 	lw	s4,52(sp)
80014374:	8fb30030 	lw	s3,48(sp)
80014378:	8fb2002c 	lw	s2,44(sp)
8001437c:	8fb10028 	lw	s1,40(sp)
80014380:	8fb00024 	lw	s0,36(sp)
80014384:	03e00008 	jr	ra
80014388:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:902
	int ret = -E_INVAL;
	struct vma_struct *vma = find_vma(mm, addr);
	if (vma == NULL || vma->vm_start > addr) {
		goto failed;
	}
	if (vma->vm_flags & VM_STACK) {
8001438c:	8e83000c 	lw	v1,12(s4)
80014390:	30640008 	andi	a0,v1,0x8
80014394:	50800005 	beqzl	a0,800143ac <do_pgfault+0xf0>
80014398:	30624000 	andi	v0,v1,0x4000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:903
		if (addr < vma->vm_start + PGSIZE) {
8001439c:	24421000 	addiu	v0,v0,4096
800143a0:	0222102b 	sltu	v0,s1,v0
800143a4:	1440ffeb 	bnez	v0,80014354 <do_pgfault+0x98>
800143a8:	30624000 	andi	v0,v1,0x4000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:909
			goto failed;
		}
	}
	//kprintf("@ %x %08x\n", vma->vm_flags, vma->vm_start);
	//assert((vma->vm_flags & VM_IO)==0);
	if (vma->vm_flags & VM_IO) {
800143ac:	1440ffe9 	bnez	v0,80014354 <do_pgfault+0x98>
800143b0:	2412ffea 	li	s2,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:913
		ret = -E_INVAL;
		goto failed;
	}
	switch (error_code & 3) {
800143b4:	32a20003 	andi	v0,s5,0x3
800143b8:	14400030 	bnez	v0,8001447c <do_pgfault+0x1c0>
800143bc:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:924
		}
		break;
	case 1:		/* read, present */
		goto failed;
	case 0:		/* read, not present */
		if (!(vma->vm_flags & (VM_READ | VM_EXEC))) {
800143c0:	30620005 	andi	v0,v1,0x5
800143c4:	1040ffe3 	beqz	v0,80014354 <do_pgfault+0x98>
800143c8:	30630002 	andi	v1,v1,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:65
	*ptep |= PTE_U;
}

static inline void ptep_set_u_write(pte_t * ptep)
{
	*ptep |= PTE_W | PTE_U;
800143cc:	24160006 	li	s6,6
800143d0:	24020004 	li	v0,4
800143d4:	08005123 	j	8001448c <do_pgfault+0x1d0>
800143d8:	0043b00a 	movz	s6,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1140
	}
	ret = 0;

failed:
	if (need_unlock) {
		unlock_mm(mm);
800143dc:	0c004c29 	jal	800130a4 <unlock_mm>
800143e0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
	}
	return ret;
}
800143e4:	8fbf0044 	lw	ra,68(sp)
800143e8:	02401021 	move	v0,s2
800143ec:	8fb70040 	lw	s7,64(sp)
800143f0:	8fb6003c 	lw	s6,60(sp)
800143f4:	8fb50038 	lw	s5,56(sp)
800143f8:	8fb40034 	lw	s4,52(sp)
800143fc:	8fb30030 	lw	s3,48(sp)
80014400:	8fb2002c 	lw	s2,44(sp)
80014404:	8fb10028 	lw	s1,40(sp)
80014408:	8fb00024 	lw	s0,36(sp)
8001440c:	03e00008 	jr	ra
80014410:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:878

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
	struct proc_struct *current = pls_read(current);
	if (mm == NULL) {
		assert(current != NULL);
80014414:	124000c1 	beqz	s2,8001471c <do_pgfault+0x460>
80014418:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:883
		/* Chen Yuheng 
		 * give handler a chance to deal with it 
		 */
		kprintf
		    ("page fault in kernel thread: pid = %d, name = %s, %d %08x.\n\r",
8001441c:	8e450004 	lw	a1,4(s2)
80014420:	3c048002 	lui	a0,0x8002
80014424:	26460060 	addiu	a2,s2,96
80014428:	02a03821 	move	a3,s5
8001442c:	24842ef8 	addiu	a0,a0,12024
80014430:	0c00798a 	jal	8001e628 <kprintf>
80014434:	afb10010 	sw	s1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
80014438:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:885
		 * give handler a chance to deal with it 
		 */
		kprintf
		    ("page fault in kernel thread: pid = %d, name = %s, %d %08x.\n\r",
		     current->pid, current->name, error_code, addr);
		return -E_KILLED;
8001443c:	2412ffdb 	li	s2,-37
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
80014440:	02401021 	move	v0,s2
80014444:	8fb70040 	lw	s7,64(sp)
80014448:	8fb6003c 	lw	s6,60(sp)
8001444c:	8fb50038 	lw	s5,56(sp)
80014450:	8fb40034 	lw	s4,52(sp)
80014454:	8fb30030 	lw	s3,48(sp)
80014458:	8fb2002c 	lw	s2,44(sp)
8001445c:	8fb10028 	lw	s1,40(sp)
80014460:	8fb00024 	lw	s0,36(sp)
80014464:	03e00008 	jr	ra
80014468:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
8001446c:	1260ffbb 	beqz	s3,8001435c <do_pgfault+0xa0>
80014470:	2412ffea 	li	s2,-22
80014474:	080050f7 	j	800143dc <do_pgfault+0x120>
80014478:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:913
	//assert((vma->vm_flags & VM_IO)==0);
	if (vma->vm_flags & VM_IO) {
		ret = -E_INVAL;
		goto failed;
	}
	switch (error_code & 3) {
8001447c:	1044ffb5 	beq	v0,a0,80014354 <do_pgfault+0x98>
80014480:	30630002 	andi	v1,v1,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:917
	default:
		/* default is 3: write, present */
	case 2:		/* write, not present */
		if (!(vma->vm_flags & VM_WRITE)) {
80014484:	1060ffb3 	beqz	v1,80014354 <do_pgfault+0x98>
80014488:	24160006 	li	s6,6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:943
	ptep_set_u_read(&perm);
	if (vma->vm_flags & VM_WRITE) {
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);
8001448c:	2402f000 	li	v0,-4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:948

	ret = -E_NO_MEM;

	pte_t *ptep;
	if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
80014490:	8e040010 	lw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:943
	ptep_set_u_read(&perm);
	if (vma->vm_flags & VM_WRITE) {
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);
80014494:	02228824 	and	s1,s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:948

	ret = -E_NO_MEM;

	pte_t *ptep;
	if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
80014498:	02202821 	move	a1,s1
8001449c:	0c005cbe 	jal	800172f8 <get_pte>
800144a0:	24060001 	li	a2,1
800144a4:	10400052 	beqz	v0,800145f0 <do_pgfault+0x334>
800144a8:	0040b821 	move	s7,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
800144ac:	8c450000 	lw	a1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:951

	pte_t *ptep;
	if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
		goto failed;
	}
	if (ptep_invalid(ptep)) {
800144b0:	14a0000d 	bnez	a1,800144e8 <do_pgfault+0x22c>
800144b4:	8e82000c 	lw	v0,12(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1016
			}
#endif //SHARE_MAPPED_FILE

		} else
#endif //UCONFIG_BIONIC_LIBC
		if (!(vma->vm_flags & VM_SHARE)) {
800144b8:	30420010 	andi	v0,v0,0x10
800144bc:	5440005a 	bnezl	v0,80014628 <do_pgfault+0x36c>
800144c0:	8e840028 	lw	a0,40(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1017
			if (pgdir_alloc_page(mm->pgdir, addr, perm) == NULL) {
800144c4:	8e040010 	lw	a0,16(s0)
800144c8:	02202821 	move	a1,s1
800144cc:	0c005e3f 	jal	800178fc <pgdir_alloc_page>
800144d0:	02c03021 	move	a2,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:945
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);

	ret = -E_NO_MEM;
800144d4:	2412fff4 	li	s2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800144d8:	1260ffa0 	beqz	s3,8001435c <do_pgfault+0xa0>
800144dc:	0002900b 	movn	s2,zero,v0
800144e0:	080050f7 	j	800143dc <do_pgfault+0x120>
800144e4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1051
			}
		}
	} else {		//a present page, handle copy-on-write (cow) 
		struct Page *page, *newpage = NULL;
		bool cow =
		    ((vma->vm_flags & (VM_SHARE | VM_WRITE)) == VM_WRITE),
800144e8:	30520012 	andi	s2,v0,0x12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1050
#endif
			}
		}
	} else {		//a present page, handle copy-on-write (cow) 
		struct Page *page, *newpage = NULL;
		bool cow =
800144ec:	3a520002 	xori	s2,s2,0x2
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
800144f0:	30a30001 	andi	v1,a1,0x1
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1055
		    ((vma->vm_flags & (VM_SHARE | VM_WRITE)) == VM_WRITE),
		    may_copy = 1;

#if 1
		if (!(!ptep_present(ptep)
800144f4:	10600042 	beqz	v1,80014600 <do_pgfault+0x344>
800144f8:	2e520001 	sltiu	s2,s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1056
		      || ((error_code & 2) && !ptep_u_write(ptep) && cow))) {
800144fc:	32a30002 	andi	v1,s5,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1055
		bool cow =
		    ((vma->vm_flags & (VM_SHARE | VM_WRITE)) == VM_WRITE),
		    may_copy = 1;

#if 1
		if (!(!ptep_present(ptep)
80014500:	106000a6 	beqz	v1,8001479c <do_pgfault+0x4e0>
80014504:	24030006 	li	v1,6
ptep_u_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:46
	return (*ptep & PTE_U);
}

static inline int ptep_u_write(pte_t * ptep)
{
	return ((*ptep & PTE_U) && (*ptep & PTE_W));
80014508:	30a40006 	andi	a0,a1,0x6
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1056
		      || ((error_code & 2) && !ptep_u_write(ptep) && cow))) {
8001450c:	108300a4 	beq	a0,v1,800147a0 <do_pgfault+0x4e4>
80014510:	3c048002 	lui	a0,0x8002
80014514:	124000a3 	beqz	s2,800147a4 <do_pgfault+0x4e8>
80014518:	24842f44 	addiu	a0,a0,12100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1065
			assert(0);
		}
#endif

		if (cow) {
			newpage = alloc_page();
8001451c:	0c0073df 	jal	8001cf7c <alloc_pages>
80014520:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
80014524:	8ee30000 	lw	v1,0(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1065
			assert(0);
		}
#endif

		if (cow) {
			newpage = alloc_page();
80014528:	0040a021 	move	s4,v0
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001452c:	30620001 	andi	v0,v1,0x1
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1067
		}
		if (ptep_present(ptep)) {
80014530:	10400035 	beqz	v0,80014608 <do_pgfault+0x34c>
80014534:	2402f000 	li	v0,-4096
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80014538:	00621824 	and	v1,v1,v0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001453c:	3c047fff 	lui	a0,0x7fff
80014540:	3c028015 	lui	v0,0x8015
80014544:	3484f000 	ori	a0,a0,0xf000
80014548:	8c467770 	lw	a2,30576(v0)
8001454c:	00641821 	addu	v1,v1,a0
80014550:	00031b02 	srl	v1,v1,0xc
80014554:	0066102b 	sltu	v0,v1,a2
80014558:	1040007d 	beqz	v0,80014750 <do_pgfault+0x494>
8001455c:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80014560:	8c4277bc 	lw	v0,30652(v0)
80014564:	00031940 	sll	v1,v1,0x5
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1091
#endif
				may_copy = 0;
			}
		}

		if (cow && may_copy) {
80014568:	12400044 	beqz	s2,8001467c <do_pgfault+0x3c0>
8001456c:	00432821 	addu	a1,v0,v1
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
80014570:	8ca30000 	lw	v1,0(a1)
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1095
#ifdef UCONFIG_SWAP
			if (page_ref(page) + swap_page_count(page) > 1) {
#else
			if (page_ref(page) > 1) {
80014574:	28630002 	slti	v1,v1,2
80014578:	54600041 	bnezl	v1,80014680 <do_pgfault+0x3c4>
8001457c:	8e040010 	lw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1097
#endif
				if (newpage == NULL) {
80014580:	1280001b 	beqz	s4,800145f0 <do_pgfault+0x334>
80014584:	02823823 	subu	a3,s4,v0
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80014588:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001458c:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014590:	00071b02 	srl	v1,a3,0xc
80014594:	0066182b 	sltu	v1,v1,a2
80014598:	10600073 	beqz	v1,80014768 <do_pgfault+0x4ac>
8001459c:	00e43823 	subu	a3,a3,a0
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800145a0:	00a21023 	subu	v0,a1,v0
800145a4:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800145a8:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800145ac:	00021b02 	srl	v1,v0,0xc
800145b0:	0066302b 	sltu	a2,v1,a2
800145b4:	10c00072 	beqz	a2,80014780 <do_pgfault+0x4c4>
800145b8:	00441023 	subu	v0,v0,a0
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1100
					goto failed;
				}
				memcpy(page2kva(newpage), page2kva(page),
800145bc:	00e02021 	move	a0,a3
800145c0:	00402821 	move	a1,v0
800145c4:	0c005c6e 	jal	800171b8 <memcpy>
800145c8:	24061000 	li	a2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1131
#endif //SHARE_MAPPED_FILE
		}
#endif //UCONFIG_BIONIC_LIBC
		else {
		}
		page_insert(mm->pgdir, page, addr, perm);
800145cc:	8e040010 	lw	a0,16(s0)
800145d0:	02802821 	move	a1,s4
800145d4:	02203021 	move	a2,s1
800145d8:	0c005dbf 	jal	800176fc <page_insert>
800145dc:	02c03821 	move	a3,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800145e0:	1260ff5e 	beqz	s3,8001435c <do_pgfault+0xa0>
800145e4:	00009021 	move	s2,zero
800145e8:	080050f7 	j	800143dc <do_pgfault+0x120>
800145ec:	00000000 	nop
800145f0:	1260ff5a 	beqz	s3,8001435c <do_pgfault+0xa0>
800145f4:	2412fff4 	li	s2,-12
800145f8:	080050f7 	j	800143dc <do_pgfault+0x120>
800145fc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1064
				cow, vma->vm_flags);
			assert(0);
		}
#endif

		if (cow) {
80014600:	1640ffc6 	bnez	s2,8001451c <do_pgfault+0x260>
80014604:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1078
					free_page(newpage);
				}
				goto failed;
			}
#else
			assert(0);
80014608:	3c048002 	lui	a0,0x8002
8001460c:	24842ce8 	addiu	a0,a0,11496
80014610:	24050436 	li	a1,1078
80014614:	3c068002 	lui	a2,0x8002
80014618:	3c078002 	lui	a3,0x8002
8001461c:	24c609b0 	addiu	a2,a2,2480
80014620:	0c006afd 	jal	8001abf4 <__panic>
80014624:	24e71fa4 	addiu	a3,a3,8100
lock_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.h:63
	return atomic_sub_return(&(shmem->shmem_ref), 1);
}

static inline void lock_shmem(struct shmem_struct *shmem)
{
	down(&(shmem->shmem_sem));
80014628:	0c006711 	jal	80019c44 <down>
8001462c:	24840014 	addiu	a0,a0,20
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1028
			}
#endif //UCONFIG_BIONIC_LIBC
		} else {	//shared mem
			lock_shmem(vma->shmem);
			uintptr_t shmem_addr =
			    addr - vma->vm_start + vma->shmem_off;
80014630:	8e85002c 	lw	a1,44(s4)
80014634:	8e820004 	lw	v0,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1029
			pte_t *sh_ptep =
80014638:	8e840028 	lw	a0,40(s4)
8001463c:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1028
			}
#endif //UCONFIG_BIONIC_LIBC
		} else {	//shared mem
			lock_shmem(vma->shmem);
			uintptr_t shmem_addr =
			    addr - vma->vm_start + vma->shmem_off;
80014640:	00a22823 	subu	a1,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1029
			pte_t *sh_ptep =
80014644:	0c004a6b 	jal	800129ac <shmem_get_entry>
80014648:	00b12821 	addu	a1,a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1031
			    shmem_get_entry(vma->shmem, shmem_addr, 1);
			if (sh_ptep == NULL || ptep_invalid(sh_ptep)) {
8001464c:	10400004 	beqz	v0,80014660 <do_pgfault+0x3a4>
80014650:	8e840028 	lw	a0,40(s4)
80014654:	8c430000 	lw	v1,0(v0)
80014658:	14600015 	bnez	v1,800146b0 <do_pgfault+0x3f4>
8001465c:	00000000 	nop
unlock_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:945
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);

	ret = -E_NO_MEM;
80014660:	2412fff4 	li	s2,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.h:68
}

static inline void unlock_shmem(struct shmem_struct *shmem)
{
	up(&(shmem->shmem_sem));
80014664:	0c00670f 	jal	80019c3c <up>
80014668:	24840014 	addiu	a0,a0,20
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
8001466c:	1260ff3c 	beqz	s3,80014360 <do_pgfault+0xa4>
80014670:	8fbf0044 	lw	ra,68(sp)
80014674:	080050f7 	j	800143dc <do_pgfault+0x120>
80014678:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1131
#endif //SHARE_MAPPED_FILE
		}
#endif //UCONFIG_BIONIC_LIBC
		else {
		}
		page_insert(mm->pgdir, page, addr, perm);
8001467c:	8e040010 	lw	a0,16(s0)
80014680:	02203021 	move	a2,s1
80014684:	0c005dbf 	jal	800176fc <page_insert>
80014688:	02c03821 	move	a3,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1132
		if (newpage != NULL) {
8001468c:	1280ff31 	beqz	s4,80014354 <do_pgfault+0x98>
80014690:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1133
			free_page(newpage);
80014694:	02802021 	move	a0,s4
80014698:	0c0073fb 	jal	8001cfec <free_pages>
8001469c:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800146a0:	1260ff2f 	beqz	s3,80014360 <do_pgfault+0xa4>
800146a4:	8fbf0044 	lw	ra,68(sp)
800146a8:	080050f7 	j	800143dc <do_pgfault+0x120>
800146ac:	00000000 	nop
unlock_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.h:68
800146b0:	afa20018 	sw	v0,24(sp)
800146b4:	0c00670f 	jal	80019c3c <up>
800146b8:	24840014 	addiu	a0,a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1143
		unlock_mm(mm);
	}
	return ret;
}
800146bc:	8fa20018 	lw	v0,24(sp)
800146c0:	8c420000 	lw	v0,0(v0)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
800146c4:	30430001 	andi	v1,v0,0x1
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1036
			if (sh_ptep == NULL || ptep_invalid(sh_ptep)) {
				unlock_shmem(vma->shmem);
				goto failed;
			}
			unlock_shmem(vma->shmem);
			if (ptep_present(sh_ptep)) {
800146c8:	1060001b 	beqz	v1,80014738 <do_pgfault+0x47c>
800146cc:	3c038015 	lui	v1,0x8015
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800146d0:	3c047fff 	lui	a0,0x7fff
800146d4:	3484f000 	ori	a0,a0,0xf000
800146d8:	8c637770 	lw	v1,30576(v1)
800146dc:	00441021 	addu	v0,v0,a0
800146e0:	00021302 	srl	v0,v0,0xc
800146e4:	0043182b 	sltu	v1,v0,v1
800146e8:	10600019 	beqz	v1,80014750 <do_pgfault+0x494>
800146ec:	8e040010 	lw	a0,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
800146f0:	3c038015 	lui	v1,0x8015
800146f4:	8c6577bc 	lw	a1,30652(v1)
800146f8:	00021140 	sll	v0,v0,0x5
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1037
				page_insert(mm->pgdir, pa2page(*sh_ptep), addr,
800146fc:	02203021 	move	a2,s1
80014700:	00a22821 	addu	a1,a1,v0
80014704:	0c005dbf 	jal	800176fc <page_insert>
80014708:	02c03821 	move	a3,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
8001470c:	1260ff13 	beqz	s3,8001435c <do_pgfault+0xa0>
80014710:	00009021 	move	s2,zero
80014714:	080050f7 	j	800143dc <do_pgfault+0x120>
80014718:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:878

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
	struct proc_struct *current = pls_read(current);
	if (mm == NULL) {
		assert(current != NULL);
8001471c:	3c068002 	lui	a2,0x8002
80014720:	3c078002 	lui	a3,0x8002
80014724:	24842ce8 	addiu	a0,a0,11496
80014728:	2405036e 	li	a1,878
8001472c:	24c609b0 	addiu	a2,a2,2480
80014730:	0c006afd 	jal	8001abf4 <__panic>
80014734:	24e72ee8 	addiu	a3,a3,12008
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1044
			} else {
#ifdef UCONFIG_SWAP
				swap_duplicate(*ptep);
				ptep_copy(ptep, sh_ptep);
#else
				panic("NO SWAP\n");
80014738:	3c048002 	lui	a0,0x8002
8001473c:	3c068002 	lui	a2,0x8002
80014740:	24842ce8 	addiu	a0,a0,11496
80014744:	24050414 	li	a1,1044
80014748:	0c006afd 	jal	8001abf4 <__panic>
8001474c:	24c62f38 	addiu	a2,a2,12088
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
80014750:	3c048002 	lui	a0,0x8002
80014754:	3c068002 	lui	a2,0x8002
80014758:	24842564 	addiu	a0,a0,9572
8001475c:	24050063 	li	a1,99
80014760:	0c006afd 	jal	8001abf4 <__panic>
80014764:	24c625cc 	addiu	a2,a2,9676
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014768:	3c048002 	lui	a0,0x8002
8001476c:	3c068002 	lui	a2,0x8002
80014770:	24842564 	addiu	a0,a0,9572
80014774:	2405006a 	li	a1,106
80014778:	0c006afd 	jal	8001abf4 <__panic>
8001477c:	24c625ec 	addiu	a2,a2,9708
80014780:	3c048002 	lui	a0,0x8002
80014784:	3c068002 	lui	a2,0x8002
80014788:	24842564 	addiu	a0,a0,9572
8001478c:	2405006a 	li	a1,106
80014790:	24c625ec 	addiu	a2,a2,9708
80014794:	0c006afd 	jal	8001abf4 <__panic>
80014798:	00403821 	move	a3,v0
do_pgfault():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1058

#if 1
		if (!(!ptep_present(ptep)
		      || ((error_code & 2) && !ptep_u_write(ptep) && cow))) {
			//assert(PADDR(mm->pgdir) == rcr3());
			kprintf("%p %p %d %d %x\n\r", *ptep, addr, error_code,
8001479c:	3c048002 	lui	a0,0x8002
800147a0:	24842f44 	addiu	a0,a0,12100
800147a4:	02203021 	move	a2,s1
800147a8:	02a03821 	move	a3,s5
800147ac:	afb20010 	sw	s2,16(sp)
800147b0:	0c00798a 	jal	8001e628 <kprintf>
800147b4:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:1060
				cow, vma->vm_flags);
			assert(0);
800147b8:	3c048002 	lui	a0,0x8002
800147bc:	24842ce8 	addiu	a0,a0,11496
800147c0:	08005185 	j	80014614 <do_pgfault+0x358>
800147c4:	24050424 	li	a1,1060

800147c8 <kmem_cache_alloc>:
kmem_cache_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:399
}

// kmem_cache_alloc - call kmem_cache_alloc_one function to allocate a obj
//                  - if no free obj, try to allocate a slab
static void *
kmem_cache_alloc(kmem_cache_t *cachep) {
800147c8:	27bdffc0 	addiu	sp,sp,-64
800147cc:	afb60030 	sw	s6,48(sp)
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800147d0:	3c168000 	lui	s6,0x8000
kmem_cache_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:399
800147d4:	afbe0038 	sw	s8,56(sp)
800147d8:	afb70034 	sw	s7,52(sp)
800147dc:	afb5002c 	sw	s5,44(sp)
800147e0:	afb40028 	sw	s4,40(sp)
800147e4:	afb20020 	sw	s2,32(sp)
800147e8:	afbf003c 	sw	ra,60(sp)
800147ec:	afb30024 	sw	s3,36(sp)
800147f0:	afb1001c 	sw	s1,28(sp)
800147f4:	afb00018 	sw	s0,24(sp)
800147f8:	00809021 	move	s2,a0
800147fc:	24940008 	addiu	s4,a0,8
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80014800:	3c178015 	lui	s7,0x8015
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80014804:	26d61000 	addiu	s6,s6,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014808:	3c158015 	lui	s5,0x8015
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:365

    int i;
    for (i = 0; i < cachep->num; i ++) {
        slab_bufctl(slabp)[i] = i + 1;
    }
    slab_bufctl(slabp)[cachep->num - 1] = BUFCTL_END;
8001480c:	241effff 	li	s8,-1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014810:	40026000 	mfc0	v0,c0_status
80014814:	30420001 	andi	v0,v0,0x1
80014818:	10400004 	beqz	v0,8001482c <kmem_cache_alloc+0x64>
8001481c:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80014820:	0c006cbe 	jal	8001b2f8 <intr_disable>
80014824:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80014828:	24030001 	li	v1,1
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001482c:	8e44000c 	lw	a0,12(s2)
kmem_cache_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:405
    void *objp;
    bool intr_flag;

try_again:
    local_intr_save(intr_flag);
    if (list_empty(&(cachep->slabs_notfull))) {
80014830:	56840080 	bnel	s4,a0,80014a34 <kmem_cache_alloc+0x26c>
80014834:	8c860014 	lw	a2,20(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014838:	50600004 	beqzl	v1,8001484c <kmem_cache_alloc+0x84>
8001483c:	8e440024 	lw	a0,36(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80014840:	0c006cba 	jal	8001b2e8 <intr_enable>
80014844:	00000000 	nop
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:341

// kmem_cache_grow - allocate a new slab by calling alloc_pages
//                 - set control area in the new slab
static bool
kmem_cache_grow(kmem_cache_t *cachep) {
    struct Page *page = alloc_pages(1 << cachep->page_order);
80014848:	8e440024 	lw	a0,36(s2)
8001484c:	24130001 	li	s3,1
80014850:	0c0073df 	jal	8001cf7c <alloc_pages>
80014854:	00932004 	sllv	a0,s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:342
    if (page == NULL) {
80014858:	10400057 	beqz	v0,800149b8 <kmem_cache_alloc+0x1f0>
8001485c:	00408821 	move	s1,v0
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80014860:	8ef077bc 	lw	s0,30652(s7)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014864:	8ea27770 	lw	v0,30576(s5)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80014868:	02308023 	subu	s0,s1,s0
8001486c:	00108143 	sra	s0,s0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80014870:	00108300 	sll	s0,s0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014874:	00101b02 	srl	v1,s0,0xc
80014878:	0062102b 	sltu	v0,v1,v0
8001487c:	10400098 	beqz	v0,80014ae0 <kmem_cache_alloc+0x318>
80014880:	02168021 	addu	s0,s0,s6
kmem_cache_slabmgmt():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:309
//                     - and initialize the slab according to cachep
static slab_t *
kmem_cache_slabmgmt(kmem_cache_t *cachep, struct Page *page) {
    void *objp = page2kva(page);
    slab_t *slabp;
    if (cachep->off_slab) {
80014884:	8e430020 	lw	v1,32(s2)
80014888:	10600005 	beqz	v1,800148a0 <kmem_cache_alloc+0xd8>
8001488c:	02001021 	move	v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:310
        if ((slabp = kmem_cache_alloc(cachep->slab_cachep)) == NULL) {
80014890:	0c0051f2 	jal	800147c8 <kmem_cache_alloc>
80014894:	8e440028 	lw	a0,40(s2)
80014898:	50400054 	beqzl	v0,800149ec <kmem_cache_alloc+0x224>
8001489c:	8e450024 	lw	a1,36(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:318
    }
    else {
        slabp = page2kva(page);
    }
    slabp->inuse = 0;
    slabp->offset = cachep->offset;
800148a0:	8e43001c 	lw	v1,28(s2)
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:351
    slab_t *slabp;
    if ((slabp = kmem_cache_slabmgmt(cachep, page)) == NULL) {
        goto oops;
    }

    size_t order_size = (1 << cachep->page_order);
800148a4:	8e440024 	lw	a0,36(s2)
kmem_cache_slabmgmt():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:317
        }
    }
    else {
        slabp = page2kva(page);
    }
    slabp->inuse = 0;
800148a8:	ac40000c 	sw	zero,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:319
    slabp->offset = cachep->offset;
    slabp->s_mem = objp + cachep->offset;
800148ac:	02038021 	addu	s0,s0,v1
800148b0:	ac500008 	sw	s0,8(v0)
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:351
    slab_t *slabp;
    if ((slabp = kmem_cache_slabmgmt(cachep, page)) == NULL) {
        goto oops;
    }

    size_t order_size = (1 << cachep->page_order);
800148b4:	24100001 	li	s0,1
kmem_cache_slabmgmt():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:318
    }
    else {
        slabp = page2kva(page);
    }
    slabp->inuse = 0;
    slabp->offset = cachep->offset;
800148b8:	ac430010 	sw	v1,16(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:351
    slab_t *slabp;
    if ((slabp = kmem_cache_slabmgmt(cachep, page)) == NULL) {
        goto oops;
    }

    size_t order_size = (1 << cachep->page_order);
800148bc:	08005237 	j	800148dc <kmem_cache_alloc+0x114>
800148c0:	00908004 	sllv	s0,s0,a0
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
800148c4:	8e230004 	lw	v1,4(s1)
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:359
        SET_PAGE_CACHE(page, cachep);
        SET_PAGE_SLAB(page, slabp);
	//this page is used for slab
        SetPageSlab(page);
        page ++;
    } while (-- order_size);
800148c8:	2610ffff 	addiu	s0,s0,-1
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
800148cc:	34630004 	ori	v1,v1,0x4
800148d0:	ae230004 	sw	v1,4(s1)
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:359
800148d4:	12000011 	beqz	s0,8001491c <kmem_cache_alloc+0x154>
800148d8:	26310020 	addiu	s1,s1,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:354
    }

    size_t order_size = (1 << cachep->page_order);
    do {
        //setup this page in the free list (see memlayout.h: struct page)???
        SET_PAGE_CACHE(page, cachep);
800148dc:	ae320014 	sw	s2,20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:355
        SET_PAGE_SLAB(page, slabp);
800148e0:	ae220010 	sw	v0,16(s1)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800148e4:	40036000 	mfc0	v1,c0_status
800148e8:	30630001 	andi	v1,v1,0x1
800148ec:	1060fff5 	beqz	v1,800148c4 <kmem_cache_alloc+0xfc>
800148f0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800148f4:	0c006cbe 	jal	8001b2f8 <intr_disable>
800148f8:	afa20010 	sw	v0,16(sp)
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
800148fc:	8e230004 	lw	v1,4(s1)
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:359
	//this page is used for slab
        SetPageSlab(page);
        page ++;
    } while (-- order_size);
80014900:	2610ffff 	addiu	s0,s0,-1
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
80014904:	34630004 	ori	v1,v1,0x4
80014908:	ae230004 	sw	v1,4(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001490c:	0c006cba 	jal	8001b2e8 <intr_enable>
80014910:	26310020 	addiu	s1,s1,32
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:359
80014914:	1600fff1 	bnez	s0,800148dc <kmem_cache_alloc+0x114>
80014918:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:362

    int i;
    for (i = 0; i < cachep->num; i ++) {
8001491c:	8e440018 	lw	a0,24(s2)
80014920:	1080000b 	beqz	a0,80014950 <kmem_cache_alloc+0x188>
80014924:	00001821 	move	v1,zero
80014928:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:363
        slab_bufctl(slabp)[i] = i + 1;
8001492c:	24a50006 	addiu	a1,a1,6
80014930:	00052880 	sll	a1,a1,0x2
80014934:	24630001 	addiu	v1,v1,1
80014938:	00452821 	addu	a1,v0,a1
8001493c:	aca30000 	sw	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:362
        SetPageSlab(page);
        page ++;
    } while (-- order_size);

    int i;
    for (i = 0; i < cachep->num; i ++) {
80014940:	8e440018 	lw	a0,24(s2)
80014944:	0064302b 	sltu	a2,v1,a0
80014948:	14c0fff8 	bnez	a2,8001492c <kmem_cache_alloc+0x164>
8001494c:	00602821 	move	a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:365
        slab_bufctl(slabp)[i] = i + 1;
    }
    slab_bufctl(slabp)[cachep->num - 1] = BUFCTL_END;
80014950:	24840005 	addiu	a0,a0,5
80014954:	00042080 	sll	a0,a0,0x2
80014958:	00442021 	addu	a0,v0,a0
8001495c:	ac9e0000 	sw	s8,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:366
    slabp->free = 0;
80014960:	ac400014 	sw	zero,20(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014964:	40036000 	mfc0	v1,c0_status
80014968:	30630001 	andi	v1,v1,0x1
8001496c:	14600007 	bnez	v1,8001498c <kmem_cache_alloc+0x1c4>
80014970:	00000000 	nop
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80014974:	8e43000c 	lw	v1,12(s2)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80014978:	ae42000c 	sw	v0,12(s2)
8001497c:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80014980:	ac430004 	sw	v1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80014984:	08005204 	j	80014810 <kmem_cache_alloc+0x48>
80014988:	ac540000 	sw	s4,0(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001498c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80014990:	afa20010 	sw	v0,16(sp)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80014994:	8fa20010 	lw	v0,16(sp)
list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80014998:	8e43000c 	lw	v1,12(s2)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001499c:	ae42000c 	sw	v0,12(s2)
800149a0:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
800149a4:	ac430004 	sw	v1,4(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800149a8:	0c006cba 	jal	8001b2e8 <intr_enable>
800149ac:	ac540000 	sw	s4,0(v0)
800149b0:	08005204 	j	80014810 <kmem_cache_alloc+0x48>
800149b4:	00000000 	nop
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:419
    local_intr_restore(intr_flag);

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
800149b8:	00001021 	move	v0,zero
kmem_cache_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:420
}
800149bc:	8fbf003c 	lw	ra,60(sp)
800149c0:	8fbe0038 	lw	s8,56(sp)
800149c4:	8fb70034 	lw	s7,52(sp)
800149c8:	8fb60030 	lw	s6,48(sp)
800149cc:	8fb5002c 	lw	s5,44(sp)
800149d0:	8fb40028 	lw	s4,40(sp)
800149d4:	8fb30024 	lw	s3,36(sp)
800149d8:	8fb20020 	lw	s2,32(sp)
800149dc:	8fb1001c 	lw	s1,28(sp)
800149e0:	8fb00018 	lw	s0,24(sp)
800149e4:	03e00008 	jr	ra
800149e8:	27bd0040 	addiu	sp,sp,64
kmem_cache_grow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:419
    local_intr_restore(intr_flag);

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
800149ec:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:377
    }
    local_intr_restore(intr_flag);
    return 1;

oops:
    free_pages(page, 1 << cachep->page_order);
800149f0:	02202021 	move	a0,s1
800149f4:	00b32804 	sllv	a1,s3,a1
800149f8:	0c0073fb 	jal	8001cfec <free_pages>
800149fc:	afa20010 	sw	v0,16(sp)
kmem_cache_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:420

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
}
80014a00:	8fbf003c 	lw	ra,60(sp)
80014a04:	8fa20010 	lw	v0,16(sp)
80014a08:	8fbe0038 	lw	s8,56(sp)
80014a0c:	8fb70034 	lw	s7,52(sp)
80014a10:	8fb60030 	lw	s6,48(sp)
80014a14:	8fb5002c 	lw	s5,44(sp)
80014a18:	8fb40028 	lw	s4,40(sp)
80014a1c:	8fb30024 	lw	s3,36(sp)
80014a20:	8fb20020 	lw	s2,32(sp)
80014a24:	8fb1001c 	lw	s1,28(sp)
80014a28:	8fb00018 	lw	s0,24(sp)
80014a2c:	03e00008 	jr	ra
80014a30:	27bd0040 	addiu	sp,sp,64
kmem_cache_alloc_one():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:386

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
80014a34:	8e470010 	lw	a3,16(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:385
}

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
80014a38:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:387
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014a3c:	24c50006 	addiu	a1,a2,6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:386

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
80014a40:	70c74002 	mul	t0,a2,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:385
}

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
80014a44:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:387
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014a48:	00052880 	sll	a1,a1,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:385
}

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
80014a4c:	ac82000c 	sw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:387
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014a50:	00852821 	addu	a1,a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:386

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
80014a54:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:387
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014a58:	8ca50000 	lw	a1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:389

    if (slabp->free == BUFCTL_END) {
80014a5c:	2406ffff 	li	a2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:387
// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014a60:	ac850014 	sw	a1,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:389

    if (slabp->free == BUFCTL_END) {
80014a64:	10a60012 	beq	a1,a2,80014ab0 <kmem_cache_alloc+0x2e8>
80014a68:	01021021 	addu	v0,t0,v0
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014a6c:	1060ffd4 	beqz	v1,800149c0 <kmem_cache_alloc+0x1f8>
80014a70:	8fbf003c 	lw	ra,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80014a74:	0c006cba 	jal	8001b2e8 <intr_enable>
80014a78:	afa20010 	sw	v0,16(sp)
kmem_cache_alloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:420

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
}
80014a7c:	8fbf003c 	lw	ra,60(sp)
80014a80:	8fa20010 	lw	v0,16(sp)
80014a84:	8fbe0038 	lw	s8,56(sp)
80014a88:	8fb70034 	lw	s7,52(sp)
80014a8c:	8fb60030 	lw	s6,48(sp)
80014a90:	8fb5002c 	lw	s5,44(sp)
80014a94:	8fb40028 	lw	s4,40(sp)
80014a98:	8fb30024 	lw	s3,36(sp)
80014a9c:	8fb20020 	lw	s2,32(sp)
80014aa0:	8fb1001c 	lw	s1,28(sp)
80014aa4:	8fb00018 	lw	s0,24(sp)
80014aa8:	03e00008 	jr	ra
80014aac:	27bd0040 	addiu	sp,sp,64
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80014ab0:	8c870000 	lw	a3,0(a0)
80014ab4:	8c860004 	lw	a2,4(a0)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80014ab8:	ace60004 	sw	a2,4(a3)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80014abc:	8e450004 	lw	a1,4(s2)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
	next->prev = prev;
80014ac0:	acc70000 	sw	a3,0(a2)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80014ac4:	ae440004 	sw	a0,4(s2)
80014ac8:	aca40000 	sw	a0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80014acc:	ac850004 	sw	a1,4(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014ad0:	1060ffba 	beqz	v1,800149bc <kmem_cache_alloc+0x1f4>
80014ad4:	ac920000 	sw	s2,0(a0)
80014ad8:	0800529d 	j	80014a74 <kmem_cache_alloc+0x2ac>
80014adc:	00000000 	nop
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
80014ae0:	3c048002 	lui	a0,0x8002
80014ae4:	3c068002 	lui	a2,0x8002
80014ae8:	24842564 	addiu	a0,a0,9572
80014aec:	2405006a 	li	a1,106
80014af0:	24c625ec 	addiu	a2,a2,9708
80014af4:	0c006afd 	jal	8001abf4 <__panic>
80014af8:	02003821 	move	a3,s0

80014afc <kmem_cache_free>:
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80014afc:	3c028000 	lui	v0,0x8000
80014b00:	24421000 	addiu	v0,v0,4096
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:485
#define GET_PAGE_SLAB(page)                                 \
    (slab_t *)((page)->page_link.prev)

// kmem_cache_free - call kmem_cache_free_one function to free an obj 
static void
kmem_cache_free(kmem_cache_t *cachep, void *objp) {
80014b04:	27bdffc8 	addiu	sp,sp,-56
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
80014b08:	00a2102b 	sltu	v0,a1,v0
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:485
80014b0c:	afb2001c 	sw	s2,28(sp)
80014b10:	afb00014 	sw	s0,20(sp)
80014b14:	afbf0034 	sw	ra,52(sp)
80014b18:	afb70030 	sw	s7,48(sp)
80014b1c:	afb6002c 	sw	s6,44(sp)
80014b20:	afb50028 	sw	s5,40(sp)
80014b24:	afb40024 	sw	s4,36(sp)
80014b28:	afb30020 	sw	s3,32(sp)
80014b2c:	afb10018 	sw	s1,24(sp)
80014b30:	00a08021 	move	s0,a1
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
80014b34:	144000b2 	bnez	v0,80014e00 <kmem_cache_free+0x304>
80014b38:	00809021 	move	s2,a0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80014b3c:	3c158015 	lui	s5,0x8015
80014b40:	3c027fff 	lui	v0,0x7fff
80014b44:	8ea37770 	lw	v1,30576(s5)
80014b48:	3442f000 	ori	v0,v0,0xf000
80014b4c:	00a21021 	addu	v0,a1,v0
80014b50:	00021302 	srl	v0,v0,0xc
80014b54:	0043182b 	sltu	v1,v0,v1
80014b58:	1060009d 	beqz	v1,80014dd0 <kmem_cache_free+0x2d4>
80014b5c:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80014b60:	8e9177bc 	lw	s1,30652(s4)
80014b64:	00021140 	sll	v0,v0,0x5
80014b68:	02228821 	addu	s1,s1,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014b6c:	40026000 	mfc0	v0,c0_status
80014b70:	30420001 	andi	v0,v0,0x1
80014b74:	14400040 	bnez	v0,80014c78 <kmem_cache_free+0x17c>
80014b78:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014b7c:	8e330004 	lw	s3,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80014b80:	7e730080 	ext	s3,s3,0x2,0x1
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:489
    bool intr_flag;
    struct Page *page = kva2page(objp);

    if (!PageSlab(page)) {
80014b84:	12600098 	beqz	s3,80014de8 <kmem_cache_free+0x2ec>
80014b88:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80014b8c:	40026000 	mfc0	v0,c0_status
80014b90:	30420001 	andi	v0,v0,0x1
80014b94:	10400003 	beqz	v0,80014ba4 <kmem_cache_free+0xa8>
80014b98:	00009821 	move	s3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80014b9c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80014ba0:	24130001 	li	s3,1
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:494
        panic("not a slab page %08x\n", objp);
    }
    local_intr_save(intr_flag);
    {
        kmem_cache_free_one(cachep, GET_PAGE_SLAB(page), objp);
80014ba4:	8e310010 	lw	s1,16(s1)
kmem_cache_free_one():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:461
// kmem_cache_free_one - free an obj in a slab
//                     - if slab->inuse==0, then free the slab
static void
kmem_cache_free_one(kmem_cache_t *cachep, slab_t *slabp, void *objp) {
    //should not use divide operator ???
    size_t objnr = (objp - slabp->s_mem) >> cachep->objsize_shift;
80014ba8:	8e420014 	lw	v0,20(s2)
80014bac:	8e230008 	lw	v1,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:462
    slab_bufctl(slabp)[objnr] = slabp->free;
80014bb0:	8e240014 	lw	a0,20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:461
// kmem_cache_free_one - free an obj in a slab
//                     - if slab->inuse==0, then free the slab
static void
kmem_cache_free_one(kmem_cache_t *cachep, slab_t *slabp, void *objp) {
    //should not use divide operator ???
    size_t objnr = (objp - slabp->s_mem) >> cachep->objsize_shift;
80014bb4:	02038023 	subu	s0,s0,v1
80014bb8:	00508007 	srav	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:462
    slab_bufctl(slabp)[objnr] = slabp->free;
80014bbc:	26020006 	addiu	v0,s0,6
80014bc0:	00021080 	sll	v0,v0,0x2
80014bc4:	02221021 	addu	v0,s1,v0
80014bc8:	ac440000 	sw	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:465
    slabp->free = objnr;

    slabp->inuse --;
80014bcc:	8e22000c 	lw	v0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:463
static void
kmem_cache_free_one(kmem_cache_t *cachep, slab_t *slabp, void *objp) {
    //should not use divide operator ???
    size_t objnr = (objp - slabp->s_mem) >> cachep->objsize_shift;
    slab_bufctl(slabp)[objnr] = slabp->free;
    slabp->free = objnr;
80014bd0:	ae300014 	sw	s0,20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:465

    slabp->inuse --;
80014bd4:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:467

    if (slabp->inuse == 0) {
80014bd8:	1040002e 	beqz	v0,80014c94 <kmem_cache_free+0x198>
80014bdc:	ae22000c 	sw	v0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:471
        list_del(&(slabp->slab_link));
        kmem_slab_destroy(cachep, slabp);
    }
    else if (slabp->inuse == cachep->num -1 ) {
80014be0:	8e430018 	lw	v1,24(s2)
80014be4:	2463ffff 	addiu	v1,v1,-1
80014be8:	5043000e 	beql	v0,v1,80014c24 <kmem_cache_free+0x128>
80014bec:	8e240000 	lw	a0,0(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014bf0:	16600017 	bnez	s3,80014c50 <kmem_cache_free+0x154>
80014bf4:	8fbf0034 	lw	ra,52(sp)
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:497
    local_intr_save(intr_flag);
    {
        kmem_cache_free_one(cachep, GET_PAGE_SLAB(page), objp);
    }
    local_intr_restore(intr_flag);
}
80014bf8:	8fbf0034 	lw	ra,52(sp)
80014bfc:	8fb70030 	lw	s7,48(sp)
80014c00:	8fb6002c 	lw	s6,44(sp)
80014c04:	8fb50028 	lw	s5,40(sp)
80014c08:	8fb40024 	lw	s4,36(sp)
80014c0c:	8fb30020 	lw	s3,32(sp)
80014c10:	8fb2001c 	lw	s2,28(sp)
80014c14:	8fb10018 	lw	s1,24(sp)
80014c18:	8fb00014 	lw	s0,20(sp)
80014c1c:	03e00008 	jr	ra
80014c20:	27bd0038 	addiu	sp,sp,56
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80014c24:	8e230004 	lw	v1,4(s1)
kmem_cache_free_one():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:473
        list_del(&(slabp->slab_link));
        kmem_slab_destroy(cachep, slabp);
    }
    else if (slabp->inuse == cachep->num -1 ) {
        list_del(&(slabp->slab_link));
        list_add(&(cachep->slabs_notfull), &(slabp->slab_link));
80014c28:	26450008 	addiu	a1,s2,8
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80014c2c:	ac830004 	sw	v1,4(a0)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80014c30:	8e42000c 	lw	v0,12(s2)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
	next->prev = prev;
80014c34:	ac640000 	sw	a0,0(v1)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80014c38:	ae51000c 	sw	s1,12(s2)
80014c3c:	ac510000 	sw	s1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80014c40:	ae220004 	sw	v0,4(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
80014c44:	1260ffec 	beqz	s3,80014bf8 <kmem_cache_free+0xfc>
80014c48:	ae250000 	sw	a1,0(s1)
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:497
    local_intr_save(intr_flag);
    {
        kmem_cache_free_one(cachep, GET_PAGE_SLAB(page), objp);
    }
    local_intr_restore(intr_flag);
}
80014c4c:	8fbf0034 	lw	ra,52(sp)
80014c50:	8fb70030 	lw	s7,48(sp)
80014c54:	8fb6002c 	lw	s6,44(sp)
80014c58:	8fb50028 	lw	s5,40(sp)
80014c5c:	8fb40024 	lw	s4,36(sp)
80014c60:	8fb30020 	lw	s3,32(sp)
80014c64:	8fb2001c 	lw	s2,28(sp)
80014c68:	8fb10018 	lw	s1,24(sp)
80014c6c:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80014c70:	08006cba 	j	8001b2e8 <intr_enable>
80014c74:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80014c78:	0c006cbe 	jal	8001b2f8 <intr_disable>
80014c7c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014c80:	8e330004 	lw	s3,4(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014c84:	0c006cba 	jal	8001b2e8 <intr_enable>
80014c88:	7e730080 	ext	s3,s3,0x2,0x1
80014c8c:	080052e1 	j	80014b84 <kmem_cache_free+0x88>
80014c90:	00000000 	nop
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:439
static void kmem_cache_free(kmem_cache_t *cachep, void *obj);

// kmem_slab_destroy - call free_pages & kmem_cache_free to free a slab 
static void
kmem_slab_destroy(kmem_cache_t *cachep, slab_t *slabp) {
    struct Page *page = kva2page(slabp->s_mem - slabp->offset);
80014c94:	8e270010 	lw	a3,16(s1)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80014c98:	8e240000 	lw	a0,0(s1)
80014c9c:	8e220004 	lw	v0,4(s1)
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:439
80014ca0:	00673823 	subu	a3,v1,a3
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80014ca4:	3c038000 	lui	v1,0x8000
80014ca8:	24631000 	addiu	v1,v1,4096
80014cac:	00e3182b 	sltu	v1,a3,v1
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80014cb0:	ac820004 	sw	v0,4(a0)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
80014cb4:	14600059 	bnez	v1,80014e1c <kmem_cache_free+0x320>
80014cb8:	ac440000 	sw	a0,0(v0)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80014cbc:	3c177fff 	lui	s7,0x7fff
80014cc0:	8ea27770 	lw	v0,30576(s5)
80014cc4:	36f7f000 	ori	s7,s7,0xf000
80014cc8:	00f73821 	addu	a3,a3,s7
80014ccc:	00073b02 	srl	a3,a3,0xc
80014cd0:	00e2102b 	sltu	v0,a3,v0
80014cd4:	1040003e 	beqz	v0,80014dd0 <kmem_cache_free+0x2d4>
80014cd8:	8e9777bc 	lw	s7,30652(s4)
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:442

    struct Page *p = page;
    size_t order_size = (1 << cachep->page_order);
80014cdc:	8e420024 	lw	v0,36(s2)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80014ce0:	00073940 	sll	a3,a3,0x5
80014ce4:	02e7b821 	addu	s7,s7,a3
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:442
80014ce8:	24140001 	li	s4,1
80014cec:	0054a004 	sllv	s4,s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:441
// kmem_slab_destroy - call free_pages & kmem_cache_free to free a slab 
static void
kmem_slab_destroy(kmem_cache_t *cachep, slab_t *slabp) {
    struct Page *page = kva2page(slabp->s_mem - slabp->offset);

    struct Page *p = page;
80014cf0:	02e08021 	move	s0,s7
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
80014cf4:	2416fffb 	li	s6,-5
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014cf8:	40026000 	mfc0	v0,c0_status
80014cfc:	30420001 	andi	v0,v0,0x1
80014d00:	1440001c 	bnez	v0,80014d74 <kmem_cache_free+0x278>
80014d04:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014d08:	8e150004 	lw	s5,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80014d0c:	7eb50080 	ext	s5,s5,0x2,0x1
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:444
    size_t order_size = (1 << cachep->page_order);
    do {
        assert(PageSlab(p));
80014d10:	52a00028 	beqzl	s5,80014db4 <kmem_cache_free+0x2b8>
80014d14:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80014d18:	40026000 	mfc0	v0,c0_status
80014d1c:	30420001 	andi	v0,v0,0x1
80014d20:	1440001b 	bnez	v0,80014d90 <kmem_cache_free+0x294>
80014d24:	00000000 	nop
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
80014d28:	8e020004 	lw	v0,4(s0)
80014d2c:	00561024 	and	v0,v0,s6
80014d30:	ae020004 	sw	v0,4(s0)
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:447
        ClearPageSlab(p);
        p ++;
    } while (-- order_size);
80014d34:	2694ffff 	addiu	s4,s4,-1
80014d38:	1680ffef 	bnez	s4,80014cf8 <kmem_cache_free+0x1fc>
80014d3c:	26100020 	addiu	s0,s0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:449

    free_pages(page, 1 << cachep->page_order);
80014d40:	8e420024 	lw	v0,36(s2)
80014d44:	24050001 	li	a1,1
80014d48:	02e02021 	move	a0,s7
80014d4c:	0c0073fb 	jal	8001cfec <free_pages>
80014d50:	00452804 	sllv	a1,a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:451

    if (cachep->off_slab) {
80014d54:	8e420020 	lw	v0,32(s2)
80014d58:	1040ffa5 	beqz	v0,80014bf0 <kmem_cache_free+0xf4>
80014d5c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:452
        kmem_cache_free(cachep->slab_cachep, slabp);
80014d60:	8e440028 	lw	a0,40(s2)
80014d64:	0c0052bf 	jal	80014afc <kmem_cache_free>
80014d68:	02202821 	move	a1,s1
80014d6c:	080052fc 	j	80014bf0 <kmem_cache_free+0xf4>
80014d70:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80014d74:	0c006cbe 	jal	8001b2f8 <intr_disable>
80014d78:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014d7c:	8e150004 	lw	s5,4(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014d80:	0c006cba 	jal	8001b2e8 <intr_enable>
80014d84:	7eb50080 	ext	s5,s5,0x2,0x1
80014d88:	08005344 	j	80014d10 <kmem_cache_free+0x214>
80014d8c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80014d90:	0c006cbe 	jal	8001b2f8 <intr_disable>
80014d94:	00000000 	nop
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
80014d98:	8e020004 	lw	v0,4(s0)
80014d9c:	00561024 	and	v0,v0,s6
80014da0:	ae020004 	sw	v0,4(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014da4:	0c006cba 	jal	8001b2e8 <intr_enable>
80014da8:	2694ffff 	addiu	s4,s4,-1
80014dac:	0800534e 	j	80014d38 <kmem_cache_free+0x23c>
80014db0:	00000000 	nop
kmem_slab_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:444
    struct Page *page = kva2page(slabp->s_mem - slabp->offset);

    struct Page *p = page;
    size_t order_size = (1 << cachep->page_order);
    do {
        assert(PageSlab(p));
80014db4:	3c068002 	lui	a2,0x8002
80014db8:	3c078002 	lui	a3,0x8002
80014dbc:	24842f58 	addiu	a0,a0,12120
80014dc0:	240501bc 	li	a1,444
80014dc4:	24c609b0 	addiu	a2,a2,2480
80014dc8:	0c006afd 	jal	8001abf4 <__panic>
80014dcc:	24e72f78 	addiu	a3,a3,12152
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
80014dd0:	3c048002 	lui	a0,0x8002
80014dd4:	3c068002 	lui	a2,0x8002
80014dd8:	24842564 	addiu	a0,a0,9572
80014ddc:	24050063 	li	a1,99
80014de0:	0c006afd 	jal	8001abf4 <__panic>
80014de4:	24c625cc 	addiu	a2,a2,9676
kmem_cache_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:490
kmem_cache_free(kmem_cache_t *cachep, void *objp) {
    bool intr_flag;
    struct Page *page = kva2page(objp);

    if (!PageSlab(page)) {
        panic("not a slab page %08x\n", objp);
80014de8:	3c068002 	lui	a2,0x8002
80014dec:	24842f58 	addiu	a0,a0,12120
80014df0:	240501ea 	li	a1,490
80014df4:	24c62f60 	addiu	a2,a2,12128
80014df8:	0c006afd 	jal	8001abf4 <__panic>
80014dfc:	02003821 	move	a3,s0
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80014e00:	3c048002 	lui	a0,0x8002
80014e04:	3c068002 	lui	a2,0x8002
80014e08:	24842564 	addiu	a0,a0,9572
80014e0c:	2405006f 	li	a1,111
80014e10:	24c625a8 	addiu	a2,a2,9640
80014e14:	0c006afd 	jal	8001abf4 <__panic>
80014e18:	02003821 	move	a3,s0
80014e1c:	3c048002 	lui	a0,0x8002
80014e20:	3c068002 	lui	a2,0x8002
80014e24:	24842564 	addiu	a0,a0,9572
80014e28:	2405006f 	li	a1,111
80014e2c:	0c006afd 	jal	8001abf4 <__panic>
80014e30:	24c625a8 	addiu	a2,a2,9640

80014e34 <slab_init>:
slab_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014e34:	27bdffd0 	addiu	sp,sp,-48
80014e38:	afb3001c 	sw	s3,28(sp)
80014e3c:	3c0f8015 	lui	t7,0x8015
calculate_slab_order():
80014e40:	3c138002 	lui	s3,0x8002
slab_init():
80014e44:	afb20018 	sw	s2,24(sp)
80014e48:	afb10014 	sw	s1,20(sp)
80014e4c:	afb00010 	sw	s0,16(sp)
80014e50:	afbf002c 	sw	ra,44(sp)
80014e54:	afb60028 	sw	s6,40(sp)
80014e58:	afb50024 	sw	s5,36(sp)
80014e5c:	afb40020 	sw	s4,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:121
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80014e60:	00006021 	move	t4,zero
80014e64:	25ef654c 	addiu	t7,t7,25932
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:122
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014e68:	24180001 	li	t8,1
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80014e6c:	240d0012 	li	t5,18
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014e70:	2673fb54 	addiu	s3,s3,-1196
cache_estimate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:179

// cacahe_estimate - estimate the number of objs in a slab
static void
cache_estimate(size_t order, size_t objsize_shift, bool off_slab, size_t *remainder, size_t *num) {
    size_t nr_objs, mgmt_size;
    size_t slab_size = (PGSIZE << order);
80014e74:	24121000 	li	s2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:202
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
            nr_objs --;
        }
        if (nr_objs > SLAB_LIMIT) {
80014e78:	2411ffff 	li	s1,-1
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:226
//   left_over: the size of can not be used area in slab
static void
calculate_slab_order(kmem_cache_t *cachep, size_t objsize_shift, bool off_slab, size_t *left_over) {
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
80014e7c:	2410000b 	li	s0,11
slab_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:121
void
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80014e80:	2419000d 	li	t9,13
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014e84:	25870005 	addiu	a3,t4,5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:122
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014e88:	000c1080 	sll	v0,t4,0x2
80014e8c:	000c1900 	sll	v1,t4,0x4
80014e90:	00f83804 	sllv	a3,t8,a3
80014e94:	00621823 	subu	v1,v1,v0
init_kmem_cache():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:272
static void
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
80014e98:	24e7000f 	addiu	a3,a3,15
slab_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:122
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014e9c:	006c1823 	subu	v1,v1,t4
init_kmem_cache():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:272
static void
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
80014ea0:	00073902 	srl	a3,a3,0x4
80014ea4:	00073900 	sll	a3,a3,0x4
slab_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:122
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014ea8:	00031880 	sll	v1,v1,0x2
80014eac:	01e31821 	addu	v1,t7,v1
init_kmem_cache():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:274
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
    cachep->off_slab = (objsize >= (PGSIZE >> 3));
80014eb0:	2cee0200 	sltiu	t6,a3,512
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:270

// init_kmem_cache - initial a slab_cache cachep according to the obj with the size = objsize
static void
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));
80014eb4:	24620008 	addiu	v0,v1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:274

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
    cachep->off_slab = (objsize >= (PGSIZE >> 3));
80014eb8:	39ce0001 	xori	t6,t6,0x1
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80014ebc:	2ce40021 	sltiu	a0,a3,33
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80014ec0:	ac630004 	sw	v1,4(v1)
80014ec4:	ac630000 	sw	v1,0(v1)
80014ec8:	ac62000c 	sw	v0,12(v1)
80014ecc:	ac620008 	sw	v0,8(v1)
init_kmem_cache():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:273
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
80014ed0:	ac670010 	sw	a3,16(v1)
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80014ed4:	14800054 	bnez	a0,80015028 <slab_init+0x1f4>
80014ed8:	ac6e0020 	sw	t6,32(v1)
80014edc:	24040040 	li	a0,64
80014ee0:	24020006 	li	v0,6
80014ee4:	0087282b 	sltu	a1,a0,a3
80014ee8:	10a0000a 	beqz	a1,80014f14 <slab_init+0xe0>
80014eec:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80014ef0:	24420001 	addiu	v0,v0,1
80014ef4:	144dfffb 	bne	v0,t5,80014ee4 <slab_init+0xb0>
80014ef8:	00042040 	sll	a0,a0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:262
        if (n <= order_size) {
            return order;
        }
    }
    panic("getorder failed. %d\n", n);
80014efc:	3c048002 	lui	a0,0x8002
80014f00:	3c068002 	lui	a2,0x8002
80014f04:	24842f58 	addiu	a0,a0,12120
80014f08:	24050106 	li	a1,262
80014f0c:	0c006afd 	jal	8001abf4 <__panic>
80014f10:	24c62f84 	addiu	a2,a2,12164
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80014f14:	00582804 	sllv	a1,t8,v0
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:198
    }
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
80014f18:	2456fffb 	addiu	s6,v0,-5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:231
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
        size_t num, remainder;
        cache_estimate(order, objsize_shift, off_slab, &remainder, &num);
        if (num != 0) {
            if (off_slab) {
                size_t off_slab_limit = objsize - sizeof(slab_t);
80014f1c:	24a7ffe8 	addiu	a3,a1,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014f20:	0016b080 	sll	s6,s6,0x2
init_kmem_cache():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:276

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
    cachep->off_slab = (objsize >= (PGSIZE >> 3));
//    cachep->off_slab = 1;
    cachep->objsize_shift = getorder(objsize);
80014f24:	ac620014 	sw	v0,20(v1)
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:233
        cache_estimate(order, objsize_shift, off_slab, &remainder, &num);
        if (num != 0) {
            if (off_slab) {
                size_t off_slab_limit = objsize - sizeof(slab_t);
                /* sizeof(kmem_cache_t) == 4 */
                off_slab_limit /= sizeof(kmem_bufctl_t);
80014f28:	00073882 	srl	a3,a3,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014f2c:	0276b021 	addu	s6,s3,s6
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:226
//   left_over: the size of can not be used area in slab
static void
calculate_slab_order(kmem_cache_t *cachep, size_t objsize_shift, bool off_slab, size_t *left_over) {
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
80014f30:	0000a021 	move	s4,zero
cache_estimate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:182
cache_estimate(size_t order, size_t objsize_shift, bool off_slab, size_t *remainder, size_t *num) {
    size_t nr_objs, mgmt_size;
    size_t slab_size = (PGSIZE << order);
    size_t objsize = 1<<objsize_shift;

    if (off_slab) {
80014f34:	11c0001a 	beqz	t6,80014fa0 <slab_init+0x16c>
80014f38:	02925004 	sllv	t2,s2,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:184
        mgmt_size = 0;
        nr_objs = slab_size >> objsize_shift;
80014f3c:	02aa3006 	srlv	a2,t2,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:183
    size_t nr_objs, mgmt_size;
    size_t slab_size = (PGSIZE << order);
    size_t objsize = 1<<objsize_shift;

    if (off_slab) {
        mgmt_size = 0;
80014f40:	00004821 	move	t1,zero
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:229
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
        size_t num, remainder;
        cache_estimate(order, objsize_shift, off_slab, &remainder, &num);
        if (num != 0) {
80014f44:	50c0000e 	beqzl	a2,80014f80 <slab_init+0x14c>
80014f48:	26940001 	addiu	s4,s4,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:230
            if (off_slab) {
80014f4c:	11c00005 	beqz	t6,80014f64 <slab_init+0x130>
80014f50:	70c52002 	mul	a0,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:234
                size_t off_slab_limit = objsize - sizeof(slab_t);
                /* sizeof(kmem_cache_t) == 4 */
                off_slab_limit /= sizeof(kmem_bufctl_t);
                if (num > off_slab_limit) {
80014f54:	00e6102b 	sltu	v0,a3,a2
80014f58:	1440002f 	bnez	v0,80015018 <slab_init+0x1e4>
80014f5c:	3c048002 	lui	a0,0x8002
cache_estimate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:212

        }
        mgmt_size = slab_mgmt_size(nr_objs);
    }
    *num = nr_objs;
    *remainder = slab_size - nr_objs * objsize - mgmt_size;
80014f60:	70c52002 	mul	a0,a2,a1
80014f64:	01441023 	subu	v0,t2,a0
80014f68:	00494823 	subu	t1,v0,t1
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:240
                    //panic("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    kprintf("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    while (1);
                }
            }
            if (remainder * 8 <= (PGSIZE << order)) {
80014f6c:	000910c0 	sll	v0,t1,0x3
80014f70:	0142502b 	sltu	t2,t2,v0
80014f74:	51400030 	beqzl	t2,80015038 <slab_init+0x204>
80014f78:	00063880 	sll	a3,a2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:226
//   left_over: the size of can not be used area in slab
static void
calculate_slab_order(kmem_cache_t *cachep, size_t objsize_shift, bool off_slab, size_t *left_over) {
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
80014f7c:	26940001 	addiu	s4,s4,1
80014f80:	1690ffec 	bne	s4,s0,80014f34 <slab_init+0x100>
80014f84:	26d60020 	addiu	s6,s6,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:250
                }
                return ;
            }
        }
    }
    panic("calculate_slab_over: failed.");
80014f88:	3c048002 	lui	a0,0x8002
80014f8c:	3c068002 	lui	a2,0x8002
80014f90:	24842f58 	addiu	a0,a0,12120
80014f94:	240500fa 	li	a1,250
80014f98:	0c006afd 	jal	8001abf4 <__panic>
80014f9c:	24c62fe4 	addiu	a2,a2,12260
cache_estimate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:198
    }
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
80014fa0:	8ec60000 	lw	a2,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:199
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80014fa4:	70c52002 	mul	a0,a2,a1
slab_mgmt_size():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:167
}

// slab_mgmt_size - get the size of slab control area (slab_t+num*kmem_bufctl_t)
static size_t
slab_mgmt_size(size_t num) {
    return ROUNDUP_2N(sizeof(slab_t) + num * sizeof(kmem_bufctl_t), ALIGN_SHIFT);
80014fa8:	00064880 	sll	t1,a2,0x2
80014fac:	25290027 	addiu	t1,t1,39
80014fb0:	00094902 	srl	t1,t1,0x4
80014fb4:	00094900 	sll	t1,t1,0x4
cache_estimate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80014fb8:	00891021 	addu	v0,a0,t1
80014fbc:	0142102b 	sltu	v0,t2,v0
80014fc0:	1040000f 	beqz	v0,80015000 <slab_init+0x1cc>
80014fc4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014fc8:	24c8ffff 	addiu	t0,a2,-1
80014fcc:	00061080 	sll	v0,a2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80014fd0:	71052002 	mul	a0,t0,a1
80014fd4:	080053f8 	j	80014fe0 <slab_init+0x1ac>
80014fd8:	24420023 	addiu	v0,v0,35
80014fdc:	2508ffff 	addiu	t0,t0,-1
slab_mgmt_size():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:167
}

// slab_mgmt_size - get the size of slab control area (slab_t+num*kmem_bufctl_t)
static size_t
slab_mgmt_size(size_t num) {
    return ROUNDUP_2N(sizeof(slab_t) + num * sizeof(kmem_bufctl_t), ALIGN_SHIFT);
80014fe0:	00024902 	srl	t1,v0,0x4
80014fe4:	00094900 	sll	t1,t1,0x4
cache_estimate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80014fe8:	00895821 	addu	t3,a0,t1
80014fec:	014b582b 	sltu	t3,t2,t3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:200
            nr_objs --;
80014ff0:	01003021 	move	a2,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80014ff4:	2442fffc 	addiu	v0,v0,-4
80014ff8:	1560fff8 	bnez	t3,80014fdc <slab_init+0x1a8>
80014ffc:	00852023 	subu	a0,a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:202
            nr_objs --;
        }
        if (nr_objs > SLAB_LIMIT) {
80015000:	14d1ffd0 	bne	a2,s1,80014f44 <slab_init+0x110>
80015004:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:205
            nr_objs = SLAB_LIMIT;

                kprintf("found2!\n");
80015008:	0c00798a 	jal	8001e628 <kprintf>
8001500c:	24842f9c 	addiu	a0,a0,12188
80015010:	08005404 	j	80015010 <slab_init+0x1dc>
80015014:	00000000 	nop
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:236
                size_t off_slab_limit = objsize - sizeof(slab_t);
                /* sizeof(kmem_cache_t) == 4 */
                off_slab_limit /= sizeof(kmem_bufctl_t);
                if (num > off_slab_limit) {
                    //panic("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    kprintf("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
80015018:	0c00798a 	jal	8001e628 <kprintf>
8001501c:	24842fa8 	addiu	a0,a0,12200
80015020:	08005408 	j	80015020 <slab_init+0x1ec>
80015024:	00000000 	nop
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015028:	24050020 	li	a1,32
8001502c:	24150005 	li	s5,5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:256
}

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
80015030:	080053c6 	j	80014f18 <slab_init+0xe4>
80015034:	24020005 	li	v0,5
slab_mgmt_size():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:167
}

// slab_mgmt_size - get the size of slab control area (slab_t+num*kmem_bufctl_t)
static size_t
slab_mgmt_size(size_t num) {
    return ROUNDUP_2N(sizeof(slab_t) + num * sizeof(kmem_bufctl_t), ALIGN_SHIFT);
80015038:	24e70027 	addiu	a3,a3,39
8001503c:	00073902 	srl	a3,a3,0x4
calculate_slab_order():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:241
                    kprintf("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    while (1);
                }
            }
            if (remainder * 8 <= (PGSIZE << order)) {
                cachep->num = num;
80015040:	ac660018 	sw	a2,24(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:242
                cachep->page_order = order;
80015044:	ac740024 	sw	s4,36(v1)
init_kmem_cache():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:285

    assert(cachep->num > 0);

    size_t mgmt_size = slab_mgmt_size(cachep->num);

    if (cachep->off_slab && left_over >= mgmt_size) {
80015048:	11c00005 	beqz	t6,80015060 <slab_init+0x22c>
8001504c:	00073900 	sll	a3,a3,0x4
80015050:	0127482b 	sltu	t1,t1,a3
80015054:	1520000f 	bnez	t1,80015094 <slab_init+0x260>
80015058:	2ce20021 	sltiu	v0,a3,33
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:286
        cachep->off_slab = 0;
8001505c:	ac600020 	sw	zero,32(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:294
    if (cachep->off_slab) {
        cachep->offset = 0;
        cachep->slab_cachep = slab_cache + (getorder(mgmt_size) - MIN_SIZE_ORDER);
    }
    else {
        cachep->offset = mgmt_size;
80015060:	ac67001c 	sw	a3,28(v1)
slab_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:121
void
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80015064:	258c0001 	addiu	t4,t4,1
80015068:	1599ff86 	bne	t4,t9,80014e84 <slab_init+0x50>
8001506c:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:125
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
    }
    //check_slab();
}
80015070:	8fb60028 	lw	s6,40(sp)
80015074:	8fb50024 	lw	s5,36(sp)
80015078:	8fb40020 	lw	s4,32(sp)
8001507c:	8fb3001c 	lw	s3,28(sp)
80015080:	8fb20018 	lw	s2,24(sp)
80015084:	8fb10014 	lw	s1,20(sp)
80015088:	8fb00010 	lw	s0,16(sp)
8001508c:	03e00008 	jr	ra
80015090:	27bd0030 	addiu	sp,sp,48
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015094:	1440000b 	bnez	v0,800150c4 <slab_init+0x290>
80015098:	ac60001c 	sw	zero,28(v1)
8001509c:	24040040 	li	a0,64
800150a0:	24020006 	li	v0,6
800150a4:	0087282b 	sltu	a1,a0,a3
800150a8:	50a00009 	beqzl	a1,800150d0 <slab_init+0x29c>
800150ac:	00022080 	sll	a0,v0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
800150b0:	24420001 	addiu	v0,v0,1
800150b4:	144dfffb 	bne	v0,t5,800150a4 <slab_init+0x270>
800150b8:	00042040 	sll	a0,a0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:262
        if (n <= order_size) {
            return order;
        }
    }
    panic("getorder failed. %d\n", n);
800150bc:	080053c0 	j	80014f00 <slab_init+0xcc>
800150c0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
800150c4:	01e01021 	move	v0,t7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:291
        cachep->off_slab = 0;
    }

    if (cachep->off_slab) {
        cachep->offset = 0;
        cachep->slab_cachep = slab_cache + (getorder(mgmt_size) - MIN_SIZE_ORDER);
800150c8:	08005419 	j	80015064 <slab_init+0x230>
800150cc:	ac620028 	sw	v0,40(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
800150d0:	00022900 	sll	a1,v0,0x4
800150d4:	00a42023 	subu	a0,a1,a0
800150d8:	00821023 	subu	v0,a0,v0
800150dc:	00021080 	sll	v0,v0,0x2
800150e0:	2442ff24 	addiu	v0,v0,-220
800150e4:	08005432 	j	800150c8 <slab_init+0x294>
800150e8:	01e21021 	addu	v0,t7,v0

800150ec <kmalloc_init>:
kmalloc_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:128
    }
    //check_slab();
}

inline void 
kmalloc_init(void) {
800150ec:	27bdffe8 	addiu	sp,sp,-24
800150f0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:129
	slab_init();
800150f4:	0c00538d 	jal	80014e34 <slab_init>
800150f8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:131
	kprintf("kmalloc_init() succeeded!\n");
}
800150fc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:130
}

inline void 
kmalloc_init(void) {
	slab_init();
	kprintf("kmalloc_init() succeeded!\n");
80015100:	3c048002 	lui	a0,0x8002
80015104:	24843004 	addiu	a0,a0,12292
80015108:	0800798a 	j	8001e628 <kprintf>
8001510c:	27bd0018 	addiu	sp,sp,24

80015110 <slab_allocated>:
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:135
}

//slab_allocated - summary the total size of allocated objs
size_t
slab_allocated(void) {
80015110:	27bdffe0 	addiu	sp,sp,-32
80015114:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80015118:	40026000 	mfc0	v0,c0_status
8001511c:	30420001 	andi	v0,v0,0x1
80015120:	10400004 	beqz	v0,80015134 <slab_allocated+0x24>
80015124:	00005021 	move	t2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80015128:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001512c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80015130:	240a0001 	li	t2,1
80015134:	3c098015 	lui	t1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:141
    size_t total = 0;
    int i;
    bool intr_flag;
    local_intr_save(intr_flag);
    {
        for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80015138:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:136
}

//slab_allocated - summary the total size of allocated objs
size_t
slab_allocated(void) {
    size_t total = 0;
8001513c:	00001021 	move	v0,zero
80015140:	2529654c 	addiu	t1,t1,25932
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:141
    int i;
    bool intr_flag;
    local_intr_save(intr_flag);
    {
        for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80015144:	2408000d 	li	t0,13
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:142
            kmem_cache_t *cachep = slab_cache + i;
80015148:	00071900 	sll	v1,a3,0x4
8001514c:	00072080 	sll	a0,a3,0x2
80015150:	00642023 	subu	a0,v1,a0
80015154:	00872023 	subu	a0,a0,a3
80015158:	00042080 	sll	a0,a0,0x2
8001515c:	01242021 	addu	a0,t1,a0
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80015160:	8c830004 	lw	v1,4(a0)
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:145
            list_entry_t *list, *le;
            list = le = &(cachep->slabs_full);
            while ((le = list_next(le)) != list) {
80015164:	50830008 	beql	a0,v1,80015188 <slab_allocated+0x78>
80015168:	8c83000c 	lw	v1,12(a0)
8001516c:	8c850018 	lw	a1,24(a0)
80015170:	8c860010 	lw	a2,16(a0)
80015174:	70c52802 	mul	a1,a2,a1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80015178:	8c630004 	lw	v1,4(v1)
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:145
8001517c:	1483fffe 	bne	a0,v1,80015178 <slab_allocated+0x68>
80015180:	00451021 	addu	v0,v0,a1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
80015184:	8c83000c 	lw	v1,12(a0)
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:148
                total += cachep->num * cachep->objsize;
            }
            list = le = &(cachep->slabs_notfull);
80015188:	24850008 	addiu	a1,a0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:149
            while ((le = list_next(le)) != list) {
8001518c:	50a30008 	beql	a1,v1,800151b0 <slab_allocated+0xa0>
80015190:	24e70001 	addiu	a3,a3,1
80015194:	8c860010 	lw	a2,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:151
                slab_t *slabp = le2slab(le, slab_link);
                total += slabp->inuse * cachep->objsize;
80015198:	8c64000c 	lw	a0,12(v1)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8001519c:	8c630004 	lw	v1,4(v1)
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:151
800151a0:	70c45802 	mul	t3,a2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:149
            list = le = &(cachep->slabs_full);
            while ((le = list_next(le)) != list) {
                total += cachep->num * cachep->objsize;
            }
            list = le = &(cachep->slabs_notfull);
            while ((le = list_next(le)) != list) {
800151a4:	14a3fffc 	bne	a1,v1,80015198 <slab_allocated+0x88>
800151a8:	01621021 	addu	v0,t3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:141
    size_t total = 0;
    int i;
    bool intr_flag;
    local_intr_save(intr_flag);
    {
        for (i = 0; i < SLAB_CACHE_NUM; i ++) {
800151ac:	24e70001 	addiu	a3,a3,1
800151b0:	54e8ffe6 	bnel	a3,t0,8001514c <slab_allocated+0x3c>
800151b4:	00071900 	sll	v1,a3,0x4
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800151b8:	11400005 	beqz	t2,800151d0 <slab_allocated+0xc0>
800151bc:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800151c0:	0c006cba 	jal	8001b2e8 <intr_enable>
800151c4:	afa20010 	sw	v0,16(sp)
800151c8:	8fa20010 	lw	v0,16(sp)
slab_allocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:157
            }
        }
    }
    local_intr_restore(intr_flag);
    return total;
}
800151cc:	8fbf001c 	lw	ra,28(sp)
800151d0:	03e00008 	jr	ra
800151d4:	27bd0020 	addiu	sp,sp,32

800151d8 <kallocated>:
kallocated():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:161

inline size_t
kallocated(void) {
   return slab_allocated();
800151d8:	08005444 	j	80015110 <slab_allocated>
800151dc:	00000000 	nop

800151e0 <kmalloc>:
kmalloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:425
}

// kmalloc - simple interface used by outside functions 
//         - to allocate a free memory using kmem_cache_alloc function
void *
kmalloc(size_t size) {
800151e0:	27bdffe8 	addiu	sp,sp,-24
800151e4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:426
    assert(size > 0);
800151e8:	10800020 	beqz	a0,8001526c <kmalloc+0x8c>
800151ec:	00803821 	move	a3,a0
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
800151f0:	2c820021 	sltiu	v0,a0,33
800151f4:	1440001a 	bnez	v0,80015260 <kmalloc+0x80>
800151f8:	24030040 	li	v1,64
800151fc:	24020006 	li	v0,6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80015200:	24050012 	li	a1,18
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
        if (n <= order_size) {
80015204:	0067202b 	sltu	a0,v1,a3
80015208:	5080000a 	beqzl	a0,80015234 <kmalloc+0x54>
8001520c:	00022100 	sll	a0,v0,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80015210:	24420001 	addiu	v0,v0,1
80015214:	1445fffb 	bne	v0,a1,80015204 <kmalloc+0x24>
80015218:	00031840 	sll	v1,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:262
        if (n <= order_size) {
            return order;
        }
    }
    panic("getorder failed. %d\n", n);
8001521c:	3c048002 	lui	a0,0x8002
80015220:	3c068002 	lui	a2,0x8002
80015224:	24842f58 	addiu	a0,a0,12120
80015228:	24050106 	li	a1,262
8001522c:	0c006afd 	jal	8001abf4 <__panic>
80015230:	24c62f84 	addiu	a2,a2,12164
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015234:	00021880 	sll	v1,v0,0x2
80015238:	00831823 	subu	v1,a0,v1
8001523c:	00621023 	subu	v0,v1,v0
80015240:	00021080 	sll	v0,v0,0x2
80015244:	3c048015 	lui	a0,0x8015
80015248:	2442ff24 	addiu	v0,v0,-220
8001524c:	2484654c 	addiu	a0,a0,25932
80015250:	00822021 	addu	a0,a0,v0
kmalloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:432
    size_t order = getorder(size);
    if (order > MAX_SIZE_ORDER) {
        return NULL;
    }
    return kmem_cache_alloc(slab_cache + (order - MIN_SIZE_ORDER));
}
80015254:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:431
    assert(size > 0);
    size_t order = getorder(size);
    if (order > MAX_SIZE_ORDER) {
        return NULL;
    }
    return kmem_cache_alloc(slab_cache + (order - MIN_SIZE_ORDER));
80015258:	080051f2 	j	800147c8 <kmem_cache_alloc>
8001525c:	27bd0018 	addiu	sp,sp,24
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015260:	3c048015 	lui	a0,0x8015
80015264:	08005495 	j	80015254 <kmalloc+0x74>
80015268:	2484654c 	addiu	a0,a0,25932
kmalloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:426

// kmalloc - simple interface used by outside functions 
//         - to allocate a free memory using kmem_cache_alloc function
void *
kmalloc(size_t size) {
    assert(size > 0);
8001526c:	3c048002 	lui	a0,0x8002
80015270:	3c068002 	lui	a2,0x8002
80015274:	3c078002 	lui	a3,0x8002
80015278:	24842f58 	addiu	a0,a0,12120
8001527c:	240501aa 	li	a1,426
80015280:	24c609b0 	addiu	a2,a2,2480
80015284:	0c006afd 	jal	8001abf4 <__panic>
80015288:	24e73020 	addiu	a3,a3,12320

8001528c <kfree>:
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
8001528c:	3c028000 	lui	v0,0x8000
80015290:	24421000 	addiu	v0,v0,4096
kfree():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:501
    local_intr_restore(intr_flag);
}

// kfree - simple interface used by ooutside functions to free an obj
void
kfree(void *objp) {
80015294:	27bdffe8 	addiu	sp,sp,-24
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
80015298:	0082102b 	sltu	v0,a0,v0
kfree():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:501
8001529c:	afbf0014 	sw	ra,20(sp)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
800152a0:	14400012 	bnez	v0,800152ec <kfree+0x60>
800152a4:	00803821 	move	a3,a0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800152a8:	3c028015 	lui	v0,0x8015
800152ac:	8c437770 	lw	v1,30576(v0)
800152b0:	3c027fff 	lui	v0,0x7fff
800152b4:	3442f000 	ori	v0,v0,0xf000
800152b8:	00821021 	addu	v0,a0,v0
800152bc:	00021302 	srl	v0,v0,0xc
800152c0:	0043182b 	sltu	v1,v0,v1
800152c4:	1060000f 	beqz	v1,80015304 <kfree+0x78>
800152c8:	3c038015 	lui	v1,0x8015
kfree():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:502
    kmem_cache_free(GET_PAGE_CACHE(kva2page(objp)), objp);
800152cc:	8c6377bc 	lw	v1,30652(v1)
800152d0:	00021140 	sll	v0,v0,0x5
800152d4:	00802821 	move	a1,a0
800152d8:	00621021 	addu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:503
}
800152dc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/slab.c:502
}

// kfree - simple interface used by ooutside functions to free an obj
void
kfree(void *objp) {
    kmem_cache_free(GET_PAGE_CACHE(kva2page(objp)), objp);
800152e0:	8c440014 	lw	a0,20(v0)
800152e4:	080052bf 	j	80014afc <kmem_cache_free>
800152e8:	27bd0018 	addiu	sp,sp,24
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
800152ec:	3c048002 	lui	a0,0x8002
800152f0:	3c068002 	lui	a2,0x8002
800152f4:	24842564 	addiu	a0,a0,9572
800152f8:	2405006f 	li	a1,111
800152fc:	0c006afd 	jal	8001abf4 <__panic>
80015300:	24c625a8 	addiu	a2,a2,9640
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
80015304:	3c048002 	lui	a0,0x8002
80015308:	3c068002 	lui	a2,0x8002
8001530c:	24842564 	addiu	a0,a0,9572
80015310:	24050063 	li	a1,99
80015314:	0c006afd 	jal	8001abf4 <__panic>
80015318:	24c625cc 	addiu	a2,a2,9676

8001531c <check_compare1>:
check_compare1():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:419
#define rbn2data(node)              \
    (to_struct(node, struct check_data, rb_link))

static inline int check_compare1(rb_node * node1, rb_node * node2)
{
	return rbn2data(node1)->data - rbn2data(node2)->data;
8001531c:	8c82fffc 	lw	v0,-4(a0)
80015320:	8ca3fffc 	lw	v1,-4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:420
}
80015324:	03e00008 	jr	ra
80015328:	00431023 	subu	v0,v0,v1

8001532c <check_compare2>:
check_compare2():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:424

static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
8001532c:	8c82fffc 	lw	v0,-4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:425
}
80015330:	03e00008 	jr	ra
80015334:	00451023 	subu	v0,v0,a1

80015338 <rb_left_rotate>:
rb_left_rotate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:100
    y->_left = x;                                               \
    x->parent = y;                                              \
    assert(!(nil->red));                                        \
}

FUNC_ROTATE(rb_left_rotate, left, right);
80015338:	8c820008 	lw	v0,8(a0)
8001533c:	27bdffe8 	addiu	sp,sp,-24
80015340:	afbf0014 	sw	ra,20(sp)
80015344:	8c840004 	lw	a0,4(a0)
80015348:	10450017 	beq	v0,a1,800153a8 <rb_left_rotate+0x70>
8001534c:	8ca3000c 	lw	v1,12(a1)
80015350:	50a40016 	beql	a1,a0,800153ac <rb_left_rotate+0x74>
80015354:	3c048002 	lui	a0,0x8002
80015358:	50640014 	beql	v1,a0,800153ac <rb_left_rotate+0x74>
8001535c:	3c048002 	lui	a0,0x8002
80015360:	8c620008 	lw	v0,8(v1)
80015364:	10820002 	beq	a0,v0,80015370 <rb_left_rotate+0x38>
80015368:	aca2000c 	sw	v0,12(a1)
8001536c:	ac450004 	sw	a1,4(v0)
80015370:	8ca20004 	lw	v0,4(a1)
80015374:	ac620004 	sw	v0,4(v1)
80015378:	8ca20004 	lw	v0,4(a1)
8001537c:	8c460008 	lw	a2,8(v0)
80015380:	50c50002 	beql	a2,a1,8001538c <rb_left_rotate+0x54>
80015384:	ac430008 	sw	v1,8(v0)
80015388:	ac43000c 	sw	v1,12(v0)
8001538c:	8c820000 	lw	v0,0(a0)
80015390:	ac650008 	sw	a1,8(v1)
80015394:	1440000c 	bnez	v0,800153c8 <rb_left_rotate+0x90>
80015398:	aca30004 	sw	v1,4(a1)
8001539c:	8fbf0014 	lw	ra,20(sp)
800153a0:	03e00008 	jr	ra
800153a4:	27bd0018 	addiu	sp,sp,24
800153a8:	3c048002 	lui	a0,0x8002
800153ac:	3c068002 	lui	a2,0x8002
800153b0:	3c078002 	lui	a3,0x8002
800153b4:	2484302c 	addiu	a0,a0,12332
800153b8:	24050064 	li	a1,100
800153bc:	24c609b0 	addiu	a2,a2,2480
800153c0:	0c006afd 	jal	8001abf4 <__panic>
800153c4:	24e73038 	addiu	a3,a3,12344
800153c8:	3c048002 	lui	a0,0x8002
800153cc:	3c068002 	lui	a2,0x8002
800153d0:	3c078002 	lui	a3,0x8002
800153d4:	2484302c 	addiu	a0,a0,12332
800153d8:	24050064 	li	a1,100
800153dc:	24c609b0 	addiu	a2,a2,2480
800153e0:	0c006afd 	jal	8001abf4 <__panic>
800153e4:	24e73060 	addiu	a3,a3,12384

800153e8 <rb_right_rotate>:
rb_right_rotate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:101
FUNC_ROTATE(rb_right_rotate, right, left);
800153e8:	8c820008 	lw	v0,8(a0)
800153ec:	27bdffe8 	addiu	sp,sp,-24
800153f0:	afbf0014 	sw	ra,20(sp)
800153f4:	8c840004 	lw	a0,4(a0)
800153f8:	10450017 	beq	v0,a1,80015458 <rb_right_rotate+0x70>
800153fc:	8ca30008 	lw	v1,8(a1)
80015400:	50a40016 	beql	a1,a0,8001545c <rb_right_rotate+0x74>
80015404:	3c048002 	lui	a0,0x8002
80015408:	50640014 	beql	v1,a0,8001545c <rb_right_rotate+0x74>
8001540c:	3c048002 	lui	a0,0x8002
80015410:	8c62000c 	lw	v0,12(v1)
80015414:	10820002 	beq	a0,v0,80015420 <rb_right_rotate+0x38>
80015418:	aca20008 	sw	v0,8(a1)
8001541c:	ac450004 	sw	a1,4(v0)
80015420:	8ca20004 	lw	v0,4(a1)
80015424:	ac620004 	sw	v0,4(v1)
80015428:	8ca20004 	lw	v0,4(a1)
8001542c:	8c46000c 	lw	a2,12(v0)
80015430:	50c50002 	beql	a2,a1,8001543c <rb_right_rotate+0x54>
80015434:	ac43000c 	sw	v1,12(v0)
80015438:	ac430008 	sw	v1,8(v0)
8001543c:	8c820000 	lw	v0,0(a0)
80015440:	ac65000c 	sw	a1,12(v1)
80015444:	1440000c 	bnez	v0,80015478 <rb_right_rotate+0x90>
80015448:	aca30004 	sw	v1,4(a1)
8001544c:	8fbf0014 	lw	ra,20(sp)
80015450:	03e00008 	jr	ra
80015454:	27bd0018 	addiu	sp,sp,24
80015458:	3c048002 	lui	a0,0x8002
8001545c:	3c068002 	lui	a2,0x8002
80015460:	3c078002 	lui	a3,0x8002
80015464:	2484302c 	addiu	a0,a0,12332
80015468:	24050065 	li	a1,101
8001546c:	24c609b0 	addiu	a2,a2,2480
80015470:	0c006afd 	jal	8001abf4 <__panic>
80015474:	24e73038 	addiu	a3,a3,12344
80015478:	3c048002 	lui	a0,0x8002
8001547c:	3c068002 	lui	a2,0x8002
80015480:	3c078002 	lui	a3,0x8002
80015484:	2484302c 	addiu	a0,a0,12332
80015488:	24050065 	li	a1,101
8001548c:	24c609b0 	addiu	a2,a2,2480
80015490:	0c006afd 	jal	8001abf4 <__panic>
80015494:	24e73060 	addiu	a3,a3,12384

80015498 <check_safe_kmalloc>:
check_safe_kmalloc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:403
	}
	return hb;
}

static void *check_safe_kmalloc(size_t size)
{
80015498:	27bdffe8 	addiu	sp,sp,-24
8001549c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:404
	void *ret = kmalloc(size);
800154a0:	0c005478 	jal	800151e0 <kmalloc>
800154a4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:405
	assert(ret != NULL);
800154a8:	10400003 	beqz	v0,800154b8 <check_safe_kmalloc+0x20>
800154ac:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:407
	return ret;
}
800154b0:	03e00008 	jr	ra
800154b4:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:405
}

static void *check_safe_kmalloc(size_t size)
{
	void *ret = kmalloc(size);
	assert(ret != NULL);
800154b8:	3c048002 	lui	a0,0x8002
800154bc:	3c068002 	lui	a2,0x8002
800154c0:	3c078002 	lui	a3,0x8002
800154c4:	2484302c 	addiu	a0,a0,12332
800154c8:	24050195 	li	a1,405
800154cc:	24c609b0 	addiu	a2,a2,2480
800154d0:	0c006afd 	jal	8001abf4 <__panic>
800154d4:	24e7306c 	addiu	a3,a3,12396

800154d8 <rb_tree_create>:
rb_tree_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:30
 * Note that, root->left should always point to the node that is the root
 * of the tree. And nil points to a 'NULL' node which should always be
 * black and may have arbitrary children and parent node.
 * */
rb_tree *rb_tree_create(int (*compare) (rb_node * node1, rb_node * node2))
{
800154d8:	27bdffe0 	addiu	sp,sp,-32
800154dc:	afb00014 	sw	s0,20(sp)
800154e0:	afbf001c 	sw	ra,28(sp)
800154e4:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:31
	assert(compare != NULL);
800154e8:	10800024 	beqz	a0,8001557c <rb_tree_create+0xa4>
800154ec:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:36

	rb_tree *tree;
	rb_node *nil, *root;

	if ((tree = kmalloc(sizeof(rb_tree))) == NULL) {
800154f0:	0c005478 	jal	800151e0 <kmalloc>
800154f4:	2404000c 	li	a0,12
800154f8:	10400014 	beqz	v0,8001554c <rb_tree_create+0x74>
800154fc:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:40
		goto bad_tree;
	}

	tree->compare = compare;
80015500:	ac500000 	sw	s0,0(v0)
rb_node_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:11
#include <assert.h>

/* rb_node_create - create a new rb_node */
static inline rb_node *rb_node_create(void)
{
	return kmalloc(sizeof(rb_node));
80015504:	0c005478 	jal	800151e0 <kmalloc>
80015508:	24040010 	li	a0,16
rb_tree_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:42
		goto bad_tree;
	}

	tree->compare = compare;

	if ((nil = rb_node_create()) == NULL) {
8001550c:	10400017 	beqz	v0,8001556c <rb_tree_create+0x94>
80015510:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:46
		goto bad_node_cleanup_tree;
	}

	nil->parent = nil->left = nil->right = nil;
80015514:	ac42000c 	sw	v0,12(v0)
80015518:	ac420008 	sw	v0,8(v0)
8001551c:	ac420004 	sw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:47
	nil->red = 0;
80015520:	ac400000 	sw	zero,0(v0)
rb_node_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:11
#include <assert.h>

/* rb_node_create - create a new rb_node */
static inline rb_node *rb_node_create(void)
{
	return kmalloc(sizeof(rb_node));
80015524:	24040010 	li	a0,16
80015528:	0c005478 	jal	800151e0 <kmalloc>
8001552c:	ae220004 	sw	v0,4(s1)
rb_tree_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:50

	nil->parent = nil->left = nil->right = nil;
	nil->red = 0;
	tree->nil = nil;

	if ((root = rb_node_create()) == NULL) {
80015530:	1040000c 	beqz	v0,80015564 <rb_tree_create+0x8c>
80015534:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:54
		goto bad_node_cleanup_nil;
	}

	root->parent = root->left = root->right = nil;
80015538:	ac50000c 	sw	s0,12(v0)
8001553c:	ac500008 	sw	s0,8(v0)
80015540:	ac500004 	sw	s0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:55
	root->red = 0;
80015544:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:56
	tree->root = root;
80015548:	ae220008 	sw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:65
	kfree(nil);
bad_node_cleanup_tree:
	kfree(tree);
bad_tree:
	return NULL;
}
8001554c:	8fbf001c 	lw	ra,28(sp)
80015550:	02201021 	move	v0,s1
80015554:	8fb00014 	lw	s0,20(sp)
80015558:	8fb10018 	lw	s1,24(sp)
8001555c:	03e00008 	jr	ra
80015560:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:60
	root->red = 0;
	tree->root = root;
	return tree;

bad_node_cleanup_nil:
	kfree(nil);
80015564:	0c0054a3 	jal	8001528c <kfree>
80015568:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:62
bad_node_cleanup_tree:
	kfree(tree);
8001556c:	0c0054a3 	jal	8001528c <kfree>
80015570:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:64
bad_tree:
	return NULL;
80015574:	08005553 	j	8001554c <rb_tree_create+0x74>
80015578:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:31
 * of the tree. And nil points to a 'NULL' node which should always be
 * black and may have arbitrary children and parent node.
 * */
rb_tree *rb_tree_create(int (*compare) (rb_node * node1, rb_node * node2))
{
	assert(compare != NULL);
8001557c:	3c048002 	lui	a0,0x8002
80015580:	3c068002 	lui	a2,0x8002
80015584:	3c078002 	lui	a3,0x8002
80015588:	2484302c 	addiu	a0,a0,12332
8001558c:	2405001f 	li	a1,31
80015590:	24c609b0 	addiu	a2,a2,2480
80015594:	0c006afd 	jal	8001abf4 <__panic>
80015598:	24e73078 	addiu	a3,a3,12408

8001559c <rb_insert>:
rb_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
8001559c:	27bdffd8 	addiu	sp,sp,-40
800155a0:	afb40020 	sw	s4,32(sp)
rb_insert_binary():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:115
 * a regular binary tree. This function is only intended to be called
 * by function rb_insert.
 * */
static inline void rb_insert_binary(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;
800155a4:	8c940004 	lw	s4,4(a0)
rb_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
800155a8:	afb00010 	sw	s0,16(sp)
rb_insert_binary():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:115
 * a regular binary tree. This function is only intended to be called
 * by function rb_insert.
 * */
static inline void rb_insert_binary(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;
800155ac:	8c900008 	lw	s0,8(a0)
rb_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
800155b0:	afb3001c 	sw	s3,28(sp)
800155b4:	afb20018 	sw	s2,24(sp)
800155b8:	afb10014 	sw	s1,20(sp)
800155bc:	afbf0024 	sw	ra,36(sp)
rb_insert_binary():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:117
 * */
static inline void rb_insert_binary(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
800155c0:	acb40008 	sw	s4,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:118
	y = root, x = y->left;
800155c4:	8e110008 	lw	s1,8(s0)
rb_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
800155c8:	00809021 	move	s2,a0
800155cc:	00a09821 	move	s3,a1
rb_insert_binary():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:119
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
	y = root, x = y->left;
	while (x != nil) {
800155d0:	12910066 	beq	s4,s1,8001576c <rb_insert+0x1d0>
800155d4:	acb4000c 	sw	s4,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:121
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
800155d8:	8e420000 	lw	v0,0(s2)
800155dc:	02202021 	move	a0,s1
800155e0:	0040f809 	jalr	v0
800155e4:	02602821 	move	a1,s3
800155e8:	5840000c 	blezl	v0,8001561c <rb_insert+0x80>
800155ec:	8e22000c 	lw	v0,12(s1)
800155f0:	8e220008 	lw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:119
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
	y = root, x = y->left;
	while (x != nil) {
800155f4:	1282000b 	beq	s4,v0,80015624 <rb_insert+0x88>
800155f8:	00000000 	nop
800155fc:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:121
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
80015600:	8e420000 	lw	v0,0(s2)
80015604:	02202021 	move	a0,s1
80015608:	0040f809 	jalr	v0
8001560c:	02602821 	move	a1,s3
80015610:	5c40fff8 	bgtzl	v0,800155f4 <rb_insert+0x58>
80015614:	8e220008 	lw	v0,8(s1)
80015618:	8e22000c 	lw	v0,12(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:119
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
	y = root, x = y->left;
	while (x != nil) {
8001561c:	5682fff8 	bnel	s4,v0,80015600 <rb_insert+0x64>
80015620:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:124
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
	}
	z->parent = y;
	if (y == root || COMPARE(tree, y, z) > 0) {
80015624:	12110007 	beq	s0,s1,80015644 <rb_insert+0xa8>
80015628:	ae710004 	sw	s1,4(s3)
8001562c:	8e420000 	lw	v0,0(s2)
80015630:	02202021 	move	a0,s1
80015634:	0040f809 	jalr	v0
80015638:	02602821 	move	a1,s3
8001563c:	18400049 	blez	v0,80015764 <rb_insert+0x1c8>
80015640:	8e700004 	lw	s0,4(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:125
		y->left = z;
80015644:	ae330008 	sw	s3,8(s1)
rb_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:135

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
	rb_insert_binary(tree, node);
	node->red = 1;
80015648:	24020001 	li	v0,1
8001564c:	ae620000 	sw	v0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:159
            x->parent->parent->red = 1;                         \
            rb_##_right##_rotate(tree, x->parent->parent);      \
        }                                                       \
    } while (0)

	while (x->parent->red) {
80015650:	8e020000 	lw	v0,0(s0)
80015654:	10400012 	beqz	v0,800156a0 <rb_insert+0x104>
80015658:	24110001 	li	s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:160
		if (x->parent == x->parent->parent->left) {
8001565c:	8e050004 	lw	a1,4(s0)
80015660:	8ca20008 	lw	v0,8(a1)
80015664:	50500027 	beql	v0,s0,80015704 <rb_insert+0x168>
80015668:	8ca3000c 	lw	v1,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:163
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
8001566c:	8c430000 	lw	v1,0(v0)
80015670:	5060001c 	beqzl	v1,800156e4 <rb_insert+0x148>
80015674:	8e020008 	lw	v0,8(s0)
80015678:	8e630004 	lw	v1,4(s3)
8001567c:	00a09821 	move	s3,a1
80015680:	ae000000 	sw	zero,0(s0)
80015684:	8c630004 	lw	v1,4(v1)
80015688:	8e700004 	lw	s0,4(s3)
8001568c:	ac400000 	sw	zero,0(v0)
80015690:	ac710000 	sw	s1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:159
            x->parent->parent->red = 1;                         \
            rb_##_right##_rotate(tree, x->parent->parent);      \
        }                                                       \
    } while (0)

	while (x->parent->red) {
80015694:	8e020000 	lw	v0,0(s0)
80015698:	5440fff1 	bnezl	v0,80015660 <rb_insert+0xc4>
8001569c:	8e050004 	lw	a1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:166
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
		}
	}
	tree->root->left->red = 0;
800156a0:	8e420008 	lw	v0,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:167
	assert(!(tree->nil->red) && !(tree->root->red));
800156a4:	8e430004 	lw	v1,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:166
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
		}
	}
	tree->root->left->red = 0;
800156a8:	8c440008 	lw	a0,8(v0)
800156ac:	ac800000 	sw	zero,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:167
	assert(!(tree->nil->red) && !(tree->root->red));
800156b0:	8c630000 	lw	v1,0(v1)
800156b4:	54600037 	bnezl	v1,80015794 <rb_insert+0x1f8>
800156b8:	3c048002 	lui	a0,0x8002
800156bc:	8c420000 	lw	v0,0(v0)
800156c0:	14400033 	bnez	v0,80015790 <rb_insert+0x1f4>
800156c4:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:170

#undef RB_INSERT_SUB
}
800156c8:	8fb40020 	lw	s4,32(sp)
800156cc:	8fb3001c 	lw	s3,28(sp)
800156d0:	8fb20018 	lw	s2,24(sp)
800156d4:	8fb10014 	lw	s1,20(sp)
800156d8:	8fb00010 	lw	s0,16(sp)
800156dc:	03e00008 	jr	ra
800156e0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:163

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
800156e4:	50530018 	beql	v0,s3,80015748 <rb_insert+0x1ac>
800156e8:	02002821 	move	a1,s0
800156ec:	ae000000 	sw	zero,0(s0)
800156f0:	02402021 	move	a0,s2
800156f4:	0c0054ce 	jal	80015338 <rb_left_rotate>
800156f8:	acb10000 	sw	s1,0(a1)
800156fc:	080055a5 	j	80015694 <rb_insert+0xf8>
80015700:	8e700004 	lw	s0,4(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:161
        }                                                       \
    } while (0)

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
80015704:	8c640000 	lw	a0,0(v1)
80015708:	50800007 	beqzl	a0,80015728 <rb_insert+0x18c>
8001570c:	8e03000c 	lw	v1,12(s0)
80015710:	00a09821 	move	s3,a1
80015714:	ae000000 	sw	zero,0(s0)
80015718:	ac600000 	sw	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:163
		} else {
			RB_INSERT_SUB(right, left);
8001571c:	8e700004 	lw	s0,4(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:161
        }                                                       \
    } while (0)

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
80015720:	080055a5 	j	80015694 <rb_insert+0xf8>
80015724:	acb10000 	sw	s1,0(a1)
80015728:	50730013 	beql	v1,s3,80015778 <rb_insert+0x1dc>
8001572c:	02002821 	move	a1,s0
80015730:	ac400000 	sw	zero,0(v0)
80015734:	02402021 	move	a0,s2
80015738:	0c0054fa 	jal	800153e8 <rb_right_rotate>
8001573c:	acb10000 	sw	s1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:163
		} else {
			RB_INSERT_SUB(right, left);
80015740:	080055a5 	j	80015694 <rb_insert+0xf8>
80015744:	8e700004 	lw	s0,4(s3)
80015748:	0c0054fa 	jal	800153e8 <rb_right_rotate>
8001574c:	02402021 	move	a0,s2
80015750:	8e020004 	lw	v0,4(s0)
80015754:	02009821 	move	s3,s0
80015758:	8c450004 	lw	a1,4(v0)
8001575c:	080055bb 	j	800156ec <rb_insert+0x150>
80015760:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:127
	}
	z->parent = y;
	if (y == root || COMPARE(tree, y, z) > 0) {
		y->left = z;
	} else {
		y->right = z;
80015764:	08005592 	j	80015648 <rb_insert+0xac>
80015768:	ae33000c 	sw	s3,12(s1)
rb_insert_binary():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:123
	y = root, x = y->left;
	while (x != nil) {
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
	}
	z->parent = y;
8001576c:	acb00004 	sw	s0,4(a1)
80015770:	08005591 	j	80015644 <rb_insert+0xa8>
80015774:	02008821 	move	s1,s0
rb_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:161
        }                                                       \
    } while (0)

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
80015778:	0c0054ce 	jal	80015338 <rb_left_rotate>
8001577c:	02402021 	move	a0,s2
80015780:	8e020004 	lw	v0,4(s0)
80015784:	02009821 	move	s3,s0
80015788:	080055cc 	j	80015730 <rb_insert+0x194>
8001578c:	8c450004 	lw	a1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:167
		} else {
			RB_INSERT_SUB(right, left);
		}
	}
	tree->root->left->red = 0;
	assert(!(tree->nil->red) && !(tree->root->red));
80015790:	3c048002 	lui	a0,0x8002
80015794:	3c068002 	lui	a2,0x8002
80015798:	3c078002 	lui	a3,0x8002
8001579c:	2484302c 	addiu	a0,a0,12332
800157a0:	240500a7 	li	a1,167
800157a4:	24c609b0 	addiu	a2,a2,2480
800157a8:	0c006afd 	jal	8001abf4 <__panic>
800157ac:	24e73088 	addiu	a3,a3,12424

800157b0 <rb_search>:
rb_search():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:231
 * the functions returns the one highest in the tree.
 * */
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
	rb_node *nil = tree->nil, *node = tree->root->left;
800157b0:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:230
 * function @compare). If there're multiple nodes with value 'equal' to @key,
 * the functions returns the one highest in the tree.
 * */
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
800157b4:	27bdffd8 	addiu	sp,sp,-40
800157b8:	afb10018 	sw	s1,24(sp)
800157bc:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:231
	rb_node *nil = tree->nil, *node = tree->root->left;
800157c0:	8c910004 	lw	s1,4(a0)
800157c4:	8c500008 	lw	s0,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:230
 * function @compare). If there're multiple nodes with value 'equal' to @key,
 * the functions returns the one highest in the tree.
 * */
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
800157c8:	afb30020 	sw	s3,32(sp)
800157cc:	afb2001c 	sw	s2,28(sp)
800157d0:	afbf0024 	sw	ra,36(sp)
800157d4:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:233
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
800157d8:	1230000b 	beq	s1,s0,80015808 <rb_search+0x58>
800157dc:	00c09821 	move	s3,a2
800157e0:	02002021 	move	a0,s0
800157e4:	0240f809 	jalr	s2
800157e8:	02602821 	move	a1,s3
800157ec:	10400013 	beqz	v0,8001583c <rb_search+0x8c>
800157f0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:234
		node = (r > 0) ? node->left : node->right;
800157f4:	5840000d 	blezl	v0,8001582c <rb_search+0x7c>
800157f8:	8e10000c 	lw	s0,12(s0)
800157fc:	8e100008 	lw	s0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:233
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
80015800:	1611fff8 	bne	s0,s1,800157e4 <rb_search+0x34>
80015804:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:237
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
}
80015808:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:236
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
8001580c:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:237
}
80015810:	02001021 	move	v0,s0
80015814:	8fb30020 	lw	s3,32(sp)
80015818:	8fb2001c 	lw	s2,28(sp)
8001581c:	8fb10018 	lw	s1,24(sp)
80015820:	8fb00014 	lw	s0,20(sp)
80015824:	03e00008 	jr	ra
80015828:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:233
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
8001582c:	1611ffed 	bne	s0,s1,800157e4 <rb_search+0x34>
80015830:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:237
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
}
80015834:	08005603 	j	8001580c <rb_search+0x5c>
80015838:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:236
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
8001583c:	02308826 	xor	s1,s1,s0
80015840:	0011800a 	movz	s0,zero,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:237
}
80015844:	02001021 	move	v0,s0
80015848:	8fb30020 	lw	s3,32(sp)
8001584c:	8fb2001c 	lw	s2,28(sp)
80015850:	8fb10018 	lw	s1,24(sp)
80015854:	8fb00014 	lw	s0,20(sp)
80015858:	03e00008 	jr	ra
8001585c:	27bd0028 	addiu	sp,sp,40

80015860 <rb_delete>:
rb_delete():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:292
/* *
 * rb_delete - deletes @node from @tree, and calls rb_delete_fixup to
 * restore red-black properties.
 * */
void rb_delete(rb_tree * tree, rb_node * node)
{
80015860:	27bdffd8 	addiu	sp,sp,-40
80015864:	afb10018 	sw	s1,24(sp)
80015868:	afb00014 	sw	s0,20(sp)
8001586c:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:296
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
80015870:	8cb00008 	lw	s0,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:294
 * restore red-black properties.
 * */
void rb_delete(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;
80015874:	8c840004 	lw	a0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:292
/* *
 * rb_delete - deletes @node from @tree, and calls rb_delete_fixup to
 * restore red-black properties.
 * */
void rb_delete(rb_tree * tree, rb_node * node)
{
80015878:	afbf0024 	sw	ra,36(sp)
8001587c:	afb30020 	sw	s3,32(sp)
80015880:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:297
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
80015884:	12040094 	beq	s0,a0,80015ad8 <rb_delete+0x278>
80015888:	8e260008 	lw	a2,8(s1)
8001588c:	8ca3000c 	lw	v1,12(a1)
80015890:	10640006 	beq	v1,a0,800158ac <rb_delete+0x4c>
80015894:	00a01021 	move	v0,a1
rb_tree_successor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:182
static inline rb_node *rb_tree_successor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;

	if ((y = x->right) != nil) {
		while (y->left != nil) {
80015898:	8c620008 	lw	v0,8(v1)
8001589c:	5482fffe 	bnel	a0,v0,80015898 <rb_delete+0x38>
800158a0:	00401821 	move	v1,v0
800158a4:	00601021 	move	v0,v1
rb_delete():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:298
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
	x = (y->left != nil) ? y->left : y->right;
800158a8:	8c50000c 	lw	s0,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:300

	assert(y != root && y != nil);
800158ac:	5046008f 	beql	v0,a2,80015aec <rb_delete+0x28c>
800158b0:	3c048002 	lui	a0,0x8002
800158b4:	1044008d 	beq	v0,a0,80015aec <rb_delete+0x28c>
800158b8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:302

	x->parent = y->parent;
800158bc:	8c430004 	lw	v1,4(v0)
800158c0:	ae030004 	sw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:303
	if (y == y->parent->left) {
800158c4:	8c430004 	lw	v1,4(v0)
800158c8:	8c640008 	lw	a0,8(v1)
800158cc:	50440002 	beql	v0,a0,800158d8 <rb_delete+0x78>
800158d0:	ac700008 	sw	s0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:306
		y->parent->left = x;
	} else {
		y->parent->right = x;
800158d4:	ac70000c 	sw	s0,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:311
	}

	bool need_fixup = !(y->red);

	if (y != z) {
800158d8:	10450010 	beq	v0,a1,8001591c <rb_delete+0xbc>
800158dc:	8c470000 	lw	a3,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:312
		if (z == z->parent->left) {
800158e0:	8ca30004 	lw	v1,4(a1)
800158e4:	8c640008 	lw	a0,8(v1)
800158e8:	50a40002 	beql	a1,a0,800158f4 <rb_delete+0x94>
800158ec:	ac620008 	sw	v0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:315
			z->parent->left = y;
		} else {
			z->parent->right = y;
800158f0:	ac62000c 	sw	v0,12(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:317
		}
		z->left->parent = z->right->parent = y;
800158f4:	8ca40008 	lw	a0,8(a1)
800158f8:	8ca3000c 	lw	v1,12(a1)
800158fc:	ac620004 	sw	v0,4(v1)
80015900:	ac820004 	sw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:318
		*y = *z;
80015904:	8ca80000 	lw	t0,0(a1)
80015908:	8ca50004 	lw	a1,4(a1)
8001590c:	ac440008 	sw	a0,8(v0)
80015910:	ac480000 	sw	t0,0(v0)
80015914:	ac450004 	sw	a1,4(v0)
80015918:	ac43000c 	sw	v1,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:320
	}
	if (need_fixup) {
8001591c:	10e00007 	beqz	a3,8001593c <rb_delete+0xdc>
80015920:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:323
		rb_delete_fixup(tree, x);
	}
}
80015924:	8fb30020 	lw	s3,32(sp)
80015928:	8fb2001c 	lw	s2,28(sp)
8001592c:	8fb10018 	lw	s1,24(sp)
80015930:	8fb00014 	lw	s0,20(sp)
80015934:	03e00008 	jr	ra
80015938:	27bd0028 	addiu	sp,sp,40
rb_delete_fixup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:245
 * rb_delete_fixup - performs rotations and changes colors to restore
 * red-black properties after a node is deleted.
 * */
static void rb_delete_fixup(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *w, *root = tree->root->left;
8001593c:	8cd30008 	lw	s3,8(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:275
            rb_##_left##_rotate(tree, x->parent);               \
            x = root;                                           \
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
80015940:	52130026 	beql	s0,s3,800159dc <rb_delete+0x17c>
80015944:	ae600000 	sw	zero,0(s3)
80015948:	8e020000 	lw	v0,0(s0)
8001594c:	14400065 	bnez	v0,80015ae4 <rb_delete+0x284>
80015950:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:276
		if (x == x->parent->left) {
80015954:	08005661 	j	80015984 <rb_delete+0x124>
80015958:	8e040004 	lw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:279
			RB_DELETE_FIXUP_SUB(left, right);
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
8001595c:	8c650000 	lw	a1,0(v1)
80015960:	54a00016 	bnezl	a1,800159bc <rb_delete+0x15c>
80015964:	8e060004 	lw	a2,4(s0)
80015968:	ac520000 	sw	s2,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:275
            rb_##_left##_rotate(tree, x->parent);               \
            x = root;                                           \
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
8001596c:	1093001a 	beq	a0,s3,800159d8 <rb_delete+0x178>
80015970:	00808021 	move	s0,a0
80015974:	8c820000 	lw	v0,0(a0)
80015978:	54400017 	bnezl	v0,800159d8 <rb_delete+0x178>
8001597c:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:276
		if (x == x->parent->left) {
80015980:	8e040004 	lw	a0,4(s0)
80015984:	8c820008 	lw	v0,8(a0)
80015988:	5202002b 	beql	s0,v0,80015a38 <rb_delete+0x1d8>
8001598c:	8c82000c 	lw	v0,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:279
			RB_DELETE_FIXUP_SUB(left, right);
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
80015990:	8c430000 	lw	v1,0(v0)
80015994:	54600021 	bnezl	v1,80015a1c <rb_delete+0x1bc>
80015998:	ac400000 	sw	zero,0(v0)
8001599c:	8c45000c 	lw	a1,12(v0)
800159a0:	8ca30000 	lw	v1,0(a1)
800159a4:	1060ffed 	beqz	v1,8001595c <rb_delete+0xfc>
800159a8:	8c430008 	lw	v1,8(v0)
800159ac:	8c640000 	lw	a0,0(v1)
800159b0:	50800011 	beqzl	a0,800159f8 <rb_delete+0x198>
800159b4:	24030001 	li	v1,1
800159b8:	8e060004 	lw	a2,4(s0)
800159bc:	8cc70000 	lw	a3,0(a2)
800159c0:	02202021 	move	a0,s1
800159c4:	00c02821 	move	a1,a2
800159c8:	ac470000 	sw	a3,0(v0)
800159cc:	acc00000 	sw	zero,0(a2)
800159d0:	0c0054fa 	jal	800153e8 <rb_right_rotate>
800159d4:	ac600000 	sw	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:282
		}
	}
	x->red = 0;
800159d8:	ae600000 	sw	zero,0(s3)
rb_delete():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:323
		*y = *z;
	}
	if (need_fixup) {
		rb_delete_fixup(tree, x);
	}
}
800159dc:	8fbf0024 	lw	ra,36(sp)
800159e0:	8fb30020 	lw	s3,32(sp)
800159e4:	8fb2001c 	lw	s2,28(sp)
800159e8:	8fb10018 	lw	s1,24(sp)
800159ec:	8fb00014 	lw	s0,20(sp)
800159f0:	03e00008 	jr	ra
800159f4:	27bd0028 	addiu	sp,sp,40
rb_delete_fixup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:279

	while (x != root && !x->red) {
		if (x == x->parent->left) {
			RB_DELETE_FIXUP_SUB(left, right);
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
800159f8:	aca00000 	sw	zero,0(a1)
800159fc:	02202021 	move	a0,s1
80015a00:	ac430000 	sw	v1,0(v0)
80015a04:	0c0054ce 	jal	80015338 <rb_left_rotate>
80015a08:	00402821 	move	a1,v0
80015a0c:	8e060004 	lw	a2,4(s0)
80015a10:	8cc20008 	lw	v0,8(a2)
80015a14:	0800566f 	j	800159bc <rb_delete+0x15c>
80015a18:	8c430008 	lw	v1,8(v0)
80015a1c:	00802821 	move	a1,a0
80015a20:	ac920000 	sw	s2,0(a0)
80015a24:	0c0054fa 	jal	800153e8 <rb_right_rotate>
80015a28:	02202021 	move	a0,s1
80015a2c:	8e040004 	lw	a0,4(s0)
80015a30:	08005667 	j	8001599c <rb_delete+0x13c>
80015a34:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:277
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
		if (x == x->parent->left) {
			RB_DELETE_FIXUP_SUB(left, right);
80015a38:	8c430000 	lw	v1,0(v0)
80015a3c:	5460001f 	bnezl	v1,80015abc <rb_delete+0x25c>
80015a40:	ac400000 	sw	zero,0(v0)
80015a44:	8c450008 	lw	a1,8(v0)
80015a48:	8ca30000 	lw	v1,0(a1)
80015a4c:	1460000e 	bnez	v1,80015a88 <rb_delete+0x228>
80015a50:	8c43000c 	lw	v1,12(v0)
80015a54:	8c650000 	lw	a1,0(v1)
80015a58:	50a0ffc4 	beqzl	a1,8001596c <rb_delete+0x10c>
80015a5c:	ac520000 	sw	s2,0(v0)
80015a60:	8e060004 	lw	a2,4(s0)
80015a64:	8cc70000 	lw	a3,0(a2)
80015a68:	02202021 	move	a0,s1
80015a6c:	00c02821 	move	a1,a2
80015a70:	ac470000 	sw	a3,0(v0)
80015a74:	acc00000 	sw	zero,0(a2)
80015a78:	0c0054ce 	jal	80015338 <rb_left_rotate>
80015a7c:	ac600000 	sw	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:282
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
		}
	}
	x->red = 0;
80015a80:	08005677 	j	800159dc <rb_delete+0x17c>
80015a84:	ae600000 	sw	zero,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:277
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
		if (x == x->parent->left) {
			RB_DELETE_FIXUP_SUB(left, right);
80015a88:	8c640000 	lw	a0,0(v1)
80015a8c:	5480fff5 	bnezl	a0,80015a64 <rb_delete+0x204>
80015a90:	8e060004 	lw	a2,4(s0)
80015a94:	24030001 	li	v1,1
80015a98:	aca00000 	sw	zero,0(a1)
80015a9c:	02202021 	move	a0,s1
80015aa0:	ac430000 	sw	v1,0(v0)
80015aa4:	0c0054fa 	jal	800153e8 <rb_right_rotate>
80015aa8:	00402821 	move	a1,v0
80015aac:	8e060004 	lw	a2,4(s0)
80015ab0:	8cc2000c 	lw	v0,12(a2)
80015ab4:	08005699 	j	80015a64 <rb_delete+0x204>
80015ab8:	8c43000c 	lw	v1,12(v0)
80015abc:	00802821 	move	a1,a0
80015ac0:	ac920000 	sw	s2,0(a0)
80015ac4:	0c0054ce 	jal	80015338 <rb_left_rotate>
80015ac8:	02202021 	move	a0,s1
80015acc:	8e040004 	lw	a0,4(s0)
80015ad0:	08005691 	j	80015a44 <rb_delete+0x1e4>
80015ad4:	8c82000c 	lw	v0,12(a0)
rb_delete():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:297
{
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
80015ad8:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:298
	x = (y->left != nil) ? y->left : y->right;
80015adc:	0800562b 	j	800158ac <rb_delete+0x4c>
80015ae0:	8c50000c 	lw	s0,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:275
            rb_##_left##_rotate(tree, x->parent);               \
            x = root;                                           \
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
80015ae4:	08005676 	j	800159d8 <rb_delete+0x178>
80015ae8:	02009821 	move	s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:300

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
	x = (y->left != nil) ? y->left : y->right;

	assert(y != root && y != nil);
80015aec:	3c068002 	lui	a2,0x8002
80015af0:	3c078002 	lui	a3,0x8002
80015af4:	2484302c 	addiu	a0,a0,12332
80015af8:	2405012c 	li	a1,300
80015afc:	24c609b0 	addiu	a2,a2,2480
80015b00:	0c006afd 	jal	8001abf4 <__panic>
80015b04:	24e730b0 	addiu	a3,a3,12464

80015b08 <rb_tree_destroy>:
rb_tree_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:327
	}
}

/* rb_tree_destroy - destroy a tree and free memory */
void rb_tree_destroy(rb_tree * tree)
{
80015b08:	27bdffe8 	addiu	sp,sp,-24
80015b0c:	afb00010 	sw	s0,16(sp)
80015b10:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:328
	kfree(tree->root);
80015b14:	8c840008 	lw	a0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:327
	}
}

/* rb_tree_destroy - destroy a tree and free memory */
void rb_tree_destroy(rb_tree * tree)
{
80015b18:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:328
	kfree(tree->root);
80015b1c:	0c0054a3 	jal	8001528c <kfree>
80015b20:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:329
	kfree(tree->nil);
80015b24:	0c0054a3 	jal	8001528c <kfree>
80015b28:	8e040004 	lw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:330
	kfree(tree);
80015b2c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:331
}
80015b30:	8fbf0014 	lw	ra,20(sp)
80015b34:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:330
/* rb_tree_destroy - destroy a tree and free memory */
void rb_tree_destroy(rb_tree * tree)
{
	kfree(tree->root);
	kfree(tree->nil);
	kfree(tree);
80015b38:	080054a3 	j	8001528c <kfree>
80015b3c:	27bd0018 	addiu	sp,sp,24

80015b40 <rb_node_prev>:
rb_tree_predecessor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:204
 * rb_tree_predecessor - returns the predecessor of @node, or nil
 * if no predecessor exists, likes rb_tree_successor.
 * */
static inline rb_node *rb_tree_predecessor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;
80015b40:	8c860004 	lw	a2,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:206

	if ((y = x->left) != nil) {
80015b44:	8ca20008 	lw	v0,8(a1)
80015b48:	54c20004 	bnel	a2,v0,80015b5c <rb_node_prev+0x1c>
80015b4c:	8c43000c 	lw	v1,12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:212
		while (y->right != nil) {
			y = y->right;
		}
		return y;
	} else {
		y = x->parent;
80015b50:	080056dc 	j	80015b70 <rb_node_prev+0x30>
80015b54:	8ca30004 	lw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:207
static inline rb_node *rb_tree_predecessor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;

	if ((y = x->left) != nil) {
		while (y->right != nil) {
80015b58:	8c43000c 	lw	v1,12(v0)
80015b5c:	54c3fffe 	bnel	a2,v1,80015b58 <rb_node_prev+0x18>
80015b60:	00601021 	move	v0,v1
rb_node_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:340
 * or 'NULL' if no predecessor exists.
 * */
rb_node *rb_node_prev(rb_tree * tree, rb_node * node)
{
	rb_node *prev = rb_tree_predecessor(tree, node);
	return (prev != tree->nil) ? prev : NULL;
80015b64:	00c23026 	xor	a2,a2,v0
80015b68:	03e00008 	jr	ra
80015b6c:	0006100a 	movz	v0,zero,a2
rb_tree_predecessor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:213
			y = y->right;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->left) {
80015b70:	8c620008 	lw	v0,8(v1)
80015b74:	14a2fffb 	bne	a1,v0,80015b64 <rb_node_prev+0x24>
80015b78:	00601021 	move	v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:214
			if (y == tree->root) {
80015b7c:	8c850008 	lw	a1,8(a0)
80015b80:	14650005 	bne	v1,a1,80015b98 <rb_node_prev+0x58>
80015b84:	00001021 	move	v0,zero
80015b88:	080056ee 	j	80015bb8 <rb_node_prev+0x78>
80015b8c:	00000000 	nop
80015b90:	10450007 	beq	v0,a1,80015bb0 <rb_node_prev+0x70>
80015b94:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:217
				return nil;
			}
			x = y, y = y->parent;
80015b98:	8c620004 	lw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:213
			y = y->right;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->left) {
80015b9c:	8c440008 	lw	a0,8(v0)
80015ba0:	1083fffb 	beq	a0,v1,80015b90 <rb_node_prev+0x50>
80015ba4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:340
 * or 'NULL' if no predecessor exists.
 * */
rb_node *rb_node_prev(rb_tree * tree, rb_node * node)
{
	rb_node *prev = rb_tree_predecessor(tree, node);
	return (prev != tree->nil) ? prev : NULL;
80015ba8:	080056da 	j	80015b68 <rb_node_prev+0x28>
80015bac:	00c23026 	xor	a2,a2,v0
rb_node_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:341
}
80015bb0:	03e00008 	jr	ra
80015bb4:	00001021 	move	v0,zero
80015bb8:	03e00008 	jr	ra
80015bbc:	00000000 	nop

80015bc0 <rb_node_next>:
rb_tree_successor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:179
 * if no successor exists. Make sure that @node must belong to @tree,
 * and this function should only be called by rb_node_prev.
 * */
static inline rb_node *rb_tree_successor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;
80015bc0:	8c860004 	lw	a2,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:181

	if ((y = x->right) != nil) {
80015bc4:	8ca2000c 	lw	v0,12(a1)
80015bc8:	54c20004 	bnel	a2,v0,80015bdc <rb_node_next+0x1c>
80015bcc:	8c430008 	lw	v1,8(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:187
		while (y->left != nil) {
			y = y->left;
		}
		return y;
	} else {
		y = x->parent;
80015bd0:	080056fd 	j	80015bf4 <rb_node_next+0x34>
80015bd4:	8ca20004 	lw	v0,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:182
static inline rb_node *rb_tree_successor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;

	if ((y = x->right) != nil) {
		while (y->left != nil) {
80015bd8:	8c430008 	lw	v1,8(v0)
80015bdc:	54c3fffe 	bnel	a2,v1,80015bd8 <rb_node_next+0x18>
80015be0:	00601021 	move	v0,v1
rb_node_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:350
 * or 'NULL' if no successor exists.
 * */
rb_node *rb_node_next(rb_tree * tree, rb_node * node)
{
	rb_node *next = rb_tree_successor(tree, node);
	return (next != tree->nil) ? next : NULL;
80015be4:	00c23026 	xor	a2,a2,v0
80015be8:	0006100a 	movz	v0,zero,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:351
}
80015bec:	03e00008 	jr	ra
80015bf0:	00000000 	nop
rb_tree_successor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:188
			y = y->left;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->right) {
80015bf4:	8c47000c 	lw	a3,12(v0)
80015bf8:	10a70003 	beq	a1,a3,80015c08 <rb_node_next+0x48>
80015bfc:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:191
			x = y, y = y->parent;
		}
		if (y == tree->root) {
80015c00:	08005707 	j	80015c1c <rb_node_next+0x5c>
80015c04:	8c840008 	lw	a0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:189
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->right) {
			x = y, y = y->parent;
80015c08:	8c430004 	lw	v1,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:188
			y = y->left;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->right) {
80015c0c:	8c65000c 	lw	a1,12(v1)
80015c10:	50a2fffd 	beql	a1,v0,80015c08 <rb_node_next+0x48>
80015c14:	00601021 	move	v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:191
			x = y, y = y->parent;
		}
		if (y == tree->root) {
80015c18:	8c840008 	lw	a0,8(a0)
80015c1c:	1064fff3 	beq	v1,a0,80015bec <rb_node_next+0x2c>
80015c20:	00001021 	move	v0,zero
80015c24:	00601021 	move	v0,v1
rb_node_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:350
 * or 'NULL' if no successor exists.
 * */
rb_node *rb_node_next(rb_tree * tree, rb_node * node)
{
	rb_node *next = rb_tree_successor(tree, node);
	return (next != tree->nil) ? next : NULL;
80015c28:	00c23026 	xor	a2,a2,v0
80015c2c:	03e00008 	jr	ra
80015c30:	0006100a 	movz	v0,zero,a2

80015c34 <rb_node_root>:
rb_node_root():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:356
}

/* rb_node_root - returns the root node of a @tree, or 'NULL' if tree is empty */
rb_node *rb_node_root(rb_tree * tree)
{
	rb_node *node = tree->root->left;
80015c34:	8c830008 	lw	v1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:357
	return (node != tree->nil) ? node : NULL;
80015c38:	8c820004 	lw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:356
}

/* rb_node_root - returns the root node of a @tree, or 'NULL' if tree is empty */
rb_node *rb_node_root(rb_tree * tree)
{
	rb_node *node = tree->root->left;
80015c3c:	8c630008 	lw	v1,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:357
	return (node != tree->nil) ? node : NULL;
80015c40:	00431026 	xor	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:358
}
80015c44:	0002180a 	movz	v1,zero,v0
80015c48:	03e00008 	jr	ra
80015c4c:	00601021 	move	v0,v1

80015c50 <rb_node_left>:
rb_node_left():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:363

/* rb_node_left - gets the left child of @node, or 'NULL' if no such node */
rb_node *rb_node_left(rb_tree * tree, rb_node * node)
{
	rb_node *left = node->left;
80015c50:	8ca30008 	lw	v1,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:364
	return (left != tree->nil) ? left : NULL;
80015c54:	8c820004 	lw	v0,4(a0)
80015c58:	00431026 	xor	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:365
}
80015c5c:	0002180a 	movz	v1,zero,v0
80015c60:	03e00008 	jr	ra
80015c64:	00601021 	move	v0,v1

80015c68 <rb_node_right>:
rb_node_right():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:370

/* rb_node_right - gets the right child of @node, or 'NULL' if no such node */
rb_node *rb_node_right(rb_tree * tree, rb_node * node)
{
	rb_node *right = node->right;
80015c68:	8ca3000c 	lw	v1,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:371
	return (right != tree->nil) ? right : NULL;
80015c6c:	8c820004 	lw	v0,4(a0)
80015c70:	00431026 	xor	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:372
}
80015c74:	0002180a 	movz	v1,zero,v0
80015c78:	03e00008 	jr	ra
80015c7c:	00601021 	move	v0,v1

80015c80 <check_tree>:
check_tree():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:375

int check_tree(rb_tree * tree, rb_node * node)
{
80015c80:	27bdffe0 	addiu	sp,sp,-32
80015c84:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:376
	rb_node *nil = tree->nil;
80015c88:	8c920004 	lw	s2,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:375
	rb_node *right = node->right;
	return (right != tree->nil) ? right : NULL;
}

int check_tree(rb_tree * tree, rb_node * node)
{
80015c8c:	afb10014 	sw	s1,20(sp)
80015c90:	afb00010 	sw	s0,16(sp)
80015c94:	afbf001c 	sw	ra,28(sp)
80015c98:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:377
	rb_node *nil = tree->nil;
	if (node == nil) {
80015c9c:	10b20034 	beq	a1,s2,80015d70 <check_tree+0xf0>
80015ca0:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:381
		assert(!node->red);
		return 1;
	}
	if (node->left != nil) {
80015ca4:	8ca50008 	lw	a1,8(a1)
80015ca8:	50b2000b 	beql	a1,s2,80015cd8 <check_tree+0x58>
80015cac:	8e03000c 	lw	v1,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:382
		assert(COMPARE(tree, node, node->left) >= 0);
80015cb0:	8c820000 	lw	v0,0(a0)
80015cb4:	0040f809 	jalr	v0
80015cb8:	02002021 	move	a0,s0
80015cbc:	04420059 	bltzl	v0,80015e24 <check_tree+0x1a4>
80015cc0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:383
		assert(node->left->parent == node);
80015cc4:	8e050008 	lw	a1,8(s0)
80015cc8:	8ca20004 	lw	v0,4(a1)
80015ccc:	5450004e 	bnel	v0,s0,80015e08 <check_tree+0x188>
80015cd0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:385
	}
	if (node->right != nil) {
80015cd4:	8e03000c 	lw	v1,12(s0)
80015cd8:	1072000b 	beq	v1,s2,80015d08 <check_tree+0x88>
80015cdc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:386
		assert(COMPARE(tree, node, node->right) <= 0);
80015ce0:	8e220000 	lw	v0,0(s1)
80015ce4:	0040f809 	jalr	v0
80015ce8:	00602821 	move	a1,v1
80015cec:	1c40003f 	bgtz	v0,80015dec <check_tree+0x16c>
80015cf0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:387
		assert(node->right->parent == node);
80015cf4:	8e03000c 	lw	v1,12(s0)
80015cf8:	8c620004 	lw	v0,4(v1)
80015cfc:	14500035 	bne	v0,s0,80015dd4 <check_tree+0x154>
80015d00:	3c068002 	lui	a2,0x8002
80015d04:	8e050008 	lw	a1,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:389
	}
	if (node->red) {
80015d08:	8e020000 	lw	v0,0(s0)
80015d0c:	10400007 	beqz	v0,80015d2c <check_tree+0xac>
80015d10:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:390
		assert(!node->left->red && !node->right->red);
80015d14:	8ca20000 	lw	v0,0(a1)
80015d18:	14400020 	bnez	v0,80015d9c <check_tree+0x11c>
80015d1c:	3c048002 	lui	a0,0x8002
80015d20:	8c620000 	lw	v0,0(v1)
80015d24:	1440001e 	bnez	v0,80015da0 <check_tree+0x120>
80015d28:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:392
	}
	int hb_left = check_tree(tree, node->left);
80015d2c:	0c005720 	jal	80015c80 <check_tree>
80015d30:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:393
	int hb_right = check_tree(tree, node->right);
80015d34:	8e05000c 	lw	a1,12(s0)
80015d38:	02202021 	move	a0,s1
80015d3c:	0c005720 	jal	80015c80 <check_tree>
80015d40:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:394
	assert(hb_left == hb_right);
80015d44:	1642001c 	bne	s2,v0,80015db8 <check_tree+0x138>
80015d48:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:396
	int hb = hb_left;
	if (!node->red) {
80015d4c:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:397
		hb++;
80015d50:	2c420001 	sltiu	v0,v0,1
80015d54:	02421021 	addu	v0,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:400
	}
	return hb;
}
80015d58:	8fbf001c 	lw	ra,28(sp)
80015d5c:	8fb20018 	lw	s2,24(sp)
80015d60:	8fb10014 	lw	s1,20(sp)
80015d64:	8fb00010 	lw	s0,16(sp)
80015d68:	03e00008 	jr	ra
80015d6c:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:378

int check_tree(rb_tree * tree, rb_node * node)
{
	rb_node *nil = tree->nil;
	if (node == nil) {
		assert(!node->red);
80015d70:	8ca30000 	lw	v1,0(a1)
80015d74:	1060fff8 	beqz	v1,80015d58 <check_tree+0xd8>
80015d78:	24020001 	li	v0,1
80015d7c:	3c048002 	lui	a0,0x8002
80015d80:	3c068002 	lui	a2,0x8002
80015d84:	3c078002 	lui	a3,0x8002
80015d88:	2484302c 	addiu	a0,a0,12332
80015d8c:	2405017a 	li	a1,378
80015d90:	24c609b0 	addiu	a2,a2,2480
80015d94:	0c006afd 	jal	8001abf4 <__panic>
80015d98:	24e730c8 	addiu	a3,a3,12488
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:390
	if (node->right != nil) {
		assert(COMPARE(tree, node, node->right) <= 0);
		assert(node->right->parent == node);
	}
	if (node->red) {
		assert(!node->left->red && !node->right->red);
80015d9c:	3c068002 	lui	a2,0x8002
80015da0:	3c078002 	lui	a3,0x8002
80015da4:	2484302c 	addiu	a0,a0,12332
80015da8:	24050186 	li	a1,390
80015dac:	24c609b0 	addiu	a2,a2,2480
80015db0:	0c006afd 	jal	8001abf4 <__panic>
80015db4:	24e7315c 	addiu	a3,a3,12636
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:394
	}
	int hb_left = check_tree(tree, node->left);
	int hb_right = check_tree(tree, node->right);
	assert(hb_left == hb_right);
80015db8:	3c068002 	lui	a2,0x8002
80015dbc:	3c078002 	lui	a3,0x8002
80015dc0:	2484302c 	addiu	a0,a0,12332
80015dc4:	2405018a 	li	a1,394
80015dc8:	24c609b0 	addiu	a2,a2,2480
80015dcc:	0c006afd 	jal	8001abf4 <__panic>
80015dd0:	24e73184 	addiu	a3,a3,12676
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:387
		assert(COMPARE(tree, node, node->left) >= 0);
		assert(node->left->parent == node);
	}
	if (node->right != nil) {
		assert(COMPARE(tree, node, node->right) <= 0);
		assert(node->right->parent == node);
80015dd4:	3c078002 	lui	a3,0x8002
80015dd8:	2484302c 	addiu	a0,a0,12332
80015ddc:	24050183 	li	a1,387
80015de0:	24c609b0 	addiu	a2,a2,2480
80015de4:	0c006afd 	jal	8001abf4 <__panic>
80015de8:	24e73140 	addiu	a3,a3,12608
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:386
	if (node->left != nil) {
		assert(COMPARE(tree, node, node->left) >= 0);
		assert(node->left->parent == node);
	}
	if (node->right != nil) {
		assert(COMPARE(tree, node, node->right) <= 0);
80015dec:	3c068002 	lui	a2,0x8002
80015df0:	3c078002 	lui	a3,0x8002
80015df4:	2484302c 	addiu	a0,a0,12332
80015df8:	24050182 	li	a1,386
80015dfc:	24c609b0 	addiu	a2,a2,2480
80015e00:	0c006afd 	jal	8001abf4 <__panic>
80015e04:	24e73118 	addiu	a3,a3,12568
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:383
		assert(!node->red);
		return 1;
	}
	if (node->left != nil) {
		assert(COMPARE(tree, node, node->left) >= 0);
		assert(node->left->parent == node);
80015e08:	3c068002 	lui	a2,0x8002
80015e0c:	3c078002 	lui	a3,0x8002
80015e10:	2484302c 	addiu	a0,a0,12332
80015e14:	2405017f 	li	a1,383
80015e18:	24c609b0 	addiu	a2,a2,2480
80015e1c:	0c006afd 	jal	8001abf4 <__panic>
80015e20:	24e730fc 	addiu	a3,a3,12540
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:382
	if (node == nil) {
		assert(!node->red);
		return 1;
	}
	if (node->left != nil) {
		assert(COMPARE(tree, node, node->left) >= 0);
80015e24:	3c068002 	lui	a2,0x8002
80015e28:	3c078002 	lui	a3,0x8002
80015e2c:	2484302c 	addiu	a0,a0,12332
80015e30:	2405017e 	li	a1,382
80015e34:	24c609b0 	addiu	a2,a2,2480
80015e38:	0c006afd 	jal	8001abf4 <__panic>
80015e3c:	24e730d4 	addiu	a3,a3,12500

80015e40 <check_rb_tree>:
check_rb_tree():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:429
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
{
	rb_tree *tree = rb_tree_create(check_compare1);
80015e40:	3c048001 	lui	a0,0x8001
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:428
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
{
80015e44:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:429
	rb_tree *tree = rb_tree_create(check_compare1);
80015e48:	2484531c 	addiu	a0,a0,21276
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:428
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
{
80015e4c:	afb00010 	sw	s0,16(sp)
80015e50:	afbf0034 	sw	ra,52(sp)
80015e54:	afbe0030 	sw	s8,48(sp)
80015e58:	afb7002c 	sw	s7,44(sp)
80015e5c:	afb60028 	sw	s6,40(sp)
80015e60:	afb50024 	sw	s5,36(sp)
80015e64:	afb40020 	sw	s4,32(sp)
80015e68:	afb3001c 	sw	s3,28(sp)
80015e6c:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:429
	rb_tree *tree = rb_tree_create(check_compare1);
80015e70:	0c005536 	jal	800154d8 <rb_tree_create>
80015e74:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:430
	assert(tree != NULL);
80015e78:	10400116 	beqz	v0,800162d4 <check_rb_tree+0x494>
80015e7c:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:432

	rb_node *nil = tree->nil, *root = tree->root;
80015e80:	8c420004 	lw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:433
	assert(!nil->red && root->left == nil);
80015e84:	8c430000 	lw	v1,0(v0)
80015e88:	1460010e 	bnez	v1,800162c4 <check_rb_tree+0x484>
80015e8c:	8e140008 	lw	s4,8(s0)
80015e90:	8e9e0008 	lw	s8,8(s4)
80015e94:	17c2010c 	bne	s8,v0,800162c8 <check_rb_tree+0x488>
80015e98:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:436

	int total = 100;
	struct check_data **all =
80015e9c:	0c005526 	jal	80015498 <check_safe_kmalloc>
80015ea0:	24040190 	li	a0,400
80015ea4:	00408821 	move	s1,v0
80015ea8:	00409021 	move	s2,v0
80015eac:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:440
	    check_safe_kmalloc(sizeof(struct check_data *) * total);

	long i;
	for (i = 0; i < total; i++) {
80015eb0:	00009821 	move	s3,zero
80015eb4:	24160064 	li	s6,100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:441
		all[i] = check_safe_kmalloc(sizeof(struct check_data));
80015eb8:	0c005526 	jal	80015498 <check_safe_kmalloc>
80015ebc:	24040014 	li	a0,20
80015ec0:	aea20000 	sw	v0,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:442
		all[i]->data = i;
80015ec4:	ac530000 	sw	s3,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:440
	int total = 100;
	struct check_data **all =
	    check_safe_kmalloc(sizeof(struct check_data *) * total);

	long i;
	for (i = 0; i < total; i++) {
80015ec8:	26730001 	addiu	s3,s3,1
80015ecc:	1676fffa 	bne	s3,s6,80015eb8 <check_rb_tree+0x78>
80015ed0:	26b50004 	addiu	s5,s5,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:445
		all[i] = check_safe_kmalloc(sizeof(struct check_data));
		all[i]->data = i;
	}

	int *mark = check_safe_kmalloc(sizeof(int) * total);
80015ed4:	0c005526 	jal	80015498 <check_safe_kmalloc>
80015ed8:	24040190 	li	a0,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:446
	memset(mark, 0, sizeof(int) * total);
80015edc:	00402021 	move	a0,v0
80015ee0:	00002821 	move	a1,zero
80015ee4:	24060190 	li	a2,400
80015ee8:	0c005c44 	jal	80017110 <memset>
80015eec:	00409821 	move	s3,v0
80015ef0:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:449

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015ef4:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:448
	}

	int *mark = check_safe_kmalloc(sizeof(int) * total);
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
80015ef8:	24040190 	li	a0,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015efc:	02221821 	addu	v1,s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:449

	int *mark = check_safe_kmalloc(sizeof(int) * total);
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015f00:	8c630000 	lw	v1,0(v1)
80015f04:	24420004 	addiu	v0,v0,4
80015f08:	8c630000 	lw	v1,0(v1)
80015f0c:	00031880 	sll	v1,v1,0x2
80015f10:	02631821 	addu	v1,s3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:448
	}

	int *mark = check_safe_kmalloc(sizeof(int) * total);
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
80015f14:	1444fff9 	bne	v0,a0,80015efc <check_rb_tree+0xbc>
80015f18:	ac650000 	sw	a1,0(v1)
80015f1c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:452
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80015f20:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:451
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80015f24:	24050190 	li	a1,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015f28:	02621821 	addu	v1,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:452

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80015f2c:	8c630000 	lw	v1,0(v1)
80015f30:	146400c8 	bne	v1,a0,80016254 <check_rb_tree+0x414>
80015f34:	24420004 	addiu	v0,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:451
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80015f38:	1445fffc 	bne	v0,a1,80015f2c <check_rb_tree+0xec>
80015f3c:	02621821 	addu	v1,s3,v0
80015f40:	0220b021 	move	s6,s1
80015f44:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015f48:	24170064 	li	s7,100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:456
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		int j = (rand() % (total - i)) + i;
80015f4c:	0c005b4f 	jal	80016d3c <rand>
80015f50:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015f54:	02f51823 	subu	v1,s7,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:456
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		int j = (rand() % (total - i)) + i;
80015f58:	0043001a 	div	zero,v0,v1
80015f5c:	006001f4 	teq	v1,zero,0x7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:457
		struct check_data *z = all[i];
80015f60:	8ec20000 	lw	v0,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:456
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		int j = (rand() % (total - i)) + i;
80015f64:	00001810 	mfhi	v1
80015f68:	00751821 	addu	v1,v1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:458
		struct check_data *z = all[i];
		all[i] = all[j];
80015f6c:	00031880 	sll	v1,v1,0x2
80015f70:	02231821 	addu	v1,s1,v1
80015f74:	8c640000 	lw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:455
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80015f78:	26b50001 	addiu	s5,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:458
		int j = (rand() % (total - i)) + i;
		struct check_data *z = all[i];
		all[i] = all[j];
80015f7c:	aec40000 	sw	a0,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:459
		all[j] = z;
80015f80:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:455
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80015f84:	16b7fff1 	bne	s5,s7,80015f4c <check_rb_tree+0x10c>
80015f88:	26d60004 	addiu	s6,s6,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:462
		struct check_data *z = all[i];
		all[i] = all[j];
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
80015f8c:	02602021 	move	a0,s3
80015f90:	00002821 	move	a1,zero
80015f94:	0c005c44 	jal	80017110 <memset>
80015f98:	24060190 	li	a2,400
80015f9c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:464
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015fa0:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:463
		all[i] = all[j];
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
80015fa4:	24040190 	li	a0,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015fa8:	02221821 	addu	v1,s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:464
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015fac:	8c630000 	lw	v1,0(v1)
80015fb0:	24420004 	addiu	v0,v0,4
80015fb4:	8c630000 	lw	v1,0(v1)
80015fb8:	00031880 	sll	v1,v1,0x2
80015fbc:	02631821 	addu	v1,s3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:463
		all[i] = all[j];
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
80015fc0:	1444fff9 	bne	v0,a0,80015fa8 <check_rb_tree+0x168>
80015fc4:	ac650000 	sw	a1,0(v1)
80015fc8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:467
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80015fcc:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:466

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80015fd0:	24050190 	li	a1,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015fd4:	02621821 	addu	v1,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:467
	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80015fd8:	8c630000 	lw	v1,0(v1)
80015fdc:	14640095 	bne	v1,a0,80016234 <check_rb_tree+0x3f4>
80015fe0:	24420004 	addiu	v0,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:466

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80015fe4:	1445fffc 	bne	v0,a1,80015fd8 <check_rb_tree+0x198>
80015fe8:	02621821 	addu	v1,s3,v0
80015fec:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:470
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80015ff0:	24160190 	li	s6,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015ff4:	02351021 	addu	v0,s1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:471
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
80015ff8:	8c450000 	lw	a1,0(v0)
80015ffc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:472
		check_tree(tree, root->left);
80016000:	26b50004 	addiu	s5,s5,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:471
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
80016004:	0c005567 	jal	8001559c <rb_insert>
80016008:	24a50004 	addiu	a1,a1,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:472
		check_tree(tree, root->left);
8001600c:	8e850008 	lw	a1,8(s4)
80016010:	0c005720 	jal	80015c80 <check_tree>
80016014:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:470
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80016018:	16b6fff7 	bne	s5,s6,80015ff8 <check_rb_tree+0x1b8>
8001601c:	02351021 	addu	v0,s1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:477
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
80016020:	3c028001 	lui	v0,0x8001
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:470
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80016024:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:477
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
80016028:	2456532c 	addiu	s6,v0,21292
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:476
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
8001602c:	24170064 	li	s7,100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:477
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
80016030:	8e420000 	lw	v0,0(s2)
80016034:	02002021 	move	a0,s0
80016038:	02c02821 	move	a1,s6
8001603c:	0c0055ec 	jal	800157b0 <rb_search>
80016040:	8c460000 	lw	a2,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:478
		assert(node != NULL && node == &(all[i]->rb_link));
80016044:	1040006d 	beqz	v0,800161fc <check_rb_tree+0x3bc>
80016048:	3c048002 	lui	a0,0x8002
8001604c:	8e430000 	lw	v1,0(s2)
80016050:	24630004 	addiu	v1,v1,4
80016054:	14430069 	bne	v0,v1,800161fc <check_rb_tree+0x3bc>
80016058:	26b50001 	addiu	s5,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:476
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
8001605c:	16b7fff4 	bne	s5,s7,80016030 <check_rb_tree+0x1f0>
80016060:	26520004 	addiu	s2,s2,4
80016064:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:481
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
	}

	for (i = 0; i < total; i++) {
80016068:	24150064 	li	s5,100
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:482
		node = rb_search(tree, check_compare2, (void *)i);
8001606c:	02002021 	move	a0,s0
80016070:	02c02821 	move	a1,s6
80016074:	0c0055ec 	jal	800157b0 <rb_search>
80016078:	02403021 	move	a2,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:483
		assert(node != NULL && rbn2data(node)->data == i);
8001607c:	10400066 	beqz	v0,80016218 <check_rb_tree+0x3d8>
80016080:	3c048002 	lui	a0,0x8002
80016084:	8c43fffc 	lw	v1,-4(v0)
80016088:	14720064 	bne	v1,s2,8001621c <check_rb_tree+0x3dc>
8001608c:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:484
		rb_delete(tree, node);
80016090:	00402821 	move	a1,v0
80016094:	0c005618 	jal	80015860 <rb_delete>
80016098:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:485
		check_tree(tree, root->left);
8001609c:	8e850008 	lw	a1,8(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:481
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
	}

	for (i = 0; i < total; i++) {
800160a0:	26520001 	addiu	s2,s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:485
		node = rb_search(tree, check_compare2, (void *)i);
		assert(node != NULL && rbn2data(node)->data == i);
		rb_delete(tree, node);
		check_tree(tree, root->left);
800160a4:	0c005720 	jal	80015c80 <check_tree>
800160a8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:481
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
	}

	for (i = 0; i < total; i++) {
800160ac:	5655fff0 	bnel	s2,s5,80016070 <check_rb_tree+0x230>
800160b0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:488
		assert(node != NULL && rbn2data(node)->data == i);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(!nil->red && root->left == nil);
800160b4:	8fc20000 	lw	v0,0(s8)
800160b8:	54400073 	bnezl	v0,80016288 <check_rb_tree+0x448>
800160bc:	3c048002 	lui	a0,0x8002
800160c0:	8e820008 	lw	v0,8(s4)
800160c4:	17c2006f 	bne	s8,v0,80016284 <check_rb_tree+0x444>
800160c8:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:496
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
		all[i]->data = max;
800160cc:	24160020 	li	s6,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:495
	long max = 32;
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
800160d0:	24150080 	li	s5,128
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
800160d4:	02321021 	addu	v0,s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:496
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
		all[i]->data = max;
800160d8:	8c420000 	lw	v0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:497
		rb_insert(tree, &(all[i]->rb_link));
800160dc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:498
		check_tree(tree, root->left);
800160e0:	26520004 	addiu	s2,s2,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:497
		max = total;
	}

	for (i = 0; i < max; i++) {
		all[i]->data = max;
		rb_insert(tree, &(all[i]->rb_link));
800160e4:	24450004 	addiu	a1,v0,4
800160e8:	0c005567 	jal	8001559c <rb_insert>
800160ec:	ac560000 	sw	s6,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:498
		check_tree(tree, root->left);
800160f0:	8e850008 	lw	a1,8(s4)
800160f4:	0c005720 	jal	80015c80 <check_tree>
800160f8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:495
	long max = 32;
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
800160fc:	1655fff6 	bne	s2,s5,800160d8 <check_rb_tree+0x298>
80016100:	02321021 	addu	v0,s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:502
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
		node = rb_search(tree, check_compare2, (void *)max);
80016104:	3c028001 	lui	v0,0x8001
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:495
	long max = 32;
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
80016108:	24120020 	li	s2,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:502
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
		node = rb_search(tree, check_compare2, (void *)max);
8001610c:	2455532c 	addiu	s5,v0,21292
80016110:	02002021 	move	a0,s0
80016114:	02a02821 	move	a1,s5
80016118:	0c0055ec 	jal	800157b0 <rb_search>
8001611c:	24060020 	li	a2,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:503
		assert(node != NULL && rbn2data(node)->data == max);
80016120:	10400050 	beqz	v0,80016264 <check_rb_tree+0x424>
80016124:	24030020 	li	v1,32
80016128:	8c44fffc 	lw	a0,-4(v0)
8001612c:	1483004e 	bne	a0,v1,80016268 <check_rb_tree+0x428>
80016130:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:504
		rb_delete(tree, node);
80016134:	00402821 	move	a1,v0
80016138:	0c005618 	jal	80015860 <rb_delete>
8001613c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:505
		check_tree(tree, root->left);
80016140:	8e850008 	lw	a1,8(s4)
80016144:	2652ffff 	addiu	s2,s2,-1
80016148:	0c005720 	jal	80015c80 <check_tree>
8001614c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:501
		all[i]->data = max;
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
80016150:	5640fff0 	bnezl	s2,80016114 <check_rb_tree+0x2d4>
80016154:	02002021 	move	a0,s0
rb_tree_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:18

/* rb_tree_empty - tests if tree is empty */
static inline bool rb_tree_empty(rb_tree * tree)
{
	rb_node *nil = tree->nil, *root = tree->root;
	return root->left == nil;
80016158:	8e020008 	lw	v0,8(s0)
check_rb_tree():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:508
		assert(node != NULL && rbn2data(node)->data == max);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(rb_tree_empty(tree));
8001615c:	8e030004 	lw	v1,4(s0)
80016160:	8c420008 	lw	v0,8(v0)
80016164:	1462004f 	bne	v1,v0,800162a4 <check_rb_tree+0x464>
80016168:	24150190 	li	s5,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
8001616c:	02321021 	addu	v0,s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:511
	}

	assert(rb_tree_empty(tree));

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
80016170:	8c450000 	lw	a1,0(v0)
80016174:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:512
		check_tree(tree, root->left);
80016178:	26520004 	addiu	s2,s2,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:511
	}

	assert(rb_tree_empty(tree));

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
8001617c:	0c005567 	jal	8001559c <rb_insert>
80016180:	24a50004 	addiu	a1,a1,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:512
		check_tree(tree, root->left);
80016184:	8e850008 	lw	a1,8(s4)
80016188:	0c005720 	jal	80015c80 <check_tree>
8001618c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:510
		check_tree(tree, root->left);
	}

	assert(rb_tree_empty(tree));

	for (i = 0; i < total; i++) {
80016190:	1655fff7 	bne	s2,s5,80016170 <check_rb_tree+0x330>
80016194:	02321021 	addu	v0,s1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:515
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	rb_tree_destroy(tree);
80016198:	0c0056c2 	jal	80015b08 <rb_tree_destroy>
8001619c:	02002021 	move	a0,s0
800161a0:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:517

	for (i = 0; i < total; i++) {
800161a4:	24120190 	li	s2,400
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
800161a8:	02301021 	addu	v0,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:518
	}

	rb_tree_destroy(tree);

	for (i = 0; i < total; i++) {
		kfree(all[i]);
800161ac:	8c440000 	lw	a0,0(v0)
800161b0:	0c0054a3 	jal	8001528c <kfree>
800161b4:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:517
		check_tree(tree, root->left);
	}

	rb_tree_destroy(tree);

	for (i = 0; i < total; i++) {
800161b8:	1612fffc 	bne	s0,s2,800161ac <check_rb_tree+0x36c>
800161bc:	02301021 	addu	v0,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:521
		kfree(all[i]);
	}

	kfree(mark);
800161c0:	0c0054a3 	jal	8001528c <kfree>
800161c4:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:522
	kfree(all);
800161c8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:523
}
800161cc:	8fbf0034 	lw	ra,52(sp)
800161d0:	8fbe0030 	lw	s8,48(sp)
800161d4:	8fb7002c 	lw	s7,44(sp)
800161d8:	8fb60028 	lw	s6,40(sp)
800161dc:	8fb50024 	lw	s5,36(sp)
800161e0:	8fb40020 	lw	s4,32(sp)
800161e4:	8fb3001c 	lw	s3,28(sp)
800161e8:	8fb20018 	lw	s2,24(sp)
800161ec:	8fb10014 	lw	s1,20(sp)
800161f0:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:522
	for (i = 0; i < total; i++) {
		kfree(all[i]);
	}

	kfree(mark);
	kfree(all);
800161f4:	080054a3 	j	8001528c <kfree>
800161f8:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:478
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
800161fc:	3c068002 	lui	a2,0x8002
80016200:	3c078002 	lui	a3,0x8002
80016204:	2484302c 	addiu	a0,a0,12332
80016208:	240501de 	li	a1,478
8001620c:	24c609b0 	addiu	a2,a2,2480
80016210:	0c006afd 	jal	8001abf4 <__panic>
80016214:	24e731d8 	addiu	a3,a3,12760
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:483
	}

	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)i);
		assert(node != NULL && rbn2data(node)->data == i);
80016218:	3c068002 	lui	a2,0x8002
8001621c:	3c078002 	lui	a3,0x8002
80016220:	2484302c 	addiu	a0,a0,12332
80016224:	240501e3 	li	a1,483
80016228:	24c609b0 	addiu	a2,a2,2480
8001622c:	0c006afd 	jal	8001abf4 <__panic>
80016230:	24e73204 	addiu	a3,a3,12804
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:467
	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80016234:	3c048002 	lui	a0,0x8002
80016238:	2484302c 	addiu	a0,a0,12332
8001623c:	240501d3 	li	a1,467
80016240:	3c068002 	lui	a2,0x8002
80016244:	3c078002 	lui	a3,0x8002
80016248:	24c609b0 	addiu	a2,a2,2480
8001624c:	0c006afd 	jal	8001abf4 <__panic>
80016250:	24e731c8 	addiu	a3,a3,12744
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:452

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80016254:	3c048002 	lui	a0,0x8002
80016258:	2484302c 	addiu	a0,a0,12332
8001625c:	08005890 	j	80016240 <check_rb_tree+0x400>
80016260:	240501c4 	li	a1,452
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:503
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
		node = rb_search(tree, check_compare2, (void *)max);
		assert(node != NULL && rbn2data(node)->data == max);
80016264:	3c048002 	lui	a0,0x8002
80016268:	3c068002 	lui	a2,0x8002
8001626c:	3c078002 	lui	a3,0x8002
80016270:	2484302c 	addiu	a0,a0,12332
80016274:	240501f7 	li	a1,503
80016278:	24c609b0 	addiu	a2,a2,2480
8001627c:	0c006afd 	jal	8001abf4 <__panic>
80016280:	24e73230 	addiu	a3,a3,12848
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:488
		assert(node != NULL && rbn2data(node)->data == i);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(!nil->red && root->left == nil);
80016284:	3c048002 	lui	a0,0x8002
80016288:	2484302c 	addiu	a0,a0,12332
8001628c:	240501e8 	li	a1,488
80016290:	3c068002 	lui	a2,0x8002
80016294:	3c078002 	lui	a3,0x8002
80016298:	24c609b0 	addiu	a2,a2,2480
8001629c:	0c006afd 	jal	8001abf4 <__panic>
800162a0:	24e731a8 	addiu	a3,a3,12712
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:508
		assert(node != NULL && rbn2data(node)->data == max);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(rb_tree_empty(tree));
800162a4:	3c048002 	lui	a0,0x8002
800162a8:	3c068002 	lui	a2,0x8002
800162ac:	3c078002 	lui	a3,0x8002
800162b0:	2484302c 	addiu	a0,a0,12332
800162b4:	240501fc 	li	a1,508
800162b8:	24c609b0 	addiu	a2,a2,2480
800162bc:	0c006afd 	jal	8001abf4 <__panic>
800162c0:	24e7325c 	addiu	a3,a3,12892
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:433
{
	rb_tree *tree = rb_tree_create(check_compare1);
	assert(tree != NULL);

	rb_node *nil = tree->nil, *root = tree->root;
	assert(!nil->red && root->left == nil);
800162c4:	3c048002 	lui	a0,0x8002
800162c8:	2484302c 	addiu	a0,a0,12332
800162cc:	080058a4 	j	80016290 <check_rb_tree+0x450>
800162d0:	240501b1 	li	a1,433
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/rb_tree.c:430
}

void check_rb_tree(void)
{
	rb_tree *tree = rb_tree_create(check_compare1);
	assert(tree != NULL);
800162d4:	3c048002 	lui	a0,0x8002
800162d8:	3c068002 	lui	a2,0x8002
800162dc:	3c078002 	lui	a3,0x8002
800162e0:	2484302c 	addiu	a0,a0,12332
800162e4:	240501ae 	li	a1,430
800162e8:	24c609b0 	addiu	a2,a2,2480
800162ec:	0c006afd 	jal	8001abf4 <__panic>
800162f0:	24e73198 	addiu	a3,a3,12696

800162f4 <readline>:
readline():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:29
 * The readline() function returns the text of the line read. If some errors
 * are happened, NULL is returned. The return value is a global variable,
 * thus it should be copied before it is used.
 * */
char *readline(const char *prompt)
{
800162f4:	27bdffd0 	addiu	sp,sp,-48
800162f8:	afbf002c 	sw	ra,44(sp)
800162fc:	afb40028 	sw	s4,40(sp)
80016300:	afb30024 	sw	s3,36(sp)
80016304:	afb20020 	sw	s2,32(sp)
80016308:	afb1001c 	sw	s1,28(sp)
8001630c:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:30
	if (prompt != NULL) {
80016310:	10800004 	beqz	a0,80016324 <readline+0x30>
80016314:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:31
		kprintf("%s", prompt);
80016318:	3c048002 	lui	a0,0x8002
8001631c:	0c00798a 	jal	8001e628 <kprintf>
80016320:	24843270 	addiu	a0,a0,12912
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:40
		c = getchar();
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
80016324:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:29
 * The readline() function returns the text of the line read. If some errors
 * are happened, NULL is returned. The return value is a global variable,
 * thus it should be copied before it is used.
 * */
char *readline(const char *prompt)
{
80016328:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:44
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
			cputchar(c);
			i--;
		} else if (c == '\n' || c == '\r') {
8001632c:	2411000d 	li	s1,13
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:41
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
80016330:	24120008 	li	s2,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:44
			cputchar(c);
			i--;
		} else if (c == '\n' || c == '\r') {
80016334:	2413000a 	li	s3,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:40
		c = getchar();
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
80016338:	26946788 	addiu	s4,s4,26504
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:35
	if (prompt != NULL) {
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
8001633c:	0c006c37 	jal	8001b0dc <cons_getc>
80016340:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:38
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
80016344:	28430020 	slti	v1,v0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:36
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
		if (c < 0) {
80016348:	0440001f 	bltz	v0,800163c8 <readline+0xd4>
8001634c:	2a0403ff 	slti	a0,s0,1023
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:38
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
80016350:	14600026 	bnez	v1,800163ec <readline+0xf8>
80016354:	00000000 	nop
80016358:	54800011 	bnezl	a0,800163a0 <readline+0xac>
8001635c:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:44
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
			cputchar(c);
			i--;
		} else if (c == '\n' || c == '\r') {
80016360:	1451fff6 	bne	v0,s1,8001633c <readline+0x48>
80016364:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:45
			cputchar(c);
80016368:	0c006c15 	jal	8001b054 <cons_putc>
8001636c:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:46
			buf[i] = '\0';
80016370:	3c028015 	lui	v0,0x8015
80016374:	24426788 	addiu	v0,v0,26504
80016378:	02028021 	addu	s0,s0,v0
8001637c:	a2000000 	sb	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:50
			return buf;
		}
	}
}
80016380:	8fbf002c 	lw	ra,44(sp)
80016384:	8fb40028 	lw	s4,40(sp)
80016388:	8fb30024 	lw	s3,36(sp)
8001638c:	8fb20020 	lw	s2,32(sp)
80016390:	8fb1001c 	lw	s1,28(sp)
80016394:	8fb00018 	lw	s0,24(sp)
80016398:	03e00008 	jr	ra
8001639c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:39
	while (1) {
		c = getchar();
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
800163a0:	0c006c15 	jal	8001b054 <cons_putc>
800163a4:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:40
			buf[i++] = c;
800163a8:	8fa20010 	lw	v0,16(sp)
800163ac:	02141821 	addu	v1,s0,s4
800163b0:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:35
	if (prompt != NULL) {
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
800163b4:	0c006c37 	jal	8001b0dc <cons_getc>
800163b8:	a0620000 	sb	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:38
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
800163bc:	28430020 	slti	v1,v0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:36
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
		if (c < 0) {
800163c0:	0441ffe3 	bgez	v0,80016350 <readline+0x5c>
800163c4:	2a0403ff 	slti	a0,s0,1023
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:50
			cputchar(c);
			buf[i] = '\0';
			return buf;
		}
	}
}
800163c8:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:37
	}
	int i = 0, c;
	while (1) {
		c = getchar();
		if (c < 0) {
			return NULL;
800163cc:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:50
			cputchar(c);
			buf[i] = '\0';
			return buf;
		}
	}
}
800163d0:	8fb40028 	lw	s4,40(sp)
800163d4:	8fb30024 	lw	s3,36(sp)
800163d8:	8fb20020 	lw	s2,32(sp)
800163dc:	8fb1001c 	lw	s1,28(sp)
800163e0:	8fb00018 	lw	s0,24(sp)
800163e4:	03e00008 	jr	ra
800163e8:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:41
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
800163ec:	14520007 	bne	v0,s2,8001640c <readline+0x118>
800163f0:	00000000 	nop
800163f4:	1200ffd1 	beqz	s0,8001633c <readline+0x48>
800163f8:	24040008 	li	a0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:42
			cputchar(c);
800163fc:	0c006c15 	jal	8001b054 <cons_putc>
80016400:	2610ffff 	addiu	s0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:43
			i--;
80016404:	080058cf 	j	8001633c <readline+0x48>
80016408:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/readline.c:44
		} else if (c == '\n' || c == '\r') {
8001640c:	1053ffd6 	beq	v0,s3,80016368 <readline+0x74>
80016410:	00000000 	nop
80016414:	1451ffc9 	bne	v0,s1,8001633c <readline+0x48>
80016418:	00000000 	nop
8001641c:	080058da 	j	80016368 <readline+0x74>
80016420:	00000000 	nop

80016424 <strdup>:
strdup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:5
#include <string.h>
#include <slab.h>

char *strdup(const char *src)
{
80016424:	27bdffd8 	addiu	sp,sp,-40
80016428:	afbf0024 	sw	ra,36(sp)
8001642c:	afb10020 	sw	s1,32(sp)
80016430:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:7
	char *dst;
	size_t len = strlen(src);
80016434:	0c005b6b 	jal	80016dac <strlen>
80016438:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:8
	if ((dst = kmalloc(len + 1)) != NULL) {
8001643c:	24440001 	addiu	a0,v0,1
80016440:	0c005478 	jal	800151e0 <kmalloc>
80016444:	00408821 	move	s1,v0
80016448:	00408021 	move	s0,v0
8001644c:	10400006 	beqz	v0,80016468 <strdup+0x44>
80016450:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:9
		memcpy(dst, src, len);
80016454:	02203021 	move	a2,s1
80016458:	00402021 	move	a0,v0
8001645c:	0c005c6e 	jal	800171b8 <memcpy>
80016460:	02118821 	addu	s1,s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:10
		dst[len] = '\0';
80016464:	a2200000 	sb	zero,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:13
	}
	return dst;
}
80016468:	8fbf0024 	lw	ra,36(sp)
8001646c:	02001021 	move	v0,s0
80016470:	8fb10020 	lw	s1,32(sp)
80016474:	8fb0001c 	lw	s0,28(sp)
80016478:	03e00008 	jr	ra
8001647c:	27bd0028 	addiu	sp,sp,40

80016480 <stradd>:
stradd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:16

char *stradd(const char *src1, const char *src2)
{
80016480:	27bdffd0 	addiu	sp,sp,-48
80016484:	afb30028 	sw	s3,40(sp)
80016488:	00a09821 	move	s3,a1
8001648c:	afbf002c 	sw	ra,44(sp)
80016490:	afb20024 	sw	s2,36(sp)
80016494:	afb10020 	sw	s1,32(sp)
80016498:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:18
	char *ret, *dst;
	size_t len1 = strlen(src1), len2 = strlen(src2);
8001649c:	0c005b6b 	jal	80016dac <strlen>
800164a0:	afa40010 	sw	a0,16(sp)
800164a4:	02602021 	move	a0,s3
800164a8:	0c005b6b 	jal	80016dac <strlen>
800164ac:	00409021 	move	s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:19
	if ((ret = dst = kmalloc(len1 + len2 + 1)) != NULL) {
800164b0:	02422021 	addu	a0,s2,v0
800164b4:	24840001 	addiu	a0,a0,1
800164b8:	0c005478 	jal	800151e0 <kmalloc>
800164bc:	00408821 	move	s1,v0
800164c0:	00408021 	move	s0,v0
800164c4:	1040000b 	beqz	v0,800164f4 <stradd+0x74>
800164c8:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:20
		memcpy(dst, src1, len1), dst += len1;
800164cc:	02403021 	move	a2,s2
800164d0:	00402021 	move	a0,v0
800164d4:	0c005c6e 	jal	800171b8 <memcpy>
800164d8:	00529021 	addu	s2,v0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:21
		memcpy(dst, src2, len2), dst += len2;
800164dc:	02402021 	move	a0,s2
800164e0:	02602821 	move	a1,s3
800164e4:	02203021 	move	a2,s1
800164e8:	0c005c6e 	jal	800171b8 <memcpy>
800164ec:	02519021 	addu	s2,s2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:22
		*dst = '\0';
800164f0:	a2400000 	sb	zero,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/libs/string.c:25
	}
	return ret;
}
800164f4:	8fbf002c 	lw	ra,44(sp)
800164f8:	02001021 	move	v0,s0
800164fc:	8fb30028 	lw	s3,40(sp)
80016500:	8fb20024 	lw	s2,36(sp)
80016504:	8fb10020 	lw	s1,32(sp)
80016508:	8fb0001c 	lw	s0,28(sp)
8001650c:	03e00008 	jr	ra
80016510:	27bd0030 	addiu	sp,sp,48

80016514 <hash32>:
hash32():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/hash.c:15
 *
 * High bits are more random, so we use them.
 * */
uint32_t hash32(uint32_t val, unsigned int bits)
{
	uint32_t hash = val * GOLDEN_RATIO_PRIME_32;
80016514:	3c029e37 	lui	v0,0x9e37
80016518:	24420001 	addiu	v0,v0,1
8001651c:	70821002 	mul	v0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/hash.c:16
	return (hash >> (32 - bits));
80016520:	00052823 	negu	a1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/hash.c:17
}
80016524:	03e00008 	jr	ra
80016528:	00a21006 	srlv	v0,v0,a1

8001652c <printnum>:
printnum():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:74
 * @padc:       character that padded on the left if the actual width is less than @width
 * */
static void
printnum(void (*putch) (int, void *, int), int fd, void *putdat,
	 unsigned long long num, unsigned base, int width, int padc)
{
8001652c:	27bdffb8 	addiu	sp,sp,-72
80016530:	8fa20060 	lw	v0,96(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:77
	unsigned long long result = num;
	unsigned mod = 0;//do_div(result, base);
	if(base == 10){
80016534:	2403000a 	li	v1,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:74
 * @padc:       character that padded on the left if the actual width is less than @width
 * */
static void
printnum(void (*putch) (int, void *, int), int fd, void *putdat,
	 unsigned long long num, unsigned base, int width, int padc)
{
80016538:	afb4003c 	sw	s4,60(sp)
8001653c:	afb30038 	sw	s3,56(sp)
80016540:	afb20034 	sw	s2,52(sp)
80016544:	afb10030 	sw	s1,48(sp)
80016548:	afb0002c 	sw	s0,44(sp)
8001654c:	00808821 	move	s1,a0
80016550:	00a09021 	move	s2,a1
80016554:	afbf0044 	sw	ra,68(sp)
80016558:	afb50040 	sw	s5,64(sp)
8001655c:	00c09821 	move	s3,a2
80016560:	8fa40058 	lw	a0,88(sp)
80016564:	8fa5005c 	lw	a1,92(sp)
80016568:	8fb00064 	lw	s0,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:77
	unsigned long long result = num;
	unsigned mod = 0;//do_div(result, base);
	if(base == 10){
8001656c:	10430031 	beq	v0,v1,80016634 <printnum+0x108>
80016570:	8fb40068 	lw	s4,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:81
      		unsigned int t = __divu10(result);
      		mod = result - __mulu10(t);
      		result = t;
   	}else if(base == 8){
80016574:	24030008 	li	v1,8
80016578:	10430045 	beq	v0,v1,80016690 <printnum+0x164>
8001657c:	00053700 	sll	a2,a1,0x1c
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:86
      	mod = result & 0x7;
      	result = result >> 3;
    	}else{
      		mod = result & 0xF;
      		result = result >> 4;
80016580:	00041902 	srl	v1,a0,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:85
      		result = t;
   	}else if(base == 8){
      	mod = result & 0x7;
      	result = result >> 3;
    	}else{
      		mod = result & 0xF;
80016584:	3095000f 	andi	s5,a0,0xf
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:86
      		result = result >> 4;
80016588:	00c31825 	or	v1,a2,v1
8001658c:	00053902 	srl	a3,a1,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:90
    	}

	// first recursively print all preceding (more significant) digits
	if (num >= base) {
80016590:	14a0001d 	bnez	a1,80016608 <printnum+0xdc>
80016594:	2610ffff 	addiu	s0,s0,-1
80016598:	0082202b 	sltu	a0,a0,v0
8001659c:	1080001b 	beqz	a0,8001660c <printnum+0xe0>
800165a0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:94
		printnum(putch, fd, putdat, result, base, width - 1, padc);
	} else {
		// print any needed pad characters before first digit
		while (--width > 0)
800165a4:	1a000009 	blez	s0,800165cc <printnum+0xa0>
800165a8:	3c028002 	lui	v0,0x8002
800165ac:	2610ffff 	addiu	s0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:95
			putch(padc, putdat, fd);
800165b0:	02802021 	move	a0,s4
800165b4:	02602821 	move	a1,s3
800165b8:	0220f809 	jalr	s1
800165bc:	02403021 	move	a2,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:94
	// first recursively print all preceding (more significant) digits
	if (num >= base) {
		printnum(putch, fd, putdat, result, base, width - 1, padc);
	} else {
		// print any needed pad characters before first digit
		while (--width > 0)
800165c0:	1600fffb 	bnez	s0,800165b0 <printnum+0x84>
800165c4:	2610ffff 	addiu	s0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:98
			putch(padc, putdat, fd);
	}
	// then print this (the least significant) digit
	putch("0123456789abcdef"[mod], putdat, fd);
800165c8:	3c028002 	lui	v0,0x8002
800165cc:	24423274 	addiu	v0,v0,12916
800165d0:	02a2a821 	addu	s5,s5,v0
800165d4:	92a40000 	lbu	a0,0(s5)
800165d8:	02602821 	move	a1,s3
800165dc:	02403021 	move	a2,s2
800165e0:	0220c821 	move	t9,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:99
}
800165e4:	8fbf0044 	lw	ra,68(sp)
800165e8:	8fb50040 	lw	s5,64(sp)
800165ec:	8fb4003c 	lw	s4,60(sp)
800165f0:	8fb30038 	lw	s3,56(sp)
800165f4:	8fb20034 	lw	s2,52(sp)
800165f8:	8fb10030 	lw	s1,48(sp)
800165fc:	8fb0002c 	lw	s0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:98
		// print any needed pad characters before first digit
		while (--width > 0)
			putch(padc, putdat, fd);
	}
	// then print this (the least significant) digit
	putch("0123456789abcdef"[mod], putdat, fd);
80016600:	03200008 	jr	t9
80016604:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:91
      		result = result >> 4;
    	}

	// first recursively print all preceding (more significant) digits
	if (num >= base) {
		printnum(putch, fd, putdat, result, base, width - 1, padc);
80016608:	02202021 	move	a0,s1
8001660c:	02402821 	move	a1,s2
80016610:	02603021 	move	a2,s3
80016614:	afa30010 	sw	v1,16(sp)
80016618:	afa70014 	sw	a3,20(sp)
8001661c:	afa20018 	sw	v0,24(sp)
80016620:	afb0001c 	sw	s0,28(sp)
80016624:	0c00594b 	jal	8001652c <printnum>
80016628:	afb40020 	sw	s4,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:98
		// print any needed pad characters before first digit
		while (--width > 0)
			putch(padc, putdat, fd);
	}
	// then print this (the least significant) digit
	putch("0123456789abcdef"[mod], putdat, fd);
8001662c:	08005973 	j	800165cc <printnum+0xa0>
80016630:	3c028002 	lui	v0,0x8002
__divu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:32
/* __divu* routines are from the book, Hacker's Delight */

static inline unsigned int __divu10(unsigned int n)
{
	unsigned int q, r;
	q = (n >> 1) + (n >> 2);
80016634:	00043042 	srl	a2,a0,0x1
80016638:	00041882 	srl	v1,a0,0x2
8001663c:	00661821 	addu	v1,v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:33
	q = q + (q >> 4);
80016640:	00033102 	srl	a2,v1,0x4
80016644:	00c31821 	addu	v1,a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:34
	q = q + (q >> 8);
80016648:	00033202 	srl	a2,v1,0x8
8001664c:	00c31821 	addu	v1,a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:35
	q = q + (q >> 16);
80016650:	00033402 	srl	a2,v1,0x10
80016654:	00c31821 	addu	v1,a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:36
	q = q >> 3;
80016658:	000330c2 	srl	a2,v1,0x3
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001665c:	000638c0 	sll	a3,a2,0x3
80016660:	24830006 	addiu	v1,a0,6
__divu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:37
	q = (n >> 1) + (n >> 2);
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
80016664:	00671823 	subu	v1,v1,a3
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
80016668:	00063840 	sll	a3,a2,0x1
__divu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:38
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
	return q + ((r + 6) >> 4);
8001666c:	00671823 	subu	v1,v1,a3
80016670:	00031902 	srl	v1,v1,0x4
80016674:	00661821 	addu	v1,v1,a2
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
80016678:	0003a840 	sll	s5,v1,0x1
8001667c:	000330c0 	sll	a2,v1,0x3
printnum():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:72
 * @base:       base for print, must be in [1, 16]
 * @width:      maximum number of digits, if the actual width is less than @width, use @padc instead
 * @padc:       character that padded on the left if the actual width is less than @width
 * */
static void
printnum(void (*putch) (int, void *, int), int fd, void *putdat,
80016680:	02a6a821 	addu	s5,s5,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:79
{
	unsigned long long result = num;
	unsigned mod = 0;//do_div(result, base);
	if(base == 10){
      		unsigned int t = __divu10(result);
      		mod = result - __mulu10(t);
80016684:	0095a823 	subu	s5,a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:80
      		result = t;
80016688:	08005964 	j	80016590 <printnum+0x64>
8001668c:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:83
   	}else if(base == 8){
      	mod = result & 0x7;
      	result = result >> 3;
80016690:	00053740 	sll	a2,a1,0x1d
80016694:	000418c2 	srl	v1,a0,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:82
	if(base == 10){
      		unsigned int t = __divu10(result);
      		mod = result - __mulu10(t);
      		result = t;
   	}else if(base == 8){
      	mod = result & 0x7;
80016698:	30950007 	andi	s5,a0,0x7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:83
      	result = result >> 3;
8001669c:	00c31825 	or	v1,a2,v1
800166a0:	08005964 	j	80016590 <printnum+0x64>
800166a4:	000538c2 	srl	a3,a1,0x3

800166a8 <sprintputch>:
sprintputch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:362
 * @ch:         the character will be printed
 * @b:          the buffer to place the character @ch
 * */
static void sprintputch(int ch, struct sprintbuf *b)
{
	b->cnt++;
800166a8:	8ca30008 	lw	v1,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:363
	if (b->buf < b->ebuf) {
800166ac:	8ca20000 	lw	v0,0(a1)
800166b0:	8ca60004 	lw	a2,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:362
 * @ch:         the character will be printed
 * @b:          the buffer to place the character @ch
 * */
static void sprintputch(int ch, struct sprintbuf *b)
{
	b->cnt++;
800166b4:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:363
	if (b->buf < b->ebuf) {
800166b8:	0046302b 	sltu	a2,v0,a2
800166bc:	10c00004 	beqz	a2,800166d0 <sprintputch+0x28>
800166c0:	aca30008 	sw	v1,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:364
		*b->buf++ = ch;
800166c4:	24430001 	addiu	v1,v0,1
800166c8:	a0440000 	sb	a0,0(v0)
800166cc:	aca30000 	sw	v1,0(a1)
800166d0:	03e00008 	jr	ra
800166d4:	00000000 	nop

800166d8 <vprintfmt>:
vprintfmt():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:184
 * Or you probably want printfmt() instead.
 * */
void
vprintfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	  const char *fmt, va_list ap)
{
800166d8:	27bdff98 	addiu	sp,sp,-104
800166dc:	afb40050 	sw	s4,80(sp)
800166e0:	8fb40078 	lw	s4,120(sp)
800166e4:	afb7005c 	sw	s7,92(sp)
800166e8:	afb50054 	sw	s5,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:261
		case 'e':
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
800166ec:	3c178002 	lui	s7,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800166f0:	3c158002 	lui	s5,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:184
 * Or you probably want printfmt() instead.
 * */
void
vprintfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	  const char *fmt, va_list ap)
{
800166f4:	afbe0060 	sw	s8,96(sp)
800166f8:	afb60058 	sw	s6,88(sp)
800166fc:	afb3004c 	sw	s3,76(sp)
80016700:	afb20048 	sw	s2,72(sp)
80016704:	afb10044 	sw	s1,68(sp)
80016708:	afb00040 	sw	s0,64(sp)
8001670c:	afbf0064 	sw	ra,100(sp)
80016710:	00809021 	move	s2,a0
80016714:	00a08821 	move	s1,a1
80016718:	00c08021 	move	s0,a2
8001671c:	00e09821 	move	s3,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016720:	26b5fb74 	addiu	s5,s5,-1164
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:271
			break;

			// string
		case 's':
			if ((p = va_arg(ap, char *)) == NULL) {
				p = "(null)";
80016724:	3c168002 	lui	s6,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:261
		case 'e':
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
80016728:	26f7fccc 	addiu	s7,s7,-820
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:264
				printfmt(putch, fd, putdat, "error %d", err);
			} else {
				printfmt(putch, fd, putdat, "%s", p);
8001672c:	3c1e8002 	lui	s8,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016730:	92640000 	lbu	a0,0(s3)
80016734:	24030025 	li	v1,37
80016738:	1083000f 	beq	a0,v1,80016778 <vprintfmt+0xa0>
8001673c:	26620001 	addiu	v0,s3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:192
			if (ch == '\0') {
80016740:	10800029 	beqz	a0,800167e8 <vprintfmt+0x110>
80016744:	24130025 	li	s3,37
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:195
				return;
			}
			putch(ch, putdat, fd);
80016748:	080059d7 	j	8001675c <vprintfmt+0x84>
8001674c:	afa2003c 	sw	v0,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:192
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
			if (ch == '\0') {
80016750:	10800026 	beqz	a0,800167ec <vprintfmt+0x114>
80016754:	8fbf0064 	lw	ra,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:195
				return;
			}
			putch(ch, putdat, fd);
80016758:	afa2003c 	sw	v0,60(sp)
8001675c:	02002821 	move	a1,s0
80016760:	0240f809 	jalr	s2
80016764:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016768:	8fa2003c 	lw	v0,60(sp)
8001676c:	90440000 	lbu	a0,0(v0)
80016770:	1493fff7 	bne	a0,s3,80016750 <vprintfmt+0x78>
80016774:	24420001 	addiu	v0,v0,1
80016778:	90440000 	lbu	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:233
			precision = va_arg(ap, int);
			goto process_precision;

		case '.':
			if (width < 0)
				width = 0;
8001677c:	24080020 	li	t0,32
80016780:	afa00028 	sw	zero,40(sp)
80016784:	00004821 	move	t1,zero
80016788:	2403ffff 	li	v1,-1
8001678c:	2407ffff 	li	a3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016790:	2485ffdd 	addiu	a1,a0,-35
80016794:	30a500ff 	andi	a1,a1,0xff
80016798:	2ca60056 	sltiu	a2,a1,86
8001679c:	14c0001e 	bnez	a2,80016818 <vprintfmt+0x140>
800167a0:	24530001 	addiu	s3,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:340
			putch(ch, putdat, fd);
			break;

			// unrecognized escape sequence - just print it literally
		default:
			putch('%', putdat, fd);
800167a4:	afa2003c 	sw	v0,60(sp)
800167a8:	24040025 	li	a0,37
800167ac:	02002821 	move	a1,s0
800167b0:	0240f809 	jalr	s2
800167b4:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:341
			for (fmt--; fmt[-1] != '%'; fmt--)
800167b8:	8fa2003c 	lw	v0,60(sp)
800167bc:	9043ffff 	lbu	v1,-1(v0)
800167c0:	00409821 	move	s3,v0
800167c4:	24020025 	li	v0,37
800167c8:	1062ffd9 	beq	v1,v0,80016730 <vprintfmt+0x58>
800167cc:	24030025 	li	v1,37
800167d0:	2673ffff 	addiu	s3,s3,-1
800167d4:	9262ffff 	lbu	v0,-1(s3)
800167d8:	5443fffe 	bnel	v0,v1,800167d4 <vprintfmt+0xfc>
800167dc:	2673ffff 	addiu	s3,s3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
800167e0:	080059cd 	j	80016734 <vprintfmt+0x5c>
800167e4:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:346
			for (fmt--; fmt[-1] != '%'; fmt--)
				/* do nothing */ ;
			break;
		}
	}
}
800167e8:	8fbf0064 	lw	ra,100(sp)
800167ec:	8fbe0060 	lw	s8,96(sp)
800167f0:	8fb7005c 	lw	s7,92(sp)
800167f4:	8fb60058 	lw	s6,88(sp)
800167f8:	8fb50054 	lw	s5,84(sp)
800167fc:	8fb40050 	lw	s4,80(sp)
80016800:	8fb3004c 	lw	s3,76(sp)
80016804:	8fb20048 	lw	s2,72(sp)
80016808:	8fb10044 	lw	s1,68(sp)
8001680c:	8fb00040 	lw	s0,64(sp)
80016810:	03e00008 	jr	ra
80016814:	27bd0068 	addiu	sp,sp,104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016818:	00052880 	sll	a1,a1,0x2
8001681c:	02a52821 	addu	a1,s5,a1
80016820:	8ca50000 	lw	a1,0(a1)
80016824:	00a00008 	jr	a1
80016828:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:232
		case '*':
			precision = va_arg(ap, int);
			goto process_precision;

		case '.':
			if (width < 0)
8001682c:	90440001 	lbu	a0,1(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:237
				width = 0;
			goto reswitch;

		case '#':
			altflag = 1;
80016830:	24020001 	li	v0,1
80016834:	afa20028 	sw	v0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:238
			goto reswitch;
80016838:	080059e4 	j	80016790 <vprintfmt+0xb8>
8001683c:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:335
			printnum(putch, fd, putdat, num, base, width, padc);
			break;

			// escaped '%' character
		case '%':
			putch(ch, putdat, fd);
80016840:	02002821 	move	a1,s0
80016844:	0240f809 	jalr	s2
80016848:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:336
			break;
8001684c:	080059cd 	j	80016734 <vprintfmt+0x5c>
80016850:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:228
				}
			}
			goto process_precision;

		case '*':
			precision = va_arg(ap, int);
80016854:	8e830000 	lw	v1,0(s4)
80016858:	90440001 	lbu	a0,1(v0)
8001685c:	26940004 	addiu	s4,s4,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016860:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:241
		case '#':
			altflag = 1;
			goto reswitch;

process_precision:
			if (width < 0)
80016864:	04e1ffcb 	bgez	a3,80016794 <vprintfmt+0xbc>
80016868:	2485ffdd 	addiu	a1,a0,-35
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:242
				width = precision, precision = -1;
8001686c:	00603821 	move	a3,v1
80016870:	080059e5 	j	80016794 <vprintfmt+0xbc>
80016874:	2403ffff 	li	v1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016878:	90440001 	lbu	a0,1(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:208

			// flag to pad on the right
		case '-':
			padc = '-';
8001687c:	2408002d 	li	t0,45
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016880:	080059e4 	j	80016790 <vprintfmt+0xb8>
80016884:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:232
		case '*':
			precision = va_arg(ap, int);
			goto process_precision;

		case '.':
			if (width < 0)
80016888:	04e1ffeb 	bgez	a3,80016838 <vprintfmt+0x160>
8001688c:	90440001 	lbu	a0,1(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:233
				width = 0;
80016890:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016894:	080059e4 	j	80016790 <vprintfmt+0xb8>
80016898:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:221
			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
				ch = *fmt;
				if (ch < '0' || ch > '9') {
8001689c:	90440001 	lbu	a0,1(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:213
			padc = '-';
			goto reswitch;

			// flag to pad with 0's instead of spaces
		case '0':
			padc = '0';
800168a0:	24080030 	li	t0,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:214
			goto reswitch;
800168a4:	080059e4 	j	80016790 <vprintfmt+0xb8>
800168a8:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:220

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
				ch = *fmt;
800168ac:	90450001 	lbu	a1,1(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:219
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
800168b0:	2483ffd0 	addiu	v1,a0,-48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800168b4:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:221
			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
				ch = *fmt;
				if (ch < '0' || ch > '9') {
800168b8:	24a6ffd0 	addiu	a2,a1,-48
800168bc:	2cc6000a 	sltiu	a2,a2,10
800168c0:	10c0ffe8 	beqz	a2,80016864 <vprintfmt+0x18c>
800168c4:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:219
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
800168c8:	00032040 	sll	a0,v1,0x1
800168cc:	000318c0 	sll	v1,v1,0x3
800168d0:	00831821 	addu	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:218
			padc = '0';
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
800168d4:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:219
				precision = precision * 10 + ch - '0';
800168d8:	00651821 	addu	v1,v1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:220
				ch = *fmt;
800168dc:	90450000 	lbu	a1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:219
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
800168e0:	2463ffd0 	addiu	v1,v1,-48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:221
				ch = *fmt;
				if (ch < '0' || ch > '9') {
800168e4:	24a6ffd0 	addiu	a2,a1,-48
800168e8:	2cc6000a 	sltiu	a2,a2,10
800168ec:	14c0fff6 	bnez	a2,800168c8 <vprintfmt+0x1f0>
800168f0:	00a02021 	move	a0,a1
800168f4:	08005a19 	j	80016864 <vprintfmt+0x18c>
800168f8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:252
			lflag++;
			goto reswitch;

			// character
		case 'c':
			putch(va_arg(ap, int), putdat, fd);
800168fc:	8e840000 	lw	a0,0(s4)
80016900:	02002821 	move	a1,s0
80016904:	02203021 	move	a2,s1
80016908:	0240f809 	jalr	s2
8001690c:	26940004 	addiu	s4,s4,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:253
			break;
80016910:	080059cd 	j	80016734 <vprintfmt+0x5c>
80016914:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:296
			}
			break;

			// (signed) decimal
		case 'd':
			num = getint(ap, lflag);
80016918:	29220002 	slti	v0,t1,2
8001691c:	144000c8 	bnez	v0,80016c40 <vprintfmt+0x568>
80016920:	2402fff8 	li	v0,-8
80016924:	26940007 	addiu	s4,s4,7
80016928:	0282a024 	and	s4,s4,v0
8001692c:	8e830000 	lw	v1,0(s4)
80016930:	8e820004 	lw	v0,4(s4)
80016934:	26940008 	addiu	s4,s4,8
80016938:	00604821 	move	t1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:297
			if ((long long)num < 0) {
8001693c:	044000ad 	bltz	v0,80016bf4 <vprintfmt+0x51c>
80016940:	00405021 	move	t2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:306
			base = 10;
			goto number;

			// unsigned decimal
		case 'u':
			num = getuint(ap, lflag);
80016944:	2402000a 	li	v0,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:330
			// (unsigned) hexadecimal
		case 'x':
			num = getuint(ap, lflag);
			base = 16;
number:
			printnum(putch, fd, putdat, num, base, width, padc);
80016948:	02402021 	move	a0,s2
8001694c:	02202821 	move	a1,s1
80016950:	02003021 	move	a2,s0
80016954:	afa90010 	sw	t1,16(sp)
80016958:	afaa0014 	sw	t2,20(sp)
8001695c:	afa20018 	sw	v0,24(sp)
80016960:	afa7001c 	sw	a3,28(sp)
80016964:	0c00594b 	jal	8001652c <printnum>
80016968:	afa80020 	sw	t0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:331
			break;
8001696c:	080059cd 	j	80016734 <vprintfmt+0x5c>
80016970:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:257
			putch(va_arg(ap, int), putdat, fd);
			break;

			// error message
		case 'e':
			err = va_arg(ap, int);
80016974:	8e820000 	lw	v0,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:262
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
				printfmt(putch, fd, putdat, "error %d", err);
80016978:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:257
			putch(va_arg(ap, int), putdat, fd);
			break;

			// error message
		case 'e':
			err = va_arg(ap, int);
8001697c:	26940004 	addiu	s4,s4,4
80016980:	00021fc3 	sra	v1,v0,0x1f
80016984:	00621026 	xor	v0,v1,v0
80016988:	00431023 	subu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:261
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
8001698c:	28430028 	slti	v1,v0,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:262
				printfmt(putch, fd, putdat, "error %d", err);
80016990:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:261
		case 'e':
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
80016994:	10600091 	beqz	v1,80016bdc <vprintfmt+0x504>
80016998:	02003021 	move	a2,s0
8001699c:	00021880 	sll	v1,v0,0x2
800169a0:	00771821 	addu	v1,v1,s7
800169a4:	8c630000 	lw	v1,0(v1)
800169a8:	1060008c 	beqz	v1,80016bdc <vprintfmt+0x504>
800169ac:	27c73270 	addiu	a3,s8,12912
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:264
				printfmt(putch, fd, putdat, "error %d", err);
			} else {
				printfmt(putch, fd, putdat, "%s", p);
800169b0:	0c005b29 	jal	80016ca4 <printfmt>
800169b4:	afa30010 	sw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
800169b8:	080059cd 	j	80016734 <vprintfmt+0x5c>
800169bc:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:247
				width = precision, precision = -1;
			goto reswitch;

			// long flag (doubled for long long)
		case 'l':
			lflag++;
800169c0:	90440001 	lbu	a0,1(v0)
800169c4:	25290001 	addiu	t1,t1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:248
			goto reswitch;
800169c8:	080059e4 	j	80016790 <vprintfmt+0xb8>
800169cc:	02601021 	move	v0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:312
			base = 10;
			goto number;

			// (unsigned) octal
		case 'o':
			num = getuint(ap, lflag);
800169d0:	29220002 	slti	v0,t1,2
800169d4:	544000a2 	bnezl	v0,80016c60 <vprintfmt+0x588>
800169d8:	8e890000 	lw	t1,0(s4)
800169dc:	26940007 	addiu	s4,s4,7
800169e0:	2402fff8 	li	v0,-8
800169e4:	02821024 	and	v0,s4,v0
800169e8:	24540008 	addiu	s4,v0,8
800169ec:	8c490000 	lw	t1,0(v0)
800169f0:	8c4a0004 	lw	t2,4(v0)
800169f4:	08005a52 	j	80016948 <vprintfmt+0x270>
800169f8:	24020008 	li	v0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:318
			base = 8;
			goto number;

			// pointer
		case 'p':
			putch('0', putdat, fd);
800169fc:	afa70038 	sw	a3,56(sp)
80016a00:	afa80030 	sw	t0,48(sp)
80016a04:	24040030 	li	a0,48
80016a08:	02002821 	move	a1,s0
80016a0c:	0240f809 	jalr	s2
80016a10:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:319
			putch('x', putdat, fd);
80016a14:	24040078 	li	a0,120
80016a18:	02002821 	move	a1,s0
80016a1c:	0240f809 	jalr	s2
80016a20:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:320
			num =
80016a24:	8e890000 	lw	t1,0(s4)
80016a28:	00005021 	move	t2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:321
			    (unsigned long long)(uintptr_t) va_arg(ap, void *);
80016a2c:	26940004 	addiu	s4,s4,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:323
			base = 16;
			goto number;
80016a30:	24020010 	li	v0,16
80016a34:	8fa70038 	lw	a3,56(sp)
80016a38:	08005a52 	j	80016948 <vprintfmt+0x270>
80016a3c:	8fa80030 	lw	t0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:270
			}
			break;

			// string
		case 's':
			if ((p = va_arg(ap, char *)) == NULL) {
80016a40:	8e820000 	lw	v0,0(s4)
80016a44:	26940004 	addiu	s4,s4,4
80016a48:	afa2002c 	sw	v0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:271
				p = "(null)";
80016a4c:	8fa4002c 	lw	a0,44(sp)
80016a50:	26c23288 	addiu	v0,s6,12936
80016a54:	0044200a 	movz	a0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:273
			}
			if (width > 0 && padc != '-') {
80016a58:	18e00019 	blez	a3,80016ac0 <vprintfmt+0x3e8>
80016a5c:	afa4002c 	sw	a0,44(sp)
80016a60:	2402002d 	li	v0,45
80016a64:	11020016 	beq	t0,v0,80016ac0 <vprintfmt+0x3e8>
80016a68:	00602821 	move	a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:274
				for (width -= strnlen(p, precision); width > 0;
80016a6c:	afa30034 	sw	v1,52(sp)
80016a70:	afa70038 	sw	a3,56(sp)
80016a74:	0c005b75 	jal	80016dd4 <strnlen>
80016a78:	afa80030 	sw	t0,48(sp)
80016a7c:	8fa70038 	lw	a3,56(sp)
80016a80:	8fa30034 	lw	v1,52(sp)
80016a84:	00e23823 	subu	a3,a3,v0
80016a88:	18e0000d 	blez	a3,80016ac0 <vprintfmt+0x3e8>
80016a8c:	8fa80030 	lw	t0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:275
				     width--) {
80016a90:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:276
					putch(padc, putdat, fd);
80016a94:	01002021 	move	a0,t0
80016a98:	afa30034 	sw	v1,52(sp)
80016a9c:	afa70038 	sw	a3,56(sp)
80016aa0:	afa80030 	sw	t0,48(sp)
80016aa4:	02002821 	move	a1,s0
80016aa8:	0240f809 	jalr	s2
80016aac:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:274
		case 's':
			if ((p = va_arg(ap, char *)) == NULL) {
				p = "(null)";
			}
			if (width > 0 && padc != '-') {
				for (width -= strnlen(p, precision); width > 0;
80016ab0:	8fa70038 	lw	a3,56(sp)
80016ab4:	8fa30034 	lw	v1,52(sp)
80016ab8:	14e0fff5 	bnez	a3,80016a90 <vprintfmt+0x3b8>
80016abc:	8fa80030 	lw	t0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:280
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
			     (ch = *p++) != '\0' && (precision < 0
80016ac0:	8fa2002c 	lw	v0,44(sp)
80016ac4:	90440000 	lbu	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:279
				for (width -= strnlen(p, precision); width > 0;
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
80016ac8:	10800018 	beqz	a0,80016b2c <vprintfmt+0x454>
80016acc:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:280
			     (ch = *p++) != '\0' && (precision < 0
80016ad0:	04600004 	bltz	v1,80016ae4 <vprintfmt+0x40c>
80016ad4:	2405ffff 	li	a1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:281
						     || --precision >= 0);
80016ad8:	2463ffff 	addiu	v1,v1,-1
80016adc:	10650013 	beq	v1,a1,80016b2c <vprintfmt+0x454>
80016ae0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:283
			     width--) {
				if (altflag && (ch < ' ' || ch > '~')) {
80016ae4:	8fa50028 	lw	a1,40(sp)
80016ae8:	10a00003 	beqz	a1,80016af8 <vprintfmt+0x420>
80016aec:	2485ffe0 	addiu	a1,a0,-32
80016af0:	2ca5005f 	sltiu	a1,a1,95
80016af4:	10a0002f 	beqz	a1,80016bb4 <vprintfmt+0x4dc>
80016af8:	afa2003c 	sw	v0,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:286
					putch('?', putdat, fd);
				} else {
					putch(ch, putdat, fd);
80016afc:	afa30034 	sw	v1,52(sp)
80016b00:	afa70038 	sw	a3,56(sp)
80016b04:	02002821 	move	a1,s0
80016b08:	0240f809 	jalr	s2
80016b0c:	02203021 	move	a2,s1
80016b10:	8fa70038 	lw	a3,56(sp)
80016b14:	8fa30034 	lw	v1,52(sp)
80016b18:	8fa2003c 	lw	v0,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:280
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
			     (ch = *p++) != '\0' && (precision < 0
80016b1c:	90440000 	lbu	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:282
						     || --precision >= 0);
			     width--) {
80016b20:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:279
				for (width -= strnlen(p, precision); width > 0;
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
80016b24:	1480ffea 	bnez	a0,80016ad0 <vprintfmt+0x3f8>
80016b28:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:289
					putch('?', putdat, fd);
				} else {
					putch(ch, putdat, fd);
				}
			}
			for (; width > 0; width--) {
80016b2c:	58e0ff01 	blezl	a3,80016734 <vprintfmt+0x5c>
80016b30:	92640000 	lbu	a0,0(s3)
80016b34:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:290
				putch(' ', putdat, fd);
80016b38:	afa70038 	sw	a3,56(sp)
80016b3c:	24040020 	li	a0,32
80016b40:	02002821 	move	a1,s0
80016b44:	0240f809 	jalr	s2
80016b48:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:289
					putch('?', putdat, fd);
				} else {
					putch(ch, putdat, fd);
				}
			}
			for (; width > 0; width--) {
80016b4c:	8fa70038 	lw	a3,56(sp)
80016b50:	54e0fff9 	bnezl	a3,80016b38 <vprintfmt+0x460>
80016b54:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016b58:	080059cd 	j	80016734 <vprintfmt+0x5c>
80016b5c:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:306
			base = 10;
			goto number;

			// unsigned decimal
		case 'u':
			num = getuint(ap, lflag);
80016b60:	29220002 	slti	v0,t1,2
80016b64:	14400046 	bnez	v0,80016c80 <vprintfmt+0x5a8>
80016b68:	2402fff8 	li	v0,-8
80016b6c:	26940007 	addiu	s4,s4,7
80016b70:	02821024 	and	v0,s4,v0
80016b74:	24540008 	addiu	s4,v0,8
80016b78:	8c490000 	lw	t1,0(v0)
80016b7c:	8c4a0004 	lw	t2,4(v0)
80016b80:	08005a52 	j	80016948 <vprintfmt+0x270>
80016b84:	2402000a 	li	v0,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:327
			base = 16;
			goto number;

			// (unsigned) hexadecimal
		case 'x':
			num = getuint(ap, lflag);
80016b88:	29220002 	slti	v0,t1,2
80016b8c:	54400038 	bnezl	v0,80016c70 <vprintfmt+0x598>
80016b90:	8e890000 	lw	t1,0(s4)
80016b94:	26940007 	addiu	s4,s4,7
80016b98:	2402fff8 	li	v0,-8
80016b9c:	02821024 	and	v0,s4,v0
80016ba0:	24540008 	addiu	s4,v0,8
80016ba4:	8c490000 	lw	t1,0(v0)
80016ba8:	8c4a0004 	lw	t2,4(v0)
80016bac:	08005a52 	j	80016948 <vprintfmt+0x270>
80016bb0:	24020010 	li	v0,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:284
			for (;
			     (ch = *p++) != '\0' && (precision < 0
						     || --precision >= 0);
			     width--) {
				if (altflag && (ch < ' ' || ch > '~')) {
					putch('?', putdat, fd);
80016bb4:	afa30034 	sw	v1,52(sp)
80016bb8:	afa70038 	sw	a3,56(sp)
80016bbc:	2404003f 	li	a0,63
80016bc0:	02002821 	move	a1,s0
80016bc4:	0240f809 	jalr	s2
80016bc8:	02203021 	move	a2,s1
80016bcc:	8fa2003c 	lw	v0,60(sp)
80016bd0:	8fa30034 	lw	v1,52(sp)
80016bd4:	08005ac7 	j	80016b1c <vprintfmt+0x444>
80016bd8:	8fa70038 	lw	a3,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:262
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
				printfmt(putch, fd, putdat, "error %d", err);
80016bdc:	3c078002 	lui	a3,0x8002
80016be0:	24e73290 	addiu	a3,a3,12944
80016be4:	0c005b29 	jal	80016ca4 <printfmt>
80016be8:	afa20010 	sw	v0,16(sp)
80016bec:	080059cd 	j	80016734 <vprintfmt+0x5c>
80016bf0:	92640000 	lbu	a0,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:298

			// (signed) decimal
		case 'd':
			num = getint(ap, lflag);
			if ((long long)num < 0) {
				putch('-', putdat, fd);
80016bf4:	2404002d 	li	a0,45
80016bf8:	afa2003c 	sw	v0,60(sp)
80016bfc:	afa30034 	sw	v1,52(sp)
80016c00:	afa70038 	sw	a3,56(sp)
80016c04:	afa80030 	sw	t0,48(sp)
80016c08:	02002821 	move	a1,s0
80016c0c:	0240f809 	jalr	s2
80016c10:	02203021 	move	a2,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:299
				num = -(long long)num;
80016c14:	8fa30034 	lw	v1,52(sp)
80016c18:	8fa2003c 	lw	v0,60(sp)
80016c1c:	8fa70038 	lw	a3,56(sp)
80016c20:	00031823 	negu	v1,v1
80016c24:	00021023 	negu	v0,v0
80016c28:	0003202b 	sltu	a0,zero,v1
80016c2c:	00445023 	subu	t2,v0,a0
80016c30:	00604821 	move	t1,v1
80016c34:	2402000a 	li	v0,10
80016c38:	08005a52 	j	80016948 <vprintfmt+0x270>
80016c3c:	8fa80030 	lw	t0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:296
			}
			break;

			// (signed) decimal
		case 'd':
			num = getint(ap, lflag);
80016c40:	8e890000 	lw	t1,0(s4)
80016c44:	26940004 	addiu	s4,s4,4
80016c48:	000957c3 	sra	t2,t1,0x1f
80016c4c:	01401021 	move	v0,t2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:297
			if ((long long)num < 0) {
80016c50:	0441ff3c 	bgez	v0,80016944 <vprintfmt+0x26c>
80016c54:	01201821 	move	v1,t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:298
				putch('-', putdat, fd);
80016c58:	08005afe 	j	80016bf8 <vprintfmt+0x520>
80016c5c:	2404002d 	li	a0,45
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:312
			base = 10;
			goto number;

			// (unsigned) octal
		case 'o':
			num = getuint(ap, lflag);
80016c60:	00005021 	move	t2,zero
80016c64:	26940004 	addiu	s4,s4,4
80016c68:	08005a52 	j	80016948 <vprintfmt+0x270>
80016c6c:	24020008 	li	v0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:327
			base = 16;
			goto number;

			// (unsigned) hexadecimal
		case 'x':
			num = getuint(ap, lflag);
80016c70:	00005021 	move	t2,zero
80016c74:	26940004 	addiu	s4,s4,4
80016c78:	08005a52 	j	80016948 <vprintfmt+0x270>
80016c7c:	24020010 	li	v0,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:306
			base = 10;
			goto number;

			// unsigned decimal
		case 'u':
			num = getuint(ap, lflag);
80016c80:	11200004 	beqz	t1,80016c94 <vprintfmt+0x5bc>
80016c84:	8e890000 	lw	t1,0(s4)
80016c88:	00005021 	move	t2,zero
80016c8c:	08005a51 	j	80016944 <vprintfmt+0x26c>
80016c90:	26940004 	addiu	s4,s4,4
80016c94:	00005021 	move	t2,zero
80016c98:	26940004 	addiu	s4,s4,4
80016c9c:	08005a52 	j	80016948 <vprintfmt+0x270>
80016ca0:	2402000a 	li	v0,10

80016ca4 <printfmt>:
printfmt():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:161
 * @fmt:        the format string to use
 * */
void
printfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	 const char *fmt, ...)
{
80016ca4:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:164
	va_list ap;

	va_start(ap, fmt);
80016ca8:	27a20038 	addiu	v0,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:161
 * @fmt:        the format string to use
 * */
void
printfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	 const char *fmt, ...)
{
80016cac:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:164
	va_list ap;

	va_start(ap, fmt);
80016cb0:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:165
	vprintfmt(putch, fd, putdat, fmt, ap);
80016cb4:	0c0059b6 	jal	800166d8 <vprintfmt>
80016cb8:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:167
	va_end(ap);
}
80016cbc:	8fbf0024 	lw	ra,36(sp)
80016cc0:	03e00008 	jr	ra
80016cc4:	27bd0028 	addiu	sp,sp,40

80016cc8 <snprintf>:
snprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:402
 * @str:        the buffer to place the result into
 * @size:       the size of buffer, including the trailing null space
 * @fmt:        the format string to use
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
80016cc8:	27bdffd0 	addiu	sp,sp,-48
ucore_vsnprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:384
 * Call this function if you are already dealing with a va_list.
 * Or you probably want snprintf() instead.
 * */
static int ucore_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)
{
	struct sprintbuf b = { str, str + size - 1, 0 };
80016ccc:	24a5ffff 	addiu	a1,a1,-1
snprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:405
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
	va_list ap;
	int cnt;
	va_start(ap, fmt);
80016cd0:	27a2003c 	addiu	v0,sp,60
ucore_vsnprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:384
 * Call this function if you are already dealing with a va_list.
 * Or you probably want snprintf() instead.
 * */
static int ucore_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)
{
	struct sprintbuf b = { str, str + size - 1, 0 };
80016cd4:	00852821 	addu	a1,a0,a1
snprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:402
 * @str:        the buffer to place the result into
 * @size:       the size of buffer, including the trailing null space
 * @fmt:        the format string to use
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
80016cd8:	afa7003c 	sw	a3,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:405
	va_list ap;
	int cnt;
	va_start(ap, fmt);
80016cdc:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:402
 * @str:        the buffer to place the result into
 * @size:       the size of buffer, including the trailing null space
 * @fmt:        the format string to use
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
80016ce0:	afbf002c 	sw	ra,44(sp)
80016ce4:	00c03821 	move	a3,a2
ucore_vsnprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:384
 * Call this function if you are already dealing with a va_list.
 * Or you probably want snprintf() instead.
 * */
static int ucore_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)
{
	struct sprintbuf b = { str, str + size - 1, 0 };
80016ce8:	afa4001c 	sw	a0,28(sp)
80016cec:	afa50020 	sw	a1,32(sp)
80016cf0:	afa00024 	sw	zero,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:385
	if (str == NULL || b.buf > b.ebuf) {
80016cf4:	1080000e 	beqz	a0,80016d30 <snprintf+0x68>
80016cf8:	2402ffea 	li	v0,-22
80016cfc:	00a4202b 	sltu	a0,a1,a0
80016d00:	1480000b 	bnez	a0,80016d30 <snprintf+0x68>
80016d04:	3c048001 	lui	a0,0x8001
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:389
		return -E_INVAL;
	}
	// print the string to the buffer
	vprintfmt((void *)sprintputch, NO_FD, &b, fmt, ap);
80016d08:	3c05ffff 	lui	a1,0xffff
80016d0c:	27a2003c 	addiu	v0,sp,60
80016d10:	248466a8 	addiu	a0,a0,26280
80016d14:	24a56ad9 	addiu	a1,a1,27353
80016d18:	27a6001c 	addiu	a2,sp,28
80016d1c:	0c0059b6 	jal	800166d8 <vprintfmt>
80016d20:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:391
	// null terminate the buffer
	*b.buf = '\0';
80016d24:	8fa2001c 	lw	v0,28(sp)
80016d28:	a0400000 	sb	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:392
	return b.cnt;
80016d2c:	8fa20024 	lw	v0,36(sp)
snprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/printfmt.c:409
	int cnt;
	va_start(ap, fmt);
	cnt = ucore_vsnprintf(str, size, fmt, ap);
	va_end(ap);
	return cnt;
}
80016d30:	8fbf002c 	lw	ra,44(sp)
80016d34:	03e00008 	jr	ra
80016d38:	27bd0030 	addiu	sp,sp,48

80016d3c <rand>:
rand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/rand.c:13
 *
 * The rand() function return a value in the range [0, RAND_MAX].
 * */
int rand(void)
{
	next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);
80016d3c:	3c038002 	lui	v1,0x8002
80016d40:	8c645428 	lw	a0,21544(v1)
80016d44:	3c02deec 	lui	v0,0xdeec
80016d48:	3442e66d 	ori	v0,v0,0xe66d
80016d4c:	24060005 	li	a2,5
80016d50:	70863002 	mul	a2,a0,a2
80016d54:	8c67542c 	lw	a3,21548(v1)
80016d58:	00820019 	multu	a0,v0
80016d5c:	00002012 	mflo	a0
80016d60:	00002810 	mfhi	a1
80016d64:	70e24002 	mul	t0,a3,v0
80016d68:	01061021 	addu	v0,t0,a2
80016d6c:	2488000b 	addiu	t0,a0,11
80016d70:	0104482b 	sltu	t1,t0,a0
80016d74:	00451021 	addu	v0,v0,a1
80016d78:	01221021 	addu	v0,t1,v0
80016d7c:	3042ffff 	andi	v0,v0,0xffff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/rand.c:14
	unsigned long long result = (next >> 12);
80016d80:	00022d00 	sll	a1,v0,0x14
80016d84:	00082302 	srl	a0,t0,0xc
80016d88:	00a42025 	or	a0,a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/rand.c:13
 *
 * The rand() function return a value in the range [0, RAND_MAX].
 * */
int rand(void)
{
	next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);
80016d8c:	ac62542c 	sw	v0,21548(v1)
80016d90:	ac685428 	sw	t0,21544(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/rand.c:16
	unsigned long long result = (next >> 12);
	return (int)do_div(result, RAND_MAX + 1);
}
80016d94:	03e00008 	jr	ra
80016d98:	7c82f000 	ext	v0,a0,0x0,0x1f

80016d9c <srand>:
srand():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/rand.c:24
 * srand - seed the random number generator with the given number
 * @seed:   the required seed number
 * */
void srand(unsigned int seed)
{
	next = seed;
80016d9c:	3c028002 	lui	v0,0x8002
80016da0:	ac445428 	sw	a0,21544(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/rand.c:25
}
80016da4:	03e00008 	jr	ra
80016da8:	ac40542c 	sw	zero,21548(v0)

80016dac <strlen>:
strlen():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:14
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016dac:	90830000 	lbu	v1,0(a0)
80016db0:	10600006 	beqz	v1,80016dcc <strlen+0x20>
80016db4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:15
		cnt++;
80016db8:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:11
 * the terminating '\0' character.
 * @s:      the input string
 *
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
80016dbc:	00821821 	addu	v1,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:14
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016dc0:	90630000 	lbu	v1,0(v1)
80016dc4:	5460fffd 	bnezl	v1,80016dbc <strlen+0x10>
80016dc8:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:18
		cnt++;
	}
	return cnt;
}
80016dcc:	03e00008 	jr	ra
80016dd0:	00000000 	nop

80016dd4 <strnlen>:
strnlen():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:36
 * pointed by @s.
 * */
size_t strnlen(const char *s, size_t len)
{
	size_t cnt = 0;
	while (cnt < len && *s++ != '\0') {
80016dd4:	10a0000c 	beqz	a1,80016e08 <strnlen+0x34>
80016dd8:	00001021 	move	v0,zero
80016ddc:	90830000 	lbu	v1,0(a0)
80016de0:	54600007 	bnezl	v1,80016e00 <strnlen+0x2c>
80016de4:	24420001 	addiu	v0,v0,1
80016de8:	08005b82 	j	80016e08 <strnlen+0x34>
80016dec:	00000000 	nop
80016df0:	90630000 	lbu	v1,0(v1)
80016df4:	10600004 	beqz	v1,80016e08 <strnlen+0x34>
80016df8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:37
		cnt++;
80016dfc:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:36
 * pointed by @s.
 * */
size_t strnlen(const char *s, size_t len)
{
	size_t cnt = 0;
	while (cnt < len && *s++ != '\0') {
80016e00:	1445fffb 	bne	v0,a1,80016df0 <strnlen+0x1c>
80016e04:	00821821 	addu	v1,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:40
		cnt++;
	}
	return cnt;
}
80016e08:	03e00008 	jr	ra
80016e0c:	00000000 	nop

80016e10 <strcpy>:
strcpy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:55
 * To avoid overflows, the size of array pointed by @dst should be long enough to
 * contain the same string as @src (including the terminating null character), and
 * should not overlap in memory with @src.
 * */
char *strcpy(char *dst, const char *src)
{
80016e10:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:59
#ifdef __HAVE_ARCH_STRCPY
	return __strcpy(dst, src);
#else
	char *p = dst;
80016e14:	00801821 	move	v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:60
	while ((*p++ = *src++) != '\0')
80016e18:	90a40000 	lbu	a0,0(a1)
80016e1c:	24a50001 	addiu	a1,a1,1
80016e20:	a0640000 	sb	a0,0(v1)
80016e24:	1480fffc 	bnez	a0,80016e18 <strcpy+0x8>
80016e28:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:64
		/* nothing */ ;
	return dst;
#endif /* __HAVE_ARCH_STRCPY */
}
80016e2c:	03e00008 	jr	ra
80016e30:	00000000 	nop

80016e34 <strncpy>:
strncpy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:79
 * The return value is @dst
 * */
char *strncpy(char *dst, const char *src, size_t len)
{
	char *p = dst;
	while (len > 0) {
80016e34:	10c00009 	beqz	a2,80016e5c <strncpy+0x28>
80016e38:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:76
 * @src:    string to be copied
 * @len:    maximum number of characters to be copied from @src
 *
 * The return value is @dst
 * */
char *strncpy(char *dst, const char *src, size_t len)
80016e3c:	00863021 	addu	a2,a0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:78
{
	char *p = dst;
80016e40:	00801821 	move	v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:80
	while (len > 0) {
		if ((*p = *src) != '\0') {
80016e44:	90a40000 	lbu	a0,0(a1)
80016e48:	a0640000 	sb	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:81
			src++;
80016e4c:	0004202b 	sltu	a0,zero,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:83
		}
		p++, len--;
80016e50:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:79
 * The return value is @dst
 * */
char *strncpy(char *dst, const char *src, size_t len)
{
	char *p = dst;
	while (len > 0) {
80016e54:	1466fffb 	bne	v1,a2,80016e44 <strncpy+0x10>
80016e58:	00a42821 	addu	a1,a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:86
			src++;
		}
		p++, len--;
	}
	return dst;
}
80016e5c:	03e00008 	jr	ra
80016e60:	00000000 	nop

80016e64 <strcat>:
strlen():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:14
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016e64:	90830000 	lbu	v1,0(a0)
80016e68:	10600007 	beqz	v1,80016e88 <strcat+0x24>
80016e6c:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:13
 *
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
80016e70:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:15
	while (*s++ != '\0') {
		cnt++;
80016e74:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:96
 * is appended at the end of the new string formed by the concatenation of both in @dst.
 * @dst:    pointer to the @dst array, which should be large enough to contain the concatenated
 *          resulting string.
 * @src:    string to be appended, this should not overlap @dst
 * */
char *strcat(char *dst, const char *src)
80016e78:	00831021 	addu	v0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:14
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016e7c:	90460000 	lbu	a2,0(v0)
80016e80:	54c0fffd 	bnezl	a2,80016e78 <strcat+0x14>
80016e84:	24630001 	addiu	v1,v1,1
strcat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:59
char *strcpy(char *dst, const char *src)
{
#ifdef __HAVE_ARCH_STRCPY
	return __strcpy(dst, src);
#else
	char *p = dst;
80016e88:	00401821 	move	v1,v0
strcpy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:60
	while ((*p++ = *src++) != '\0')
80016e8c:	90a40000 	lbu	a0,0(a1)
80016e90:	24a50001 	addiu	a1,a1,1
80016e94:	a0640000 	sb	a0,0(v1)
80016e98:	1480fffc 	bnez	a0,80016e8c <strcat+0x28>
80016e9c:	24630001 	addiu	v1,v1,1
strcat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:99
 * @src:    string to be appended, this should not overlap @dst
 * */
char *strcat(char *dst, const char *src)
{
	return strcpy(dst + strlen(dst), src);
}
80016ea0:	03e00008 	jr	ra
80016ea4:	00000000 	nop

80016ea8 <strcmp>:
strcmp():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:121
int strcmp(const char *s1, const char *s2)
{
#ifdef __HAVE_ARCH_STRCMP
	return __strcmp(s1, s2);
#else
	while (*s1 != '\0' && *s1 == *s2) {
80016ea8:	90830000 	lbu	v1,0(a0)
80016eac:	1060000c 	beqz	v1,80016ee0 <strcmp+0x38>
80016eb0:	90a20000 	lbu	v0,0(a1)
80016eb4:	10620005 	beq	v1,v0,80016ecc <strcmp+0x24>
80016eb8:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:126
		s1++, s2++;
	}
	return (int)((unsigned char)*s1 - (unsigned char)*s2);
#endif /* __HAVE_ARCH_STRCMP */
}
80016ebc:	03e00008 	jr	ra
80016ec0:	00621023 	subu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:121
int strcmp(const char *s1, const char *s2)
{
#ifdef __HAVE_ARCH_STRCMP
	return __strcmp(s1, s2);
#else
	while (*s1 != '\0' && *s1 == *s2) {
80016ec4:	14620006 	bne	v1,v0,80016ee0 <strcmp+0x38>
80016ec8:	00c02821 	move	a1,a2
80016ecc:	90830000 	lbu	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:122
		s1++, s2++;
80016ed0:	24a60001 	addiu	a2,a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:121
int strcmp(const char *s1, const char *s2)
{
#ifdef __HAVE_ARCH_STRCMP
	return __strcmp(s1, s2);
#else
	while (*s1 != '\0' && *s1 == *s2) {
80016ed4:	24840001 	addiu	a0,a0,1
80016ed8:	1460fffa 	bnez	v1,80016ec4 <strcmp+0x1c>
80016edc:	90a20001 	lbu	v0,1(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:126
		s1++, s2++;
	}
	return (int)((unsigned char)*s1 - (unsigned char)*s2);
#endif /* __HAVE_ARCH_STRCMP */
}
80016ee0:	00621023 	subu	v0,v1,v0
80016ee4:	03e00008 	jr	ra
80016ee8:	00000000 	nop

80016eec <strncmp>:
strncmp():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:141
 * the characters differ, until a terminating null-character is reached, or
 * until @n characters match in both strings, whichever happens first.
 * */
int strncmp(const char *s1, const char *s2, size_t n)
{
	while (n > 0 && *s1 != '\0' && *s1 == *s2) {
80016eec:	10c00013 	beqz	a2,80016f3c <strncmp+0x50>
80016ef0:	00001021 	move	v0,zero
80016ef4:	90820000 	lbu	v0,0(a0)
80016ef8:	1040000d 	beqz	v0,80016f30 <strncmp+0x44>
80016efc:	90a30000 	lbu	v1,0(a1)
80016f00:	1443000b 	bne	v0,v1,80016f30 <strncmp+0x44>
80016f04:	00a63021 	addu	a2,a1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:139
 * This function starts comparing the first character of each string. If
 * they are equal to each other, it continues with the following pairs until
 * the characters differ, until a terminating null-character is reached, or
 * until @n characters match in both strings, whichever happens first.
 * */
int strncmp(const char *s1, const char *s2, size_t n)
80016f08:	24840001 	addiu	a0,a0,1
80016f0c:	24c6ffff 	addiu	a2,a2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:141
{
	while (n > 0 && *s1 != '\0' && *s1 == *s2) {
80016f10:	10a60009 	beq	a1,a2,80016f38 <strncmp+0x4c>
80016f14:	24a70001 	addiu	a3,a1,1
80016f18:	90820000 	lbu	v0,0(a0)
80016f1c:	24840001 	addiu	a0,a0,1
80016f20:	10400003 	beqz	v0,80016f30 <strncmp+0x44>
80016f24:	90a30001 	lbu	v1,1(a1)
80016f28:	1043fff9 	beq	v0,v1,80016f10 <strncmp+0x24>
80016f2c:	00e02821 	move	a1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:144
		n--, s1++, s2++;
	}
	return (n == 0) ? 0 : (int)((unsigned char)*s1 - (unsigned char)*s2);
80016f30:	03e00008 	jr	ra
80016f34:	00431023 	subu	v0,v0,v1
80016f38:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:145
}
80016f3c:	03e00008 	jr	ra
80016f40:	00000000 	nop

80016f44 <strchr>:
strchr():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:157
 * The strchr() function returns a pointer to the first occurrence of
 * character in @s. If the value is not found, the function returns 'NULL'.
 * */
char *strchr(const char *s, char c)
{
	while (*s != '\0') {
80016f44:	90830000 	lbu	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:156
 *
 * The strchr() function returns a pointer to the first occurrence of
 * character in @s. If the value is not found, the function returns 'NULL'.
 * */
char *strchr(const char *s, char c)
{
80016f48:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:157
	while (*s != '\0') {
80016f4c:	1060000c 	beqz	v1,80016f80 <strchr+0x3c>
80016f50:	30a500ff 	andi	a1,a1,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:158
		if (*s == c) {
80016f54:	54650006 	bnel	v1,a1,80016f70 <strchr+0x2c>
80016f58:	90430001 	lbu	v1,1(v0)
80016f5c:	08005be2 	j	80016f88 <strchr+0x44>
80016f60:	00000000 	nop
80016f64:	10650008 	beq	v1,a1,80016f88 <strchr+0x44>
80016f68:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:157
 * The strchr() function returns a pointer to the first occurrence of
 * character in @s. If the value is not found, the function returns 'NULL'.
 * */
char *strchr(const char *s, char c)
{
	while (*s != '\0') {
80016f6c:	90430001 	lbu	v1,1(v0)
80016f70:	1460fffc 	bnez	v1,80016f64 <strchr+0x20>
80016f74:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:163
		if (*s == c) {
			return (char *)s;
		}
		s++;
	}
	return NULL;
80016f78:	03e00008 	jr	ra
80016f7c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:164
}
80016f80:	03e00008 	jr	ra
80016f84:	00001021 	move	v0,zero
80016f88:	03e00008 	jr	ra
80016f8c:	00000000 	nop

80016f90 <strfind>:
strfind():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:177
 * not found in @s, then it returns a pointer to the null byte at the
 * end of @s, rather than 'NULL'.
 * */
char *strfind(const char *s, char c)
{
	while (*s != '\0') {
80016f90:	90830000 	lbu	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:176
 * The strfind() function is like strchr() except that if @c is
 * not found in @s, then it returns a pointer to the null byte at the
 * end of @s, rather than 'NULL'.
 * */
char *strfind(const char *s, char c)
{
80016f94:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:177
	while (*s != '\0') {
80016f98:	1060000b 	beqz	v1,80016fc8 <strfind+0x38>
80016f9c:	30a500ff 	andi	a1,a1,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:178
		if (*s == c) {
80016fa0:	54650006 	bnel	v1,a1,80016fbc <strfind+0x2c>
80016fa4:	24420001 	addiu	v0,v0,1
80016fa8:	08005bf4 	j	80016fd0 <strfind+0x40>
80016fac:	00000000 	nop
80016fb0:	10650007 	beq	v1,a1,80016fd0 <strfind+0x40>
80016fb4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:181
			break;
		}
		s++;
80016fb8:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:177
 * not found in @s, then it returns a pointer to the null byte at the
 * end of @s, rather than 'NULL'.
 * */
char *strfind(const char *s, char c)
{
	while (*s != '\0') {
80016fbc:	90430000 	lbu	v1,0(v0)
80016fc0:	1460fffb 	bnez	v1,80016fb0 <strfind+0x20>
80016fc4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:184
			break;
		}
		s++;
	}
	return (char *)s;
}
80016fc8:	03e00008 	jr	ra
80016fcc:	00000000 	nop
80016fd0:	03e00008 	jr	ra
80016fd4:	00000000 	nop

80016fd8 <strtol>:
strtol():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:222
{
	int neg = 0;
	long val = 0;

	// gobble initial whitespace
	while (*s == ' ' || *s == '\t') {
80016fd8:	24020020 	li	v0,32
80016fdc:	24070009 	li	a3,9
80016fe0:	90830000 	lbu	v1,0(a0)
80016fe4:	5062fffe 	beql	v1,v0,80016fe0 <strtol+0x8>
80016fe8:	24840001 	addiu	a0,a0,1
80016fec:	54670003 	bnel	v1,a3,80016ffc <strtol+0x24>
80016ff0:	2402002b 	li	v0,43
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:223
		s++;
80016ff4:	08005bf8 	j	80016fe0 <strtol+0x8>
80016ff8:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:227
	}

	// plus/minus sign
	if (*s == '+') {
80016ffc:	10620039 	beq	v1,v0,800170e4 <strtol+0x10c>
80017000:	00803821 	move	a3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:229
		s++;
	} else if (*s == '-') {
80017004:	2402002d 	li	v0,45
80017008:	10620032 	beq	v1,v0,800170d4 <strtol+0xfc>
8001700c:	00005021 	move	t2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:233
		s++, neg = 1;
	}
	// hex or octal base prefix
	if ((base == 0 || base == 16) && (s[0] == '0' && s[1] == 'x')) {
80017010:	10c00021 	beqz	a2,80017098 <strtol+0xc0>
80017014:	24020030 	li	v0,48
80017018:	24020010 	li	v0,16
8001701c:	50c2001e 	beql	a2,v0,80017098 <strtol+0xc0>
80017020:	24020030 	li	v0,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:238
		s += 2, base = 16;
	} else if (base == 0 && s[0] == '0') {
		s++, base = 8;
	} else if (base == 0) {
		base = 10;
80017024:	08005c12 	j	80017048 <strtol+0x70>
80017028:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:245
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
			dig = *s - '0';
8001702c:	00e01821 	move	v1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:253
		} else if (*s >= 'A' && *s <= 'Z') {
			dig = *s - 'A' + 10;
		} else {
			break;
		}
		if (dig >= base) {
80017030:	0066382a 	slt	a3,v1,a2
80017034:	10e00013 	beqz	a3,80017084 <strtol+0xac>
80017038:	70463802 	mul	a3,v0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:256
			break;
		}
		s++, val = (val * base) + dig;
8001703c:	24840001 	addiu	a0,a0,1
80017040:	00e31021 	addu	v0,a3,v1
80017044:	90830000 	lbu	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:244
	}
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
80017048:	2467ffd0 	addiu	a3,v1,-48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:246
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
8001704c:	2469ff9f 	addiu	t1,v1,-97
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:244
	}
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
80017050:	30e800ff 	andi	t0,a3,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:246
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
80017054:	312900ff 	andi	t1,t1,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:244
	}
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
80017058:	2d08000a 	sltiu	t0,t0,10
8001705c:	1500fff3 	bnez	t0,8001702c <strtol+0x54>
80017060:	2d29001a 	sltiu	t1,t1,26
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:248
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
			dig = *s - 'a' + 10;
		} else if (*s >= 'A' && *s <= 'Z') {
80017064:	2467ffbf 	addiu	a3,v1,-65
80017068:	30e700ff 	andi	a3,a3,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:246
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
8001706c:	11200015 	beqz	t1,800170c4 <strtol+0xec>
80017070:	2ce7001a 	sltiu	a3,a3,26
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:247
			dig = *s - 'a' + 10;
80017074:	2463ffa9 	addiu	v1,v1,-87
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:253
		} else if (*s >= 'A' && *s <= 'Z') {
			dig = *s - 'A' + 10;
		} else {
			break;
		}
		if (dig >= base) {
80017078:	0066382a 	slt	a3,v1,a2
8001707c:	14e0ffef 	bnez	a3,8001703c <strtol+0x64>
80017080:	70463802 	mul	a3,v0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:260
		}
		s++, val = (val * base) + dig;
		// we don't properly detect overflow!
	}

	if (endptr) {
80017084:	54a00001 	bnezl	a1,8001708c <strtol+0xb4>
80017088:	aca40000 	sw	a0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:263
		*endptr = (char *)s;
	}
	return (neg ? -val : val);
8001708c:	00021823 	negu	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:264
}
80017090:	03e00008 	jr	ra
80017094:	006a100b 	movn	v0,v1,t2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:233
		s++;
	} else if (*s == '-') {
		s++, neg = 1;
	}
	// hex or octal base prefix
	if ((base == 0 || base == 16) && (s[0] == '0' && s[1] == 'x')) {
80017098:	50620016 	beql	v1,v0,800170f4 <strtol+0x11c>
8001709c:	90870001 	lbu	a3,1(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:235
		s += 2, base = 16;
	} else if (base == 0 && s[0] == '0') {
800170a0:	14c0ffe9 	bnez	a2,80017048 <strtol+0x70>
800170a4:	00001021 	move	v0,zero
800170a8:	24020030 	li	v0,48
800170ac:	1462ffdd 	bne	v1,v0,80017024 <strtol+0x4c>
800170b0:	2406000a 	li	a2,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:236
		s++, base = 8;
800170b4:	90830001 	lbu	v1,1(a0)
800170b8:	24060008 	li	a2,8
800170bc:	08005c09 	j	80017024 <strtol+0x4c>
800170c0:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:248

		if (*s >= '0' && *s <= '9') {
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
			dig = *s - 'a' + 10;
		} else if (*s >= 'A' && *s <= 'Z') {
800170c4:	10e0ffef 	beqz	a3,80017084 <strtol+0xac>
800170c8:	2463ffc9 	addiu	v1,v1,-55
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:253
			dig = *s - 'A' + 10;
		} else {
			break;
		}
		if (dig >= base) {
800170cc:	08005c0d 	j	80017034 <strtol+0x5c>
800170d0:	0066382a 	slt	a3,v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:230

	// plus/minus sign
	if (*s == '+') {
		s++;
	} else if (*s == '-') {
		s++, neg = 1;
800170d4:	90830001 	lbu	v1,1(a0)
800170d8:	240a0001 	li	t2,1
800170dc:	08005c04 	j	80017010 <strtol+0x38>
800170e0:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:228
		s++;
	}

	// plus/minus sign
	if (*s == '+') {
		s++;
800170e4:	24840001 	addiu	a0,a0,1
800170e8:	90e30001 	lbu	v1,1(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:218
 *
 * The strtol() function returns the converted integral number as a long int value.
 * */
long strtol(const char *s, char **endptr, int base)
{
	int neg = 0;
800170ec:	08005c04 	j	80017010 <strtol+0x38>
800170f0:	00005021 	move	t2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:233
		s++;
	} else if (*s == '-') {
		s++, neg = 1;
	}
	// hex or octal base prefix
	if ((base == 0 || base == 16) && (s[0] == '0' && s[1] == 'x')) {
800170f4:	24020078 	li	v0,120
800170f8:	14e2ffe9 	bne	a3,v0,800170a0 <strtol+0xc8>
800170fc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:234
		s += 2, base = 16;
80017100:	90830002 	lbu	v1,2(a0)
80017104:	24060010 	li	a2,16
80017108:	08005c09 	j	80017024 <strtol+0x4c>
8001710c:	24840002 	addiu	a0,a0,2

80017110 <memset>:
memset():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:281
{
#ifdef __HAVE_ARCH_MEMSET
	return __memset(s, c, n);
#else
	char *p = s;
	while (n-- > 0) {
80017110:	10c00007 	beqz	a2,80017130 <memset+0x20>
80017114:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:275
 * @c:      value to set
 * @n:      number of bytes to be set to the value
 *
 * The memset() function returns @s.
 * */
void *memset(void *s, char c, size_t n)
80017118:	00863021 	addu	a2,a0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:280
{
#ifdef __HAVE_ARCH_MEMSET
	return __memset(s, c, n);
#else
	char *p = s;
8001711c:	00801821 	move	v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:282
	while (n-- > 0) {
		*p++ = c;
80017120:	a0650000 	sb	a1,0(v1)
80017124:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:281
{
#ifdef __HAVE_ARCH_MEMSET
	return __memset(s, c, n);
#else
	char *p = s;
	while (n-- > 0) {
80017128:	5466fffe 	bnel	v1,a2,80017124 <memset+0x14>
8001712c:	a0650000 	sb	a1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:286
		*p++ = c;
	}
	return s;
#endif /* __HAVE_ARCH_MEMSET */
}
80017130:	03e00008 	jr	ra
80017134:	00000000 	nop

80017138 <memmove>:
memmove():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:304
#ifdef __HAVE_ARCH_MEMMOVE
	return __memmove(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
80017138:	00a4182b 	sltu	v1,a1,a0
8001713c:	10600014 	beqz	v1,80017190 <memmove+0x58>
80017140:	00801021 	move	v0,a0
80017144:	00a64021 	addu	t0,a1,a2
80017148:	0088182b 	sltu	v1,a0,t0
8001714c:	10600010 	beqz	v1,80017190 <memmove+0x58>
80017150:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:306
		s += n, d += n;
		while (n-- > 0) {
80017154:	10c0000c 	beqz	a2,80017188 <memmove+0x50>
80017158:	00061823 	negu	v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:305
	return __memmove(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
8001715c:	00863821 	addu	a3,a0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
80017160:	01034021 	addu	t0,t0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:306
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
80017164:	24c6ffff 	addiu	a2,a2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
80017168:	00e33821 	addu	a3,a3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:306
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
8001716c:	2405ffff 	li	a1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
80017170:	01061821 	addu	v1,t0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:307
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
			*--d = *--s;
80017174:	90640000 	lbu	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
80017178:	00e61821 	addu	v1,a3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:306
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
8001717c:	24c6ffff 	addiu	a2,a2,-1
80017180:	14c5fffb 	bne	a2,a1,80017170 <memmove+0x38>
80017184:	a0640000 	sb	a0,0(v1)
80017188:	03e00008 	jr	ra
8001718c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:310
			*--d = *--s;
		}
	} else {
		while (n-- > 0) {
80017190:	10c0fffd 	beqz	a2,80017188 <memmove+0x50>
80017194:	00a63021 	addu	a2,a1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
80017198:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:311
		while (n-- > 0) {
			*--d = *--s;
		}
	} else {
		while (n-- > 0) {
			*d++ = *s++;
8001719c:	90a40000 	lbu	a0,0(a1)
800171a0:	24a50001 	addiu	a1,a1,1
800171a4:	a0640000 	sb	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:310
		s += n, d += n;
		while (n-- > 0) {
			*--d = *--s;
		}
	} else {
		while (n-- > 0) {
800171a8:	14a6fffc 	bne	a1,a2,8001719c <memmove+0x64>
800171ac:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:316
			*d++ = *s++;
		}
	}
	return dst;
#endif /* __HAVE_ARCH_MEMMOVE */
}
800171b0:	03e00008 	jr	ra
800171b4:	00000000 	nop

800171b8 <memcpy>:
memcpy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:339
#ifdef __HAVE_ARCH_MEMCPY
	return __memcpy(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	while (n-- > 0) {
800171b8:	10c00008 	beqz	a2,800171dc <memcpy+0x24>
800171bc:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:332
 * Note that, the function does not check any terminating null character in @src,
 * it always copies exactly @n bytes. To avoid overflows, the size of arrays pointed
 * by both @src and @dst, should be at least @n bytes, and should not overlap
 * (for overlapping memory area, memmove is a safer approach).
 * */
void *memcpy(void *dst, const void *src, size_t n)
800171c0:	00a63021 	addu	a2,a1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:338
{
#ifdef __HAVE_ARCH_MEMCPY
	return __memcpy(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
800171c4:	00801821 	move	v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:340
	while (n-- > 0) {
		*d++ = *s++;
800171c8:	90a40000 	lbu	a0,0(a1)
800171cc:	24a50001 	addiu	a1,a1,1
800171d0:	a0640000 	sb	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:339
#ifdef __HAVE_ARCH_MEMCPY
	return __memcpy(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	while (n-- > 0) {
800171d4:	14a6fffc 	bne	a1,a2,800171c8 <memcpy+0x10>
800171d8:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:344
		*d++ = *s++;
	}
	return dst;
#endif /* __HAVE_ARCH_MEMCPY */
}
800171dc:	03e00008 	jr	ra
800171e0:	00000000 	nop

800171e4 <memcmp>:
memcmp():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:364
 * */
int memcmp(const void *v1, const void *v2, size_t n)
{
	const char *s1 = (const char *)v1;
	const char *s2 = (const char *)v2;
	while (n-- > 0) {
800171e4:	10c00010 	beqz	a2,80017228 <memcmp+0x44>
800171e8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:365
		if (*s1 != *s2) {
800171ec:	90870000 	lbu	a3,0(a0)
800171f0:	90a20000 	lbu	v0,0(a1)
800171f4:	14e2000a 	bne	a3,v0,80017220 <memcmp+0x3c>
800171f8:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:360
 * - A value greater than zero indicates that the first byte that does not
 *   match in both memory blocks has a greater value in @v1 than in @v2
 *   as if evaluated as unsigned char values;
 * - And a value less than zero indicates the opposite.
 * */
int memcmp(const void *v1, const void *v2, size_t n)
800171fc:	24a30001 	addiu	v1,a1,1
80017200:	00a63021 	addu	a2,a1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:364
{
	const char *s1 = (const char *)v1;
	const char *s2 = (const char *)v2;
	while (n-- > 0) {
80017204:	10660008 	beq	v1,a2,80017228 <memcmp+0x44>
80017208:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:365
		if (*s1 != *s2) {
8001720c:	90870000 	lbu	a3,0(a0)
80017210:	90620000 	lbu	v0,0(v1)
80017214:	24840001 	addiu	a0,a0,1
80017218:	10e2fffa 	beq	a3,v0,80017204 <memcmp+0x20>
8001721c:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:366
			return (int)((unsigned char)*s1 - (unsigned char)*s2);
80017220:	03e00008 	jr	ra
80017224:	00e21023 	subu	v0,a3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:371
		}
		s1++, s2++;
	}
	return 0;
}
80017228:	03e00008 	jr	ra
8001722c:	00000000 	nop

80017230 <stricmp>:
stricmp():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:394
{
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
80017230:	90830000 	lbu	v1,0(a0)
80017234:	50600015 	beqzl	v1,8001728c <stricmp+0x5c>
80017238:	90a20000 	lbu	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:388
 * - A value greater than zero indicates that the first character that does
 *   not match has a greater value in @s1 than in @s2;
 * - And a value less than zero indicates the opposite.
 * - All of the comparing is case insensitive
 * */
int stricmp(const char *s1, const char *s2)
8001723c:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:395
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
80017240:	2c69005b 	sltiu	t1,v1,91
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:399
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);

		if (t1 == t2) {
			s1++, s2++;
80017244:	24840001 	addiu	a0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:395
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
80017248:	2462ffe0 	addiu	v0,v1,-32
8001724c:	15200002 	bnez	t1,80017258 <stricmp+0x28>
80017250:	00603821 	move	a3,v1
80017254:	304700ff 	andi	a3,v0,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:396
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
80017258:	90a20000 	lbu	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:399

		if (t1 == t2) {
			s1++, s2++;
8001725c:	24a50001 	addiu	a1,a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:396
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
80017260:	2c48005b 	sltiu	t0,v0,91
80017264:	244affe0 	addiu	t2,v0,-32
80017268:	15000002 	bnez	t0,80017274 <stricmp+0x44>
8001726c:	00403021 	move	a2,v0
80017270:	314600ff 	andi	a2,t2,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:398

		if (t1 == t2) {
80017274:	14e6000d 	bne	a3,a2,800172ac <stricmp+0x7c>
80017278:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:394
{
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
8001727c:	9083ffff 	lbu	v1,-1(a0)
80017280:	5460fff0 	bnezl	v1,80017244 <stricmp+0x14>
80017284:	2c69005b 	sltiu	t1,v1,91
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:406
			break;
		}
	}
	t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
	t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
	return (int)((unsigned char)t1 - (unsigned char)t2);
80017288:	90a20000 	lbu	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:396
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
8001728c:	00001821 	move	v1,zero
80017290:	2c48005b 	sltiu	t0,v0,91
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:405
		} else {
			break;
		}
	}
	t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
	t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
80017294:	5500000a 	bnezl	t0,800172c0 <stricmp+0x90>
80017298:	00621023 	subu	v0,v1,v0
8001729c:	2442ffe0 	addiu	v0,v0,-32
800172a0:	304200ff 	andi	v0,v0,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:407
	return (int)((unsigned char)t1 - (unsigned char)t2);
}
800172a4:	03e00008 	jr	ra
800172a8:	00621023 	subu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/string.c:404
			s1++, s2++;
		} else {
			break;
		}
	}
	t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
800172ac:	1520fff9 	bnez	t1,80017294 <stricmp+0x64>
800172b0:	00000000 	nop
800172b4:	2463ffe0 	addiu	v1,v1,-32
800172b8:	08005ca5 	j	80017294 <stricmp+0x64>
800172bc:	306300ff 	andi	v1,v1,0xff
800172c0:	03e00008 	jr	ra
800172c4:	00000000 	nop

800172c8 <get_pgd>:
get_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
800172c8:	00051582 	srl	v0,a1,0x16
800172cc:	00021080 	sll	v0,v0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:17
}
800172d0:	03e00008 	jr	ra
800172d4:	00821021 	addu	v0,a0,v0

800172d8 <get_pud>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
800172d8:	00051582 	srl	v0,a1,0x16
800172dc:	00021080 	sll	v0,v0,0x2
get_pud():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:43
		ptep_set_accessed(pgdp);
		ptep_set_dirty(pgdp);
	}
	return &((pud_t *) KADDR(PGD_ADDR(*pgdp)))[PUX(la)];
#endif /* PUXSHIFT == PGXSHIFT */
}
800172e0:	03e00008 	jr	ra
800172e4:	00821021 	addu	v0,a0,v0

800172e8 <get_pmd>:
get_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
800172e8:	00051582 	srl	v0,a1,0x16
800172ec:	00021080 	sll	v0,v0,0x2
get_pmd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:69
		ptep_set_accessed(pudp);
		ptep_set_dirty(pudp);
	}
	return &((pmd_t *) KADDR(PUD_ADDR(*pudp)))[PMX(la)];
#endif /* PMXSHIFT == PUXSHIFT */
}
800172f0:	03e00008 	jr	ra
800172f4:	00821021 	addu	v0,a0,v0

800172f8 <get_pte>:
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:72

pte_t *get_pte(pgd_t * pgdir, uintptr_t la, bool create)
{
800172f8:	27bdffd8 	addiu	sp,sp,-40
800172fc:	afb00014 	sw	s0,20(sp)
get_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017300:	00058582 	srl	s0,a1,0x16
80017304:	00108080 	sll	s0,s0,0x2
80017308:	00908021 	addu	s0,a0,s0
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:72
	return &((pmd_t *) KADDR(PUD_ADDR(*pudp)))[PMX(la)];
#endif /* PMXSHIFT == PUXSHIFT */
}

pte_t *get_pte(pgd_t * pgdir, uintptr_t la, bool create)
{
8001730c:	afb10018 	sw	s1,24(sp)
80017310:	afbf0024 	sw	ra,36(sp)
80017314:	afb30020 	sw	s3,32(sp)
80017318:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:79
#if PTXSHIFT == PMXSHIFT
	printk( "PMXSHIFT is defined as:0x%x\n", PMXSHIFT );
	return get_pmd(pgdir, la, create);
#else /* PTXSHIFT == PMXSHIFT */
	pmd_t *pmdp;
	if ((pmdp = get_pmd(pgdir, la, create)) == NULL) {
8001731c:	12000032 	beqz	s0,800173e8 <get_pte+0xf0>
80017320:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017324:	8e130000 	lw	s3,0(s0)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
80017328:	32620001 	andi	v0,s3,0x1
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:82
#else /* PTXSHIFT == PMXSHIFT */
	pmd_t *pmdp;
	if ((pmdp = get_pmd(pgdir, la, create)) == NULL) {
		return NULL;
	}
	if (!ptep_present(pmdp)) {
8001732c:	5440001b 	bnezl	v0,8001739c <get_pte+0xa4>
80017330:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:84
		struct Page *page;
		if (!create || (page = alloc_page()) == NULL) {
80017334:	10c0002d 	beqz	a2,800173ec <get_pte+0xf4>
80017338:	8fbf0024 	lw	ra,36(sp)
8001733c:	0c0073df 	jal	8001cf7c <alloc_pages>
80017340:	24040001 	li	a0,1
80017344:	10400028 	beqz	v0,800173e8 <get_pte+0xf0>
80017348:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001734c:	8c6377bc 	lw	v1,30652(v1)
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:89
			return NULL;
		}
		set_page_ref(page, 1);
		uintptr_t pa = page2pa(page);
		memset(KADDR(pa), 0, PGSIZE);
80017350:	3c128015 	lui	s2,0x8015
80017354:	8e447770 	lw	a0,30576(s2)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
80017358:	00431823 	subu	v1,v0,v1
8001735c:	00031943 	sra	v1,v1,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80017360:	00031b00 	sll	v1,v1,0xc
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:89
80017364:	00032b02 	srl	a1,v1,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
80017368:	3c138000 	lui	s3,0x8000
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:89
8001736c:	00a4202b 	sltu	a0,a1,a0
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
80017370:	26731000 	addiu	s3,s3,4096
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80017374:	24050001 	li	a1,1
80017378:	ac450000 	sw	a1,0(v0)
get_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:89
8001737c:	10800029 	beqz	a0,80017424 <get_pte+0x12c>
80017380:	00739821 	addu	s3,v1,s3
80017384:	02602021 	move	a0,s3
80017388:	00002821 	move	a1,zero
8001738c:	24061000 	li	a2,4096
80017390:	0c005c44 	jal	80017110 <memset>
80017394:	36730067 	ori	s3,s3,0x67
80017398:	ae130000 	sw	s3,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:104
		ptep_set_dirty(pmdp);
#else
#warning ARM9 PDE does not have access field
#endif
	}
	return &((pte_t *) KADDR(PMD_ADDR(*pmdp)))[PTX(la)];
8001739c:	2402f000 	li	v0,-4096
800173a0:	02629824 	and	s3,s3,v0
800173a4:	3c027fff 	lui	v0,0x7fff
800173a8:	8e437770 	lw	v1,30576(s2)
800173ac:	3442f000 	ori	v0,v0,0xf000
800173b0:	02621021 	addu	v0,s3,v0
800173b4:	00021302 	srl	v0,v0,0xc
800173b8:	0043102b 	sltu	v0,v0,v1
800173bc:	10400012 	beqz	v0,80017408 <get_pte+0x110>
800173c0:	8fbf0024 	lw	ra,36(sp)
800173c4:	7e224b00 	ext	v0,s1,0xc,0xa
800173c8:	00021080 	sll	v0,v0,0x2
800173cc:	02621021 	addu	v0,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:106
#endif /* PTXSHIFT == PMXSHIFT */
}
800173d0:	8fb2001c 	lw	s2,28(sp)
800173d4:	8fb30020 	lw	s3,32(sp)
800173d8:	8fb10018 	lw	s1,24(sp)
800173dc:	8fb00014 	lw	s0,20(sp)
800173e0:	03e00008 	jr	ra
800173e4:	27bd0028 	addiu	sp,sp,40
800173e8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:85
		return NULL;
	}
	if (!ptep_present(pmdp)) {
		struct Page *page;
		if (!create || (page = alloc_page()) == NULL) {
			return NULL;
800173ec:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:106
#warning ARM9 PDE does not have access field
#endif
	}
	return &((pte_t *) KADDR(PMD_ADDR(*pmdp)))[PTX(la)];
#endif /* PTXSHIFT == PMXSHIFT */
}
800173f0:	8fb30020 	lw	s3,32(sp)
800173f4:	8fb2001c 	lw	s2,28(sp)
800173f8:	8fb10018 	lw	s1,24(sp)
800173fc:	8fb00014 	lw	s0,20(sp)
80017400:	03e00008 	jr	ra
80017404:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:104
		ptep_set_dirty(pmdp);
#else
#warning ARM9 PDE does not have access field
#endif
	}
	return &((pte_t *) KADDR(PMD_ADDR(*pmdp)))[PTX(la)];
80017408:	3c048002 	lui	a0,0x8002
8001740c:	3c068002 	lui	a2,0x8002
80017410:	248435b0 	addiu	a0,a0,13744
80017414:	24050068 	li	a1,104
80017418:	24c625ec 	addiu	a2,a2,9708
8001741c:	0c006afd 	jal	8001abf4 <__panic>
80017420:	02603821 	move	a3,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:89
		if (!create || (page = alloc_page()) == NULL) {
			return NULL;
		}
		set_page_ref(page, 1);
		uintptr_t pa = page2pa(page);
		memset(KADDR(pa), 0, PGSIZE);
80017424:	3c048002 	lui	a0,0x8002
80017428:	3c068002 	lui	a2,0x8002
8001742c:	248435b0 	addiu	a0,a0,13744
80017430:	24050059 	li	a1,89
80017434:	24c625ec 	addiu	a2,a2,9708
80017438:	0c006afd 	jal	8001abf4 <__panic>
8001743c:	02603821 	move	a3,s3

80017440 <get_page>:
get_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:116
 * @param la linear address
 * @param ptep_store table entry stored if not NULL
 * @return @la's corresponding page descriptor
 */
struct Page *get_page(pgd_t * pgdir, uintptr_t la, pte_t ** ptep_store)
{
80017440:	27bdffe8 	addiu	sp,sp,-24
80017444:	afb00010 	sw	s0,16(sp)
80017448:	00c08021 	move	s0,a2
8001744c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:117
	pte_t *ptep = get_pte(pgdir, la, 0);
80017450:	0c005cbe 	jal	800172f8 <get_pte>
80017454:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:118
	if (ptep_store != NULL) {
80017458:	56000001 	bnezl	s0,80017460 <get_page+0x20>
8001745c:	ae020000 	sw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:121
		*ptep_store = ptep;
	}
	if (ptep != NULL && ptep_present(ptep)) {
80017460:	10400014 	beqz	v0,800174b4 <get_page+0x74>
80017464:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017468:	8c420000 	lw	v0,0(v0)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
8001746c:	30430001 	andi	v1,v0,0x1
get_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:121
{
	pte_t *ptep = get_pte(pgdir, la, 0);
	if (ptep_store != NULL) {
		*ptep_store = ptep;
	}
	if (ptep != NULL && ptep_present(ptep)) {
80017470:	10600010 	beqz	v1,800174b4 <get_page+0x74>
80017474:	3c038015 	lui	v1,0x8015
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017478:	3c047fff 	lui	a0,0x7fff
8001747c:	8c637770 	lw	v1,30576(v1)
80017480:	3484f000 	ori	a0,a0,0xf000
80017484:	00441021 	addu	v0,v0,a0
80017488:	00021302 	srl	v0,v0,0xc
8001748c:	0043182b 	sltu	v1,v0,v1
80017490:	1060000c 	beqz	v1,800174c4 <get_page+0x84>
80017494:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017498:	8c6377bc 	lw	v1,30652(v1)
get_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:125
		return pa2page(*ptep);
	}
	return NULL;
}
8001749c:	8fbf0014 	lw	ra,20(sp)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
800174a0:	00021140 	sll	v0,v0,0x5
800174a4:	00621021 	addu	v0,v1,v0
get_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:125
800174a8:	8fb00010 	lw	s0,16(sp)
800174ac:	03e00008 	jr	ra
800174b0:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:124
		*ptep_store = ptep;
	}
	if (ptep != NULL && ptep_present(ptep)) {
		return pa2page(*ptep);
	}
	return NULL;
800174b4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:125
}
800174b8:	8fb00010 	lw	s0,16(sp)
800174bc:	03e00008 	jr	ra
800174c0:	27bd0018 	addiu	sp,sp,24
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800174c4:	0c007e52 	jal	8001f948 <pa2page.part.7>
800174c8:	00000000 	nop

800174cc <page_remove_pte>:
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
800174cc:	8cc20000 	lw	v0,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:136
 * @param la logical address of the page to be removed
 * @param page table entry of the page to be removed
 * note: PT is changed, so the TLB need to be invalidate 
 */
void page_remove_pte(pgd_t * pgdir, uintptr_t la, pte_t * ptep)
{
800174d0:	27bdffd0 	addiu	sp,sp,-48
800174d4:	afb10020 	sw	s1,32(sp)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
800174d8:	30430001 	andi	v1,v0,0x1
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:136
800174dc:	afb0001c 	sw	s0,28(sp)
800174e0:	afbf002c 	sw	ra,44(sp)
800174e4:	afb30028 	sw	s3,40(sp)
800174e8:	afb20024 	sw	s2,36(sp)
800174ec:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:137
	if (ptep_present(ptep)) {
800174f0:	1460000a 	bnez	v1,8001751c <page_remove_pte+0x50>
800174f4:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:153
			}
			page_ref_dec(page);
		}
		ptep_unmap(ptep);
		mp_tlb_invalidate(pgdir, la);
	} else if (!ptep_invalid(ptep)) {
800174f8:	54400001 	bnezl	v0,80017500 <page_remove_pte+0x34>
800174fc:	acc00000 	sw	zero,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:159
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
#endif
		ptep_unmap(ptep);
	}
}
80017500:	8fbf002c 	lw	ra,44(sp)
80017504:	8fb30028 	lw	s3,40(sp)
80017508:	8fb20024 	lw	s2,36(sp)
8001750c:	8fb10020 	lw	s1,32(sp)
80017510:	8fb0001c 	lw	s0,28(sp)
80017514:	03e00008 	jr	ra
80017518:	27bd0030 	addiu	sp,sp,48
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
8001751c:	2403f000 	li	v1,-4096
80017520:	00431024 	and	v0,v0,v1
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017524:	3c047fff 	lui	a0,0x7fff
80017528:	3c038015 	lui	v1,0x8015
8001752c:	8c637770 	lw	v1,30576(v1)
80017530:	3484f000 	ori	a0,a0,0xf000
80017534:	00441021 	addu	v0,v0,a0
80017538:	00021302 	srl	v0,v0,0xc
8001753c:	0043182b 	sltu	v1,v0,v1
80017540:	1060006c 	beqz	v1,800176f4 <page_remove_pte+0x228>
80017544:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017548:	8c7277bc 	lw	s2,30652(v1)
8001754c:	00021140 	sll	v0,v0,0x5
80017550:	02429021 	addu	s2,s2,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80017554:	40026000 	mfc0	v0,c0_status
80017558:	30420001 	andi	v0,v0,0x1
8001755c:	1440001b 	bnez	v0,800175cc <page_remove_pte+0x100>
80017560:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80017564:	8e530004 	lw	s3,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80017568:	7e730100 	ext	s3,s3,0x4,0x1
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:139
 */
void page_remove_pte(pgd_t * pgdir, uintptr_t la, pte_t * ptep)
{
	if (ptep_present(ptep)) {
		struct Page *page = pte2page(*ptep);
		if (!PageSwap(page)) {
8001756c:	1260001e 	beqz	s3,800175e8 <page_remove_pte+0x11c>
80017570:	00000000 	nop
ptep_dirty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:114
	return *ptep & PTE_A;
}

static inline int ptep_dirty(pte_t * ptep)
{
	return *ptep & PTE_D;
80017574:	8cc20000 	lw	v0,0(a2)
80017578:	30420040 	andi	v0,v0,0x40
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:146
				//Don't free dma pages
				if (!PageIO(page))
					free_page(page);
			}
		} else {
			if (ptep_dirty(ptep)) {
8001757c:	1440003b 	bnez	v0,8001766c <page_remove_pte+0x1a0>
80017580:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80017584:	40026000 	mfc0	v0,c0_status
80017588:	30420001 	andi	v0,v0,0x1
8001758c:	1440002e 	bnez	v0,80017648 <page_remove_pte+0x17c>
80017590:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80017594:	8e420000 	lw	v0,0(s2)
80017598:	2442ffff 	addiu	v0,v0,-1
8001759c:	ae420000 	sw	v0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800175a0:	8e420000 	lw	v0,0(s2)
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:152
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
		ptep_unmap(ptep);
		mp_tlb_invalidate(pgdir, la);
800175a4:	02202021 	move	a0,s1
800175a8:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:159
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
#endif
		ptep_unmap(ptep);
	}
}
800175ac:	8fbf002c 	lw	ra,44(sp)
800175b0:	8fb30028 	lw	s3,40(sp)
800175b4:	8fb20024 	lw	s2,36(sp)
800175b8:	8fb10020 	lw	s1,32(sp)
800175bc:	8fb0001c 	lw	s0,28(sp)
ptep_unmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
800175c0:	acc00000 	sw	zero,0(a2)
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:152
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
		ptep_unmap(ptep);
		mp_tlb_invalidate(pgdir, la);
800175c4:	08007b73 	j	8001edcc <mp_tlb_invalidate>
800175c8:	27bd0030 	addiu	sp,sp,48
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800175cc:	0c006cbe 	jal	8001b2f8 <intr_disable>
800175d0:	afa60010 	sw	a2,16(sp)
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800175d4:	8e530004 	lw	s3,4(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800175d8:	0c006cba 	jal	8001b2e8 <intr_enable>
800175dc:	7e730100 	ext	s3,s3,0x4,0x1
800175e0:	08005d5b 	j	8001756c <page_remove_pte+0xa0>
800175e4:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800175e8:	40026000 	mfc0	v0,c0_status
800175ec:	30420001 	andi	v0,v0,0x1
800175f0:	14400030 	bnez	v0,800176b4 <page_remove_pte+0x1e8>
800175f4:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800175f8:	8e420000 	lw	v0,0(s2)
800175fc:	2442ffff 	addiu	v0,v0,-1
80017600:	ae420000 	sw	v0,0(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80017604:	8e420000 	lw	v0,0(s2)
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:140
void page_remove_pte(pgd_t * pgdir, uintptr_t la, pte_t * ptep)
{
	if (ptep_present(ptep)) {
		struct Page *page = pte2page(*ptep);
		if (!PageSwap(page)) {
			if (page_ref_dec(page) == 0) {
80017608:	1440ffe7 	bnez	v0,800175a8 <page_remove_pte+0xdc>
8001760c:	02202021 	move	a0,s1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
80017610:	40026000 	mfc0	v0,c0_status
80017614:	30420001 	andi	v0,v0,0x1
80017618:	1440002f 	bnez	v0,800176d8 <page_remove_pte+0x20c>
8001761c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80017620:	8e530004 	lw	s3,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80017624:	7e730180 	ext	s3,s3,0x6,0x1
page_remove_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:142
				//Don't free dma pages
				if (!PageIO(page))
80017628:	1660ffdf 	bnez	s3,800175a8 <page_remove_pte+0xdc>
8001762c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:143
					free_page(page);
80017630:	02402021 	move	a0,s2
80017634:	24050001 	li	a1,1
80017638:	0c0073fb 	jal	8001cfec <free_pages>
8001763c:	afa60010 	sw	a2,16(sp)
80017640:	08005d69 	j	800175a4 <page_remove_pte+0xd8>
80017644:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80017648:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001764c:	afa60010 	sw	a2,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80017650:	8e420000 	lw	v0,0(s2)
80017654:	2442ffff 	addiu	v0,v0,-1
80017658:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001765c:	0c006cba 	jal	8001b2e8 <intr_enable>
80017660:	00000000 	nop
80017664:	08005d68 	j	800175a0 <page_remove_pte+0xd4>
80017668:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001766c:	40026000 	mfc0	v0,c0_status
80017670:	30420001 	andi	v0,v0,0x1
80017674:	14400006 	bnez	v0,80017690 <page_remove_pte+0x1c4>
80017678:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001767c:	8e420004 	lw	v0,4(s2)
80017680:	34420008 	ori	v0,v0,0x8
80017684:	ae420004 	sw	v0,4(s2)
80017688:	08005d61 	j	80017584 <page_remove_pte+0xb8>
8001768c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80017690:	0c006cbe 	jal	8001b2f8 <intr_disable>
80017694:	afa60010 	sw	a2,16(sp)
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
80017698:	8e420004 	lw	v0,4(s2)
8001769c:	34420008 	ori	v0,v0,0x8
800176a0:	ae420004 	sw	v0,4(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800176a4:	0c006cba 	jal	8001b2e8 <intr_enable>
800176a8:	00000000 	nop
800176ac:	08005d61 	j	80017584 <page_remove_pte+0xb8>
800176b0:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800176b4:	0c006cbe 	jal	8001b2f8 <intr_disable>
800176b8:	afa60010 	sw	a2,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800176bc:	8e420000 	lw	v0,0(s2)
800176c0:	2442ffff 	addiu	v0,v0,-1
800176c4:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800176c8:	0c006cba 	jal	8001b2e8 <intr_enable>
800176cc:	00000000 	nop
800176d0:	08005d81 	j	80017604 <page_remove_pte+0x138>
800176d4:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800176d8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800176dc:	afa60010 	sw	a2,16(sp)
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800176e0:	8e530004 	lw	s3,4(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800176e4:	0c006cba 	jal	8001b2e8 <intr_enable>
800176e8:	7e730180 	ext	s3,s3,0x6,0x1
800176ec:	08005d8a 	j	80017628 <page_remove_pte+0x15c>
800176f0:	8fa60010 	lw	a2,16(sp)
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800176f4:	0c007e52 	jal	8001f948 <pa2page.part.7>
800176f8:	00000000 	nop

800176fc <page_insert>:
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:170
 * @param la logical address of the page
 * @param perm permission of the page
 * @return 0 on success and error code when failed
 */
int page_insert(pgd_t * pgdir, struct Page *page, uintptr_t la, pte_perm_t perm)
{
800176fc:	27bdffd0 	addiu	sp,sp,-48
80017700:	afb1001c 	sw	s1,28(sp)
80017704:	00c08821 	move	s1,a2
80017708:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:172

	pte_t *ptep = get_pte(pgdir, la, 1);
8001770c:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:170
 * @param la logical address of the page
 * @param perm permission of the page
 * @return 0 on success and error code when failed
 */
int page_insert(pgd_t * pgdir, struct Page *page, uintptr_t la, pte_perm_t perm)
{
80017710:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:172

	pte_t *ptep = get_pte(pgdir, la, 1);
80017714:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:170
 * @param la logical address of the page
 * @param perm permission of the page
 * @return 0 on success and error code when failed
 */
int page_insert(pgd_t * pgdir, struct Page *page, uintptr_t la, pte_perm_t perm)
{
80017718:	afb30024 	sw	s3,36(sp)
8001771c:	afb20020 	sw	s2,32(sp)
80017720:	afbf002c 	sw	ra,44(sp)
80017724:	afb40028 	sw	s4,40(sp)
80017728:	00809021 	move	s2,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:172

	pte_t *ptep = get_pte(pgdir, la, 1);
8001772c:	0c005cbe 	jal	800172f8 <get_pte>
80017730:	00e09821 	move	s3,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:178
	/*kprintf("page2kva(p):0x%08x",page2kva(page));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x1100):0x%08x",*(int*)(page2kva(page)+0x1100));
		kprintf("\n\r");
	kprintf("*(int*)(0x1100):0x%08x",*(int*)(0x1100));*/
	if (ptep == NULL) {
80017734:	50400024 	beqzl	v0,800177c8 <page_insert+0xcc>
80017738:	2402fff4 	li	v0,-12
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001773c:	40036000 	mfc0	v1,c0_status
80017740:	30630001 	andi	v1,v1,0x1
80017744:	14600028 	bnez	v1,800177e8 <page_insert+0xec>
80017748:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8001774c:	8e030000 	lw	v1,0(s0)
80017750:	24630001 	addiu	v1,v1,1
80017754:	ae030000 	sw	v1,0(s0)
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:182
		return -E_NO_MEM;
	}
	page_ref_inc(page);
	if (*ptep != 0) {
80017758:	8c430000 	lw	v1,0(v0)
page_ref_inc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8001775c:	8e040000 	lw	a0,0(s0)
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:182
80017760:	1060000b 	beqz	v1,80017790 <page_insert+0x94>
80017764:	3c148015 	lui	s4,0x8015
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80017768:	30640001 	andi	a0,v1,0x1
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:183
		if (ptep_present(ptep) && pte2page(*ptep) == page) {
8001776c:	14800027 	bnez	a0,8001780c <page_insert+0x110>
80017770:	2404f000 	li	a0,-4096
80017774:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:187
			page_ref_dec(page);
			goto out;
		}
		page_remove_pte(pgdir, la, ptep);
80017778:	00403021 	move	a2,v0
8001777c:	02402021 	move	a0,s2
80017780:	02202821 	move	a1,s1
80017784:	0c005d33 	jal	800174cc <page_remove_pte>
80017788:	afa20010 	sw	v0,16(sp)
8001778c:	8fa20010 	lw	v0,16(sp)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80017790:	8e8377bc 	lw	v1,30652(s4)
ptep_map():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:11

typedef pte_t pte_perm_t;

static inline void ptep_map(pte_t * ptep, uintptr_t pa)
{
	*ptep = (pa | PTE_P);
80017794:	36730001 	ori	s3,s3,0x1
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:198
	kprintf("*(int*)(page2kva(p)+0x1100):0x%08x",*(int*)(page2kva(page)+0x1100));
		kprintf("\n\r");
	kprintf("*(int*)(0x1100):0x%08x",*(int*)(0x1100));*/
	ptep_map(ptep, page2pa(page));
	ptep_set_perm(ptep, perm);
	mp_tlb_update(pgdir, la);
80017798:	02402021 	move	a0,s2
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
8001779c:	02038023 	subu	s0,s0,v1
800177a0:	00108143 	sra	s0,s0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800177a4:	3c038000 	lui	v1,0x8000
800177a8:	24631000 	addiu	v1,v1,4096
800177ac:	00108300 	sll	s0,s0,0xc
800177b0:	02038021 	addu	s0,s0,v1
ptep_set_perm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:94
	return (*ptep) & perm;
}

static inline void ptep_set_perm(pte_t * ptep, pte_perm_t perm)
{
	*ptep |= perm;
800177b4:	02709825 	or	s3,s3,s0
800177b8:	ac530000 	sw	s3,0(v0)
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:198
800177bc:	0c007b75 	jal	8001edd4 <mp_tlb_update>
800177c0:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:199
	return 0;
800177c4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:201

}
800177c8:	8fbf002c 	lw	ra,44(sp)
800177cc:	8fb40028 	lw	s4,40(sp)
800177d0:	8fb30024 	lw	s3,36(sp)
800177d4:	8fb20020 	lw	s2,32(sp)
800177d8:	8fb1001c 	lw	s1,28(sp)
800177dc:	8fb00018 	lw	s0,24(sp)
800177e0:	03e00008 	jr	ra
800177e4:	27bd0030 	addiu	sp,sp,48
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800177e8:	0c006cbe 	jal	8001b2f8 <intr_disable>
800177ec:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800177f0:	8e030000 	lw	v1,0(s0)
800177f4:	24630001 	addiu	v1,v1,1
800177f8:	ae030000 	sw	v1,0(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800177fc:	0c006cba 	jal	8001b2e8 <intr_enable>
80017800:	00000000 	nop
80017804:	08005dd6 	j	80017758 <page_insert+0x5c>
80017808:	8fa20010 	lw	v0,16(sp)
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
8001780c:	00641824 	and	v1,v1,a0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017810:	3c057fff 	lui	a1,0x7fff
80017814:	3c048015 	lui	a0,0x8015
80017818:	8c847770 	lw	a0,30576(a0)
8001781c:	34a5f000 	ori	a1,a1,0xf000
80017820:	00651821 	addu	v1,v1,a1
80017824:	00031b02 	srl	v1,v1,0xc
80017828:	0064202b 	sltu	a0,v1,a0
8001782c:	1080001b 	beqz	a0,8001789c <page_insert+0x1a0>
80017830:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017834:	8e8477bc 	lw	a0,30652(s4)
80017838:	00031940 	sll	v1,v1,0x5
8001783c:	00831821 	addu	v1,a0,v1
page_insert():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:183
	if (ptep == NULL) {
		return -E_NO_MEM;
	}
	page_ref_inc(page);
	if (*ptep != 0) {
		if (ptep_present(ptep) && pte2page(*ptep) == page) {
80017840:	1603ffce 	bne	s0,v1,8001777c <page_insert+0x80>
80017844:	00403021 	move	a2,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80017848:	40036000 	mfc0	v1,c0_status
8001784c:	30630001 	andi	v1,v1,0x1
80017850:	14600007 	bnez	v1,80017870 <page_insert+0x174>
80017854:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80017858:	8e030000 	lw	v1,0(s0)
8001785c:	2463ffff 	addiu	v1,v1,-1
80017860:	ae030000 	sw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80017864:	8e030000 	lw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80017868:	08005de5 	j	80017794 <page_insert+0x98>
8001786c:	8e8377bc 	lw	v1,30652(s4)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80017870:	0c006cbe 	jal	8001b2f8 <intr_disable>
80017874:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80017878:	8e030000 	lw	v1,0(s0)
8001787c:	2463ffff 	addiu	v1,v1,-1
80017880:	ae030000 	sw	v1,0(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80017884:	0c006cba 	jal	8001b2e8 <intr_enable>
80017888:	00000000 	nop
8001788c:	8fa20010 	lw	v0,16(sp)
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80017890:	8e030000 	lw	v1,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
80017894:	08005de5 	j	80017794 <page_insert+0x98>
80017898:	8e8377bc 	lw	v1,30652(s4)
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001789c:	0c007e52 	jal	8001f948 <pa2page.part.7>
800178a0:	00000000 	nop

800178a4 <page_remove>:
page_remove():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:228
 * page_remove - free an Page which is related linear address la and has an validated pte
 * @param pgdir page directory
 * @param la logical address of the page to be removed
 */
void page_remove(pgd_t * pgdir, uintptr_t la)
{
800178a4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:229
	pte_t *ptep = get_pte(pgdir, la, 0);
800178a8:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:228
 * page_remove - free an Page which is related linear address la and has an validated pte
 * @param pgdir page directory
 * @param la logical address of the page to be removed
 */
void page_remove(pgd_t * pgdir, uintptr_t la)
{
800178ac:	afb10018 	sw	s1,24(sp)
800178b0:	afb00014 	sw	s0,20(sp)
800178b4:	afbf001c 	sw	ra,28(sp)
800178b8:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:229
	pte_t *ptep = get_pte(pgdir, la, 0);
800178bc:	0c005cbe 	jal	800172f8 <get_pte>
800178c0:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:230
	if (ptep != NULL) {
800178c4:	10400008 	beqz	v0,800178e8 <page_remove+0x44>
800178c8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:231
		page_remove_pte(pgdir, la, ptep);
800178cc:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:233
	}
}
800178d0:	8fbf001c 	lw	ra,28(sp)
800178d4:	8fb10018 	lw	s1,24(sp)
800178d8:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:231
 */
void page_remove(pgd_t * pgdir, uintptr_t la)
{
	pte_t *ptep = get_pte(pgdir, la, 0);
	if (ptep != NULL) {
		page_remove_pte(pgdir, la, ptep);
800178dc:	00403021 	move	a2,v0
800178e0:	08005d33 	j	800174cc <page_remove_pte>
800178e4:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:233
	}
}
800178e8:	8fbf001c 	lw	ra,28(sp)
800178ec:	8fb10018 	lw	s1,24(sp)
800178f0:	8fb00014 	lw	s0,20(sp)
800178f4:	03e00008 	jr	ra
800178f8:	27bd0020 	addiu	sp,sp,32

800178fc <pgdir_alloc_page>:
pgdir_alloc_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:245
 * @param la       logical address for the page to be allocated
 * @param perm     permission of the page
 * @return         the page descriptor of the allocated
 */
struct Page *pgdir_alloc_page(pgd_t * pgdir, uintptr_t la, uint32_t perm)
{
800178fc:	27bdffd8 	addiu	sp,sp,-40
80017900:	afb30020 	sw	s3,32(sp)
80017904:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:246
	struct Page *page = alloc_page();
80017908:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:245
 * @param la       logical address for the page to be allocated
 * @param perm     permission of the page
 * @return         the page descriptor of the allocated
 */
struct Page *pgdir_alloc_page(pgd_t * pgdir, uintptr_t la, uint32_t perm)
{
8001790c:	afb2001c 	sw	s2,28(sp)
80017910:	afb10018 	sw	s1,24(sp)
80017914:	afb00014 	sw	s0,20(sp)
80017918:	afbf0024 	sw	ra,36(sp)
8001791c:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:246
	struct Page *page = alloc_page();
80017920:	0c0073df 	jal	8001cf7c <alloc_pages>
80017924:	00c08821 	move	s1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:247
	if (page != NULL) {
80017928:	10400019 	beqz	v0,80017990 <pgdir_alloc_page+0x94>
8001792c:	00408021 	move	s0,v0
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80017930:	3c028015 	lui	v0,0x8015
80017934:	8c4277bc 	lw	v0,30652(v0)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80017938:	3c038015 	lui	v1,0x8015
8001793c:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80017940:	02021023 	subu	v0,s0,v0
80017944:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80017948:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001794c:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80017950:	3c078000 	lui	a3,0x8000
80017954:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80017958:	0083182b 	sltu	v1,a0,v1
8001795c:	10600018 	beqz	v1,800179c0 <pgdir_alloc_page+0xc4>
80017960:	00473821 	addu	a3,v0,a3
pgdir_alloc_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:249
		//zero it!
		memset(page2kva(page), 0, PGSIZE);
80017964:	00e02021 	move	a0,a3
80017968:	00002821 	move	a1,zero
8001796c:	0c005c44 	jal	80017110 <memset>
80017970:	24061000 	li	a2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:250
		if (page_insert(pgdir, page, la, perm) != 0) {
80017974:	02602021 	move	a0,s3
80017978:	02002821 	move	a1,s0
8001797c:	02403021 	move	a2,s2
80017980:	0c005dbf 	jal	800176fc <page_insert>
80017984:	02203821 	move	a3,s1
80017988:	14400009 	bnez	v0,800179b0 <pgdir_alloc_page+0xb4>
8001798c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:256
			free_page(page);
			return NULL;
		}
	}
	return page;
}
80017990:	8fbf0024 	lw	ra,36(sp)
80017994:	02001021 	move	v0,s0
80017998:	8fb30020 	lw	s3,32(sp)
8001799c:	8fb2001c 	lw	s2,28(sp)
800179a0:	8fb10018 	lw	s1,24(sp)
800179a4:	8fb00014 	lw	s0,20(sp)
800179a8:	03e00008 	jr	ra
800179ac:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:251
	struct Page *page = alloc_page();
	if (page != NULL) {
		//zero it!
		memset(page2kva(page), 0, PGSIZE);
		if (page_insert(pgdir, page, la, perm) != 0) {
			free_page(page);
800179b0:	0c0073fb 	jal	8001cfec <free_pages>
800179b4:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:252
			return NULL;
800179b8:	08005e64 	j	80017990 <pgdir_alloc_page+0x94>
800179bc:	00008021 	move	s0,zero
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
800179c0:	3c048002 	lui	a0,0x8002
800179c4:	3c068002 	lui	a2,0x8002
800179c8:	24842564 	addiu	a0,a0,9572
800179cc:	2405006a 	li	a1,106
800179d0:	0c006afd 	jal	8001abf4 <__panic>
800179d4:	24c625ec 	addiu	a2,a2,9708

800179d8 <unmap_range>:
unmap_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:345
		}
		start += size, la += PUSIZE;
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
800179d8:	00c51025 	or	v0,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:346
{
800179dc:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:345
		}
		start += size, la += PUSIZE;
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
800179e0:	30420fff 	andi	v0,v0,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:346
{
800179e4:	afbe0030 	sw	s8,48(sp)
800179e8:	afb50024 	sw	s5,36(sp)
800179ec:	afb10014 	sw	s1,20(sp)
800179f0:	afbf0034 	sw	ra,52(sp)
800179f4:	afb7002c 	sw	s7,44(sp)
800179f8:	afb60028 	sw	s6,40(sp)
800179fc:	afb40020 	sw	s4,32(sp)
80017a00:	afb3001c 	sw	s3,28(sp)
80017a04:	afb20018 	sw	s2,24(sp)
80017a08:	afb00010 	sw	s0,16(sp)
80017a0c:	00a08821 	move	s1,a1
80017a10:	00c0a821 	move	s5,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:347
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017a14:	1440006d 	bnez	v0,80017bcc <unmap_range+0x1f4>
80017a18:	0080f021 	move	s8,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:348
	assert(USER_ACCESS(start, end));
80017a1c:	00a6102b 	sltu	v0,a1,a2
80017a20:	10400062 	beqz	v0,80017bac <unmap_range+0x1d4>
80017a24:	3c028000 	lui	v0,0x8000
80017a28:	24420001 	addiu	v0,v0,1
80017a2c:	00c2102b 	sltu	v0,a2,v0
80017a30:	1040005e 	beqz	v0,80017bac <unmap_range+0x1d4>
80017a34:	3c12ffc0 	lui	s2,0xffc0
unmap_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:332
static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
	do {
		off = start - la, size = PUSIZE - off;
80017a38:	3c170040 	lui	s7,0x40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:330
}

static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
80017a3c:	00b29024 	and	s2,a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:336
	do {
		off = start - la, size = PUSIZE - off;
		if (size > end - start) {
			size = end - start;
		}
		pgd_t *pgdp = &pgd[PGX(la)];
80017a40:	00121582 	srl	v0,s2,0x16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017a44:	00021080 	sll	v0,v0,0x2
80017a48:	03c21021 	addu	v0,s8,v0
80017a4c:	8c440000 	lw	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:332
static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
	do {
		off = start - la, size = PUSIZE - off;
80017a50:	02328023 	subu	s0,s1,s2
80017a54:	02f01823 	subu	v1,s7,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:333
		if (size > end - start) {
80017a58:	02b11023 	subu	v0,s5,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:332
static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
	do {
		off = start - la, size = PUSIZE - off;
80017a5c:	0043b02b 	sltu	s6,v0,v1
80017a60:	0076100a 	movz	v0,v1,s6
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80017a64:	30850001 	andi	a1,a0,0x1
unmap_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:337
		if (size > end - start) {
			size = end - start;
		}
		pgd_t *pgdp = &pgd[PGX(la)];
		if (ptep_present(pgdp)) {
80017a68:	10a00028 	beqz	a1,80017b0c <unmap_range+0x134>
80017a6c:	0040b021 	move	s6,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:338
			unmap_range_pud(pgd, KADDR(PGD_ADDR(*pgdp)), la, off,
80017a70:	2414f000 	li	s4,-4096
80017a74:	0094a024 	and	s4,a0,s4
80017a78:	3c028015 	lui	v0,0x8015
80017a7c:	3c047fff 	lui	a0,0x7fff
80017a80:	8c437770 	lw	v1,30576(v0)
80017a84:	3484f000 	ori	a0,a0,0xf000
80017a88:	02841021 	addu	v0,s4,a0
80017a8c:	00021302 	srl	v0,v0,0xc
80017a90:	0043102b 	sltu	v0,v0,v1
80017a94:	1040002f 	beqz	v0,80017b54 <unmap_range+0x17c>
80017a98:	02d09821 	addu	s3,s6,s0
unmap_range_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:266

static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
80017a9c:	0213102b 	sltu	v0,s0,s3
80017aa0:	1040003a 	beqz	v0,80017b8c <unmap_range+0x1b4>
80017aa4:	3c030040 	lui	v1,0x40
80017aa8:	34630001 	ori	v1,v1,0x1
80017aac:	0263102b 	sltu	v0,s3,v1
80017ab0:	10400036 	beqz	v0,80017b8c <unmap_range+0x1b4>
80017ab4:	02701025 	or	v0,s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:345
		}
		start += size, la += PUSIZE;
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017ab8:	30420fff 	andi	v0,v0,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:267
static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017abc:	10400008 	beqz	v0,80017ae0 <unmap_range+0x108>
80017ac0:	7e064b00 	ext	a2,s0,0xc,0xa
80017ac4:	08005edc 	j	80017b70 <unmap_range+0x198>
80017ac8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:274
		pte_t *ptep = &pte[PTX(start)];
		if (*ptep != 0) {
			page_remove_pte(pgdir, base + start, ptep);
		}
		start += PGSIZE;
	} while (start != 0 && start < end);
80017acc:	52000010 	beqzl	s0,80017b10 <unmap_range+0x138>
80017ad0:	02368821 	addu	s1,s1,s6
80017ad4:	0213102b 	sltu	v0,s0,s3
80017ad8:	1040000c 	beqz	v0,80017b0c <unmap_range+0x134>
80017adc:	7e064b00 	ext	a2,s0,0xc,0xa
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:269
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	do {
		pte_t *ptep = &pte[PTX(start)];
80017ae0:	00063080 	sll	a2,a2,0x2
80017ae4:	02863021 	addu	a2,s4,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:270
		if (*ptep != 0) {
80017ae8:	8cc20000 	lw	v0,0(a2)
80017aec:	5040fff7 	beqzl	v0,80017acc <unmap_range+0xf4>
80017af0:	26101000 	addiu	s0,s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:271
			page_remove_pte(pgdir, base + start, ptep);
80017af4:	02122821 	addu	a1,s0,s2
80017af8:	03c02021 	move	a0,s8
80017afc:	0c005d33 	jal	800174cc <page_remove_pte>
80017b00:	26101000 	addiu	s0,s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:274
		}
		start += PGSIZE;
	} while (start != 0 && start < end);
80017b04:	1600fff4 	bnez	s0,80017ad8 <unmap_range+0x100>
80017b08:	0213102b 	sltu	v0,s0,s3
unmap_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:341
		pgd_t *pgdp = &pgd[PGX(la)];
		if (ptep_present(pgdp)) {
			unmap_range_pud(pgd, KADDR(PGD_ADDR(*pgdp)), la, off,
					off + size);
		}
		start += size, la += PUSIZE;
80017b0c:	02368821 	addu	s1,s1,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:342
	} while (start != 0 && start < end);
80017b10:	12200004 	beqz	s1,80017b24 <unmap_range+0x14c>
80017b14:	02579021 	addu	s2,s2,s7
80017b18:	0235102b 	sltu	v0,s1,s5
80017b1c:	1440ffc9 	bnez	v0,80017a44 <unmap_range+0x6c>
80017b20:	00121582 	srl	v0,s2,0x16
unmap_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:350
void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
	unmap_range_pgd(pgdir, start, end);
}
80017b24:	8fbf0034 	lw	ra,52(sp)
80017b28:	8fbe0030 	lw	s8,48(sp)
80017b2c:	8fb7002c 	lw	s7,44(sp)
80017b30:	8fb60028 	lw	s6,40(sp)
80017b34:	8fb50024 	lw	s5,36(sp)
80017b38:	8fb40020 	lw	s4,32(sp)
80017b3c:	8fb3001c 	lw	s3,28(sp)
80017b40:	8fb20018 	lw	s2,24(sp)
80017b44:	8fb10014 	lw	s1,20(sp)
80017b48:	8fb00010 	lw	s0,16(sp)
80017b4c:	03e00008 	jr	ra
80017b50:	27bd0038 	addiu	sp,sp,56
unmap_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:338
		if (size > end - start) {
			size = end - start;
		}
		pgd_t *pgdp = &pgd[PGX(la)];
		if (ptep_present(pgdp)) {
			unmap_range_pud(pgd, KADDR(PGD_ADDR(*pgdp)), la, off,
80017b54:	3c048002 	lui	a0,0x8002
80017b58:	3c068002 	lui	a2,0x8002
80017b5c:	248435b0 	addiu	a0,a0,13744
80017b60:	24050152 	li	a1,338
80017b64:	24c625ec 	addiu	a2,a2,9708
80017b68:	0c006afd 	jal	8001abf4 <__panic>
80017b6c:	02803821 	move	a3,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:267
static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017b70:	248435b0 	addiu	a0,a0,13744
80017b74:	2405010b 	li	a1,267
80017b78:	3c068002 	lui	a2,0x8002
80017b7c:	3c078002 	lui	a3,0x8002
80017b80:	24c609b0 	addiu	a2,a2,2480
80017b84:	0c006afd 	jal	8001abf4 <__panic>
80017b88:	24e72cf0 	addiu	a3,a3,11504
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:266

static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
80017b8c:	3c048002 	lui	a0,0x8002
80017b90:	3c068002 	lui	a2,0x8002
80017b94:	3c078002 	lui	a3,0x8002
80017b98:	248435b0 	addiu	a0,a0,13744
80017b9c:	2405010a 	li	a1,266
80017ba0:	24c609b0 	addiu	a2,a2,2480
80017ba4:	0c006afd 	jal	8001abf4 <__panic>
80017ba8:	24e735d0 	addiu	a3,a3,13776
unmap_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:348
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
80017bac:	3c048002 	lui	a0,0x8002
80017bb0:	3c068002 	lui	a2,0x8002
80017bb4:	3c078002 	lui	a3,0x8002
80017bb8:	248435b0 	addiu	a0,a0,13744
80017bbc:	2405015c 	li	a1,348
80017bc0:	24c609b0 	addiu	a2,a2,2480
80017bc4:	0c006afd 	jal	8001abf4 <__panic>
80017bc8:	24e735b8 	addiu	a3,a3,13752
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:347
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017bcc:	3c048002 	lui	a0,0x8002
80017bd0:	248435b0 	addiu	a0,a0,13744
80017bd4:	08005ede 	j	80017b78 <unmap_range+0x1a0>
80017bd8:	2405015b 	li	a1,347

80017bdc <exit_range>:
exit_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:398
		}
		start += PUSIZE;
	} while (start != 0 && start < end);
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017bdc:	00c51025 	or	v0,a2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:399
{
80017be0:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:398
		}
		start += PUSIZE;
	} while (start != 0 && start < end);
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017be4:	30420fff 	andi	v0,v0,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:399
{
80017be8:	afb30020 	sw	s3,32(sp)
80017bec:	afb2001c 	sw	s2,28(sp)
80017bf0:	afbf0034 	sw	ra,52(sp)
80017bf4:	afb70030 	sw	s7,48(sp)
80017bf8:	afb6002c 	sw	s6,44(sp)
80017bfc:	afb50028 	sw	s5,40(sp)
80017c00:	afb40024 	sw	s4,36(sp)
80017c04:	afb10018 	sw	s1,24(sp)
80017c08:	afb00014 	sw	s0,20(sp)
80017c0c:	00c09021 	move	s2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:400
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017c10:	14400041 	bnez	v0,80017d18 <exit_range+0x13c>
80017c14:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:401
	assert(USER_ACCESS(start, end));
80017c18:	00a6102b 	sltu	v0,a1,a2
80017c1c:	10400036 	beqz	v0,80017cf8 <exit_range+0x11c>
80017c20:	3c028000 	lui	v0,0x8000
80017c24:	24420001 	addiu	v0,v0,1
80017c28:	00c2102b 	sltu	v0,a2,v0
80017c2c:	10400032 	beqz	v0,80017cf8 <exit_range+0x11c>
80017c30:	3c10ffc0 	lui	s0,0xffc0
exit_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:391
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017c34:	3c157fff 	lui	s5,0x7fff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:387
#endif
}

static void exit_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	start = ROUNDDOWN(start, PUSIZE);
80017c38:	00b08024 	and	s0,a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:391
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017c3c:	2416f000 	li	s6,-4096
80017c40:	36b5f000 	ori	s5,s5,0xf000
80017c44:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017c48:	08005f16 	j	80017c58 <exit_range+0x7c>
80017c4c:	3c178015 	lui	s7,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:395
			free_page(pgd2page(*pgdp)), *pgdp = 0;
		}
		start += PUSIZE;
	} while (start != 0 && start < end);
80017c50:	10400019 	beqz	v0,80017cb8 <exit_range+0xdc>
80017c54:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:389

static void exit_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
80017c58:	00108d82 	srl	s1,s0,0x16
80017c5c:	00118880 	sll	s1,s1,0x2
80017c60:	02718821 	addu	s1,s3,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017c64:	8e270000 	lw	a3,0(s1)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
80017c68:	30e20001 	andi	v0,a3,0x1
exit_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:390
static void exit_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
80017c6c:	1040000e 	beqz	v0,80017ca8 <exit_range+0xcc>
80017c70:	3c020040 	lui	v0,0x40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:391
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017c74:	00f63824 	and	a3,a3,s6
80017c78:	8e827770 	lw	v0,30576(s4)
80017c7c:	00f52021 	addu	a0,a3,s5
80017c80:	00042302 	srl	a0,a0,0xc
80017c84:	0082102b 	sltu	v0,a0,v0
80017c88:	10400015 	beqz	v0,80017ce0 <exit_range+0x104>
80017c8c:	8ee277bc 	lw	v0,30652(s7)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
80017c90:	00042140 	sll	a0,a0,0x5
exit_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:392
			free_page(pgd2page(*pgdp)), *pgdp = 0;
80017c94:	24050001 	li	a1,1
80017c98:	0c0073fb 	jal	8001cfec <free_pages>
80017c9c:	00442021 	addu	a0,v0,a0
80017ca0:	ae200000 	sw	zero,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:394
		}
		start += PUSIZE;
80017ca4:	3c020040 	lui	v0,0x40
80017ca8:	02028021 	addu	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:395
	} while (start != 0 && start < end);
80017cac:	1600ffe8 	bnez	s0,80017c50 <exit_range+0x74>
80017cb0:	0212102b 	sltu	v0,s0,s2
exit_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:403
void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
	exit_range_pgd(pgdir, start, end);
}
80017cb4:	8fbf0034 	lw	ra,52(sp)
80017cb8:	8fb70030 	lw	s7,48(sp)
80017cbc:	8fb6002c 	lw	s6,44(sp)
80017cc0:	8fb50028 	lw	s5,40(sp)
80017cc4:	8fb40024 	lw	s4,36(sp)
80017cc8:	8fb30020 	lw	s3,32(sp)
80017ccc:	8fb2001c 	lw	s2,28(sp)
80017cd0:	8fb10018 	lw	s1,24(sp)
80017cd4:	8fb00014 	lw	s0,20(sp)
80017cd8:	03e00008 	jr	ra
80017cdc:	27bd0038 	addiu	sp,sp,56
exit_range_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:391
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017ce0:	3c048002 	lui	a0,0x8002
80017ce4:	3c068002 	lui	a2,0x8002
80017ce8:	248435b0 	addiu	a0,a0,13744
80017cec:	24050187 	li	a1,391
80017cf0:	0c006afd 	jal	8001abf4 <__panic>
80017cf4:	24c625ec 	addiu	a2,a2,9708
exit_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:401
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
80017cf8:	3c048002 	lui	a0,0x8002
80017cfc:	3c068002 	lui	a2,0x8002
80017d00:	3c078002 	lui	a3,0x8002
80017d04:	248435b0 	addiu	a0,a0,13744
80017d08:	24050191 	li	a1,401
80017d0c:	24c609b0 	addiu	a2,a2,2480
80017d10:	0c006afd 	jal	8001abf4 <__panic>
80017d14:	24e735b8 	addiu	a3,a3,13752
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:400
	} while (start != 0 && start < end);
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017d18:	3c048002 	lui	a0,0x8002
80017d1c:	3c068002 	lui	a2,0x8002
80017d20:	3c078002 	lui	a3,0x8002
80017d24:	248435b0 	addiu	a0,a0,13744
80017d28:	24050190 	li	a1,400
80017d2c:	24c609b0 	addiu	a2,a2,2480
80017d30:	0c006afd 	jal	8001abf4 <__panic>
80017d34:	24e72cf0 	addiu	a3,a3,11504

80017d38 <copy_range>:
copy_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:410
/* ucore use copy-on-write when forking a new process,
 * thus copy_range only copy pdt/pte and set their permission to 
 * READONLY, a write will be handled in pgfault
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
80017d38:	00e61025 	or	v0,a3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:411
{
80017d3c:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:410
/* ucore use copy-on-write when forking a new process,
 * thus copy_range only copy pdt/pte and set their permission to 
 * READONLY, a write will be handled in pgfault
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
80017d40:	30420fff 	andi	v0,v0,0xfff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:411
{
80017d44:	afb60028 	sw	s6,40(sp)
80017d48:	afb3001c 	sw	s3,28(sp)
80017d4c:	afb20018 	sw	s2,24(sp)
80017d50:	afb10014 	sw	s1,20(sp)
80017d54:	afb00010 	sw	s0,16(sp)
80017d58:	afbf0034 	sw	ra,52(sp)
80017d5c:	afbe0030 	sw	s8,48(sp)
80017d60:	afb7002c 	sw	s7,44(sp)
80017d64:	afb50024 	sw	s5,36(sp)
80017d68:	afb40020 	sw	s4,32(sp)
80017d6c:	00c08021 	move	s0,a2
80017d70:	00e08821 	move	s1,a3
80017d74:	00809821 	move	s3,a0
80017d78:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:412
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017d7c:	1440007d 	bnez	v0,80017f74 <copy_range+0x23c>
80017d80:	8fb60048 	lw	s6,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:413
	assert(USER_ACCESS(start, end));
80017d84:	00c7102b 	sltu	v0,a2,a3
80017d88:	10400072 	beqz	v0,80017f54 <copy_range+0x21c>
80017d8c:	3c028000 	lui	v0,0x8000
80017d90:	24420001 	addiu	v0,v0,1
80017d94:	00e2102b 	sltu	v0,a3,v0
80017d98:	1040006e 	beqz	v0,80017f54 <copy_range+0x21c>
80017d9c:	3c1e8015 	lui	s8,0x8015
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
80017da0:	3c178015 	lui	s7,0x8015
copy_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:416

	do {
		pte_t *ptep = get_pte(from, start, 0), *nptep;
80017da4:	02402021 	move	a0,s2
80017da8:	02002821 	move	a1,s0
80017dac:	0c005cbe 	jal	800172f8 <get_pte>
80017db0:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:417
		if (ptep == NULL) {
80017db4:	10400042 	beqz	v0,80017ec0 <copy_range+0x188>
80017db8:	0040a021 	move	s4,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:427
			} else {
				start = ROUNDDOWN(start + PTSIZE, PTSIZE);
			}
			continue;
		}
		if (*ptep != 0) {
80017dbc:	8c420000 	lw	v0,0(v0)
80017dc0:	14400013 	bnez	v0,80017e10 <copy_range+0xd8>
80017dc4:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:483
				ptep_copy(&entry, ptep);
				swap_duplicate(entry);
				ptep_copy(nptep, &entry);
			}
		}
		start += PGSIZE;
80017dc8:	26101000 	addiu	s0,s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:484
	} while (start != 0 && start < end);
80017dcc:	12000003 	beqz	s0,80017ddc <copy_range+0xa4>
80017dd0:	0211102b 	sltu	v0,s0,s1
80017dd4:	1440fff4 	bnez	v0,80017da8 <copy_range+0x70>
80017dd8:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:490
#ifdef ARCH_ARM
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
80017ddc:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:491
}
80017de0:	8fbf0034 	lw	ra,52(sp)
80017de4:	8fbe0030 	lw	s8,48(sp)
80017de8:	8fb7002c 	lw	s7,44(sp)
80017dec:	8fb60028 	lw	s6,40(sp)
80017df0:	8fb50024 	lw	s5,36(sp)
80017df4:	8fb40020 	lw	s4,32(sp)
80017df8:	8fb3001c 	lw	s3,28(sp)
80017dfc:	8fb20018 	lw	s2,24(sp)
80017e00:	8fb10014 	lw	s1,20(sp)
80017e04:	8fb00010 	lw	s0,16(sp)
80017e08:	03e00008 	jr	ra
80017e0c:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:428
				start = ROUNDDOWN(start + PTSIZE, PTSIZE);
			}
			continue;
		}
		if (*ptep != 0) {
			if ((nptep = get_pte(to, start, 1)) == NULL) {
80017e10:	02002821 	move	a1,s0
80017e14:	0c005cbe 	jal	800172f8 <get_pte>
80017e18:	24060001 	li	a2,1
80017e1c:	5040fff0 	beqzl	v0,80017de0 <copy_range+0xa8>
80017e20:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:433
				return -E_NO_MEM;
			}
			int ret;
			//kprintf("%08x %08x %08x\n", nptep, *nptep, start);
			assert(*ptep != 0 && *nptep == 0);
80017e24:	8e830000 	lw	v1,0(s4)
80017e28:	1060003a 	beqz	v1,80017f14 <copy_range+0x1dc>
80017e2c:	3c048002 	lui	a0,0x8002
80017e30:	8c420000 	lw	v0,0(v0)
80017e34:	14400037 	bnez	v0,80017f14 <copy_range+0x1dc>
80017e38:	30620001 	andi	v0,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:457
				struct Page *page = pte2page(*ptep);
				ret = page_insert(to, page, start, perm);

			}
#else /* ARCH_ARM */
			if (ptep_present(ptep)) {
80017e3c:	1040003c 	beqz	v0,80017f30 <copy_range+0x1f8>
80017e40:	2402f000 	li	v0,-4096
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017e44:	3c057fff 	lui	a1,0x7fff
pte2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80017e48:	00621024 	and	v0,v1,v0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017e4c:	8fc47770 	lw	a0,30576(s8)
80017e50:	34a5f000 	ori	a1,a1,0xf000
80017e54:	00451021 	addu	v0,v0,a1
80017e58:	00021302 	srl	v0,v0,0xc
80017e5c:	0044202b 	sltu	a0,v0,a0
80017e60:	1080003a 	beqz	a0,80017f4c <copy_range+0x214>
80017e64:	8ef577bc 	lw	s5,30652(s7)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017e68:	00021140 	sll	v0,v0,0x5
ptep_get_perm():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:89
	*ptep &= (~PTE_W);
}

static inline pte_perm_t ptep_get_perm(pte_t * ptep, pte_perm_t perm)
{
	return (*ptep) & perm;
80017e6c:	30740007 	andi	s4,v1,0x7
copy_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:460
				pte_perm_t perm = ptep_get_perm(ptep, PTE_USER);
				struct Page *page = pte2page(*ptep);
				if (!share && ptep_s_write(ptep)) {
80017e70:	16c00004 	bnez	s6,80017e84 <copy_range+0x14c>
80017e74:	02a2a821 	addu	s5,s5,v0
ptep_s_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
80017e78:	30620002 	andi	v0,v1,0x2
copy_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:460
80017e7c:	14400019 	bnez	v0,80017ee4 <copy_range+0x1ac>
80017e80:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:469
					ptep_set_perm(&perm_with_swap_stat,
						      perm);
					page_insert(from, page, start,
						    perm_with_swap_stat);
				}
				ret = page_insert(to, page, start, perm);
80017e84:	02602021 	move	a0,s3
80017e88:	02a02821 	move	a1,s5
80017e8c:	02003021 	move	a2,s0
80017e90:	0c005dbf 	jal	800176fc <page_insert>
80017e94:	02803821 	move	a3,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:470
				assert(ret == 0);
80017e98:	5040ffcc 	beqzl	v0,80017dcc <copy_range+0x94>
80017e9c:	26101000 	addiu	s0,s0,4096
80017ea0:	3c048002 	lui	a0,0x8002
80017ea4:	3c068002 	lui	a2,0x8002
80017ea8:	3c078002 	lui	a3,0x8002
80017eac:	248435b0 	addiu	a0,a0,13744
80017eb0:	240501d6 	li	a1,470
80017eb4:	24c609b0 	addiu	a2,a2,2480
80017eb8:	0c006afd 	jal	8001abf4 <__panic>
80017ebc:	24e73618 	addiu	a3,a3,13848
get_pgd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017ec0:	00101582 	srl	v0,s0,0x16
80017ec4:	00021080 	sll	v0,v0,0x2
80017ec8:	02421021 	addu	v0,s2,v0
copy_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:418
	assert(USER_ACCESS(start, end));

	do {
		pte_t *ptep = get_pte(from, start, 0), *nptep;
		if (ptep == NULL) {
			if (get_pud(from, start, 0) == NULL) {
80017ecc:	1040000c 	beqz	v0,80017f00 <copy_range+0x1c8>
80017ed0:	3c050040 	lui	a1,0x40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:423
				start = ROUNDDOWN(start + PUSIZE, PUSIZE);
			} else if (get_pmd(from, start, 0) == NULL) {
				start = ROUNDDOWN(start + PMSIZE, PMSIZE);
			} else {
				start = ROUNDDOWN(start + PTSIZE, PTSIZE);
80017ed4:	02058021 	addu	s0,s0,a1
80017ed8:	3c02ffc0 	lui	v0,0xffc0
80017edc:	08005f73 	j	80017dcc <copy_range+0x94>
80017ee0:	02028024 	and	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:466
					ptep_unset_s_write(&perm);
					pte_perm_t perm_with_swap_stat =
					    ptep_get_perm(ptep, PTE_SWAP);
					ptep_set_perm(&perm_with_swap_stat,
						      perm);
					page_insert(from, page, start,
80017ee4:	02a02821 	move	a1,s5
80017ee8:	02003021 	move	a2,s0
80017eec:	30670065 	andi	a3,v1,0x65
80017ef0:	0c005dbf 	jal	800176fc <page_insert>
80017ef4:	30740005 	andi	s4,v1,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:469
						    perm_with_swap_stat);
				}
				ret = page_insert(to, page, start, perm);
80017ef8:	08005fa2 	j	80017e88 <copy_range+0x150>
80017efc:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:419

	do {
		pte_t *ptep = get_pte(from, start, 0), *nptep;
		if (ptep == NULL) {
			if (get_pud(from, start, 0) == NULL) {
				start = ROUNDDOWN(start + PUSIZE, PUSIZE);
80017f00:	3c020040 	lui	v0,0x40
80017f04:	02028021 	addu	s0,s0,v0
80017f08:	3c02ffc0 	lui	v0,0xffc0
80017f0c:	08005f73 	j	80017dcc <copy_range+0x94>
80017f10:	02028024 	and	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:433
			if ((nptep = get_pte(to, start, 1)) == NULL) {
				return -E_NO_MEM;
			}
			int ret;
			//kprintf("%08x %08x %08x\n", nptep, *nptep, start);
			assert(*ptep != 0 && *nptep == 0);
80017f14:	3c068002 	lui	a2,0x8002
80017f18:	3c078002 	lui	a3,0x8002
80017f1c:	248435b0 	addiu	a0,a0,13744
80017f20:	240501b1 	li	a1,433
80017f24:	24c609b0 	addiu	a2,a2,2480
80017f28:	0c006afd 	jal	8001abf4 <__panic>
80017f2c:	24e735fc 	addiu	a3,a3,13820
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:475
				assert(ret == 0);
			}
#endif /* ARCH_ARM */
			else {
#ifndef UCONFIG_SWAP
				assert(0);
80017f30:	3c068002 	lui	a2,0x8002
80017f34:	3c078002 	lui	a3,0x8002
80017f38:	248435b0 	addiu	a0,a0,13744
80017f3c:	240501db 	li	a1,475
80017f40:	24c609b0 	addiu	a2,a2,2480
80017f44:	0c006afd 	jal	8001abf4 <__panic>
80017f48:	24e71fa4 	addiu	a3,a3,8100
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017f4c:	0c007e52 	jal	8001f948 <pa2page.part.7>
80017f50:	00000000 	nop
copy_range():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:413
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
80017f54:	3c048002 	lui	a0,0x8002
80017f58:	3c068002 	lui	a2,0x8002
80017f5c:	3c078002 	lui	a3,0x8002
80017f60:	248435b0 	addiu	a0,a0,13744
80017f64:	2405019d 	li	a1,413
80017f68:	24c609b0 	addiu	a2,a2,2480
80017f6c:	0c006afd 	jal	8001abf4 <__panic>
80017f70:	24e735b8 	addiu	a3,a3,13752
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/pmm.c:412
 * READONLY, a write will be handled in pgfault
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017f74:	3c048002 	lui	a0,0x8002
80017f78:	3c068002 	lui	a2,0x8002
80017f7c:	3c078002 	lui	a3,0x8002
80017f80:	248435b0 	addiu	a0,a0,13744
80017f84:	2405019c 	li	a1,412
80017f88:	24c609b0 	addiu	a2,a2,2480
80017f8c:	0c006afd 	jal	8001abf4 <__panic>
80017f90:	24e72cf0 	addiu	a3,a3,11504

80017f94 <event_box_init>:
event_box_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:17
#define current (pls_read(current))
#define idleproc (pls_read(idleproc))

void event_box_init(event_t * event_box)
{
	wait_queue_init(&(event_box->wait_queue));
80017f94:	0800693d 	j	8001a4f4 <wait_queue_init>
80017f98:	24840004 	addiu	a0,a0,4

80017f9c <ipc_event_send>:
ipc_event_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:44
	}
	return 0;
}

int ipc_event_send(int pid, int event, unsigned int timeout)
{
80017f9c:	27bdffa0 	addiu	sp,sp,-96
80017fa0:	afb00048 	sw	s0,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:46
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) == NULL || proc->state == PROC_ZOMBIE) {
80017fa4:	afa50044 	sw	a1,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:44
	}
	return 0;
}

int ipc_event_send(int pid, int event, unsigned int timeout)
{
80017fa8:	afbf005c 	sw	ra,92(sp)
80017fac:	afb40058 	sw	s4,88(sp)
80017fb0:	afb30054 	sw	s3,84(sp)
80017fb4:	afb20050 	sw	s2,80(sp)
80017fb8:	afb1004c 	sw	s1,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:46
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) == NULL || proc->state == PROC_ZOMBIE) {
80017fbc:	0c003b36 	jal	8000ecd8 <find_proc>
80017fc0:	00c08021 	move	s0,a2
80017fc4:	1040007f 	beqz	v0,800181c4 <ipc_event_send+0x228>
80017fc8:	8fa50044 	lw	a1,68(sp)
80017fcc:	8c440000 	lw	a0,0(v0)
80017fd0:	24030003 	li	v1,3
80017fd4:	1083007b 	beq	a0,v1,800181c4 <ipc_event_send+0x228>
80017fd8:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:49
		return -E_INVAL;
	}
	if (proc == current || proc == idleproc || proc == initproc
80017fdc:	8e2377a4 	lw	v1,30628(s1)
80017fe0:	10430078 	beq	v0,v1,800181c4 <ipc_event_send+0x228>
80017fe4:	3c048015 	lui	a0,0x8015
80017fe8:	8c8477a8 	lw	a0,30632(a0)
80017fec:	10440075 	beq	v0,a0,800181c4 <ipc_event_send+0x228>
80017ff0:	3c048015 	lui	a0,0x8015
80017ff4:	8c847798 	lw	a0,30616(a0)
80017ff8:	10440072 	beq	v0,a0,800181c4 <ipc_event_send+0x228>
80017ffc:	3c048015 	lui	a0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:50
	    || proc == kswapd) {
80018000:	8c8477b4 	lw	a0,30644(a0)
80018004:	1044006f 	beq	v0,a0,800181c4 <ipc_event_send+0x228>
80018008:	3c048000 	lui	a0,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:53
		return -E_INVAL;
	}
	if (proc->wait_state == WT_EVENT_RECV) {
8001800c:	8c460084 	lw	a2,132(v0)
80018010:	24840111 	addiu	a0,a0,273
80018014:	10c40065 	beq	a2,a0,800181ac <ipc_event_send+0x210>
80018018:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:56
		wakeup_proc(proc);
	}
	current->event_box.event = event;
8001801c:	ac6500b0 	sw	a1,176(v1)
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
80018020:	1600003d 	bnez	s0,80018118 <ipc_event_send+0x17c>
80018024:	00009821 	move	s3,zero
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018028:	40036000 	mfc0	v1,c0_status
8001802c:	30630001 	andi	v1,v1,0x1
80018030:	10600005 	beqz	v1,80018048 <ipc_event_send+0xac>
80018034:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80018038:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001803c:	afa20040 	sw	v0,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80018040:	8fa20040 	lw	v0,64(sp)
80018044:	24140001 	li	s4,1
send_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:25
static uint32_t send_event(struct proc_struct *proc, timer_t * timer)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	wait_t __wait, *wait = &__wait;
	wait_queue_t *wait_queue = &(proc->event_box.wait_queue);
80018048:	245100b4 	addiu	s1,v0,180
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:26
	wait_current_set(wait_queue, wait, WT_EVENT_SEND);
8001804c:	3c068000 	lui	a2,0x8000
80018050:	02202021 	move	a0,s1
80018054:	27a50010 	addiu	a1,sp,16
80018058:	0c0069f2 	jal	8001a7c8 <wait_current_set>
8001805c:	24c60110 	addiu	a2,a2,272
ipc_add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80018060:	12600003 	beqz	s3,80018070 <ipc_event_send+0xd4>
80018064:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80018068:	0c0005e4 	jal	80001790 <add_timer>
8001806c:	02602021 	move	a0,s3
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018070:	1680004a 	bnez	s4,8001819c <ipc_event_send+0x200>
80018074:	00000000 	nop
send_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:30
	ipc_add_timer(timer);
	local_intr_restore(intr_flag);

	schedule();
80018078:	0c00059e 	jal	80001678 <schedule>
8001807c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018080:	40026000 	mfc0	v0,c0_status
80018084:	30420001 	andi	v0,v0,0x1
80018088:	1440002d 	bnez	v0,80018140 <ipc_event_send+0x1a4>
8001808c:	0000a021 	move	s4,zero
ipc_del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80018090:	12600003 	beqz	s3,800180a0 <ipc_event_send+0x104>
80018094:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80018098:	0c00062c 	jal	800018b0 <del_timer>
8001809c:	02602021 	move	a0,s3
send_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:34

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(wait_queue, wait);
800180a0:	0c0069a8 	jal	8001a6a0 <wait_in_queue>
800180a4:	27a40010 	addiu	a0,sp,16
800180a8:	14400029 	bnez	v0,80018150 <ipc_event_send+0x1b4>
800180ac:	02202021 	move	a0,s1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800180b0:	1680002b 	bnez	s4,80018160 <ipc_event_send+0x1c4>
800180b4:	8fa20014 	lw	v0,20(sp)
send_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:37
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != WT_EVENT_SEND) {
800180b8:	3c038000 	lui	v1,0x8000
800180bc:	24640110 	addiu	a0,v1,272
800180c0:	1044002e 	beq	v0,a0,8001817c <ipc_event_send+0x1e0>
800180c4:	8fbf005c 	lw	ra,92(sp)
ipc_event_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:63
	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	uint32_t flags;
	if ((flags = send_event(proc, timer)) == 0) {
800180c8:	1040002c 	beqz	v0,8001817c <ipc_event_send+0x1e0>
800180cc:	8fbf005c 	lw	ra,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:66
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
800180d0:	1443003e 	bne	v0,v1,800181cc <ipc_event_send+0x230>
800180d4:	3c048002 	lui	a0,0x8002
ipc_check_timeout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
800180d8:	12000008 	beqz	s0,800180fc <ipc_event_send+0x160>
800180dc:	2402ffff 	li	v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
800180e0:	3c038015 	lui	v1,0x8015
800180e4:	8c6377ac 	lw	v1,30636(v1)
800180e8:	00729023 	subu	s2,v1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
800180ec:	0250802b 	sltu	s0,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
800180f0:	2403fff0 	li	v1,-16
800180f4:	0070100a 	movz	v0,v1,s0
ipc_event_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:68
	return ipc_check_timeout(timeout, saved_ticks);
}
800180f8:	8fbf005c 	lw	ra,92(sp)
800180fc:	8fb40058 	lw	s4,88(sp)
80018100:	8fb30054 	lw	s3,84(sp)
80018104:	8fb20050 	lw	s2,80(sp)
80018108:	8fb1004c 	lw	s1,76(sp)
8001810c:	8fb00048 	lw	s0,72(sp)
80018110:	03e00008 	jr	ra
80018114:	27bd0060 	addiu	sp,sp,96
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
80018118:	3c048015 	lui	a0,0x8015
timer_init():

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
8001811c:	afa30028 	sw	v1,40(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80018120:	27a30038 	addiu	v1,sp,56
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
80018124:	8c9277ac 	lw	s2,30636(a0)
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80018128:	afb00024 	sw	s0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
8001812c:	afa0002c 	sw	zero,44(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80018130:	afa3003c 	sw	v1,60(sp)
80018134:	afa30038 	sw	v1,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:60
	}
	current->event_box.event = event;

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
80018138:	0800600a 	j	80018028 <ipc_event_send+0x8c>
8001813c:	27b30024 	addiu	s3,sp,36
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018140:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018144:	24140001 	li	s4,1
80018148:	08006024 	j	80018090 <ipc_event_send+0xf4>
8001814c:	00000000 	nop
send_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:34

	schedule();

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(wait_queue, wait);
80018150:	0c006958 	jal	8001a560 <wait_queue_del>
80018154:	27a50010 	addiu	a1,sp,16
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018158:	1280ffd7 	beqz	s4,800180b8 <ipc_event_send+0x11c>
8001815c:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80018160:	0c006cba 	jal	8001b2e8 <intr_enable>
80018164:	00000000 	nop
send_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:37
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != WT_EVENT_SEND) {
80018168:	8fa20014 	lw	v0,20(sp)
8001816c:	3c038000 	lui	v1,0x8000
80018170:	24640110 	addiu	a0,v1,272
80018174:	1444ffd4 	bne	v0,a0,800180c8 <ipc_event_send+0x12c>
80018178:	8fbf005c 	lw	ra,92(sp)
ipc_event_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:64
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	uint32_t flags;
	if ((flags = send_event(proc, timer)) == 0) {
		return 0;
8001817c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:68
	}
	assert(flags == WT_INTERRUPTED);
	return ipc_check_timeout(timeout, saved_ticks);
}
80018180:	8fb40058 	lw	s4,88(sp)
80018184:	8fb30054 	lw	s3,84(sp)
80018188:	8fb20050 	lw	s2,80(sp)
8001818c:	8fb1004c 	lw	s1,76(sp)
80018190:	8fb00048 	lw	s0,72(sp)
80018194:	03e00008 	jr	ra
80018198:	27bd0060 	addiu	sp,sp,96
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
8001819c:	0c006cba 	jal	8001b2e8 <intr_enable>
800181a0:	00000000 	nop
800181a4:	0800601e 	j	80018078 <ipc_event_send+0xdc>
800181a8:	00000000 	nop
ipc_event_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:54
	if (proc == current || proc == idleproc || proc == initproc
	    || proc == kswapd) {
		return -E_INVAL;
	}
	if (proc->wait_state == WT_EVENT_RECV) {
		wakeup_proc(proc);
800181ac:	0c0004f7 	jal	800013dc <wakeup_proc>
800181b0:	afa20040 	sw	v0,64(sp)
800181b4:	8e2377a4 	lw	v1,30628(s1)
800181b8:	8fa50044 	lw	a1,68(sp)
800181bc:	08006007 	j	8001801c <ipc_event_send+0x80>
800181c0:	8fa20040 	lw	v0,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:51
	if ((proc = find_proc(pid)) == NULL || proc->state == PROC_ZOMBIE) {
		return -E_INVAL;
	}
	if (proc == current || proc == idleproc || proc == initproc
	    || proc == kswapd) {
		return -E_INVAL;
800181c4:	0800603e 	j	800180f8 <ipc_event_send+0x15c>
800181c8:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:66

	uint32_t flags;
	if ((flags = send_event(proc, timer)) == 0) {
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
800181cc:	3c068002 	lui	a2,0x8002
800181d0:	3c078002 	lui	a3,0x8002
800181d4:	24843624 	addiu	a0,a0,13860
800181d8:	24050042 	li	a1,66
800181dc:	24c609b0 	addiu	a2,a2,2480
800181e0:	0c006afd 	jal	8001abf4 <__panic>
800181e4:	24e7362c 	addiu	a3,a3,13868

800181e8 <ipc_event_recv>:
ipc_event_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:101
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_event_recv(int *pid_store, int *event_store, unsigned int timeout)
{
800181e8:	27bdffa0 	addiu	sp,sp,-96
800181ec:	afb60054 	sw	s6,84(sp)
800181f0:	afb4004c 	sw	s4,76(sp)
800181f4:	afb30048 	sw	s3,72(sp)
800181f8:	afb0003c 	sw	s0,60(sp)
800181fc:	afbf005c 	sw	ra,92(sp)
80018200:	afb70058 	sw	s7,88(sp)
80018204:	afb50050 	sw	s5,80(sp)
80018208:	afb20044 	sw	s2,68(sp)
8001820c:	afb10040 	sw	s1,64(sp)
80018210:	00a0b021 	move	s6,a1
80018214:	0080a021 	move	s4,a0
80018218:	00c09821 	move	s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:102
	if (event_store == NULL) {
8001821c:	10a00052 	beqz	a1,80018368 <ipc_event_recv+0x180>
80018220:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:106
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
80018224:	3c128015 	lui	s2,0x8015
80018228:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:107
	if (pid_store != NULL) {
8001822c:	10800008 	beqz	a0,80018250 <ipc_event_recv+0x68>
80018230:	8c510020 	lw	s1,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:108
		if (!user_mem_check(mm, (uintptr_t) pid_store, sizeof(int), 1)) {
80018234:	02202021 	move	a0,s1
80018238:	02802821 	move	a1,s4
8001823c:	24060004 	li	a2,4
80018240:	0c005069 	jal	800141a4 <user_mem_check>
80018244:	24070001 	li	a3,1
80018248:	10400048 	beqz	v0,8001836c <ipc_event_recv+0x184>
8001824c:	8fbf005c 	lw	ra,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:112
			return -E_INVAL;
		}
	}
	if (!user_mem_check(mm, (uintptr_t) event_store, sizeof(int), 1)) {
80018250:	02202021 	move	a0,s1
80018254:	02c02821 	move	a1,s6
80018258:	24060004 	li	a2,4
8001825c:	0c005069 	jal	800141a4 <user_mem_check>
80018260:	24070001 	li	a3,1
80018264:	10400040 	beqz	v0,80018368 <ipc_event_recv+0x180>
80018268:	2410ffea 	li	s0,-22
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
8001826c:	1660004a 	bnez	s3,80018398 <ipc_event_recv+0x1b0>
80018270:	00008021 	move	s0,zero
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018274:	40026000 	mfc0	v0,c0_status
80018278:	30420001 	andi	v0,v0,0x1
8001827c:	10400003 	beqz	v0,8001828c <ipc_event_recv+0xa4>
80018280:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80018284:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018288:	24150001 	li	s5,1
recv_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:74

static int recv_event(int *pid_store, int *event_store, timer_t * timer)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	wait_queue_t *wait_queue = &(current->event_box.wait_queue);
8001828c:	8e5277a4 	lw	s2,30628(s2)
80018290:	265200b4 	addiu	s2,s2,180
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:75
	if (wait_queue_empty(wait_queue)) {
80018294:	0c0069a4 	jal	8001a690 <wait_queue_empty>
80018298:	02402021 	move	a0,s2
8001829c:	10400016 	beqz	v0,800182f8 <ipc_event_recv+0x110>
800182a0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:76
		current->state = PROC_SLEEPING;
800182a4:	8c4277a4 	lw	v0,30628(v0)
800182a8:	24030001 	li	v1,1
800182ac:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:77
		current->wait_state = WT_EVENT_RECV;
800182b0:	3c038000 	lui	v1,0x8000
800182b4:	24630111 	addiu	v1,v1,273
ipc_add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
800182b8:	12000003 	beqz	s0,800182c8 <ipc_event_recv+0xe0>
800182bc:	ac430084 	sw	v1,132(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
800182c0:	0c0005e4 	jal	80001790 <add_timer>
800182c4:	02002021 	move	a0,s0
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800182c8:	16a00065 	bnez	s5,80018460 <ipc_event_recv+0x278>
800182cc:	00000000 	nop
recv_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:81
		ipc_add_timer(timer);
		local_intr_restore(intr_flag);

		schedule();
800182d0:	0c00059e 	jal	80001678 <schedule>
800182d4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800182d8:	40026000 	mfc0	v0,c0_status
800182dc:	30420001 	andi	v0,v0,0x1
800182e0:	1440005b 	bnez	v0,80018450 <ipc_event_recv+0x268>
800182e4:	0000a821 	move	s5,zero
ipc_del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
800182e8:	12000003 	beqz	s0,800182f8 <ipc_event_recv+0x110>
800182ec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
800182f0:	0c00062c 	jal	800018b0 <del_timer>
800182f4:	02002021 	move	a0,s0
recv_event():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:90
	}

	int ret = -1;

	wait_t *wait;
	if ((wait = wait_queue_first(wait_queue)) != NULL) {
800182f8:	0c00699a 	jal	8001a668 <wait_queue_first>
800182fc:	02402021 	move	a0,s2
80018300:	1040000d 	beqz	v0,80018338 <ipc_event_recv+0x150>
80018304:	2410ffff 	li	s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:91
		struct proc_struct *proc = wait->proc;
80018308:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:94
		*pid_store = proc->pid, *event_store =
		    proc->event_box.event, ret = 0;
		wakeup_wait(wait_queue, wait, WT_EVENT_SEND, 1);
8001830c:	3c068000 	lui	a2,0x8000
80018310:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:92
	int ret = -1;

	wait_t *wait;
	if ((wait = wait_queue_first(wait_queue)) != NULL) {
		struct proc_struct *proc = wait->proc;
		*pid_store = proc->pid, *event_store =
80018314:	8c680004 	lw	t0,4(v1)
80018318:	8c6300b0 	lw	v1,176(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:94
		    proc->event_box.event, ret = 0;
		wakeup_wait(wait_queue, wait, WT_EVENT_SEND, 1);
8001831c:	00402821 	move	a1,v0
80018320:	24c60110 	addiu	a2,a2,272
80018324:	24070001 	li	a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:92
	int ret = -1;

	wait_t *wait;
	if ((wait = wait_queue_first(wait_queue)) != NULL) {
		struct proc_struct *proc = wait->proc;
		*pid_store = proc->pid, *event_store =
80018328:	afa80014 	sw	t0,20(sp)
8001832c:	afa30010 	sw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:94
		    proc->event_box.event, ret = 0;
		wakeup_wait(wait_queue, wait, WT_EVENT_SEND, 1);
80018330:	0c0069ad 	jal	8001a6b4 <wakeup_wait>
80018334:	00008021 	move	s0,zero
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018338:	16a00022 	bnez	s5,800183c4 <ipc_event_recv+0x1dc>
8001833c:	00000000 	nop
ipc_event_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:121
	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	int pid, event, ret;
	if ((ret = recv_event(&pid, &event, timer)) == 0) {
80018340:	12000024 	beqz	s0,800183d4 <ipc_event_recv+0x1ec>
80018344:	00000000 	nop
ipc_check_timeout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
80018348:	12600007 	beqz	s3,80018368 <ipc_event_recv+0x180>
8001834c:	2410ffff 	li	s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
80018350:	3c028015 	lui	v0,0x8015
80018354:	8c4277ac 	lw	v0,30636(v0)
80018358:	0057b823 	subu	s7,v0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
8001835c:	02f3982b 	sltu	s3,s7,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
80018360:	2402fff0 	li	v0,-16
80018364:	0053800a 	movz	s0,v0,s3
ipc_event_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:137
		}
		unlock_mm(mm);
		return ret;
	}
	return ipc_check_timeout(timeout, saved_ticks);
}
80018368:	8fbf005c 	lw	ra,92(sp)
8001836c:	02001021 	move	v0,s0
80018370:	8fb70058 	lw	s7,88(sp)
80018374:	8fb60054 	lw	s6,84(sp)
80018378:	8fb50050 	lw	s5,80(sp)
8001837c:	8fb4004c 	lw	s4,76(sp)
80018380:	8fb30048 	lw	s3,72(sp)
80018384:	8fb20044 	lw	s2,68(sp)
80018388:	8fb10040 	lw	s1,64(sp)
8001838c:	8fb0003c 	lw	s0,60(sp)
80018390:	03e00008 	jr	ra
80018394:	27bd0060 	addiu	sp,sp,96
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:30
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
		return timer_init(timer, pls_read(current), timeout);
80018398:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
8001839c:	3c038015 	lui	v1,0x8015
800183a0:	8c7777ac 	lw	s7,30636(v1)
timer_init():

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
800183a4:	afa2001c 	sw	v0,28(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
800183a8:	27a2002c 	addiu	v0,sp,44
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
800183ac:	afb30018 	sw	s3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
800183b0:	afa00020 	sw	zero,32(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
800183b4:	afa20030 	sw	v0,48(sp)
800183b8:	afa2002c 	sw	v0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:118
		return -E_INVAL;
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
800183bc:	0800609d 	j	80018274 <ipc_event_recv+0x8c>
800183c0:	27b00018 	addiu	s0,sp,24
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800183c4:	0c006cba 	jal	8001b2e8 <intr_enable>
800183c8:	00000000 	nop
ipc_event_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:121

	int pid, event, ret;
	if ((ret = recv_event(&pid, &event, timer)) == 0) {
800183cc:	1600ffde 	bnez	s0,80018348 <ipc_event_recv+0x160>
800183d0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:122
		lock_mm(mm);
800183d4:	0c004c18 	jal	80013060 <lock_mm>
800183d8:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:125
		{
			ret = -E_INVAL;
			if (pid_store == NULL
800183dc:	12800007 	beqz	s4,800183fc <ipc_event_recv+0x214>
800183e0:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:126
			    || copy_to_user(mm, pid_store, &pid, sizeof(int))) {
800183e4:	02202021 	move	a0,s1
800183e8:	27a60014 	addiu	a2,sp,20
800183ec:	0c007834 	jal	8001e0d0 <copy_to_user>
800183f0:	24070004 	li	a3,4
800183f4:	10400008 	beqz	v0,80018418 <ipc_event_recv+0x230>
800183f8:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:128
				if (copy_to_user
				    (mm, event_store, &event, sizeof(int))) {
800183fc:	02202021 	move	a0,s1
80018400:	02c02821 	move	a1,s6
80018404:	27a60010 	addiu	a2,sp,16
80018408:	0c007834 	jal	8001e0d0 <copy_to_user>
8001840c:	24070004 	li	a3,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:124

	int pid, event, ret;
	if ((ret = recv_event(&pid, &event, timer)) == 0) {
		lock_mm(mm);
		{
			ret = -E_INVAL;
80018410:	2410ffea 	li	s0,-22
80018414:	0002800b 	movn	s0,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:133
				    (mm, event_store, &event, sizeof(int))) {
					ret = 0;
				}
			}
		}
		unlock_mm(mm);
80018418:	0c004c29 	jal	800130a4 <unlock_mm>
8001841c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/event.c:137
		return ret;
	}
	return ipc_check_timeout(timeout, saved_ticks);
}
80018420:	8fbf005c 	lw	ra,92(sp)
80018424:	02001021 	move	v0,s0
80018428:	8fb70058 	lw	s7,88(sp)
8001842c:	8fb60054 	lw	s6,84(sp)
80018430:	8fb50050 	lw	s5,80(sp)
80018434:	8fb4004c 	lw	s4,76(sp)
80018438:	8fb30048 	lw	s3,72(sp)
8001843c:	8fb20044 	lw	s2,68(sp)
80018440:	8fb10040 	lw	s1,64(sp)
80018444:	8fb0003c 	lw	s0,60(sp)
80018448:	03e00008 	jr	ra
8001844c:	27bd0060 	addiu	sp,sp,96
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018450:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018454:	24150001 	li	s5,1
80018458:	080060ba 	j	800182e8 <ipc_event_recv+0x100>
8001845c:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80018460:	0c006cba 	jal	8001b2e8 <intr_enable>
80018464:	00000000 	nop
80018468:	080060b4 	j	800182d0 <ipc_event_recv+0xe8>
8001846c:	00000000 	nop

80018470 <mbox_free>:
mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:89
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
80018470:	8c830008 	lw	v1,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:88
	}
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
80018474:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:89
	assert(mbox->state == CLOSING && mbox->inuse == 0);
80018478:	24020002 	li	v0,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:88
	}
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
8001847c:	afb00014 	sw	s0,20(sp)
80018480:	afbf001c 	sw	ra,28(sp)
80018484:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:89
	assert(mbox->state == CLOSING && mbox->inuse == 0);
80018488:	1462001d 	bne	v1,v0,80018500 <mbox_free+0x90>
8001848c:	00808021 	move	s0,a0
80018490:	8c820004 	lw	v0,4(a0)
80018494:	1440001a 	bnez	v0,80018500 <mbox_free+0x90>
80018498:	24910014 	addiu	s1,a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:90
	assert(list_empty(&(mbox->msg_link)));
8001849c:	8c820018 	lw	v0,24(a0)
800184a0:	5622002e 	bnel	s1,v0,8001855c <mbox_free+0xec>
800184a4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:91
	assert(wait_queue_empty(&(mbox->senders)));
800184a8:	0c0069a4 	jal	8001a690 <wait_queue_empty>
800184ac:	2484001c 	addiu	a0,a0,28
800184b0:	10400023 	beqz	v0,80018540 <mbox_free+0xd0>
800184b4:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:92
	assert(wait_queue_empty(&(mbox->receivers)));
800184b8:	0c0069a4 	jal	8001a690 <wait_queue_empty>
800184bc:	26040024 	addiu	a0,s0,36
800184c0:	10400017 	beqz	v0,80018520 <mbox_free+0xb0>
800184c4:	3c028015 	lui	v0,0x8015
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
800184c8:	8c436d00 	lw	v1,27904(v0)
mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:96
	mbox->state = CLOSED;
	mbox->max_slots = mbox->slots = 0;
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}
800184cc:	8fbf001c 	lw	ra,28(sp)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800184d0:	24446d00 	addiu	a0,v0,27904
mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:93
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
	assert(list_empty(&(mbox->msg_link)));
	assert(wait_queue_empty(&(mbox->senders)));
	assert(wait_queue_empty(&(mbox->receivers)));
	mbox->state = CLOSED;
800184d4:	ae000008 	sw	zero,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:94
	mbox->max_slots = mbox->slots = 0;
800184d8:	ae000010 	sw	zero,16(s0)
800184dc:	ae00000c 	sw	zero,12(s0)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800184e0:	ac516d00 	sw	s1,27904(v0)
800184e4:	ac710004 	sw	s1,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
800184e8:	ae030014 	sw	v1,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800184ec:	ae040018 	sw	a0,24(s0)
mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:96
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}
800184f0:	8fb10018 	lw	s1,24(sp)
800184f4:	8fb00014 	lw	s0,20(sp)
800184f8:	03e00008 	jr	ra
800184fc:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:89
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
80018500:	3c048002 	lui	a0,0x8002
80018504:	3c068002 	lui	a2,0x8002
80018508:	3c078002 	lui	a3,0x8002
8001850c:	24843644 	addiu	a0,a0,13892
80018510:	24050059 	li	a1,89
80018514:	24c609b0 	addiu	a2,a2,2480
80018518:	0c006afd 	jal	8001abf4 <__panic>
8001851c:	24e7364c 	addiu	a3,a3,13900
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:92
	assert(list_empty(&(mbox->msg_link)));
	assert(wait_queue_empty(&(mbox->senders)));
	assert(wait_queue_empty(&(mbox->receivers)));
80018520:	3c048002 	lui	a0,0x8002
80018524:	3c068002 	lui	a2,0x8002
80018528:	3c078002 	lui	a3,0x8002
8001852c:	24843644 	addiu	a0,a0,13892
80018530:	2405005c 	li	a1,92
80018534:	24c609b0 	addiu	a2,a2,2480
80018538:	0c006afd 	jal	8001abf4 <__panic>
8001853c:	24e736bc 	addiu	a3,a3,14012
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:91

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
	assert(list_empty(&(mbox->msg_link)));
	assert(wait_queue_empty(&(mbox->senders)));
80018540:	3c068002 	lui	a2,0x8002
80018544:	3c078002 	lui	a3,0x8002
80018548:	24843644 	addiu	a0,a0,13892
8001854c:	2405005b 	li	a1,91
80018550:	24c609b0 	addiu	a2,a2,2480
80018554:	0c006afd 	jal	8001abf4 <__panic>
80018558:	24e73698 	addiu	a3,a3,13976
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:90
}

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
	assert(list_empty(&(mbox->msg_link)));
8001855c:	3c068002 	lui	a2,0x8002
80018560:	3c078002 	lui	a3,0x8002
80018564:	24843644 	addiu	a0,a0,13892
80018568:	2405005a 	li	a1,90
8001856c:	24c609b0 	addiu	a2,a2,2480
80018570:	0c006afd 	jal	8001abf4 <__panic>
80018574:	24e73678 	addiu	a3,a3,13944

80018578 <free_seg>:
free_seg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:190
	up(&sem_mbox_map);
	return ret;
}

static void free_seg(struct msg_seg *seg)
{
80018578:	27bdffe8 	addiu	sp,sp,-24
8001857c:	afb00010 	sw	s0,16(sp)
80018580:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:191
	if (seg->next != NULL) {
80018584:	8c840000 	lw	a0,0(a0)
80018588:	10800003 	beqz	a0,80018598 <free_seg+0x20>
8001858c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:192
		free_seg(seg->next);
80018590:	0c00615e 	jal	80018578 <free_seg>
80018594:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:194
	}
	kfree(seg);
80018598:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:195
}
8001859c:	8fbf0014 	lw	ra,20(sp)
800185a0:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:194
static void free_seg(struct msg_seg *seg)
{
	if (seg->next != NULL) {
		free_seg(seg->next);
	}
	kfree(seg);
800185a4:	080054a3 	j	8001528c <kfree>
800185a8:	27bd0018 	addiu	sp,sp,24

800185ac <free_msg>:
free_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:198
}

static void free_msg(struct msg_msg *msg)
{
800185ac:	27bdffe8 	addiu	sp,sp,-24
800185b0:	afb00010 	sw	s0,16(sp)
800185b4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:199
	if (msg->next != NULL) {
800185b8:	8c840008 	lw	a0,8(a0)
800185bc:	10800003 	beqz	a0,800185cc <free_msg+0x20>
800185c0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:200
		free_seg(msg->next);
800185c4:	0c00615e 	jal	80018578 <free_seg>
800185c8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:202
	}
	kfree(msg);
800185cc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:203
}
800185d0:	8fbf0014 	lw	ra,20(sp)
800185d4:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:202
static void free_msg(struct msg_msg *msg)
{
	if (msg->next != NULL) {
		free_seg(msg->next);
	}
	kfree(msg);
800185d8:	080054a3 	j	8001528c <kfree>
800185dc:	27bd0018 	addiu	sp,sp,24

800185e0 <add_msg>:
add_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:100
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
	assert(mbox->state == OPENED);
800185e0:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:99
	mbox->max_slots = mbox->slots = 0;
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
800185e4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:100
	assert(mbox->state == OPENED);
800185e8:	24030001 	li	v1,1
800185ec:	1443001f 	bne	v0,v1,8001866c <add_msg+0x8c>
800185f0:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:101
	mbox->slots++;
800185f4:	8c830010 	lw	v1,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:102
	list_entry_t *list = &(mbox->msg_link), *le = &(msg->msg_link);
800185f8:	24870014 	addiu	a3,a0,20
800185fc:	24a2000c 	addiu	v0,a1,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:101
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
	assert(mbox->state == OPENED);
	mbox->slots++;
80018600:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:103
	list_entry_t *list = &(mbox->msg_link), *le = &(msg->msg_link);
	if (append) {
80018604:	14c0000d 	bnez	a2,8001863c <add_msg+0x5c>
80018608:	ac830010 	sw	v1,16(a0)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001860c:	8c830018 	lw	v1,24(a0)
add_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:109
		list_add_before(list, le);
	} else {
		list_add_after(list, le);
	}
	wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
}
80018610:	8fbf0014 	lw	ra,20(sp)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80018614:	ac820018 	sw	v0,24(a0)
80018618:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001861c:	aca30010 	sw	v1,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80018620:	aca7000c 	sw	a3,12(a1)
add_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:108
	if (append) {
		list_add_before(list, le);
	} else {
		list_add_after(list, le);
	}
	wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
80018624:	3c058000 	lui	a1,0x8000
80018628:	24840024 	addiu	a0,a0,36
8001862c:	24a50121 	addiu	a1,a1,289
80018630:	24060001 	li	a2,1
80018634:	080069bb 	j	8001a6ec <wakeup_first>
80018638:	27bd0018 	addiu	sp,sp,24
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
8001863c:	8c830014 	lw	v1,20(a0)
add_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:109
}
80018640:	8fbf0014 	lw	ra,20(sp)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80018644:	ac820014 	sw	v0,20(a0)
80018648:	ac620004 	sw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8001864c:	aca3000c 	sw	v1,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80018650:	aca70010 	sw	a3,16(a1)
add_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:108
	if (append) {
		list_add_before(list, le);
	} else {
		list_add_after(list, le);
	}
	wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
80018654:	3c058000 	lui	a1,0x8000
80018658:	24840024 	addiu	a0,a0,36
8001865c:	24a50121 	addiu	a1,a1,289
80018660:	24060001 	li	a2,1
80018664:	080069bb 	j	8001a6ec <wakeup_first>
80018668:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:100
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
	assert(mbox->state == OPENED);
8001866c:	3c048002 	lui	a0,0x8002
80018670:	3c068002 	lui	a2,0x8002
80018674:	3c078002 	lui	a3,0x8002
80018678:	24843644 	addiu	a0,a0,13892
8001867c:	24050064 	li	a1,100
80018680:	24c609b0 	addiu	a2,a2,2480
80018684:	0c006afd 	jal	8001abf4 <__panic>
80018688:	24e736e4 	addiu	a3,a3,14052

8001868c <mbox_init>:
mbox_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:63
static struct msg_mbox *mbox_map[MAX_MBOX_PAGES];
static list_entry_t free_mbox_list;
static semaphore_t sem_mbox_map;

void mbox_init(void)
{
8001868c:	3c028015 	lui	v0,0x8015
80018690:	27bdffe8 	addiu	sp,sp,-24
80018694:	24426b88 	addiu	v0,v0,27528
80018698:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:62

static struct msg_mbox *mbox_map[MAX_MBOX_PAGES];
static list_entry_t free_mbox_list;
static semaphore_t sem_mbox_map;

void mbox_init(void)
8001869c:	24430164 	addiu	v1,v0,356
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:66
{
	int i;
	for (i = 0; i < MAX_MBOX_PAGES; i++) {
		mbox_map[i] = NULL;
800186a0:	ac400000 	sw	zero,0(v0)
800186a4:	24420004 	addiu	v0,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:65
static semaphore_t sem_mbox_map;

void mbox_init(void)
{
	int i;
	for (i = 0; i < MAX_MBOX_PAGES; i++) {
800186a8:	5443fffe 	bnel	v0,v1,800186a4 <mbox_init+0x18>
800186ac:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:68
		mbox_map[i] = NULL;
	}
	sem_init(&sem_mbox_map, 1);
800186b0:	3c048015 	lui	a0,0x8015
800186b4:	24846cec 	addiu	a0,a0,27884
800186b8:	0c006709 	jal	80019c24 <sem_init>
800186bc:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:71
	list_init(&free_mbox_list);
	static_assert(MBOX_P_PAGE != 0);
}
800186c0:	8fbf0014 	lw	ra,20(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
800186c4:	3c038015 	lui	v1,0x8015
800186c8:	24626d00 	addiu	v0,v1,27904
800186cc:	ac420004 	sw	v0,4(v0)
800186d0:	ac626d00 	sw	v0,27904(v1)
mbox_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:71
800186d4:	03e00008 	jr	ra
800186d8:	27bd0018 	addiu	sp,sp,24

800186dc <ipc_mbox_init>:
ipc_mbox_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:176
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
{
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
800186dc:	2482ffff 	addiu	v0,a0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:175
	local_intr_restore(intr_flag);
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
{
800186e0:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:176
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
800186e4:	2c421000 	sltiu	v0,v0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:175
	local_intr_restore(intr_flag);
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
{
800186e8:	afb30024 	sw	s3,36(sp)
800186ec:	afbf003c 	sw	ra,60(sp)
800186f0:	afbe0038 	sw	s8,56(sp)
800186f4:	afb70034 	sw	s7,52(sp)
800186f8:	afb60030 	sw	s6,48(sp)
800186fc:	afb5002c 	sw	s5,44(sp)
80018700:	afb40028 	sw	s4,40(sp)
80018704:	afb20020 	sw	s2,32(sp)
80018708:	afb1001c 	sw	s1,28(sp)
8001870c:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:176
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
80018710:	10400085 	beqz	v0,80018928 <ipc_mbox_init+0x24c>
80018714:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:181
		return -E_INVAL;
	}
	int ret = -E_NO_MEM;
	struct msg_mbox *mbox;
	down(&sem_mbox_map);
80018718:	3c148015 	lui	s4,0x8015
8001871c:	0c006711 	jal	80019c44 <down>
80018720:	26846cec 	addiu	a0,s4,27884
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018724:	40026000 	mfc0	v0,c0_status
80018728:	30420001 	andi	v0,v0,0x1
8001872c:	10400005 	beqz	v0,80018744 <ipc_mbox_init+0x68>
80018730:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80018734:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018738:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8001873c:	24020001 	li	v0,1
80018740:	afa20010 	sw	v0,16(sp)
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80018744:	3c108015 	lui	s0,0x8015
80018748:	26116d00 	addiu	s1,s0,27904
8001874c:	8e220004 	lw	v0,4(s1)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:131
static struct msg_mbox *new_mbox(unsigned int max_slots)
{
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
80018750:	10510023 	beq	v0,s1,800187e0 <ipc_mbox_init+0x104>
80018754:	3c168015 	lui	s6,0x8015
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80018758:	8c430004 	lw	v1,4(v0)
8001875c:	8c440000 	lw	a0,0(v0)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:164
		} else if (list_empty(&free_mbox_list)) {
			goto out;
		}
	}
	assert(!list_empty(&free_mbox_list));
	mbox = le2mbox(list_next(&free_mbox_list), msg_link);
80018760:	2450ffec 	addiu	s0,v0,-20
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80018764:	ac830004 	sw	v1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80018768:	ac640000 	sw	a0,0(v1)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:166
	list_del_init(&(mbox->msg_link));
	mbox->state = OPENED;
8001876c:	24030001 	li	v1,1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80018770:	ac420004 	sw	v0,4(v0)
80018774:	ac420000 	sw	v0,0(v0)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:166
80018778:	ac43fff4 	sw	v1,-12(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:167
	mbox->max_slots = max_slots;
8001877c:	ac53fff8 	sw	s3,-8(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018780:	8fa20010 	lw	v0,16(sp)
80018784:	10400003 	beqz	v0,80018794 <ipc_mbox_init+0xb8>
80018788:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001878c:	0c006cba 	jal	8001b2e8 <intr_enable>
80018790:	00000000 	nop
ipc_mbox_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:182
		return -E_INVAL;
	}
	int ret = -E_NO_MEM;
	struct msg_mbox *mbox;
	down(&sem_mbox_map);
	if ((mbox = new_mbox(max_slots)) != NULL) {
80018794:	12000002 	beqz	s0,800187a0 <ipc_mbox_init+0xc4>
80018798:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:183
		ret = mbox->id;
8001879c:	8e020000 	lw	v0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:185
	}
	up(&sem_mbox_map);
800187a0:	26846cec 	addiu	a0,s4,27884
800187a4:	0c00670f 	jal	80019c3c <up>
800187a8:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:186
	return ret;
800187ac:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:187
}
800187b0:	8fbf003c 	lw	ra,60(sp)
800187b4:	8fbe0038 	lw	s8,56(sp)
800187b8:	8fb70034 	lw	s7,52(sp)
800187bc:	8fb60030 	lw	s6,48(sp)
800187c0:	8fb5002c 	lw	s5,44(sp)
800187c4:	8fb40028 	lw	s4,40(sp)
800187c8:	8fb30024 	lw	s3,36(sp)
800187cc:	8fb20020 	lw	s2,32(sp)
800187d0:	8fb1001c 	lw	s1,28(sp)
800187d4:	8fb00018 	lw	s0,24(sp)
800187d8:	03e00008 	jr	ra
800187dc:	27bd0040 	addiu	sp,sp,64
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:134
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
		int i, id;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			if (mbox_map[i] == NULL) {
800187e0:	8ec26b88 	lw	v0,27528(s6)
800187e4:	1040005f 	beqz	v0,80018964 <ipc_mbox_init+0x288>
800187e8:	3c028015 	lui	v0,0x8015
800187ec:	24426b8c 	addiu	v0,v0,27532
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:133
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
		int i, id;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
800187f0:	24150001 	li	s5,1
800187f4:	24120001 	li	s2,1
800187f8:	08006203 	j	8001880c <ipc_mbox_init+0x130>
800187fc:	24040059 	li	a0,89
80018800:	0240a821 	move	s5,s2
80018804:	12440050 	beq	s2,a0,80018948 <ipc_mbox_init+0x26c>
80018808:	24420004 	addiu	v0,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:134
			if (mbox_map[i] == NULL) {
8001880c:	8c430000 	lw	v1,0(v0)
80018810:	5460fffb 	bnezl	v1,80018800 <ipc_mbox_init+0x124>
80018814:	26520001 	addiu	s2,s2,1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018818:	8fa30010 	lw	v1,16(sp)
8001881c:	10600003 	beqz	v1,8001882c <ipc_mbox_init+0x150>
80018820:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80018824:	0c006cba 	jal	8001b2e8 <intr_enable>
80018828:	00000000 	nop
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:143
		if (i == MAX_MBOX_PAGES) {
			goto out;
		}
		local_intr_restore(intr_flag);

		struct Page *page = alloc_page();
8001882c:	0c0073df 	jal	8001cf7c <alloc_pages>
80018830:	24040001 	li	a0,1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018834:	40036000 	mfc0	v1,c0_status
80018838:	30630001 	andi	v1,v1,0x1
8001883c:	1460003c 	bnez	v1,80018930 <ipc_mbox_init+0x254>
80018840:	afa00010 	sw	zero,16(sp)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:146

		local_intr_save(intr_flag);
		if (page != NULL) {
80018844:	10400042 	beqz	v0,80018950 <ipc_mbox_init+0x274>
80018848:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001884c:	8c6477bc 	lw	a0,30652(v1)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80018850:	3c038015 	lui	v1,0x8015
80018854:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80018858:	00441023 	subu	v0,v0,a0
8001885c:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80018860:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80018864:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80018868:	3c078000 	lui	a3,0x8000
8001886c:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80018870:	0083182b 	sltu	v1,a0,v1
80018874:	1060003e 	beqz	v1,80018970 <ipc_mbox_init+0x294>
80018878:	00473821 	addu	a3,v0,a3
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:147
			id = i * MBOX_P_PAGE;
8001887c:	0015b840 	sll	s7,s5,0x1
80018880:	02f5a821 	addu	s5,s7,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:148
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
80018884:	00121080 	sll	v0,s2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:147

		struct Page *page = alloc_page();

		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
80018888:	0015b940 	sll	s7,s5,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:148
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
8001888c:	26d66b88 	addiu	s6,s6,27528
80018890:	0056b021 	addu	s6,v0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:147

		struct Page *page = alloc_page();

		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
80018894:	02f5b823 	subu	s7,s7,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:148
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
80018898:	aec70000 	sw	a3,0(s6)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
8001889c:	00e09021 	move	s2,a3
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:174
out:
	local_intr_restore(intr_flag);
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
800188a0:	24f60018 	addiu	s6,a3,24
800188a4:	26fe005d 	addiu	s8,s7,93
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:153
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
			for (i = 0; i < MBOX_P_PAGE; i++, id++, mbox++) {
				mbox->id = id, mbox->inuse = 0;
				mbox->state = CLOSED;
				mbox->max_slots = mbox->slots = 0;
				list_init(&(mbox->msg_link));
800188a8:	26550014 	addiu	s5,s2,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:150
		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
			for (i = 0; i < MBOX_P_PAGE; i++, id++, mbox++) {
				mbox->id = id, mbox->inuse = 0;
800188ac:	ae570000 	sw	s7,0(s2)
800188b0:	ae400004 	sw	zero,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:151
				mbox->state = CLOSED;
800188b4:	ae400008 	sw	zero,8(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:152
				mbox->max_slots = mbox->slots = 0;
800188b8:	ae400010 	sw	zero,16(s2)
800188bc:	ae40000c 	sw	zero,12(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:154
				list_init(&(mbox->msg_link));
				wait_queue_init(&(mbox->senders));
800188c0:	2644001c 	addiu	a0,s2,28
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
800188c4:	aed50000 	sw	s5,0(s6)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:154
800188c8:	0c00693d 	jal	8001a4f4 <wait_queue_init>
800188cc:	aed5fffc 	sw	s5,-4(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:155
				wait_queue_init(&(mbox->receivers));
800188d0:	0c00693d 	jal	8001a4f4 <wait_queue_init>
800188d4:	26440024 	addiu	a0,s2,36
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
800188d8:	8e026d00 	lw	v0,27904(s0)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:149

		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
			for (i = 0; i < MBOX_P_PAGE; i++, id++, mbox++) {
800188dc:	26f70001 	addiu	s7,s7,1
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800188e0:	ae156d00 	sw	s5,27904(s0)
800188e4:	ac550004 	sw	s5,4(v0)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:149
800188e8:	2652002c 	addiu	s2,s2,44
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
800188ec:	aed10000 	sw	s1,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
800188f0:	aec2fffc 	sw	v0,-4(s6)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:149
800188f4:	16feffec 	bne	s7,s8,800188a8 <ipc_mbox_init+0x1cc>
800188f8:	26d6002c 	addiu	s6,s6,44
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
800188fc:	8e220004 	lw	v0,4(s1)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:163
			}
		} else if (list_empty(&free_mbox_list)) {
			goto out;
		}
	}
	assert(!list_empty(&free_mbox_list));
80018900:	5451ff96 	bnel	v0,s1,8001875c <ipc_mbox_init+0x80>
80018904:	8c430004 	lw	v1,4(v0)
80018908:	3c048002 	lui	a0,0x8002
8001890c:	3c068002 	lui	a2,0x8002
80018910:	3c078002 	lui	a3,0x8002
80018914:	24843644 	addiu	a0,a0,13892
80018918:	240500a3 	li	a1,163
8001891c:	24c609b0 	addiu	a2,a2,2480
80018920:	0c006afd 	jal	8001abf4 <__panic>
80018924:	24e736fc 	addiu	a3,a3,14076
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:177
}

int ipc_mbox_init(unsigned int max_slots)
{
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
		return -E_INVAL;
80018928:	080061ec 	j	800187b0 <ipc_mbox_init+0xd4>
8001892c:	2402ffea 	li	v0,-22
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80018930:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018934:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80018938:	24030001 	li	v1,1
8001893c:	afa30010 	sw	v1,16(sp)
80018940:	08006211 	j	80018844 <ipc_mbox_init+0x168>
80018944:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:129
}

static struct msg_mbox *new_mbox(unsigned int max_slots)
{
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
80018948:	080061e0 	j	80018780 <ipc_mbox_init+0xa4>
8001894c:	00008021 	move	s0,zero
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
80018950:	8e220004 	lw	v0,4(s1)
new_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:159
				wait_queue_init(&(mbox->senders));
				wait_queue_init(&(mbox->receivers));
				list_add_before(&(free_mbox_list),
						&(mbox->msg_link));
			}
		} else if (list_empty(&free_mbox_list)) {
80018954:	1451ff80 	bne	v0,s1,80018758 <ipc_mbox_init+0x7c>
80018958:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001895c:	080061e1 	j	80018784 <ipc_mbox_init+0xa8>
80018960:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:133
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
		int i, id;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
80018964:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:134
			if (mbox_map[i] == NULL) {
80018968:	08006206 	j	80018818 <ipc_mbox_init+0x13c>
8001896c:	00009021 	move	s2,zero
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
80018970:	3c048002 	lui	a0,0x8002
80018974:	3c068002 	lui	a2,0x8002
80018978:	24842564 	addiu	a0,a0,9572
8001897c:	2405006a 	li	a1,106
80018980:	0c006afd 	jal	8001abf4 <__panic>
80018984:	24c625ec 	addiu	a2,a2,9708

80018988 <ipc_mbox_send>:
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:289
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_send(int id, struct mboxbuf *buf, unsigned int timeout)
{
80018988:	27bdff70 	addiu	sp,sp,-144
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
8001898c:	2c822000 	sltiu	v0,a0,8192
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:289
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_send(int id, struct mboxbuf *buf, unsigned int timeout)
{
80018990:	afb40078 	sw	s4,120(sp)
80018994:	afb30074 	sw	s3,116(sp)
80018998:	afb20070 	sw	s2,112(sp)
8001899c:	afbf008c 	sw	ra,140(sp)
800189a0:	afbe0088 	sw	s8,136(sp)
800189a4:	afb70084 	sw	s7,132(sp)
800189a8:	afb60080 	sw	s6,128(sp)
800189ac:	afb5007c 	sw	s5,124(sp)
800189b0:	afb1006c 	sw	s1,108(sp)
800189b4:	afb00068 	sw	s0,104(sp)
800189b8:	00a09821 	move	s3,a1
800189bc:	00c0a021 	move	s4,a2
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
800189c0:	1040001c 	beqz	v0,80018a34 <ipc_mbox_send+0xac>
800189c4:	2412ffea 	li	s2,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800189c8:	3c02b02c 	lui	v0,0xb02c
800189cc:	24420b03 	addiu	v0,v0,2819
800189d0:	00820019 	multu	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
800189d4:	3c058015 	lui	a1,0x8015
800189d8:	24a56b88 	addiu	a1,a1,27528
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800189dc:	00001010 	mfhi	v0
800189e0:	00021182 	srl	v0,v0,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
800189e4:	00021880 	sll	v1,v0,0x2
800189e8:	afa30058 	sw	v1,88(sp)
800189ec:	00a31821 	addu	v1,a1,v1
800189f0:	8c630000 	lw	v1,0(v1)
800189f4:	1060000f 	beqz	v1,80018a34 <ipc_mbox_send+0xac>
800189f8:	00022840 	sll	a1,v0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800189fc:	00a21021 	addu	v0,a1,v0
80018a00:	00022940 	sll	a1,v0,0x5
80018a04:	00a21023 	subu	v0,a1,v0
80018a08:	00822023 	subu	a0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
80018a0c:	00041080 	sll	v0,a0,0x2
80018a10:	0004f100 	sll	s8,a0,0x4
80018a14:	03c2f023 	subu	s8,s8,v0
80018a18:	03c42023 	subu	a0,s8,a0
80018a1c:	0004f080 	sll	s8,a0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80018a20:	007e1821 	addu	v1,v1,s8
80018a24:	8c630008 	lw	v1,8(v1)
80018a28:	24020001 	li	v0,1
80018a2c:	1062000e 	beq	v1,v0,80018a68 <ipc_mbox_send+0xe0>
80018a30:	3c118015 	lui	s1,0x8015
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018a34:	8fbf008c 	lw	ra,140(sp)
80018a38:	02401021 	move	v0,s2
80018a3c:	8fbe0088 	lw	s8,136(sp)
80018a40:	8fb70084 	lw	s7,132(sp)
80018a44:	8fb60080 	lw	s6,128(sp)
80018a48:	8fb5007c 	lw	s5,124(sp)
80018a4c:	8fb40078 	lw	s4,120(sp)
80018a50:	8fb30074 	lw	s3,116(sp)
80018a54:	8fb20070 	lw	s2,112(sp)
80018a58:	8fb1006c 	lw	s1,108(sp)
80018a5c:	8fb00068 	lw	s0,104(sp)
80018a60:	03e00008 	jr	ra
80018a64:	27bd0090 	addiu	sp,sp,144
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:296
		return -E_INVAL;
	}

	struct msg_msg *msg;
	struct msg_mbox *mbox;
	struct mm_struct *mm = current->mm;
80018a68:	8e2277a4 	lw	v0,30628(s1)
80018a6c:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:301
	struct mboxbuf __local_buf, *local_buf = &__local_buf;

	int ret = -E_INVAL;

	lock_mm(mm);
80018a70:	0c004c18 	jal	80013060 <lock_mm>
80018a74:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:304
	{
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 0)) {
80018a78:	02002021 	move	a0,s0
80018a7c:	27a50018 	addiu	a1,sp,24
80018a80:	02603021 	move	a2,s3
80018a84:	24070010 	li	a3,16
80018a88:	0c00781a 	jal	8001e068 <copy_from_user>
80018a8c:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:303

	int ret = -E_INVAL;

	lock_mm(mm);
	{
		if (copy_from_user
80018a90:	10400006 	beqz	v0,80018aac <ipc_mbox_send+0x124>
80018a94:	8fb7001c 	lw	s7,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:306
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 0)) {
			size_t len = local_buf->len;
			if (0 < len && len <= MAX_MSG_BYTES) {
80018a98:	3c020001 	lui	v0,0x1
80018a9c:	26e3ffff 	addiu	v1,s7,-1
80018aa0:	0062102b 	sltu	v0,v1,v0
80018aa4:	14400010 	bnez	v0,80018ae8 <ipc_mbox_send+0x160>
80018aa8:	8fb60024 	lw	s6,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:318
					     NULL) ? 0 : -E_NO_MEM;
				}
			}
		}
	}
	unlock_mm(mm);
80018aac:	0c004c29 	jal	800130a4 <unlock_mm>
80018ab0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018ab4:	8fbf008c 	lw	ra,140(sp)
80018ab8:	02401021 	move	v0,s2
80018abc:	8fbe0088 	lw	s8,136(sp)
80018ac0:	8fb70084 	lw	s7,132(sp)
80018ac4:	8fb60080 	lw	s6,128(sp)
80018ac8:	8fb5007c 	lw	s5,124(sp)
80018acc:	8fb40078 	lw	s4,120(sp)
80018ad0:	8fb30074 	lw	s3,116(sp)
80018ad4:	8fb20070 	lw	s2,112(sp)
80018ad8:	8fb1006c 	lw	s1,108(sp)
80018adc:	8fb00068 	lw	s0,104(sp)
80018ae0:	03e00008 	jr	ra
80018ae4:	27bd0090 	addiu	sp,sp,144
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:308
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 0)) {
			size_t len = local_buf->len;
			if (0 < len && len <= MAX_MSG_BYTES) {
				void *src = local_buf->data;
				if (user_mem_check(mm, (uintptr_t) src, len, 0)) {
80018ae8:	02002021 	move	a0,s0
80018aec:	02e03021 	move	a2,s7
80018af0:	02c02821 	move	a1,s6
80018af4:	0c005069 	jal	800141a4 <user_mem_check>
80018af8:	00003821 	move	a3,zero
80018afc:	1040ffeb 	beqz	v0,80018aac <ipc_mbox_send+0x124>
80018b00:	2ee201ed 	sltiu	v0,s7,493
80018b04:	241201ec 	li	s2,492
80018b08:	02e2900b 	movn	s2,s7,v0
load_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:212
	size_t alen, bytes = len;
	if ((alen = len) > MAX_MSG_DATALEN) {
		alen = MAX_MSG_DATALEN;
	}
	struct msg_msg *msg;
	if ((msg = kmalloc(sizeof(struct msg_msg) + alen)) == NULL) {
80018b0c:	0c005478 	jal	800151e0 <kmalloc>
80018b10:	26440014 	addiu	a0,s2,20
80018b14:	104000d5 	beqz	v0,80018e6c <ipc_mbox_send+0x4e4>
80018b18:	afa2005c 	sw	v0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:216
		return NULL;
	}

	struct msg_seg **segp = &(msg->next);
80018b1c:	24550008 	addiu	s5,v0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:218

	void *dst = msg + 1;
80018b20:	24450014 	addiu	a1,v0,20
80018b24:	080062d5 	j	80018b54 <ipc_mbox_send+0x1cc>
80018b28:	02e09821 	move	s3,s7
80018b2c:	2e7201ed 	sltiu	s2,s3,493
80018b30:	240601ec 	li	a2,492
80018b34:	0272300b 	movn	a2,s3,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:226
	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		struct msg_seg *seg;
		if ((seg = kmalloc(sizeof(struct msg_seg) + alen)) == NULL) {
80018b38:	24c40004 	addiu	a0,a2,4
80018b3c:	0c005478 	jal	800151e0 <kmalloc>
80018b40:	00c09021 	move	s2,a2
80018b44:	104000c7 	beqz	v0,80018e64 <ipc_mbox_send+0x4dc>
80018b48:	24450004 	addiu	a1,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:229
			goto failed;
		}
		*segp = seg, segp = &(seg->next);
80018b4c:	aea20000 	sw	v0,0(s5)
80018b50:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:232
		dst = seg + 1;
inside:
		copy_from_user(current->mm, dst, src, alen, 0);
80018b54:	8e2277a4 	lw	v0,30628(s1)
80018b58:	3c038015 	lui	v1,0x8015
80018b5c:	02c03021 	move	a2,s6
80018b60:	8c440020 	lw	a0,32(v0)
80018b64:	02403821 	move	a3,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:233
		len -= alen, src = ((char *)src) + alen;
80018b68:	02729823 	subu	s3,s3,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:232
			goto failed;
		}
		*segp = seg, segp = &(seg->next);
		dst = seg + 1;
inside:
		copy_from_user(current->mm, dst, src, alen, 0);
80018b6c:	afa30064 	sw	v1,100(sp)
80018b70:	afa00010 	sw	zero,16(sp)
80018b74:	0c00781a 	jal	8001e068 <copy_from_user>
80018b78:	02d2b021 	addu	s6,s6,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:234
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
80018b7c:	aea00000 	sw	zero,0(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:221
	struct msg_seg **segp = &(msg->next);

	void *dst = msg + 1;
	goto inside;

	while (len > 0) {
80018b80:	1660ffea 	bnez	s3,80018b2c <ipc_mbox_send+0x1a4>
80018b84:	8fa30064 	lw	v1,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:238
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
	}

	msg->bytes = bytes;
	msg->pid = current->pid;
80018b88:	8c6277a4 	lw	v0,30628(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:237
		copy_from_user(current->mm, dst, src, alen, 0);
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
	}

	msg->bytes = bytes;
80018b8c:	8fa4005c 	lw	a0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:238
	msg->pid = current->pid;
80018b90:	8fa5005c 	lw	a1,92(sp)
80018b94:	8c420004 	lw	v0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:237
		copy_from_user(current->mm, dst, src, alen, 0);
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
	}

	msg->bytes = bytes;
80018b98:	ac970004 	sw	s7,4(a0)
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:318
					     NULL) ? 0 : -E_NO_MEM;
				}
			}
		}
	}
	unlock_mm(mm);
80018b9c:	02002021 	move	a0,s0
80018ba0:	0c004c29 	jal	800130a4 <unlock_mm>
80018ba4:	aca20000 	sw	v0,0(a1)
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
80018ba8:	8fa40058 	lw	a0,88(sp)
80018bac:	3c068015 	lui	a2,0x8015
80018bb0:	24c66b88 	addiu	a2,a2,27528
80018bb4:	00c41021 	addu	v0,a2,a0
80018bb8:	8c420000 	lw	v0,0(v0)
80018bbc:	8fa30064 	lw	v1,100(sp)
80018bc0:	10400006 	beqz	v0,80018bdc <ipc_mbox_send+0x254>
80018bc4:	2412ffea 	li	s2,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:78
			struct msg_mbox *mbox = mbox_map[i] + j;
80018bc8:	005ef021 	addu	s8,v0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80018bcc:	8fc40008 	lw	a0,8(s8)
80018bd0:	24020001 	li	v0,1
80018bd4:	10820010 	beq	a0,v0,80018c18 <ipc_mbox_send+0x290>
80018bd8:	00000000 	nop
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:334
				return 0;
			}
			assert(flags == WT_INTERRUPTED);
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
80018bdc:	0c00616b 	jal	800185ac <free_msg>
80018be0:	8fa4005c 	lw	a0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:337
	}
	return ret;
}
80018be4:	8fbf008c 	lw	ra,140(sp)
80018be8:	02401021 	move	v0,s2
80018bec:	8fbe0088 	lw	s8,136(sp)
80018bf0:	8fb70084 	lw	s7,132(sp)
80018bf4:	8fb60080 	lw	s6,128(sp)
80018bf8:	8fb5007c 	lw	s5,124(sp)
80018bfc:	8fb40078 	lw	s4,120(sp)
80018c00:	8fb30074 	lw	s3,116(sp)
80018c04:	8fb20070 	lw	s2,112(sp)
80018c08:	8fb1006c 	lw	s1,108(sp)
80018c0c:	8fb00068 	lw	s0,104(sp)
80018c10:	03e00008 	jr	ra
80018c14:	27bd0090 	addiu	sp,sp,144
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
80018c18:	1280000c 	beqz	s4,80018c4c <ipc_mbox_send+0x2c4>
80018c1c:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:30
		*saved_ticks = ticks;
		return timer_init(timer, pls_read(current), timeout);
80018c20:	8c6277a4 	lw	v0,30628(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
80018c24:	3c038015 	lui	v1,0x8015
80018c28:	8c6377ac 	lw	v1,30636(v1)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80018c2c:	27a50050 	addiu	a1,sp,80
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80018c30:	afb4003c 	sw	s4,60(sp)
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
80018c34:	afa30060 	sw	v1,96(sp)
timer_init():
	timer->proc = proc;
80018c38:	afa20040 	sw	v0,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->linux_timer.linux_timer = NULL;
80018c3c:	afa00044 	sw	zero,68(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
80018c40:	afa50054 	sw	a1,84(sp)
80018c44:	afa50050 	sw	a1,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:325
	if (ret == 0) {
		ret = -E_INVAL;
		if ((mbox = get_mbox(id)) != NULL) {
			unsigned long saved_ticks;
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);
80018c48:	27b0003c 	addiu	s0,sp,60
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018c4c:	40026000 	mfc0	v0,c0_status
80018c50:	30420001 	andi	v0,v0,0x1
80018c54:	14400075 	bnez	v0,80018e2c <ipc_mbox_send+0x4a4>
80018c58:	00000000 	nop
80018c5c:	24160001 	li	s6,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:13
		return 0;
80018c60:	00008821 	move	s1,zero
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:252
send_msg(struct msg_mbox *mbox, struct msg_msg *msg, timer_t * timer)
{
	uint32_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
80018c64:	8fc20004 	lw	v0,4(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:256
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
		wait_current_set(&(mbox->senders), wait, WT_MBOX_SEND);
80018c68:	3c138000 	lui	s3,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:255
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
80018c6c:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:252
send_msg(struct msg_mbox *mbox, struct msg_msg *msg, timer_t * timer)
{
	uint32_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
80018c70:	24420001 	addiu	v0,v0,1
80018c74:	afc20004 	sw	v0,4(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:256
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
		wait_current_set(&(mbox->senders), wait, WT_MBOX_SEND);
80018c78:	27d5001c 	addiu	s5,s8,28
80018c7c:	26730120 	addiu	s3,s3,288
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:254
	uint32_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
80018c80:	8fc2000c 	lw	v0,12(s8)
80018c84:	8fc30010 	lw	v1,16(s8)
80018c88:	0062202b 	sltu	a0,v1,v0
80018c8c:	1480006b 	bnez	a0,80018e3c <ipc_mbox_send+0x4b4>
80018c90:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:255
		assert(mbox->state == OPENED);
80018c94:	16d20077 	bne	s6,s2,80018e74 <ipc_mbox_send+0x4ec>
80018c98:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:256
		wait_current_set(&(mbox->senders), wait, WT_MBOX_SEND);
80018c9c:	27a50028 	addiu	a1,sp,40
80018ca0:	0c0069f2 	jal	8001a7c8 <wait_current_set>
80018ca4:	02603021 	move	a2,s3
ipc_add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80018ca8:	12000003 	beqz	s0,80018cb8 <ipc_mbox_send+0x330>
80018cac:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80018cb0:	0c0005e4 	jal	80001790 <add_timer>
80018cb4:	02002021 	move	a0,s0
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018cb8:	12200003 	beqz	s1,80018cc8 <ipc_mbox_send+0x340>
80018cbc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80018cc0:	0c006cba 	jal	8001b2e8 <intr_enable>
80018cc4:	00000000 	nop
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:260
		ipc_add_timer(timer);
		local_intr_restore(intr_flag);

		schedule();
80018cc8:	0c00059e 	jal	80001678 <schedule>
80018ccc:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018cd0:	40026000 	mfc0	v0,c0_status
80018cd4:	30420001 	andi	v0,v0,0x1
80018cd8:	1440002b 	bnez	v0,80018d88 <ipc_mbox_send+0x400>
80018cdc:	00008821 	move	s1,zero
ipc_del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80018ce0:	12000003 	beqz	s0,80018cf0 <ipc_mbox_send+0x368>
80018ce4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80018ce8:	0c00062c 	jal	800018b0 <del_timer>
80018cec:	02002021 	move	a0,s0
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:264

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->senders), wait);
80018cf0:	0c0069a8 	jal	8001a6a0 <wait_in_queue>
80018cf4:	27a40028 	addiu	a0,sp,40
80018cf8:	5440003f 	bnezl	v0,80018df8 <ipc_mbox_send+0x470>
80018cfc:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:265
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_SEND) {
80018d00:	8fc20008 	lw	v0,8(s8)
80018d04:	14520041 	bne	v0,s2,80018e0c <ipc_mbox_send+0x484>
80018d08:	8fb7002c 	lw	s7,44(sp)
80018d0c:	52f3ffdd 	beql	s7,s3,80018c84 <ipc_mbox_send+0x2fc>
80018d10:	8fc2000c 	lw	v0,12(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:277
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);

	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
80018d14:	8fc30004 	lw	v1,4(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:278
	if (mbox->state != OPENED) {
80018d18:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:277
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);

	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
80018d1c:	2463ffff 	addiu	v1,v1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:278
	if (mbox->state != OPENED) {
80018d20:	10440008 	beq	v0,a0,80018d44 <ipc_mbox_send+0x3bc>
80018d24:	afc30004 	sw	v1,4(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:279
		assert(ret != 0 && mbox->state == CLOSING);
80018d28:	12e0005a 	beqz	s7,80018e94 <ipc_mbox_send+0x50c>
80018d2c:	3c048002 	lui	a0,0x8002
80018d30:	24040002 	li	a0,2
80018d34:	54440057 	bnel	v0,a0,80018e94 <ipc_mbox_send+0x50c>
80018d38:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:280
		if (mbox->inuse == 0) {
80018d3c:	10600028 	beqz	v1,80018de0 <ipc_mbox_send+0x458>
80018d40:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018d44:	16200014 	bnez	s1,80018d98 <ipc_mbox_send+0x410>
80018d48:	00000000 	nop
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:328
			unsigned long saved_ticks;
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
80018d4c:	12e00017 	beqz	s7,80018dac <ipc_mbox_send+0x424>
80018d50:	8fbf008c 	lw	ra,140(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:331
				return 0;
			}
			assert(flags == WT_INTERRUPTED);
80018d54:	3c028000 	lui	v0,0x8000
80018d58:	16e20055 	bne	s7,v0,80018eb0 <ipc_mbox_send+0x528>
80018d5c:	3c048002 	lui	a0,0x8002
ipc_check_timeout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
80018d60:	1280ff9e 	beqz	s4,80018bdc <ipc_mbox_send+0x254>
80018d64:	2412ffff 	li	s2,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
80018d68:	3c028015 	lui	v0,0x8015
80018d6c:	8c4277ac 	lw	v0,30636(v0)
80018d70:	8fa30060 	lw	v1,96(sp)
80018d74:	00431023 	subu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
80018d78:	0054a02b 	sltu	s4,v0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
80018d7c:	2402fff0 	li	v0,-16
80018d80:	080062f7 	j	80018bdc <ipc_mbox_send+0x254>
80018d84:	0054900a 	movz	s2,v0,s4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018d88:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018d8c:	24110001 	li	s1,1
80018d90:	08006338 	j	80018ce0 <ipc_mbox_send+0x358>
80018d94:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80018d98:	0c006cba 	jal	8001b2e8 <intr_enable>
80018d9c:	00000000 	nop
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:328
			unsigned long saved_ticks;
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
80018da0:	16e0ffed 	bnez	s7,80018d58 <ipc_mbox_send+0x3d0>
80018da4:	3c028000 	lui	v0,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018da8:	8fbf008c 	lw	ra,140(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:329
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
				return 0;
80018dac:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018db0:	02401021 	move	v0,s2
80018db4:	8fbe0088 	lw	s8,136(sp)
80018db8:	8fb70084 	lw	s7,132(sp)
80018dbc:	8fb60080 	lw	s6,128(sp)
80018dc0:	8fb5007c 	lw	s5,124(sp)
80018dc4:	8fb40078 	lw	s4,120(sp)
80018dc8:	8fb30074 	lw	s3,116(sp)
80018dcc:	8fb20070 	lw	s2,112(sp)
80018dd0:	8fb1006c 	lw	s1,108(sp)
80018dd4:	8fb00068 	lw	s0,104(sp)
80018dd8:	03e00008 	jr	ra
80018ddc:	27bd0090 	addiu	sp,sp,144
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:281
out:
	mbox->inuse--;
	if (mbox->state != OPENED) {
		assert(ret != 0 && mbox->state == CLOSING);
		if (mbox->inuse == 0) {
			mbox_free(mbox);
80018de0:	0c00611c 	jal	80018470 <mbox_free>
80018de4:	03c02021 	move	a0,s8
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018de8:	1220ffd8 	beqz	s1,80018d4c <ipc_mbox_send+0x3c4>
80018dec:	00000000 	nop
80018df0:	08006366 	j	80018d98 <ipc_mbox_send+0x410>
80018df4:	00000000 	nop
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:264

		schedule();

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->senders), wait);
80018df8:	0c006958 	jal	8001a560 <wait_queue_del>
80018dfc:	27a50028 	addiu	a1,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:265
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_SEND) {
80018e00:	8fc20008 	lw	v0,8(s8)
80018e04:	1052ffc1 	beq	v0,s2,80018d0c <ipc_mbox_send+0x384>
80018e08:	8fb7002c 	lw	s7,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:266
			if ((ret = wait->wakeup_flags) == WT_MBOX_SEND) {
80018e0c:	3c038000 	lui	v1,0x8000
80018e10:	24630120 	addiu	v1,v1,288
80018e14:	16e3ffc0 	bne	s7,v1,80018d18 <ipc_mbox_send+0x390>
80018e18:	8fc30004 	lw	v1,4(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:267
				ret = WT_INTERRUPTED;
80018e1c:	3c178000 	lui	s7,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:277
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);

	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
80018e20:	2463ffff 	addiu	v1,v1,-1
80018e24:	0800634c 	j	80018d30 <ipc_mbox_send+0x3a8>
80018e28:	afc30004 	sw	v1,4(s8)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018e2c:	0c006cbe 	jal	8001b2f8 <intr_disable>
80018e30:	24110001 	li	s1,1
80018e34:	08006319 	j	80018c64 <ipc_mbox_send+0x2dc>
80018e38:	8fd60008 	lw	s6,8(s8)
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:272
				ret = WT_INTERRUPTED;
			}
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);
80018e3c:	16c40023 	bne	s6,a0,80018ecc <ipc_mbox_send+0x544>
80018e40:	0062102b 	sltu	v0,v1,v0
80018e44:	10400021 	beqz	v0,80018ecc <ipc_mbox_send+0x544>
80018e48:	8fa5005c 	lw	a1,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:274

	ret = 0, add_msg(mbox, msg, 1);
80018e4c:	03c02021 	move	a0,s8
80018e50:	0c006178 	jal	800185e0 <add_msg>
80018e54:	24060001 	li	a2,1
80018e58:	0000b821 	move	s7,zero
80018e5c:	08006345 	j	80018d14 <ipc_mbox_send+0x38c>
80018e60:	8fc20008 	lw	v0,8(s8)
load_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:242
	msg->bytes = bytes;
	msg->pid = current->pid;
	return msg;

failed:
	free_msg(msg);
80018e64:	0c00616b 	jal	800185ac <free_msg>
80018e68:	8fa4005c 	lw	a0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:313
				if (user_mem_check(mm, (uintptr_t) src, len, 0)) {
					ret =
					    ((msg =
					      load_msg(src,
						       len)) !=
					     NULL) ? 0 : -E_NO_MEM;
80018e6c:	080062ab 	j	80018aac <ipc_mbox_send+0x124>
80018e70:	2412fff4 	li	s2,-12
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:255
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
80018e74:	3c048002 	lui	a0,0x8002
80018e78:	3c068002 	lui	a2,0x8002
80018e7c:	3c078002 	lui	a3,0x8002
80018e80:	24843644 	addiu	a0,a0,13892
80018e84:	240500ff 	li	a1,255
80018e88:	24c609b0 	addiu	a2,a2,2480
80018e8c:	0c006afd 	jal	8001abf4 <__panic>
80018e90:	24e736e4 	addiu	a3,a3,14052
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:279
	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
	if (mbox->state != OPENED) {
		assert(ret != 0 && mbox->state == CLOSING);
80018e94:	3c068002 	lui	a2,0x8002
80018e98:	3c078002 	lui	a3,0x8002
80018e9c:	24843644 	addiu	a0,a0,13892
80018ea0:	24050117 	li	a1,279
80018ea4:	24c609b0 	addiu	a2,a2,2480
80018ea8:	0c006afd 	jal	8001abf4 <__panic>
80018eac:	24e73754 	addiu	a3,a3,14164
ipc_mbox_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:331

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
				return 0;
			}
			assert(flags == WT_INTERRUPTED);
80018eb0:	3c068002 	lui	a2,0x8002
80018eb4:	3c078002 	lui	a3,0x8002
80018eb8:	24843644 	addiu	a0,a0,13892
80018ebc:	2405014b 	li	a1,331
80018ec0:	24c609b0 	addiu	a2,a2,2480
80018ec4:	0c006afd 	jal	8001abf4 <__panic>
80018ec8:	24e7362c 	addiu	a3,a3,13868
send_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:272
				ret = WT_INTERRUPTED;
			}
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);
80018ecc:	3c048002 	lui	a0,0x8002
80018ed0:	3c068002 	lui	a2,0x8002
80018ed4:	3c078002 	lui	a3,0x8002
80018ed8:	24843644 	addiu	a0,a0,13892
80018edc:	24050110 	li	a1,272
80018ee0:	24c609b0 	addiu	a2,a2,2480
80018ee4:	0c006afd 	jal	8001abf4 <__panic>
80018ee8:	24e7371c 	addiu	a3,a3,14108

80018eec <ipc_mbox_recv>:
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:407
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_recv(int id, struct mboxbuf *buf, unsigned int timeout)
{
80018eec:	27bdff68 	addiu	sp,sp,-152
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80018ef0:	2c822000 	sltiu	v0,a0,8192
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:407
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_recv(int id, struct mboxbuf *buf, unsigned int timeout)
{
80018ef4:	afbe0090 	sw	s8,144(sp)
80018ef8:	afb3007c 	sw	s3,124(sp)
80018efc:	afb20078 	sw	s2,120(sp)
80018f00:	afbf0094 	sw	ra,148(sp)
80018f04:	afb7008c 	sw	s7,140(sp)
80018f08:	afb60088 	sw	s6,136(sp)
80018f0c:	afb50084 	sw	s5,132(sp)
80018f10:	afb40080 	sw	s4,128(sp)
80018f14:	afb10074 	sw	s1,116(sp)
80018f18:	afb00070 	sw	s0,112(sp)
80018f1c:	00a09821 	move	s3,a1
80018f20:	00c09021 	move	s2,a2
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80018f24:	1040001d 	beqz	v0,80018f9c <ipc_mbox_recv+0xb0>
80018f28:	241effea 	li	s8,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018f2c:	3c02b02c 	lui	v0,0xb02c
80018f30:	24420b03 	addiu	v0,v0,2819
80018f34:	00820019 	multu	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80018f38:	3c178015 	lui	s7,0x8015
80018f3c:	26f76b88 	addiu	s7,s7,27528
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018f40:	00001010 	mfhi	v0
80018f44:	00021182 	srl	v0,v0,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80018f48:	00021880 	sll	v1,v0,0x2
80018f4c:	afa30064 	sw	v1,100(sp)
80018f50:	02e31821 	addu	v1,s7,v1
80018f54:	afa3005c 	sw	v1,92(sp)
80018f58:	8c630000 	lw	v1,0(v1)
80018f5c:	1060000f 	beqz	v1,80018f9c <ipc_mbox_recv+0xb0>
80018f60:	00022840 	sll	a1,v0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018f64:	00a21021 	addu	v0,a1,v0
80018f68:	00022940 	sll	a1,v0,0x5
80018f6c:	00a21023 	subu	v0,a1,v0
80018f70:	00822023 	subu	a0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
80018f74:	00041080 	sll	v0,a0,0x2
80018f78:	0004a900 	sll	s5,a0,0x4
80018f7c:	02a2a823 	subu	s5,s5,v0
80018f80:	02a42023 	subu	a0,s5,a0
80018f84:	0004a880 	sll	s5,a0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80018f88:	00751821 	addu	v1,v1,s5
80018f8c:	8c630008 	lw	v1,8(v1)
80018f90:	24020001 	li	v0,1
80018f94:	1062000e 	beq	v1,v0,80018fd0 <ipc_mbox_recv+0xe4>
80018f98:	afa30058 	sw	v1,88(sp)
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
80018f9c:	8fbf0094 	lw	ra,148(sp)
80018fa0:	03c01021 	move	v0,s8
80018fa4:	8fb7008c 	lw	s7,140(sp)
80018fa8:	8fbe0090 	lw	s8,144(sp)
80018fac:	8fb60088 	lw	s6,136(sp)
80018fb0:	8fb50084 	lw	s5,132(sp)
80018fb4:	8fb40080 	lw	s4,128(sp)
80018fb8:	8fb3007c 	lw	s3,124(sp)
80018fbc:	8fb20078 	lw	s2,120(sp)
80018fc0:	8fb10074 	lw	s1,116(sp)
80018fc4:	8fb00070 	lw	s0,112(sp)
80018fc8:	03e00008 	jr	ra
80018fcc:	27bd0098 	addiu	sp,sp,152
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:415
	}

	size_t size;
	struct msg_msg *msg;
	struct msg_mbox *mbox;
	struct mm_struct *mm = current->mm;
80018fd0:	3c118015 	lui	s1,0x8015
80018fd4:	8e2277a4 	lw	v0,30628(s1)
80018fd8:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:420
	struct mboxbuf __local_buf, *local_buf = &__local_buf;

	int ret = -E_INVAL;

	lock_mm(mm);
80018fdc:	0c004c18 	jal	80013060 <lock_mm>
80018fe0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:423
	{
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
80018fe4:	8fa30058 	lw	v1,88(sp)
80018fe8:	02002021 	move	a0,s0
80018fec:	27a50018 	addiu	a1,sp,24
80018ff0:	02603021 	move	a2,s3
80018ff4:	24070010 	li	a3,16
80018ff8:	0c00781a 	jal	8001e068 <copy_from_user>
80018ffc:	afa30010 	sw	v1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:422

	int ret = -E_INVAL;

	lock_mm(mm);
	{
		if (copy_from_user
80019000:	10400003 	beqz	v0,80019010 <ipc_mbox_recv+0x124>
80019004:	8fb40020 	lw	s4,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:424
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
			if ((size = local_buf->size) > 0) {
80019008:	16800011 	bnez	s4,80019050 <ipc_mbox_recv+0x164>
8001900c:	8fa50024 	lw	a1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:433
					ret = 0;
				}
			}
		}
	}
	unlock_mm(mm);
80019010:	0c004c29 	jal	800130a4 <unlock_mm>
80019014:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
80019018:	8fbf0094 	lw	ra,148(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:436
		}
	}
	unlock_mm(mm);

	if (ret != 0 || (mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
8001901c:	241effea 	li	s8,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
80019020:	03c01021 	move	v0,s8
80019024:	8fb7008c 	lw	s7,140(sp)
80019028:	8fbe0090 	lw	s8,144(sp)
8001902c:	8fb60088 	lw	s6,136(sp)
80019030:	8fb50084 	lw	s5,132(sp)
80019034:	8fb40080 	lw	s4,128(sp)
80019038:	8fb3007c 	lw	s3,124(sp)
8001903c:	8fb20078 	lw	s2,120(sp)
80019040:	8fb10074 	lw	s1,116(sp)
80019044:	8fb00070 	lw	s0,112(sp)
80019048:	03e00008 	jr	ra
8001904c:	27bd0098 	addiu	sp,sp,152
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:427
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
			if ((size = local_buf->size) > 0) {
				void *dst = local_buf->data;
				if (user_mem_check
				    (mm, (uintptr_t) dst, size, 1)) {
80019050:	02002021 	move	a0,s0
80019054:	02803021 	move	a2,s4
80019058:	0c005069 	jal	800141a4 <user_mem_check>
8001905c:	24070001 	li	a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:426
	{
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
			if ((size = local_buf->size) > 0) {
				void *dst = local_buf->data;
				if (user_mem_check
80019060:	1040ffeb 	beqz	v0,80019010 <ipc_mbox_recv+0x124>
80019064:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:433
					ret = 0;
				}
			}
		}
	}
	unlock_mm(mm);
80019068:	0c004c29 	jal	800130a4 <unlock_mm>
8001906c:	02002021 	move	a0,s0
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
80019070:	8fa3005c 	lw	v1,92(sp)
80019074:	8c620000 	lw	v0,0(v1)
80019078:	1040ffc8 	beqz	v0,80018f9c <ipc_mbox_recv+0xb0>
8001907c:	00551021 	addu	v0,v0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:78
			struct msg_mbox *mbox = mbox_map[i] + j;
80019080:	afa2005c 	sw	v0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80019084:	8fa30058 	lw	v1,88(sp)
80019088:	8c420008 	lw	v0,8(v0)
8001908c:	1443ffc4 	bne	v0,v1,80018fa0 <ipc_mbox_recv+0xb4>
80019090:	8fbf0094 	lw	ra,148(sp)
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
80019094:	1240000c 	beqz	s2,800190c8 <ipc_mbox_recv+0x1dc>
80019098:	0000f021 	move	s8,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
		*saved_ticks = ticks;
8001909c:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:30
		return timer_init(timer, pls_read(current), timeout);
800190a0:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
800190a4:	8c6377ac 	lw	v1,30636(v1)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
800190a8:	27a40050 	addiu	a0,sp,80
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
800190ac:	afb2003c 	sw	s2,60(sp)
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
800190b0:	afa30068 	sw	v1,104(sp)
timer_init():
	timer->proc = proc;
800190b4:	afa20040 	sw	v0,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->linux_timer.linux_timer = NULL;
800190b8:	afa00044 	sw	zero,68(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
800190bc:	afa40054 	sw	a0,84(sp)
800190c0:	afa40050 	sw	a0,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:441
		return -E_INVAL;
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
800190c4:	27be003c 	addiu	s8,sp,60
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800190c8:	40026000 	mfc0	v0,c0_status
800190cc:	30420001 	andi	v0,v0,0x1
800190d0:	144000ab 	bnez	v0,80019380 <ipc_mbox_recv+0x494>
800190d4:	00000000 	nop
800190d8:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:13
		return 0;
800190dc:	afa00058 	sw	zero,88(sp)
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:370
	 timer_t * timer)
{
	int ret = -1;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
800190e0:	8fa4005c 	lw	a0,92(sp)
800190e4:	8c830004 	lw	v1,4(a0)
800190e8:	24630001 	addiu	v1,v1,1
800190ec:	ac830004 	sw	v1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:374
	wait_t __wait, *wait = &__wait;
	while (mbox->slots == 0) {
		assert(mbox->state == OPENED);
		wait_current_set(&(mbox->receivers), wait, WT_MBOX_RECV);
800190f0:	24830024 	addiu	v1,a0,36
800190f4:	afa30060 	sw	v1,96(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:372
	int ret = -1;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->slots == 0) {
800190f8:	8fa3005c 	lw	v1,92(sp)
800190fc:	8c640010 	lw	a0,16(v1)
80019100:	148000a6 	bnez	a0,8001939c <ipc_mbox_recv+0x4b0>
80019104:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:373
		assert(mbox->state == OPENED);
80019108:	24040001 	li	a0,1
8001910c:	144400f7 	bne	v0,a0,800194ec <ipc_mbox_recv+0x600>
80019110:	8fa40060 	lw	a0,96(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:374
		wait_current_set(&(mbox->receivers), wait, WT_MBOX_RECV);
80019114:	3c068000 	lui	a2,0x8000
80019118:	27a50028 	addiu	a1,sp,40
8001911c:	0c0069f2 	jal	8001a7c8 <wait_current_set>
80019120:	34c60121 	ori	a2,a2,0x121
ipc_add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80019124:	13c00004 	beqz	s8,80019138 <ipc_mbox_recv+0x24c>
80019128:	8fa30058 	lw	v1,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
8001912c:	0c0005e4 	jal	80001790 <add_timer>
80019130:	03c02021 	move	a0,s8
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019134:	8fa30058 	lw	v1,88(sp)
80019138:	10600003 	beqz	v1,80019148 <ipc_mbox_recv+0x25c>
8001913c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019140:	0c006cba 	jal	8001b2e8 <intr_enable>
80019144:	00000000 	nop
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:378
		ipc_add_timer(timer);
		local_intr_restore(intr_flag);

		schedule();
80019148:	0c00059e 	jal	80001678 <schedule>
8001914c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019150:	40026000 	mfc0	v0,c0_status
80019154:	30420001 	andi	v0,v0,0x1
80019158:	14400033 	bnez	v0,80019228 <ipc_mbox_recv+0x33c>
8001915c:	afa00058 	sw	zero,88(sp)
ipc_del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80019160:	13c00003 	beqz	s8,80019170 <ipc_mbox_recv+0x284>
80019164:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80019168:	0c00062c 	jal	800018b0 <del_timer>
8001916c:	03c02021 	move	a0,s8
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:382

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->receivers), wait);
80019170:	0c0069a8 	jal	8001a6a0 <wait_in_queue>
80019174:	27a40028 	addiu	a0,sp,40
80019178:	14400073 	bnez	v0,80019348 <ipc_mbox_recv+0x45c>
8001917c:	8fa3005c 	lw	v1,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:383
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
80019180:	24040001 	li	a0,1
80019184:	8c620008 	lw	v0,8(v1)
80019188:	14440078 	bne	v0,a0,8001936c <ipc_mbox_recv+0x480>
8001918c:	8fa4005c 	lw	a0,92(sp)
80019190:	8fa3002c 	lw	v1,44(sp)
80019194:	3c058000 	lui	a1,0x8000
80019198:	34a50121 	ori	a1,a1,0x121
8001919c:	1065ffd7 	beq	v1,a1,800190fc <ipc_mbox_recv+0x210>
800191a0:	8fa3005c 	lw	v1,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:367

static int
recv_msg(struct msg_mbox *mbox, size_t max_bytes, struct msg_msg **msg_store,
	 timer_t * timer)
{
	int ret = -1;
800191a4:	241effff 	li	s8,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
800191a8:	8c620004 	lw	v0,4(v1)
800191ac:	2442ffff 	addiu	v0,v0,-1
800191b0:	ac620004 	sw	v0,4(v1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800191b4:	8fa30058 	lw	v1,88(sp)
800191b8:	14600020 	bnez	v1,8001923c <ipc_mbox_recv+0x350>
800191bc:	00000000 	nop
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:442
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
	if ((ret = recv_msg(mbox, size, &msg, timer)) != 0) {
800191c0:	13c00022 	beqz	s8,8001924c <ipc_mbox_recv+0x360>
800191c4:	2402ffff 	li	v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:443
		if (ret == -1) {
800191c8:	17c2ff75 	bne	s8,v0,80018fa0 <ipc_mbox_recv+0xb4>
800191cc:	8fbf0094 	lw	ra,148(sp)
ipc_check_timeout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
800191d0:	1240ff74 	beqz	s2,80018fa4 <ipc_mbox_recv+0xb8>
800191d4:	03c01021 	move	v0,s8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
800191d8:	3c028015 	lui	v0,0x8015
800191dc:	8fa30068 	lw	v1,104(sp)
800191e0:	8c4277ac 	lw	v0,30636(v0)
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
800191e4:	8fbf0094 	lw	ra,148(sp)
800191e8:	8fb7008c 	lw	s7,140(sp)
ipc_check_timeout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:39
800191ec:	00431023 	subu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
800191f0:	0052902b 	sltu	s2,v0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:41
			return -E_TIMEOUT;
800191f4:	2402fff0 	li	v0,-16
800191f8:	0052f00a 	movz	s8,v0,s2
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
800191fc:	03c01021 	move	v0,s8
80019200:	8fb60088 	lw	s6,136(sp)
80019204:	8fbe0090 	lw	s8,144(sp)
80019208:	8fb50084 	lw	s5,132(sp)
8001920c:	8fb40080 	lw	s4,128(sp)
80019210:	8fb3007c 	lw	s3,124(sp)
80019214:	8fb20078 	lw	s2,120(sp)
80019218:	8fb10074 	lw	s1,116(sp)
8001921c:	8fb00070 	lw	s0,112(sp)
80019220:	03e00008 	jr	ra
80019224:	27bd0098 	addiu	sp,sp,152
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80019228:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001922c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80019230:	24030001 	li	v1,1
80019234:	08006458 	j	80019160 <ipc_mbox_recv+0x274>
80019238:	afa30058 	sw	v1,88(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001923c:	0c006cba 	jal	8001b2e8 <intr_enable>
80019240:	00000000 	nop
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:442
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
	if ((ret = recv_msg(mbox, size, &msg, timer)) != 0) {
80019244:	17c0ffe0 	bnez	s8,800191c8 <ipc_mbox_recv+0x2dc>
80019248:	2402ffff 	li	v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:451
		return ret;
	}

	ret = -E_INVAL;

	lock_mm(mm);
8001924c:	0c004c18 	jal	80013060 <lock_mm>
80019250:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:454
	{
		size_t len;
		local_buf->len = len = msg->bytes, local_buf->from = msg->pid;
80019254:	8ec20000 	lw	v0,0(s6)
80019258:	8ed20004 	lw	s2,4(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:455
		if (copy_to_user(mm, buf, local_buf, sizeof(struct mboxbuf))) {
8001925c:	02002021 	move	a0,s0
80019260:	02602821 	move	a1,s3
80019264:	27a60018 	addiu	a2,sp,24
80019268:	24070010 	li	a3,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:454
	ret = -E_INVAL;

	lock_mm(mm);
	{
		size_t len;
		local_buf->len = len = msg->bytes, local_buf->from = msg->pid;
8001926c:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:455
		if (copy_to_user(mm, buf, local_buf, sizeof(struct mboxbuf))) {
80019270:	0c007834 	jal	8001e0d0 <copy_to_user>
80019274:	afa20018 	sw	v0,24(sp)
80019278:	10400073 	beqz	v0,80019448 <ipc_mbox_recv+0x55c>
8001927c:	8fa30024 	lw	v1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:457
			void *dst = local_buf->data;
			if (user_mem_check(mm, (uintptr_t) dst, len, 1)) {
80019280:	02002021 	move	a0,s0
80019284:	02403021 	move	a2,s2
80019288:	00602821 	move	a1,v1
8001928c:	24070001 	li	a3,1
80019290:	0c005069 	jal	800141a4 <user_mem_check>
80019294:	afa3006c 	sw	v1,108(sp)
80019298:	1040006b 	beqz	v0,80019448 <ipc_mbox_recv+0x55c>
8001929c:	8fa3006c 	lw	v1,108(sp)
store_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:341
	return ret;
}

static void store_msg(struct msg_msg *msg, void *dst)
{
	size_t alen, len = msg->bytes;
800192a0:	8ed20004 	lw	s2,4(s6)
800192a4:	241301ec 	li	s3,492
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:346
	if ((alen = len) > MAX_MSG_DATALEN) {
		alen = MAX_MSG_DATALEN;
	}

	struct msg_seg *seg = msg->next;
800192a8:	8ed40008 	lw	s4,8(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:341
	return ret;
}

static void store_msg(struct msg_msg *msg, void *dst)
{
	size_t alen, len = msg->bytes;
800192ac:	2e4201ed 	sltiu	v0,s2,493
800192b0:	0242980b 	movn	s3,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:348
		alen = MAX_MSG_DATALEN;
	}

	struct msg_seg *seg = msg->next;

	const void *src = msg + 1;
800192b4:	26c60014 	addiu	a2,s6,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
800192b8:	080064b7 	j	800192dc <ipc_mbox_recv+0x3f0>
800192bc:	241501ec 	li	s5,492
800192c0:	128000a1 	beqz	s4,80019548 <ipc_mbox_recv+0x65c>
800192c4:	2e5301ed 	sltiu	s3,s2,493
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:356
		src = seg + 1, seg = seg->next;
800192c8:	26860004 	addiu	a2,s4,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
800192cc:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:356
		src = seg + 1, seg = seg->next;
800192d0:	8e940000 	lw	s4,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
800192d4:	0253200b 	movn	a0,s2,s3
800192d8:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:358
		src = seg + 1, seg = seg->next;
inside:
		copy_to_user(current->mm, dst, src, alen);
800192dc:	8e2277a4 	lw	v0,30628(s1)
800192e0:	00602821 	move	a1,v1
800192e4:	02603821 	move	a3,s3
800192e8:	8c440020 	lw	a0,32(v0)
800192ec:	afa3006c 	sw	v1,108(sp)
800192f0:	0c007834 	jal	8001e0d0 <copy_to_user>
800192f4:	02539023 	subu	s2,s2,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:359
		len -= alen, dst = ((char *)dst) + alen;
800192f8:	8fa3006c 	lw	v1,108(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:351
	struct msg_seg *seg = msg->next;

	const void *src = msg + 1;
	goto inside;

	while (len > 0) {
800192fc:	1640fff0 	bnez	s2,800192c0 <ipc_mbox_recv+0x3d4>
80019300:	00731821 	addu	v1,v1,s3
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:462
			if (user_mem_check(mm, (uintptr_t) dst, len, 1)) {
				ret = 0, store_msg(msg, dst);
			}
		}
	}
	unlock_mm(mm);
80019304:	0c004c29 	jal	800130a4 <unlock_mm>
80019308:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:473
			add_msg(mbox, msg, 0);
		}
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
8001930c:	0c00616b 	jal	800185ac <free_msg>
80019310:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
	return ret;
}
80019314:	8fbf0094 	lw	ra,148(sp)
80019318:	03c01021 	move	v0,s8
8001931c:	8fb7008c 	lw	s7,140(sp)
80019320:	8fbe0090 	lw	s8,144(sp)
80019324:	8fb60088 	lw	s6,136(sp)
80019328:	8fb50084 	lw	s5,132(sp)
8001932c:	8fb40080 	lw	s4,128(sp)
80019330:	8fb3007c 	lw	s3,124(sp)
80019334:	8fb20078 	lw	s2,120(sp)
80019338:	8fb10074 	lw	s1,116(sp)
8001933c:	8fb00070 	lw	s0,112(sp)
80019340:	03e00008 	jr	ra
80019344:	27bd0098 	addiu	sp,sp,152
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:382

		schedule();

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->receivers), wait);
80019348:	8fa40060 	lw	a0,96(sp)
8001934c:	0c006958 	jal	8001a560 <wait_queue_del>
80019350:	27a50028 	addiu	a1,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:383
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
80019354:	8fa3005c 	lw	v1,92(sp)
80019358:	24040001 	li	a0,1
8001935c:	8c620008 	lw	v0,8(v1)
80019360:	5044ff8c 	beql	v0,a0,80019194 <ipc_mbox_recv+0x2a8>
80019364:	8fa3002c 	lw	v1,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
80019368:	8fa4005c 	lw	a0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:367

static int
recv_msg(struct msg_mbox *mbox, size_t max_bytes, struct msg_msg **msg_store,
	 timer_t * timer)
{
	int ret = -1;
8001936c:	241effff 	li	s8,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
80019370:	8c830004 	lw	v1,4(a0)
80019374:	2463ffff 	addiu	v1,v1,-1
80019378:	08006509 	j	80019424 <ipc_mbox_recv+0x538>
8001937c:	ac830004 	sw	v1,4(a0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80019380:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019384:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80019388:	24030001 	li	v1,1
8001938c:	afa30058 	sw	v1,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80019390:	8fa3005c 	lw	v1,92(sp)
80019394:	08006438 	j	800190e0 <ipc_mbox_recv+0x1f4>
80019398:	8c620008 	lw	v0,8(v1)
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:387
		wait_current_del(&(mbox->receivers), wait);
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
8001939c:	14430062 	bne	v0,v1,80019528 <ipc_mbox_recv+0x63c>
800193a0:	8fa3005c 	lw	v1,92(sp)
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
800193a4:	8c620018 	lw	v0,24(v1)
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:388
	assert(!list_empty(&(mbox->msg_link)));
800193a8:	24630014 	addiu	v1,v1,20
800193ac:	50430057 	beql	v0,v1,8001950c <ipc_mbox_recv+0x620>
800193b0:	3c048002 	lui	a0,0x8002
pick_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:117
pick_msg(struct msg_mbox *mbox, size_t max_bytes, struct msg_msg **msg_store)
{
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));
	struct msg_msg *msg = le2msg(list_next(&(mbox->msg_link)), msg_link);
	if (max_bytes < msg->bytes) {
800193b4:	8c43fff8 	lw	v1,-8(v0)
800193b8:	0283a02b 	sltu	s4,s4,v1
800193bc:	1680003f 	bnez	s4,800194bc <ipc_mbox_recv+0x5d0>
800193c0:	2484ffff 	addiu	a0,a0,-1
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
800193c4:	8c450000 	lw	a1,0(v0)
800193c8:	8c430004 	lw	v1,4(v0)
pick_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:120
		return -E_TOO_BIG;
	}
	mbox->slots--, *msg_store = msg;
800193cc:	8fa6005c 	lw	a2,92(sp)
800193d0:	2456fff4 	addiu	s6,v0,-12
800193d4:	acc40010 	sw	a0,16(a2)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800193d8:	aca30004 	sw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
800193dc:	ac650000 	sw	a1,0(v1)
pick_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:122
	list_del(&(msg->msg_link));
	wakeup_first(&(mbox->senders), WT_MBOX_SEND, 1);
800193e0:	3c058000 	lui	a1,0x8000
800193e4:	24c4001c 	addiu	a0,a2,28
800193e8:	24a50120 	addiu	a1,a1,288
800193ec:	0c0069bb 	jal	8001a6ec <wakeup_first>
800193f0:	24060001 	li	a2,1
800193f4:	8fa3005c 	lw	v1,92(sp)
800193f8:	0000f021 	move	s8,zero
800193fc:	8c620008 	lw	v0,8(v1)
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
80019400:	8fa4005c 	lw	a0,92(sp)
80019404:	8c830004 	lw	v1,4(a0)
80019408:	2463ffff 	addiu	v1,v1,-1
8001940c:	ac830004 	sw	v1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:396
	if (mbox->state != OPENED) {
80019410:	24040001 	li	a0,1
80019414:	5044ff68 	beql	v0,a0,800191b8 <ipc_mbox_recv+0x2cc>
80019418:	8fa30058 	lw	v1,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:397
		assert(ret != 0 && mbox->state == CLOSING);
8001941c:	13c00052 	beqz	s8,80019568 <ipc_mbox_recv+0x67c>
80019420:	3c048002 	lui	a0,0x8002
80019424:	24040002 	li	a0,2
80019428:	1444004f 	bne	v0,a0,80019568 <ipc_mbox_recv+0x67c>
8001942c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:398
		if (mbox->inuse == 0) {
80019430:	5460ff61 	bnezl	v1,800191b8 <ipc_mbox_recv+0x2cc>
80019434:	8fa30058 	lw	v1,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:399
			mbox_free(mbox);
80019438:	0c00611c 	jal	80018470 <mbox_free>
8001943c:	8fa4005c 	lw	a0,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019440:	0800646e 	j	800191b8 <ipc_mbox_recv+0x2cc>
80019444:	8fa30058 	lw	v1,88(sp)
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:462
			if (user_mem_check(mm, (uintptr_t) dst, len, 1)) {
				ret = 0, store_msg(msg, dst);
			}
		}
	}
	unlock_mm(mm);
80019448:	0c004c29 	jal	800130a4 <unlock_mm>
8001944c:	02002021 	move	a0,s0
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
80019450:	8fa30064 	lw	v1,100(sp)
80019454:	02e3b821 	addu	s7,s7,v1
80019458:	8ee40000 	lw	a0,0(s7)
8001945c:	10800021 	beqz	a0,800194e4 <ipc_mbox_recv+0x5f8>
80019460:	00952021 	addu	a0,a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			struct msg_mbox *mbox = mbox_map[i] + j;
			if (mbox->state == OPENED) {
80019464:	8c830008 	lw	v1,8(a0)
80019468:	24020001 	li	v0,1
8001946c:	1462ffa7 	bne	v1,v0,8001930c <ipc_mbox_recv+0x420>
80019470:	241effea 	li	s8,-22
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019474:	40026000 	mfc0	v0,c0_status
80019478:	30420001 	andi	v0,v0,0x1
8001947c:	14400005 	bnez	v0,80019494 <ipc_mbox_recv+0x5a8>
80019480:	02c02821 	move	a1,s6
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:468

	if (ret != 0 && (mbox = get_mbox(id)) != NULL) {
		bool local_intr;
		local_intr_save(local_intr);
		{
			add_msg(mbox, msg, 0);
80019484:	0c006178 	jal	800185e0 <add_msg>
80019488:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
8001948c:	080063e8 	j	80018fa0 <ipc_mbox_recv+0xb4>
80019490:	8fbf0094 	lw	ra,148(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019494:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019498:	afa4006c 	sw	a0,108(sp)
ipc_mbox_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:468

	if (ret != 0 && (mbox = get_mbox(id)) != NULL) {
		bool local_intr;
		local_intr_save(local_intr);
		{
			add_msg(mbox, msg, 0);
8001949c:	8fa4006c 	lw	a0,108(sp)
800194a0:	02c02821 	move	a1,s6
800194a4:	0c006178 	jal	800185e0 <add_msg>
800194a8:	00003021 	move	a2,zero
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800194ac:	0c006cba 	jal	8001b2e8 <intr_enable>
800194b0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
800194b4:	080063e8 	j	80018fa0 <ipc_mbox_recv+0xb4>
800194b8:	8fbf0094 	lw	ra,148(sp)
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:391
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));

	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
800194bc:	8fa3005c 	lw	v1,92(sp)
800194c0:	3c058000 	lui	a1,0x8000
800194c4:	24a50121 	addiu	a1,a1,289
800194c8:	24640024 	addiu	a0,v1,36
800194cc:	0c0069bb 	jal	8001a6ec <wakeup_first>
800194d0:	24060001 	li	a2,1
800194d4:	8fa3005c 	lw	v1,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:118
{
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));
	struct msg_msg *msg = le2msg(list_next(&(mbox->msg_link)), msg_link);
	if (max_bytes < msg->bytes) {
		return -E_TOO_BIG;
800194d8:	241effe5 	li	s8,-27
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:391
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));

	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
800194dc:	08006500 	j	80019400 <ipc_mbox_recv+0x514>
800194e0:	8c620008 	lw	v0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
800194e4:	080064c3 	j	8001930c <ipc_mbox_recv+0x420>
800194e8:	241effea 	li	s8,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:373
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->slots == 0) {
		assert(mbox->state == OPENED);
800194ec:	3c048002 	lui	a0,0x8002
800194f0:	3c068002 	lui	a2,0x8002
800194f4:	3c078002 	lui	a3,0x8002
800194f8:	24843644 	addiu	a0,a0,13892
800194fc:	24050175 	li	a1,373
80019500:	24c609b0 	addiu	a2,a2,2480
80019504:	0c006afd 	jal	8001abf4 <__panic>
80019508:	24e736e4 	addiu	a3,a3,14052
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:388
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));
8001950c:	3c068002 	lui	a2,0x8002
80019510:	3c078002 	lui	a3,0x8002
80019514:	24843644 	addiu	a0,a0,13892
80019518:	24050184 	li	a1,388
8001951c:	24c609b0 	addiu	a2,a2,2480
80019520:	0c006afd 	jal	8001abf4 <__panic>
80019524:	24e737a4 	addiu	a3,a3,14244
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:387
		wait_current_del(&(mbox->receivers), wait);
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
80019528:	3c048002 	lui	a0,0x8002
8001952c:	3c068002 	lui	a2,0x8002
80019530:	3c078002 	lui	a3,0x8002
80019534:	24843644 	addiu	a0,a0,13892
80019538:	24050183 	li	a1,387
8001953c:	24c609b0 	addiu	a2,a2,2480
80019540:	0c006afd 	jal	8001abf4 <__panic>
80019544:	24e73778 	addiu	a3,a3,14200
store_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
80019548:	3c048002 	lui	a0,0x8002
8001954c:	3c068002 	lui	a2,0x8002
80019550:	3c078002 	lui	a3,0x8002
80019554:	24843644 	addiu	a0,a0,13892
80019558:	24050163 	li	a1,355
8001955c:	24c609b0 	addiu	a2,a2,2480
80019560:	0c006afd 	jal	8001abf4 <__panic>
80019564:	24e737c4 	addiu	a3,a3,14276
recv_msg():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:397
	}

out:
	mbox->inuse--;
	if (mbox->state != OPENED) {
		assert(ret != 0 && mbox->state == CLOSING);
80019568:	3c068002 	lui	a2,0x8002
8001956c:	3c078002 	lui	a3,0x8002
80019570:	24843644 	addiu	a0,a0,13892
80019574:	2405018d 	li	a1,397
80019578:	24c609b0 	addiu	a2,a2,2480
8001957c:	0c006afd 	jal	8001abf4 <__panic>
80019580:	24e73754 	addiu	a3,a3,14164

80019584 <ipc_mbox_free>:
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:478
	free_msg(msg);
	return ret;
}

int ipc_mbox_free(int id)
{
80019584:	27bdffd8 	addiu	sp,sp,-40
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80019588:	2c832000 	sltiu	v1,a0,8192
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:478
	free_msg(msg);
	return ret;
}

int ipc_mbox_free(int id)
{
8001958c:	afbf0024 	sw	ra,36(sp)
80019590:	afb20020 	sw	s2,32(sp)
80019594:	afb1001c 	sw	s1,28(sp)
80019598:	afb00018 	sw	s0,24(sp)
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
8001959c:	1060001b 	beqz	v1,8001960c <ipc_mbox_free+0x88>
800195a0:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800195a4:	3c03b02c 	lui	v1,0xb02c
800195a8:	24630b03 	addiu	v1,v1,2819
800195ac:	00830019 	multu	a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
800195b0:	3c058015 	lui	a1,0x8015
800195b4:	24a56b88 	addiu	a1,a1,27528
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800195b8:	00001810 	mfhi	v1
800195bc:	00031982 	srl	v1,v1,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
800195c0:	00033080 	sll	a2,v1,0x2
800195c4:	00c52821 	addu	a1,a2,a1
800195c8:	8ca50000 	lw	a1,0(a1)
800195cc:	10a0000f 	beqz	a1,8001960c <ipc_mbox_free+0x88>
800195d0:	00033040 	sll	a2,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800195d4:	00c31821 	addu	v1,a2,v1
800195d8:	00033140 	sll	a2,v1,0x5
800195dc:	00c31823 	subu	v1,a2,v1
800195e0:	00832023 	subu	a0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
800195e4:	00041880 	sll	v1,a0,0x2
800195e8:	00048100 	sll	s0,a0,0x4
800195ec:	02038023 	subu	s0,s0,v1
800195f0:	02042023 	subu	a0,s0,a0
800195f4:	00048080 	sll	s0,a0,0x2
800195f8:	00b08021 	addu	s0,a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
800195fc:	8e040008 	lw	a0,8(s0)
80019600:	24030001 	li	v1,1
80019604:	10830007 	beq	a0,v1,80019624 <ipc_mbox_free+0xa0>
80019608:	00000000 	nop
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:502
			mbox_free(mbox);
		}
	}
	local_intr_restore(intr_flag);
	return 0;
}
8001960c:	8fbf0024 	lw	ra,36(sp)
80019610:	8fb20020 	lw	s2,32(sp)
80019614:	8fb1001c 	lw	s1,28(sp)
80019618:	8fb00018 	lw	s0,24(sp)
8001961c:	03e00008 	jr	ra
80019620:	27bd0028 	addiu	sp,sp,40
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019624:	40026000 	mfc0	v0,c0_status
80019628:	30420001 	andi	v0,v0,0x1
8001962c:	10400003 	beqz	v0,8001963c <ipc_mbox_free+0xb8>
80019630:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019634:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019638:	24110001 	li	s1,1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001963c:	8e040018 	lw	a0,24(s0)
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:486
		return -E_INVAL;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		mbox->state = CLOSING;
80019640:	24020002 	li	v0,2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:488

		list_entry_t *list = &(mbox->msg_link), *le;
80019644:	26120014 	addiu	s2,s0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:489
		while ((le = list_next(list)) != list) {
80019648:	1244000a 	beq	s2,a0,80019674 <ipc_mbox_free+0xf0>
8001964c:	ae020008 	sw	v0,8(s0)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80019650:	8c830000 	lw	v1,0(a0)
80019654:	8c820004 	lw	v0,4(a0)
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:491
			list_del(le);
			free_msg(le2msg(le, msg_link));
80019658:	2484fff4 	addiu	a0,a0,-12
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001965c:	ac620004 	sw	v0,4(v1)
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:491
80019660:	0c00616b 	jal	800185ac <free_msg>
80019664:	ac430000 	sw	v1,0(v0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019668:	8e040018 	lw	a0,24(s0)
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:489
	local_intr_save(intr_flag);
	{
		mbox->state = CLOSING;

		list_entry_t *list = &(mbox->msg_link), *le;
		while ((le = list_next(list)) != list) {
8001966c:	5644fff9 	bnel	s2,a0,80019654 <ipc_mbox_free+0xd0>
80019670:	8c830000 	lw	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:493
			list_del(le);
			free_msg(le2msg(le, msg_link));
		}
		wakeup_queue(&(mbox->senders), WT_INTERRUPTED, 1);
80019674:	2604001c 	addiu	a0,s0,28
80019678:	3c058000 	lui	a1,0x8000
8001967c:	0c0069c6 	jal	8001a718 <wakeup_queue>
80019680:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:494
		wakeup_queue(&(mbox->receivers), WT_INTERRUPTED, 1);
80019684:	26040024 	addiu	a0,s0,36
80019688:	3c058000 	lui	a1,0x8000
8001968c:	0c0069c6 	jal	8001a718 <wakeup_queue>
80019690:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:496

		if (mbox->inuse == 0) {
80019694:	8e020004 	lw	v0,4(s0)
80019698:	1040000c 	beqz	v0,800196cc <ipc_mbox_free+0x148>
8001969c:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800196a0:	1220ffda 	beqz	s1,8001960c <ipc_mbox_free+0x88>
800196a4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800196a8:	0c006cba 	jal	8001b2e8 <intr_enable>
800196ac:	afa20010 	sw	v0,16(sp)
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:502
			mbox_free(mbox);
		}
	}
	local_intr_restore(intr_flag);
	return 0;
}
800196b0:	8fbf0024 	lw	ra,36(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
800196b4:	8fa20010 	lw	v0,16(sp)
ipc_mbox_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:502
800196b8:	8fb20020 	lw	s2,32(sp)
800196bc:	8fb1001c 	lw	s1,28(sp)
800196c0:	8fb00018 	lw	s0,24(sp)
800196c4:	03e00008 	jr	ra
800196c8:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:497
		}
		wakeup_queue(&(mbox->senders), WT_INTERRUPTED, 1);
		wakeup_queue(&(mbox->receivers), WT_INTERRUPTED, 1);

		if (mbox->inuse == 0) {
			mbox_free(mbox);
800196cc:	0c00611c 	jal	80018470 <mbox_free>
800196d0:	02002021 	move	a0,s0
800196d4:	080065a8 	j	800196a0 <ipc_mbox_free+0x11c>
800196d8:	00000000 	nop

800196dc <ipc_mbox_info>:
ipc_mbox_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:505
	local_intr_restore(intr_flag);
	return 0;
}

int ipc_mbox_info(int id, struct mboxinfo *info)
{
800196dc:	27bdffc0 	addiu	sp,sp,-64
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
800196e0:	2c822000 	sltiu	v0,a0,8192
ipc_mbox_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:505
	local_intr_restore(intr_flag);
	return 0;
}

int ipc_mbox_info(int id, struct mboxinfo *info)
{
800196e4:	afb00030 	sw	s0,48(sp)
800196e8:	afbf003c 	sw	ra,60(sp)
800196ec:	afb20038 	sw	s2,56(sp)
800196f0:	afb10034 	sw	s1,52(sp)
get_mbox():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
800196f4:	1040001b 	beqz	v0,80019764 <ipc_mbox_info+0x88>
800196f8:	2410ffea 	li	s0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800196fc:	3c02b02c 	lui	v0,0xb02c
80019700:	24420b03 	addiu	v0,v0,2819
80019704:	00820019 	multu	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80019708:	3c038015 	lui	v1,0x8015
8001970c:	24636b88 	addiu	v1,v1,27528
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80019710:	00001010 	mfhi	v0
80019714:	00021182 	srl	v0,v0,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80019718:	00023080 	sll	a2,v0,0x2
8001971c:	00c31821 	addu	v1,a2,v1
80019720:	8c630000 	lw	v1,0(v1)
80019724:	1060000f 	beqz	v1,80019764 <ipc_mbox_info+0x88>
80019728:	00023040 	sll	a2,v0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
8001972c:	00c21021 	addu	v0,a2,v0
80019730:	00029140 	sll	s2,v0,0x5
80019734:	02421023 	subu	v0,s2,v0
80019738:	00822023 	subu	a0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
8001973c:	00041080 	sll	v0,a0,0x2
80019740:	00049100 	sll	s2,a0,0x4
80019744:	02429023 	subu	s2,s2,v0
80019748:	02442023 	subu	a0,s2,a0
8001974c:	00049080 	sll	s2,a0,0x2
80019750:	00729021 	addu	s2,v1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80019754:	8e430008 	lw	v1,8(s2)
80019758:	24020001 	li	v0,1
8001975c:	50620008 	beql	v1,v0,80019780 <ipc_mbox_info+0xa4>
80019760:	8e420004 	lw	v0,4(s2)
ipc_mbox_info():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:531
		     (mm, info, local_info,
		      sizeof(struct mboxinfo))) ? 0 : -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
}
80019764:	8fbf003c 	lw	ra,60(sp)
80019768:	02001021 	move	v0,s0
8001976c:	8fb20038 	lw	s2,56(sp)
80019770:	8fb10034 	lw	s1,52(sp)
80019774:	8fb00030 	lw	s0,48(sp)
80019778:	03e00008 	jr	ra
8001977c:	27bd0040 	addiu	sp,sp,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:511
	struct msg_mbox *mbox;
	if ((mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
80019780:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:514
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
80019784:	8e460010 	lw	a2,16(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:511
	struct msg_mbox *mbox;
	if ((mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
80019788:	8c6777a4 	lw	a3,30628(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:515
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
	local_info->max_slots = mbox->max_slots;
8001978c:	8e43000c 	lw	v1,12(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:517
	local_info->inuse = (mbox->inuse != 0);
	local_info->has_sender = !wait_queue_empty(&(mbox->senders));
80019790:	2644001c 	addiu	a0,s2,28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:516
	struct mm_struct *mm = current->mm;
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
	local_info->max_slots = mbox->max_slots;
	local_info->inuse = (mbox->inuse != 0);
80019794:	0002102b 	sltu	v0,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:511
	struct msg_mbox *mbox;
	if ((mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
80019798:	8cf10020 	lw	s1,32(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:515
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
	local_info->max_slots = mbox->max_slots;
8001979c:	afa30014 	sw	v1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:514
	}

	struct mm_struct *mm = current->mm;
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
800197a0:	afa60010 	sw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:517
	local_info->max_slots = mbox->max_slots;
	local_info->inuse = (mbox->inuse != 0);
	local_info->has_sender = !wait_queue_empty(&(mbox->senders));
800197a4:	afa50028 	sw	a1,40(sp)
800197a8:	0c0069a4 	jal	8001a690 <wait_queue_empty>
800197ac:	afa20018 	sw	v0,24(sp)
800197b0:	2c420001 	sltiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:518
	local_info->has_receiver = !wait_queue_empty(&(mbox->receivers));
800197b4:	26440024 	addiu	a0,s2,36
800197b8:	0c0069a4 	jal	8001a690 <wait_queue_empty>
800197bc:	afa2001c 	sw	v0,28(sp)
800197c0:	2c420001 	sltiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:522

	int ret;

	lock_mm(mm);
800197c4:	02202021 	move	a0,s1
800197c8:	0c004c18 	jal	80013060 <lock_mm>
800197cc:	afa20020 	sw	v0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:526
	{
		ret =
		    (copy_to_user
		     (mm, info, local_info,
800197d0:	8fa50028 	lw	a1,40(sp)
800197d4:	02202021 	move	a0,s1
800197d8:	27a60010 	addiu	a2,sp,16
800197dc:	0c007834 	jal	8001e0d0 <copy_to_user>
800197e0:	24070014 	li	a3,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:529
		      sizeof(struct mboxinfo))) ? 0 : -E_INVAL;
	}
	unlock_mm(mm);
800197e4:	02202021 	move	a0,s1
800197e8:	0c004c29 	jal	800130a4 <unlock_mm>
800197ec:	0002800b 	movn	s0,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:531
	return ret;
}
800197f0:	8fbf003c 	lw	ra,60(sp)
800197f4:	02001021 	move	v0,s0
800197f8:	8fb20038 	lw	s2,56(sp)
800197fc:	8fb10034 	lw	s1,52(sp)
80019800:	8fb00030 	lw	s0,48(sp)
80019804:	03e00008 	jr	ra
80019808:	27bd0040 	addiu	sp,sp,64

8001980c <mbox_cleanup>:
mbox_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:534

void mbox_cleanup(void)
{
8001980c:	27bdffd0 	addiu	sp,sp,-48
80019810:	afbf002c 	sw	ra,44(sp)
80019814:	afb60028 	sw	s6,40(sp)
80019818:	afb50024 	sw	s5,36(sp)
8001981c:	afb40020 	sw	s4,32(sp)
80019820:	afb3001c 	sw	s3,28(sp)
80019824:	afb20018 	sw	s2,24(sp)
80019828:	afb10014 	sw	s1,20(sp)
8001982c:	afb00010 	sw	s0,16(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019830:	40026000 	mfc0	v0,c0_status
80019834:	30420001 	andi	v0,v0,0x1
80019838:	10400003 	beqz	v0,80019848 <mbox_cleanup+0x3c>
8001983c:	0000b021 	move	s6,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019840:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019844:	24160001 	li	s6,1
80019848:	3c108015 	lui	s0,0x8015
8001984c:	26106b88 	addiu	s0,s0,27528
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80019850:	3c158000 	lui	s5,0x8000
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:533
	}
	unlock_mm(mm);
	return ret;
}

void mbox_cleanup(void)
80019854:	26110164 	addiu	s1,s0,356
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
80019858:	26b51000 	addiu	s5,s5,4096
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001985c:	3c147fff 	lui	s4,0x7fff
80019860:	3c138015 	lui	s3,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80019864:	3c128015 	lui	s2,0x8015
mbox_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:541
	local_intr_save(intr_flag);
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			struct msg_mbox *mbox;
			if ((mbox = mbox_map[i]) != NULL) {
80019868:	8e040000 	lw	a0,0(s0)
8001986c:	5080000d 	beqzl	a0,800198a4 <mbox_cleanup+0x98>
80019870:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:543
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
					if (mbox->state != CLOSED) {
80019874:	8c820008 	lw	v0,8(a0)
80019878:	5440000a 	bnezl	v0,800198a4 <mbox_cleanup+0x98>
8001987c:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:542
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			struct msg_mbox *mbox;
			if ((mbox = mbox_map[i]) != NULL) {
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
80019880:	2482002c 	addiu	v0,a0,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:533
	}
	unlock_mm(mm);
	return ret;
}

void mbox_cleanup(void)
80019884:	08006625 	j	80019894 <mbox_cleanup+0x88>
80019888:	24850ffc 	addiu	a1,a0,4092
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:542
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			struct msg_mbox *mbox;
			if ((mbox = mbox_map[i]) != NULL) {
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
8001988c:	10450012 	beq	v0,a1,800198d8 <mbox_cleanup+0xcc>
80019890:	24860014 	addiu	a2,a0,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:543
					if (mbox->state != CLOSED) {
80019894:	8c430008 	lw	v1,8(v0)
80019898:	5060fffc 	beqzl	v1,8001988c <mbox_cleanup+0x80>
8001989c:	2442002c 	addiu	v0,v0,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:555
				mbox = mbox_map[i];
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
					list_del(&(mbox->msg_link));
				}
				mbox = mbox_map[i], mbox_map[i] = NULL;
				free_page(kva2page(mbox));
800198a0:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:539
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
800198a4:	5611fff1 	bnel	s0,s1,8001986c <mbox_cleanup+0x60>
800198a8:	8e040000 	lw	a0,0(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800198ac:	16c00028 	bnez	s6,80019950 <mbox_cleanup+0x144>
800198b0:	8fbf002c 	lw	ra,44(sp)
mbox_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:560
				free_page(kva2page(mbox));
			}
		}
	}
	local_intr_restore(intr_flag);
}
800198b4:	8fb60028 	lw	s6,40(sp)
800198b8:	8fb50024 	lw	s5,36(sp)
800198bc:	8fb40020 	lw	s4,32(sp)
800198c0:	8fb3001c 	lw	s3,28(sp)
800198c4:	8fb20018 	lw	s2,24(sp)
800198c8:	8fb10014 	lw	s1,20(sp)
800198cc:	8fb00010 	lw	s0,16(sp)
800198d0:	03e00008 	jr	ra
800198d4:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:533
	}
	unlock_mm(mm);
	return ret;
}

void mbox_cleanup(void)
800198d8:	24871010 	addiu	a3,a0,4112
__intr_save():
800198dc:	00c01021 	move	v0,a2
mbox_cleanup():
800198e0:	00441823 	subu	v1,v0,a0
800198e4:	00661821 	addu	v1,v1,a2
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
800198e8:	8c65ffec 	lw	a1,-20(v1)
800198ec:	8c63fff0 	lw	v1,-16(v1)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
	next->prev = prev;
800198f0:	2442002c 	addiu	v0,v0,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800198f4:	aca30004 	sw	v1,4(a1)
mbox_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:551
				}
				if (j != MBOX_P_PAGE) {
					continue;
				}
				mbox = mbox_map[i];
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
800198f8:	1447fff9 	bne	v0,a3,800198e0 <mbox_cleanup+0xd4>
800198fc:	ac650000 	sw	a1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:554
					list_del(&(mbox->msg_link));
				}
				mbox = mbox_map[i], mbox_map[i] = NULL;
80019900:	8e070000 	lw	a3,0(s0)
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80019904:	00f5102b 	sltu	v0,a3,s5
80019908:	1440001a 	bnez	v0,80019974 <mbox_cleanup+0x168>
8001990c:	ae000000 	sw	zero,0(s0)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80019910:	3682f000 	ori	v0,s4,0xf000
80019914:	8e637770 	lw	v1,30576(s3)
80019918:	00e21021 	addu	v0,a3,v0
8001991c:	00021302 	srl	v0,v0,0xc
80019920:	0043182b 	sltu	v1,v0,v1
80019924:	10600019 	beqz	v1,8001998c <mbox_cleanup+0x180>
80019928:	8e4477bc 	lw	a0,30652(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001992c:	00021140 	sll	v0,v0,0x5
mbox_cleanup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:555
				free_page(kva2page(mbox));
80019930:	24050001 	li	a1,1
80019934:	00822021 	addu	a0,a0,v0
80019938:	0c0073fb 	jal	8001cfec <free_pages>
8001993c:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:539
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
80019940:	5611ffca 	bnel	s0,s1,8001986c <mbox_cleanup+0x60>
80019944:	8e040000 	lw	a0,0(s0)
80019948:	0800662b 	j	800198ac <mbox_cleanup+0xa0>
8001994c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/mbox.c:560
				free_page(kva2page(mbox));
			}
		}
	}
	local_intr_restore(intr_flag);
}
80019950:	8fb60028 	lw	s6,40(sp)
80019954:	8fb50024 	lw	s5,36(sp)
80019958:	8fb40020 	lw	s4,32(sp)
8001995c:	8fb3001c 	lw	s3,28(sp)
80019960:	8fb20018 	lw	s2,24(sp)
80019964:	8fb10014 	lw	s1,20(sp)
80019968:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001996c:	08006cba 	j	8001b2e8 <intr_enable>
80019970:	27bd0030 	addiu	sp,sp,48
kva2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80019974:	3c048002 	lui	a0,0x8002
80019978:	3c068002 	lui	a2,0x8002
8001997c:	24842564 	addiu	a0,a0,9572
80019980:	2405006f 	li	a1,111
80019984:	0c006afd 	jal	8001abf4 <__panic>
80019988:	24c625a8 	addiu	a2,a2,9640
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001998c:	3c048002 	lui	a0,0x8002
80019990:	3c068002 	lui	a2,0x8002
80019994:	24842564 	addiu	a0,a0,9572
80019998:	24050063 	li	a1,99
8001999c:	0c006afd 	jal	8001abf4 <__panic>
800199a0:	24c625cc 	addiu	a2,a2,9676

800199a4 <__down>:
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:97

static uint32_t
    __attribute__ ((noinline)) __down(semaphore_t * sem, uint32_t wait_state,
				      timer_t * timer)
{
	assert(sem->valid);
800199a4:	8c820004 	lw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:96
}

static uint32_t
    __attribute__ ((noinline)) __down(semaphore_t * sem, uint32_t wait_state,
				      timer_t * timer)
{
800199a8:	27bdffb8 	addiu	sp,sp,-72
800199ac:	afb30040 	sw	s3,64(sp)
800199b0:	afb00034 	sw	s0,52(sp)
800199b4:	afbf0044 	sw	ra,68(sp)
800199b8:	afb2003c 	sw	s2,60(sp)
800199bc:	afb10038 	sw	s1,56(sp)
800199c0:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:97
	assert(sem->valid);
800199c4:	10400051 	beqz	v0,80019b0c <__down+0x168>
800199c8:	00c09821 	move	s3,a2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800199cc:	40026000 	mfc0	v0,c0_status
800199d0:	30420001 	andi	v0,v0,0x1
800199d4:	10400005 	beqz	v0,800199ec <__down+0x48>
800199d8:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800199dc:	0c006cbe 	jal	8001b2f8 <intr_disable>
800199e0:	afa40028 	sw	a0,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
800199e4:	8fa40028 	lw	a0,40(sp)
800199e8:	24120001 	li	s2,1
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:100
	bool intr_flag;
	local_intr_save(intr_flag);
	if (sem->value > 0) {
800199ec:	8c820000 	lw	v0,0(a0)
800199f0:	18400015 	blez	v0,80019a48 <__down+0xa4>
800199f4:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:101
		sem->value--;
800199f8:	ac820000 	sw	v0,0(a0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800199fc:	16400008 	bnez	s2,80019a20 <__down+0x7c>
80019a00:	00001021 	move	v0,zero
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:121

	if (wait->wakeup_flags != wait_state) {
		return wait->wakeup_flags;
	}
	return 0;
}
80019a04:	8fbf0044 	lw	ra,68(sp)
80019a08:	8fb30040 	lw	s3,64(sp)
80019a0c:	8fb2003c 	lw	s2,60(sp)
80019a10:	8fb10038 	lw	s1,56(sp)
80019a14:	8fb00034 	lw	s0,52(sp)
80019a18:	03e00008 	jr	ra
80019a1c:	27bd0048 	addiu	sp,sp,72
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019a20:	0c006cba 	jal	8001b2e8 <intr_enable>
80019a24:	afa20028 	sw	v0,40(sp)
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:121
80019a28:	8fbf0044 	lw	ra,68(sp)
80019a2c:	8fa20028 	lw	v0,40(sp)
80019a30:	8fb30040 	lw	s3,64(sp)
80019a34:	8fb2003c 	lw	s2,60(sp)
80019a38:	8fb10038 	lw	s1,56(sp)
80019a3c:	8fb00034 	lw	s0,52(sp)
80019a40:	03e00008 	jr	ra
80019a44:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:106
		sem->value--;
		local_intr_restore(intr_flag);
		return 0;
	}
	wait_t __wait, *wait = &__wait;
	wait_current_set(&(sem->wait_queue), wait, wait_state);
80019a48:	2491000c 	addiu	s1,a0,12
80019a4c:	02202021 	move	a0,s1
80019a50:	27a50010 	addiu	a1,sp,16
80019a54:	0c0069f2 	jal	8001a7c8 <wait_current_set>
80019a58:	02003021 	move	a2,s0
ipc_add_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80019a5c:	12600003 	beqz	s3,80019a6c <__down+0xc8>
80019a60:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80019a64:	0c0005e4 	jal	80001790 <add_timer>
80019a68:	02602021 	move	a0,s3
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019a6c:	12400003 	beqz	s2,80019a7c <__down+0xd8>
80019a70:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019a74:	0c006cba 	jal	8001b2e8 <intr_enable>
80019a78:	00000000 	nop
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:110
	ipc_add_timer(timer);
	local_intr_restore(intr_flag);

	schedule();
80019a7c:	0c00059e 	jal	80001678 <schedule>
80019a80:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019a84:	40026000 	mfc0	v0,c0_status
80019a88:	30420001 	andi	v0,v0,0x1
80019a8c:	14400017 	bnez	v0,80019aec <__down+0x148>
80019a90:	00009021 	move	s2,zero
ipc_del_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80019a94:	12600003 	beqz	s3,80019aa4 <__down+0x100>
80019a98:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80019a9c:	0c00062c 	jal	800018b0 <del_timer>
80019aa0:	02602021 	move	a0,s3
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:114

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(&(sem->wait_queue), wait);
80019aa4:	0c0069a8 	jal	8001a6a0 <wait_in_queue>
80019aa8:	27a40010 	addiu	a0,sp,16
80019aac:	54400013 	bnezl	v0,80019afc <__down+0x158>
80019ab0:	02202021 	move	a0,s1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019ab4:	12400004 	beqz	s2,80019ac8 <__down+0x124>
80019ab8:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019abc:	0c006cba 	jal	8001b2e8 <intr_enable>
80019ac0:	00000000 	nop
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:117
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != wait_state) {
80019ac4:	8fa20014 	lw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:121
		return wait->wakeup_flags;
	}
	return 0;
}
80019ac8:	8fbf0044 	lw	ra,68(sp)
80019acc:	8fb30040 	lw	s3,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:120
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != wait_state) {
		return wait->wakeup_flags;
	}
	return 0;
80019ad0:	00508026 	xor	s0,v0,s0
80019ad4:	0010100a 	movz	v0,zero,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:121
}
80019ad8:	8fb2003c 	lw	s2,60(sp)
80019adc:	8fb10038 	lw	s1,56(sp)
80019ae0:	8fb00034 	lw	s0,52(sp)
80019ae4:	03e00008 	jr	ra
80019ae8:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80019aec:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019af0:	24120001 	li	s2,1
80019af4:	080066a5 	j	80019a94 <__down+0xf0>
80019af8:	00000000 	nop
__down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:114

	schedule();

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(&(sem->wait_queue), wait);
80019afc:	0c006958 	jal	8001a560 <wait_queue_del>
80019b00:	27a50010 	addiu	a1,sp,16
80019b04:	080066ad 	j	80019ab4 <__down+0x110>
80019b08:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:97

static uint32_t
    __attribute__ ((noinline)) __down(semaphore_t * sem, uint32_t wait_state,
				      timer_t * timer)
{
	assert(sem->valid);
80019b0c:	3c048002 	lui	a0,0x8002
80019b10:	3c068002 	lui	a2,0x8002
80019b14:	3c078002 	lui	a3,0x8002
80019b18:	248437d0 	addiu	a0,a0,14288
80019b1c:	24050061 	li	a1,97
80019b20:	24c609b0 	addiu	a2,a2,2480
80019b24:	0c006afd 	jal	8001abf4 <__panic>
80019b28:	24e737d8 	addiu	a3,a3,14296

80019b2c <__up>:
__up():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:78
#endif //UCONFIG_BIONIC_LIBC

static void
    __attribute__ ((noinline)) __up(semaphore_t * sem, uint32_t wait_state)
{
	assert(sem->valid);
80019b2c:	8c820004 	lw	v0,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:77
}
#endif //UCONFIG_BIONIC_LIBC

static void
    __attribute__ ((noinline)) __up(semaphore_t * sem, uint32_t wait_state)
{
80019b30:	27bdffd8 	addiu	sp,sp,-40
80019b34:	afb2001c 	sw	s2,28(sp)
80019b38:	afb10018 	sw	s1,24(sp)
80019b3c:	afbf0024 	sw	ra,36(sp)
80019b40:	afb30020 	sw	s3,32(sp)
80019b44:	afb00014 	sw	s0,20(sp)
80019b48:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:78
	assert(sem->valid);
80019b4c:	10400025 	beqz	v0,80019be4 <__up+0xb8>
80019b50:	00a09021 	move	s2,a1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019b54:	40026000 	mfc0	v0,c0_status
80019b58:	30420001 	andi	v0,v0,0x1
80019b5c:	10400003 	beqz	v0,80019b6c <__up+0x40>
80019b60:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019b64:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019b68:	24100001 	li	s0,1
__up():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:83
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		wait_t *wait;
		if ((wait = wait_queue_first(&(sem->wait_queue))) == NULL) {
80019b6c:	2633000c 	addiu	s3,s1,12
80019b70:	0c00699a 	jal	8001a668 <wait_queue_first>
80019b74:	02602021 	move	a0,s3
80019b78:	50400017 	beqzl	v0,80019bd8 <__up+0xac>
80019b7c:	8e220000 	lw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:86
			sem->value++;
		} else {
			assert(wait->proc->wait_state == wait_state);
80019b80:	8c430000 	lw	v1,0(v0)
80019b84:	8c630084 	lw	v1,132(v1)
80019b88:	1472001e 	bne	v1,s2,80019c04 <__up+0xd8>
80019b8c:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:87
			wakeup_wait(&(sem->wait_queue), wait, wait_state, 1);
80019b90:	00402821 	move	a1,v0
80019b94:	02403021 	move	a2,s2
80019b98:	0c0069ad 	jal	8001a6b4 <wakeup_wait>
80019b9c:	24070001 	li	a3,1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019ba0:	16000007 	bnez	s0,80019bc0 <__up+0x94>
80019ba4:	8fbf0024 	lw	ra,36(sp)
__up():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:91
		}
	}
	local_intr_restore(intr_flag);
}
80019ba8:	8fb30020 	lw	s3,32(sp)
80019bac:	8fb2001c 	lw	s2,28(sp)
80019bb0:	8fb10018 	lw	s1,24(sp)
80019bb4:	8fb00014 	lw	s0,20(sp)
80019bb8:	03e00008 	jr	ra
80019bbc:	27bd0028 	addiu	sp,sp,40
80019bc0:	8fb30020 	lw	s3,32(sp)
80019bc4:	8fb2001c 	lw	s2,28(sp)
80019bc8:	8fb10018 	lw	s1,24(sp)
80019bcc:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019bd0:	08006cba 	j	8001b2e8 <intr_enable>
80019bd4:	27bd0028 	addiu	sp,sp,40
__up():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:84
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		wait_t *wait;
		if ((wait = wait_queue_first(&(sem->wait_queue))) == NULL) {
			sem->value++;
80019bd8:	24420001 	addiu	v0,v0,1
80019bdc:	080066e8 	j	80019ba0 <__up+0x74>
80019be0:	ae220000 	sw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:78
#endif //UCONFIG_BIONIC_LIBC

static void
    __attribute__ ((noinline)) __up(semaphore_t * sem, uint32_t wait_state)
{
	assert(sem->valid);
80019be4:	3c048002 	lui	a0,0x8002
80019be8:	3c068002 	lui	a2,0x8002
80019bec:	3c078002 	lui	a3,0x8002
80019bf0:	248437d0 	addiu	a0,a0,14288
80019bf4:	2405004e 	li	a1,78
80019bf8:	24c609b0 	addiu	a2,a2,2480
80019bfc:	0c006afd 	jal	8001abf4 <__panic>
80019c00:	24e737d8 	addiu	a3,a3,14296
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:86
	{
		wait_t *wait;
		if ((wait = wait_queue_first(&(sem->wait_queue))) == NULL) {
			sem->value++;
		} else {
			assert(wait->proc->wait_state == wait_state);
80019c04:	3c048002 	lui	a0,0x8002
80019c08:	3c068002 	lui	a2,0x8002
80019c0c:	3c078002 	lui	a3,0x8002
80019c10:	248437d0 	addiu	a0,a0,14288
80019c14:	24050056 	li	a1,86
80019c18:	24c609b0 	addiu	a2,a2,2480
80019c1c:	0c006afd 	jal	8001abf4 <__panic>
80019c20:	24e737e4 	addiu	a3,a3,14308

80019c24 <sem_init>:
sem_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:56
    ((sem_t)((uintptr_t)(sem) - PBASE))

void sem_init(semaphore_t * sem, int value)
{
	sem->value = value;
	sem->valid = 1;
80019c24:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:55
#define sem2semid(sem)                          \
    ((sem_t)((uintptr_t)(sem) - PBASE))

void sem_init(semaphore_t * sem, int value)
{
	sem->value = value;
80019c28:	ac850000 	sw	a1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:56
	sem->valid = 1;
80019c2c:	ac820004 	sw	v0,4(a0)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80019c30:	ac800008 	sw	zero,8(a0)
sem_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:61
#ifdef UCONFIG_BIONIC_LIBC
	sem->addr = 0;		//-1 : // Not for futex
#endif //UCONFIG_BIONIC_LIBC
	set_sem_count(sem, 0);
	wait_queue_init(&(sem->wait_queue));
80019c34:	0800693d 	j	8001a4f4 <wait_queue_init>
80019c38:	2484000c 	addiu	a0,a0,12

80019c3c <up>:
up():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:125
	return 0;
}

void up(semaphore_t * sem)
{
	__up(sem, WT_KSEM);
80019c3c:	080066cb 	j	80019b2c <__up>
80019c40:	24050100 	li	a1,256

80019c44 <down>:
down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:129
}

void down(semaphore_t * sem)
{
80019c44:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:130
	uint32_t flags = __down(sem, WT_KSEM, NULL);
80019c48:	24050100 	li	a1,256
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:129
{
	__up(sem, WT_KSEM);
}

void down(semaphore_t * sem)
{
80019c4c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:130
	uint32_t flags = __down(sem, WT_KSEM, NULL);
80019c50:	0c006669 	jal	800199a4 <__down>
80019c54:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:131
	assert(flags == 0);
80019c58:	14400003 	bnez	v0,80019c68 <down+0x24>
80019c5c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:132
}
80019c60:	03e00008 	jr	ra
80019c64:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:131
}

void down(semaphore_t * sem)
{
	uint32_t flags = __down(sem, WT_KSEM, NULL);
	assert(flags == 0);
80019c68:	3c048002 	lui	a0,0x8002
80019c6c:	3c068002 	lui	a2,0x8002
80019c70:	3c078002 	lui	a3,0x8002
80019c74:	248437d0 	addiu	a0,a0,14288
80019c78:	24050083 	li	a1,131
80019c7c:	24c609b0 	addiu	a2,a2,2480
80019c80:	0c006afd 	jal	8001abf4 <__panic>
80019c84:	24e7380c 	addiu	a3,a3,14348

80019c88 <try_down>:
try_down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:135
}

bool try_down(semaphore_t * sem)
{
80019c88:	27bdffe0 	addiu	sp,sp,-32
80019c8c:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019c90:	40026000 	mfc0	v0,c0_status
80019c94:	30420001 	andi	v0,v0,0x1
80019c98:	10400005 	beqz	v0,80019cb0 <try_down+0x28>
80019c9c:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019ca0:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019ca4:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80019ca8:	8fa40010 	lw	a0,16(sp)
80019cac:	24050001 	li	a1,1
try_down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:138
	bool intr_flag, ret = 0;
	local_intr_save(intr_flag);
	if (sem->value > 0) {
80019cb0:	8c830000 	lw	v1,0(a0)
80019cb4:	18600004 	blez	v1,80019cc8 <try_down+0x40>
80019cb8:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:139
		sem->value--, ret = 1;
80019cbc:	2463ffff 	addiu	v1,v1,-1
80019cc0:	ac830000 	sw	v1,0(a0)
80019cc4:	24020001 	li	v0,1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019cc8:	10a00005 	beqz	a1,80019ce0 <try_down+0x58>
80019ccc:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019cd0:	0c006cba 	jal	8001b2e8 <intr_enable>
80019cd4:	afa20010 	sw	v0,16(sp)
80019cd8:	8fa20010 	lw	v0,16(sp)
try_down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:143
	}
	local_intr_restore(intr_flag);
	return ret;
}
80019cdc:	8fbf001c 	lw	ra,28(sp)
80019ce0:	03e00008 	jr	ra
80019ce4:	27bd0020 	addiu	sp,sp,32

80019ce8 <sem_queue_create>:
sem_queue_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:166
	assert(flags == WT_INTERRUPTED);
	return ipc_check_timeout(timeout, saved_ticks);
}

sem_queue_t *sem_queue_create(void)
{
80019ce8:	27bdffe0 	addiu	sp,sp,-32
80019cec:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:168
	sem_queue_t *sem_queue;
	if ((sem_queue = kmalloc(sizeof(sem_queue_t))) != NULL) {
80019cf0:	0c005478 	jal	800151e0 <kmalloc>
80019cf4:	24040020 	li	a0,32
80019cf8:	10400009 	beqz	v0,80019d20 <sem_queue_create+0x38>
80019cfc:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:169
		sem_init(&(sem_queue->sem), 1);
80019d00:	24050001 	li	a1,1
80019d04:	0c006709 	jal	80019c24 <sem_init>
80019d08:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:171
		set_sem_queue_count(sem_queue, 0);
		list_init(&(sem_queue->semu_list));
80019d0c:	8fa20010 	lw	v0,16(sp)
80019d10:	24430018 	addiu	v1,v0,24
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
80019d14:	ac400014 	sw	zero,20(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80019d18:	ac43001c 	sw	v1,28(v0)
80019d1c:	ac430018 	sw	v1,24(v0)
sem_queue_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:174
	}
	return sem_queue;
}
80019d20:	8fbf001c 	lw	ra,28(sp)
80019d24:	03e00008 	jr	ra
80019d28:	27bd0020 	addiu	sp,sp,32

80019d2c <sem_queue_destroy>:
sem_queue_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:178

void sem_queue_destroy(sem_queue_t * sem_queue)
{
	kfree(sem_queue);
80019d2c:	080054a3 	j	8001528c <kfree>
80019d30:	00000000 	nop

80019d34 <semu_create>:
semu_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:202
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

sem_undo_t *semu_create(semaphore_t * sem, int value)
{
80019d34:	27bdffd8 	addiu	sp,sp,-40
80019d38:	afb0001c 	sw	s0,28(sp)
80019d3c:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:204
	sem_undo_t *semu;
	if ((semu = kmalloc(sizeof(sem_undo_t))) != NULL) {
80019d40:	2404000c 	li	a0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:202
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

sem_undo_t *semu_create(semaphore_t * sem, int value)
{
80019d44:	afb10020 	sw	s1,32(sp)
80019d48:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:204
	sem_undo_t *semu;
	if ((semu = kmalloc(sizeof(sem_undo_t))) != NULL) {
80019d4c:	0c005478 	jal	800151e0 <kmalloc>
80019d50:	afa50010 	sw	a1,16(sp)
80019d54:	1040000c 	beqz	v0,80019d88 <semu_create+0x54>
80019d58:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:205
		if (sem == NULL && (sem = kmalloc(sizeof(semaphore_t))) != NULL) {
80019d5c:	12000019 	beqz	s0,80019dc4 <semu_create+0x90>
80019d60:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019d64:	40026000 	mfc0	v0,c0_status
80019d68:	30420001 	andi	v0,v0,0x1
80019d6c:	1440000c 	bnez	v0,80019da0 <semu_create+0x6c>
80019d70:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80019d74:	8e020008 	lw	v0,8(s0)
80019d78:	24420001 	addiu	v0,v0,1
80019d7c:	ae020008 	sw	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80019d80:	8e020008 	lw	v0,8(s0)
semu_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:210
			sem_init(sem, value);
		}
		if (sem != NULL) {
			sem_count_inc(sem);
			semu->sem = sem;
80019d84:	ae300000 	sw	s0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:216
			return semu;
		}
		kfree(semu);
	}
	return NULL;
}
80019d88:	8fbf0024 	lw	ra,36(sp)
80019d8c:	02201021 	move	v0,s1
80019d90:	8fb0001c 	lw	s0,28(sp)
80019d94:	8fb10020 	lw	s1,32(sp)
80019d98:	03e00008 	jr	ra
80019d9c:	27bd0028 	addiu	sp,sp,40
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019da0:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019da4:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80019da8:	8e020008 	lw	v0,8(s0)
80019dac:	24420001 	addiu	v0,v0,1
80019db0:	ae020008 	sw	v0,8(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80019db4:	0c006cba 	jal	8001b2e8 <intr_enable>
80019db8:	00000000 	nop
80019dbc:	08006760 	j	80019d80 <semu_create+0x4c>
80019dc0:	00000000 	nop
semu_create():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:205

sem_undo_t *semu_create(semaphore_t * sem, int value)
{
	sem_undo_t *semu;
	if ((semu = kmalloc(sizeof(sem_undo_t))) != NULL) {
		if (sem == NULL && (sem = kmalloc(sizeof(semaphore_t))) != NULL) {
80019dc4:	0c005478 	jal	800151e0 <kmalloc>
80019dc8:	24040014 	li	a0,20
80019dcc:	00408021 	move	s0,v0
80019dd0:	10400005 	beqz	v0,80019de8 <semu_create+0xb4>
80019dd4:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:206
			sem_init(sem, value);
80019dd8:	0c006709 	jal	80019c24 <sem_init>
80019ddc:	00402021 	move	a0,v0
80019de0:	08006759 	j	80019d64 <semu_create+0x30>
80019de4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:213
		if (sem != NULL) {
			sem_count_inc(sem);
			semu->sem = sem;
			return semu;
		}
		kfree(semu);
80019de8:	0c0054a3 	jal	8001528c <kfree>
80019dec:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:215
	}
	return NULL;
80019df0:	08006762 	j	80019d88 <semu_create+0x54>
80019df4:	00008821 	move	s1,zero

80019df8 <semu_destroy>:
semu_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:219
}

void semu_destroy(sem_undo_t * semu)
{
80019df8:	27bdffe0 	addiu	sp,sp,-32
80019dfc:	afb10018 	sw	s1,24(sp)
80019e00:	afb00014 	sw	s0,20(sp)
80019e04:	afbf001c 	sw	ra,28(sp)
80019e08:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:220
	if (sem_count_dec(semu->sem) == 0) {
80019e0c:	8c910000 	lw	s1,0(a0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019e10:	40026000 	mfc0	v0,c0_status
80019e14:	30420001 	andi	v0,v0,0x1
80019e18:	1440000f 	bnez	v0,80019e58 <semu_destroy+0x60>
80019e1c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80019e20:	8e220008 	lw	v0,8(s1)
80019e24:	2442ffff 	addiu	v0,v0,-1
80019e28:	ae220008 	sw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80019e2c:	8e220008 	lw	v0,8(s1)
semu_destroy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:220
80019e30:	14400004 	bnez	v0,80019e44 <semu_destroy+0x4c>
80019e34:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:221
		kfree(semu->sem);
80019e38:	0c0054a3 	jal	8001528c <kfree>
80019e3c:	8e040000 	lw	a0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:223
	}
	kfree(semu);
80019e40:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:224
}
80019e44:	8fbf001c 	lw	ra,28(sp)
80019e48:	8fb10018 	lw	s1,24(sp)
80019e4c:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:223
void semu_destroy(sem_undo_t * semu)
{
	if (sem_count_dec(semu->sem) == 0) {
		kfree(semu->sem);
	}
	kfree(semu);
80019e50:	080054a3 	j	8001528c <kfree>
80019e54:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019e58:	0c006cbe 	jal	8001b2f8 <intr_disable>
80019e5c:	00000000 	nop
atomic_add_return():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80019e60:	8e220008 	lw	v0,8(s1)
80019e64:	2442ffff 	addiu	v0,v0,-1
80019e68:	ae220008 	sw	v0,8(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80019e6c:	0c006cba 	jal	8001b2e8 <intr_enable>
80019e70:	00000000 	nop
80019e74:	0800678b 	j	80019e2c <semu_destroy+0x34>
80019e78:	00000000 	nop

80019e7c <semu_list_search>:
semu_list_search():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:254
	}
}

static sem_undo_t *semu_list_search(list_entry_t * list, sem_t sem_id)
{
	if (VALID_SEMID(sem_id)) {
80019e7c:	3c038000 	lui	v1,0x8000
80019e80:	24631000 	addiu	v1,v1,4096
80019e84:	00a31821 	addu	v1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:253
		semu_destroy(le2semu(le, semu_link));
	}
}

static sem_undo_t *semu_list_search(list_entry_t * list, sem_t sem_id)
{
80019e88:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:254
	if (VALID_SEMID(sem_id)) {
80019e8c:	00a3282b 	sltu	a1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:253
		semu_destroy(le2semu(le, semu_link));
	}
}

static sem_undo_t *semu_list_search(list_entry_t * list, sem_t sem_id)
{
80019e90:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:254
	if (VALID_SEMID(sem_id)) {
80019e94:	10a00014 	beqz	a1,80019ee8 <semu_list_search+0x6c>
80019e98:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:257
		semaphore_t *sem = semid2sem(sem_id);
		list_entry_t *le = list;
		while ((le = list_next(le)) != list) {
80019e9c:	00802821 	move	a1,a0
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019ea0:	8ca50004 	lw	a1,4(a1)
semu_list_search():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:257
80019ea4:	10850013 	beq	a0,a1,80019ef4 <semu_list_search+0x78>
80019ea8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:259
			sem_undo_t *semu = le2semu(le, semu_link);
			if (semu->sem == sem) {
80019eac:	8ca2fffc 	lw	v0,-4(a1)
80019eb0:	5443fffc 	bnel	v0,v1,80019ea4 <semu_list_search+0x28>
80019eb4:	8ca50004 	lw	a1,4(a1)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80019eb8:	8ca70000 	lw	a3,0(a1)
80019ebc:	8ca60004 	lw	a2,4(a1)
semu_list_search():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:261
				list_del(le);
				if (sem->valid) {
80019ec0:	8c630004 	lw	v1,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:258
{
	if (VALID_SEMID(sem_id)) {
		semaphore_t *sem = semid2sem(sem_id);
		list_entry_t *le = list;
		while ((le = list_next(le)) != list) {
			sem_undo_t *semu = le2semu(le, semu_link);
80019ec4:	24a2fffc 	addiu	v0,a1,-4
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80019ec8:	ace60004 	sw	a2,4(a3)
semu_list_search():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:261
			if (semu->sem == sem) {
				list_del(le);
				if (sem->valid) {
80019ecc:	1060000c 	beqz	v1,80019f00 <semu_list_search+0x84>
80019ed0:	acc70000 	sw	a3,0(a2)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80019ed4:	8c830004 	lw	v1,4(a0)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80019ed8:	ac850004 	sw	a1,4(a0)
80019edc:	ac650000 	sw	a1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80019ee0:	aca30004 	sw	v1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80019ee4:	aca40000 	sw	a0,0(a1)
semu_list_search():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:272
				}
			}
		}
	}
	return NULL;
}
80019ee8:	8fbf0014 	lw	ra,20(sp)
80019eec:	03e00008 	jr	ra
80019ef0:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:271
					return NULL;
				}
			}
		}
	}
	return NULL;
80019ef4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:272
}
80019ef8:	03e00008 	jr	ra
80019efc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:265
				list_del(le);
				if (sem->valid) {
					list_add_after(list, le);
					return semu;
				} else {
					semu_destroy(semu);
80019f00:	0c00677e 	jal	80019df8 <semu_destroy>
80019f04:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:266
					return NULL;
80019f08:	080067ba 	j	80019ee8 <semu_list_search+0x6c>
80019f0c:	00001021 	move	v0,zero

80019f10 <dup_sem_queue>:
dup_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:227
	}
	kfree(semu);
}

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
80019f10:	27bdffd8 	addiu	sp,sp,-40
80019f14:	afb2001c 	sw	s2,28(sp)
80019f18:	afbf0024 	sw	ra,36(sp)
80019f1c:	afb30020 	sw	s3,32(sp)
80019f20:	afb10018 	sw	s1,24(sp)
80019f24:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:228
	assert(to != NULL && from != NULL);
80019f28:	10800027 	beqz	a0,80019fc8 <dup_sem_queue+0xb8>
80019f2c:	00809021 	move	s2,a0
80019f30:	10a00025 	beqz	a1,80019fc8 <dup_sem_queue+0xb8>
80019f34:	24b10018 	addiu	s1,a1,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:229
	list_entry_t *list = &(from->semu_list), *le = list;
80019f38:	02208021 	move	s0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:236
		sem_undo_t *semu = le2semu(le, semu_link);
		if (semu->sem->valid) {
			if ((semu = semu_create(semu->sem, 0)) == NULL) {
				return -E_NO_MEM;
			}
			list_add(&(to->semu_list), &(semu->semu_link));
80019f3c:	24930018 	addiu	s3,a0,24
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019f40:	8e100004 	lw	s0,4(s0)
dup_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:230

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
	assert(to != NULL && from != NULL);
	list_entry_t *list = &(from->semu_list), *le = list;
	while ((le = list_next(le)) != list) {
80019f44:	12300011 	beq	s1,s0,80019f8c <dup_sem_queue+0x7c>
80019f48:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:232
		sem_undo_t *semu = le2semu(le, semu_link);
		if (semu->sem->valid) {
80019f4c:	8e04fffc 	lw	a0,-4(s0)
80019f50:	8c820004 	lw	v0,4(a0)
80019f54:	5040fffb 	beqzl	v0,80019f44 <dup_sem_queue+0x34>
80019f58:	8e100004 	lw	s0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:233
			if ((semu = semu_create(semu->sem, 0)) == NULL) {
80019f5c:	0c00674d 	jal	80019d34 <semu_create>
80019f60:	00002821 	move	a1,zero
80019f64:	10400010 	beqz	v0,80019fa8 <dup_sem_queue+0x98>
80019f68:	24440004 	addiu	a0,v0,4
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80019f6c:	8e43001c 	lw	v1,28(s2)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80019f70:	ae44001c 	sw	a0,28(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80019f74:	ac430008 	sw	v1,8(v0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019f78:	8e100004 	lw	s0,4(s0)
list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80019f7c:	ac640000 	sw	a0,0(v1)
dup_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:230

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
	assert(to != NULL && from != NULL);
	list_entry_t *list = &(from->semu_list), *le = list;
	while ((le = list_next(le)) != list) {
80019f80:	1630fff2 	bne	s1,s0,80019f4c <dup_sem_queue+0x3c>
80019f84:	ac530004 	sw	s3,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:240
			}
			list_add(&(to->semu_list), &(semu->semu_link));
		}
	}
	return 0;
}
80019f88:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:239
				return -E_NO_MEM;
			}
			list_add(&(to->semu_list), &(semu->semu_link));
		}
	}
	return 0;
80019f8c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:240
}
80019f90:	8fb30020 	lw	s3,32(sp)
80019f94:	8fb2001c 	lw	s2,28(sp)
80019f98:	8fb10018 	lw	s1,24(sp)
80019f9c:	8fb00014 	lw	s0,20(sp)
80019fa0:	03e00008 	jr	ra
80019fa4:	27bd0028 	addiu	sp,sp,40
80019fa8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:234
	list_entry_t *list = &(from->semu_list), *le = list;
	while ((le = list_next(le)) != list) {
		sem_undo_t *semu = le2semu(le, semu_link);
		if (semu->sem->valid) {
			if ((semu = semu_create(semu->sem, 0)) == NULL) {
				return -E_NO_MEM;
80019fac:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:240
			}
			list_add(&(to->semu_list), &(semu->semu_link));
		}
	}
	return 0;
}
80019fb0:	8fb30020 	lw	s3,32(sp)
80019fb4:	8fb2001c 	lw	s2,28(sp)
80019fb8:	8fb10018 	lw	s1,24(sp)
80019fbc:	8fb00014 	lw	s0,20(sp)
80019fc0:	03e00008 	jr	ra
80019fc4:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:228
	kfree(semu);
}

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
	assert(to != NULL && from != NULL);
80019fc8:	3c048002 	lui	a0,0x8002
80019fcc:	3c068002 	lui	a2,0x8002
80019fd0:	3c078002 	lui	a3,0x8002
80019fd4:	248437d0 	addiu	a0,a0,14288
80019fd8:	240500e4 	li	a1,228
80019fdc:	24c609b0 	addiu	a2,a2,2480
80019fe0:	0c006afd 	jal	8001abf4 <__panic>
80019fe4:	24e72420 	addiu	a3,a3,9248

80019fe8 <exit_sem_queue>:
exit_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:243
	}
	return 0;
}

void exit_sem_queue(sem_queue_t * sem_queue)
{
80019fe8:	27bdffe0 	addiu	sp,sp,-32
80019fec:	afb00014 	sw	s0,20(sp)
80019ff0:	afbf001c 	sw	ra,28(sp)
80019ff4:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:244
	assert(sem_queue != NULL && sem_queue_count(sem_queue) == 0);
80019ff8:	10800015 	beqz	a0,8001a050 <exit_sem_queue+0x68>
80019ffc:	00808021 	move	s0,a0
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001a000:	8c820014 	lw	v0,20(a0)
exit_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:244
8001a004:	14400012 	bnez	v0,8001a050 <exit_sem_queue+0x68>
8001a008:	26110018 	addiu	s1,s0,24
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a00c:	8c84001c 	lw	a0,28(a0)
exit_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:246
	list_entry_t *list = &(sem_queue->semu_list), *le = list;
	while ((le = list_next(list)) != list) {
8001a010:	1224000b 	beq	s1,a0,8001a040 <exit_sem_queue+0x58>
8001a014:	8fbf001c 	lw	ra,28(sp)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001a018:	8c830000 	lw	v1,0(a0)
8001a01c:	8c820004 	lw	v0,4(a0)
exit_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:248
		list_del(le);
		semu_destroy(le2semu(le, semu_link));
8001a020:	2484fffc 	addiu	a0,a0,-4
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001a024:	ac620004 	sw	v0,4(v1)
exit_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:248
8001a028:	0c00677e 	jal	80019df8 <semu_destroy>
8001a02c:	ac430000 	sw	v1,0(v0)
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a030:	8e04001c 	lw	a0,28(s0)
exit_sem_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:246

void exit_sem_queue(sem_queue_t * sem_queue)
{
	assert(sem_queue != NULL && sem_queue_count(sem_queue) == 0);
	list_entry_t *list = &(sem_queue->semu_list), *le = list;
	while ((le = list_next(list)) != list) {
8001a034:	5624fff9 	bnel	s1,a0,8001a01c <exit_sem_queue+0x34>
8001a038:	8c830000 	lw	v1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:250
		list_del(le);
		semu_destroy(le2semu(le, semu_link));
	}
}
8001a03c:	8fbf001c 	lw	ra,28(sp)
8001a040:	8fb10018 	lw	s1,24(sp)
8001a044:	8fb00014 	lw	s0,20(sp)
8001a048:	03e00008 	jr	ra
8001a04c:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:244
	return 0;
}

void exit_sem_queue(sem_queue_t * sem_queue)
{
	assert(sem_queue != NULL && sem_queue_count(sem_queue) == 0);
8001a050:	3c048002 	lui	a0,0x8002
8001a054:	3c068002 	lui	a2,0x8002
8001a058:	3c078002 	lui	a3,0x8002
8001a05c:	248437d0 	addiu	a0,a0,14288
8001a060:	240500f4 	li	a1,244
8001a064:	24c609b0 	addiu	a2,a2,2480
8001a068:	0c006afd 	jal	8001abf4 <__panic>
8001a06c:	24e73818 	addiu	a3,a3,14360

8001a070 <ipc_sem_init>:
ipc_sem_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:313
	return sem2semid(semu->sem);
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_init(int value)
{
8001a070:	27bdffe0 	addiu	sp,sp,-32
8001a074:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:314
	assert(current->sem_queue != NULL);
8001a078:	3c108015 	lui	s0,0x8015
8001a07c:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:313
	return sem2semid(semu->sem);
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_init(int value)
{
8001a080:	afbf001c 	sw	ra,28(sp)
8001a084:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:314
	assert(current->sem_queue != NULL);
8001a088:	8c4200ac 	lw	v0,172(v0)
8001a08c:	1040001c 	beqz	v0,8001a100 <ipc_sem_init+0x90>
8001a090:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:317

	sem_undo_t *semu;
	if ((semu = semu_create(NULL, value)) == NULL) {
8001a094:	0c00674d 	jal	80019d34 <semu_create>
8001a098:	00002021 	move	a0,zero
8001a09c:	00408821 	move	s1,v0
8001a0a0:	12200012 	beqz	s1,8001a0ec <ipc_sem_init+0x7c>
8001a0a4:	2402fff4 	li	v0,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:321
		return -E_NO_MEM;
	}

	sem_queue_t *sem_queue = current->sem_queue;
8001a0a8:	8e0277a4 	lw	v0,30628(s0)
8001a0ac:	8c5000ac 	lw	s0,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:322
	down(&(sem_queue->sem));
8001a0b0:	0c006711 	jal	80019c44 <down>
8001a0b4:	02002021 	move	a0,s0
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001a0b8:	8e02001c 	lw	v0,28(s0)
ipc_sem_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:323
	list_add_after(&(sem_queue->semu_list), &(semu->semu_link));
8001a0bc:	26230004 	addiu	v1,s1,4
8001a0c0:	26040018 	addiu	a0,s0,24
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001a0c4:	ac430000 	sw	v1,0(v0)
8001a0c8:	ae03001c 	sw	v1,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8001a0cc:	ae240004 	sw	a0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8001a0d0:	ae220008 	sw	v0,8(s1)
ipc_sem_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:324
	up(&(sem_queue->sem));
8001a0d4:	0c00670f 	jal	80019c3c <up>
8001a0d8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:325
	return sem2semid(semu->sem);
8001a0dc:	8e230000 	lw	v1,0(s1)
8001a0e0:	3c027fff 	lui	v0,0x7fff
8001a0e4:	3442f000 	ori	v0,v0,0xf000
8001a0e8:	00621021 	addu	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:326
}
8001a0ec:	8fbf001c 	lw	ra,28(sp)
8001a0f0:	8fb10018 	lw	s1,24(sp)
8001a0f4:	8fb00014 	lw	s0,20(sp)
8001a0f8:	03e00008 	jr	ra
8001a0fc:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:314
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_init(int value)
{
	assert(current->sem_queue != NULL);
8001a100:	3c048002 	lui	a0,0x8002
8001a104:	3c068002 	lui	a2,0x8002
8001a108:	3c078002 	lui	a3,0x8002
8001a10c:	248437d0 	addiu	a0,a0,14288
8001a110:	2405013a 	li	a1,314
8001a114:	24c609b0 	addiu	a2,a2,2480
8001a118:	0c006afd 	jal	8001abf4 <__panic>
8001a11c:	24e73850 	addiu	a3,a3,14416

8001a120 <ipc_sem_post>:
ipc_sem_post():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:330
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a120:	3c028015 	lui	v0,0x8015
8001a124:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:329
	up(&(sem_queue->sem));
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
8001a128:	27bdffd8 	addiu	sp,sp,-40
8001a12c:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:330
	assert(current->sem_queue != NULL);
8001a130:	8c5000ac 	lw	s0,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:329
	up(&(sem_queue->sem));
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
8001a134:	afbf0024 	sw	ra,36(sp)
8001a138:	afb10020 	sw	s1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:330
	assert(current->sem_queue != NULL);
8001a13c:	12000016 	beqz	s0,8001a198 <ipc_sem_post+0x78>
8001a140:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:334

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
8001a144:	02002021 	move	a0,s0
8001a148:	0c006711 	jal	80019c44 <down>
8001a14c:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:335
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a150:	8fa50010 	lw	a1,16(sp)
8001a154:	0c00679f 	jal	80019e7c <semu_list_search>
8001a158:	26040018 	addiu	a0,s0,24
8001a15c:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:336
	up(&(sem_queue->sem));
8001a160:	0c00670f 	jal	80019c3c <up>
8001a164:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:337
	if (semu != NULL) {
8001a168:	12200006 	beqz	s1,8001a184 <ipc_sem_post+0x64>
8001a16c:	2402ffea 	li	v0,-22
usem_up():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:147
	return ret;
}

static int usem_up(semaphore_t * sem)
{
	__up(sem, WT_USEM);
8001a170:	8e240000 	lw	a0,0(s1)
8001a174:	3c058000 	lui	a1,0x8000
8001a178:	0c0066cb 	jal	80019b2c <__up>
8001a17c:	24a50101 	addiu	a1,a1,257
ipc_sem_post():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:338
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
	up(&(sem_queue->sem));
	if (semu != NULL) {
		return usem_up(semu->sem);
8001a180:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:341
	}
	return -E_INVAL;
}
8001a184:	8fbf0024 	lw	ra,36(sp)
8001a188:	8fb10020 	lw	s1,32(sp)
8001a18c:	8fb0001c 	lw	s0,28(sp)
8001a190:	03e00008 	jr	ra
8001a194:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:330
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a198:	3c048002 	lui	a0,0x8002
8001a19c:	3c068002 	lui	a2,0x8002
8001a1a0:	3c078002 	lui	a3,0x8002
8001a1a4:	248437d0 	addiu	a0,a0,14288
8001a1a8:	2405014a 	li	a1,330
8001a1ac:	24c609b0 	addiu	a2,a2,2480
8001a1b0:	0c006afd 	jal	8001abf4 <__panic>
8001a1b4:	24e73850 	addiu	a3,a3,14416

8001a1b8 <ipc_sem_wait>:
ipc_sem_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:369
	return -E_INVAL;
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
8001a1b8:	27bdffb0 	addiu	sp,sp,-80
8001a1bc:	afb30044 	sw	s3,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:370
	assert(current->sem_queue != NULL);
8001a1c0:	3c138015 	lui	s3,0x8015
8001a1c4:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:369
	return -E_INVAL;
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
8001a1c8:	afb1003c 	sw	s1,60(sp)
8001a1cc:	afb40048 	sw	s4,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:370
	assert(current->sem_queue != NULL);
8001a1d0:	8c5100ac 	lw	s1,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:369
	return -E_INVAL;
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
8001a1d4:	afb00038 	sw	s0,56(sp)
8001a1d8:	afbf004c 	sw	ra,76(sp)
8001a1dc:	afb20040 	sw	s2,64(sp)
8001a1e0:	0080a021 	move	s4,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:370
	assert(current->sem_queue != NULL);
8001a1e4:	12200031 	beqz	s1,8001a2ac <ipc_sem_wait+0xf4>
8001a1e8:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:374

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
8001a1ec:	0c006711 	jal	80019c44 <down>
8001a1f0:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:375
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a1f4:	26240018 	addiu	a0,s1,24
8001a1f8:	0c00679f 	jal	80019e7c <semu_list_search>
8001a1fc:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:376
	up(&(sem_queue->sem));
8001a200:	02202021 	move	a0,s1
8001a204:	0c00670f 	jal	80019c3c <up>
8001a208:	afa20030 	sw	v0,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:377
	if (semu != NULL) {
8001a20c:	8fa20030 	lw	v0,48(sp)
8001a210:	5040001e 	beqzl	v0,8001a28c <ipc_sem_wait+0xd4>
8001a214:	2402ffea 	li	v0,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:378
		return usem_down(semu->sem, timeout);
8001a218:	8c440000 	lw	a0,0(v0)
ipc_timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
8001a21c:	1200000b 	beqz	s0,8001a24c <ipc_sem_wait+0x94>
8001a220:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:30
		*saved_ticks = ticks;
		return timer_init(timer, pls_read(current), timeout);
8001a224:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
8001a228:	3c038015 	lui	v1,0x8015
8001a22c:	8c7277ac 	lw	s2,30636(v1)
timer_init():

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
8001a230:	afa20014 	sw	v0,20(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001a234:	27a20024 	addiu	v0,sp,36
timer_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
8001a238:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
8001a23c:	afa00018 	sw	zero,24(sp)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8001a240:	afa20028 	sw	v0,40(sp)
8001a244:	afa20024 	sw	v0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:30
		return timer_init(timer, pls_read(current), timeout);
8001a248:	27a60010 	addiu	a2,sp,16
usem_down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:158
	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	uint32_t flags;
	if ((flags = __down(sem, WT_USEM, timer)) == 0) {
8001a24c:	3c118000 	lui	s1,0x8000
8001a250:	0c006669 	jal	800199a4 <__down>
8001a254:	26250101 	addiu	a1,s1,257
8001a258:	00401821 	move	v1,v0
8001a25c:	1060000b 	beqz	v1,8001a28c <ipc_sem_wait+0xd4>
8001a260:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:161
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
8001a264:	14710019 	bne	v1,s1,8001a2cc <ipc_sem_wait+0x114>
8001a268:	3c048002 	lui	a0,0x8002
ipc_check_timeout():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
8001a26c:	12000007 	beqz	s0,8001a28c <ipc_sem_wait+0xd4>
8001a270:	2402ffff 	li	v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
8001a274:	3c038015 	lui	v1,0x8015
8001a278:	8c6377ac 	lw	v1,30636(v1)
8001a27c:	00729023 	subu	s2,v1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
8001a280:	0250802b 	sltu	s0,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
8001a284:	2403fff0 	li	v1,-16
8001a288:	0070100a 	movz	v0,v1,s0
ipc_sem_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:381
	up(&(sem_queue->sem));
	if (semu != NULL) {
		return usem_down(semu->sem, timeout);
	}
	return -E_INVAL;
}
8001a28c:	8fbf004c 	lw	ra,76(sp)
8001a290:	8fb40048 	lw	s4,72(sp)
8001a294:	8fb30044 	lw	s3,68(sp)
8001a298:	8fb20040 	lw	s2,64(sp)
8001a29c:	8fb1003c 	lw	s1,60(sp)
8001a2a0:	8fb00038 	lw	s0,56(sp)
8001a2a4:	03e00008 	jr	ra
8001a2a8:	27bd0050 	addiu	sp,sp,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:370
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
	assert(current->sem_queue != NULL);
8001a2ac:	3c048002 	lui	a0,0x8002
8001a2b0:	3c068002 	lui	a2,0x8002
8001a2b4:	3c078002 	lui	a3,0x8002
8001a2b8:	248437d0 	addiu	a0,a0,14288
8001a2bc:	24050172 	li	a1,370
8001a2c0:	24c609b0 	addiu	a2,a2,2480
8001a2c4:	0c006afd 	jal	8001abf4 <__panic>
8001a2c8:	24e73850 	addiu	a3,a3,14416
usem_down():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:161

	uint32_t flags;
	if ((flags = __down(sem, WT_USEM, timer)) == 0) {
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
8001a2cc:	3c068002 	lui	a2,0x8002
8001a2d0:	3c078002 	lui	a3,0x8002
8001a2d4:	248437d0 	addiu	a0,a0,14288
8001a2d8:	240500a1 	li	a1,161
8001a2dc:	24c609b0 	addiu	a2,a2,2480
8001a2e0:	0c006afd 	jal	8001abf4 <__panic>
8001a2e4:	24e7362c 	addiu	a3,a3,13868

8001a2e8 <ipc_sem_free>:
ipc_sem_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:385
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a2e8:	3c028015 	lui	v0,0x8015
8001a2ec:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:384
	}
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
8001a2f0:	27bdffd8 	addiu	sp,sp,-40
8001a2f4:	afb0001c 	sw	s0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:385
	assert(current->sem_queue != NULL);
8001a2f8:	8c5000ac 	lw	s0,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:384
	}
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
8001a2fc:	afbf0024 	sw	ra,36(sp)
8001a300:	afb10020 	sw	s1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:385
	assert(current->sem_queue != NULL);
8001a304:	1200002b 	beqz	s0,8001a3b4 <ipc_sem_free+0xcc>
8001a308:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:389

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
8001a30c:	02002021 	move	a0,s0
8001a310:	0c006711 	jal	80019c44 <down>
8001a314:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:390
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a318:	8fa50010 	lw	a1,16(sp)
8001a31c:	0c00679f 	jal	80019e7c <semu_list_search>
8001a320:	26040018 	addiu	a0,s0,24
8001a324:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:391
	up(&(sem_queue->sem));
8001a328:	0c00670f 	jal	80019c3c <up>
8001a32c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:394

	int ret = -E_INVAL;
	if (semu != NULL) {
8001a330:	1220000b 	beqz	s1,8001a360 <ipc_sem_free+0x78>
8001a334:	2402ffea 	li	v0,-22
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001a338:	40026000 	mfc0	v0,c0_status
8001a33c:	30420001 	andi	v0,v0,0x1
8001a340:	1440000c 	bnez	v0,8001a374 <ipc_sem_free+0x8c>
8001a344:	3c058000 	lui	a1,0x8000
ipc_sem_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:398
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
8001a348:	8e240000 	lw	a0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:400
			sem->valid = 0, ret = 0;
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
8001a34c:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:399
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
			sem->valid = 0, ret = 0;
8001a350:	ac800004 	sw	zero,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:400
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
8001a354:	0c0069c6 	jal	8001a718 <wakeup_queue>
8001a358:	2484000c 	addiu	a0,a0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:399
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
			sem->valid = 0, ret = 0;
8001a35c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:405
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
		}
		local_intr_restore(intr_flag);
	}
	return ret;
}
8001a360:	8fbf0024 	lw	ra,36(sp)
8001a364:	8fb10020 	lw	s1,32(sp)
8001a368:	8fb0001c 	lw	s0,28(sp)
8001a36c:	03e00008 	jr	ra
8001a370:	27bd0028 	addiu	sp,sp,40
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001a374:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001a378:	00000000 	nop
ipc_sem_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:398
	int ret = -E_INVAL;
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
8001a37c:	8e220000 	lw	v0,0(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:400
			sem->valid = 0, ret = 0;
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
8001a380:	3c058000 	lui	a1,0x8000
8001a384:	24060001 	li	a2,1
8001a388:	2444000c 	addiu	a0,v0,12
8001a38c:	0c0069c6 	jal	8001a718 <wakeup_queue>
8001a390:	ac400004 	sw	zero,4(v0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001a394:	0c006cba 	jal	8001b2e8 <intr_enable>
8001a398:	00000000 	nop
ipc_sem_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:405
		}
		local_intr_restore(intr_flag);
	}
	return ret;
}
8001a39c:	8fbf0024 	lw	ra,36(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:399
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
			sem->valid = 0, ret = 0;
8001a3a0:	00001021 	move	v0,zero
ipc_sem_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:405
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
		}
		local_intr_restore(intr_flag);
	}
	return ret;
}
8001a3a4:	8fb10020 	lw	s1,32(sp)
8001a3a8:	8fb0001c 	lw	s0,28(sp)
8001a3ac:	03e00008 	jr	ra
8001a3b0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:385
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a3b4:	3c048002 	lui	a0,0x8002
8001a3b8:	3c068002 	lui	a2,0x8002
8001a3bc:	3c078002 	lui	a3,0x8002
8001a3c0:	248437d0 	addiu	a0,a0,14288
8001a3c4:	24050181 	li	a1,385
8001a3c8:	24c609b0 	addiu	a2,a2,2480
8001a3cc:	0c006afd 	jal	8001abf4 <__panic>
8001a3d0:	24e73850 	addiu	a3,a3,14416

8001a3d4 <ipc_sem_get_value>:
ipc_sem_get_value():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:408
	}
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
8001a3d4:	27bdffc8 	addiu	sp,sp,-56
8001a3d8:	afb20028 	sw	s2,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:409
	assert(current->sem_queue != NULL);
8001a3dc:	3c128015 	lui	s2,0x8015
8001a3e0:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:408
	}
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
8001a3e4:	afb40030 	sw	s4,48(sp)
8001a3e8:	afb3002c 	sw	s3,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:409
	assert(current->sem_queue != NULL);
8001a3ec:	8c4300ac 	lw	v1,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:408
	}
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
8001a3f0:	afbf0034 	sw	ra,52(sp)
8001a3f4:	afb10024 	sw	s1,36(sp)
8001a3f8:	afb00020 	sw	s0,32(sp)
8001a3fc:	0080a021 	move	s4,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:409
	assert(current->sem_queue != NULL);
8001a400:	1060002b 	beqz	v1,8001a4b0 <ipc_sem_get_value+0xdc>
8001a404:	00a09821 	move	s3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:410
	if (value_store == NULL) {
8001a408:	10a00020 	beqz	a1,8001a48c <ipc_sem_get_value+0xb8>
8001a40c:	2411ffea 	li	s1,-22
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:414
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
8001a410:	8c500020 	lw	s0,32(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:415
	if (!user_mem_check(mm, (uintptr_t) value_store, sizeof(int), 1)) {
8001a414:	24060004 	li	a2,4
8001a418:	24070001 	li	a3,1
8001a41c:	0c005069 	jal	800141a4 <user_mem_check>
8001a420:	02002021 	move	a0,s0
8001a424:	10400019 	beqz	v0,8001a48c <ipc_sem_get_value+0xb8>
8001a428:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:420
		return -E_INVAL;
	}

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
8001a42c:	8c5200ac 	lw	s2,172(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:421
	down(&(sem_queue->sem));
8001a430:	0c006711 	jal	80019c44 <down>
8001a434:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:422
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a438:	26440018 	addiu	a0,s2,24
8001a43c:	0c00679f 	jal	80019e7c <semu_list_search>
8001a440:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:423
	up(&(sem_queue->sem));
8001a444:	02402021 	move	a0,s2
8001a448:	0c00670f 	jal	80019c3c <up>
8001a44c:	afa20018 	sw	v0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:426

	int ret = -E_INVAL;
	if (semu != NULL) {
8001a450:	8fa20018 	lw	v0,24(sp)
8001a454:	1040000d 	beqz	v0,8001a48c <ipc_sem_get_value+0xb8>
8001a458:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:427
		int value = semu->sem->value;
8001a45c:	8c420000 	lw	v0,0(v0)
8001a460:	8c420000 	lw	v0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:428
		lock_mm(mm);
8001a464:	0c004c18 	jal	80013060 <lock_mm>
8001a468:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:430
		{
			if (copy_to_user(mm, value_store, &value, sizeof(int))) {
8001a46c:	02002021 	move	a0,s0
8001a470:	02602821 	move	a1,s3
8001a474:	27a60010 	addiu	a2,sp,16
8001a478:	0c007834 	jal	8001e0d0 <copy_to_user>
8001a47c:	24070004 	li	a3,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:434
				ret = 0;
			}
		}
		unlock_mm(mm);
8001a480:	02002021 	move	a0,s0
8001a484:	0c004c29 	jal	800130a4 <unlock_mm>
8001a488:	0002880b 	movn	s1,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:437
	}
	return ret;
}
8001a48c:	8fbf0034 	lw	ra,52(sp)
8001a490:	02201021 	move	v0,s1
8001a494:	8fb40030 	lw	s4,48(sp)
8001a498:	8fb3002c 	lw	s3,44(sp)
8001a49c:	8fb20028 	lw	s2,40(sp)
8001a4a0:	8fb10024 	lw	s1,36(sp)
8001a4a4:	8fb00020 	lw	s0,32(sp)
8001a4a8:	03e00008 	jr	ra
8001a4ac:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sem.c:409
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
	assert(current->sem_queue != NULL);
8001a4b0:	3c048002 	lui	a0,0x8002
8001a4b4:	3c068002 	lui	a2,0x8002
8001a4b8:	3c078002 	lui	a3,0x8002
8001a4bc:	248437d0 	addiu	a0,a0,14288
8001a4c0:	24050199 	li	a1,409
8001a4c4:	24c609b0 	addiu	a2,a2,2480
8001a4c8:	0c006afd 	jal	8001abf4 <__panic>
8001a4cc:	24e73850 	addiu	a3,a3,14416

8001a4d0 <sync_init>:
sync_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/sync.c:6
#include <sync.h>
#include <mbox.h>

void sync_init(void)
{
	mbox_init();
8001a4d0:	080061a3 	j	8001868c <mbox_init>
8001a4d4:	00000000 	nop

8001a4d8 <wait_init>:
wait_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:15

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
	list_init(&(wait->wait_link));
8001a4d8:	2482000c 	addiu	v0,a0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:14
#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
8001a4dc:	3c038000 	lui	v1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:13

#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
8001a4e0:	ac850000 	sw	a1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:14
	wait->wakeup_flags = WT_INTERRUPTED;
8001a4e4:	ac830004 	sw	v1,4(a0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8001a4e8:	ac820010 	sw	v0,16(a0)
wait_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:16
	list_init(&(wait->wait_link));
}
8001a4ec:	03e00008 	jr	ra
8001a4f0:	ac82000c 	sw	v0,12(a0)

8001a4f4 <wait_queue_init>:
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8001a4f4:	ac840004 	sw	a0,4(a0)
wait_queue_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:21

void wait_queue_init(wait_queue_t * queue)
{
	list_init(&(queue->wait_head));
}
8001a4f8:	03e00008 	jr	ra
8001a4fc:	ac840000 	sw	a0,0(a0)

8001a500 <wait_queue_add>:
wait_queue_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:25

void wait_queue_add(wait_queue_t * queue, wait_t * wait)
{
	assert(list_empty(&(wait->wait_link)) && wait->proc != NULL);
8001a500:	8ca30010 	lw	v1,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:24
{
	list_init(&(queue->wait_head));
}

void wait_queue_add(wait_queue_t * queue, wait_t * wait)
{
8001a504:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:25
	assert(list_empty(&(wait->wait_link)) && wait->proc != NULL);
8001a508:	24a2000c 	addiu	v0,a1,12
8001a50c:	1443000c 	bne	v0,v1,8001a540 <wait_queue_add+0x40>
8001a510:	afbf0014 	sw	ra,20(sp)
8001a514:	8ca30000 	lw	v1,0(a1)
8001a518:	10600009 	beqz	v1,8001a540 <wait_queue_add+0x40>
8001a51c:	8fbf0014 	lw	ra,20(sp)
list_add_before():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
8001a520:	8c830000 	lw	v1,0(a0)
wait_queue_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:26
	wait->wait_queue = queue;
8001a524:	aca40008 	sw	a0,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:28
	list_add_before(&(queue->wait_head), &(wait->wait_link));
}
8001a528:	27bd0018 	addiu	sp,sp,24
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001a52c:	ac820000 	sw	v0,0(a0)
8001a530:	ac620004 	sw	v0,4(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8001a534:	aca3000c 	sw	v1,12(a1)
wait_queue_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:28
8001a538:	03e00008 	jr	ra
8001a53c:	aca40010 	sw	a0,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:25
	list_init(&(queue->wait_head));
}

void wait_queue_add(wait_queue_t * queue, wait_t * wait)
{
	assert(list_empty(&(wait->wait_link)) && wait->proc != NULL);
8001a540:	3c048002 	lui	a0,0x8002
8001a544:	3c068002 	lui	a2,0x8002
8001a548:	3c078002 	lui	a3,0x8002
8001a54c:	2484386c 	addiu	a0,a0,14444
8001a550:	24050019 	li	a1,25
8001a554:	24c609b0 	addiu	a2,a2,2480
8001a558:	0c006afd 	jal	8001abf4 <__panic>
8001a55c:	24e73874 	addiu	a3,a3,14452

8001a560 <wait_queue_del>:
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001a560:	8ca30010 	lw	v1,16(a1)
wait_queue_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:31
	wait->wait_queue = queue;
	list_add_before(&(queue->wait_head), &(wait->wait_link));
}

void wait_queue_del(wait_queue_t * queue, wait_t * wait)
{
8001a564:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:32
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a568:	24a2000c 	addiu	v0,a1,12
8001a56c:	1043000b 	beq	v0,v1,8001a59c <wait_queue_del+0x3c>
8001a570:	afbf0014 	sw	ra,20(sp)
8001a574:	8ca60008 	lw	a2,8(a1)
8001a578:	14c40008 	bne	a2,a0,8001a59c <wait_queue_del+0x3c>
8001a57c:	8fbf0014 	lw	ra,20(sp)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001a580:	8ca4000c 	lw	a0,12(a1)
wait_queue_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:34
	list_del_init(&(wait->wait_link));
}
8001a584:	27bd0018 	addiu	sp,sp,24
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001a588:	ac830004 	sw	v1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8001a58c:	ac640000 	sw	a0,0(v1)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001a590:	aca20010 	sw	v0,16(a1)
wait_queue_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:34
8001a594:	03e00008 	jr	ra
8001a598:	aca2000c 	sw	v0,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:32
	list_add_before(&(queue->wait_head), &(wait->wait_link));
}

void wait_queue_del(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a59c:	3c048002 	lui	a0,0x8002
8001a5a0:	3c068002 	lui	a2,0x8002
8001a5a4:	3c078002 	lui	a3,0x8002
8001a5a8:	2484386c 	addiu	a0,a0,14444
8001a5ac:	24050020 	li	a1,32
8001a5b0:	24c609b0 	addiu	a2,a2,2480
8001a5b4:	0c006afd 	jal	8001abf4 <__panic>
8001a5b8:	24e738ac 	addiu	a3,a3,14508

8001a5bc <wait_queue_next>:
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001a5bc:	8ca30010 	lw	v1,16(a1)
wait_queue_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:37
	list_del_init(&(wait->wait_link));
}

wait_t *wait_queue_next(wait_queue_t * queue, wait_t * wait)
{
8001a5c0:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:38
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a5c4:	24a2000c 	addiu	v0,a1,12
8001a5c8:	10620009 	beq	v1,v0,8001a5f0 <wait_queue_next+0x34>
8001a5cc:	afbf0014 	sw	ra,20(sp)
8001a5d0:	8ca50008 	lw	a1,8(a1)
8001a5d4:	14a40006 	bne	a1,a0,8001a5f0 <wait_queue_next+0x34>
8001a5d8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:41
	list_entry_t *le = list_next(&(wait->wait_link));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a5dc:	2462fff4 	addiu	v0,v1,-12
8001a5e0:	00a31826 	xor	v1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:44
	}
	return NULL;
}
8001a5e4:	0003100a 	movz	v0,zero,v1
8001a5e8:	03e00008 	jr	ra
8001a5ec:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:38
	list_del_init(&(wait->wait_link));
}

wait_t *wait_queue_next(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a5f0:	3c048002 	lui	a0,0x8002
8001a5f4:	3c068002 	lui	a2,0x8002
8001a5f8:	3c078002 	lui	a3,0x8002
8001a5fc:	2484386c 	addiu	a0,a0,14444
8001a600:	24050026 	li	a1,38
8001a604:	24c609b0 	addiu	a2,a2,2480
8001a608:	0c006afd 	jal	8001abf4 <__panic>
8001a60c:	24e738ac 	addiu	a3,a3,14508

8001a610 <wait_queue_prev>:
wait_queue_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:48
	return NULL;
}

wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a610:	8ca30010 	lw	v1,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:47
	}
	return NULL;
}

wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
8001a614:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:48
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a618:	24a2000c 	addiu	v0,a1,12
8001a61c:	1062000a 	beq	v1,v0,8001a648 <wait_queue_prev+0x38>
8001a620:	afbf0014 	sw	ra,20(sp)
8001a624:	8ca60008 	lw	a2,8(a1)
8001a628:	14c40007 	bne	a2,a0,8001a648 <wait_queue_prev+0x38>
8001a62c:	8fbf0014 	lw	ra,20(sp)
list_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
8001a630:	8ca3000c 	lw	v1,12(a1)
wait_queue_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:54
	list_entry_t *le = list_prev(&(wait->wait_link));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
	}
	return NULL;
}
8001a634:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:51
wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
	list_entry_t *le = list_prev(&(wait->wait_link));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a638:	2462fff4 	addiu	v0,v1,-12
8001a63c:	00c31826 	xor	v1,a2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:54
	}
	return NULL;
}
8001a640:	03e00008 	jr	ra
8001a644:	0003100a 	movz	v0,zero,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:48
	return NULL;
}

wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a648:	3c048002 	lui	a0,0x8002
8001a64c:	3c068002 	lui	a2,0x8002
8001a650:	3c078002 	lui	a3,0x8002
8001a654:	2484386c 	addiu	a0,a0,14444
8001a658:	24050030 	li	a1,48
8001a65c:	24c609b0 	addiu	a2,a2,2480
8001a660:	0c006afd 	jal	8001abf4 <__panic>
8001a664:	24e738ac 	addiu	a3,a3,14508

8001a668 <wait_queue_first>:
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a668:	8c830004 	lw	v1,4(a0)
wait_queue_first():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:60

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a66c:	2462fff4 	addiu	v0,v1,-12
8001a670:	00831826 	xor	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:63
	}
	return NULL;
}
8001a674:	03e00008 	jr	ra
8001a678:	0003100a 	movz	v0,zero,v1

8001a67c <wait_queue_last>:
list_prev():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
8001a67c:	8c830000 	lw	v1,0(a0)
wait_queue_last():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:69

wait_t *wait_queue_last(wait_queue_t * queue)
{
	list_entry_t *le = list_prev(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a680:	2462fff4 	addiu	v0,v1,-12
8001a684:	00831826 	xor	v1,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:72
	}
	return NULL;
}
8001a688:	03e00008 	jr	ra
8001a68c:	0003100a 	movz	v0,zero,v1

8001a690 <wait_queue_empty>:
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001a690:	8c820004 	lw	v0,4(a0)
8001a694:	00441026 	xor	v0,v0,a0
wait_queue_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:77

bool wait_queue_empty(wait_queue_t * queue)
{
	return list_empty(&(queue->wait_head));
}
8001a698:	03e00008 	jr	ra
8001a69c:	2c420001 	sltiu	v0,v0,1

8001a6a0 <wait_in_queue>:
wait_in_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:81

bool wait_in_queue(wait_t * wait)
{
	return !list_empty(&(wait->wait_link));
8001a6a0:	8c820010 	lw	v0,16(a0)
8001a6a4:	2484000c 	addiu	a0,a0,12
8001a6a8:	00441026 	xor	v0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:82
}
8001a6ac:	03e00008 	jr	ra
8001a6b0:	0002102b 	sltu	v0,zero,v0

8001a6b4 <wakeup_wait>:
wakeup_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:87

void
wakeup_wait(wait_queue_t * queue, wait_t * wait, uint32_t wakeup_flags,
	    bool del)
{
8001a6b4:	27bdffe0 	addiu	sp,sp,-32
8001a6b8:	afb00018 	sw	s0,24(sp)
8001a6bc:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:88
	if (del) {
8001a6c0:	10e00004 	beqz	a3,8001a6d4 <wakeup_wait+0x20>
8001a6c4:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:89
		wait_queue_del(queue, wait);
8001a6c8:	0c006958 	jal	8001a560 <wait_queue_del>
8001a6cc:	afa60010 	sw	a2,16(sp)
8001a6d0:	8fa60010 	lw	a2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:92
	}
	wait->wakeup_flags = wakeup_flags;
	wakeup_proc(wait->proc);
8001a6d4:	8e040000 	lw	a0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:91
	    bool del)
{
	if (del) {
		wait_queue_del(queue, wait);
	}
	wait->wakeup_flags = wakeup_flags;
8001a6d8:	ae060004 	sw	a2,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:93
	wakeup_proc(wait->proc);
}
8001a6dc:	8fbf001c 	lw	ra,28(sp)
8001a6e0:	8fb00018 	lw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:92
{
	if (del) {
		wait_queue_del(queue, wait);
	}
	wait->wakeup_flags = wakeup_flags;
	wakeup_proc(wait->proc);
8001a6e4:	080004f7 	j	800013dc <wakeup_proc>
8001a6e8:	27bd0020 	addiu	sp,sp,32

8001a6ec <wakeup_first>:
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a6ec:	8c830004 	lw	v1,4(a0)
wakeup_first():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:96
}

void wakeup_first(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
8001a6f0:	00a04021 	move	t0,a1
wait_queue_first():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:59
}

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
8001a6f4:	10640006 	beq	v1,a0,8001a710 <wakeup_first+0x24>
8001a6f8:	00c03821 	move	a3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:60
		return le2wait(le, wait_link);
8001a6fc:	2465fff4 	addiu	a1,v1,-12
wakeup_first():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:98
}

void wakeup_first(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
8001a700:	10a00003 	beqz	a1,8001a710 <wakeup_first+0x24>
8001a704:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:99
		wakeup_wait(queue, wait, wakeup_flags, del);
8001a708:	080069ad 	j	8001a6b4 <wakeup_wait>
8001a70c:	01003021 	move	a2,t0
8001a710:	03e00008 	jr	ra
8001a714:	00000000 	nop

8001a718 <wakeup_queue>:
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8001a718:	8c820004 	lw	v0,4(a0)
wakeup_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:104
	}
}

void wakeup_queue(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
8001a71c:	27bdffd8 	addiu	sp,sp,-40
8001a720:	afb10020 	sw	s1,32(sp)
8001a724:	afb0001c 	sw	s0,28(sp)
8001a728:	afbf0024 	sw	ra,36(sp)
8001a72c:	00808021 	move	s0,a0
wait_queue_first():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:59
}

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
8001a730:	10440011 	beq	v0,a0,8001a778 <wakeup_queue+0x60>
8001a734:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:60
		return le2wait(le, wait_link);
8001a738:	2442fff4 	addiu	v0,v0,-12
wakeup_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:106
}

void wakeup_queue(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
8001a73c:	1040000f 	beqz	v0,8001a77c <wakeup_queue+0x64>
8001a740:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:107
		if (del) {
8001a744:	14c00014 	bnez	a2,8001a798 <wakeup_queue+0x80>
8001a748:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:113
			do {
				wakeup_wait(queue, wait, wakeup_flags, 1);
			} while ((wait = wait_queue_first(queue)) != NULL);
		} else {
			do {
				wakeup_wait(queue, wait, wakeup_flags, 0);
8001a74c:	02002021 	move	a0,s0
8001a750:	02203021 	move	a2,s1
8001a754:	00003821 	move	a3,zero
8001a758:	0c0069ad 	jal	8001a6b4 <wakeup_wait>
8001a75c:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:114
			} while ((wait = wait_queue_next(queue, wait)) != NULL);
8001a760:	8fa20010 	lw	v0,16(sp)
8001a764:	02002021 	move	a0,s0
8001a768:	0c00696f 	jal	8001a5bc <wait_queue_next>
8001a76c:	00402821 	move	a1,v0
8001a770:	5440fff6 	bnezl	v0,8001a74c <wakeup_queue+0x34>
8001a774:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:117
		}
	}
}
8001a778:	8fbf0024 	lw	ra,36(sp)
8001a77c:	8fb10020 	lw	s1,32(sp)
8001a780:	8fb0001c 	lw	s0,28(sp)
8001a784:	03e00008 	jr	ra
8001a788:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:110
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
		if (del) {
			do {
				wakeup_wait(queue, wait, wakeup_flags, 1);
			} while ((wait = wait_queue_first(queue)) != NULL);
8001a78c:	1040fffb 	beqz	v0,8001a77c <wakeup_queue+0x64>
8001a790:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:109
{
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
		if (del) {
			do {
				wakeup_wait(queue, wait, wakeup_flags, 1);
8001a794:	00402821 	move	a1,v0
8001a798:	02002021 	move	a0,s0
8001a79c:	02203021 	move	a2,s1
8001a7a0:	0c0069ad 	jal	8001a6b4 <wakeup_wait>
8001a7a4:	24070001 	li	a3,1
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8001a7a8:	8e030004 	lw	v1,4(s0)
wait_queue_first():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:59
}

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
8001a7ac:	1603fff7 	bne	s0,v1,8001a78c <wakeup_queue+0x74>
8001a7b0:	2462fff4 	addiu	v0,v1,-12
wakeup_queue():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:117
			do {
				wakeup_wait(queue, wait, wakeup_flags, 0);
			} while ((wait = wait_queue_next(queue, wait)) != NULL);
		}
	}
}
8001a7b4:	8fbf0024 	lw	ra,36(sp)
8001a7b8:	8fb10020 	lw	s1,32(sp)
8001a7bc:	8fb0001c 	lw	s0,28(sp)
8001a7c0:	03e00008 	jr	ra
8001a7c4:	27bd0028 	addiu	sp,sp,40

8001a7c8 <wait_current_set>:
wait_current_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:121

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
8001a7c8:	3c028015 	lui	v0,0x8015
8001a7cc:	8c4377a4 	lw	v1,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:120
		}
	}
}

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
8001a7d0:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:121
	assert(current != NULL);
8001a7d4:	1060000d 	beqz	v1,8001a80c <wait_current_set+0x44>
8001a7d8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:126
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
	current->wait_state = wait_state;
	wait_queue_add(queue, wait);
}
8001a7dc:	8fbf0014 	lw	ra,20(sp)
wait_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:15

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
	list_init(&(wait->wait_link));
8001a7e0:	24a7000c 	addiu	a3,a1,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:14
#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
8001a7e4:	3c088000 	lui	t0,0x8000
wait_current_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:123

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
8001a7e8:	24020001 	li	v0,1
wait_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:13

#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
8001a7ec:	aca30000 	sw	v1,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:14
	wait->wakeup_flags = WT_INTERRUPTED;
8001a7f0:	aca80004 	sw	t0,4(a1)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001a7f4:	aca70010 	sw	a3,16(a1)
8001a7f8:	aca7000c 	sw	a3,12(a1)
wait_current_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:126
	assert(current != NULL);
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
	current->wait_state = wait_state;
	wait_queue_add(queue, wait);
}
8001a7fc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:123

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
8001a800:	ac620000 	sw	v0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:125
	current->wait_state = wait_state;
	wait_queue_add(queue, wait);
8001a804:	08006940 	j	8001a500 <wait_queue_add>
8001a808:	ac660084 	sw	a2,132(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/sync/wait.c:121
	}
}

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
8001a80c:	3c048002 	lui	a0,0x8002
8001a810:	3c068002 	lui	a2,0x8002
8001a814:	3c078002 	lui	a3,0x8002
8001a818:	2484386c 	addiu	a0,a0,14444
8001a81c:	24050079 	li	a1,121
8001a820:	24c609b0 	addiu	a2,a2,2480
8001a824:	0c006afd 	jal	8001abf4 <__panic>
8001a828:	24e72ee8 	addiu	a3,a3,12008

8001a82c <print_kerninfo>:
print_kerninfo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:20
 * address of free memory and how many memory that kernel has used.
 * */
void print_kerninfo(void)
{
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n\r");
8001a82c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:18
 * print_kerninfo - print the information about kernel, including the location
 * of kernel entry, the start addresses of data and text segements, the start
 * address of free memory and how many memory that kernel has used.
 * */
void print_kerninfo(void)
{
8001a830:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:20
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n\r");
8001a834:	248438ec 	addiu	a0,a0,14572
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:18
 * print_kerninfo - print the information about kernel, including the location
 * of kernel entry, the start addresses of data and text segements, the start
 * address of free memory and how many memory that kernel has used.
 * */
void print_kerninfo(void)
{
8001a838:	afbf001c 	sw	ra,28(sp)
8001a83c:	afb20018 	sw	s2,24(sp)
8001a840:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:20
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n\r");
8001a844:	0c00798a 	jal	8001e628 <kprintf>
8001a848:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:21
	kprintf("  entry  0x");
8001a84c:	3c048002 	lui	a0,0x8002
8001a850:	0c00798a 	jal	8001e628 <kprintf>
8001a854:	24843908 	addiu	a0,a0,14600
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:22
	printhex((unsigned int)kern_init);
8001a858:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:23
	kprintf(" (phys)\n\r");
8001a85c:	3c108002 	lui	s0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:22
void print_kerninfo(void)
{
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n\r");
	kprintf("  entry  0x");
	printhex((unsigned int)kern_init);
8001a860:	0c007996 	jal	8001e658 <printhex>
8001a864:	2484ba78 	addiu	a0,a0,-17800
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:23
	kprintf(" (phys)\n\r");
8001a868:	0c00798a 	jal	8001e628 <kprintf>
8001a86c:	26043914 	addiu	a0,s0,14612
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:24
	kprintf("  etext\t0x");
8001a870:	3c048002 	lui	a0,0x8002
8001a874:	24843920 	addiu	a0,a0,14624
8001a878:	0c00798a 	jal	8001e628 <kprintf>
8001a87c:	3c118002 	lui	s1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:25
	printhex((unsigned int)etext);
8001a880:	0c007996 	jal	8001e658 <printhex>
8001a884:	26245400 	addiu	a0,s1,21504
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:26
	kprintf(" (phys)\n\r");
8001a888:	0c00798a 	jal	8001e628 <kprintf>
8001a88c:	26043914 	addiu	a0,s0,14612
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:27
	kprintf("  edata\t0x");
8001a890:	3c048002 	lui	a0,0x8002
8001a894:	0c00798a 	jal	8001e628 <kprintf>
8001a898:	2484392c 	addiu	a0,a0,14636
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:28
	printhex((unsigned int)edata);
8001a89c:	3c048015 	lui	a0,0x8015
8001a8a0:	0c007996 	jal	8001e658 <printhex>
8001a8a4:	24843450 	addiu	a0,a0,13392
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:29
	kprintf(" (phys)\n\r");
8001a8a8:	0c00798a 	jal	8001e628 <kprintf>
8001a8ac:	26043914 	addiu	a0,s0,14612
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:30
	kprintf("  end\t0x");
8001a8b0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:31
	printhex((unsigned int)end);
8001a8b4:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:30
	printhex((unsigned int)etext);
	kprintf(" (phys)\n\r");
	kprintf("  edata\t0x");
	printhex((unsigned int)edata);
	kprintf(" (phys)\n\r");
	kprintf("  end\t0x");
8001a8b8:	0c00798a 	jal	8001e628 <kprintf>
8001a8bc:	24843938 	addiu	a0,a0,14648
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:31
	printhex((unsigned int)end);
8001a8c0:	0c007996 	jal	8001e658 <printhex>
8001a8c4:	264477c0 	addiu	a0,s2,30656
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:32
	kprintf(" (phys)\n\r");
8001a8c8:	0c00798a 	jal	8001e628 <kprintf>
8001a8cc:	26043914 	addiu	a0,s0,14612
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:33
	kprintf("Kernel executable memory footprint: ");
8001a8d0:	3c048002 	lui	a0,0x8002
8001a8d4:	0c00798a 	jal	8001e628 <kprintf>
8001a8d8:	24843944 	addiu	a0,a0,14660
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:34
	printbase10((end - etext + 1023) >> 10);
8001a8dc:	264477c0 	addiu	a0,s2,30656
8001a8e0:	26315400 	addiu	s1,s1,21504
8001a8e4:	248403ff 	addiu	a0,a0,1023
8001a8e8:	00912023 	subu	a0,a0,s1
8001a8ec:	0c0079a9 	jal	8001e6a4 <printbase10>
8001a8f0:	00042283 	sra	a0,a0,0xa
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:36
	kprintf("KB\n\r");
}
8001a8f4:	8fbf001c 	lw	ra,28(sp)
8001a8f8:	8fb20018 	lw	s2,24(sp)
8001a8fc:	8fb10014 	lw	s1,20(sp)
8001a900:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:35
	kprintf("  end\t0x");
	printhex((unsigned int)end);
	kprintf(" (phys)\n\r");
	kprintf("Kernel executable memory footprint: ");
	printbase10((end - etext + 1023) >> 10);
	kprintf("KB\n\r");
8001a904:	3c048002 	lui	a0,0x8002
8001a908:	2484396c 	addiu	a0,a0,14700
8001a90c:	0800798a 	j	8001e628 <kprintf>
8001a910:	27bd0020 	addiu	sp,sp,32

8001a914 <print_debuginfo>:
print_debuginfo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:44
 * print_debuginfo - read and print the stat information for the address @eip,
 * and info.eip_fn_addr should be the first address of the related function.
 * */
void print_debuginfo(uintptr_t eip)
{
	panic("Unimpl");
8001a914:	3c048002 	lui	a0,0x8002
8001a918:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:43
/* *
 * print_debuginfo - read and print the stat information for the address @eip,
 * and info.eip_fn_addr should be the first address of the related function.
 * */
void print_debuginfo(uintptr_t eip)
{
8001a91c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:44
	panic("Unimpl");
8001a920:	24843974 	addiu	a0,a0,14708
8001a924:	2405002c 	li	a1,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:43
/* *
 * print_debuginfo - read and print the stat information for the address @eip,
 * and info.eip_fn_addr should be the first address of the related function.
 * */
void print_debuginfo(uintptr_t eip)
{
8001a928:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:44
	panic("Unimpl");
8001a92c:	0c006afd 	jal	8001abf4 <__panic>
8001a930:	24c63980 	addiu	a2,a2,14720

8001a934 <print_stackframe>:
print_stackframe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:84
 * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
 * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
 * */
void print_stackframe(void)
{
	panic("Unimpl");
8001a934:	3c048002 	lui	a0,0x8002
8001a938:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:83
 *
 * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
 * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
 * */
void print_stackframe(void)
{
8001a93c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:84
	panic("Unimpl");
8001a940:	24843974 	addiu	a0,a0,14708
8001a944:	24050054 	li	a1,84
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:83
 *
 * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
 * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
 * */
void print_stackframe(void)
{
8001a948:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/kdebug.c:84
	panic("Unimpl");
8001a94c:	0c006afd 	jal	8001abf4 <__panic>
8001a950:	24c63980 	addiu	a2,a2,14720

8001a954 <mon_kerninfo>:
mon_kerninfo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:121
/* *
 * mon_kerninfo - call print_kerninfo in kern/debug/kdebug.c to
 * print the memory occupancy in kernel.
 * */
int mon_kerninfo(int argc, char **argv, struct trapframe *tf)
{
8001a954:	27bdffe8 	addiu	sp,sp,-24
8001a958:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:122
	print_kerninfo();
8001a95c:	0c006a0b 	jal	8001a82c <print_kerninfo>
8001a960:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:124
	return 0;
}
8001a964:	8fbf0014 	lw	ra,20(sp)
8001a968:	00001021 	move	v0,zero
8001a96c:	03e00008 	jr	ra
8001a970:	27bd0018 	addiu	sp,sp,24

8001a974 <mon_help>:
mon_help():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:105
	}
}

/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
8001a974:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:108
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a978:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:105
	}
}

/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
8001a97c:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:108
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a980:	24843988 	addiu	a0,a0,14728
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:109
		kprintf(" - ");
8001a984:	3c118002 	lui	s1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:105
	}
}

/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
8001a988:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:108
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a98c:	0c00798a 	jal	8001e628 <kprintf>
8001a990:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:109
		kprintf(" - ");
8001a994:	0c00798a 	jal	8001e628 <kprintf>
8001a998:	26243990 	addiu	a0,s1,14736
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:110
		kprintf(commands[i].desc);
8001a99c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:111
		kprintf("\n");
8001a9a0:	3c108002 	lui	s0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:110
{
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
		kprintf(" - ");
		kprintf(commands[i].desc);
8001a9a4:	0c00798a 	jal	8001e628 <kprintf>
8001a9a8:	24843994 	addiu	a0,a0,14740
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:111
		kprintf("\n");
8001a9ac:	0c00798a 	jal	8001e628 <kprintf>
8001a9b0:	26042af4 	addiu	a0,s0,10996
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:108
/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a9b4:	3c048002 	lui	a0,0x8002
8001a9b8:	0c00798a 	jal	8001e628 <kprintf>
8001a9bc:	248439b4 	addiu	a0,a0,14772
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:109
		kprintf(" - ");
8001a9c0:	0c00798a 	jal	8001e628 <kprintf>
8001a9c4:	26243990 	addiu	a0,s1,14736
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:110
		kprintf(commands[i].desc);
8001a9c8:	3c048002 	lui	a0,0x8002
8001a9cc:	0c00798a 	jal	8001e628 <kprintf>
8001a9d0:	248439c0 	addiu	a0,a0,14784
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:111
		kprintf("\n");
8001a9d4:	0c00798a 	jal	8001e628 <kprintf>
8001a9d8:	26042af4 	addiu	a0,s0,10996
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:114
	}
	return 0;
}
8001a9dc:	8fbf001c 	lw	ra,28(sp)
8001a9e0:	00001021 	move	v0,zero
8001a9e4:	8fb10018 	lw	s1,24(sp)
8001a9e8:	8fb00014 	lw	s0,20(sp)
8001a9ec:	03e00008 	jr	ra
8001a9f0:	27bd0020 	addiu	sp,sp,32

8001a9f4 <monitor>:
monitor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:85
}

/***** Implementations of basic kernel monitor commands *****/

void monitor(struct trapframe *tf)
{
8001a9f4:	27bdff78 	addiu	sp,sp,-136
8001a9f8:	afb7007c 	sw	s7,124(sp)
8001a9fc:	0080b821 	move	s7,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:86
	kprintf("Welcome to the kernel debug monitor!!\n");
8001aa00:	3c048002 	lui	a0,0x8002
8001aa04:	248439e8 	addiu	a0,a0,14824
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:85
}

/***** Implementations of basic kernel monitor commands *****/

void monitor(struct trapframe *tf)
{
8001aa08:	afbf0084 	sw	ra,132(sp)
8001aa0c:	afbe0080 	sw	s8,128(sp)
8001aa10:	afb60078 	sw	s6,120(sp)
8001aa14:	afb50074 	sw	s5,116(sp)
8001aa18:	afb40070 	sw	s4,112(sp)
8001aa1c:	afb3006c 	sw	s3,108(sp)
8001aa20:	afb20068 	sw	s2,104(sp)
8001aa24:	afb10064 	sw	s1,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:86
	kprintf("Welcome to the kernel debug monitor!!\n");
8001aa28:	0c00798a 	jal	8001e628 <kprintf>
8001aa2c:	afb00060 	sw	s0,96(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:87
	kprintf("Type 'help' for a list of commands.\n");
8001aa30:	3c048002 	lui	a0,0x8002
8001aa34:	0c00798a 	jal	8001e628 <kprintf>
8001aa38:	24843a10 	addiu	a0,a0,14864
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:89

	if (tf != NULL) {
8001aa3c:	12e00004 	beqz	s7,8001aa50 <monitor+0x5c>
8001aa40:	3c028002 	lui	v0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:90
		print_trapframe(tf);
8001aa44:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001aa48:	02e02021 	move	a0,s7
8001aa4c:	3c028002 	lui	v0,0x8002
8001aa50:	2442fd6c 	addiu	v0,v0,-660
parse():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aa54:	3c108002 	lui	s0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:49
		if (*buf == '\0') {
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
8001aa58:	3c128002 	lui	s2,0x8002
runcmd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:76
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
			return commands[i].func(argc - 1, argv + 1, tf);
		}
	}
	kprintf("Unknown command '");
8001aa5c:	3c168002 	lui	s6,0x8002
8001aa60:	3c118002 	lui	s1,0x8002
8001aa64:	3c138002 	lui	s3,0x8002
8001aa68:	afa20054 	sw	v0,84(sp)
8001aa6c:	27be0014 	addiu	s8,sp,20
parse():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aa70:	26103a3c 	addiu	s0,s0,14908
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:49
		if (*buf == '\0') {
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
8001aa74:	26523a44 	addiu	s2,s2,14916
runcmd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:72
	if (!argc) {
		return 0;
	}
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
8001aa78:	3c148002 	lui	s4,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:76
			return commands[i].func(argc - 1, argv + 1, tf);
		}
	}
	kprintf("Unknown command '");
8001aa7c:	26d63a5c 	addiu	s6,s6,14940
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:78
	kprintf(argv[0]);
	kprintf("'\n");
8001aa80:	3c158002 	lui	s5,0x8002
monitor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:95
		print_trapframe(tf);
	}

	char *buf;
	while (1) {
		if ((buf = readline("K> ")) != NULL) {
8001aa84:	0c0058bd 	jal	800162f4 <readline>
8001aa88:	26243a38 	addiu	a0,s1,14904
8001aa8c:	1040fffd 	beqz	v0,8001aa84 <monitor+0x90>
8001aa90:	00401821 	move	v1,v0
8001aa94:	90450000 	lbu	a1,0(v0)
8001aa98:	afa00050 	sw	zero,80(sp)
parse():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aa9c:	14a00015 	bnez	a1,8001aaf4 <monitor+0x100>
8001aaa0:	02002021 	move	a0,s0
runcmd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:67
 * */
static int runcmd(char *buf, struct trapframe *tf)
{
	char *argv[MAXARGS];
	int argc = parse(buf, argv);
	if (!argc) {
8001aaa4:	8fa30050 	lw	v1,80(sp)
8001aaa8:	1060fff6 	beqz	v1,8001aa84 <monitor+0x90>
8001aaac:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:72
		return 0;
	}
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
8001aab0:	0c005baa 	jal	80016ea8 <strcmp>
8001aab4:	26643988 	addiu	a0,s3,14728
8001aab8:	10400036 	beqz	v0,8001ab94 <monitor+0x1a0>
8001aabc:	00001821 	move	v1,zero
8001aac0:	8fa50010 	lw	a1,16(sp)
8001aac4:	0c005baa 	jal	80016ea8 <strcmp>
8001aac8:	268439b4 	addiu	a0,s4,14772
8001aacc:	10400031 	beqz	v0,8001ab94 <monitor+0x1a0>
8001aad0:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:76
			return commands[i].func(argc - 1, argv + 1, tf);
		}
	}
	kprintf("Unknown command '");
8001aad4:	0c00798a 	jal	8001e628 <kprintf>
8001aad8:	02c02021 	move	a0,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:77
	kprintf(argv[0]);
8001aadc:	0c00798a 	jal	8001e628 <kprintf>
8001aae0:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:78
	kprintf("'\n");
8001aae4:	0c00798a 	jal	8001e628 <kprintf>
8001aae8:	26a43a70 	addiu	a0,s5,14960
8001aaec:	08006aa1 	j	8001aa84 <monitor+0x90>
8001aaf0:	00000000 	nop
parse():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aaf4:	0c005bd1 	jal	80016f44 <strchr>
8001aaf8:	afa30058 	sw	v1,88(sp)
8001aafc:	10400005 	beqz	v0,8001ab14 <monitor+0x120>
8001ab00:	8fa30058 	lw	v1,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:42
			*buf++ = '\0';
8001ab04:	a0600000 	sb	zero,0(v1)
8001ab08:	90650001 	lbu	a1,1(v1)
8001ab0c:	08006aa7 	j	8001aa9c <monitor+0xa8>
8001ab10:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:44
		}
		if (*buf == '\0') {
8001ab14:	90620000 	lbu	v0,0(v1)
8001ab18:	1040ffe2 	beqz	v0,8001aaa4 <monitor+0xb0>
8001ab1c:	8fa40050 	lw	a0,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:48
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
8001ab20:	2402000f 	li	v0,15
8001ab24:	10820017 	beq	a0,v0,8001ab84 <monitor+0x190>
8001ab28:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:51
			kprintf("Too many arguments.\n");
		}
		argv[argc++] = buf;
8001ab2c:	8fa40050 	lw	a0,80(sp)
8001ab30:	00041080 	sll	v0,a0,0x2
8001ab34:	27a40010 	addiu	a0,sp,16
8001ab38:	00821021 	addu	v0,a0,v0
8001ab3c:	ac430000 	sw	v1,0(v0)
8001ab40:	8fa20050 	lw	v0,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:52
		while (*buf != '\0' && strchr(WHITESPACE, *buf) == NULL) {
8001ab44:	90650000 	lbu	a1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:51
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
		}
		argv[argc++] = buf;
8001ab48:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:52
		while (*buf != '\0' && strchr(WHITESPACE, *buf) == NULL) {
8001ab4c:	14a00006 	bnez	a1,8001ab68 <monitor+0x174>
8001ab50:	afa20050 	sw	v0,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:67
 * */
static int runcmd(char *buf, struct trapframe *tf)
{
	char *argv[MAXARGS];
	int argc = parse(buf, argv);
	if (!argc) {
8001ab54:	08006aaa 	j	8001aaa8 <monitor+0xb4>
8001ab58:	8fa30050 	lw	v1,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:52
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
		}
		argv[argc++] = buf;
		while (*buf != '\0' && strchr(WHITESPACE, *buf) == NULL) {
8001ab5c:	90650001 	lbu	a1,1(v1)
8001ab60:	10a0ffd0 	beqz	a1,8001aaa4 <monitor+0xb0>
8001ab64:	24630001 	addiu	v1,v1,1
8001ab68:	02002021 	move	a0,s0
8001ab6c:	0c005bd1 	jal	80016f44 <strchr>
8001ab70:	afa30058 	sw	v1,88(sp)
8001ab74:	1040fff9 	beqz	v0,8001ab5c <monitor+0x168>
8001ab78:	8fa30058 	lw	v1,88(sp)
8001ab7c:	08006aa7 	j	8001aa9c <monitor+0xa8>
8001ab80:	90650000 	lbu	a1,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:49
		if (*buf == '\0') {
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
8001ab84:	0c00798a 	jal	8001e628 <kprintf>
8001ab88:	02402021 	move	a0,s2
8001ab8c:	08006acb 	j	8001ab2c <monitor+0x138>
8001ab90:	8fa30058 	lw	v1,88(sp)
runcmd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:73
		return 0;
	}
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
			return commands[i].func(argc - 1, argv + 1, tf);
8001ab94:	00031080 	sll	v0,v1,0x2
8001ab98:	00031900 	sll	v1,v1,0x4
8001ab9c:	00621023 	subu	v0,v1,v0
8001aba0:	8fa30054 	lw	v1,84(sp)
8001aba4:	03c02821 	move	a1,s8
8001aba8:	02e03021 	move	a2,s7
8001abac:	00621021 	addu	v0,v1,v0
8001abb0:	8fa30050 	lw	v1,80(sp)
8001abb4:	8c420008 	lw	v0,8(v0)
8001abb8:	0040f809 	jalr	v0
8001abbc:	2464ffff 	addiu	a0,v1,-1
monitor():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:96
	}

	char *buf;
	while (1) {
		if ((buf = readline("K> ")) != NULL) {
			if (runcmd(buf, tf) < 0) {
8001abc0:	0441ffb0 	bgez	v0,8001aa84 <monitor+0x90>
8001abc4:	8fbf0084 	lw	ra,132(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/monitor.c:101
				break;
			}
		}
	}
}
8001abc8:	8fbe0080 	lw	s8,128(sp)
8001abcc:	8fb7007c 	lw	s7,124(sp)
8001abd0:	8fb60078 	lw	s6,120(sp)
8001abd4:	8fb50074 	lw	s5,116(sp)
8001abd8:	8fb40070 	lw	s4,112(sp)
8001abdc:	8fb3006c 	lw	s3,108(sp)
8001abe0:	8fb20068 	lw	s2,104(sp)
8001abe4:	8fb10064 	lw	s1,100(sp)
8001abe8:	8fb00060 	lw	s0,96(sp)
8001abec:	03e00008 	jr	ra
8001abf0:	27bd0088 	addiu	sp,sp,136

8001abf4 <__panic>:
__panic():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:14
 * __panic - __panic is called on unresolvable fatal errors. it prints
 * "panic: 'message'", and then enters the kernel monitor.
 * */
void __panic(const char *file, int line, const char *fmt, ...)
{
	if (is_panic) {
8001abf4:	3c028015 	lui	v0,0x8015
8001abf8:	8c436d08 	lw	v1,27912(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:13
/* *
 * __panic - __panic is called on unresolvable fatal errors. it prints
 * "panic: 'message'", and then enters the kernel monitor.
 * */
void __panic(const char *file, int line, const char *fmt, ...)
{
8001abfc:	27bdffe0 	addiu	sp,sp,-32
8001ac00:	afb00018 	sw	s0,24(sp)
8001ac04:	afbf001c 	sw	ra,28(sp)
8001ac08:	00a04021 	move	t0,a1
8001ac0c:	afa7002c 	sw	a3,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:14
	if (is_panic) {
8001ac10:	10600007 	beqz	v1,8001ac30 <__panic+0x3c>
8001ac14:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:28
	vkprintf(fmt, ap);
	kprintf("\n");
	va_end(ap);

panic_dead:
	intr_disable();
8001ac18:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001ac1c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:30
	while (1) {
		monitor(NULL);
8001ac20:	0c006a7d 	jal	8001a9f4 <monitor>
8001ac24:	00002021 	move	a0,zero
8001ac28:	08006b08 	j	8001ac20 <__panic+0x2c>
8001ac2c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:17
void __panic(const char *file, int line, const char *fmt, ...)
{
	if (is_panic) {
		goto panic_dead;
	}
	is_panic = 1;
8001ac30:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:22

	// print the 'message'
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel panic at %s:%d:\n    ", file, line);
8001ac34:	00802821 	move	a1,a0
8001ac38:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:17
void __panic(const char *file, int line, const char *fmt, ...)
{
	if (is_panic) {
		goto panic_dead;
	}
	is_panic = 1;
8001ac3c:	ac436d08 	sw	v1,27912(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:22

	// print the 'message'
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel panic at %s:%d:\n    ", file, line);
8001ac40:	01003021 	move	a2,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:21
	}
	is_panic = 1;

	// print the 'message'
	va_list ap;
	va_start(ap, fmt);
8001ac44:	27a2002c 	addiu	v0,sp,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:22
	kprintf("kernel panic at %s:%d:\n    ", file, line);
8001ac48:	24843a74 	addiu	a0,a0,14964
8001ac4c:	0c00798a 	jal	8001e628 <kprintf>
8001ac50:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:23
	vkprintf(fmt, ap);
8001ac54:	8fa50010 	lw	a1,16(sp)
8001ac58:	0c00797b 	jal	8001e5ec <vkprintf>
8001ac5c:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:24
	kprintf("\n");
8001ac60:	3c048002 	lui	a0,0x8002
8001ac64:	0c00798a 	jal	8001e628 <kprintf>
8001ac68:	24842af4 	addiu	a0,a0,10996
8001ac6c:	08006b06 	j	8001ac18 <__panic+0x24>
8001ac70:	00000000 	nop

8001ac74 <__warn>:
__warn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001ac74:	27bdffe0 	addiu	sp,sp,-32
8001ac78:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001ac7c:	00802821 	move	a1,a0
8001ac80:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001ac84:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001ac88:	24843a90 	addiu	a0,a0,14992
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001ac8c:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001ac90:	00403021 	move	a2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:38

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
	va_list ap;
	va_start(ap, fmt);
8001ac94:	27a2002c 	addiu	v0,sp,44
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001ac98:	afbf001c 	sw	ra,28(sp)
8001ac9c:	afa7002c 	sw	a3,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001aca0:	0c00798a 	jal	8001e628 <kprintf>
8001aca4:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:40
	vkprintf(fmt, ap);
8001aca8:	8fa50010 	lw	a1,16(sp)
8001acac:	0c00797b 	jal	8001e5ec <vkprintf>
8001acb0:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:41
	kprintf("\n");
8001acb4:	3c048002 	lui	a0,0x8002
8001acb8:	0c00798a 	jal	8001e628 <kprintf>
8001acbc:	24842af4 	addiu	a0,a0,10996
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:43
	va_end(ap);
}
8001acc0:	8fbf001c 	lw	ra,28(sp)
8001acc4:	8fb00018 	lw	s0,24(sp)
8001acc8:	03e00008 	jr	ra
8001accc:	27bd0020 	addiu	sp,sp,32

8001acd0 <is_kernel_panic>:
is_kernel_panic():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:47

bool is_kernel_panic(void)
{
	return is_panic;
8001acd0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/debug/panic.c:48
}
8001acd4:	03e00008 	jr	ra
8001acd8:	8c426d08 	lw	v0,27912(v0)

8001acdc <clock_int_handler>:
clock_int_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:21
	write_c0_compare(counter);
}

int clock_int_handler(void *data)
{
	ticks++;
8001acdc:	3c028015 	lui	v0,0x8015
8001ace0:	8c4377ac 	lw	v1,30636(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:20
	counter += TIMER0_INTERVAL;
	write_c0_compare(counter);
}

int clock_int_handler(void *data)
{
8001ace4:	27bdffe8 	addiu	sp,sp,-24
8001ace8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:21
	ticks++;
8001acec:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:24
//  if( (ticks & 0x1F) == 0)
//    cons_putc('A');
	run_timer_list();
8001acf0:	0c00064f 	jal	8000193c <run_timer_list>
8001acf4:	ac4377ac 	sw	v1,30636(v0)
reload_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:14

#define TIMER0_INTERVAL  1000000

static void reload_timer()
{
	uint32_t counter = read_c0_count();
8001acf8:	40024800 	mfc0	v0,c0_count
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:15
	counter += TIMER0_INTERVAL;
8001acfc:	3c03000f 	lui	v1,0xf
8001ad00:	24634240 	addiu	v1,v1,16960
8001ad04:	00431021 	addu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:16
	write_c0_compare(counter);
8001ad08:	40825800 	mtc0	v0,c0_compare
clock_int_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:27
//  if( (ticks & 0x1F) == 0)
//    cons_putc('A');
	run_timer_list();
	reload_timer();
	return 0;
}
8001ad0c:	8fbf0014 	lw	ra,20(sp)
8001ad10:	00001021 	move	v0,zero
8001ad14:	03e00008 	jr	ra
8001ad18:	27bd0018 	addiu	sp,sp,24

8001ad1c <clock_init>:
clock_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:30

void clock_init(void)
{
8001ad1c:	27bdffe8 	addiu	sp,sp,-24
8001ad20:	afbf0014 	sw	ra,20(sp)
reload_timer():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:14

#define TIMER0_INTERVAL  1000000

static void reload_timer()
{
	uint32_t counter = read_c0_count();
8001ad24:	40024800 	mfc0	v0,c0_count
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:15
	counter += TIMER0_INTERVAL;
8001ad28:	3c03000f 	lui	v1,0xf
8001ad2c:	24634240 	addiu	v1,v1,16960
8001ad30:	00431021 	addu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:16
	write_c0_compare(counter);
8001ad34:	40825800 	mtc0	v0,c0_compare
clock_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:32
}

void clock_init(void)
{
	reload_timer();
	pic_enable(TIMER0_IRQ);
8001ad38:	0c006cc3 	jal	8001b30c <pic_enable>
8001ad3c:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:34
	kprintf("++setup timer interrupts\n\r");
}
8001ad40:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/clock.c:33

void clock_init(void)
{
	reload_timer();
	pic_enable(TIMER0_IRQ);
	kprintf("++setup timer interrupts\n\r");
8001ad44:	3c048002 	lui	a0,0x8002
8001ad48:	24843ab0 	addiu	a0,a0,15024
8001ad4c:	0800798a 	j	8001e628 <kprintf>
8001ad50:	27bd0018 	addiu	sp,sp,24

8001ad54 <serial_putc_sub>:
inw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
	*((volatile uint8_t *)port) = data;
}

static inline uint32_t inw(uint32_t port)
{
	uint32_t data = *((volatile uintptr_t *)port);
8001ad54:	3c02b040 	lui	v0,0xb040
8001ad58:	8c421004 	lw	v0,4100(v0)
serial_putc_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:95

static void serial_putc_sub(int c)
{

	//TODO
	if ((inw(COM1 + COM_IER) & COM_IER_RDI) == 0) delay();
8001ad5c:	30420001 	andi	v0,v0,0x1
8001ad60:	1440000d 	bnez	v0,8001ad98 <serial_putc_sub+0x44>
8001ad64:	27bdfff8 	addiu	sp,sp,-8
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ad68:	afa00000 	sw	zero,0(sp)
8001ad6c:	8fa20000 	lw	v0,0(sp)
8001ad70:	2c4203e8 	sltiu	v0,v0,1000
8001ad74:	10400009 	beqz	v0,8001ad9c <serial_putc_sub+0x48>
8001ad78:	3c02b040 	lui	v0,0xb040
8001ad7c:	8fa20000 	lw	v0,0(sp)
8001ad80:	24420001 	addiu	v0,v0,1
8001ad84:	afa20000 	sw	v0,0(sp)
8001ad88:	8fa20000 	lw	v0,0(sp)
8001ad8c:	2c4203e8 	sltiu	v0,v0,1000
8001ad90:	1440fffa 	bnez	v0,8001ad7c <serial_putc_sub+0x28>
8001ad94:	00000000 	nop
outw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
	return data;
}

static inline void outw(uint32_t port, uint32_t data)
{
	*((volatile uintptr_t *)port) = data;
8001ad98:	3c02b040 	lui	v0,0xb040
serial_putc_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:97
{

	//TODO
	if ((inw(COM1 + COM_IER) & COM_IER_RDI) == 0) delay();
	//delay();
	outw(COM1 + COM_THR, c & 0xFF);
8001ad9c:	308400ff 	andi	a0,a0,0xff
outw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
8001ada0:	ac441000 	sw	a0,4096(v0)
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ada4:	afa00000 	sw	zero,0(sp)
8001ada8:	8fa20000 	lw	v0,0(sp)
8001adac:	2c4203e8 	sltiu	v0,v0,1000
8001adb0:	10400008 	beqz	v0,8001add4 <serial_putc_sub+0x80>
8001adb4:	00000000 	nop
8001adb8:	8fa20000 	lw	v0,0(sp)
8001adbc:	24420001 	addiu	v0,v0,1
8001adc0:	afa20000 	sw	v0,0(sp)
8001adc4:	8fa20000 	lw	v0,0(sp)
8001adc8:	2c4203e8 	sltiu	v0,v0,1000
8001adcc:	1440fffa 	bnez	v0,8001adb8 <serial_putc_sub+0x64>
8001add0:	00000000 	nop
serial_putc_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:100
	if ((inw(COM1 + COM_IER) & COM_IER_RDI) == 0) delay();
	//delay();
	outw(COM1 + COM_THR, c & 0xFF);
	delay();

}
8001add4:	03e00008 	jr	ra
8001add8:	27bd0008 	addiu	sp,sp,8

8001addc <delay>:
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:13
#include <memlayout.h>
#include <sync.h>
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
8001addc:	27bdfff8 	addiu	sp,sp,-8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ade0:	afa00000 	sw	zero,0(sp)
8001ade4:	8fa20000 	lw	v0,0(sp)
8001ade8:	2c4203e8 	sltiu	v0,v0,1000
8001adec:	10400008 	beqz	v0,8001ae10 <delay+0x34>
8001adf0:	00000000 	nop
8001adf4:	8fa20000 	lw	v0,0(sp)
8001adf8:	24420001 	addiu	v0,v0,1
8001adfc:	afa20000 	sw	v0,0(sp)
8001ae00:	8fa20000 	lw	v0,0(sp)
8001ae04:	2c4203e8 	sltiu	v0,v0,1000
8001ae08:	1440fffa 	bnez	v0,8001adf4 <delay+0x18>
8001ae0c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:16
}
8001ae10:	03e00008 	jr	ra
8001ae14:	27bd0008 	addiu	sp,sp,8

8001ae18 <serial_intr>:
serial_intr():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:199
}

/* serial_intr - try to feed input characters from serial port */
void serial_intr(void)
{
	if (serial_exists) {
8001ae18:	3c028015 	lui	v0,0x8015
8001ae1c:	8c426d0c 	lw	v0,27916(v0)
8001ae20:	1040003e 	beqz	v0,8001af1c <serial_intr+0x104>
8001ae24:	27bdfff8 	addiu	sp,sp,-8
cons_intr():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001ae28:	3c068015 	lui	a2,0x8015
inw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
	*((volatile uint8_t *)port) = data;
}

static inline uint32_t inw(uint32_t port)
{
	uint32_t data = *((volatile uintptr_t *)port);
8001ae2c:	3c04b040 	lui	a0,0xb040
serial_proc_data():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:127
		return -1;
	delay();
	c = inw(COM1 + COM_RBR) & 0xFF;
	delay();

	if (c == 127) {
8001ae30:	2405007f 	li	a1,127
cons_intr():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001ae34:	24c66d10 	addiu	a2,a2,27920
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:189
			if (cons.wpos == CONSBUFSIZE) {
8001ae38:	24070200 	li	a3,512
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ae3c:	afa00000 	sw	zero,0(sp)
8001ae40:	8fa20000 	lw	v0,0(sp)
8001ae44:	2c4203e8 	sltiu	v0,v0,1000
8001ae48:	10400008 	beqz	v0,8001ae6c <serial_intr+0x54>
8001ae4c:	00000000 	nop
8001ae50:	8fa20000 	lw	v0,0(sp)
8001ae54:	24420001 	addiu	v0,v0,1
8001ae58:	afa20000 	sw	v0,0(sp)
8001ae5c:	8fa20000 	lw	v0,0(sp)
8001ae60:	2c4203e8 	sltiu	v0,v0,1000
8001ae64:	1440fffa 	bnez	v0,8001ae50 <serial_intr+0x38>
8001ae68:	00000000 	nop
inw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
8001ae6c:	8c821014 	lw	v0,4116(a0)
serial_proc_data():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:121
{
	int c;

	//TODO
	delay();
	if ((inw(COM1 + COM_LSR) & COM_LSR_DATA) == 0)
8001ae70:	30420001 	andi	v0,v0,0x1
8001ae74:	10400029 	beqz	v0,8001af1c <serial_intr+0x104>
8001ae78:	00000000 	nop
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ae7c:	afa00000 	sw	zero,0(sp)
8001ae80:	8fa20000 	lw	v0,0(sp)
8001ae84:	2c4203e8 	sltiu	v0,v0,1000
8001ae88:	10400008 	beqz	v0,8001aeac <serial_intr+0x94>
8001ae8c:	00000000 	nop
8001ae90:	8fa20000 	lw	v0,0(sp)
8001ae94:	24420001 	addiu	v0,v0,1
8001ae98:	afa20000 	sw	v0,0(sp)
8001ae9c:	8fa20000 	lw	v0,0(sp)
8001aea0:	2c4203e8 	sltiu	v0,v0,1000
8001aea4:	1440fffa 	bnez	v0,8001ae90 <serial_intr+0x78>
8001aea8:	00000000 	nop
inw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
8001aeac:	8c831000 	lw	v1,4096(a0)
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
8001aeb0:	afa00000 	sw	zero,0(sp)
8001aeb4:	8fa20000 	lw	v0,0(sp)
8001aeb8:	2c4203e8 	sltiu	v0,v0,1000
8001aebc:	10400008 	beqz	v0,8001aee0 <serial_intr+0xc8>
8001aec0:	306300ff 	andi	v1,v1,0xff
8001aec4:	8fa20000 	lw	v0,0(sp)
8001aec8:	24420001 	addiu	v0,v0,1
8001aecc:	afa20000 	sw	v0,0(sp)
8001aed0:	8fa20000 	lw	v0,0(sp)
8001aed4:	2c4203e8 	sltiu	v0,v0,1000
8001aed8:	1440fffa 	bnez	v0,8001aec4 <serial_intr+0xac>
8001aedc:	00000000 	nop
serial_proc_data():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:127
		return -1;
	delay();
	c = inw(COM1 + COM_RBR) & 0xFF;
	delay();

	if (c == 127) {
8001aee0:	50650005 	beql	v1,a1,8001aef8 <serial_intr+0xe0>
8001aee4:	24030008 	li	v1,8
cons_intr():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:187
 * */
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
8001aee8:	1060ffd4 	beqz	v1,8001ae3c <serial_intr+0x24>
8001aeec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:188
			cons.buf[cons.wpos++] = c;
8001aef0:	08006bbf 	j	8001aefc <serial_intr+0xe4>
8001aef4:	8cc80204 	lw	t0,516(a2)
8001aef8:	8cc80204 	lw	t0,516(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001aefc:	00005021 	move	t2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001af00:	25020001 	addiu	v0,t0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af04:	00474826 	xor	t1,v0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001af08:	01064021 	addu	t0,t0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af0c:	0049500b 	movn	t2,v0,t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001af10:	a1030000 	sb	v1,0(t0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af14:	08006b8f 	j	8001ae3c <serial_intr+0x24>
8001af18:	acca0204 	sw	t2,516(a2)
serial_intr():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:202
void serial_intr(void)
{
	if (serial_exists) {
		cons_intr(serial_proc_data);
	}
}
8001af1c:	03e00008 	jr	ra
8001af20:	27bd0008 	addiu	sp,sp,8

8001af24 <cons_init>:
cons_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:206

/* cons_init - initializes the console devices */
void cons_init(void)
{
8001af24:	27bdffe0 	addiu	sp,sp,-32
8001af28:	afb00018 	sw	s0,24(sp)
serial_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:58
static bool serial_exists = 0;

static void serial_init(void)
{
	volatile unsigned char *uart = (unsigned char *)COM1;
	if (serial_exists)
8001af2c:	3c108015 	lui	s0,0x8015
8001af30:	8e026d0c 	lw	v0,27916(s0)
8001af34:	14400043 	bnez	v0,8001b044 <cons_init+0x120>
8001af38:	afbf001c 	sw	ra,28(sp)
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001af3c:	afa00010 	sw	zero,16(sp)
8001af40:	8fa20010 	lw	v0,16(sp)
serial_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:60
static void serial_init(void)
{
	volatile unsigned char *uart = (unsigned char *)COM1;
	if (serial_exists)
		return;
	serial_exists = 1;
8001af44:	24030001 	li	v1,1
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001af48:	2c4203e8 	sltiu	v0,v0,1000
8001af4c:	10400008 	beqz	v0,8001af70 <cons_init+0x4c>
8001af50:	ae036d0c 	sw	v1,27916(s0)
8001af54:	8fa20010 	lw	v0,16(sp)
8001af58:	24420001 	addiu	v0,v0,1
8001af5c:	afa20010 	sw	v0,16(sp)
8001af60:	8fa20010 	lw	v0,16(sp)
8001af64:	2c4203e8 	sltiu	v0,v0,1000
8001af68:	1440fffa 	bnez	v0,8001af54 <cons_init+0x30>
8001af6c:	00000000 	nop
serial_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:70
	//outw(COM1 + COM_DLM, 0);
	//outw(COM1 + COM_LCR, COM_LCR_WLEN8);
	//outw(COM1 + COM_IER, 0);
	//*WRITE_IO(COM1 + COM_IER)=0x00000000;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000a;
8001af70:	3c02b040 	lui	v0,0xb040
8001af74:	2403000a 	li	v1,10
8001af78:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001af7c:	afa00010 	sw	zero,16(sp)
8001af80:	8fa20010 	lw	v0,16(sp)
8001af84:	2c4203e8 	sltiu	v0,v0,1000
8001af88:	10400008 	beqz	v0,8001afac <cons_init+0x88>
8001af8c:	3c02b040 	lui	v0,0xb040
8001af90:	8fa20010 	lw	v0,16(sp)
8001af94:	24420001 	addiu	v0,v0,1
8001af98:	afa20010 	sw	v0,16(sp)
8001af9c:	8fa20010 	lw	v0,16(sp)
8001afa0:	2c4203e8 	sltiu	v0,v0,1000
8001afa4:	1440fffa 	bnez	v0,8001af90 <cons_init+0x6c>
8001afa8:	3c02b040 	lui	v0,0xb040
serial_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:72
	//outw(COM1 + COM_IER, 0);
	//*WRITE_IO(COM1 + COM_IER)=0x00000000;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000a;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000d;
8001afac:	2403000d 	li	v1,13
8001afb0:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001afb4:	afa00010 	sw	zero,16(sp)
8001afb8:	8fa20010 	lw	v0,16(sp)
8001afbc:	2c4203e8 	sltiu	v0,v0,1000
8001afc0:	10400008 	beqz	v0,8001afe4 <cons_init+0xc0>
8001afc4:	3c02b040 	lui	v0,0xb040
8001afc8:	8fa20010 	lw	v0,16(sp)
8001afcc:	24420001 	addiu	v0,v0,1
8001afd0:	afa20010 	sw	v0,16(sp)
8001afd4:	8fa20010 	lw	v0,16(sp)
8001afd8:	2c4203e8 	sltiu	v0,v0,1000
8001afdc:	1440fffa 	bnez	v0,8001afc8 <cons_init+0xa4>
8001afe0:	3c02b040 	lui	v0,0xb040
outw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
	return data;
}

static inline void outw(uint32_t port, uint32_t data)
{
	*((volatile uintptr_t *)port) = data;
8001afe4:	24030001 	li	v1,1
8001afe8:	ac431004 	sw	v1,4100(v0)
delay():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:15
8001afec:	afa00010 	sw	zero,16(sp)
8001aff0:	8fa20010 	lw	v0,16(sp)
8001aff4:	2c4203e8 	sltiu	v0,v0,1000
8001aff8:	10400008 	beqz	v0,8001b01c <cons_init+0xf8>
8001affc:	00000000 	nop
8001b000:	8fa20010 	lw	v0,16(sp)
8001b004:	24420001 	addiu	v0,v0,1
8001b008:	afa20010 	sw	v0,16(sp)
8001b00c:	8fa20010 	lw	v0,16(sp)
8001b010:	2c4203e8 	sltiu	v0,v0,1000
8001b014:	1440fffa 	bnez	v0,8001b000 <cons_init+0xdc>
8001b018:	00000000 	nop
serial_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:86
	delay();*/
	outw(COM1 + COM_IER, COM_IER_RDI);
	delay();


	pic_enable(COM1_IRQ);
8001b01c:	0c006cc3 	jal	8001b30c <pic_enable>
8001b020:	24040004 	li	a0,4
cons_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:212
	serial_init();
//#ifdef MACH_FPGA
//	vga_init();
//#endif
	//cons.rpos = cons.wpos = 0;
	if (!serial_exists) {
8001b024:	8e026d0c 	lw	v0,27916(s0)
8001b028:	14400006 	bnez	v0,8001b044 <cons_init+0x120>
8001b02c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:215
		kprintf("serial port does not exist!!\n\r");
	}
}
8001b030:	8fb00018 	lw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:213
//#ifdef MACH_FPGA
//	vga_init();
//#endif
	//cons.rpos = cons.wpos = 0;
	if (!serial_exists) {
		kprintf("serial port does not exist!!\n\r");
8001b034:	3c048002 	lui	a0,0x8002
8001b038:	24843acc 	addiu	a0,a0,15052
8001b03c:	0800798a 	j	8001e628 <kprintf>
8001b040:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:215
	}
}
8001b044:	8fbf001c 	lw	ra,28(sp)
8001b048:	8fb00018 	lw	s0,24(sp)
8001b04c:	03e00008 	jr	ra
8001b050:	27bd0020 	addiu	sp,sp,32

8001b054 <cons_putc>:
cons_putc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:219

/* cons_putc - print a single character @c to console devices */
void cons_putc(int c)
{
8001b054:	27bdffe0 	addiu	sp,sp,-32
8001b058:	afbf001c 	sw	ra,28(sp)
8001b05c:	afb00018 	sw	s0,24(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001b060:	40026000 	mfc0	v0,c0_status
8001b064:	30420001 	andi	v0,v0,0x1
8001b068:	1440000e 	bnez	v0,8001b0a4 <cons_putc+0x50>
8001b06c:	00008021 	move	s0,zero
serial_putc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:105
}

/* serial_putc - print character to serial port */
static void serial_putc(int c)
{
	if (c == '\b') {
8001b070:	24020008 	li	v0,8
8001b074:	10820011 	beq	a0,v0,8001b0bc <cons_putc+0x68>
8001b078:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:110
		serial_putc_sub('\b');
		serial_putc_sub(' ');
		serial_putc_sub('\b');
	} else {
		serial_putc_sub(c);
8001b07c:	0c006b55 	jal	8001ad54 <serial_putc_sub>
8001b080:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001b084:	16000004 	bnez	s0,8001b098 <cons_putc+0x44>
8001b088:	8fbf001c 	lw	ra,28(sp)
cons_putc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:229
//#ifdef MACH_FPGA
//		vga_putch(c);
//#endif
	}
	local_intr_restore(intr_flag);
}
8001b08c:	8fb00018 	lw	s0,24(sp)
8001b090:	03e00008 	jr	ra
8001b094:	27bd0020 	addiu	sp,sp,32
8001b098:	8fb00018 	lw	s0,24(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001b09c:	08006cba 	j	8001b2e8 <intr_enable>
8001b0a0:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001b0a4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001b0a8:	afa40010 	sw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8001b0ac:	8fa40010 	lw	a0,16(sp)
serial_putc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:105
}

/* serial_putc - print character to serial port */
static void serial_putc(int c)
{
	if (c == '\b') {
8001b0b0:	24020008 	li	v0,8
8001b0b4:	1482fff1 	bne	a0,v0,8001b07c <cons_putc+0x28>
8001b0b8:	24100001 	li	s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:106
		serial_putc_sub('\b');
8001b0bc:	0c006b55 	jal	8001ad54 <serial_putc_sub>
8001b0c0:	24040008 	li	a0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:107
		serial_putc_sub(' ');
8001b0c4:	0c006b55 	jal	8001ad54 <serial_putc_sub>
8001b0c8:	24040020 	li	a0,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:108
		serial_putc_sub('\b');
8001b0cc:	0c006b55 	jal	8001ad54 <serial_putc_sub>
8001b0d0:	24040008 	li	a0,8
8001b0d4:	08006c21 	j	8001b084 <cons_putc+0x30>
8001b0d8:	00000000 	nop

8001b0dc <cons_getc>:
cons_getc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:236
/* *
 * cons_getc - return the next input character from console,
 * or 0 if none waiting.
 * */
int cons_getc(void)
{
8001b0dc:	27bdffe0 	addiu	sp,sp,-32
8001b0e0:	afbf001c 	sw	ra,28(sp)
8001b0e4:	afb00018 	sw	s0,24(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001b0e8:	40026000 	mfc0	v0,c0_status
8001b0ec:	30420001 	andi	v0,v0,0x1
8001b0f0:	1440001a 	bnez	v0,8001b15c <cons_getc+0x80>
8001b0f4:	00008021 	move	s0,zero
cons_getc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:244
	local_intr_save(intr_flag);
	{
		// poll for any pending input characters,
		// so that this function works even when interrupts are disabled
		// (e.g., when called from the kernel monitor).
		serial_intr();
8001b0f8:	0c006b86 	jal	8001ae18 <serial_intr>
8001b0fc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:247

		// grab the next character from the input buffer.
		if (cons.rpos != cons.wpos) {
8001b100:	3c038015 	lui	v1,0x8015
8001b104:	24636d10 	addiu	v1,v1,27920
8001b108:	8c640200 	lw	a0,512(v1)
8001b10c:	8c650204 	lw	a1,516(v1)
8001b110:	10850007 	beq	a0,a1,8001b130 <cons_getc+0x54>
8001b114:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:248
			c = cons.buf[cons.rpos++];
8001b118:	00831021 	addu	v0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:249
			if (cons.rpos == CONSBUFSIZE) {
8001b11c:	24050200 	li	a1,512
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:248
		// (e.g., when called from the kernel monitor).
		serial_intr();

		// grab the next character from the input buffer.
		if (cons.rpos != cons.wpos) {
			c = cons.buf[cons.rpos++];
8001b120:	24840001 	addiu	a0,a0,1
8001b124:	90420000 	lbu	v0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:249
			if (cons.rpos == CONSBUFSIZE) {
8001b128:	1085000a 	beq	a0,a1,8001b154 <cons_getc+0x78>
8001b12c:	ac640200 	sw	a0,512(v1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001b130:	12000005 	beqz	s0,8001b148 <cons_getc+0x6c>
8001b134:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001b138:	0c006cba 	jal	8001b2e8 <intr_enable>
8001b13c:	afa20010 	sw	v0,16(sp)
8001b140:	8fa20010 	lw	v0,16(sp)
cons_getc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:259
	local_intr_restore(intr_flag);
#ifdef DEBUG_COM1
	if (c) kprintf("cons_get(0x%x)\n\r", c);
#endif
	return c;
}
8001b144:	8fbf001c 	lw	ra,28(sp)
8001b148:	8fb00018 	lw	s0,24(sp)
8001b14c:	03e00008 	jr	ra
8001b150:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:250

		// grab the next character from the input buffer.
		if (cons.rpos != cons.wpos) {
			c = cons.buf[cons.rpos++];
			if (cons.rpos == CONSBUFSIZE) {
				cons.rpos = 0;
8001b154:	08006c4c 	j	8001b130 <cons_getc+0x54>
8001b158:	ac600200 	sw	zero,512(v1)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001b15c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001b160:	24100001 	li	s0,1
8001b164:	08006c3e 	j	8001b0f8 <cons_getc+0x1c>
8001b168:	00000000 	nop

8001b16c <serial_int_handler>:
serial_int_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:134
	}
	return c;
}

void serial_int_handler(void *opaque)
{
8001b16c:	27bdffe8 	addiu	sp,sp,-24
8001b170:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:137

	//int c = serial_proc_data();
	int c = cons_getc();//c);
8001b174:	0c006c37 	jal	8001b0dc <cons_getc>
8001b178:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:140
	extern void dev_stdin_write(char c);
	dev_stdin_write(c);
}
8001b17c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/console.c:139
{

	//int c = serial_proc_data();
	int c = cons_getc();//c);
	extern void dev_stdin_write(char c);
	dev_stdin_write(c);
8001b180:	304400ff 	andi	a0,v0,0xff
8001b184:	08000a8e 	j	80002a38 <dev_stdin_write>
8001b188:	27bd0018 	addiu	sp,sp,24

8001b18c <ide_init>:
ide_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b18c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:33
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
8001b190:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b194:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:36
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
8001b198:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b19c:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:36
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
8001b1a0:	26246f98 	addiu	a0,s1,28568
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:33
// TODO: check if ramdisk are there
void ide_init(void)
{
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
8001b1a4:	24506f18 	addiu	s0,v0,28440
8001b1a8:	ac406f18 	sw	zero,28440(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b1ac:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:33
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
8001b1b0:	ae000040 	sw	zero,64(s0)
8001b1b4:	ae000080 	sw	zero,128(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:36
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
8001b1b8:	0c006d35 	jal	8001b4d4 <ramdisk_init_struct>
8001b1bc:	ae0000c0 	sw	zero,192(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:37
	if (CHECK_CALL(devno, init))
8001b1c0:	8e020080 	lw	v0,128(s0)
8001b1c4:	10400009 	beqz	v0,8001b1ec <ide_init+0x60>
8001b1c8:	8fbf001c 	lw	ra,28(sp)
8001b1cc:	8e1900b4 	lw	t9,180(s0)
8001b1d0:	13200006 	beqz	t9,8001b1ec <ide_init+0x60>
8001b1d4:	26246f98 	addiu	a0,s1,28568
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:40
		ide_devices[devno].init(&ide_devices[devno]);

}
8001b1d8:	8fbf001c 	lw	ra,28(sp)
8001b1dc:	8fb10018 	lw	s1,24(sp)
8001b1e0:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:38
		ide_devices[i].valid = 0;
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
	if (CHECK_CALL(devno, init))
		ide_devices[devno].init(&ide_devices[devno]);
8001b1e4:	03200008 	jr	t9
8001b1e8:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:40

}
8001b1ec:	8fb10018 	lw	s1,24(sp)
8001b1f0:	8fb00014 	lw	s0,20(sp)
8001b1f4:	03e00008 	jr	ra
8001b1f8:	27bd0020 	addiu	sp,sp,32

8001b1fc <ide_device_valid>:
ide_device_valid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:44

bool ide_device_valid(unsigned int ideno)
{
	return VALID_IDE(ideno);
8001b1fc:	2c830004 	sltiu	v1,a0,4
8001b200:	10600007 	beqz	v1,8001b220 <ide_device_valid+0x24>
8001b204:	00001021 	move	v0,zero
8001b208:	3c028015 	lui	v0,0x8015
8001b20c:	24426f18 	addiu	v0,v0,28440
8001b210:	00042180 	sll	a0,a0,0x6
8001b214:	00822021 	addu	a0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:42
	if (CHECK_CALL(devno, init))
		ide_devices[devno].init(&ide_devices[devno]);

}

bool ide_device_valid(unsigned int ideno)
8001b218:	8c820000 	lw	v0,0(a0)
8001b21c:	0002102b 	sltu	v0,zero,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:45
{
	return VALID_IDE(ideno);
}
8001b220:	03e00008 	jr	ra
8001b224:	00000000 	nop

8001b228 <ide_device_size>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:44

}

bool ide_device_valid(unsigned int ideno)
{
	return VALID_IDE(ideno);
8001b228:	2c830004 	sltiu	v1,a0,4
8001b22c:	10600008 	beqz	v1,8001b250 <ide_device_size+0x28>
8001b230:	00001021 	move	v0,zero
8001b234:	3c038015 	lui	v1,0x8015
8001b238:	24636f18 	addiu	v1,v1,28440
8001b23c:	00042180 	sll	a0,a0,0x6
8001b240:	00832021 	addu	a0,a0,v1
8001b244:	8c830000 	lw	v1,0(a0)
8001b248:	54600001 	bnezl	v1,8001b250 <ide_device_size+0x28>
8001b24c:	8c820008 	lw	v0,8(a0)
ide_device_size():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:53
{
	if (ide_device_valid(ideno)) {
		return ide_devices[ideno].size;
	}
	return 0;
}
8001b250:	03e00008 	jr	ra
8001b254:	00000000 	nop

8001b258 <ide_read_secs>:
ide_read_secs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:57

int ide_read_secs(unsigned int ideno, uint32_t secno, void *dst, size_t nsecs)
{
	if (CHECK_CALL(ideno, read_secs))
8001b258:	2c820004 	sltiu	v0,a0,4
8001b25c:	1040000c 	beqz	v0,8001b290 <ide_read_secs+0x38>
8001b260:	00042180 	sll	a0,a0,0x6
8001b264:	3c028015 	lui	v0,0x8015
8001b268:	24426f18 	addiu	v0,v0,28440
8001b26c:	00822021 	addu	a0,a0,v0
8001b270:	8c820000 	lw	v0,0(a0)
8001b274:	10400008 	beqz	v0,8001b298 <ide_read_secs+0x40>
8001b278:	00001021 	move	v0,zero
8001b27c:	8c990038 	lw	t9,56(a0)
8001b280:	13200005 	beqz	t9,8001b298 <ide_read_secs+0x40>
8001b284:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:58
		return ide_devices[ideno].read_secs(&ide_devices[ideno], secno,
8001b288:	03200008 	jr	t9
8001b28c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:61
						    dst, nsecs);
	return 0;
}
8001b290:	03e00008 	jr	ra
8001b294:	00001021 	move	v0,zero
8001b298:	03e00008 	jr	ra
8001b29c:	00000000 	nop

8001b2a0 <ide_write_secs>:
ide_write_secs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:67

int
ide_write_secs(unsigned int ideno, uint32_t secno, const void *src,
	       size_t nsecs)
{
	if (CHECK_CALL(ideno, write_secs))
8001b2a0:	2c820004 	sltiu	v0,a0,4
8001b2a4:	1040000c 	beqz	v0,8001b2d8 <ide_write_secs+0x38>
8001b2a8:	00042180 	sll	a0,a0,0x6
8001b2ac:	3c028015 	lui	v0,0x8015
8001b2b0:	24426f18 	addiu	v0,v0,28440
8001b2b4:	00822021 	addu	a0,a0,v0
8001b2b8:	8c820000 	lw	v0,0(a0)
8001b2bc:	10400008 	beqz	v0,8001b2e0 <ide_write_secs+0x40>
8001b2c0:	00001021 	move	v0,zero
8001b2c4:	8c99003c 	lw	t9,60(a0)
8001b2c8:	13200005 	beqz	t9,8001b2e0 <ide_write_secs+0x40>
8001b2cc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:68
		return ide_devices[ideno].write_secs(&ide_devices[ideno], secno,
8001b2d0:	03200008 	jr	t9
8001b2d4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ide.c:71
						     src, nsecs);
	return 0;
}
8001b2d8:	03e00008 	jr	ra
8001b2dc:	00001021 	move	v0,zero
8001b2e0:	03e00008 	jr	ra
8001b2e4:	00000000 	nop

8001b2e8 <intr_enable>:
intr_enable():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.c:12

/* intr_enable - enable irq interrupt */
void intr_enable(void)
{
	uint32_t x;
	get_status(x);
8001b2e8:	40026000 	mfc0	v0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.c:13
	x |= ST0_IE;
8001b2ec:	34420001 	ori	v0,v0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.c:16
	set_status(x);

}
8001b2f0:	03e00008 	jr	ra
8001b2f4:	40826000 	mtc0	v0,c0_status

8001b2f8 <intr_disable>:
intr_disable():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.c:22

/* intr_disable - disable irq interrupt */
void intr_disable(void)
{
	uint32_t x;
	get_status(x);
8001b2f8:	40036000 	mfc0	v1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.c:23
	x &= ~ST0_IE;
8001b2fc:	2402fffe 	li	v0,-2
8001b300:	00621024 	and	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.c:25
	set_status(x);
}
8001b304:	03e00008 	jr	ra
8001b308:	40826000 	mtc0	v0,c0_status

8001b30c <pic_enable>:
pic_enable():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:10
#include <asm/mipsregs.h>

static bool did_init = 0;

void pic_enable(unsigned int irq)
{
8001b30c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:11
	assert(irq < 8);
8001b310:	2c820008 	sltiu	v0,a0,8
8001b314:	1040000a 	beqz	v0,8001b340 <pic_enable+0x34>
8001b318:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:12
	uint32_t sr = read_c0_status();
8001b31c:	40036000 	mfc0	v1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:13
	sr |= 1 << (irq + STATUSB_IP0);
8001b320:	24020001 	li	v0,1
8001b324:	24840008 	addiu	a0,a0,8
8001b328:	00821004 	sllv	v0,v0,a0
8001b32c:	00622025 	or	a0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:14
	write_c0_status(sr);
8001b330:	40846000 	mtc0	a0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:15
}
8001b334:	8fbf0014 	lw	ra,20(sp)
8001b338:	03e00008 	jr	ra
8001b33c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:11

static bool did_init = 0;

void pic_enable(unsigned int irq)
{
	assert(irq < 8);
8001b340:	3c048002 	lui	a0,0x8002
8001b344:	3c068002 	lui	a2,0x8002
8001b348:	3c078002 	lui	a3,0x8002
8001b34c:	24843aec 	addiu	a0,a0,15084
8001b350:	2405000b 	li	a1,11
8001b354:	24c609b0 	addiu	a2,a2,2480
8001b358:	0c006afd 	jal	8001abf4 <__panic>
8001b35c:	24e73af8 	addiu	a3,a3,15096

8001b360 <pic_disable>:
pic_disable():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:18
	sr |= 1 << (irq + STATUSB_IP0);
	write_c0_status(sr);
}

void pic_disable(unsigned int irq)
{
8001b360:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:19
	assert(irq < 8);
8001b364:	2c820008 	sltiu	v0,a0,8
8001b368:	1040000b 	beqz	v0,8001b398 <pic_disable+0x38>
8001b36c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:20
	uint32_t sr = read_c0_status();
8001b370:	40036000 	mfc0	v1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:21
	sr &= ~(1 << (irq + STATUSB_IP0));
8001b374:	24020001 	li	v0,1
8001b378:	24840008 	addiu	a0,a0,8
8001b37c:	00821004 	sllv	v0,v0,a0
8001b380:	00021027 	nor	v0,zero,v0
8001b384:	00622024 	and	a0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:22
	write_c0_status(sr);
8001b388:	40846000 	mtc0	a0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:23
}
8001b38c:	8fbf0014 	lw	ra,20(sp)
8001b390:	03e00008 	jr	ra
8001b394:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:19
	write_c0_status(sr);
}

void pic_disable(unsigned int irq)
{
	assert(irq < 8);
8001b398:	3c048002 	lui	a0,0x8002
8001b39c:	3c068002 	lui	a2,0x8002
8001b3a0:	3c078002 	lui	a3,0x8002
8001b3a4:	24843aec 	addiu	a0,a0,15084
8001b3a8:	24050013 	li	a1,19
8001b3ac:	24c609b0 	addiu	a2,a2,2480
8001b3b0:	0c006afd 	jal	8001abf4 <__panic>
8001b3b4:	24e73af8 	addiu	a3,a3,15096

8001b3b8 <pic_init>:
pic_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:27
	write_c0_status(sr);
}

void pic_init(void)
{
	uint32_t sr = read_c0_status();
8001b3b8:	40026000 	mfc0	v0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:29
	/* disable all */
	sr &= ~ST0_IM;
8001b3bc:	3c03ffff 	lui	v1,0xffff
8001b3c0:	246300ff 	addiu	v1,v1,255
8001b3c4:	00431024 	and	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:30
	write_c0_status(sr);
8001b3c8:	40826000 	mtc0	v0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:31
	did_init = 1;
8001b3cc:	24030001 	li	v1,1
8001b3d0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/picirq.c:32
}
8001b3d4:	03e00008 	jr	ra
8001b3d8:	ac437018 	sw	v1,28696(v0)

8001b3dc <ramdisk_write>:
ramdisk_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:58

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
	//kprintf("%08x(%d) %08x(%d)\n\r", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
8001b3dc:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:61
	if (nsecs < 0)
		return -1;
	memcpy((void *)(dev->iobase + secno * SECTSIZE), src, nsecs * SECTSIZE);
8001b3e0:	8c83000c 	lw	v1,12(a0)
8001b3e4:	00052240 	sll	a0,a1,0x9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:58

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
	//kprintf("%08x(%d) %08x(%d)\n\r", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
8001b3e8:	00451023 	subu	v0,v0,a1
8001b3ec:	0047402b 	sltu	t0,v0,a3
8001b3f0:	0048380b 	movn	a3,v0,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:56
	return 0;
}

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
8001b3f4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:61
	//kprintf("%08x(%d) %08x(%d)\n\r", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
	if (nsecs < 0)
		return -1;
	memcpy((void *)(dev->iobase + secno * SECTSIZE), src, nsecs * SECTSIZE);
8001b3f8:	00c02821 	move	a1,a2
8001b3fc:	00832021 	addu	a0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:56
	return 0;
}

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
8001b400:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:61
	//kprintf("%08x(%d) %08x(%d)\n\r", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
	if (nsecs < 0)
		return -1;
	memcpy((void *)(dev->iobase + secno * SECTSIZE), src, nsecs * SECTSIZE);
8001b404:	0c005c6e 	jal	800171b8 <memcpy>
8001b408:	00073240 	sll	a2,a3,0x9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:63
	return 0;
}
8001b40c:	8fbf0014 	lw	ra,20(sp)
8001b410:	00001021 	move	v0,zero
8001b414:	03e00008 	jr	ra
8001b418:	27bd0018 	addiu	sp,sp,24

8001b41c <ramdisk_read>:
ramdisk_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:47
}

static int ramdisk_read(struct ide_device *dev, size_t secno, void *dst,
			size_t nsecs)
{
	nsecs = MIN(nsecs, dev->size - secno);
8001b41c:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:50
	if (nsecs < 0)
		return -1;
	memcpy(dst, (void *)(dev->iobase + secno * SECTSIZE), nsecs * SECTSIZE);
8001b420:	8c83000c 	lw	v1,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:46
	return 1;
}

static int ramdisk_read(struct ide_device *dev, size_t secno, void *dst,
			size_t nsecs)
{
8001b424:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:47
	nsecs = MIN(nsecs, dev->size - secno);
8001b428:	00451023 	subu	v0,v0,a1
8001b42c:	0047202b 	sltu	a0,v0,a3
8001b430:	0044380b 	movn	a3,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:50
	if (nsecs < 0)
		return -1;
	memcpy(dst, (void *)(dev->iobase + secno * SECTSIZE), nsecs * SECTSIZE);
8001b434:	00052a40 	sll	a1,a1,0x9
8001b438:	00c02021 	move	a0,a2
8001b43c:	00a32821 	addu	a1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:46
	return 1;
}

static int ramdisk_read(struct ide_device *dev, size_t secno, void *dst,
			size_t nsecs)
{
8001b440:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:50
	nsecs = MIN(nsecs, dev->size - secno);
	if (nsecs < 0)
		return -1;
	memcpy(dst, (void *)(dev->iobase + secno * SECTSIZE), nsecs * SECTSIZE);
8001b444:	0c005c6e 	jal	800171b8 <memcpy>
8001b448:	00073240 	sll	a2,a3,0x9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:52
	return 0;
}
8001b44c:	8fbf0014 	lw	ra,20(sp)
8001b450:	00001021 	move	v0,zero
8001b454:	03e00008 	jr	ra
8001b458:	27bd0018 	addiu	sp,sp,24

8001b45c <ramdisk_init>:
ramdisk_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:67
	return 0;
}

static void ramdisk_init(struct ide_device *dev)
{
	kprintf("ramdisk_init(): initrd found, magic: 0x%08x, 0x%08x secs\n\r",
8001b45c:	8c82000c 	lw	v0,12(a0)
8001b460:	8c860008 	lw	a2,8(a0)
8001b464:	3c048002 	lui	a0,0x8002
8001b468:	8c450000 	lw	a1,0(v0)
8001b46c:	0800798a 	j	8001e628 <kprintf>
8001b470:	24843b00 	addiu	a0,a0,15104

8001b474 <check_initrd>:
check_initrd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:33

//char initrd_begin[], initrd_end[];

bool check_initrd()
{
	if (_initrd_begin == _initrd_end) {
8001b474:	3c028002 	lui	v0,0x8002
8001b478:	3c078015 	lui	a3,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:32
#define MIN(x,y) (((x)<(y))?(x):(y))

//char initrd_begin[], initrd_end[];

bool check_initrd()
{
8001b47c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:33
	if (_initrd_begin == _initrd_end) {
8001b480:	24457450 	addiu	a1,v0,29776
8001b484:	24e73450 	addiu	a3,a3,13392
8001b488:	14a70008 	bne	a1,a3,8001b4ac <check_initrd+0x38>
8001b48c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:34
		kprintf("Warning: No Initrd!\n\r");
8001b490:	3c048002 	lui	a0,0x8002
8001b494:	0c00798a 	jal	8001e628 <kprintf>
8001b498:	24843b3c 	addiu	a0,a0,15164
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:35
		return 0;
8001b49c:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:42

	kprintf("Initrd: 0x%08x - 0x%08x, size: 0x%08x, magic: 0x%08x\n\r",
		_initrd_begin, _initrd_end - 1, _initrd_end - _initrd_begin,
		*(uint32_t *) _initrd_begin);
	return 1;
}
8001b4a0:	8fbf001c 	lw	ra,28(sp)
8001b4a4:	03e00008 	jr	ra
8001b4a8:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:38
	if (_initrd_begin == _initrd_end) {
		kprintf("Warning: No Initrd!\n\r");
		return 0;
	}

	kprintf("Initrd: 0x%08x - 0x%08x, size: 0x%08x, magic: 0x%08x\n\r",
8001b4ac:	8c427450 	lw	v0,29776(v0)
8001b4b0:	3c048002 	lui	a0,0x8002
8001b4b4:	3c068015 	lui	a2,0x8015
8001b4b8:	24843b54 	addiu	a0,a0,15188
8001b4bc:	24c6344f 	addiu	a2,a2,13391
8001b4c0:	00e53823 	subu	a3,a3,a1
8001b4c4:	0c00798a 	jal	8001e628 <kprintf>
8001b4c8:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:41
		_initrd_begin, _initrd_end - 1, _initrd_end - _initrd_begin,
		*(uint32_t *) _initrd_begin);
	return 1;
8001b4cc:	08006d28 	j	8001b4a0 <check_initrd+0x2c>
8001b4d0:	24020001 	li	v0,1

8001b4d4 <ramdisk_init_struct>:
ramdisk_init_struct():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:73
		*(uint32_t *) (dev->iobase), dev->size);

}

void ramdisk_init_struct(struct ide_device *dev)
{
8001b4d4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:74
	memset(dev, 0, sizeof(struct ide_device));
8001b4d8:	00002821 	move	a1,zero
8001b4dc:	24060040 	li	a2,64
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:73
		*(uint32_t *) (dev->iobase), dev->size);

}

void ramdisk_init_struct(struct ide_device *dev)
{
8001b4e0:	afb00010 	sw	s0,16(sp)
8001b4e4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:74
	memset(dev, 0, sizeof(struct ide_device));
8001b4e8:	0c005c44 	jal	80017110 <memset>
8001b4ec:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:75
	assert(INITRD_SIZE() % SECTSIZE == 0);
8001b4f0:	3c048015 	lui	a0,0x8015
8001b4f4:	3c038002 	lui	v1,0x8002
8001b4f8:	24843450 	addiu	a0,a0,13392
8001b4fc:	24637450 	addiu	v1,v1,29776
8001b500:	00831023 	subu	v0,a0,v1
8001b504:	304501ff 	andi	a1,v0,0x1ff
8001b508:	10a00008 	beqz	a1,8001b52c <ramdisk_init_struct+0x58>
8001b50c:	3c068002 	lui	a2,0x8002
8001b510:	3c048002 	lui	a0,0x8002
8001b514:	3c078002 	lui	a3,0x8002
8001b518:	24843b8c 	addiu	a0,a0,15244
8001b51c:	2405004b 	li	a1,75
8001b520:	24c609b0 	addiu	a2,a2,2480
8001b524:	0c006afd 	jal	8001abf4 <__panic>
8001b528:	24e73b98 	addiu	a3,a3,15256
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:76
	if (CHECK_INITRD_EXIST()) {
8001b52c:	10830017 	beq	a0,v1,8001b58c <ramdisk_init_struct+0xb8>
8001b530:	244401ff 	addiu	a0,v0,511
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:79
		dev->valid = 1;
		dev->sets = ~0;
		dev->size = INITRD_SIZE() / SECTSIZE;
8001b534:	28450000 	slti	a1,v0,0
8001b538:	0085100b 	movn	v0,a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:77
void ramdisk_init_struct(struct ide_device *dev)
{
	memset(dev, 0, sizeof(struct ide_device));
	assert(INITRD_SIZE() % SECTSIZE == 0);
	if (CHECK_INITRD_EXIST()) {
		dev->valid = 1;
8001b53c:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:79
		dev->sets = ~0;
		dev->size = INITRD_SIZE() / SECTSIZE;
8001b540:	00021243 	sra	v0,v0,0x9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:77
void ramdisk_init_struct(struct ide_device *dev)
{
	memset(dev, 0, sizeof(struct ide_device));
	assert(INITRD_SIZE() % SECTSIZE == 0);
	if (CHECK_INITRD_EXIST()) {
		dev->valid = 1;
8001b544:	ae040000 	sw	a0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:81
		dev->sets = ~0;
		dev->size = INITRD_SIZE() / SECTSIZE;
		dev->iobase = (uintptr_t) _initrd_begin;
		strcpy(dev->model, "KERN_INITRD");
8001b548:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:78
{
	memset(dev, 0, sizeof(struct ide_device));
	assert(INITRD_SIZE() % SECTSIZE == 0);
	if (CHECK_INITRD_EXIST()) {
		dev->valid = 1;
		dev->sets = ~0;
8001b54c:	2404ffff 	li	a0,-1
8001b550:	ae040004 	sw	a0,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:79
		dev->size = INITRD_SIZE() / SECTSIZE;
8001b554:	ae020008 	sw	v0,8(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:80
		dev->iobase = (uintptr_t) _initrd_begin;
8001b558:	ae03000c 	sw	v1,12(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:81
		strcpy(dev->model, "KERN_INITRD");
8001b55c:	26040014 	addiu	a0,s0,20
8001b560:	0c005b84 	jal	80016e10 <strcpy>
8001b564:	24a53bb8 	addiu	a1,a1,15288
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:82
		dev->init = ramdisk_init;
8001b568:	3c028002 	lui	v0,0x8002
8001b56c:	2442b45c 	addiu	v0,v0,-19364
8001b570:	ae020034 	sw	v0,52(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:83
		dev->read_secs = ramdisk_read;
8001b574:	3c028002 	lui	v0,0x8002
8001b578:	2442b41c 	addiu	v0,v0,-19428
8001b57c:	ae020038 	sw	v0,56(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:84
		dev->write_secs = ramdisk_write;
8001b580:	3c028002 	lui	v0,0x8002
8001b584:	2442b3dc 	addiu	v0,v0,-19492
8001b588:	ae02003c 	sw	v0,60(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/ramdisk.c:86
	}
}
8001b58c:	8fbf0014 	lw	ra,20(sp)
8001b590:	8fb00010 	lw	s0,16(sp)
8001b594:	03e00008 	jr	ra
8001b598:	27bd0018 	addiu	sp,sp,24

8001b59c <render_char>:
render_char():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:30
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
8001b59c:	3c078015 	lui	a3,0x8015
8001b5a0:	24e7733c 	addiu	a3,a3,29500
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b5a4:	000518c0 	sll	v1,a1,0x3
8001b5a8:	00051140 	sll	v0,a1,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:30
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
8001b5ac:	00054880 	sll	t1,a1,0x2
8001b5b0:	01274821 	addu	t1,t1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b5b4:	00624021 	addu	t0,v1,v0
8001b5b8:	3c078015 	lui	a3,0x8015
8001b5bc:	01064021 	addu	t0,t0,a2
8001b5c0:	24e7738c 	addiu	a3,a3,29580
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:30
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
8001b5c4:	8d2a0000 	lw	t2,0(t1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b5c8:	00e84821 	addu	t1,a3,t0
8001b5cc:	91290000 	lbu	t1,0(t1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:28
static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
8001b5d0:	2488ffe0 	addiu	t0,a0,-32
8001b5d4:	2d080060 	sltiu	t0,t0,96
8001b5d8:	24180020 	li	t8,32
8001b5dc:	0088c00b 	movn	t8,a0,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:30
		ch = ' ';
	buf[row][col] = ch;
8001b5e0:	01465021 	addu	t2,t2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b5e4:	1138002a 	beq	t1,t8,8001b690 <render_char+0xf4>
8001b5e8:	a1580000 	sb	t8,0(t2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:37
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b5ec:	00065840 	sll	t3,a2,0x1
8001b5f0:	00055240 	sll	t2,a1,0x9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b5f4:	00182100 	sll	a0,t8,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b5f8:	000648c0 	sll	t1,a2,0x3
8001b5fc:	00052b40 	sll	a1,a1,0xd
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b600:	00184080 	sll	t0,t8,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b604:	01694821 	addu	t1,t3,t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b608:	01044021 	addu	t0,t0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b60c:	00aa2823 	subu	a1,a1,t2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b610:	3c0c8002 	lui	t4,0x8002
8001b614:	2508fd80 	addiu	t0,t0,-640
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b618:	01252821 	addu	a1,t1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b61c:	258cfd84 	addiu	t4,t4,-636
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b620:	00052880 	sll	a1,a1,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b624:	01886021 	addu	t4,t4,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:36
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
8001b628:	3c04ba00 	lui	a0,0xba00
8001b62c:	00a42021 	addu	a0,a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:34
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
8001b630:	8d850000 	lw	a1,0(t4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:27

static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
8001b634:	248f7800 	addiu	t7,a0,30720
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:35
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
8001b638:	00004021 	move	t0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:40
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
			if (pos == 32) {
8001b63c:	240b0020 	li	t3,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:45
				pos = 0;
				cur_bitmap = *(++ bitmap);
			}
			if (cur_bitmap & 1)
				*dest = COLOR;
8001b640:	240d00ff 	li	t5,255
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:27

static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
8001b644:	00807021 	move	t6,a0
8001b648:	248a0028 	addiu	t2,a0,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:40
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
			if (pos == 32) {
8001b64c:	510b0015 	beql	t0,t3,8001b6a4 <render_char+0x108>
8001b650:	8d850004 	lw	a1,4(t4)
8001b654:	25080001 	addiu	t0,t0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:44
				pos = 0;
				cur_bitmap = *(++ bitmap);
			}
			if (cur_bitmap & 1)
8001b658:	30a90001 	andi	t1,a1,0x1
8001b65c:	1120000e 	beqz	t1,8001b698 <render_char+0xfc>
8001b660:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:45
				*dest = COLOR;
8001b664:	ac8d0000 	sw	t5,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:48
			else
				*dest = 0;
			dest ++;
8001b668:	24840004 	addiu	a0,a0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:39
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
8001b66c:	148afff7 	bne	a0,t2,8001b64c <render_char+0xb0>
8001b670:	00052842 	srl	a1,a1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:27

static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
8001b674:	25c40800 	addiu	a0,t6,2048
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:38
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
8001b678:	15e4fff3 	bne	t7,a0,8001b648 <render_char+0xac>
8001b67c:	00807021 	move	t6,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:53
			dest ++;
			cur_bitmap >>= 1;
		}
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
8001b680:	00621021 	addu	v0,v1,v0
8001b684:	00463021 	addu	a2,v0,a2
8001b688:	00e63821 	addu	a3,a3,a2
8001b68c:	a0f80000 	sb	t8,0(a3)
8001b690:	03e00008 	jr	ra
8001b694:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:47
				cur_bitmap = *(++ bitmap);
			}
			if (cur_bitmap & 1)
				*dest = COLOR;
			else
				*dest = 0;
8001b698:	ac800000 	sw	zero,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:48
			dest ++;
8001b69c:	08006d9b 	j	8001b66c <render_char+0xd0>
8001b6a0:	24840004 	addiu	a0,a0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:42
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
			if (pos == 32) {
				pos = 0;
				cur_bitmap = *(++ bitmap);
8001b6a4:	24080001 	li	t0,1
8001b6a8:	08006d96 	j	8001b658 <render_char+0xbc>
8001b6ac:	258c0004 	addiu	t4,t4,4

8001b6b0 <vga_init>:
vga_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b6b0:	27bdffc8 	addiu	sp,sp,-56
8001b6b4:	afbe0030 	sw	s8,48(sp)
8001b6b8:	afb10014 	sw	s1,20(sp)
8001b6bc:	3c1e8015 	lui	s8,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b6c0:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b6c4:	afb60028 	sw	s6,40(sp)
8001b6c8:	2631701c 	addiu	s1,s1,28700
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b6cc:	3c168015 	lui	s6,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b6d0:	27de738c 	addiu	s8,s8,29580
8001b6d4:	afb7002c 	sw	s7,44(sp)
8001b6d8:	afb50024 	sw	s5,36(sp)
8001b6dc:	afb40020 	sw	s4,32(sp)
8001b6e0:	afb20018 	sw	s2,24(sp)
8001b6e4:	afbf0034 	sw	ra,52(sp)
8001b6e8:	afb3001c 	sw	s3,28(sp)
8001b6ec:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b6f0:	26d6733c 	addiu	s6,s6,29500
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:58
	actual_screen[row][col] = ch;
}

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
8001b6f4:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b6f8:	03d1f023 	subu	s8,s8,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:62
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
8001b6fc:	2415ffff 	li	s5,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b700:	24140028 	li	s4,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:58
	actual_screen[row][col] = ch;
}

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
8001b704:	24170014 	li	s7,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:59
		buf[i] = buf_mem[i];
8001b708:	aed10000 	sw	s1,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60
		for (j = 0; j < NR_COL; j ++) {
8001b70c:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b710:	03d19821 	addu	s3,s8,s1
8001b714:	02301821 	addu	v1,s1,s0
8001b718:	02701021 	addu	v0,s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:63
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
			render_char(0, i, j);
8001b71c:	02003021 	move	a2,s0
8001b720:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b724:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:63
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
			render_char(0, i, j);
8001b728:	02402821 	move	a1,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:61
void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
			buf_mem[i][j] = 0;
8001b72c:	a0600000 	sb	zero,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:63
			actual_screen[i][j] = -1;
			render_char(0, i, j);
8001b730:	0c006d67 	jal	8001b59c <render_char>
8001b734:	a0550000 	sb	s5,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:60

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b738:	1614fff7 	bne	s0,s4,8001b718 <vga_init+0x68>
8001b73c:	02301821 	addu	v1,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:58
	actual_screen[row][col] = ch;
}

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
8001b740:	26520001 	addiu	s2,s2,1
8001b744:	26310028 	addiu	s1,s1,40
8001b748:	1657ffef 	bne	s2,s7,8001b708 <vga_init+0x58>
8001b74c:	26d60004 	addiu	s6,s6,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:69
		}
	}
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}
8001b750:	8fbf0034 	lw	ra,52(sp)
8001b754:	8fbe0030 	lw	s8,48(sp)
8001b758:	8fb7002c 	lw	s7,44(sp)
8001b75c:	8fb60028 	lw	s6,40(sp)
8001b760:	8fb50024 	lw	s5,36(sp)
8001b764:	8fb40020 	lw	s4,32(sp)
8001b768:	8fb3001c 	lw	s3,28(sp)
8001b76c:	8fb20018 	lw	s2,24(sp)
8001b770:	8fb10014 	lw	s1,20(sp)
8001b774:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:66
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
			render_char(0, i, j);
		}
	}
	row = 0;
8001b778:	3c028015 	lui	v0,0x8015
8001b77c:	ac4076ac 	sw	zero,30380(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:68
	col = 0;
	render_char('_', 0, 0);
8001b780:	2404005f 	li	a0,95
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:67
			actual_screen[i][j] = -1;
			render_char(0, i, j);
		}
	}
	row = 0;
	col = 0;
8001b784:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:68
	render_char('_', 0, 0);
8001b788:	00002821 	move	a1,zero
8001b78c:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:69
}
8001b790:	27bd0038 	addiu	sp,sp,56
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:68
			render_char(0, i, j);
		}
	}
	row = 0;
	col = 0;
	render_char('_', 0, 0);
8001b794:	08006d67 	j	8001b59c <render_char>
8001b798:	ac4076b0 	sw	zero,30384(v0)

8001b79c <vga_redraw>:
vga_redraw():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:71
}

void vga_redraw() {
8001b79c:	27bdffc8 	addiu	sp,sp,-56
8001b7a0:	afb6002c 	sw	s6,44(sp)
8001b7a4:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:73
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b7a8:	3c168015 	lui	s6,0x8015
8001b7ac:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:71
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}

void vga_redraw() {
8001b7b0:	afb70030 	sw	s7,48(sp)
8001b7b4:	afb50028 	sw	s5,40(sp)
8001b7b8:	afb40024 	sw	s4,36(sp)
8001b7bc:	afb10018 	sw	s1,24(sp)
8001b7c0:	afbf0034 	sw	ra,52(sp)
8001b7c4:	afb30020 	sw	s3,32(sp)
8001b7c8:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:73
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b7cc:	26d6733c 	addiu	s6,s6,29500
8001b7d0:	2652738c 	addiu	s2,s2,29580
8001b7d4:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:75
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
8001b7d8:	2415ffff 	li	s5,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:74
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
8001b7dc:	24140028 	li	s4,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:73
	render_char('_', 0, 0);
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b7e0:	24170014 	li	s7,20
8001b7e4:	8ed30000 	lw	s3,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:71
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}

void vga_redraw() {
8001b7e8:	00008021 	move	s0,zero
8001b7ec:	02501021 	addu	v0,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:75
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
8001b7f0:	a0550000 	sb	s5,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:71
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}

void vga_redraw() {
8001b7f4:	02701021 	addu	v0,s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:76
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
8001b7f8:	90440000 	lbu	a0,0(v0)
8001b7fc:	02003021 	move	a2,s0
8001b800:	02202821 	move	a1,s1
8001b804:	0c006d67 	jal	8001b59c <render_char>
8001b808:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:74
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
8001b80c:	1614fff8 	bne	s0,s4,8001b7f0 <vga_redraw+0x54>
8001b810:	02501021 	addu	v0,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:73
	render_char('_', 0, 0);
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b814:	26310001 	addiu	s1,s1,1
8001b818:	26d60004 	addiu	s6,s6,4
8001b81c:	1637fff1 	bne	s1,s7,8001b7e4 <vga_redraw+0x48>
8001b820:	26520028 	addiu	s2,s2,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:78
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}
8001b824:	8fbf0034 	lw	ra,52(sp)
8001b828:	8fb70030 	lw	s7,48(sp)
8001b82c:	8fb6002c 	lw	s6,44(sp)
8001b830:	8fb50028 	lw	s5,40(sp)
8001b834:	8fb40024 	lw	s4,36(sp)
8001b838:	8fb30020 	lw	s3,32(sp)
8001b83c:	8fb2001c 	lw	s2,28(sp)
8001b840:	8fb10018 	lw	s1,24(sp)
8001b844:	8fb00014 	lw	s0,20(sp)
8001b848:	03e00008 	jr	ra
8001b84c:	27bd0038 	addiu	sp,sp,56

8001b850 <vga_putch>:
vga_putch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:82

void vga_putch(int ch) {
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b850:	3c028015 	lui	v0,0x8015
8001b854:	8c4376b4 	lw	v1,30388(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001b858:	27bdffd0 	addiu	sp,sp,-48
8001b85c:	afb00010 	sw	s0,16(sp)
8001b860:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:82
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b864:	2404000d 	li	a0,13
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001b868:	afbf002c 	sw	ra,44(sp)
8001b86c:	afb60028 	sw	s6,40(sp)
8001b870:	afb50024 	sw	s5,36(sp)
8001b874:	afb40020 	sw	s4,32(sp)
8001b878:	afb3001c 	sw	s3,28(sp)
8001b87c:	afb20018 	sw	s2,24(sp)
8001b880:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:82
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b884:	10640028 	beq	v1,a0,8001b928 <vga_putch+0xd8>
8001b888:	ac5076b4 	sw	s0,30388(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:87
		prev_ch = ch;
		return;
	}
	prev_ch = ch;
	if (ch == '\b') {
8001b88c:	24020008 	li	v0,8
8001b890:	12020032 	beq	s0,v0,8001b95c <vga_putch+0x10c>
8001b894:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:94
		if (col)
			col --;
		render_char('_', row, col);
		return;
	}
	render_char(ch, row, col);
8001b898:	3c138015 	lui	s3,0x8015
8001b89c:	8e3276b0 	lw	s2,30384(s1)
8001b8a0:	8e7576ac 	lw	s5,30380(s3)
8001b8a4:	02002021 	move	a0,s0
8001b8a8:	02403021 	move	a2,s2
8001b8ac:	0c006d67 	jal	8001b59c <render_char>
8001b8b0:	02a02821 	move	a1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:95
	col ++;
8001b8b4:	26460001 	addiu	a2,s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:96
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
8001b8b8:	2402000d 	li	v0,13
8001b8bc:	12020012 	beq	s0,v0,8001b908 <vga_putch+0xb8>
8001b8c0:	ae2676b0 	sw	a2,30384(s1)
8001b8c4:	2402000a 	li	v0,10
8001b8c8:	1202000f 	beq	s0,v0,8001b908 <vga_putch+0xb8>
8001b8cc:	24020028 	li	v0,40
8001b8d0:	10c2000e 	beq	a2,v0,8001b90c <vga_putch+0xbc>
8001b8d4:	26a20001 	addiu	v0,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:114
			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
8001b8d8:	02a02821 	move	a1,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:115
}
8001b8dc:	8fbf002c 	lw	ra,44(sp)
8001b8e0:	8fb60028 	lw	s6,40(sp)
8001b8e4:	8fb50024 	lw	s5,36(sp)
8001b8e8:	8fb40020 	lw	s4,32(sp)
8001b8ec:	8fb3001c 	lw	s3,28(sp)
8001b8f0:	8fb20018 	lw	s2,24(sp)
8001b8f4:	8fb10014 	lw	s1,20(sp)
8001b8f8:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:114
			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
8001b8fc:	2404005f 	li	a0,95
8001b900:	08006d67 	j	8001b59c <render_char>
8001b904:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:97
		return;
	}
	render_char(ch, row, col);
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
8001b908:	26a20001 	addiu	v0,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:99
		col = 0;
		if (row == NR_ROW) {
8001b90c:	24030014 	li	v1,20
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:97
		return;
	}
	render_char(ch, row, col);
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
8001b910:	ae6276ac 	sw	v0,30380(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:99
		col = 0;
		if (row == NR_ROW) {
8001b914:	10430029 	beq	v0,v1,8001b9bc <vga_putch+0x16c>
8001b918:	ae2076b0 	sw	zero,30384(s1)
8001b91c:	0040a821 	move	s5,v0
8001b920:	08006e36 	j	8001b8d8 <vga_putch+0x88>
8001b924:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:82
		}
}

void vga_putch(int ch) {
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b928:	2403000a 	li	v1,10
8001b92c:	1603ffd8 	bne	s0,v1,8001b890 <vga_putch+0x40>
8001b930:	24020008 	li	v0,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:115
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
}
8001b934:	8fbf002c 	lw	ra,44(sp)
8001b938:	8fb60028 	lw	s6,40(sp)
8001b93c:	8fb50024 	lw	s5,36(sp)
8001b940:	8fb40020 	lw	s4,32(sp)
8001b944:	8fb3001c 	lw	s3,28(sp)
8001b948:	8fb20018 	lw	s2,24(sp)
8001b94c:	8fb10014 	lw	s1,20(sp)
8001b950:	8fb00010 	lw	s0,16(sp)
8001b954:	03e00008 	jr	ra
8001b958:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:88
		prev_ch = ch;
		return;
	}
	prev_ch = ch;
	if (ch == '\b') {
		render_char(' ', row, col);
8001b95c:	3c028015 	lui	v0,0x8015
8001b960:	3c128015 	lui	s2,0x8015
8001b964:	8c5176ac 	lw	s1,30380(v0)
8001b968:	8e5076b0 	lw	s0,30384(s2)
8001b96c:	24040020 	li	a0,32
8001b970:	02202821 	move	a1,s1
8001b974:	0c006d67 	jal	8001b59c <render_char>
8001b978:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:89
		if (col)
8001b97c:	12000003 	beqz	s0,8001b98c <vga_putch+0x13c>
8001b980:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:90
			col --;
8001b984:	2606ffff 	addiu	a2,s0,-1
8001b988:	ae4676b0 	sw	a2,30384(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:91
		render_char('_', row, col);
8001b98c:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:115
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
}
8001b990:	8fbf002c 	lw	ra,44(sp)
8001b994:	8fb60028 	lw	s6,40(sp)
8001b998:	8fb50024 	lw	s5,36(sp)
8001b99c:	8fb40020 	lw	s4,32(sp)
8001b9a0:	8fb3001c 	lw	s3,28(sp)
8001b9a4:	8fb20018 	lw	s2,24(sp)
8001b9a8:	8fb10014 	lw	s1,20(sp)
8001b9ac:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:91
	prev_ch = ch;
	if (ch == '\b') {
		render_char(' ', row, col);
		if (col)
			col --;
		render_char('_', row, col);
8001b9b0:	2404005f 	li	a0,95
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:114
			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
8001b9b4:	08006d67 	j	8001b59c <render_char>
8001b9b8:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:101
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
8001b9bc:	3c148015 	lui	s4,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:100
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
8001b9c0:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:101
			char *tmp = buf[0];
8001b9c4:	8e84733c 	lw	a0,29500(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:100
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
8001b9c8:	ac5576ac 	sw	s5,30380(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001b9cc:	2694733c 	addiu	s4,s4,29500
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:101
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
8001b9d0:	3c028015 	lui	v0,0x8015
8001b9d4:	24427340 	addiu	v0,v0,29504
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001b9d8:	26850050 	addiu	a1,s4,80
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:104
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
			int i, j;
			for (i = 1; i < NR_ROW; i ++)
				buf[i - 1] = buf[i];
8001b9dc:	8c430000 	lw	v1,0(v0)
8001b9e0:	ac43fffc 	sw	v1,-4(v0)
8001b9e4:	24420004 	addiu	v0,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:103
		col = 0;
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
			int i, j;
			for (i = 1; i < NR_ROW; i ++)
8001b9e8:	5445fffd 	bnel	v0,a1,8001b9e0 <vga_putch+0x190>
8001b9ec:	8c430000 	lw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:105
				buf[i - 1] = buf[i];
			buf[row] = tmp;
8001b9f0:	00151080 	sll	v0,s5,0x2
8001b9f4:	00541021 	addu	v0,v0,s4
8001b9f8:	ac440000 	sw	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:106
			for (i = 0; i < NR_COL; i ++)
8001b9fc:	24050028 	li	a1,40
8001ba00:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001ba04:	00821821 	addu	v1,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:106
			char *tmp = buf[0];
			int i, j;
			for (i = 1; i < NR_ROW; i ++)
				buf[i - 1] = buf[i];
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
8001ba08:	24420001 	addiu	v0,v0,1
8001ba0c:	1445fffd 	bne	v0,a1,8001ba04 <vga_putch+0x1b4>
8001ba10:	a0600000 	sb	zero,0(v1)
8001ba14:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:110
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
8001ba18:	24130028 	li	s3,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:109
				buf[i - 1] = buf[i];
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
8001ba1c:	24160014 	li	s6,20
8001ba20:	8e920000 	lw	s2,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001ba24:	00008021 	move	s0,zero
8001ba28:	02501021 	addu	v0,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:111
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
8001ba2c:	90440000 	lbu	a0,0(v0)
8001ba30:	02003021 	move	a2,s0
8001ba34:	02202821 	move	a1,s1
8001ba38:	0c006d67 	jal	8001b59c <render_char>
8001ba3c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:110
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
8001ba40:	1613fffa 	bne	s0,s3,8001ba2c <vga_putch+0x1dc>
8001ba44:	02501021 	addu	v0,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/vga.c:109
				buf[i - 1] = buf[i];
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
8001ba48:	26310001 	addiu	s1,s1,1
8001ba4c:	1636fff4 	bne	s1,s6,8001ba20 <vga_putch+0x1d0>
8001ba50:	26940004 	addiu	s4,s4,4
8001ba54:	08006e36 	j	8001b8d8 <vga_putch+0x88>
8001ba58:	00003021 	move	a2,zero

8001ba5c <setup_exception_vector>:
setup_exception_vector():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:21
void setup_exception_vector()
{
	//for QEMU sim
	extern unsigned char __exception_vector, __exception_vector_end;
	memcpy((unsigned int *)0xBFC00000, &__exception_vector,
	       &__exception_vector_end - &__exception_vector);
8001ba5c:	3c058002 	lui	a1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:20

void setup_exception_vector()
{
	//for QEMU sim
	extern unsigned char __exception_vector, __exception_vector_end;
	memcpy((unsigned int *)0xBFC00000, &__exception_vector,
8001ba60:	3c068002 	lui	a2,0x8002
8001ba64:	24a55000 	addiu	a1,a1,20480
8001ba68:	24c65400 	addiu	a2,a2,21504
8001ba6c:	3c04bfc0 	lui	a0,0xbfc0
8001ba70:	08005c6e 	j	800171b8 <memcpy>
8001ba74:	00c53023 	subu	a2,a2,a1

8001ba78 <kern_init>:
kern_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:25
	       &__exception_vector_end - &__exception_vector);
}

void __noreturn kern_init(void)
{
8001ba78:	27bdffe8 	addiu	sp,sp,-24
8001ba7c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:27
	//setup_exception_vector();
	tlb_invalidate_all();
8001ba80:	0c007808 	jal	8001e020 <tlb_invalidate_all>
8001ba84:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:29
	char *p = 0x7ffff000;
	mp_init();
8001ba88:	0c007b77 	jal	8001eddc <mp_init>
8001ba8c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:30
	pic_init();		// init interrupt controller
8001ba90:	0c006cee 	jal	8001b3b8 <pic_init>
8001ba94:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:31
	cons_init();		// init the console
8001ba98:	0c006bc9 	jal	8001af24 <cons_init>
8001ba9c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:32
	clock_init();		// init clock interrupt
8001baa0:	0c006b47 	jal	8001ad1c <clock_init>
8001baa4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:34

	check_initrd();
8001baa8:	0c006d1d 	jal	8001b474 <check_initrd>
8001baac:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:37

	const char *message = "(THU.CST) os is loading ...\n\r\n\r";
	kprintf(message);
8001bab0:	3c048002 	lui	a0,0x8002
8001bab4:	0c00798a 	jal	8001e628 <kprintf>
8001bab8:	24843bc4 	addiu	a0,a0,15300
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:38
	print_kerninfo();
8001babc:	0c006a0b 	jal	8001a82c <print_kerninfo>
8001bac0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:46
	kprintf("EX\n\r");
	__asm__ volatile ("syscall");
	kprintf("EX RET\n\r");
#endif

	pmm_init();		// init physical memory management
8001bac4:	0c00750b 	jal	8001d42c <pmm_init>
8001bac8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:49

/* SZY comments: heavy commented here.*/
	vmm_init();		// init virtual memory management
8001bacc:	0c004d75 	jal	800135d4 <vmm_init>
8001bad0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:51

	sched_init();
8001bad4:	0c000491 	jal	80001244 <sched_init>
8001bad8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:52
	proc_init();		// init process table
8001badc:	0c0043eb 	jal	80010fac <proc_init>
8001bae0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:53
	ide_init();
8001bae4:	0c006c63 	jal	8001b18c <ide_init>
8001bae8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:54
	fs_init();
8001baec:	0c003260 	jal	8000c980 <fs_init>
8001baf0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:55
	intr_enable();		// enable irq interrupt
8001baf4:	0c006cba 	jal	8001b2e8 <intr_enable>
8001baf8:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/init/init.c:59
	//*(int*)(0x00124) = 0x432;
	//asm volatile("divu $1, $1, $1");
//*p = 1;
	cpu_idle();
8001bafc:	0c007915 	jal	8001e454 <cpu_idle>
8001bb00:	00000000 	nop

8001bb04 <buddy_init>:
buddy_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:47

//buddy_init - init the free_list(0 ~ MAX_ORDER) & reset nr_free(0 ~ MAX_ORDER)
static void buddy_init(void)
{
	int i;
	for (i = 0; i <= MAX_ORDER; i++) {
8001bb04:	3c048015 	lui	a0,0x8015
8001bb08:	3c078015 	lui	a3,0x8015
8001bb0c:	248476e8 	addiu	a0,a0,30440
8001bb10:	00001021 	move	v0,zero
8001bb14:	24e776e0 	addiu	a3,a3,30432
8001bb18:	2406000b 	li	a2,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:48
		list_init(&free_list(i));
8001bb1c:	00021880 	sll	v1,v0,0x2
8001bb20:	00022900 	sll	a1,v0,0x4
8001bb24:	00a31823 	subu	v1,a1,v1
8001bb28:	00e31821 	addu	v1,a3,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:47

//buddy_init - init the free_list(0 ~ MAX_ORDER) & reset nr_free(0 ~ MAX_ORDER)
static void buddy_init(void)
{
	int i;
	for (i = 0; i <= MAX_ORDER; i++) {
8001bb2c:	24420001 	addiu	v0,v0,1
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
8001bb30:	ac630004 	sw	v1,4(v1)
8001bb34:	ac630000 	sw	v1,0(v1)
buddy_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:49
		list_init(&free_list(i));
		nr_free(i) = 0;
8001bb38:	ac800000 	sw	zero,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:47

//buddy_init - init the free_list(0 ~ MAX_ORDER) & reset nr_free(0 ~ MAX_ORDER)
static void buddy_init(void)
{
	int i;
	for (i = 0; i <= MAX_ORDER; i++) {
8001bb3c:	1446fff7 	bne	v0,a2,8001bb1c <buddy_init+0x18>
8001bb40:	2484000c 	addiu	a0,a0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:51
		list_init(&free_list(i));
		nr_free(i) = 0;
	}
}
8001bb44:	03e00008 	jr	ra
8001bb48:	00000000 	nop

8001bb4c <buddy_nr_free_pages>:
buddy_nr_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:225
}

//buddy_nr_free_pages - get the nr: the number of free pages
static size_t buddy_nr_free_pages(void)
{
	size_t ret = 0, order = 0;
8001bb4c:	3c048015 	lui	a0,0x8015
8001bb50:	248476e8 	addiu	a0,a0,30440
8001bb54:	00001821 	move	v1,zero
8001bb58:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:226
	for (; order <= MAX_ORDER; order++) {
8001bb5c:	2406000b 	li	a2,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:227
		ret += nr_free(order) * (1 << order);
8001bb60:	8c850000 	lw	a1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:226

//buddy_nr_free_pages - get the nr: the number of free pages
static size_t buddy_nr_free_pages(void)
{
	size_t ret = 0, order = 0;
	for (; order <= MAX_ORDER; order++) {
8001bb64:	2484000c 	addiu	a0,a0,12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:227
		ret += nr_free(order) * (1 << order);
8001bb68:	00652804 	sllv	a1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:226

//buddy_nr_free_pages - get the nr: the number of free pages
static size_t buddy_nr_free_pages(void)
{
	size_t ret = 0, order = 0;
	for (; order <= MAX_ORDER; order++) {
8001bb6c:	24630001 	addiu	v1,v1,1
8001bb70:	1466fffb 	bne	v1,a2,8001bb60 <buddy_nr_free_pages+0x14>
8001bb74:	00451021 	addu	v0,v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:230
		ret += nr_free(order) * (1 << order);
	}
	return ret;
}
8001bb78:	03e00008 	jr	ra
8001bb7c:	00000000 	nop

8001bb80 <buddy_init_memmap>:
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:55
	}
}

//buddy_init_memmap - build free_list for Page base follow  n continuous pages.
static void buddy_init_memmap(struct Page *base, size_t n)
{
8001bb80:	27bdffc8 	addiu	sp,sp,-56
8001bb84:	afb10018 	sw	s1,24(sp)
8001bb88:	afb00014 	sw	s0,20(sp)
8001bb8c:	afbf0034 	sw	ra,52(sp)
8001bb90:	afb70030 	sw	s7,48(sp)
8001bb94:	afb6002c 	sw	s6,44(sp)
8001bb98:	afb50028 	sw	s5,40(sp)
8001bb9c:	afb40024 	sw	s4,36(sp)
8001bba0:	afb30020 	sw	s3,32(sp)
8001bba4:	afb2001c 	sw	s2,28(sp)
8001bba8:	00a08021 	move	s0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:57
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
8001bbac:	10a00074 	beqz	a1,8001bd80 <buddy_init_memmap+0x200>
8001bbb0:	00808821 	move	s1,a0
8001bbb4:	3c148015 	lui	s4,0x8015
8001bbb8:	8e827764 	lw	v0,30564(s4)
8001bbbc:	2843000a 	slti	v1,v0,10
8001bbc0:	1060006f 	beqz	v1,8001bd80 <buddy_init_memmap+0x200>
8001bbc4:	0005a940 	sll	s5,a1,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:59
	struct Page *p = base;
	for (; p != base + n; p++) {
8001bbc8:	0095a821 	addu	s5,a0,s5
8001bbcc:	10950010 	beq	a0,s5,8001bc10 <buddy_init_memmap+0x90>
8001bbd0:	00809021 	move	s2,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001bbd4:	40026000 	mfc0	v0,c0_status
8001bbd8:	30420001 	andi	v0,v0,0x1
8001bbdc:	14400059 	bnez	v0,8001bd44 <buddy_init_memmap+0x1c4>
8001bbe0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001bbe4:	8e530004 	lw	s3,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001bbe8:	32730001 	andi	s3,s3,0x1
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:60
		assert(PageReserved(p));
8001bbec:	1260005c 	beqz	s3,8001bd60 <buddy_init_memmap+0x1e0>
8001bbf0:	8e827764 	lw	v0,30564(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:61
		p->flags = p->property = 0;
8001bbf4:	ae400008 	sw	zero,8(s2)
8001bbf8:	ae400004 	sw	zero,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:62
		p->zone_num = zone_num;
8001bbfc:	ae42000c 	sw	v0,12(s2)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8001bc00:	ae400000 	sw	zero,0(s2)
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:59
static void buddy_init_memmap(struct Page *base, size_t n)
{
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
	struct Page *p = base;
	for (; p != base + n; p++) {
8001bc04:	26520020 	addiu	s2,s2,32
8001bc08:	1655fff2 	bne	s2,s5,8001bbd4 <buddy_init_memmap+0x54>
8001bc0c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:65
		assert(PageReserved(p));
		p->flags = p->property = 0;
		p->zone_num = zone_num;
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
8001bc10:	3c038015 	lui	v1,0x8015
8001bc14:	00022080 	sll	a0,v0,0x2
8001bc18:	246376b8 	addiu	v1,v1,30392
8001bc1c:	24420001 	addiu	v0,v0,1
8001bc20:	00831821 	addu	v1,a0,v1
8001bc24:	ae827764 	sw	v0,30564(s4)
8001bc28:	3c178015 	lui	s7,0x8015
8001bc2c:	3c148015 	lui	s4,0x8015
8001bc30:	ac710000 	sw	s1,0(v1)
8001bc34:	26947760 	addiu	s4,s4,30560
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:66
	size_t order = MAX_ORDER, order_size = (1 << order);
8001bc38:	24130400 	li	s3,1024
8001bc3c:	2415000a 	li	s5,10
8001bc40:	26f776e0 	addiu	s7,s7,30432
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
	while (n != 0) {
		while (n >= order_size) {
8001bc44:	0213102b 	sltu	v0,s0,s3
8001bc48:	1440002f 	bnez	v0,8001bd08 <buddy_init_memmap+0x188>
8001bc4c:	00151100 	sll	v0,s5,0x4
8001bc50:	00159080 	sll	s2,s5,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
8001bc54:	00529023 	subu	s2,v0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bc58:	0013b140 	sll	s6,s3,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
8001bc5c:	08006f29 	j	8001bca4 <buddy_init_memmap+0x124>
8001bc60:	02f29021 	addu	s2,s7,s2
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001bc64:	8e220004 	lw	v0,4(s1)
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
8001bc68:	26230010 	addiu	v1,s1,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			n -= order_size, p += order_size;
8001bc6c:	02138023 	subu	s0,s0,s3
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bc70:	34420002 	ori	v0,v0,0x2
8001bc74:	ae220004 	sw	v0,4(s1)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001bc78:	8e420004 	lw	v0,4(s2)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001bc7c:	ae430004 	sw	v1,4(s2)
8001bc80:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001bc84:	ae220014 	sw	v0,20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001bc88:	ae320010 	sw	s2,16(s1)
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			nr_free(order)++;
8001bc8c:	8e830000 	lw	v1,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bc90:	0213102b 	sltu	v0,s0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
8001bc94:	02368821 	addu	s1,s1,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			nr_free(order)++;
8001bc98:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bc9c:	1440001a 	bnez	v0,8001bd08 <buddy_init_memmap+0x188>
8001bca0:	ae830000 	sw	v1,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:69
			p->property = order;
8001bca4:	ae350008 	sw	s5,8(s1)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001bca8:	40026000 	mfc0	v0,c0_status
8001bcac:	30420001 	andi	v0,v0,0x1
8001bcb0:	1040ffec 	beqz	v0,8001bc64 <buddy_init_memmap+0xe4>
8001bcb4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001bcb8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001bcbc:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bcc0:	8e220004 	lw	v0,4(s1)
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
8001bcc4:	02138023 	subu	s0,s0,s3
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bcc8:	34420002 	ori	v0,v0,0x2
8001bccc:	ae220004 	sw	v0,4(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001bcd0:	0c006cba 	jal	8001b2e8 <intr_enable>
8001bcd4:	00000000 	nop
list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001bcd8:	8e420004 	lw	v0,4(s2)
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
8001bcdc:	26230010 	addiu	v1,s1,16
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001bce0:	ae430004 	sw	v1,4(s2)
8001bce4:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001bce8:	ae220014 	sw	v0,20(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001bcec:	ae320010 	sw	s2,16(s1)
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			n -= order_size, p += order_size;
			nr_free(order)++;
8001bcf0:	8e830000 	lw	v1,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bcf4:	0213102b 	sltu	v0,s0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
8001bcf8:	02368821 	addu	s1,s1,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			nr_free(order)++;
8001bcfc:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bd00:	1040ffe8 	beqz	v0,8001bca4 <buddy_init_memmap+0x124>
8001bd04:	ae830000 	sw	v1,0(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:75
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
			nr_free(order)++;
		}
		order--;
8001bd08:	26b5ffff 	addiu	s5,s5,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:76
		order_size >>= 1;
8001bd0c:	00139842 	srl	s3,s3,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:67
		p->zone_num = zone_num;
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
8001bd10:	1600ffcc 	bnez	s0,8001bc44 <buddy_init_memmap+0xc4>
8001bd14:	2694fff4 	addiu	s4,s4,-12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:78
			nr_free(order)++;
		}
		order--;
		order_size >>= 1;
	}
}
8001bd18:	8fbf0034 	lw	ra,52(sp)
8001bd1c:	8fb70030 	lw	s7,48(sp)
8001bd20:	8fb6002c 	lw	s6,44(sp)
8001bd24:	8fb50028 	lw	s5,40(sp)
8001bd28:	8fb40024 	lw	s4,36(sp)
8001bd2c:	8fb30020 	lw	s3,32(sp)
8001bd30:	8fb2001c 	lw	s2,28(sp)
8001bd34:	8fb10018 	lw	s1,24(sp)
8001bd38:	8fb00014 	lw	s0,20(sp)
8001bd3c:	03e00008 	jr	ra
8001bd40:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001bd44:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001bd48:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001bd4c:	8e530004 	lw	s3,4(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001bd50:	0c006cba 	jal	8001b2e8 <intr_enable>
8001bd54:	32730001 	andi	s3,s3,0x1
8001bd58:	08006efb 	j	8001bbec <buddy_init_memmap+0x6c>
8001bd5c:	00000000 	nop
buddy_init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:60
{
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
	struct Page *p = base;
	for (; p != base + n; p++) {
		assert(PageReserved(p));
8001bd60:	3c048002 	lui	a0,0x8002
8001bd64:	3c068002 	lui	a2,0x8002
8001bd68:	3c078002 	lui	a3,0x8002
8001bd6c:	24843be4 	addiu	a0,a0,15332
8001bd70:	2405003c 	li	a1,60
8001bd74:	24c609b0 	addiu	a2,a2,2480
8001bd78:	0c006afd 	jal	8001abf4 <__panic>
8001bd7c:	24e73c14 	addiu	a3,a3,15380
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:57

//buddy_init_memmap - build free_list for Page base follow  n continuous pages.
static void buddy_init_memmap(struct Page *base, size_t n)
{
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
8001bd80:	3c048002 	lui	a0,0x8002
8001bd84:	3c068002 	lui	a2,0x8002
8001bd88:	3c078002 	lui	a3,0x8002
8001bd8c:	24843be4 	addiu	a0,a0,15332
8001bd90:	24050039 	li	a1,57
8001bd94:	24c609b0 	addiu	a2,a2,2480
8001bd98:	0c006afd 	jal	8001abf4 <__panic>
8001bd9c:	24e73bf0 	addiu	a3,a3,15344

8001bda0 <buddy_alloc_pages>:
buddy_alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:125
	return NULL;
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
{
8001bda0:	27bdffc0 	addiu	sp,sp,-64
8001bda4:	afbf003c 	sw	ra,60(sp)
8001bda8:	afbe0038 	sw	s8,56(sp)
8001bdac:	afb70034 	sw	s7,52(sp)
8001bdb0:	afb60030 	sw	s6,48(sp)
8001bdb4:	afb5002c 	sw	s5,44(sp)
8001bdb8:	afb40028 	sw	s4,40(sp)
8001bdbc:	afb30024 	sw	s3,36(sp)
8001bdc0:	afb20020 	sw	s2,32(sp)
8001bdc4:	afb1001c 	sw	s1,28(sp)
8001bdc8:	afb00018 	sw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:126
	assert(n > 0);
8001bdcc:	1080009c 	beqz	a0,8001c040 <buddy_alloc_pages+0x2a0>
8001bdd0:	00803821 	move	a3,a0
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001bdd4:	2c820002 	sltiu	v0,a0,2
8001bdd8:	14400096 	bnez	v0,8001c034 <buddy_alloc_pages+0x294>
8001bddc:	24020002 	li	v0,2
8001bde0:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:84

//getorder - return order, the minmal 2^order >= n
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
8001bde4:	2404000b 	li	a0,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001bde8:	0047182b 	sltu	v1,v0,a3
8001bdec:	1060000a 	beqz	v1,8001be18 <buddy_alloc_pages+0x78>
8001bdf0:	24110001 	li	s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:85
//getorder - return order, the minmal 2^order >= n
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
8001bdf4:	26520001 	addiu	s2,s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:84

//getorder - return order, the minmal 2^order >= n
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
8001bdf8:	1644fffb 	bne	s2,a0,8001bde8 <buddy_alloc_pages+0x48>
8001bdfc:	00021040 	sll	v0,v0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:90
	     order++, order_size <<= 1) {
		if (n <= order_size) {
			return order;
		}
	}
	panic("getorder failed. %d\n", n);
8001be00:	3c048002 	lui	a0,0x8002
8001be04:	3c068002 	lui	a2,0x8002
8001be08:	24843be4 	addiu	a0,a0,15332
8001be0c:	2405005a 	li	a1,90
8001be10:	0c006afd 	jal	8001abf4 <__panic>
8001be14:	24c62f84 	addiu	a2,a2,12164
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001be18:	02518804 	sllv	s1,s1,s2
8001be1c:	3c178015 	lui	s7,0x8015
8001be20:	02401021 	move	v0,s2
8001be24:	26f776e0 	addiu	s7,s7,30432
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:99
//                      - the remaining free parts insert to other free list
static inline struct Page *buddy_alloc_pages_sub(size_t order)
{
	assert(order <= MAX_ORDER);
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
8001be28:	2405000b 	li	a1,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:100
		if (!list_empty(&free_list(cur_order))) {
8001be2c:	00021880 	sll	v1,v0,0x2
8001be30:	00022100 	sll	a0,v0,0x4
8001be34:	00831823 	subu	v1,a0,v1
8001be38:	02e31821 	addu	v1,s7,v1
list_empty():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001be3c:	8c750004 	lw	s5,4(v1)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:100
8001be40:	54750012 	bnel	v1,s5,8001be8c <buddy_alloc_pages+0xec>
8001be44:	8c680008 	lw	t0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:99
//                      - the remaining free parts insert to other free list
static inline struct Page *buddy_alloc_pages_sub(size_t order)
{
	assert(order <= MAX_ORDER);
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
8001be48:	24420001 	addiu	v0,v0,1
8001be4c:	5445fff8 	bnel	v0,a1,8001be30 <buddy_alloc_pages+0x90>
8001be50:	00021880 	sll	v1,v0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:120
			}
			ClearPageProperty(page);
			return page;
		}
	}
	return NULL;
8001be54:	00008021 	move	s0,zero
buddy_alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:133
	struct Page *page = buddy_alloc_pages_sub(order);
	if (page != NULL && n != order_size) {
		free_pages(page + n, order_size - n);
	}
	return page;
}
8001be58:	8fbf003c 	lw	ra,60(sp)
8001be5c:	02001021 	move	v0,s0
8001be60:	8fbe0038 	lw	s8,56(sp)
8001be64:	8fb70034 	lw	s7,52(sp)
8001be68:	8fb60030 	lw	s6,48(sp)
8001be6c:	8fb5002c 	lw	s5,44(sp)
8001be70:	8fb40028 	lw	s4,40(sp)
8001be74:	8fb30024 	lw	s3,36(sp)
8001be78:	8fb20020 	lw	s2,32(sp)
8001be7c:	8fb1001c 	lw	s1,28(sp)
8001be80:	8fb00018 	lw	s0,24(sp)
8001be84:	03e00008 	jr	ra
8001be88:	27bd0040 	addiu	sp,sp,64
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001be8c:	8ea50000 	lw	a1,0(s5)
8001be90:	8ea40004 	lw	a0,4(s5)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:103
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
8001be94:	2508ffff 	addiu	t0,t0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001be98:	0242302b 	sltu	a2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:103
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
8001be9c:	ac680008 	sw	t0,8(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:102
	assert(order <= MAX_ORDER);
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
8001bea0:	26b0fff0 	addiu	s0,s5,-16
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001bea4:	aca40004 	sw	a0,4(a1)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001bea8:	10c0003c 	beqz	a2,8001bf9c <buddy_alloc_pages+0x1fc>
8001beac:	ac850000 	sw	a1,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001beb0:	2454ffff 	addiu	s4,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:124
	}
	return NULL;
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
8001beb4:	00141880 	sll	v1,s4,0x2
8001beb8:	0014b100 	sll	s6,s4,0x4
8001bebc:	02c3b023 	subu	s6,s6,v1
8001bec0:	26d60008 	addiu	s6,s6,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:105
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
8001bec4:	241e0001 	li	s8,1
8001bec8:	005ef004 	sllv	s8,s8,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:124
	}
	return NULL;
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
8001becc:	08006fc8 	j	8001bf20 <buddy_alloc_pages+0x180>
8001bed0:	02f6b021 	addu	s6,s7,s6
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001bed4:	8e620004 	lw	v0,4(s3)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
				list_add(&free_list(cur_order),
8001bed8:	00142080 	sll	a0,s4,0x2
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bedc:	34420002 	ori	v0,v0,0x2
8001bee0:	ae620004 	sw	v0,4(s3)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001bee4:	8ec30000 	lw	v1,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001bee8:	00141100 	sll	v0,s4,0x4
8001beec:	00441023 	subu	v0,v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001bef0:	24630001 	addiu	v1,v1,1
8001bef4:	aec30000 	sw	v1,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001bef8:	02e21021 	addu	v0,s7,v0
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001befc:	8c430004 	lw	v1,4(v0)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
8001bf00:	26640010 	addiu	a0,s3,16
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001bf04:	ac440004 	sw	a0,4(v0)
8001bf08:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001bf0c:	ae630014 	sw	v1,20(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001bf10:	ae620010 	sw	v0,16(s3)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001bf14:	12920021 	beq	s4,s2,8001bf9c <buddy_alloc_pages+0x1fc>
8001bf18:	26d6fff4 	addiu	s6,s6,-12
8001bf1c:	2694ffff 	addiu	s4,s4,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:108
				cur_order--;
				size >>= 1;
8001bf20:	001ef042 	srl	s8,s8,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:109
				struct Page *buddy = page + size;
8001bf24:	001e9940 	sll	s3,s8,0x5
8001bf28:	02139821 	addu	s3,s0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:110
				buddy->property = cur_order;
8001bf2c:	ae740008 	sw	s4,8(s3)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001bf30:	40026000 	mfc0	v0,c0_status
8001bf34:	30420001 	andi	v0,v0,0x1
8001bf38:	1040ffe6 	beqz	v0,8001bed4 <buddy_alloc_pages+0x134>
8001bf3c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001bf40:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001bf44:	afa70010 	sw	a3,16(sp)
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bf48:	8e620004 	lw	v0,4(s3)
8001bf4c:	34420002 	ori	v0,v0,0x2
8001bf50:	ae620004 	sw	v0,4(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001bf54:	0c006cba 	jal	8001b2e8 <intr_enable>
8001bf58:	00000000 	nop
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001bf5c:	8ec30000 	lw	v1,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001bf60:	00142080 	sll	a0,s4,0x2
8001bf64:	00141100 	sll	v0,s4,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001bf68:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001bf6c:	00441023 	subu	v0,v0,a0
8001bf70:	8fa70010 	lw	a3,16(sp)
8001bf74:	02e21021 	addu	v0,s7,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001bf78:	aec30000 	sw	v1,0(s6)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001bf7c:	8c430004 	lw	v1,4(v0)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001bf80:	26640010 	addiu	a0,s3,16
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001bf84:	ac440004 	sw	a0,4(v0)
8001bf88:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001bf8c:	ae630014 	sw	v1,20(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001bf90:	ae620010 	sw	v0,16(s3)
buddy_alloc_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001bf94:	1692ffe1 	bne	s4,s2,8001bf1c <buddy_alloc_pages+0x17c>
8001bf98:	26d6fff4 	addiu	s6,s6,-12
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001bf9c:	40026000 	mfc0	v0,c0_status
8001bfa0:	30420001 	andi	v0,v0,0x1
8001bfa4:	14400019 	bnez	v0,8001c00c <buddy_alloc_pages+0x26c>
8001bfa8:	00000000 	nop
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
8001bfac:	8ea3fff4 	lw	v1,-12(s5)
8001bfb0:	2402fffd 	li	v0,-3
8001bfb4:	00621024 	and	v0,v1,v0
8001bfb8:	aea2fff4 	sw	v0,-12(s5)
buddy_alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:129
static struct Page *buddy_alloc_pages(size_t n)
{
	assert(n > 0);
	size_t order = getorder(n), order_size = (1 << order);
	struct Page *page = buddy_alloc_pages_sub(order);
	if (page != NULL && n != order_size) {
8001bfbc:	1200ffa7 	beqz	s0,8001be5c <buddy_alloc_pages+0xbc>
8001bfc0:	8fbf003c 	lw	ra,60(sp)
8001bfc4:	10f1ffa5 	beq	a3,s1,8001be5c <buddy_alloc_pages+0xbc>
8001bfc8:	00072140 	sll	a0,a3,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:130
		free_pages(page + n, order_size - n);
8001bfcc:	02042021 	addu	a0,s0,a0
8001bfd0:	0c0073fb 	jal	8001cfec <free_pages>
8001bfd4:	02272823 	subu	a1,s1,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:133
	}
	return page;
}
8001bfd8:	8fbf003c 	lw	ra,60(sp)
8001bfdc:	02001021 	move	v0,s0
8001bfe0:	8fbe0038 	lw	s8,56(sp)
8001bfe4:	8fb70034 	lw	s7,52(sp)
8001bfe8:	8fb60030 	lw	s6,48(sp)
8001bfec:	8fb5002c 	lw	s5,44(sp)
8001bff0:	8fb40028 	lw	s4,40(sp)
8001bff4:	8fb30024 	lw	s3,36(sp)
8001bff8:	8fb20020 	lw	s2,32(sp)
8001bffc:	8fb1001c 	lw	s1,28(sp)
8001c000:	8fb00018 	lw	s0,24(sp)
8001c004:	03e00008 	jr	ra
8001c008:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001c00c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c010:	afa70010 	sw	a3,16(sp)
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
8001c014:	8ea3fff4 	lw	v1,-12(s5)
8001c018:	2402fffd 	li	v0,-3
8001c01c:	00621024 	and	v0,v1,v0
8001c020:	aea2fff4 	sw	v0,-12(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c024:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c028:	00000000 	nop
8001c02c:	08006fef 	j	8001bfbc <buddy_alloc_pages+0x21c>
8001c030:	8fa70010 	lw	a3,16(sp)
getorder():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001c034:	24110001 	li	s1,1
8001c038:	08006f87 	j	8001be1c <buddy_alloc_pages+0x7c>
8001c03c:	00009021 	move	s2,zero
buddy_alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:126
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
{
	assert(n > 0);
8001c040:	3c048002 	lui	a0,0x8002
8001c044:	3c068002 	lui	a2,0x8002
8001c048:	3c078002 	lui	a3,0x8002
8001c04c:	24843be4 	addiu	a0,a0,15332
8001c050:	2405007e 	li	a1,126
8001c054:	24c609b0 	addiu	a2,a2,2480
8001c058:	0c006afd 	jal	8001abf4 <__panic>
8001c05c:	24e73c24 	addiu	a3,a3,15396

8001c060 <buddy_check>:
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:234
	return ret;
}

//buddy_check - check the correctness of buddy system
static void buddy_check(void)
{
8001c060:	27bdff38 	addiu	sp,sp,-200
8001c064:	afb400b0 	sw	s4,176(sp)
8001c068:	3c148015 	lui	s4,0x8015
8001c06c:	afbe00c0 	sw	s8,192(sp)
8001c070:	afb500b4 	sw	s5,180(sp)
8001c074:	afb100a4 	sw	s1,164(sp)
8001c078:	afb000a0 	sw	s0,160(sp)
8001c07c:	afbf00c4 	sw	ra,196(sp)
8001c080:	afb700bc 	sw	s7,188(sp)
8001c084:	afb600b8 	sw	s6,184(sp)
8001c088:	afb300ac 	sw	s3,172(sp)
8001c08c:	afb200a8 	sw	s2,168(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:236
	int i;
	int count = 0, total = 0;
8001c090:	00008021 	move	s0,zero
8001c094:	00008821 	move	s1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:237
	for (i = 0; i <= MAX_ORDER; i++) {
8001c098:	0000a821 	move	s5,zero
8001c09c:	269476e0 	addiu	s4,s4,30432
8001c0a0:	241e000b 	li	s8,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:238
		list_entry_t *list = &free_list(i), *le = list;
8001c0a4:	0015b080 	sll	s6,s5,0x2
8001c0a8:	00151100 	sll	v0,s5,0x4
8001c0ac:	0056b023 	subu	s6,v0,s6
8001c0b0:	0296b021 	addu	s6,s4,s6
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001c0b4:	8ed20004 	lw	s2,4(s6)
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:239
		while ((le = list_next(le)) != list) {
8001c0b8:	12d20011 	beq	s6,s2,8001c100 <buddy_check+0xa0>
8001c0bc:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:242
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count++, total += (1 << i);
8001c0c0:	02a2b804 	sllv	s7,v0,s5
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001c0c4:	40026000 	mfc0	v0,c0_status
8001c0c8:	30420001 	andi	v0,v0,0x1
8001c0cc:	14400119 	bnez	v0,8001c534 <buddy_check+0x4d4>
8001c0d0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c0d4:	8e53fff4 	lw	s3,-12(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c0d8:	7e730040 	ext	s3,s3,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:241
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c0dc:	1260011d 	beqz	s3,8001c554 <buddy_check+0x4f4>
8001c0e0:	3c048002 	lui	a0,0x8002
8001c0e4:	8e42fff8 	lw	v0,-8(s2)
8001c0e8:	1455011a 	bne	v0,s5,8001c554 <buddy_check+0x4f4>
8001c0ec:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8001c0f0:	8e520004 	lw	s2,4(s2)
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:242
			count++, total += (1 << i);
8001c0f4:	26310001 	addiu	s1,s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:239
{
	int i;
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
8001c0f8:	16d2fff2 	bne	s6,s2,8001c0c4 <buddy_check+0x64>
8001c0fc:	02178021 	addu	s0,s0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:237
//buddy_check - check the correctness of buddy system
static void buddy_check(void)
{
	int i;
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
8001c100:	26b50001 	addiu	s5,s5,1
8001c104:	56beffe8 	bnel	s5,s8,8001c0a8 <buddy_check+0x48>
8001c108:	0015b080 	sll	s6,s5,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:245
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count++, total += (1 << i);
		}
	}
	assert(total == nr_free_pages());
8001c10c:	0c007419 	jal	8001d064 <nr_free_pages>
8001c110:	00000000 	nop
8001c114:	1602017e 	bne	s0,v0,8001c710 <buddy_check+0x6b0>
8001c118:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:247

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;
8001c11c:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c120:	24040008 	li	a0,8
8001c124:	24040008 	li	a0,8
8001c128:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c12c:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:249

	assert(p0 != NULL);
8001c130:	12a0016f 	beqz	s5,8001c6f0 <buddy_check+0x690>
8001c134:	0040b821 	move	s7,v0
page2idx():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001c138:	8ea3000c 	lw	v1,12(s5)
8001c13c:	3c028015 	lui	v0,0x8015
8001c140:	244276b8 	addiu	v0,v0,30392
8001c144:	00031880 	sll	v1,v1,0x2
8001c148:	00621021 	addu	v0,v1,v0
8001c14c:	8c420000 	lw	v0,0(v0)
8001c150:	02a21023 	subu	v0,s5,v0
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:250
	assert(total == nr_free_pages());

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
	assert((page2idx(p0) & 7) == 0);
8001c154:	7c421140 	ext	v0,v0,0x5,0x3
8001c158:	1440015e 	bnez	v0,8001c6d4 <buddy_check+0x674>
8001c15c:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c160:	40026000 	mfc0	v0,c0_status
8001c164:	30420001 	andi	v0,v0,0x1
8001c168:	14400101 	bnez	v0,8001c570 <buddy_check+0x510>
8001c16c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c170:	8eb20004 	lw	s2,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c174:	7e520040 	ext	s2,s2,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:251
	assert(!PageProperty(p0));
8001c178:	16400168 	bnez	s2,8001c71c <buddy_check+0x6bc>
8001c17c:	27b2003c 	addiu	s2,sp,60
8001c180:	27b30010 	addiu	s3,sp,16
8001c184:	3c028015 	lui	v0,0x8015
8001c188:	244276e8 	addiu	v0,v0,30440
8001c18c:	02603021 	move	a2,s3
8001c190:	02402821 	move	a1,s2
8001c194:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:256

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
8001c198:	2409000b 	li	t1,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:258
		free_lists_store[i] = free_list(i);
		list_init(&free_list(i));
8001c19c:	00033900 	sll	a3,v1,0x4
8001c1a0:	00032080 	sll	a0,v1,0x2
8001c1a4:	00e42023 	subu	a0,a3,a0
8001c1a8:	02842021 	addu	a0,s4,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:257

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
		free_lists_store[i] = free_list(i);
8001c1ac:	8c48fff8 	lw	t0,-8(v0)
8001c1b0:	8c47fffc 	lw	a3,-4(v0)
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001c1b4:	ac840004 	sw	a0,4(a0)
8001c1b8:	ac840000 	sw	a0,0(a0)
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:260
		list_init(&free_list(i));
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
8001c1bc:	8c440000 	lw	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:256
	assert(!PageProperty(p0));

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
8001c1c0:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:257
		free_lists_store[i] = free_list(i);
8001c1c4:	aca80000 	sw	t0,0(a1)
8001c1c8:	aca70004 	sw	a3,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:260
		list_init(&free_list(i));
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
8001c1cc:	acc40000 	sw	a0,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:261
		nr_free(i) = 0;
8001c1d0:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:256
	assert(!PageProperty(p0));

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
8001c1d4:	24a50008 	addiu	a1,a1,8
8001c1d8:	2442000c 	addiu	v0,v0,12
8001c1dc:	1469ffef 	bne	v1,t1,8001c19c <buddy_check+0x13c>
8001c1e0:	24c60004 	addiu	a2,a2,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:264
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
		nr_free(i) = 0;
	}

	assert(nr_free_pages() == 0);
8001c1e4:	0c007419 	jal	8001d064 <nr_free_pages>
8001c1e8:	00000000 	nop
8001c1ec:	14400153 	bnez	v0,8001c73c <buddy_check+0x6dc>
8001c1f0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:265
	assert(alloc_page() == NULL);
8001c1f4:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c1f8:	24040001 	li	a0,1
8001c1fc:	14400156 	bnez	v0,8001c758 <buddy_check+0x6f8>
8001c200:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:266
	free_pages(p0, 8);
8001c204:	0c0073fb 	jal	8001cfec <free_pages>
8001c208:	24050008 	li	a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:267
	assert(nr_free_pages() == 8);
8001c20c:	0c007419 	jal	8001d064 <nr_free_pages>
8001c210:	00000000 	nop
8001c214:	24030008 	li	v1,8
8001c218:	14430157 	bne	v0,v1,8001c778 <buddy_check+0x718>
8001c21c:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c220:	40026000 	mfc0	v0,c0_status
8001c224:	30420001 	andi	v0,v0,0x1
8001c228:	1440010d 	bnez	v0,8001c660 <buddy_check+0x600>
8001c22c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c230:	8eb60004 	lw	s6,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c234:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:268
	assert(PageProperty(p0) && p0->property == 3);
8001c238:	12c00156 	beqz	s6,8001c794 <buddy_check+0x734>
8001c23c:	24020003 	li	v0,3
8001c240:	8ea30008 	lw	v1,8(s5)
8001c244:	14620154 	bne	v1,v0,8001c798 <buddy_check+0x738>
8001c248:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:269
	assert((p0 = alloc_pages(6)) != NULL && !PageProperty(p0)
8001c24c:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c250:	24040006 	li	a0,6
8001c254:	10400157 	beqz	v0,8001c7b4 <buddy_check+0x754>
8001c258:	0040a821 	move	s5,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c25c:	40026000 	mfc0	v0,c0_status
8001c260:	30420001 	andi	v0,v0,0x1
8001c264:	144000f7 	bnez	v0,8001c644 <buddy_check+0x5e4>
8001c268:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c26c:	8eb60004 	lw	s6,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c270:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:269
8001c274:	16c00150 	bnez	s6,8001c7b8 <buddy_check+0x758>
8001c278:	3c048002 	lui	a0,0x8002
8001c27c:	0c007419 	jal	8001d064 <nr_free_pages>
8001c280:	00000000 	nop
8001c284:	24030002 	li	v1,2
8001c288:	1443014b 	bne	v0,v1,8001c7b8 <buddy_check+0x758>
8001c28c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:272
	       && nr_free_pages() == 2);

	assert((p1 = alloc_pages(2)) != NULL && p1 == p0 + 6);
8001c290:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c294:	24040002 	li	a0,2
8001c298:	1040014e 	beqz	v0,8001c7d4 <buddy_check+0x774>
8001c29c:	0040b021 	move	s6,v0
8001c2a0:	26a200c0 	addiu	v0,s5,192
8001c2a4:	16c2014c 	bne	s6,v0,8001c7d8 <buddy_check+0x778>
8001c2a8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:273
	assert(nr_free_pages() == 0);
8001c2ac:	0c007419 	jal	8001d064 <nr_free_pages>
8001c2b0:	00000000 	nop
8001c2b4:	1440014f 	bnez	v0,8001c7f4 <buddy_check+0x794>
8001c2b8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:275

	free_pages(p0, 3);
8001c2bc:	02a02021 	move	a0,s5
8001c2c0:	0c0073fb 	jal	8001cfec <free_pages>
8001c2c4:	24050003 	li	a1,3
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c2c8:	40026000 	mfc0	v0,c0_status
8001c2cc:	30420001 	andi	v0,v0,0x1
8001c2d0:	144000d5 	bnez	v0,8001c628 <buddy_check+0x5c8>
8001c2d4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c2d8:	8ebe0004 	lw	s8,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c2dc:	7fde0040 	ext	s8,s8,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:276
	assert(PageProperty(p0) && p0->property == 1);
8001c2e0:	13c00147 	beqz	s8,8001c800 <buddy_check+0x7a0>
8001c2e4:	24020001 	li	v0,1
8001c2e8:	8ea30008 	lw	v1,8(s5)
8001c2ec:	14620145 	bne	v1,v0,8001c804 <buddy_check+0x7a4>
8001c2f0:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c2f4:	40026000 	mfc0	v0,c0_status
8001c2f8:	30420001 	andi	v0,v0,0x1
8001c2fc:	144000c3 	bnez	v0,8001c60c <buddy_check+0x5ac>
8001c300:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c304:	8ebe0044 	lw	s8,68(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c308:	7fde0040 	ext	s8,s8,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:277
	assert(PageProperty(p0 + 2) && p0[2].property == 0);
8001c30c:	13c00144 	beqz	s8,8001c820 <buddy_check+0x7c0>
8001c310:	3c048002 	lui	a0,0x8002
8001c314:	8ea20048 	lw	v0,72(s5)
8001c318:	14400142 	bnez	v0,8001c824 <buddy_check+0x7c4>
8001c31c:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:279

	free_pages(p0 + 3, 3);
8001c320:	26a40060 	addiu	a0,s5,96
8001c324:	0c0073fb 	jal	8001cfec <free_pages>
8001c328:	24050003 	li	a1,3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:280
	free_pages(p1, 2);
8001c32c:	02c02021 	move	a0,s6
8001c330:	0c0073fb 	jal	8001cfec <free_pages>
8001c334:	24050002 	li	a1,2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c338:	40026000 	mfc0	v0,c0_status
8001c33c:	30420001 	andi	v0,v0,0x1
8001c340:	144000ab 	bnez	v0,8001c5f0 <buddy_check+0x590>
8001c344:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c348:	8eb60004 	lw	s6,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c34c:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:282

	assert(PageProperty(p0) && p0->property == 3);
8001c350:	12c0013a 	beqz	s6,8001c83c <buddy_check+0x7dc>
8001c354:	24020003 	li	v0,3
8001c358:	8ea30008 	lw	v1,8(s5)
8001c35c:	14620138 	bne	v1,v0,8001c840 <buddy_check+0x7e0>
8001c360:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:284

	assert((p0 = alloc_pages(6)) != NULL);
8001c364:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c368:	24040006 	li	a0,6
8001c36c:	10400137 	beqz	v0,8001c84c <buddy_check+0x7ec>
8001c370:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:285
	assert((p1 = alloc_pages(2)) != NULL);
8001c374:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c378:	24040002 	li	a0,2
8001c37c:	5040013b 	beqzl	v0,8001c86c <buddy_check+0x80c>
8001c380:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:286
	free_pages(p0 + 4, 2);
8001c384:	26a40080 	addiu	a0,s5,128
8001c388:	24050002 	li	a1,2
8001c38c:	0c0073fb 	jal	8001cfec <free_pages>
8001c390:	afa20098 	sw	v0,152(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:287
	free_pages(p1, 2);
8001c394:	8fa20098 	lw	v0,152(sp)
8001c398:	24050002 	li	a1,2
8001c39c:	0c0073fb 	jal	8001cfec <free_pages>
8001c3a0:	00402021 	move	a0,v0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c3a4:	40026000 	mfc0	v0,c0_status
8001c3a8:	30420001 	andi	v0,v0,0x1
8001c3ac:	14400089 	bnez	v0,8001c5d4 <buddy_check+0x574>
8001c3b0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c3b4:	8eb60084 	lw	s6,132(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c3b8:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:290

	p1 = p0 + 4;
	assert(PageProperty(p1) && p1->property == 2);
8001c3bc:	12c00132 	beqz	s6,8001c888 <buddy_check+0x828>
8001c3c0:	24020002 	li	v0,2
8001c3c4:	8ea30088 	lw	v1,136(s5)
8001c3c8:	14620130 	bne	v1,v0,8001c88c <buddy_check+0x82c>
8001c3cc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:291
	free_pages(p0, 4);
8001c3d0:	02a02021 	move	a0,s5
8001c3d4:	0c0073fb 	jal	8001cfec <free_pages>
8001c3d8:	24050004 	li	a1,4
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c3dc:	40026000 	mfc0	v0,c0_status
8001c3e0:	30420001 	andi	v0,v0,0x1
8001c3e4:	14400074 	bnez	v0,8001c5b8 <buddy_check+0x558>
8001c3e8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c3ec:	8eb60004 	lw	s6,4(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c3f0:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:292
	assert(PageProperty(p0) && p0->property == 3);
8001c3f4:	12c0012c 	beqz	s6,8001c8a8 <buddy_check+0x848>
8001c3f8:	24020003 	li	v0,3
8001c3fc:	8ea30008 	lw	v1,8(s5)
8001c400:	1462012a 	bne	v1,v0,8001c8ac <buddy_check+0x84c>
8001c404:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:294

	assert((p0 = alloc_pages(8)) != NULL);
8001c408:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c40c:	24040008 	li	a0,8
8001c410:	10400129 	beqz	v0,8001c8b8 <buddy_check+0x858>
8001c414:	0040a821 	move	s5,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:295
	assert(alloc_page() == NULL && nr_free_pages() == 0);
8001c418:	0c0073df 	jal	8001cf7c <alloc_pages>
8001c41c:	24040001 	li	a0,1
8001c420:	1440012e 	bnez	v0,8001c8dc <buddy_check+0x87c>
8001c424:	3c048002 	lui	a0,0x8002
8001c428:	0c007419 	jal	8001d064 <nr_free_pages>
8001c42c:	00000000 	nop
8001c430:	14400129 	bnez	v0,8001c8d8 <buddy_check+0x878>
8001c434:	02801021 	move	v0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:233
	}
	return ret;
}

//buddy_check - check the correctness of buddy system
static void buddy_check(void)
8001c438:	26860084 	addiu	a2,s4,132
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:298

	assert((p0 = alloc_pages(8)) != NULL);
	assert(alloc_page() == NULL && nr_free_pages() == 0);

	for (i = 0; i <= MAX_ORDER; i++) {
		free_list(i) = free_lists_store[i];
8001c43c:	8e450000 	lw	a1,0(s2)
8001c440:	8e440004 	lw	a0,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:299
		nr_free(i) = nr_free_store[i];
8001c444:	8e630000 	lw	v1,0(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:298

	assert((p0 = alloc_pages(8)) != NULL);
	assert(alloc_page() == NULL && nr_free_pages() == 0);

	for (i = 0; i <= MAX_ORDER; i++) {
		free_list(i) = free_lists_store[i];
8001c448:	ac450000 	sw	a1,0(v0)
8001c44c:	ac440004 	sw	a0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:299
		nr_free(i) = nr_free_store[i];
8001c450:	ac430008 	sw	v1,8(v0)
8001c454:	2442000c 	addiu	v0,v0,12
8001c458:	26520008 	addiu	s2,s2,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:297
	assert(PageProperty(p0) && p0->property == 3);

	assert((p0 = alloc_pages(8)) != NULL);
	assert(alloc_page() == NULL && nr_free_pages() == 0);

	for (i = 0; i <= MAX_ORDER; i++) {
8001c45c:	1446fff7 	bne	v0,a2,8001c43c <buddy_check+0x3dc>
8001c460:	26730004 	addiu	s3,s3,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:302
		free_list(i) = free_lists_store[i];
		nr_free(i) = nr_free_store[i];
	}

	free_pages(p0, 8);
8001c464:	24050008 	li	a1,8
8001c468:	0c0073fb 	jal	8001cfec <free_pages>
8001c46c:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:303
	free_pages(buddy, 8);
8001c470:	02e02021 	move	a0,s7
8001c474:	0c0073fb 	jal	8001cfec <free_pages>
8001c478:	24050008 	li	a1,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:305

	assert(total == nr_free_pages());
8001c47c:	0c007419 	jal	8001d064 <nr_free_pages>
8001c480:	00009021 	move	s2,zero
8001c484:	1602007d 	bne	s0,v0,8001c67c <buddy_check+0x61c>
8001c488:	241e000b 	li	s8,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:308

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
8001c48c:	0012b080 	sll	s6,s2,0x2
8001c490:	00121100 	sll	v0,s2,0x4
8001c494:	0056b023 	subu	s6,v0,s6
8001c498:	0296b021 	addu	s6,s4,s6
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001c49c:	8ed30004 	lw	s3,4(s6)
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:309
		while ((le = list_next(le)) != list) {
8001c4a0:	12d30012 	beq	s6,s3,8001c4ec <buddy_check+0x48c>
8001c4a4:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:312
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count--, total -= (1 << i);
8001c4a8:	0242b804 	sllv	s7,v0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:233
	}
	return ret;
}

//buddy_check - check the correctness of buddy system
static void buddy_check(void)
8001c4ac:	0017b823 	negu	s7,s7
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c4b0:	40026000 	mfc0	v0,c0_status
8001c4b4:	30420001 	andi	v0,v0,0x1
8001c4b8:	14400034 	bnez	v0,8001c58c <buddy_check+0x52c>
8001c4bc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c4c0:	8e75fff4 	lw	s5,-12(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c4c4:	7eb50040 	ext	s5,s5,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:311

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c4c8:	12a00038 	beqz	s5,8001c5ac <buddy_check+0x54c>
8001c4cc:	3c048002 	lui	a0,0x8002
8001c4d0:	8e62fff8 	lw	v0,-8(s3)
8001c4d4:	14520035 	bne	v0,s2,8001c5ac <buddy_check+0x54c>
8001c4d8:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:135
8001c4dc:	8e730004 	lw	s3,4(s3)
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:312
			count--, total -= (1 << i);
8001c4e0:	2631ffff 	addiu	s1,s1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:309

	assert(total == nr_free_pages());

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
8001c4e4:	16d3fff2 	bne	s6,s3,8001c4b0 <buddy_check+0x450>
8001c4e8:	02178021 	addu	s0,s0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:307
	free_pages(p0, 8);
	free_pages(buddy, 8);

	assert(total == nr_free_pages());

	for (i = 0; i <= MAX_ORDER; i++) {
8001c4ec:	26520001 	addiu	s2,s2,1
8001c4f0:	565effe7 	bnel	s2,s8,8001c490 <buddy_check+0x430>
8001c4f4:	0012b080 	sll	s6,s2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:315
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count--, total -= (1 << i);
		}
	}
	assert(count == 0);
8001c4f8:	16200068 	bnez	s1,8001c69c <buddy_check+0x63c>
8001c4fc:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:316
	assert(total == 0);
8001c500:	1600006d 	bnez	s0,8001c6b8 <buddy_check+0x658>
8001c504:	8fbf00c4 	lw	ra,196(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:317
}
8001c508:	8fbe00c0 	lw	s8,192(sp)
8001c50c:	8fb700bc 	lw	s7,188(sp)
8001c510:	8fb600b8 	lw	s6,184(sp)
8001c514:	8fb500b4 	lw	s5,180(sp)
8001c518:	8fb400b0 	lw	s4,176(sp)
8001c51c:	8fb300ac 	lw	s3,172(sp)
8001c520:	8fb200a8 	lw	s2,168(sp)
8001c524:	8fb100a4 	lw	s1,164(sp)
8001c528:	8fb000a0 	lw	s0,160(sp)
8001c52c:	03e00008 	jr	ra
8001c530:	27bd00c8 	addiu	sp,sp,200
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001c534:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c538:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c53c:	8e53fff4 	lw	s3,-12(s2)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c540:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c544:	7e730040 	ext	s3,s3,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:241
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c548:	5660fee7 	bnezl	s3,8001c0e8 <buddy_check+0x88>
8001c54c:	8e42fff8 	lw	v0,-8(s2)
8001c550:	3c048002 	lui	a0,0x8002
8001c554:	24843be4 	addiu	a0,a0,15332
8001c558:	240500f1 	li	a1,241
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:311

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c55c:	3c068002 	lui	a2,0x8002
8001c560:	3c078002 	lui	a3,0x8002
8001c564:	24c609b0 	addiu	a2,a2,2480
8001c568:	0c006afd 	jal	8001abf4 <__panic>
8001c56c:	24e73c2c 	addiu	a3,a3,15404
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c570:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c574:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c578:	8eb20004 	lw	s2,4(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c57c:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c580:	7e520040 	ext	s2,s2,0x1,0x1
8001c584:	0800705e 	j	8001c178 <buddy_check+0x118>
8001c588:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c58c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c590:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c594:	8e75fff4 	lw	s5,-12(s3)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c598:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c59c:	7eb50040 	ext	s5,s5,0x1,0x1
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:311
8001c5a0:	56a0ffcc 	bnezl	s5,8001c4d4 <buddy_check+0x474>
8001c5a4:	8e62fff8 	lw	v0,-8(s3)
8001c5a8:	3c048002 	lui	a0,0x8002
8001c5ac:	24843be4 	addiu	a0,a0,15332
8001c5b0:	08007157 	j	8001c55c <buddy_check+0x4fc>
8001c5b4:	24050137 	li	a1,311
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c5b8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c5bc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c5c0:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c5c4:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c5c8:	7ed60040 	ext	s6,s6,0x1,0x1
8001c5cc:	080070fd 	j	8001c3f4 <buddy_check+0x394>
8001c5d0:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c5d4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c5d8:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c5dc:	8eb60084 	lw	s6,132(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c5e0:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c5e4:	7ed60040 	ext	s6,s6,0x1,0x1
8001c5e8:	080070ef 	j	8001c3bc <buddy_check+0x35c>
8001c5ec:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c5f0:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c5f4:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c5f8:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c5fc:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c600:	7ed60040 	ext	s6,s6,0x1,0x1
8001c604:	080070d4 	j	8001c350 <buddy_check+0x2f0>
8001c608:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c60c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c610:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c614:	8ebe0044 	lw	s8,68(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c618:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c61c:	7fde0040 	ext	s8,s8,0x1,0x1
8001c620:	080070c3 	j	8001c30c <buddy_check+0x2ac>
8001c624:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c628:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c62c:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c630:	8ebe0004 	lw	s8,4(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c634:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c638:	7fde0040 	ext	s8,s8,0x1,0x1
8001c63c:	080070b8 	j	8001c2e0 <buddy_check+0x280>
8001c640:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c644:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c648:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c64c:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c650:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c654:	7ed60040 	ext	s6,s6,0x1,0x1
8001c658:	0800709d 	j	8001c274 <buddy_check+0x214>
8001c65c:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c660:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001c664:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c668:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c66c:	0c006cba 	jal	8001b2e8 <intr_enable>
8001c670:	7ed60040 	ext	s6,s6,0x1,0x1
8001c674:	0800708e 	j	8001c238 <buddy_check+0x1d8>
8001c678:	00000000 	nop
buddy_check():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:305
	}

	free_pages(p0, 8);
	free_pages(buddy, 8);

	assert(total == nr_free_pages());
8001c67c:	3c048002 	lui	a0,0x8002
8001c680:	24843be4 	addiu	a0,a0,15332
8001c684:	24050131 	li	a1,305
8001c688:	3c068002 	lui	a2,0x8002
8001c68c:	3c078002 	lui	a3,0x8002
8001c690:	24c609b0 	addiu	a2,a2,2480
8001c694:	0c006afd 	jal	8001abf4 <__panic>
8001c698:	24e73c50 	addiu	a3,a3,15440
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:315
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count--, total -= (1 << i);
		}
	}
	assert(count == 0);
8001c69c:	3c068002 	lui	a2,0x8002
8001c6a0:	3c078002 	lui	a3,0x8002
8001c6a4:	24843be4 	addiu	a0,a0,15332
8001c6a8:	2405013b 	li	a1,315
8001c6ac:	24c609b0 	addiu	a2,a2,2480
8001c6b0:	0c006afd 	jal	8001abf4 <__panic>
8001c6b4:	24e73e84 	addiu	a3,a3,16004
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:316
	assert(total == 0);
8001c6b8:	3c068002 	lui	a2,0x8002
8001c6bc:	3c078002 	lui	a3,0x8002
8001c6c0:	24843be4 	addiu	a0,a0,15332
8001c6c4:	2405013c 	li	a1,316
8001c6c8:	24c609b0 	addiu	a2,a2,2480
8001c6cc:	0c006afd 	jal	8001abf4 <__panic>
8001c6d0:	24e73e90 	addiu	a3,a3,16016
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:250
	assert(total == nr_free_pages());

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
	assert((page2idx(p0) & 7) == 0);
8001c6d4:	3c068002 	lui	a2,0x8002
8001c6d8:	3c078002 	lui	a3,0x8002
8001c6dc:	24843be4 	addiu	a0,a0,15332
8001c6e0:	240500fa 	li	a1,250
8001c6e4:	24c609b0 	addiu	a2,a2,2480
8001c6e8:	0c006afd 	jal	8001abf4 <__panic>
8001c6ec:	24e73c78 	addiu	a3,a3,15480
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:249
	}
	assert(total == nr_free_pages());

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
8001c6f0:	3c048002 	lui	a0,0x8002
8001c6f4:	3c068002 	lui	a2,0x8002
8001c6f8:	3c078002 	lui	a3,0x8002
8001c6fc:	24843be4 	addiu	a0,a0,15332
8001c700:	240500f9 	li	a1,249
8001c704:	24c609b0 	addiu	a2,a2,2480
8001c708:	0c006afd 	jal	8001abf4 <__panic>
8001c70c:	24e73c6c 	addiu	a3,a3,15468
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:245
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count++, total += (1 << i);
		}
	}
	assert(total == nr_free_pages());
8001c710:	24843be4 	addiu	a0,a0,15332
8001c714:	080071a2 	j	8001c688 <buddy_check+0x628>
8001c718:	240500f5 	li	a1,245
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:251

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
	assert((page2idx(p0) & 7) == 0);
	assert(!PageProperty(p0));
8001c71c:	3c048002 	lui	a0,0x8002
8001c720:	3c068002 	lui	a2,0x8002
8001c724:	3c078002 	lui	a3,0x8002
8001c728:	24843be4 	addiu	a0,a0,15332
8001c72c:	240500fb 	li	a1,251
8001c730:	24c609b0 	addiu	a2,a2,2480
8001c734:	0c006afd 	jal	8001abf4 <__panic>
8001c738:	24e73c90 	addiu	a3,a3,15504
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:264
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
		nr_free(i) = 0;
	}

	assert(nr_free_pages() == 0);
8001c73c:	24843be4 	addiu	a0,a0,15332
8001c740:	24050108 	li	a1,264
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:273
	assert(PageProperty(p0) && p0->property == 3);
	assert((p0 = alloc_pages(6)) != NULL && !PageProperty(p0)
	       && nr_free_pages() == 2);

	assert((p1 = alloc_pages(2)) != NULL && p1 == p0 + 6);
	assert(nr_free_pages() == 0);
8001c744:	3c068002 	lui	a2,0x8002
8001c748:	3c078002 	lui	a3,0x8002
8001c74c:	24c609b0 	addiu	a2,a2,2480
8001c750:	0c006afd 	jal	8001abf4 <__panic>
8001c754:	24e73e6c 	addiu	a3,a3,15980
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:265
		nr_free_store[i] = nr_free(i);
		nr_free(i) = 0;
	}

	assert(nr_free_pages() == 0);
	assert(alloc_page() == NULL);
8001c758:	3c048002 	lui	a0,0x8002
8001c75c:	3c068002 	lui	a2,0x8002
8001c760:	3c078002 	lui	a3,0x8002
8001c764:	24843be4 	addiu	a0,a0,15332
8001c768:	24050109 	li	a1,265
8001c76c:	24c609b0 	addiu	a2,a2,2480
8001c770:	0c006afd 	jal	8001abf4 <__panic>
8001c774:	24e73ca4 	addiu	a3,a3,15524
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:267
	free_pages(p0, 8);
	assert(nr_free_pages() == 8);
8001c778:	3c068002 	lui	a2,0x8002
8001c77c:	3c078002 	lui	a3,0x8002
8001c780:	24843be4 	addiu	a0,a0,15332
8001c784:	2405010b 	li	a1,267
8001c788:	24c609b0 	addiu	a2,a2,2480
8001c78c:	0c006afd 	jal	8001abf4 <__panic>
8001c790:	24e73cbc 	addiu	a3,a3,15548
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:268
	assert(PageProperty(p0) && p0->property == 3);
8001c794:	3c048002 	lui	a0,0x8002
8001c798:	24843be4 	addiu	a0,a0,15332
8001c79c:	2405010c 	li	a1,268
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:282
	assert(PageProperty(p0 + 2) && p0[2].property == 0);

	free_pages(p0 + 3, 3);
	free_pages(p1, 2);

	assert(PageProperty(p0) && p0->property == 3);
8001c7a0:	3c068002 	lui	a2,0x8002
8001c7a4:	3c078002 	lui	a3,0x8002
8001c7a8:	24c609b0 	addiu	a2,a2,2480
8001c7ac:	0c006afd 	jal	8001abf4 <__panic>
8001c7b0:	24e73cd4 	addiu	a3,a3,15572
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:269
	assert(nr_free_pages() == 0);
	assert(alloc_page() == NULL);
	free_pages(p0, 8);
	assert(nr_free_pages() == 8);
	assert(PageProperty(p0) && p0->property == 3);
	assert((p0 = alloc_pages(6)) != NULL && !PageProperty(p0)
8001c7b4:	3c048002 	lui	a0,0x8002
8001c7b8:	3c068002 	lui	a2,0x8002
8001c7bc:	3c078002 	lui	a3,0x8002
8001c7c0:	24843be4 	addiu	a0,a0,15332
8001c7c4:	2405010e 	li	a1,270
8001c7c8:	24c609b0 	addiu	a2,a2,2480
8001c7cc:	0c006afd 	jal	8001abf4 <__panic>
8001c7d0:	24e73cfc 	addiu	a3,a3,15612
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:272
	       && nr_free_pages() == 2);

	assert((p1 = alloc_pages(2)) != NULL && p1 == p0 + 6);
8001c7d4:	3c048002 	lui	a0,0x8002
8001c7d8:	3c068002 	lui	a2,0x8002
8001c7dc:	3c078002 	lui	a3,0x8002
8001c7e0:	24843be4 	addiu	a0,a0,15332
8001c7e4:	24050110 	li	a1,272
8001c7e8:	24c609b0 	addiu	a2,a2,2480
8001c7ec:	0c006afd 	jal	8001abf4 <__panic>
8001c7f0:	24e73d48 	addiu	a3,a3,15688
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:273
	assert(nr_free_pages() == 0);
8001c7f4:	24843be4 	addiu	a0,a0,15332
8001c7f8:	080071d1 	j	8001c744 <buddy_check+0x6e4>
8001c7fc:	24050111 	li	a1,273
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:276

	free_pages(p0, 3);
	assert(PageProperty(p0) && p0->property == 1);
8001c800:	3c048002 	lui	a0,0x8002
8001c804:	3c068002 	lui	a2,0x8002
8001c808:	3c078002 	lui	a3,0x8002
8001c80c:	24843be4 	addiu	a0,a0,15332
8001c810:	24050114 	li	a1,276
8001c814:	24c609b0 	addiu	a2,a2,2480
8001c818:	0c006afd 	jal	8001abf4 <__panic>
8001c81c:	24e73d78 	addiu	a3,a3,15736
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:277
	assert(PageProperty(p0 + 2) && p0[2].property == 0);
8001c820:	3c068002 	lui	a2,0x8002
8001c824:	3c078002 	lui	a3,0x8002
8001c828:	24843be4 	addiu	a0,a0,15332
8001c82c:	24050115 	li	a1,277
8001c830:	24c609b0 	addiu	a2,a2,2480
8001c834:	0c006afd 	jal	8001abf4 <__panic>
8001c838:	24e73da0 	addiu	a3,a3,15776
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:282

	free_pages(p0 + 3, 3);
	free_pages(p1, 2);

	assert(PageProperty(p0) && p0->property == 3);
8001c83c:	3c048002 	lui	a0,0x8002
8001c840:	24843be4 	addiu	a0,a0,15332
8001c844:	080071e8 	j	8001c7a0 <buddy_check+0x740>
8001c848:	2405011a 	li	a1,282
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:284

	assert((p0 = alloc_pages(6)) != NULL);
8001c84c:	3c048002 	lui	a0,0x8002
8001c850:	3c068002 	lui	a2,0x8002
8001c854:	3c078002 	lui	a3,0x8002
8001c858:	24843be4 	addiu	a0,a0,15332
8001c85c:	2405011c 	li	a1,284
8001c860:	24c609b0 	addiu	a2,a2,2480
8001c864:	0c006afd 	jal	8001abf4 <__panic>
8001c868:	24e73dcc 	addiu	a3,a3,15820
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:285
	assert((p1 = alloc_pages(2)) != NULL);
8001c86c:	3c068002 	lui	a2,0x8002
8001c870:	3c078002 	lui	a3,0x8002
8001c874:	24843be4 	addiu	a0,a0,15332
8001c878:	2405011d 	li	a1,285
8001c87c:	24c609b0 	addiu	a2,a2,2480
8001c880:	0c006afd 	jal	8001abf4 <__panic>
8001c884:	24e73dec 	addiu	a3,a3,15852
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:290
	free_pages(p0 + 4, 2);
	free_pages(p1, 2);

	p1 = p0 + 4;
	assert(PageProperty(p1) && p1->property == 2);
8001c888:	3c048002 	lui	a0,0x8002
8001c88c:	3c068002 	lui	a2,0x8002
8001c890:	3c078002 	lui	a3,0x8002
8001c894:	24843be4 	addiu	a0,a0,15332
8001c898:	24050122 	li	a1,290
8001c89c:	24c609b0 	addiu	a2,a2,2480
8001c8a0:	0c006afd 	jal	8001abf4 <__panic>
8001c8a4:	24e73e0c 	addiu	a3,a3,15884
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:292
	free_pages(p0, 4);
	assert(PageProperty(p0) && p0->property == 3);
8001c8a8:	3c048002 	lui	a0,0x8002
8001c8ac:	24843be4 	addiu	a0,a0,15332
8001c8b0:	080071e8 	j	8001c7a0 <buddy_check+0x740>
8001c8b4:	24050124 	li	a1,292
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:294

	assert((p0 = alloc_pages(8)) != NULL);
8001c8b8:	3c048002 	lui	a0,0x8002
8001c8bc:	3c068002 	lui	a2,0x8002
8001c8c0:	3c078002 	lui	a3,0x8002
8001c8c4:	24843be4 	addiu	a0,a0,15332
8001c8c8:	24050126 	li	a1,294
8001c8cc:	24c609b0 	addiu	a2,a2,2480
8001c8d0:	0c006afd 	jal	8001abf4 <__panic>
8001c8d4:	24e73e34 	addiu	a3,a3,15924
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:295
	assert(alloc_page() == NULL && nr_free_pages() == 0);
8001c8d8:	3c048002 	lui	a0,0x8002
8001c8dc:	3c068002 	lui	a2,0x8002
8001c8e0:	3c078002 	lui	a3,0x8002
8001c8e4:	24843be4 	addiu	a0,a0,15332
8001c8e8:	24050127 	li	a1,295
8001c8ec:	24c609b0 	addiu	a2,a2,2480
8001c8f0:	0c006afd 	jal	8001abf4 <__panic>
8001c8f4:	24e73e54 	addiu	a3,a3,15956

8001c8f8 <buddy_free_pages_sub>:
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001c8f8:	27bdffb0 	addiu	sp,sp,-80
8001c8fc:	afb00028 	sw	s0,40(sp)
page2idx():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001c900:	8c90000c 	lw	s0,12(a0)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001c904:	afb30034 	sw	s3,52(sp)
page2idx():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001c908:	3c138015 	lui	s3,0x8015
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001c90c:	afb20030 	sw	s2,48(sp)
page2idx():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001c910:	267376b8 	addiu	s3,s3,30392
8001c914:	00109080 	sll	s2,s0,0x2
8001c918:	02721021 	addu	v0,s3,s2
8001c91c:	8c420000 	lw	v0,0(v0)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001c920:	afbe0048 	sw	s8,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001c924:	241e0001 	li	s8,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001c928:	afb60040 	sw	s6,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001c92c:	00bef004 	sllv	s8,s8,a1
page2idx():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001c930:	0082b023 	subu	s6,a0,v0
8001c934:	0016b143 	sra	s6,s6,0x5
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001c938:	27c3ffff 	addiu	v1,s8,-1
8001c93c:	00761824 	and	v1,v1,s6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001c940:	afb5003c 	sw	s5,60(sp)
8001c944:	afb1002c 	sw	s1,44(sp)
8001c948:	afbf004c 	sw	ra,76(sp)
8001c94c:	afb70044 	sw	s7,68(sp)
8001c950:	afb40038 	sw	s4,56(sp)
8001c954:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001c958:	146000ee 	bnez	v1,8001cd14 <buddy_free_pages_sub+0x41c>
8001c95c:	00a0a821 	move	s5,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:167
	struct Page *p = base;
	for (; p != base + (1 << order); p++) {
8001c960:	24170020 	li	s7,32
8001c964:	00b7b804 	sllv	s7,s7,a1
8001c968:	0097b821 	addu	s7,a0,s7
8001c96c:	1097001a 	beq	a0,s7,8001c9d8 <buddy_free_pages_sub+0xe0>
8001c970:	0080a021 	move	s4,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001c974:	40026000 	mfc0	v0,c0_status
8001c978:	30420001 	andi	v0,v0,0x1
8001c97c:	1440004b 	bnez	v0,8001caac <buddy_free_pages_sub+0x1b4>
8001c980:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c984:	8e900004 	lw	s0,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c988:	32100001 	andi	s0,s0,0x1
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:168
		assert(!PageReserved(p) && !PageProperty(p));
8001c98c:	160000da 	bnez	s0,8001ccf8 <buddy_free_pages_sub+0x400>
8001c990:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001c994:	40026000 	mfc0	v0,c0_status
8001c998:	30420001 	andi	v0,v0,0x1
8001c99c:	1440004a 	bnez	v0,8001cac8 <buddy_free_pages_sub+0x1d0>
8001c9a0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c9a4:	8e900004 	lw	s0,4(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c9a8:	7e100040 	ext	s0,s0,0x1,0x1
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:168
8001c9ac:	160000d2 	bnez	s0,8001ccf8 <buddy_free_pages_sub+0x400>
8001c9b0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:169
		p->flags = 0;
8001c9b4:	ae800004 	sw	zero,4(s4)
atomic_set():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8001c9b8:	ae800000 	sw	zero,0(s4)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:167
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
	struct Page *p = base;
	for (; p != base + (1 << order); p++) {
8001c9bc:	26940020 	addiu	s4,s4,32
8001c9c0:	1697ffec 	bne	s4,s7,8001c974 <buddy_free_pages_sub+0x7c>
8001c9c4:	00000000 	nop
8001c9c8:	8e30000c 	lw	s0,12(s1)
8001c9cc:	00109080 	sll	s2,s0,0x2
8001c9d0:	02721021 	addu	v0,s3,s2
8001c9d4:	8c420000 	lw	v0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001c9d8:	2ea3000a 	sltiu	v1,s5,10
8001c9dc:	1060000c 	beqz	v1,8001ca10 <buddy_free_pages_sub+0x118>
8001c9e0:	3c178015 	lui	s7,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		buddy_idx = page_idx ^ (1 << order);
8001c9e4:	02dea026 	xor	s4,s6,s8
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001c9e8:	8ee377bc 	lw	v1,30652(s7)
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001c9ec:	00148940 	sll	s1,s4,0x5
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139

//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
8001c9f0:	3c1e8015 	lui	s8,0x8015
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001c9f4:	00518821 	addu	s1,v0,s1
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139

//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
8001c9f8:	8fc47770 	lw	a0,30576(s8)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
8001c9fc:	02231823 	subu	v1,s1,v1
8001ca00:	00031943 	sra	v1,v1,0x5
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139
8001ca04:	0064182b 	sltu	v1,v1,a0
8001ca08:	54600036 	bnezl	v1,8001cae4 <buddy_free_pages_sub+0x1ec>
8001ca0c:	8e23000c 	lw	v1,12(s1)
8001ca10:	3c038015 	lui	v1,0x8015
8001ca14:	246376e0 	addiu	v1,v1,30432
8001ca18:	afa30010 	sw	v1,16(sp)
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001ca1c:	0016b140 	sll	s6,s6,0x5
8001ca20:	0056b021 	addu	s6,v0,s6
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:186
		ClearPageProperty(buddy);
		page_idx &= buddy_idx;
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
8001ca24:	aed50008 	sw	s5,8(s6)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001ca28:	40026000 	mfc0	v0,c0_status
8001ca2c:	30420001 	andi	v0,v0,0x1
8001ca30:	1440004a 	bnez	v0,8001cb5c <buddy_free_pages_sub+0x264>
8001ca34:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001ca38:	8ec20004 	lw	v0,4(s6)
8001ca3c:	34420002 	ori	v0,v0,0x2
8001ca40:	aec20004 	sw	v0,4(s6)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
	SetPageProperty(page);
	nr_free(order)++;
8001ca44:	00151080 	sll	v0,s5,0x2
8001ca48:	0015a900 	sll	s5,s5,0x4
8001ca4c:	02a2a823 	subu	s5,s5,v0
8001ca50:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:190
	list_add(&free_list(order), &(page->page_link));
}
8001ca54:	8fbf004c 	lw	ra,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:189
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
	SetPageProperty(page);
	nr_free(order)++;
	list_add(&free_list(order), &(page->page_link));
8001ca58:	26c30010 	addiu	v1,s6,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
	SetPageProperty(page);
	nr_free(order)++;
8001ca5c:	0055a821 	addu	s5,v0,s5
8001ca60:	8ea40008 	lw	a0,8(s5)
list_add_after():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001ca64:	8ea20004 	lw	v0,4(s5)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:190
	list_add(&free_list(order), &(page->page_link));
}
8001ca68:	8fbe0048 	lw	s8,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
	SetPageProperty(page);
	nr_free(order)++;
8001ca6c:	24840001 	addiu	a0,a0,1
8001ca70:	aea40008 	sw	a0,8(s5)
__list_add():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001ca74:	aea30004 	sw	v1,4(s5)
8001ca78:	ac430000 	sw	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001ca7c:	aec20014 	sw	v0,20(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001ca80:	aed50010 	sw	s5,16(s6)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:190
	list_add(&free_list(order), &(page->page_link));
}
8001ca84:	8fb70044 	lw	s7,68(sp)
8001ca88:	8fb60040 	lw	s6,64(sp)
8001ca8c:	8fb5003c 	lw	s5,60(sp)
8001ca90:	8fb40038 	lw	s4,56(sp)
8001ca94:	8fb30034 	lw	s3,52(sp)
8001ca98:	8fb20030 	lw	s2,48(sp)
8001ca9c:	8fb1002c 	lw	s1,44(sp)
8001caa0:	8fb00028 	lw	s0,40(sp)
8001caa4:	03e00008 	jr	ra
8001caa8:	27bd0050 	addiu	sp,sp,80
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001caac:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001cab0:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cab4:	8e900004 	lw	s0,4(s4)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cab8:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cabc:	32100001 	andi	s0,s0,0x1
8001cac0:	08007263 	j	8001c98c <buddy_free_pages_sub+0x94>
8001cac4:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001cac8:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001cacc:	00000000 	nop
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001cad0:	8e900004 	lw	s0,4(s4)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cad4:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cad8:	7e100040 	ext	s0,s0,0x1,0x1
8001cadc:	0800726b 	j	8001c9ac <buddy_free_pages_sub+0xb4>
8001cae0:	00000000 	nop
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:140
//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
		if (page->zone_num == zone_num) {
8001cae4:	1603ffcb 	bne	s0,v1,8001ca14 <buddy_free_pages_sub+0x11c>
8001cae8:	3c038015 	lui	v1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:162
	return zones[zone_num].mem_base + idx;
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
8001caec:	00151080 	sll	v0,s5,0x2
8001caf0:	00152100 	sll	a0,s5,0x4
8001caf4:	00822023 	subu	a0,a0,v0
8001caf8:	3c028015 	lui	v0,0x8015
8001cafc:	244276e0 	addiu	v0,v0,30432
8001cb00:	24840008 	addiu	a0,a0,8
8001cb04:	afa20010 	sw	v0,16(sp)
8001cb08:	00442021 	addu	a0,v0,a0
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cb0c:	2403000a 	li	v1,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		buddy_idx = page_idx ^ (1 << order);
8001cb10:	24060001 	li	a2,1
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cb14:	02722821 	addu	a1,s3,s2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001cb18:	40026000 	mfc0	v0,c0_status
8001cb1c:	30420001 	andi	v0,v0,0x1
8001cb20:	54400048 	bnezl	v0,8001cc44 <buddy_free_pages_sub+0x34c>
8001cb24:	afa3001c 	sw	v1,28(sp)
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001cb28:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cb2c:	30420001 	andi	v0,v0,0x1
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:141
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
		if (page->zone_num == zone_num) {
			return !PageReserved(page) && PageProperty(page)
8001cb30:	10400013 	beqz	v0,8001cb80 <buddy_free_pages_sub+0x288>
8001cb34:	00000000 	nop
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cb38:	02729021 	addu	s2,s3,s2
8001cb3c:	8e420000 	lw	v0,0(s2)
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cb40:	0016b140 	sll	s6,s6,0x5
8001cb44:	0056b021 	addu	s6,v0,s6
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:186
		ClearPageProperty(buddy);
		page_idx &= buddy_idx;
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
8001cb48:	aed50008 	sw	s5,8(s6)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001cb4c:	40026000 	mfc0	v0,c0_status
8001cb50:	30420001 	andi	v0,v0,0x1
8001cb54:	1040ffb8 	beqz	v0,8001ca38 <buddy_free_pages_sub+0x140>
8001cb58:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001cb5c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001cb60:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001cb64:	8ec20004 	lw	v0,4(s6)
8001cb68:	34420002 	ori	v0,v0,0x2
8001cb6c:	aec20004 	sw	v0,4(s6)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cb70:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cb74:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
	SetPageProperty(page);
	nr_free(order)++;
8001cb78:	08007292 	j	8001ca48 <buddy_free_pages_sub+0x150>
8001cb7c:	00151080 	sll	v0,s5,0x2
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001cb80:	40026000 	mfc0	v0,c0_status
8001cb84:	30420001 	andi	v0,v0,0x1
8001cb88:	5440003e 	bnezl	v0,8001cc84 <buddy_free_pages_sub+0x38c>
8001cb8c:	afa3001c 	sw	v1,28(sp)
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cb90:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cb94:	7c420040 	ext	v0,v0,0x1,0x1
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:141
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
		if (page->zone_num == zone_num) {
			return !PageReserved(page) && PageProperty(page)
8001cb98:	5040ffe8 	beqzl	v0,8001cb3c <buddy_free_pages_sub+0x244>
8001cb9c:	02729021 	addu	s2,s3,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:142
			    && page->property == order;
8001cba0:	8e220008 	lw	v0,8(s1)
8001cba4:	56a2ffe5 	bnel	s5,v0,8001cb3c <buddy_free_pages_sub+0x244>
8001cba8:	02729021 	addu	s2,s3,s2
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:179
		buddy_idx = page_idx ^ (1 << order);
		struct Page *buddy = idx2page(zone_num, buddy_idx);
		if (!page_is_buddy(buddy, order, zone_num)) {
			break;
		}
		nr_free(order)--;
8001cbac:	8c820000 	lw	v0,0(a0)
8001cbb0:	2442ffff 	addiu	v0,v0,-1
8001cbb4:	ac820000 	sw	v0,0(a0)
list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001cbb8:	8e270010 	lw	a3,16(s1)
8001cbbc:	8e220014 	lw	v0,20(s1)
__list_del():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001cbc0:	ace20004 	sw	v0,4(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8001cbc4:	ac470000 	sw	a3,0(v0)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001cbc8:	40026000 	mfc0	v0,c0_status
8001cbcc:	30420001 	andi	v0,v0,0x1
8001cbd0:	5440003a 	bnezl	v0,8001ccbc <buddy_free_pages_sub+0x3c4>
8001cbd4:	afa3001c 	sw	v1,28(sp)
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
8001cbd8:	8e220004 	lw	v0,4(s1)
8001cbdc:	2407fffd 	li	a3,-3
8001cbe0:	00471024 	and	v0,v0,a3
8001cbe4:	ae220004 	sw	v0,4(s1)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:183
		list_del(&(buddy->page_link));
		ClearPageProperty(buddy);
		page_idx &= buddy_idx;
		order++;
8001cbe8:	26b50001 	addiu	s5,s5,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cbec:	12a3ffd2 	beq	s5,v1,8001cb38 <buddy_free_pages_sub+0x240>
8001cbf0:	02d4b024 	and	s6,s6,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		buddy_idx = page_idx ^ (1 << order);
8001cbf4:	02a6a004 	sllv	s4,a2,s5
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cbf8:	8ca20000 	lw	v0,0(a1)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
		buddy_idx = page_idx ^ (1 << order);
8001cbfc:	0296a026 	xor	s4,s4,s6
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
8001cc00:	8ee777bc 	lw	a3,30652(s7)
idx2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cc04:	00148940 	sll	s1,s4,0x5
8001cc08:	00518821 	addu	s1,v0,s1
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139

//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
8001cc0c:	8fc87770 	lw	t0,30576(s8)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
8001cc10:	02273823 	subu	a3,s1,a3
8001cc14:	00073943 	sra	a3,a3,0x5
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139
8001cc18:	00e8382b 	sltu	a3,a3,t0
8001cc1c:	50e0ff80 	beqzl	a3,8001ca20 <buddy_free_pages_sub+0x128>
8001cc20:	0016b140 	sll	s6,s6,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:140
		if (page->zone_num == zone_num) {
8001cc24:	8e27000c 	lw	a3,12(s1)
8001cc28:	1607ff7c 	bne	s0,a3,8001ca1c <buddy_free_pages_sub+0x124>
8001cc2c:	2484000c 	addiu	a0,a0,12
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
8001cc30:	40026000 	mfc0	v0,c0_status
8001cc34:	30420001 	andi	v0,v0,0x1
8001cc38:	1040ffbb 	beqz	v0,8001cb28 <buddy_free_pages_sub+0x230>
8001cc3c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001cc40:	afa3001c 	sw	v1,28(sp)
8001cc44:	afa40018 	sw	a0,24(sp)
8001cc48:	afa50024 	sw	a1,36(sp)
8001cc4c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001cc50:	afa60020 	sw	a2,32(sp)
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cc54:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cc58:	30420001 	andi	v0,v0,0x1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cc5c:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cc60:	afa20014 	sw	v0,20(sp)
8001cc64:	8fa20014 	lw	v0,20(sp)
8001cc68:	8fa3001c 	lw	v1,28(sp)
8001cc6c:	8fa40018 	lw	a0,24(sp)
8001cc70:	8fa50024 	lw	a1,36(sp)
page_is_buddy():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:141
			return !PageReserved(page) && PageProperty(page)
8001cc74:	1440ffb0 	bnez	v0,8001cb38 <buddy_free_pages_sub+0x240>
8001cc78:	8fa60020 	lw	a2,32(sp)
8001cc7c:	080072e0 	j	8001cb80 <buddy_free_pages_sub+0x288>
8001cc80:	00000000 	nop
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001cc84:	afa40018 	sw	a0,24(sp)
8001cc88:	afa50024 	sw	a1,36(sp)
8001cc8c:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001cc90:	afa60020 	sw	a2,32(sp)
test_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cc94:	8e220004 	lw	v0,4(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cc98:	7c420040 	ext	v0,v0,0x1,0x1
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cc9c:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cca0:	afa20014 	sw	v0,20(sp)
8001cca4:	8fa20014 	lw	v0,20(sp)
8001cca8:	8fa3001c 	lw	v1,28(sp)
8001ccac:	8fa40018 	lw	a0,24(sp)
8001ccb0:	8fa50024 	lw	a1,36(sp)
8001ccb4:	080072e6 	j	8001cb98 <buddy_free_pages_sub+0x2a0>
8001ccb8:	8fa60020 	lw	a2,32(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001ccbc:	afa40018 	sw	a0,24(sp)
8001ccc0:	afa50024 	sw	a1,36(sp)
8001ccc4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001ccc8:	afa60020 	sw	a2,32(sp)
clear_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
8001cccc:	8e220004 	lw	v0,4(s1)
8001ccd0:	2407fffd 	li	a3,-3
8001ccd4:	00471024 	and	v0,v0,a3
8001ccd8:	ae220004 	sw	v0,4(s1)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001ccdc:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cce0:	26b50001 	addiu	s5,s5,1
8001cce4:	8fa3001c 	lw	v1,28(sp)
8001cce8:	8fa40018 	lw	a0,24(sp)
8001ccec:	8fa50024 	lw	a1,36(sp)
8001ccf0:	080072fb 	j	8001cbec <buddy_free_pages_sub+0x2f4>
8001ccf4:	8fa60020 	lw	a2,32(sp)
buddy_free_pages_sub():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:168
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
	struct Page *p = base;
	for (; p != base + (1 << order); p++) {
		assert(!PageReserved(p) && !PageProperty(p));
8001ccf8:	3c068002 	lui	a2,0x8002
8001ccfc:	3c078002 	lui	a3,0x8002
8001cd00:	24843be4 	addiu	a0,a0,15332
8001cd04:	240500a8 	li	a1,168
8001cd08:	24c609b0 	addiu	a2,a2,2480
8001cd0c:	0c006afd 	jal	8001abf4 <__panic>
8001cd10:	24e73ec4 	addiu	a3,a3,16068
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001cd14:	3c048002 	lui	a0,0x8002
8001cd18:	3c068002 	lui	a2,0x8002
8001cd1c:	3c078002 	lui	a3,0x8002
8001cd20:	24843be4 	addiu	a0,a0,15332
8001cd24:	240500a5 	li	a1,165
8001cd28:	24c609b0 	addiu	a2,a2,2480
8001cd2c:	0c006afd 	jal	8001abf4 <__panic>
8001cd30:	24e73e9c 	addiu	a3,a3,16028

8001cd34 <buddy_free_pages>:
buddy_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:194
	list_add(&free_list(order), &(page->page_link));
}

//buddy_free_pages - call buddy_free_pages_sub to free n continuous page block
static void buddy_free_pages(struct Page *base, size_t n)
{
8001cd34:	27bdffd0 	addiu	sp,sp,-48
8001cd38:	afb30020 	sw	s3,32(sp)
8001cd3c:	afb2001c 	sw	s2,28(sp)
8001cd40:	afbf002c 	sw	ra,44(sp)
8001cd44:	afb50028 	sw	s5,40(sp)
8001cd48:	afb40024 	sw	s4,36(sp)
8001cd4c:	afb10018 	sw	s1,24(sp)
8001cd50:	afb00014 	sw	s0,20(sp)
8001cd54:	00a09021 	move	s2,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:195
	assert(n > 0);
8001cd58:	10a0004b 	beqz	a1,8001ce88 <buddy_free_pages+0x154>
8001cd5c:	00809821 	move	s3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:196
	if (n == 1) {
8001cd60:	24020001 	li	v0,1
8001cd64:	10a2003e 	beq	a1,v0,8001ce60 <buddy_free_pages+0x12c>
8001cd68:	3c148015 	lui	s4,0x8015
8001cd6c:	24100001 	li	s0,1
8001cd70:	00008821 	move	s1,zero
8001cd74:	269476b8 	addiu	s4,s4,30392
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:201
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
8001cd78:	08007365 	j	8001cd94 <buddy_free_pages+0x60>
8001cd7c:	2415000b 	li	s5,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:200
	assert(n > 0);
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
8001cd80:	0250102b 	sltu	v0,s2,s0
8001cd84:	14400016 	bnez	v0,8001cde0 <buddy_free_pages+0xac>
8001cd88:	26310001 	addiu	s1,s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:201
			assert(order <= MAX_ORDER);
8001cd8c:	1235002d 	beq	s1,s5,8001ce44 <buddy_free_pages+0x110>
8001cd90:	3c048002 	lui	a0,0x8002
page2idx():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001cd94:	8e62000c 	lw	v0,12(s3)
8001cd98:	00021080 	sll	v0,v0,0x2
8001cd9c:	02821021 	addu	v0,s4,v0
8001cda0:	8c420000 	lw	v0,0(v0)
8001cda4:	02621023 	subu	v0,s3,v0
8001cda8:	00021143 	sra	v0,v0,0x5
buddy_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:202
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
			if ((page2idx(base) & order_size) != 0) {
8001cdac:	00501024 	and	v0,v0,s0
8001cdb0:	5040fff3 	beqzl	v0,8001cd80 <buddy_free_pages+0x4c>
8001cdb4:	00108040 	sll	s0,s0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:203
				buddy_free_pages_sub(base, order);
8001cdb8:	02602021 	move	a0,s3
8001cdbc:	02202821 	move	a1,s1
8001cdc0:	0c00723e 	jal	8001c8f8 <buddy_free_pages_sub>
8001cdc4:	02509023 	subu	s2,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:204
				base += order_size;
8001cdc8:	00101140 	sll	v0,s0,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:208
				n -= order_size;
			}
			order++;
			order_size <<= 1;
8001cdcc:	00108040 	sll	s0,s0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:204
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
			if ((page2idx(base) & order_size) != 0) {
				buddy_free_pages_sub(base, order);
				base += order_size;
8001cdd0:	02629821 	addu	s3,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:200
	assert(n > 0);
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
8001cdd4:	0250102b 	sltu	v0,s2,s0
8001cdd8:	1040ffec 	beqz	v0,8001cd8c <buddy_free_pages+0x58>
8001cddc:	26310001 	addiu	s1,s1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:210
				n -= order_size;
			}
			order++;
			order_size <<= 1;
		}
		while (n != 0) {
8001cde0:	12400010 	beqz	s2,8001ce24 <buddy_free_pages+0xf0>
8001cde4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:211
			while (n < order_size) {
8001cde8:	0250102b 	sltu	v0,s2,s0
8001cdec:	10400006 	beqz	v0,8001ce08 <buddy_free_pages+0xd4>
8001cdf0:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:213
				order--;
				order_size >>= 1;
8001cdf4:	00108042 	srl	s0,s0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:211
			}
			order++;
			order_size <<= 1;
		}
		while (n != 0) {
			while (n < order_size) {
8001cdf8:	0250102b 	sltu	v0,s2,s0
8001cdfc:	1440fffd 	bnez	v0,8001cdf4 <buddy_free_pages+0xc0>
8001ce00:	2631ffff 	addiu	s1,s1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:215
				order--;
				order_size >>= 1;
			}
			buddy_free_pages_sub(base, order);
8001ce04:	02602021 	move	a0,s3
8001ce08:	0c00723e 	jal	8001c8f8 <buddy_free_pages_sub>
8001ce0c:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:217
			base += order_size;
			n -= order_size;
8001ce10:	02509023 	subu	s2,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:216
			while (n < order_size) {
				order--;
				order_size >>= 1;
			}
			buddy_free_pages_sub(base, order);
			base += order_size;
8001ce14:	00101140 	sll	v0,s0,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:210
				n -= order_size;
			}
			order++;
			order_size <<= 1;
		}
		while (n != 0) {
8001ce18:	1640fff3 	bnez	s2,8001cde8 <buddy_free_pages+0xb4>
8001ce1c:	02629821 	addu	s3,s3,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:220
			buddy_free_pages_sub(base, order);
			base += order_size;
			n -= order_size;
		}
	}
}
8001ce20:	8fbf002c 	lw	ra,44(sp)
8001ce24:	8fb50028 	lw	s5,40(sp)
8001ce28:	8fb40024 	lw	s4,36(sp)
8001ce2c:	8fb30020 	lw	s3,32(sp)
8001ce30:	8fb2001c 	lw	s2,28(sp)
8001ce34:	8fb10018 	lw	s1,24(sp)
8001ce38:	8fb00014 	lw	s0,20(sp)
8001ce3c:	03e00008 	jr	ra
8001ce40:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:201
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
8001ce44:	3c068002 	lui	a2,0x8002
8001ce48:	3c078002 	lui	a3,0x8002
8001ce4c:	24843be4 	addiu	a0,a0,15332
8001ce50:	240500c9 	li	a1,201
8001ce54:	24c609b0 	addiu	a2,a2,2480
8001ce58:	0c006afd 	jal	8001abf4 <__panic>
8001ce5c:	24e73eec 	addiu	a3,a3,16108
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:220
			buddy_free_pages_sub(base, order);
			base += order_size;
			n -= order_size;
		}
	}
}
8001ce60:	8fbf002c 	lw	ra,44(sp)
8001ce64:	8fb50028 	lw	s5,40(sp)
8001ce68:	8fb40024 	lw	s4,36(sp)
8001ce6c:	8fb30020 	lw	s3,32(sp)
8001ce70:	8fb2001c 	lw	s2,28(sp)
8001ce74:	8fb10018 	lw	s1,24(sp)
8001ce78:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:197
//buddy_free_pages - call buddy_free_pages_sub to free n continuous page block
static void buddy_free_pages(struct Page *base, size_t n)
{
	assert(n > 0);
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
8001ce7c:	00002821 	move	a1,zero
8001ce80:	0800723e 	j	8001c8f8 <buddy_free_pages_sub>
8001ce84:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/buddy_pmm.c:195
}

//buddy_free_pages - call buddy_free_pages_sub to free n continuous page block
static void buddy_free_pages(struct Page *base, size_t n)
{
	assert(n > 0);
8001ce88:	3c048002 	lui	a0,0x8002
8001ce8c:	3c068002 	lui	a2,0x8002
8001ce90:	3c078002 	lui	a3,0x8002
8001ce94:	24843be4 	addiu	a0,a0,15332
8001ce98:	240500c3 	li	a1,195
8001ce9c:	24c609b0 	addiu	a2,a2,2480
8001cea0:	0c006afd 	jal	8001abf4 <__panic>
8001cea4:	24e73c24 	addiu	a3,a3,15396

8001cea8 <get_pgtable_items.isra.0.part.1.constprop.3>:
get_pgtable_items():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:392
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
		return 0;
	}
	while (start < right && !(table[start] & PTE_P)) {
8001cea8:	2c830400 	sltiu	v1,a0,1024
8001ceac:	10600014 	beqz	v1,8001cf00 <get_pgtable_items.isra.0.part.1.constprop.3+0x58>
8001ceb0:	00001021 	move	v0,zero
8001ceb4:	00044080 	sll	t0,a0,0x2
8001ceb8:	00a84021 	addu	t0,a1,t0
8001cebc:	8d020000 	lw	v0,0(t0)
8001cec0:	30420001 	andi	v0,v0,0x1
8001cec4:	14400010 	bnez	v0,8001cf08 <get_pgtable_items.isra.0.part.1.constprop.3+0x60>
8001cec8:	24820001 	addiu	v0,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:386
//  table:       the beginning addr of table
//  left_store:  the pointer of the high side of table's next range
//  right_store: the pointer of the low side of table's next range
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
8001cecc:	00021880 	sll	v1,v0,0x2
8001ced0:	00a31821 	addu	v1,a1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:392
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
		return 0;
	}
	while (start < right && !(table[start] & PTE_P)) {
8001ced4:	080073bc 	j	8001cef0 <get_pgtable_items.isra.0.part.1.constprop.3+0x48>
8001ced8:	240a0400 	li	t2,1024
8001cedc:	8c690000 	lw	t1,0(v1)
8001cee0:	24420001 	addiu	v0,v0,1
8001cee4:	31290001 	andi	t1,t1,0x1
8001cee8:	15200007 	bnez	t1,8001cf08 <get_pgtable_items.isra.0.part.1.constprop.3+0x60>
8001ceec:	24630004 	addiu	v1,v1,4
8001cef0:	00604021 	move	t0,v1
8001cef4:	144afff9 	bne	v0,t2,8001cedc <get_pgtable_items.isra.0.part.1.constprop.3+0x34>
8001cef8:	00402021 	move	a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:408
		if (right_store != NULL) {
			*right_store = start;
		}
		return perm;
	}
	return 0;
8001cefc:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:409
}
8001cf00:	03e00008 	jr	ra
8001cf04:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:396
	}
	while (start < right && !(table[start] & PTE_P)) {
		start++;
	}
	if (start < right) {
		if (left_store != NULL) {
8001cf08:	54c00001 	bnezl	a2,8001cf10 <get_pgtable_items.isra.0.part.1.constprop.3+0x68>
8001cf0c:	acc40000 	sw	a0,0(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:399
			*left_store = start;
		}
		int perm = (table[start++] & PTE_USER);
8001cf10:	8d020000 	lw	v0,0(t0)
8001cf14:	24830001 	addiu	v1,a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:400
		while (start < right && (table[start] & PTE_USER) == perm) {
8001cf18:	24060400 	li	a2,1024
8001cf1c:	10660010 	beq	v1,a2,8001cf60 <get_pgtable_items.isra.0.part.1.constprop.3+0xb8>
8001cf20:	30420007 	andi	v0,v0,0x7
8001cf24:	00033080 	sll	a2,v1,0x2
8001cf28:	00a63021 	addu	a2,a1,a2
8001cf2c:	8cc60000 	lw	a2,0(a2)
8001cf30:	30c60007 	andi	a2,a2,0x7
8001cf34:	14c2000a 	bne	a2,v0,8001cf60 <get_pgtable_items.isra.0.part.1.constprop.3+0xb8>
8001cf38:	00042080 	sll	a0,a0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:386
//  table:       the beginning addr of table
//  left_store:  the pointer of the high side of table's next range
//  right_store: the pointer of the low side of table's next range
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
8001cf3c:	00a42821 	addu	a1,a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:400
	if (start < right) {
		if (left_store != NULL) {
			*left_store = start;
		}
		int perm = (table[start++] & PTE_USER);
		while (start < right && (table[start] & PTE_USER) == perm) {
8001cf40:	080073d5 	j	8001cf54 <get_pgtable_items.isra.0.part.1.constprop.3+0xac>
8001cf44:	24080400 	li	t0,1024
8001cf48:	30840007 	andi	a0,a0,0x7
8001cf4c:	14860004 	bne	a0,a2,8001cf60 <get_pgtable_items.isra.0.part.1.constprop.3+0xb8>
8001cf50:	24a50004 	addiu	a1,a1,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:401
			start++;
8001cf54:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:400
	if (start < right) {
		if (left_store != NULL) {
			*left_store = start;
		}
		int perm = (table[start++] & PTE_USER);
		while (start < right && (table[start] & PTE_USER) == perm) {
8001cf58:	5468fffb 	bnel	v1,t0,8001cf48 <get_pgtable_items.isra.0.part.1.constprop.3+0xa0>
8001cf5c:	8ca40008 	lw	a0,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:403
			start++;
		}
		if (right_store != NULL) {
8001cf60:	10e0ffe7 	beqz	a3,8001cf00 <get_pgtable_items.isra.0.part.1.constprop.3+0x58>
8001cf64:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:404
			*right_store = start;
8001cf68:	03e00008 	jr	ra
8001cf6c:	ace30000 	sw	v1,0(a3)

8001cf70 <lcr3>:
lcr3():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:37
static void check_pgdir(void);
static void check_boot_pgdir(void);

void lcr3(uintptr_t cr3)
{
	current_pgdir = (pde_t *) cr3;
8001cf70:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:38
}
8001cf74:	03e00008 	jr	ra
8001cf78:	ac447768 	sw	a0,30568(v0)

8001cf7c <alloc_pages>:
alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:58
	pmm_manager->init_memmap(base, n);
}

//alloc_pages - call pmm->alloc_pages to allocate a continuous n*PAGESIZE memory 
struct Page *alloc_pages(size_t n)
{
8001cf7c:	27bdffe0 	addiu	sp,sp,-32
8001cf80:	afb00018 	sw	s0,24(sp)
8001cf84:	afbf001c 	sw	ra,28(sp)
8001cf88:	00808021 	move	s0,a0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001cf8c:	40026000 	mfc0	v0,c0_status
8001cf90:	30420001 	andi	v0,v0,0x1
8001cf94:	14400007 	bnez	v0,8001cfb4 <alloc_pages+0x38>
8001cf98:	3c028015 	lui	v0,0x8015
alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:63
	struct Page *page;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		page = pmm_manager->alloc_pages(n);
8001cf9c:	8c427794 	lw	v0,30612(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:67
	}
	local_intr_restore(intr_flag);
	return page;
}
8001cfa0:	8fbf001c 	lw	ra,28(sp)
8001cfa4:	8fb00018 	lw	s0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:63
{
	struct Page *page;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		page = pmm_manager->alloc_pages(n);
8001cfa8:	8c59000c 	lw	t9,12(v0)
8001cfac:	03200008 	jr	t9
8001cfb0:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001cfb4:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001cfb8:	00000000 	nop
alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:63
8001cfbc:	3c028015 	lui	v0,0x8015
8001cfc0:	8c427794 	lw	v0,30612(v0)
8001cfc4:	8c42000c 	lw	v0,12(v0)
8001cfc8:	0040f809 	jalr	v0
8001cfcc:	02002021 	move	a0,s0
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cfd0:	0c006cba 	jal	8001b2e8 <intr_enable>
8001cfd4:	afa20010 	sw	v0,16(sp)
alloc_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:67
	}
	local_intr_restore(intr_flag);
	return page;
}
8001cfd8:	8fbf001c 	lw	ra,28(sp)
8001cfdc:	8fa20010 	lw	v0,16(sp)
8001cfe0:	8fb00018 	lw	s0,24(sp)
8001cfe4:	03e00008 	jr	ra
8001cfe8:	27bd0020 	addiu	sp,sp,32

8001cfec <free_pages>:
free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:71

//free_pages - call pmm->free_pages to free a continuous n*PAGESIZE memory 
void free_pages(struct Page *base, size_t n)
{
8001cfec:	27bdffe0 	addiu	sp,sp,-32
8001cff0:	afb10018 	sw	s1,24(sp)
8001cff4:	afb00014 	sw	s0,20(sp)
8001cff8:	afbf001c 	sw	ra,28(sp)
8001cffc:	00808821 	move	s1,a0
8001d000:	00a08021 	move	s0,a1
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d004:	40026000 	mfc0	v0,c0_status
8001d008:	30420001 	andi	v0,v0,0x1
8001d00c:	14400008 	bnez	v0,8001d030 <free_pages+0x44>
8001d010:	3c028015 	lui	v0,0x8015
free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:75
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		pmm_manager->free_pages(base, n);
8001d014:	8c427794 	lw	v0,30612(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:78
	}
	local_intr_restore(intr_flag);
}
8001d018:	8fbf001c 	lw	ra,28(sp)
8001d01c:	8fb10018 	lw	s1,24(sp)
8001d020:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:75
void free_pages(struct Page *base, size_t n)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		pmm_manager->free_pages(base, n);
8001d024:	8c590010 	lw	t9,16(v0)
8001d028:	03200008 	jr	t9
8001d02c:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d030:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001d034:	00000000 	nop
free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:75
8001d038:	3c028015 	lui	v0,0x8015
8001d03c:	8c427794 	lw	v0,30612(v0)
8001d040:	02202021 	move	a0,s1
8001d044:	8c420010 	lw	v0,16(v0)
8001d048:	0040f809 	jalr	v0
8001d04c:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:78
	}
	local_intr_restore(intr_flag);
}
8001d050:	8fbf001c 	lw	ra,28(sp)
8001d054:	8fb10018 	lw	s1,24(sp)
8001d058:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d05c:	08006cba 	j	8001b2e8 <intr_enable>
8001d060:	27bd0020 	addiu	sp,sp,32

8001d064 <nr_free_pages>:
nr_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:83

//nr_free_pages - call pmm->nr_free_pages to get the size (nr*PAGESIZE) 
//of current free memory
size_t nr_free_pages(void)
{
8001d064:	27bdffe0 	addiu	sp,sp,-32
8001d068:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d06c:	40026000 	mfc0	v0,c0_status
8001d070:	30420001 	andi	v0,v0,0x1
8001d074:	14400006 	bnez	v0,8001d090 <nr_free_pages+0x2c>
8001d078:	3c028015 	lui	v0,0x8015
nr_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:88
	size_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		ret = pmm_manager->nr_free_pages();
8001d07c:	8c427794 	lw	v0,30612(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:92
	}
	local_intr_restore(intr_flag);
	return ret;
}
8001d080:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:88
{
	size_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		ret = pmm_manager->nr_free_pages();
8001d084:	8c590014 	lw	t9,20(v0)
8001d088:	03200008 	jr	t9
8001d08c:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d090:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001d094:	00000000 	nop
nr_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:88
8001d098:	3c028015 	lui	v0,0x8015
8001d09c:	8c427794 	lw	v0,30612(v0)
8001d0a0:	8c420014 	lw	v0,20(v0)
8001d0a4:	0040f809 	jalr	v0
8001d0a8:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d0ac:	0c006cba 	jal	8001b2e8 <intr_enable>
8001d0b0:	afa20010 	sw	v0,16(sp)
nr_free_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:92
	}
	local_intr_restore(intr_flag);
	return ret;
}
8001d0b4:	8fbf001c 	lw	ra,28(sp)
8001d0b8:	8fa20010 	lw	v0,16(sp)
8001d0bc:	03e00008 	jr	ra
8001d0c0:	27bd0020 	addiu	sp,sp,32

8001d0c4 <print_pgdir>:
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:416
#define PRINT_PTE(s0, a0,a1,a2,a3,s1) kprintf(s0);printhex(a0);\
  kprintf(") ");printhex(a1);kprintf("-");printhex(a2);kprintf(" ");\
  printhex(a3);kprintf(" ");kprintf(s1);kprintf("\n");
//print_pgdir - print the PDT&PT
void print_pgdir(void)
{
8001d0c4:	27bdffa8 	addiu	sp,sp,-88
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:418
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
8001d0c8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:416
#define PRINT_PTE(s0, a0,a1,a2,a3,s1) kprintf(s0);printhex(a0);\
  kprintf(") ");printhex(a1);kprintf("-");printhex(a2);kprintf(" ");\
  printhex(a3);kprintf(" ");kprintf(s1);kprintf("\n");
//print_pgdir - print the PDT&PT
void print_pgdir(void)
{
8001d0cc:	afb60048 	sw	s6,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:418
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
8001d0d0:	24843f14 	addiu	a0,a0,16148
8001d0d4:	3c168015 	lui	s6,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:416
#define PRINT_PTE(s0, a0,a1,a2,a3,s1) kprintf(s0);printhex(a0);\
  kprintf(") ");printhex(a1);kprintf("-");printhex(a2);kprintf(" ");\
  printhex(a3);kprintf(" ");kprintf(s1);kprintf("\n");
//print_pgdir - print the PDT&PT
void print_pgdir(void)
{
8001d0d8:	afbe0050 	sw	s8,80(sp)
8001d0dc:	afb00030 	sw	s0,48(sp)
8001d0e0:	afbf0054 	sw	ra,84(sp)
8001d0e4:	afb7004c 	sw	s7,76(sp)
8001d0e8:	afb50044 	sw	s5,68(sp)
8001d0ec:	afb40040 	sw	s4,64(sp)
8001d0f0:	afb3003c 	sw	s3,60(sp)
8001d0f4:	afb20038 	sw	s2,56(sp)
8001d0f8:	afb10034 	sw	s1,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:418
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
8001d0fc:	0c00798a 	jal	8001e628 <kprintf>
8001d100:	afa00018 	sw	zero,24(sp)
8001d104:	8fa40018 	lw	a0,24(sp)
8001d108:	8ec57768 	lw	a1,30568(s6)
perm2str():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d10c:	3c1e8015 	lui	s8,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:368
	str[1] = 'r';
8001d110:	27d07774 	addiu	s0,s8,30580
get_pgtable_items():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d114:	2c820400 	sltiu	v0,a0,1024
8001d118:	14400010 	bnez	v0,8001d15c <print_pgdir+0x98>
8001d11c:	27a6001c 	addiu	a2,sp,28
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:461
					count_ref_l = r;
				}
			}
		}
	}
	kprintf("---------------- PAGE Directory END ------------------\n\r");
8001d120:	3c048002 	lui	a0,0x8002
8001d124:	0c00798a 	jal	8001e628 <kprintf>
8001d128:	24843f6c 	addiu	a0,a0,16236
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:462
}
8001d12c:	8fbf0054 	lw	ra,84(sp)
8001d130:	8fbe0050 	lw	s8,80(sp)
8001d134:	8fb7004c 	lw	s7,76(sp)
8001d138:	8fb60048 	lw	s6,72(sp)
8001d13c:	8fb50044 	lw	s5,68(sp)
8001d140:	8fb40040 	lw	s4,64(sp)
8001d144:	8fb3003c 	lw	s3,60(sp)
8001d148:	8fb20038 	lw	s2,56(sp)
8001d14c:	8fb10034 	lw	s1,52(sp)
8001d150:	8fb00030 	lw	s0,48(sp)
8001d154:	03e00008 	jr	ra
8001d158:	27bd0058 	addiu	sp,sp,88
get_pgtable_items():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d15c:	0c0073aa 	jal	8001cea8 <get_pgtable_items.isra.0.part.1.constprop.3>
8001d160:	27a70018 	addiu	a3,sp,24
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:420
void print_pgdir(void)
{
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
8001d164:	1040ffee 	beqz	v0,8001d120 <print_pgdir+0x5c>
8001d168:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:423
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d16c:	3c028002 	lui	v0,0x8002
8001d170:	0c00798a 	jal	8001e628 <kprintf>
8001d174:	24443f50 	addiu	a0,v0,16208
8001d178:	8fa2001c 	lw	v0,28(sp)
8001d17c:	8fa40018 	lw	a0,24(sp)
8001d180:	3c138002 	lui	s3,0x8002
8001d184:	3c158002 	lui	s5,0x8002
8001d188:	0c007996 	jal	8001e658 <printhex>
8001d18c:	00822023 	subu	a0,a0,v0
8001d190:	3c048002 	lui	a0,0x8002
8001d194:	0c00798a 	jal	8001e628 <kprintf>
8001d198:	24843f58 	addiu	a0,a0,16216
8001d19c:	8fa4001c 	lw	a0,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:429
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
						    (pte_t *)
						    PDE_ADDR(current_pgdir
8001d1a0:	3c128015 	lui	s2,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:423
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d1a4:	0c007996 	jal	8001e658 <printhex>
8001d1a8:	00042580 	sll	a0,a0,0x16
8001d1ac:	3c038002 	lui	v1,0x8002
8001d1b0:	0c00798a 	jal	8001e628 <kprintf>
8001d1b4:	24643f5c 	addiu	a0,v1,16220
8001d1b8:	8fa40018 	lw	a0,24(sp)
8001d1bc:	0c007996 	jal	8001e658 <printhex>
8001d1c0:	00042580 	sll	a0,a0,0x16
8001d1c4:	0c00798a 	jal	8001e628 <kprintf>
8001d1c8:	26643aac 	addiu	a0,s3,15020
8001d1cc:	8fa2001c 	lw	v0,28(sp)
8001d1d0:	8fa40018 	lw	a0,24(sp)
8001d1d4:	00822023 	subu	a0,a0,v0
8001d1d8:	0c007996 	jal	8001e658 <printhex>
8001d1dc:	00042580 	sll	a0,a0,0x16
8001d1e0:	0c00798a 	jal	8001e628 <kprintf>
8001d1e4:	26643aac 	addiu	a0,s3,15020
perm2str():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d1e8:	32240004 	andi	a0,s1,0x4
8001d1ec:	2403002d 	li	v1,45
8001d1f0:	24020075 	li	v0,117
8001d1f4:	0064100a 	movz	v0,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[1] = 'r';
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d1f8:	32310002 	andi	s1,s1,0x2
8001d1fc:	24040077 	li	a0,119
8001d200:	0091180b 	movn	v1,a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d204:	a3c27774 	sb	v0,30580(s8)
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:423
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d208:	02002021 	move	a0,s0
perm2str():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:368
//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
	str[1] = 'r';
8001d20c:	24020072 	li	v0,114
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d210:	a2030002 	sb	v1,2(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:368
//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
	str[1] = 'r';
8001d214:	a2020001 	sb	v0,1(s0)
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:423
	kprintf("---------------- PAGE Directory BEGIN ----------------\n\r");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d218:	0c00798a 	jal	8001e628 <kprintf>
8001d21c:	a2000003 	sb	zero,3(s0)
8001d220:	0c00798a 	jal	8001e628 <kprintf>
8001d224:	26a42af4 	addiu	a0,s5,10996
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:429
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
						    (pte_t *)
						    PDE_ADDR(current_pgdir
8001d228:	8fa2001c 	lw	v0,28(sp)
8001d22c:	8ec37768 	lw	v1,30568(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:425
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;
8001d230:	afa00010 	sw	zero,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:429

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
						    (pte_t *)
						    PDE_ADDR(current_pgdir
8001d234:	00021080 	sll	v0,v0,0x2
8001d238:	00621021 	addu	v0,v1,v0
8001d23c:	8c450000 	lw	a1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:425
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;
8001d240:	2402f000 	li	v0,-4096
8001d244:	00002021 	move	a0,zero
8001d248:	00a22824 	and	a1,a1,v0
8001d24c:	27a60014 	addiu	a2,sp,20
8001d250:	0c0073aa 	jal	8001cea8 <get_pgtable_items.isra.0.part.1.constprop.3>
8001d254:	27a70010 	addiu	a3,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:434
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
8001d258:	8fa4001c 	lw	a0,28(sp)
8001d25c:	8fa30018 	lw	v1,24(sp)
8001d260:	1083ffac 	beq	a0,v1,8001d114 <print_pgdir+0x50>
8001d264:	8e457768 	lw	a1,30568(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:427
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
8001d268:	00408821 	move	s1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:433
						    (pte_t *)
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
8001d26c:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:427
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
8001d270:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:432
						    (pte_t *)
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
8001d274:	0000b821 	move	s7,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:434
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
8001d278:	00009021 	move	s2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:444
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
8001d27c:	3c03003f 	lui	v1,0x3f
8001d280:	3463ffff 	ori	v1,v1,0xffff
8001d284:	02431821 	addu	v1,s2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:435
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
8001d288:	afa00010 	sw	zero,16(sp)
8001d28c:	afa00014 	sw	zero,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:436
			while ((perm =
8001d290:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:444
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
8001d294:	afa30024 	sw	v1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:438
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
			while ((perm =
				get_pgtable_items(0, NPTEENTRY, r, (pte_t *)
						  PDE_ADDR(current_pgdir
8001d298:	00521821 	addu	v1,v0,s2
8001d29c:	00031880 	sll	v1,v1,0x2
8001d2a0:	00a31821 	addu	v1,a1,v1
get_pgtable_items():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d2a4:	2c860400 	sltiu	a2,a0,1024
8001d2a8:	14c00009 	bnez	a2,8001d2d0 <print_pgdir+0x20c>
8001d2ac:	8c630000 	lw	v1,0(v1)
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:434
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
8001d2b0:	8fa40018 	lw	a0,24(sp)
8001d2b4:	26520001 	addiu	s2,s2,1
8001d2b8:	00821823 	subu	v1,a0,v0
8001d2bc:	0243182b 	sltu	v1,s2,v1
8001d2c0:	5060ff95 	beqzl	v1,8001d118 <print_pgdir+0x54>
8001d2c4:	2c820400 	sltiu	v0,a0,1024
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:444
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
8001d2c8:	080074a0 	j	8001d280 <print_pgdir+0x1bc>
8001d2cc:	3c03003f 	lui	v1,0x3f
get_pgtable_items():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d2d0:	2402f000 	li	v0,-4096
8001d2d4:	27a60014 	addiu	a2,sp,20
8001d2d8:	00622824 	and	a1,v1,v0
8001d2dc:	0c0073aa 	jal	8001cea8 <get_pgtable_items.isra.0.part.1.constprop.3>
8001d2e0:	27a70010 	addiu	a3,sp,16
8001d2e4:	00401821 	move	v1,v0
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d2e8:	8fa20024 	lw	v0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:447
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d2ec:	3c048002 	lui	a0,0x8002
8001d2f0:	24843f60 	addiu	a0,a0,16224
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d2f4:	00573023 	subu	a2,v0,s7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:436
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
			while ((perm =
8001d2f8:	10600049 	beqz	v1,8001d420 <print_pgdir+0x35c>
8001d2fc:	00063280 	sll	a2,a2,0xa
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:441
				get_pgtable_items(0, NPTEENTRY, r, (pte_t *)
						  PDE_ADDR(current_pgdir
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
8001d300:	1471000b 	bne	v1,s1,8001d330 <print_pgdir+0x26c>
8001d304:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:442
				    || count == right - left - 1) {
8001d308:	8fa50018 	lw	a1,24(sp)
8001d30c:	8fa2001c 	lw	v0,28(sp)
8001d310:	24a5ffff 	addiu	a1,a1,-1
8001d314:	00a22823 	subu	a1,a1,v0
8001d318:	50b20005 	beql	a1,s2,8001d330 <print_pgdir+0x26c>
8001d31c:	8fa20010 	lw	v0,16(sp)
8001d320:	8fa40010 	lw	a0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:456
						  r * PGSIZE,
						  total_entries * PGSIZE,
						  perm2str(perm_ref));
					perm_ref = perm;
					count_ref = count;
					count_ref_l = r;
8001d324:	8ec57768 	lw	a1,30568(s6)
8001d328:	080074a6 	j	8001d298 <print_pgdir+0x1d4>
8001d32c:	00608821 	move	s1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d330:	8fa50014 	lw	a1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:447
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d334:	afa30028 	sw	v1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d338:	24420400 	addiu	v0,v0,1024
8001d33c:	00451023 	subu	v0,v0,a1
8001d340:	00541023 	subu	v0,v0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:443
						  PDE_ADDR(current_pgdir
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
8001d344:	00463021 	addu	a2,v0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:447
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d348:	0c00798a 	jal	8001e628 <kprintf>
8001d34c:	afa60020 	sw	a2,32(sp)
8001d350:	0c007996 	jal	8001e658 <printhex>
8001d354:	8fa40020 	lw	a0,32(sp)
8001d358:	3c048002 	lui	a0,0x8002
8001d35c:	0c00798a 	jal	8001e628 <kprintf>
8001d360:	24843f58 	addiu	a0,a0,16216
8001d364:	8fa2001c 	lw	v0,28(sp)
8001d368:	02e2b821 	addu	s7,s7,v0
8001d36c:	0017ba80 	sll	s7,s7,0xa
8001d370:	02f4a021 	addu	s4,s7,s4
8001d374:	0c007996 	jal	8001e658 <printhex>
8001d378:	00142300 	sll	a0,s4,0xc
8001d37c:	3c028002 	lui	v0,0x8002
8001d380:	0c00798a 	jal	8001e628 <kprintf>
8001d384:	24443f5c 	addiu	a0,v0,16220
8001d388:	8fa4001c 	lw	a0,28(sp)
8001d38c:	8fa20010 	lw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:456
						  r * PGSIZE,
						  total_entries * PGSIZE,
						  perm2str(perm_ref));
					perm_ref = perm;
					count_ref = count;
					count_ref_l = r;
8001d390:	0240b821 	move	s7,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:447
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d394:	02442021 	addu	a0,s2,a0
8001d398:	00042280 	sll	a0,a0,0xa
8001d39c:	00822021 	addu	a0,a0,v0
8001d3a0:	0c007996 	jal	8001e658 <printhex>
8001d3a4:	00042300 	sll	a0,a0,0xc
8001d3a8:	0c00798a 	jal	8001e628 <kprintf>
8001d3ac:	26643aac 	addiu	a0,s3,15020
8001d3b0:	8fa20020 	lw	v0,32(sp)
8001d3b4:	0c007996 	jal	8001e658 <printhex>
8001d3b8:	00022300 	sll	a0,v0,0xc
8001d3bc:	0c00798a 	jal	8001e628 <kprintf>
8001d3c0:	26643aac 	addiu	a0,s3,15020
perm2str():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d3c4:	32260004 	andi	a2,s1,0x4
8001d3c8:	2404002d 	li	a0,45
8001d3cc:	24050075 	li	a1,117
8001d3d0:	0086280a 	movz	a1,a0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[1] = 'r';
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d3d4:	32310002 	andi	s1,s1,0x2
8001d3d8:	24020077 	li	v0,119
8001d3dc:	0091100a 	movz	v0,a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d3e0:	a3c57774 	sb	a1,30580(s8)
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:447
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d3e4:	02002021 	move	a0,s0
perm2str():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:368
//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
	str[1] = 'r';
8001d3e8:	24050072 	li	a1,114
8001d3ec:	a2050001 	sb	a1,1(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d3f0:	a2020002 	sb	v0,2(s0)
print_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:447
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d3f4:	0c00798a 	jal	8001e628 <kprintf>
8001d3f8:	a2000003 	sb	zero,3(s0)
8001d3fc:	0c00798a 	jal	8001e628 <kprintf>
8001d400:	26a42af4 	addiu	a0,s5,10996
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:456
						  r * PGSIZE,
						  total_entries * PGSIZE,
						  perm2str(perm_ref));
					perm_ref = perm;
					count_ref = count;
					count_ref_l = r;
8001d404:	8fb40010 	lw	s4,16(sp)
8001d408:	8fa30028 	lw	v1,40(sp)
8001d40c:	8fa2001c 	lw	v0,28(sp)
8001d410:	02802021 	move	a0,s4
8001d414:	8ec57768 	lw	a1,30568(s6)
8001d418:	080074a6 	j	8001d298 <print_pgdir+0x1d4>
8001d41c:	00608821 	move	s1,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:436
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
			while ((perm =
8001d420:	8fa2001c 	lw	v0,28(sp)
8001d424:	080074ac 	j	8001d2b0 <print_pgdir+0x1ec>
8001d428:	8ec57768 	lw	a1,30568(s6)

8001d42c <pmm_init>:
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:175
}

//pmm_init - setup a pmm to manage physical memory, build PDT&PT to setup paging mechanism 
//         - check the correctness of pmm & paging mechanism, print PDT&PT
void pmm_init(void)
{
8001d42c:	27bdffc8 	addiu	sp,sp,-56
init_pmm_manager():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:44

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
8001d430:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:43
}

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
8001d434:	3c028002 	lui	v0,0x8002
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:175
}

//pmm_init - setup a pmm to manage physical memory, build PDT&PT to setup paging mechanism 
//         - check the correctness of pmm & paging mechanism, print PDT&PT
void pmm_init(void)
{
8001d438:	afb50024 	sw	s5,36(sp)
init_pmm_manager():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:44

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
8001d43c:	24843fa8 	addiu	a0,a0,16296
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:43
}

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
8001d440:	3c158015 	lui	s5,0x8015
8001d444:	244204f0 	addiu	v0,v0,1264
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:175
}

//pmm_init - setup a pmm to manage physical memory, build PDT&PT to setup paging mechanism 
//         - check the correctness of pmm & paging mechanism, print PDT&PT
void pmm_init(void)
{
8001d448:	afbf0034 	sw	ra,52(sp)
8001d44c:	afb40020 	sw	s4,32(sp)
8001d450:	afb20018 	sw	s2,24(sp)
8001d454:	afb10014 	sw	s1,20(sp)
8001d458:	afbe0030 	sw	s8,48(sp)
8001d45c:	afb7002c 	sw	s7,44(sp)
8001d460:	afb60028 	sw	s6,40(sp)
8001d464:	afb3001c 	sw	s3,28(sp)
8001d468:	afb00010 	sw	s0,16(sp)
init_pmm_manager():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:44

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
8001d46c:	0c00798a 	jal	8001e628 <kprintf>
8001d470:	aea27794 	sw	v0,30612(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:45
	kprintf(pmm_manager->name);
8001d474:	8ea27794 	lw	v0,30612(s5)
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:109
	kprintf(", 0x");
	printhex(KERNTOP);
	kprintf("]\n\r\n\r");

	maxpa = KERNTOP;
	npage = KMEMSIZE >> PGSHIFT;
8001d478:	3c118015 	lui	s1,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:114

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d47c:	3c128015 	lui	s2,0x8015
init_pmm_manager():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:45
//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
	kprintf(pmm_manager->name);
8001d480:	8c440000 	lw	a0,0(v0)
8001d484:	0c00798a 	jal	8001e628 <kprintf>
8001d488:	0000a021 	move	s4,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:46
	kprintf("\n\r");
8001d48c:	3c048002 	lui	a0,0x8002
8001d490:	0c00798a 	jal	8001e628 <kprintf>
8001d494:	24843ae8 	addiu	a0,a0,15080
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:47
	pmm_manager->init();
8001d498:	8ea27794 	lw	v0,30612(s5)
8001d49c:	8c420004 	lw	v0,4(v0)
8001d4a0:	0040f809 	jalr	v0
8001d4a4:	00000000 	nop
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:101
{
	uint32_t maxpa;
	int i;

	//panic("unimpl");
	kprintf("memory map:\n\r");
8001d4a8:	3c048002 	lui	a0,0x8002
8001d4ac:	0c00798a 	jal	8001e628 <kprintf>
8001d4b0:	24843fbc 	addiu	a0,a0,16316
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:102
	kprintf("    [0x");
8001d4b4:	3c048002 	lui	a0,0x8002
8001d4b8:	0c00798a 	jal	8001e628 <kprintf>
8001d4bc:	24843fcc 	addiu	a0,a0,16332
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:103
	printhex(KERNBASE);
8001d4c0:	3c048000 	lui	a0,0x8000
8001d4c4:	0c007996 	jal	8001e658 <printhex>
8001d4c8:	24841000 	addiu	a0,a0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:104
	kprintf(", 0x");
8001d4cc:	3c048002 	lui	a0,0x8002
8001d4d0:	0c00798a 	jal	8001e628 <kprintf>
8001d4d4:	24843fd4 	addiu	a0,a0,16340
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:105
	printhex(KERNTOP);
8001d4d8:	3c048200 	lui	a0,0x8200
8001d4dc:	0c007996 	jal	8001e658 <printhex>
8001d4e0:	24841000 	addiu	a0,a0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:106
	kprintf("]\n\r\n\r");
8001d4e4:	3c048002 	lui	a0,0x8002
8001d4e8:	0c00798a 	jal	8001e628 <kprintf>
8001d4ec:	24843fdc 	addiu	a0,a0,16348
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:114
	npage = KMEMSIZE >> PGSHIFT;

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d4f0:	3c058016 	lui	a1,0x8016
8001d4f4:	24a587bf 	addiu	a1,a1,-30785
8001d4f8:	00052b02 	srl	a1,a1,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:109
	kprintf(", 0x");
	printhex(KERNTOP);
	kprintf("]\n\r\n\r");

	maxpa = KERNTOP;
	npage = KMEMSIZE >> PGSHIFT;
8001d4fc:	24022000 	li	v0,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:114

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d500:	00052b00 	sll	a1,a1,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:109
	kprintf(", 0x");
	printhex(KERNTOP);
	kprintf("]\n\r\n\r");

	maxpa = KERNTOP;
	npage = KMEMSIZE >> PGSHIFT;
8001d504:	ae227770 	sw	v0,30576(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:114

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d508:	ae4577bc 	sw	a1,30652(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117

	//reserve kernel pages, kernel space is reserved!
	for (i = 0; i < npage; i++) {
8001d50c:	0800754e 	j	8001d538 <pmm_init+0x10c>
8001d510:	00001021 	move	v0,zero
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001d514:	8e020004 	lw	v0,4(s0)
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d518:	8e237770 	lw	v1,30576(s1)
8001d51c:	26940001 	addiu	s4,s4,1
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d520:	34420001 	ori	v0,v0,0x1
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d524:	0283202b 	sltu	a0,s4,v1
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d528:	ae020004 	sw	v0,4(s0)
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d52c:	02801021 	move	v0,s4
8001d530:	10800014 	beqz	a0,8001d584 <pmm_init+0x158>
8001d534:	3c108015 	lui	s0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:118
		SetPageReserved(pages + i);
8001d538:	00028140 	sll	s0,v0,0x5
8001d53c:	00b08021 	addu	s0,a1,s0
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d540:	40026000 	mfc0	v0,c0_status
8001d544:	30420001 	andi	v0,v0,0x1
8001d548:	1040fff2 	beqz	v0,8001d514 <pmm_init+0xe8>
8001d54c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d550:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001d554:	00000000 	nop
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d558:	8e020004 	lw	v0,4(s0)
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);

	//reserve kernel pages, kernel space is reserved!
	for (i = 0; i < npage; i++) {
8001d55c:	26940001 	addiu	s4,s4,1
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d560:	34420001 	ori	v0,v0,0x1
8001d564:	ae020004 	sw	v0,4(s0)
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d568:	0c006cba 	jal	8001b2e8 <intr_enable>
8001d56c:	3c108015 	lui	s0,0x8015
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d570:	8e237770 	lw	v1,30576(s1)
set_bit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
8001d574:	8e4577bc 	lw	a1,30652(s2)
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d578:	0283202b 	sltu	a0,s4,v1
8001d57c:	1480ffee 	bnez	a0,8001d538 <pmm_init+0x10c>
8001d580:	02801021 	move	v0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:122
		SetPageReserved(pages + i);
	}

	uintptr_t freemem =
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
8001d584:	00039940 	sll	s3,v1,0x5
8001d588:	3c148000 	lui	s4,0x8000
8001d58c:	00b39821 	addu	s3,a1,s3
8001d590:	26941000 	addiu	s4,s4,4096
8001d594:	0274102b 	sltu	v0,s3,s4
8001d598:	1440022e 	bnez	v0,8001de54 <pmm_init+0xa28>
8001d59c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:123
	kprintf( "freemem start at:%x\n\r", freemem );
8001d5a0:	02602821 	move	a1,s3
8001d5a4:	0c00798a 	jal	8001e628 <kprintf>
8001d5a8:	24843fe4 	addiu	a0,a0,16356
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:125

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
8001d5ac:	26620fff 	addiu	v0,s3,4095
8001d5b0:	00021302 	srl	v0,v0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:127
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
8001d5b4:	3c138200 	lui	s3,0x8200
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:125

	uintptr_t freemem =
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
	kprintf( "freemem start at:%x\n\r", freemem );

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
8001d5b8:	00021300 	sll	v0,v0,0xc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:127
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
8001d5bc:	26731000 	addiu	s3,s3,4096
8001d5c0:	0053182b 	sltu	v1,v0,s3
8001d5c4:	1060021b 	beqz	v1,8001de34 <pmm_init+0xa08>
8001d5c8:	3c167fff 	lui	s6,0x7fff
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d5cc:	36d6f000 	ori	s6,s6,0xf000
8001d5d0:	8e047770 	lw	a0,30576(s0)
8001d5d4:	00561821 	addu	v1,v0,s6
8001d5d8:	00031b02 	srl	v1,v1,0xc
8001d5dc:	0064202b 	sltu	a0,v1,a0
8001d5e0:	10800212 	beqz	a0,8001de2c <pmm_init+0xa00>
8001d5e4:	8ea57794 	lw	a1,30612(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d5e8:	8e4477bc 	lw	a0,30652(s2)
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:128
	init_memmap(pa2page(mbegin), (mend - mbegin) >> PGSHIFT);
8001d5ec:	02629823 	subu	s3,s3,v0
init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:53
}

//init_memmap - call pmm->init_memmap to build Page struct for free memory  
static void init_memmap(struct Page *base, size_t n)
{
	pmm_manager->init_memmap(base, n);
8001d5f0:	8ca20008 	lw	v0,8(a1)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
8001d5f4:	00031940 	sll	v1,v1,0x5
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:128
	kprintf( "freemem start at:%x\n\r", freemem );

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
	init_memmap(pa2page(mbegin), (mend - mbegin) >> PGSHIFT);
8001d5f8:	00139b02 	srl	s3,s3,0xc
init_memmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:53
}

//init_memmap - call pmm->init_memmap to build Page struct for free memory  
static void init_memmap(struct Page *base, size_t n)
{
	pmm_manager->init_memmap(base, n);
8001d5fc:	00832021 	addu	a0,a0,v1
8001d600:	0040f809 	jalr	v0
8001d604:	02602821 	move	a1,s3
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:129

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
	init_memmap(pa2page(mbegin), (mend - mbegin) >> PGSHIFT);
	PRINT_HEX("free pages: ", (mend - mbegin) >> PGSHIFT);
8001d608:	3c048002 	lui	a0,0x8002
8001d60c:	2484400c 	addiu	a0,a0,16396
8001d610:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001d614:	02602821 	move	a1,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:130
	PRINT_HEX("page structure size: ", sizeof(struct Page));
8001d618:	3c048002 	lui	a0,0x8002
8001d61c:	24050020 	li	a1,32
8001d620:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001d624:	2484401c 	addiu	a0,a0,16412
check_alloc_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:250

extern int swap_init_ok;

static void check_alloc_page(void)
{
	pmm_manager->check();
8001d628:	8ea27794 	lw	v0,30612(s5)
8001d62c:	8c420018 	lw	v0,24(v0)
8001d630:	0040f809 	jalr	v0
8001d634:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:251
	kprintf("check_alloc_page() succeeded!\n\r");
8001d638:	3c048002 	lui	a0,0x8002
8001d63c:	0c00798a 	jal	8001e628 <kprintf>
8001d640:	24844034 	addiu	a0,a0,16436
boot_alloc_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:165
//boot_alloc_page - allocate one page using pmm->alloc_pages(1) 
// return value: the kernel virtual address of this allocated page
//note: this function is used to get the memory for PDT(Page Directory Table)&PT(Page Table)
static void *boot_alloc_page(void)
{
	struct Page *p = alloc_page();
8001d644:	0c0073df 	jal	8001cf7c <alloc_pages>
8001d648:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:166
	if (p == NULL) {
8001d64c:	104001f1 	beqz	v0,8001de14 <pmm_init+0x9e8>
8001d650:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001d654:	8c6477bc 	lw	a0,30652(v1)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001d658:	8e037770 	lw	v1,30576(s0)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001d65c:	00441023 	subu	v0,v0,a0
8001d660:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001d664:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001d668:	00022302 	srl	a0,v0,0xc
8001d66c:	0083182b 	sltu	v1,a0,v1
8001d670:	106001e1 	beqz	v1,8001ddf8 <pmm_init+0x9cc>
8001d674:	0056b023 	subu	s6,v0,s6
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:191

	//use pmm->check to verify the correctness of the alloc/free function in a pmm
	check_alloc_page();

	// create boot_pgdir, an initial page directory(Page Directory Table, PDT)
	boot_pgdir = boot_alloc_page();
8001d678:	3c138015 	lui	s3,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:192
	memset(boot_pgdir, 0, PGSIZE);
8001d67c:	02c02021 	move	a0,s6
8001d680:	00002821 	move	a1,zero
8001d684:	24061000 	li	a2,4096
8001d688:	0c005c44 	jal	80017110 <memset>
8001d68c:	ae76776c 	sw	s6,30572(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:193
	boot_cr3 = PADDR(boot_pgdir);
8001d690:	8e67776c 	lw	a3,30572(s3)
8001d694:	00f4a02b 	sltu	s4,a3,s4
8001d698:	168001d1 	bnez	s4,8001dde0 <pmm_init+0x9b4>
8001d69c:	8e027770 	lw	v0,30576(s0)
8001d6a0:	3c178015 	lui	s7,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:194
	current_pgdir = boot_pgdir;
8001d6a4:	3c168015 	lui	s6,0x8015
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:256
	kprintf("check_alloc_page() succeeded!\n\r");
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
8001d6a8:	2c422001 	sltiu	v0,v0,8193
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:193
	check_alloc_page();

	// create boot_pgdir, an initial page directory(Page Directory Table, PDT)
	boot_pgdir = boot_alloc_page();
	memset(boot_pgdir, 0, PGSIZE);
	boot_cr3 = PADDR(boot_pgdir);
8001d6ac:	aee7779c 	sw	a3,30620(s7)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:256
	kprintf("check_alloc_page() succeeded!\n\r");
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
8001d6b0:	104001c3 	beqz	v0,8001ddc0 <pmm_init+0x994>
8001d6b4:	aec77768 	sw	a3,30568(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:257
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
8001d6b8:	10e001b9 	beqz	a3,8001dda0 <pmm_init+0x974>
8001d6bc:	30e20fff 	andi	v0,a3,0xfff
8001d6c0:	144001b7 	bnez	v0,8001dda0 <pmm_init+0x974>
8001d6c4:	00e02021 	move	a0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:258
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);
8001d6c8:	00002821 	move	a1,zero
8001d6cc:	0c005d10 	jal	80017440 <get_page>
8001d6d0:	00003021 	move	a2,zero
8001d6d4:	144001ab 	bnez	v0,8001dd84 <pmm_init+0x958>
8001d6d8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:261

	struct Page *p1, *p2;
	p1 = alloc_page();
8001d6dc:	0c0073df 	jal	8001cf7c <alloc_pages>
8001d6e0:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:262
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);
8001d6e4:	8e64776c 	lw	a0,30572(s3)
8001d6e8:	00402821 	move	a1,v0
8001d6ec:	00003021 	move	a2,zero
8001d6f0:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:261
	assert(npage <= KMEMSIZE / PGSIZE);
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);

	struct Page *p1, *p2;
	p1 = alloc_page();
8001d6f4:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:262
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);
8001d6f8:	0c005dbf 	jal	800176fc <page_insert>
8001d6fc:	3c158015 	lui	s5,0x8015
8001d700:	14400198 	bnez	v0,8001dd64 <pmm_init+0x938>
8001d704:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:265

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
8001d708:	8ea4776c 	lw	a0,30572(s5)
8001d70c:	0c005cbe 	jal	800172f8 <get_pte>
8001d710:	00003021 	move	a2,zero
8001d714:	1040018b 	beqz	v0,8001dd44 <pmm_init+0x918>
8001d718:	3c037fff 	lui	v1,0x7fff
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d71c:	8c440000 	lw	a0,0(v0)
8001d720:	3463f000 	ori	v1,v1,0xf000
8001d724:	8e227770 	lw	v0,30576(s1)
8001d728:	00832021 	addu	a0,a0,v1
8001d72c:	00042302 	srl	a0,a0,0xc
8001d730:	0082282b 	sltu	a1,a0,v0
8001d734:	10a001bd 	beqz	a1,8001de2c <pmm_init+0xa00>
8001d738:	8e4577bc 	lw	a1,30652(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d73c:	00042140 	sll	a0,a0,0x5
8001d740:	00a42021 	addu	a0,a1,a0
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:266
	assert(pa2page(*ptep) == p1);
8001d744:	1604017c 	bne	s0,a0,8001dd38 <pmm_init+0x90c>
8001d748:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001d74c:	8e050000 	lw	a1,0(s0)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:267
	assert(page_ref(p1) == 1);
8001d750:	24040001 	li	a0,1
8001d754:	14a40174 	bne	a1,a0,8001dd28 <pmm_init+0x8fc>
8001d758:	8ea4776c 	lw	a0,30572(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:269

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
8001d75c:	2405f000 	li	a1,-4096
8001d760:	8c940000 	lw	s4,0(a0)
8001d764:	0285a024 	and	s4,s4,a1
8001d768:	02831821 	addu	v1,s4,v1
8001d76c:	00031b02 	srl	v1,v1,0xc
8001d770:	0062102b 	sltu	v0,v1,v0
8001d774:	50400166 	beqzl	v0,8001dd10 <pmm_init+0x8e4>
8001d778:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:270
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);
8001d77c:	24051000 	li	a1,4096
8001d780:	0c005cbe 	jal	800172f8 <get_pte>
8001d784:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:269
	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
8001d788:	26940004 	addiu	s4,s4,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:270
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);
8001d78c:	14540159 	bne	v0,s4,8001dcf4 <pmm_init+0x8c8>
8001d790:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:272

	p2 = alloc_page();
8001d794:	0c0073df 	jal	8001cf7c <alloc_pages>
8001d798:	24040001 	li	a0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:273
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
8001d79c:	8ea4776c 	lw	a0,30572(s5)
8001d7a0:	00402821 	move	a1,v0
8001d7a4:	24061000 	li	a2,4096
8001d7a8:	24070006 	li	a3,6
8001d7ac:	0c005dbf 	jal	800176fc <page_insert>
8001d7b0:	0040a021 	move	s4,v0
8001d7b4:	14400148 	bnez	v0,8001dcd8 <pmm_init+0x8ac>
8001d7b8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:274
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001d7bc:	8ea4776c 	lw	a0,30572(s5)
8001d7c0:	24051000 	li	a1,4096
8001d7c4:	0c005cbe 	jal	800172f8 <get_pte>
8001d7c8:	00003021 	move	a2,zero
8001d7cc:	1040013f 	beqz	v0,8001dccc <pmm_init+0x8a0>
8001d7d0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:275
	assert(*ptep & PTE_U);
8001d7d4:	8c420000 	lw	v0,0(v0)
8001d7d8:	30430004 	andi	v1,v0,0x4
8001d7dc:	10600134 	beqz	v1,8001dcb0 <pmm_init+0x884>
8001d7e0:	30420002 	andi	v0,v0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:276
	assert(*ptep & PTE_W);
8001d7e4:	5040012c 	beqzl	v0,8001dc98 <pmm_init+0x86c>
8001d7e8:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:277
	assert(boot_pgdir[0] & PTE_U);
8001d7ec:	8e64776c 	lw	a0,30572(s3)
8001d7f0:	8c820000 	lw	v0,0(a0)
8001d7f4:	30420004 	andi	v0,v0,0x4
8001d7f8:	50400120 	beqzl	v0,8001dc7c <pmm_init+0x850>
8001d7fc:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d800:	8e830000 	lw	v1,0(s4)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:278
	assert(page_ref(p2) == 1);
8001d804:	24020001 	li	v0,1
8001d808:	54620115 	bnel	v1,v0,8001dc60 <pmm_init+0x834>
8001d80c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:280

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
8001d810:	02002821 	move	a1,s0
8001d814:	24061000 	li	a2,4096
8001d818:	0c005dbf 	jal	800176fc <page_insert>
8001d81c:	00003821 	move	a3,zero
8001d820:	14400108 	bnez	v0,8001dc44 <pmm_init+0x818>
8001d824:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d828:	8e030000 	lw	v1,0(s0)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:281
	assert(page_ref(p1) == 2);
8001d82c:	24020002 	li	v0,2
8001d830:	146200fe 	bne	v1,v0,8001dc2c <pmm_init+0x800>
8001d834:	3c068002 	lui	a2,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d838:	8e820000 	lw	v0,0(s4)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:282
	assert(page_ref(p2) == 0);
8001d83c:	144000f8 	bnez	v0,8001dc20 <pmm_init+0x7f4>
8001d840:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:283
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001d844:	8c44776c 	lw	a0,30572(v0)
8001d848:	24051000 	li	a1,4096
8001d84c:	0c005cbe 	jal	800172f8 <get_pte>
8001d850:	00003021 	move	a2,zero
8001d854:	104000ea 	beqz	v0,8001dc00 <pmm_init+0x7d4>
8001d858:	3c037fff 	lui	v1,0x7fff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:284
	assert(pa2page(*ptep) == p1);
8001d85c:	8c420000 	lw	v0,0(v0)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d860:	8e247770 	lw	a0,30576(s1)
8001d864:	3463f000 	ori	v1,v1,0xf000
8001d868:	00431821 	addu	v1,v0,v1
8001d86c:	00031b02 	srl	v1,v1,0xc
8001d870:	0064202b 	sltu	a0,v1,a0
8001d874:	1080016d 	beqz	a0,8001de2c <pmm_init+0xa00>
8001d878:	8e4477bc 	lw	a0,30652(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d87c:	00031940 	sll	v1,v1,0x5
8001d880:	00831821 	addu	v1,a0,v1
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:284
8001d884:	160300d6 	bne	s0,v1,8001dbe0 <pmm_init+0x7b4>
8001d888:	30420004 	andi	v0,v0,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:285
	assert((*ptep & PTE_U) == 0);
8001d88c:	144000cc 	bnez	v0,8001dbc0 <pmm_init+0x794>
8001d890:	8e64776c 	lw	a0,30572(s3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:287

	page_remove(boot_pgdir, 0x0);
8001d894:	00002821 	move	a1,zero
8001d898:	0c005e29 	jal	800178a4 <page_remove>
8001d89c:	3c158015 	lui	s5,0x8015
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d8a0:	8e1e0000 	lw	s8,0(s0)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:288
	assert(page_ref(p1) == 1);
8001d8a4:	24020001 	li	v0,1
8001d8a8:	17c200be 	bne	s8,v0,8001dba4 <pmm_init+0x778>
8001d8ac:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d8b0:	8e820000 	lw	v0,0(s4)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:289
	assert(page_ref(p2) == 0);
8001d8b4:	144000b7 	bnez	v0,8001db94 <pmm_init+0x768>
8001d8b8:	8ea4776c 	lw	a0,30572(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:291

	page_remove(boot_pgdir, PGSIZE);
8001d8bc:	0c005e29 	jal	800178a4 <page_remove>
8001d8c0:	24051000 	li	a1,4096
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d8c4:	8e020000 	lw	v0,0(s0)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:292
	assert(page_ref(p1) == 0);
8001d8c8:	144000ab 	bnez	v0,8001db78 <pmm_init+0x74c>
8001d8cc:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d8d0:	8e820000 	lw	v0,0(s4)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:293
	assert(page_ref(p2) == 0);
8001d8d4:	144000a1 	bnez	v0,8001db5c <pmm_init+0x730>
8001d8d8:	8ea2776c 	lw	v0,30572(s5)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d8dc:	3c107fff 	lui	s0,0x7fff
8001d8e0:	3610f000 	ori	s0,s0,0xf000
8001d8e4:	8c420000 	lw	v0,0(v0)
8001d8e8:	8e237770 	lw	v1,30576(s1)
8001d8ec:	00501021 	addu	v0,v0,s0
8001d8f0:	00021302 	srl	v0,v0,0xc
8001d8f4:	0043182b 	sltu	v1,v0,v1
8001d8f8:	1060014c 	beqz	v1,8001de2c <pmm_init+0xa00>
8001d8fc:	8e4477bc 	lw	a0,30652(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d900:	00021140 	sll	v0,v0,0x5
8001d904:	00822021 	addu	a0,a0,v0
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d908:	8c820000 	lw	v0,0(a0)
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:295

	assert(page_ref(pa2page(boot_pgdir[0])) == 1);
8001d90c:	545e008c 	bnel	v0,s8,8001db40 <pmm_init+0x714>
8001d910:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:296
	free_page(pa2page(boot_pgdir[0]));
8001d914:	0c0073fb 	jal	8001cfec <free_pages>
8001d918:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:297
	boot_pgdir[0] = 0;
8001d91c:	8ea2776c 	lw	v0,30572(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:299

	kprintf("check_pgdir() succeeded!\n\r");
8001d920:	3c048002 	lui	a0,0x8002
8001d924:	248442f8 	addiu	a0,a0,17144
8001d928:	0c00798a 	jal	8001e628 <kprintf>
8001d92c:	ac400000 	sw	zero,0(v0)
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:198
	boot_cr3 = PADDR(boot_pgdir);
	current_pgdir = boot_pgdir;

	check_pgdir();
	//FPGA
	boot_map_segment(boot_pgdir, KERNBASE, KMEMSIZE, 0, PTE_W);
8001d930:	8eb5776c 	lw	s5,30572(s5)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:151
boot_map_segment(pde_t * pgdir, uintptr_t la, size_t size, uintptr_t pa,
		 uint32_t perm)
{
	assert(PGOFF(la) == PGOFF(pa));
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
8001d934:	3c148000 	lui	s4,0x8000
boot_map_segment():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:153
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
8001d938:	3c1e8200 	lui	s8,0x8200
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:151
boot_map_segment(pde_t * pgdir, uintptr_t la, size_t size, uintptr_t pa,
		 uint32_t perm)
{
	assert(PGOFF(la) == PGOFF(pa));
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
8001d93c:	26941000 	addiu	s4,s4,4096
boot_map_segment():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:153
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
8001d940:	27de1000 	addiu	s8,s8,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:154
		pte_t *ptep = get_pte(pgdir, la, 1);
8001d944:	02a02021 	move	a0,s5
8001d948:	02802821 	move	a1,s4
8001d94c:	0c005cbe 	jal	800172f8 <get_pte>
8001d950:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:155
		assert(ptep != NULL);
8001d954:	10400072 	beqz	v0,8001db20 <pmm_init+0x6f4>
8001d958:	02901821 	addu	v1,s4,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:156
		*ptep = pa | PTE_P | perm;
8001d95c:	34630003 	ori	v1,v1,0x3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:153
{
	assert(PGOFF(la) == PGOFF(pa));
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
8001d960:	26941000 	addiu	s4,s4,4096
8001d964:	169efff7 	bne	s4,s8,8001d944 <pmm_init+0x518>
8001d968:	ac430000 	sw	v1,0(v0)
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:205
	/* SZY comments: 1: 0x80000000 (KERNBASE) and up should be mapped to physical pages with exactly the same physical address? */
	/* 2: 0x80000000 = (KERNBASE) 2GB? 
	one root page table entry covers 1024 4KB pages, which means 4MB, low virtual address here. 
	what's your purpose here? */
	//virtual_addr 3G~3G+4M = linear_addr 0~4M = linear_addr 3G~3G+4M = phy_addr 0~4M
	boot_pgdir[0] = boot_pgdir[PDX(KERNBASE)];
8001d96c:	8e62776c 	lw	v0,30572(s3)
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:311
//unsigned int k;
	//assert(PDE_ADDR(boot_pgdir[PDX(VPT)]) == PADDR(boot_pgdir));

	assert(boot_pgdir[0] == 0);
	struct Page *p;
	p = alloc_page();
8001d970:	24040001 	li	a0,1
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:205
	/* SZY comments: 1: 0x80000000 (KERNBASE) and up should be mapped to physical pages with exactly the same physical address? */
	/* 2: 0x80000000 = (KERNBASE) 2GB? 
	one root page table entry covers 1024 4KB pages, which means 4MB, low virtual address here. 
	what's your purpose here? */
	//virtual_addr 3G~3G+4M = linear_addr 0~4M = linear_addr 3G~3G+4M = phy_addr 0~4M
	boot_pgdir[0] = boot_pgdir[PDX(KERNBASE)];
8001d974:	3c1e8015 	lui	s8,0x8015
8001d978:	8c430800 	lw	v1,2048(v0)
8001d97c:	ac430000 	sw	v1,0(v0)
lcr3():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:37
static void check_pgdir(void);
static void check_boot_pgdir(void);

void lcr3(uintptr_t cr3)
{
	current_pgdir = (pde_t *) cr3;
8001d980:	8ee3779c 	lw	v1,30620(s7)
8001d984:	aec37768 	sw	v1,30568(s6)
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:311
//unsigned int k;
	//assert(PDE_ADDR(boot_pgdir[PDX(VPT)]) == PADDR(boot_pgdir));

	assert(boot_pgdir[0] == 0);
	struct Page *p;
	p = alloc_page();
8001d988:	0c0073df 	jal	8001cf7c <alloc_pages>
8001d98c:	ac400000 	sw	zero,0(v0)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001d990:	8e4777bc 	lw	a3,30652(s2)
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:311
8001d994:	0040a021 	move	s4,v0
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001d998:	8e227770 	lw	v0,30576(s1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001d99c:	02873823 	subu	a3,s4,a3
8001d9a0:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001d9a4:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001d9a8:	00071b02 	srl	v1,a3,0xc
8001d9ac:	0062102b 	sltu	v0,v1,v0
8001d9b0:	10400165 	beqz	v0,8001df48 <pmm_init+0xb1c>
8001d9b4:	00f03823 	subu	a3,a3,s0
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:317
	*(int *)(page2kva(p) + 0x100) = 0x1234;
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));*/

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
8001d9b8:	8fc4776c 	lw	a0,30572(s8)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:312
	//assert(PDE_ADDR(boot_pgdir[PDX(VPT)]) == PADDR(boot_pgdir));

	assert(boot_pgdir[0] == 0);
	struct Page *p;
	p = alloc_page();
	*(int *)(page2kva(p) + 0x100) = 0x1234;
8001d9bc:	24151234 	li	s5,4660
8001d9c0:	acf50100 	sw	s5,256(a3)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:317
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));*/

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
8001d9c4:	02802821 	move	a1,s4
8001d9c8:	24060100 	li	a2,256
8001d9cc:	0c005dbf 	jal	800176fc <page_insert>
8001d9d0:	24070002 	li	a3,2
8001d9d4:	14400155 	bnez	v0,8001df2c <pmm_init+0xb00>
8001d9d8:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d9dc:	8e830000 	lw	v1,0(s4)
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:318
	assert(page_ref(p) == 1);
8001d9e0:	24020001 	li	v0,1
8001d9e4:	1462014a 	bne	v1,v0,8001df10 <pmm_init+0xae4>
8001d9e8:	02802821 	move	a1,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:324
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");
	kprintf("*(int*)(0x100):0x%08x",*(int*)(0x100));*/
	assert(page_insert(boot_pgdir, p, 0x100 + PGSIZE, PTE_W) == 0);
8001d9ec:	8fc4776c 	lw	a0,30572(s8)
8001d9f0:	24061100 	li	a2,4352
8001d9f4:	0c005dbf 	jal	800176fc <page_insert>
8001d9f8:	24070002 	li	a3,2
8001d9fc:	1440013d 	bnez	v0,8001def4 <pmm_init+0xac8>
8001da00:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001da04:	8e830000 	lw	v1,0(s4)
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:325
	assert(page_ref(p) == 2);
8001da08:	24020002 	li	v0,2
8001da0c:	14620133 	bne	v1,v0,8001dedc <pmm_init+0xab0>
8001da10:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:338
	kprintf("\n\r");
	
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));*/
	assert(*(int *)0x100 == 0x1234);
8001da14:	8c020100 	lw	v0,256(zero)
8001da18:	1455012b 	bne	v0,s5,8001dec8 <pmm_init+0xa9c>
8001da1c:	3c078002 	lui	a3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:343
	const char *str = "ucore: Hello world!!";
	/*strcpy((void *)0x100, str);
	kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
	kprintf("\n\r");*/
	assert(strcmp((void *)0x100, (void *)(0x100 + PGSIZE)) == 0);
8001da20:	24040100 	li	a0,256
8001da24:	0c005baa 	jal	80016ea8 <strcmp>
8001da28:	24051100 	li	a1,4352
8001da2c:	1440011e 	bnez	v0,8001dea8 <pmm_init+0xa7c>
8001da30:	3c028015 	lui	v0,0x8015
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001da34:	8c4277bc 	lw	v0,30652(v0)
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001da38:	3c038015 	lui	v1,0x8015
8001da3c:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001da40:	02821023 	subu	v0,s4,v0
8001da44:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001da48:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001da4c:	00022302 	srl	a0,v0,0xc
8001da50:	0083182b 	sltu	v1,a0,v1
8001da54:	1060010d 	beqz	v1,8001de8c <pmm_init+0xa60>
8001da58:	00508023 	subu	s0,v0,s0
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:349
	
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");*/
	*(char *)(page2kva(p) + 0x100) = '\0';
8001da5c:	a2000100 	sb	zero,256(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:350
	assert(strlen((const char *)0x100) == 0);
8001da60:	0c005b6b 	jal	80016dac <strlen>
8001da64:	24040100 	li	a0,256
8001da68:	14400101 	bnez	v0,8001de70 <pmm_init+0xa44>
8001da6c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:355
	/*kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");*/
	free_page(p);
8001da70:	02802021 	move	a0,s4
8001da74:	0c0073fb 	jal	8001cfec <free_pages>
8001da78:	24050001 	li	a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:356
	free_page(pa2page(PDE_ADDR(boot_pgdir[0])));
8001da7c:	8e62776c 	lw	v0,30572(s3)
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001da80:	8e237770 	lw	v1,30576(s1)
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:356
8001da84:	8c440000 	lw	a0,0(v0)
8001da88:	2402f000 	li	v0,-4096
8001da8c:	00821024 	and	v0,a0,v0
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
8001da90:	3c047fff 	lui	a0,0x7fff
8001da94:	3484f000 	ori	a0,a0,0xf000
8001da98:	00441021 	addu	v0,v0,a0
8001da9c:	00021302 	srl	v0,v0,0xc
8001daa0:	0043182b 	sltu	v1,v0,v1
8001daa4:	106000e1 	beqz	v1,8001de2c <pmm_init+0xa00>
8001daa8:	3c108015 	lui	s0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001daac:	8e4477bc 	lw	a0,30652(s2)
8001dab0:	00021140 	sll	v0,v0,0x5
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:356
8001dab4:	24050001 	li	a1,1
8001dab8:	0c0073fb 	jal	8001cfec <free_pages>
8001dabc:	00822021 	addu	a0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:357
	boot_pgdir[0] = 0;
8001dac0:	8e02776c 	lw	v0,30572(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:358
	tlb_invalidate_all();
8001dac4:	0c007808 	jal	8001e020 <tlb_invalidate_all>
8001dac8:	ac400000 	sw	zero,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:360

	kprintf("check_boot_pgdir() succeeded!\n\r");
8001dacc:	3c048002 	lui	a0,0x8002
8001dad0:	0c00798a 	jal	8001e628 <kprintf>
8001dad4:	24844418 	addiu	a0,a0,17432
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:217
	//~YX
	//now the basic virtual memory map(see memlayout.h) is established.
	//check the correctness of the basic virtual memory map.
	check_boot_pgdir();

	memset(boot_pgdir, 0, PGSIZE);
8001dad8:	8e04776c 	lw	a0,30572(s0)
8001dadc:	00002821 	move	a1,zero
8001dae0:	0c005c44 	jal	80017110 <memset>
8001dae4:	24061000 	li	a2,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:218
	print_pgdir();
8001dae8:	0c007431 	jal	8001d0c4 <print_pgdir>
8001daec:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:224
	
/* SZY comments, what's the purpose of allocating space for slab? really store the symbols? */
	kmalloc_init();
	//slab_init();
	//kprintf("kmalloc_init() succeeded!\n");
}
8001daf0:	8fbf0034 	lw	ra,52(sp)
8001daf4:	8fbe0030 	lw	s8,48(sp)
8001daf8:	8fb7002c 	lw	s7,44(sp)
8001dafc:	8fb60028 	lw	s6,40(sp)
8001db00:	8fb50024 	lw	s5,36(sp)
8001db04:	8fb40020 	lw	s4,32(sp)
8001db08:	8fb3001c 	lw	s3,28(sp)
8001db0c:	8fb20018 	lw	s2,24(sp)
8001db10:	8fb10014 	lw	s1,20(sp)
8001db14:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:221

	memset(boot_pgdir, 0, PGSIZE);
	print_pgdir();
	
/* SZY comments, what's the purpose of allocating space for slab? really store the symbols? */
	kmalloc_init();
8001db18:	0800543b 	j	800150ec <kmalloc_init>
8001db1c:	27bd0038 	addiu	sp,sp,56
boot_map_segment():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:155
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
		pte_t *ptep = get_pte(pgdir, la, 1);
		assert(ptep != NULL);
8001db20:	3c048002 	lui	a0,0x8002
8001db24:	3c068002 	lui	a2,0x8002
8001db28:	3c078002 	lui	a3,0x8002
8001db2c:	248435b0 	addiu	a0,a0,13744
8001db30:	2405009b 	li	a1,155
8001db34:	24c609b0 	addiu	a2,a2,2480
8001db38:	0c006afd 	jal	8001abf4 <__panic>
8001db3c:	24e72c30 	addiu	a3,a3,11312
check_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:295

	page_remove(boot_pgdir, PGSIZE);
	assert(page_ref(p1) == 0);
	assert(page_ref(p2) == 0);

	assert(page_ref(pa2page(boot_pgdir[0])) == 1);
8001db40:	3c068002 	lui	a2,0x8002
8001db44:	3c078002 	lui	a3,0x8002
8001db48:	248435b0 	addiu	a0,a0,13744
8001db4c:	24050127 	li	a1,295
8001db50:	24c609b0 	addiu	a2,a2,2480
8001db54:	0c006afd 	jal	8001abf4 <__panic>
8001db58:	24e742d0 	addiu	a3,a3,17104
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:293
	assert(page_ref(p1) == 1);
	assert(page_ref(p2) == 0);

	page_remove(boot_pgdir, PGSIZE);
	assert(page_ref(p1) == 0);
	assert(page_ref(p2) == 0);
8001db5c:	248435b0 	addiu	a0,a0,13744
8001db60:	24050125 	li	a1,293
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:289
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);

	page_remove(boot_pgdir, 0x0);
	assert(page_ref(p1) == 1);
	assert(page_ref(p2) == 0);
8001db64:	3c068002 	lui	a2,0x8002
8001db68:	3c078002 	lui	a3,0x8002
8001db6c:	24c609b0 	addiu	a2,a2,2480
8001db70:	0c006afd 	jal	8001abf4 <__panic>
8001db74:	24e74290 	addiu	a3,a3,17040
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:292

	page_remove(boot_pgdir, PGSIZE);
	assert(page_ref(p1) == 0);
8001db78:	3c068002 	lui	a2,0x8002
8001db7c:	3c078002 	lui	a3,0x8002
8001db80:	248435b0 	addiu	a0,a0,13744
8001db84:	24050124 	li	a1,292
8001db88:	24c609b0 	addiu	a2,a2,2480
8001db8c:	0c006afd 	jal	8001abf4 <__panic>
8001db90:	24e742bc 	addiu	a3,a3,17084
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:289
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);

	page_remove(boot_pgdir, 0x0);
	assert(page_ref(p1) == 1);
	assert(page_ref(p2) == 0);
8001db94:	3c048002 	lui	a0,0x8002
8001db98:	248435b0 	addiu	a0,a0,13744
8001db9c:	080076d9 	j	8001db64 <pmm_init+0x738>
8001dba0:	24050121 	li	a1,289
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:288
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);

	page_remove(boot_pgdir, 0x0);
	assert(page_ref(p1) == 1);
8001dba4:	248435b0 	addiu	a0,a0,13744
8001dba8:	24050120 	li	a1,288
8001dbac:	3c068002 	lui	a2,0x8002
8001dbb0:	3c078002 	lui	a3,0x8002
8001dbb4:	24c609b0 	addiu	a2,a2,2480
8001dbb8:	0c006afd 	jal	8001abf4 <__panic>
8001dbbc:	24e74160 	addiu	a3,a3,16736
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:285
	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);
8001dbc0:	3c048002 	lui	a0,0x8002
8001dbc4:	3c068002 	lui	a2,0x8002
8001dbc8:	3c078002 	lui	a3,0x8002
8001dbcc:	248435b0 	addiu	a0,a0,13744
8001dbd0:	2405011d 	li	a1,285
8001dbd4:	24c609b0 	addiu	a2,a2,2480
8001dbd8:	0c006afd 	jal	8001abf4 <__panic>
8001dbdc:	24e742a4 	addiu	a3,a3,17060
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:284

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
8001dbe0:	3c048002 	lui	a0,0x8002
8001dbe4:	248435b0 	addiu	a0,a0,13744
8001dbe8:	2405011c 	li	a1,284
8001dbec:	3c068002 	lui	a2,0x8002
8001dbf0:	3c078002 	lui	a3,0x8002
8001dbf4:	24c609b0 	addiu	a2,a2,2480
8001dbf8:	0c006afd 	jal	8001abf4 <__panic>
8001dbfc:	24e74148 	addiu	a3,a3,16712
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:283
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001dc00:	3c048002 	lui	a0,0x8002
8001dc04:	248435b0 	addiu	a0,a0,13744
8001dc08:	2405011b 	li	a1,283
8001dc0c:	3c068002 	lui	a2,0x8002
8001dc10:	3c078002 	lui	a3,0x8002
8001dc14:	24c609b0 	addiu	a2,a2,2480
8001dc18:	0c006afd 	jal	8001abf4 <__panic>
8001dc1c:	24e741d4 	addiu	a3,a3,16852
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:282
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
8001dc20:	248435b0 	addiu	a0,a0,13744
8001dc24:	080076d9 	j	8001db64 <pmm_init+0x738>
8001dc28:	2405011a 	li	a1,282
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:281
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
8001dc2c:	3c078002 	lui	a3,0x8002
8001dc30:	248435b0 	addiu	a0,a0,13744
8001dc34:	24050119 	li	a1,281
8001dc38:	24c609b0 	addiu	a2,a2,2480
8001dc3c:	0c006afd 	jal	8001abf4 <__panic>
8001dc40:	24e7427c 	addiu	a3,a3,17020
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:280
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
8001dc44:	3c068002 	lui	a2,0x8002
8001dc48:	3c078002 	lui	a3,0x8002
8001dc4c:	248435b0 	addiu	a0,a0,13744
8001dc50:	24050118 	li	a1,280
8001dc54:	24c609b0 	addiu	a2,a2,2480
8001dc58:	0c006afd 	jal	8001abf4 <__panic>
8001dc5c:	24e74250 	addiu	a3,a3,16976
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:278
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);
8001dc60:	3c068002 	lui	a2,0x8002
8001dc64:	3c078002 	lui	a3,0x8002
8001dc68:	248435b0 	addiu	a0,a0,13744
8001dc6c:	24050116 	li	a1,278
8001dc70:	24c609b0 	addiu	a2,a2,2480
8001dc74:	0c006afd 	jal	8001abf4 <__panic>
8001dc78:	24e7423c 	addiu	a3,a3,16956
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:277
	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
8001dc7c:	3c068002 	lui	a2,0x8002
8001dc80:	3c078002 	lui	a3,0x8002
8001dc84:	248435b0 	addiu	a0,a0,13744
8001dc88:	24050115 	li	a1,277
8001dc8c:	24c609b0 	addiu	a2,a2,2480
8001dc90:	0c006afd 	jal	8001abf4 <__panic>
8001dc94:	24e74224 	addiu	a3,a3,16932
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:276

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
8001dc98:	3c078002 	lui	a3,0x8002
8001dc9c:	248435b0 	addiu	a0,a0,13744
8001dca0:	24050114 	li	a1,276
8001dca4:	24c609b0 	addiu	a2,a2,2480
8001dca8:	0c006afd 	jal	8001abf4 <__panic>
8001dcac:	24e74214 	addiu	a3,a3,16916
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:275
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
8001dcb0:	3c068002 	lui	a2,0x8002
8001dcb4:	3c078002 	lui	a3,0x8002
8001dcb8:	248435b0 	addiu	a0,a0,13744
8001dcbc:	24050113 	li	a1,275
8001dcc0:	24c609b0 	addiu	a2,a2,2480
8001dcc4:	0c006afd 	jal	8001abf4 <__panic>
8001dcc8:	24e74204 	addiu	a3,a3,16900
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:274
	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001dccc:	248435b0 	addiu	a0,a0,13744
8001dcd0:	08007703 	j	8001dc0c <pmm_init+0x7e0>
8001dcd4:	24050112 	li	a1,274
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:273

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
8001dcd8:	3c068002 	lui	a2,0x8002
8001dcdc:	3c078002 	lui	a3,0x8002
8001dce0:	248435b0 	addiu	a0,a0,13744
8001dce4:	24050111 	li	a1,273
8001dce8:	24c609b0 	addiu	a2,a2,2480
8001dcec:	0c006afd 	jal	8001abf4 <__panic>
8001dcf0:	24e7419c 	addiu	a3,a3,16796
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:270
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);
8001dcf4:	3c068002 	lui	a2,0x8002
8001dcf8:	3c078002 	lui	a3,0x8002
8001dcfc:	248435b0 	addiu	a0,a0,13744
8001dd00:	2405010e 	li	a1,270
8001dd04:	24c609b0 	addiu	a2,a2,2480
8001dd08:	0c006afd 	jal	8001abf4 <__panic>
8001dd0c:	24e74174 	addiu	a3,a3,16756
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:269
	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
8001dd10:	3c068002 	lui	a2,0x8002
8001dd14:	248435b0 	addiu	a0,a0,13744
8001dd18:	2405010d 	li	a1,269
8001dd1c:	24c625ec 	addiu	a2,a2,9708
8001dd20:	0c006afd 	jal	8001abf4 <__panic>
8001dd24:	02803821 	move	a3,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:267
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);
8001dd28:	3c048002 	lui	a0,0x8002
8001dd2c:	248435b0 	addiu	a0,a0,13744
8001dd30:	080076eb 	j	8001dbac <pmm_init+0x780>
8001dd34:	2405010b 	li	a1,267
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:266
	p1 = alloc_page();
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
8001dd38:	248435b0 	addiu	a0,a0,13744
8001dd3c:	080076fb 	j	8001dbec <pmm_init+0x7c0>
8001dd40:	2405010a 	li	a1,266
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:265
	struct Page *p1, *p2;
	p1 = alloc_page();
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
8001dd44:	3c048002 	lui	a0,0x8002
8001dd48:	3c068002 	lui	a2,0x8002
8001dd4c:	3c078002 	lui	a3,0x8002
8001dd50:	248435b0 	addiu	a0,a0,13744
8001dd54:	24050109 	li	a1,265
8001dd58:	24c609b0 	addiu	a2,a2,2480
8001dd5c:	0c006afd 	jal	8001abf4 <__panic>
8001dd60:	24e74118 	addiu	a3,a3,16664
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:262
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);

	struct Page *p1, *p2;
	p1 = alloc_page();
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);
8001dd64:	3c048002 	lui	a0,0x8002
8001dd68:	3c068002 	lui	a2,0x8002
8001dd6c:	3c078002 	lui	a3,0x8002
8001dd70:	248435b0 	addiu	a0,a0,13744
8001dd74:	24050106 	li	a1,262
8001dd78:	24c609b0 	addiu	a2,a2,2480
8001dd7c:	0c006afd 	jal	8001abf4 <__panic>
8001dd80:	24e740ec 	addiu	a3,a3,16620
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:258

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);
8001dd84:	3c068002 	lui	a2,0x8002
8001dd88:	3c078002 	lui	a3,0x8002
8001dd8c:	248435b0 	addiu	a0,a0,13744
8001dd90:	24050102 	li	a1,258
8001dd94:	24c609b0 	addiu	a2,a2,2480
8001dd98:	0c006afd 	jal	8001abf4 <__panic>
8001dd9c:	24e740c4 	addiu	a3,a3,16580
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:257
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
8001dda0:	3c048002 	lui	a0,0x8002
8001dda4:	3c068002 	lui	a2,0x8002
8001dda8:	3c078002 	lui	a3,0x8002
8001ddac:	248435b0 	addiu	a0,a0,13744
8001ddb0:	24050101 	li	a1,257
8001ddb4:	24c609b0 	addiu	a2,a2,2480
8001ddb8:	0c006afd 	jal	8001abf4 <__panic>
8001ddbc:	24e7408c 	addiu	a3,a3,16524
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:256
	kprintf("check_alloc_page() succeeded!\n\r");
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
8001ddc0:	3c048002 	lui	a0,0x8002
8001ddc4:	3c068002 	lui	a2,0x8002
8001ddc8:	3c078002 	lui	a3,0x8002
8001ddcc:	248435b0 	addiu	a0,a0,13744
8001ddd0:	24050100 	li	a1,256
8001ddd4:	24c609b0 	addiu	a2,a2,2480
8001ddd8:	0c006afd 	jal	8001abf4 <__panic>
8001dddc:	24e74070 	addiu	a3,a3,16496
pmm_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:193
	check_alloc_page();

	// create boot_pgdir, an initial page directory(Page Directory Table, PDT)
	boot_pgdir = boot_alloc_page();
	memset(boot_pgdir, 0, PGSIZE);
	boot_cr3 = PADDR(boot_pgdir);
8001dde0:	3c048002 	lui	a0,0x8002
8001dde4:	3c068002 	lui	a2,0x8002
8001dde8:	248435b0 	addiu	a0,a0,13744
8001ddec:	240500c1 	li	a1,193
8001ddf0:	0c006afd 	jal	8001abf4 <__panic>
8001ddf4:	24c625a8 	addiu	a2,a2,9640
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001ddf8:	3c048002 	lui	a0,0x8002
8001ddfc:	3c068002 	lui	a2,0x8002
8001de00:	24842564 	addiu	a0,a0,9572
8001de04:	2405006a 	li	a1,106
8001de08:	24c625ec 	addiu	a2,a2,9708
8001de0c:	0c006afd 	jal	8001abf4 <__panic>
8001de10:	02c03821 	move	a3,s6
boot_alloc_page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:167
//note: this function is used to get the memory for PDT(Page Directory Table)&PT(Page Table)
static void *boot_alloc_page(void)
{
	struct Page *p = alloc_page();
	if (p == NULL) {
		panic("boot_alloc_page failed.\n\r");
8001de14:	3c048002 	lui	a0,0x8002
8001de18:	3c068002 	lui	a2,0x8002
8001de1c:	248435b0 	addiu	a0,a0,13744
8001de20:	240500a7 	li	a1,167
8001de24:	0c006afd 	jal	8001abf4 <__panic>
8001de28:	24c64054 	addiu	a2,a2,16468
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001de2c:	0c007e5a 	jal	8001f968 <pa2page.part.2>
8001de30:	00000000 	nop
page_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:127
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
	kprintf( "freemem start at:%x\n\r", freemem );

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
8001de34:	3c048002 	lui	a0,0x8002
8001de38:	3c068002 	lui	a2,0x8002
8001de3c:	3c078002 	lui	a3,0x8002
8001de40:	248435b0 	addiu	a0,a0,13744
8001de44:	2405007f 	li	a1,127
8001de48:	24c609b0 	addiu	a2,a2,2480
8001de4c:	0c006afd 	jal	8001abf4 <__panic>
8001de50:	24e73ffc 	addiu	a3,a3,16380
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:122
	for (i = 0; i < npage; i++) {
		SetPageReserved(pages + i);
	}

	uintptr_t freemem =
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
8001de54:	3c048002 	lui	a0,0x8002
8001de58:	3c068002 	lui	a2,0x8002
8001de5c:	248435b0 	addiu	a0,a0,13744
8001de60:	2405007a 	li	a1,122
8001de64:	24c625a8 	addiu	a2,a2,9640
8001de68:	0c006afd 	jal	8001abf4 <__panic>
8001de6c:	02603821 	move	a3,s3
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:350
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");*/
	*(char *)(page2kva(p) + 0x100) = '\0';
	assert(strlen((const char *)0x100) == 0);
8001de70:	3c068002 	lui	a2,0x8002
8001de74:	3c078002 	lui	a3,0x8002
8001de78:	248435b0 	addiu	a0,a0,13744
8001de7c:	2405015e 	li	a1,350
8001de80:	24c609b0 	addiu	a2,a2,2480
8001de84:	0c006afd 	jal	8001abf4 <__panic>
8001de88:	24e743f4 	addiu	a3,a3,17396
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001de8c:	3c048002 	lui	a0,0x8002
8001de90:	3c068002 	lui	a2,0x8002
8001de94:	24842564 	addiu	a0,a0,9572
8001de98:	2405006a 	li	a1,106
8001de9c:	24c625ec 	addiu	a2,a2,9708
8001dea0:	0c006afd 	jal	8001abf4 <__panic>
8001dea4:	02003821 	move	a3,s0
check_boot_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:343
	assert(*(int *)0x100 == 0x1234);
	const char *str = "ucore: Hello world!!";
	/*strcpy((void *)0x100, str);
	kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
	kprintf("\n\r");*/
	assert(strcmp((void *)0x100, (void *)(0x100 + PGSIZE)) == 0);
8001dea8:	3c048002 	lui	a0,0x8002
8001deac:	3c068002 	lui	a2,0x8002
8001deb0:	3c078002 	lui	a3,0x8002
8001deb4:	248435b0 	addiu	a0,a0,13744
8001deb8:	24050157 	li	a1,343
8001debc:	24c609b0 	addiu	a2,a2,2480
8001dec0:	0c006afd 	jal	8001abf4 <__panic>
8001dec4:	24e743bc 	addiu	a3,a3,17340
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:338
	kprintf("\n\r");
	
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));*/
	assert(*(int *)0x100 == 0x1234);
8001dec8:	248435b0 	addiu	a0,a0,13744
8001decc:	24050152 	li	a1,338
8001ded0:	24c609b0 	addiu	a2,a2,2480
8001ded4:	0c006afd 	jal	8001abf4 <__panic>
8001ded8:	24e743a4 	addiu	a3,a3,17316
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:325
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");
	kprintf("*(int*)(0x100):0x%08x",*(int*)(0x100));*/
	assert(page_insert(boot_pgdir, p, 0x100 + PGSIZE, PTE_W) == 0);
	assert(page_ref(p) == 2);
8001dedc:	3c078002 	lui	a3,0x8002
8001dee0:	248435b0 	addiu	a0,a0,13744
8001dee4:	24050145 	li	a1,325
8001dee8:	24c609b0 	addiu	a2,a2,2480
8001deec:	0c006afd 	jal	8001abf4 <__panic>
8001def0:	24e74390 	addiu	a3,a3,17296
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:324
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");
	kprintf("*(int*)(0x100):0x%08x",*(int*)(0x100));*/
	assert(page_insert(boot_pgdir, p, 0x100 + PGSIZE, PTE_W) == 0);
8001def4:	3c068002 	lui	a2,0x8002
8001def8:	3c078002 	lui	a3,0x8002
8001defc:	248435b0 	addiu	a0,a0,13744
8001df00:	24050144 	li	a1,324
8001df04:	24c609b0 	addiu	a2,a2,2480
8001df08:	0c006afd 	jal	8001abf4 <__panic>
8001df0c:	24e74358 	addiu	a3,a3,17240
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:318
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));*/

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
	assert(page_ref(p) == 1);
8001df10:	3c068002 	lui	a2,0x8002
8001df14:	3c078002 	lui	a3,0x8002
8001df18:	248435b0 	addiu	a0,a0,13744
8001df1c:	2405013e 	li	a1,318
8001df20:	24c609b0 	addiu	a2,a2,2480
8001df24:	0c006afd 	jal	8001abf4 <__panic>
8001df28:	24e74344 	addiu	a3,a3,17220
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:317
	*(int *)(page2kva(p) + 0x100) = 0x1234;
	/*kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));*/

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
8001df2c:	3c068002 	lui	a2,0x8002
8001df30:	3c078002 	lui	a3,0x8002
8001df34:	248435b0 	addiu	a0,a0,13744
8001df38:	2405013d 	li	a1,317
8001df3c:	24c609b0 	addiu	a2,a2,2480
8001df40:	0c006afd 	jal	8001abf4 <__panic>
8001df44:	24e74314 	addiu	a3,a3,17172
page2kva():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:106
8001df48:	3c048002 	lui	a0,0x8002
8001df4c:	3c068002 	lui	a2,0x8002
8001df50:	24842564 	addiu	a0,a0,9572
8001df54:	2405006a 	li	a1,106
8001df58:	0c006afd 	jal	8001abf4 <__panic>
8001df5c:	24c625ec 	addiu	a2,a2,9708

8001df60 <load_rsp0>:
load_rsp0():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:469
//added by HHL

void load_rsp0(uintptr_t esp0)
{

}
8001df60:	03e00008 	jr	ra
8001df64:	00000000 	nop

8001df68 <map_pgdir>:
map_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:474

void map_pgdir(pde_t * pgdir)
{
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001df68:	3c028000 	lui	v0,0x8000
8001df6c:	24421000 	addiu	v0,v0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:472
{

}

void map_pgdir(pde_t * pgdir)
{
8001df70:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:474
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001df74:	0082102b 	sltu	v0,a0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:472
{

}

void map_pgdir(pde_t * pgdir)
{
8001df78:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:474
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001df7c:	14400006 	bnez	v0,8001df98 <map_pgdir+0x30>
8001df80:	00803821 	move	a3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:475
}
8001df84:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:474
}

void map_pgdir(pde_t * pgdir)
{
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001df88:	34820003 	ori	v0,a0,0x3
8001df8c:	ac820fac 	sw	v0,4012(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:475
}
8001df90:	03e00008 	jr	ra
8001df94:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:474
}

void map_pgdir(pde_t * pgdir)
{
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001df98:	3c048002 	lui	a0,0x8002
8001df9c:	3c068002 	lui	a2,0x8002
8001dfa0:	248435b0 	addiu	a0,a0,13744
8001dfa4:	240501da 	li	a1,474
8001dfa8:	0c006afd 	jal	8001abf4 <__panic>
8001dfac:	24c625a8 	addiu	a2,a2,9640

8001dfb0 <set_pgdir>:
set_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:481

/**
 * set_pgdir - save the physical address of the current pgdir
 */
void set_pgdir(struct proc_struct *proc, pde_t * pgdir)
{
8001dfb0:	27bdffe8 	addiu	sp,sp,-24
8001dfb4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:482
	assert(proc != NULL);
8001dfb8:	10800009 	beqz	a0,8001dfe0 <set_pgdir+0x30>
8001dfbc:	00a03821 	move	a3,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:483
	proc->cr3 = PADDR(pgdir);
8001dfc0:	3c028000 	lui	v0,0x8000
8001dfc4:	24421000 	addiu	v0,v0,4096
8001dfc8:	00a2102b 	sltu	v0,a1,v0
8001dfcc:	1440000c 	bnez	v0,8001e000 <set_pgdir+0x50>
8001dfd0:	8fbf0014 	lw	ra,20(sp)
8001dfd4:	ac850058 	sw	a1,88(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:484
}
8001dfd8:	03e00008 	jr	ra
8001dfdc:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:482
/**
 * set_pgdir - save the physical address of the current pgdir
 */
void set_pgdir(struct proc_struct *proc, pde_t * pgdir)
{
	assert(proc != NULL);
8001dfe0:	3c048002 	lui	a0,0x8002
8001dfe4:	3c068002 	lui	a2,0x8002
8001dfe8:	3c078002 	lui	a3,0x8002
8001dfec:	248435b0 	addiu	a0,a0,13744
8001dff0:	240501e2 	li	a1,482
8001dff4:	24c609b0 	addiu	a2,a2,2480
8001dff8:	0c006afd 	jal	8001abf4 <__panic>
8001dffc:	24e7389c 	addiu	a3,a3,14492
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:483
	proc->cr3 = PADDR(pgdir);
8001e000:	3c048002 	lui	a0,0x8002
8001e004:	3c068002 	lui	a2,0x8002
8001e008:	248435b0 	addiu	a0,a0,13744
8001e00c:	240501e3 	li	a1,483
8001e010:	0c006afd 	jal	8001abf4 <__panic>
8001e014:	24c625a8 	addiu	a2,a2,9640

8001e018 <nr_used_pages>:
nr_used_pages():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.c:489
}

size_t nr_used_pages(void)
{
	return 0;
}
8001e018:	03e00008 	jr	ra
8001e01c:	00001021 	move	v0,zero

8001e020 <tlb_invalidate_all>:
tlb_invalidate_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:42
{				//kprintf("\n\n\n\ntlb_invalidate_all()\n\n\n\n");
	unsigned int i;
	unsigned int te;
	//kprintf("\n\rbegin tlb_invalidate_all()\n\r");
	//dump_tlb_all();
	for (i = 0; i < 16; i++)// 
8001e020:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:44
	{
		te=0x80000000 + (i << 20);
8001e024:	3c058000 	lui	a1,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:42
{				//kprintf("\n\n\n\ntlb_invalidate_all()\n\n\n\n");
	unsigned int i;
	unsigned int te;
	//kprintf("\n\rbegin tlb_invalidate_all()\n\r");
	//dump_tlb_all();
	for (i = 0; i < 16; i++)// 
8001e028:	24040010 	li	a0,16
write_one_tlb():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:90
}
static inline void write_one_tlb(int index, unsigned int pagemask,
				 unsigned int hi, unsigned int low0,
				 unsigned int low1)
{
	write_c0_entrylo0(low0);
8001e02c:	40801000 	mtc0	zero,c0_entrylo0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:91
	write_c0_pagemask(pagemask);
8001e030:	40802800 	mtc0	zero,c0_pagemask
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:92
	write_c0_entrylo1(low1);
8001e034:	40801800 	mtc0	zero,c0_entrylo1
tlb_invalidate_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:44
	{
		te=0x80000000 + (i << 20);
8001e038:	00021d00 	sll	v1,v0,0x14
8001e03c:	00651821 	addu	v1,v1,a1
write_one_tlb():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:94
	
	write_c0_entryhi(hi);
8001e040:	40835000 	mtc0	v1,c0_entryhi
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:95
	write_c0_index(index);
8001e044:	40820000 	mtc0	v0,c0_index
tlb_write_indexed():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/asm/mipsregs.h:1302
#endif
}

static inline void tlb_write_indexed(void)
{
	__asm__ __volatile__(
8001e048:	42000002 	tlbwi
tlb_invalidate_all():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:42
{				//kprintf("\n\n\n\ntlb_invalidate_all()\n\n\n\n");
	unsigned int i;
	unsigned int te;
	//kprintf("\n\rbegin tlb_invalidate_all()\n\r");
	//dump_tlb_all();
	for (i = 0; i < 16; i++)// 
8001e04c:	24420001 	addiu	v0,v0,1
8001e050:	1444fff6 	bne	v0,a0,8001e02c <tlb_invalidate_all+0xc>
8001e054:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:52
	}
	//dump_tlb_all();
	//kprintf("\n\rend");

	return ;
}
8001e058:	03e00008 	jr	ra
8001e05c:	00000000 	nop

8001e060 <tlb_invalidate>:
tlb_invalidate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/thumips_tlb.c:32

// invalidate both TLB 
// (clean and flush, meaning we write the data back)
void tlb_invalidate(pde_t * pgdir, uintptr_t la)
{
	tlb_invalidate_all();
8001e060:	08007808 	j	8001e020 <tlb_invalidate_all>
8001e064:	00000000 	nop

8001e068 <copy_from_user>:
copy_from_user():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:56
}

bool
copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len,
	       bool writable)
{
8001e068:	27bdffe0 	addiu	sp,sp,-32
8001e06c:	afb00010 	sw	s0,16(sp)
8001e070:	00e08021 	move	s0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:57
	if (!user_mem_check(mm, (uintptr_t) src, len, writable)) {
8001e074:	8fa70030 	lw	a3,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:56
}

bool
copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len,
	       bool writable)
{
8001e078:	afb10014 	sw	s1,20(sp)
8001e07c:	00c08821 	move	s1,a2
8001e080:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:57
	if (!user_mem_check(mm, (uintptr_t) src, len, writable)) {
8001e084:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:56
}

bool
copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len,
	       bool writable)
{
8001e088:	00a09021 	move	s2,a1
8001e08c:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:57
	if (!user_mem_check(mm, (uintptr_t) src, len, writable)) {
8001e090:	0c005069 	jal	800141a4 <user_mem_check>
8001e094:	02202821 	move	a1,s1
8001e098:	10400006 	beqz	v0,8001e0b4 <copy_from_user+0x4c>
8001e09c:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:60
		return 0;
	}
	memcpy(dst, src, len);
8001e0a0:	02402021 	move	a0,s2
8001e0a4:	02202821 	move	a1,s1
8001e0a8:	0c005c6e 	jal	800171b8 <memcpy>
8001e0ac:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:61
	return 1;
8001e0b0:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:62
}
8001e0b4:	8fbf001c 	lw	ra,28(sp)
8001e0b8:	00601021 	move	v0,v1
8001e0bc:	8fb20018 	lw	s2,24(sp)
8001e0c0:	8fb10014 	lw	s1,20(sp)
8001e0c4:	8fb00010 	lw	s0,16(sp)
8001e0c8:	03e00008 	jr	ra
8001e0cc:	27bd0020 	addiu	sp,sp,32

8001e0d0 <copy_to_user>:
copy_to_user():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:65

bool copy_to_user(struct mm_struct * mm, void *dst, const void *src, size_t len)
{
8001e0d0:	27bdffe0 	addiu	sp,sp,-32
8001e0d4:	afb00010 	sw	s0,16(sp)
8001e0d8:	00e08021 	move	s0,a3
8001e0dc:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:66
	if (!user_mem_check(mm, (uintptr_t) dst, len, 1)) {
8001e0e0:	24070001 	li	a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:65
	memcpy(dst, src, len);
	return 1;
}

bool copy_to_user(struct mm_struct * mm, void *dst, const void *src, size_t len)
{
8001e0e4:	00c08821 	move	s1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:66
	if (!user_mem_check(mm, (uintptr_t) dst, len, 1)) {
8001e0e8:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:65
	memcpy(dst, src, len);
	return 1;
}

bool copy_to_user(struct mm_struct * mm, void *dst, const void *src, size_t len)
{
8001e0ec:	afb20018 	sw	s2,24(sp)
8001e0f0:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:66
	if (!user_mem_check(mm, (uintptr_t) dst, len, 1)) {
8001e0f4:	0c005069 	jal	800141a4 <user_mem_check>
8001e0f8:	00a09021 	move	s2,a1
8001e0fc:	10400006 	beqz	v0,8001e118 <copy_to_user+0x48>
8001e100:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:69
		return 0;
	}
	memcpy(dst, src, len);
8001e104:	02402021 	move	a0,s2
8001e108:	02202821 	move	a1,s1
8001e10c:	0c005c6e 	jal	800171b8 <memcpy>
8001e110:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:70
	return 1;
8001e114:	24030001 	li	v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:71
}
8001e118:	8fbf001c 	lw	ra,28(sp)
8001e11c:	00601021 	move	v0,v1
8001e120:	8fb20018 	lw	s2,24(sp)
8001e124:	8fb10014 	lw	s1,20(sp)
8001e128:	8fb00010 	lw	s0,16(sp)
8001e12c:	03e00008 	jr	ra
8001e130:	27bd0020 	addiu	sp,sp,32

8001e134 <copy_string>:
copy_string():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:183
/* SZY comments: Why does this statement no show up? why I cannot see any statements related with the pgfault handler?*/
	kprintf("check_pgfault() succeeded!\n\r");
}

bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn)
{
8001e134:	27bdffd8 	addiu	sp,sp,-40
8001e138:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:185
	size_t alen, part =
	    ROUNDDOWN_2N((uintptr_t) src + PGSIZE, PGSHIFT) - (uintptr_t) src;
8001e13c:	2402f000 	li	v0,-4096
8001e140:	24d01000 	addiu	s0,a2,4096
8001e144:	02028024 	and	s0,s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:183
/* SZY comments: Why does this statement no show up? why I cannot see any statements related with the pgfault handler?*/
	kprintf("check_pgfault() succeeded!\n\r");
}

bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn)
{
8001e148:	afb40020 	sw	s4,32(sp)
8001e14c:	afb3001c 	sw	s3,28(sp)
8001e150:	afb20018 	sw	s2,24(sp)
8001e154:	afb10014 	sw	s1,20(sp)
8001e158:	afbf0024 	sw	ra,36(sp)
8001e15c:	00c08821 	move	s1,a2
8001e160:	0080a021 	move	s4,a0
8001e164:	00a09821 	move	s3,a1
8001e168:	00e09021 	move	s2,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:184
	size_t alen, part =
8001e16c:	0800786a 	j	8001e1a8 <copy_string+0x74>
8001e170:	02068023 	subu	s0,s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:193
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
8001e174:	0c005b75 	jal	80016dd4 <strnlen>
8001e178:	00000000 	nop
8001e17c:	0050182b 	sltu	v1,v0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:200
			return 1;
		}
		if (part == maxn) {
			return 0;
		}
		memcpy(dst, src, part);
8001e180:	02602021 	move	a0,s3
8001e184:	02202821 	move	a1,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:193
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
8001e188:	1460001a 	bnez	v1,8001e1f4 <copy_string+0xc0>
8001e18c:	02003021 	move	a2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:197
			memcpy(dst, src, alen + 1);
			return 1;
		}
		if (part == maxn) {
8001e190:	1250000f 	beq	s2,s0,8001e1d0 <copy_string+0x9c>
8001e194:	02709821 	addu	s3,s3,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:201
			return 0;
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
8001e198:	02308821 	addu	s1,s1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:200
			return 1;
		}
		if (part == maxn) {
			return 0;
		}
		memcpy(dst, src, part);
8001e19c:	0c005c6e 	jal	800171b8 <memcpy>
8001e1a0:	02509023 	subu	s2,s2,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:202
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
8001e1a4:	24101000 	li	s0,4096
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:184
	kprintf("check_pgfault() succeeded!\n\r");
}

bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn)
{
	size_t alen, part =
8001e1a8:	0250102b 	sltu	v0,s2,s0
8001e1ac:	0242800b 	movn	s0,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:190
	    ROUNDDOWN_2N((uintptr_t) src + PGSIZE, PGSHIFT) - (uintptr_t) src;
	while (1) {
		if (part > maxn) {
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
8001e1b0:	02802021 	move	a0,s4
8001e1b4:	02202821 	move	a1,s1
8001e1b8:	02003021 	move	a2,s0
8001e1bc:	0c005069 	jal	800141a4 <user_mem_check>
8001e1c0:	00003821 	move	a3,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:193
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
8001e1c4:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:190
	    ROUNDDOWN_2N((uintptr_t) src + PGSIZE, PGSHIFT) - (uintptr_t) src;
	while (1) {
		if (part > maxn) {
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
8001e1c8:	1440ffea 	bnez	v0,8001e174 <copy_string+0x40>
8001e1cc:	02002821 	move	a1,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e1d0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:198
		if ((alen = strnlen(src, part)) < part) {
			memcpy(dst, src, alen + 1);
			return 1;
		}
		if (part == maxn) {
			return 0;
8001e1d4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e1d8:	8fb40020 	lw	s4,32(sp)
8001e1dc:	8fb3001c 	lw	s3,28(sp)
8001e1e0:	8fb20018 	lw	s2,24(sp)
8001e1e4:	8fb10014 	lw	s1,20(sp)
8001e1e8:	8fb00010 	lw	s0,16(sp)
8001e1ec:	03e00008 	jr	ra
8001e1f0:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:194
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
			memcpy(dst, src, alen + 1);
8001e1f4:	0c005c6e 	jal	800171b8 <memcpy>
8001e1f8:	24460001 	addiu	a2,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e1fc:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:195
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
			memcpy(dst, src, alen + 1);
			return 1;
8001e200:	24020001 	li	v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e204:	8fb40020 	lw	s4,32(sp)
8001e208:	8fb3001c 	lw	s3,28(sp)
8001e20c:	8fb20018 	lw	s2,24(sp)
8001e210:	8fb10014 	lw	s1,20(sp)
8001e214:	8fb00010 	lw	s0,16(sp)
8001e218:	03e00008 	jr	ra
8001e21c:	27bd0028 	addiu	sp,sp,40

8001e220 <forkret>:
forkret():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:185
{				//kprintf(" [forkrets pid=%d epc=%x] ", current->pid, current->tf->tf_epc);
/*    kprintf("{");
    int i;
    for (i = 0; i < 10; ++i) kprintf("%x:%x ", (current->tf->tf_epc + i * 4), *(uint32_t*)(current->tf->tf_epc + i * 4));
    kprintf("} ");*/
	forkrets(current->tf);
8001e220:	3c028015 	lui	v0,0x8015
8001e224:	8c4277a4 	lw	v0,30628(v0)
8001e228:	08007e02 	j	8001f808 <forkrets>
8001e22c:	8c440054 	lw	a0,84(v0)

8001e230 <alloc_proc>:
alloc_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:85
void forkrets(struct trapframe *tf);
void switch_to(struct context *from, struct context *to);

// alloc_proc - alloc a proc_struct and init all fields of proc_struct
struct proc_struct *alloc_proc(void)
{
8001e230:	27bdffe8 	addiu	sp,sp,-24
8001e234:	afb00010 	sw	s0,16(sp)
8001e238:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:86
	struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
8001e23c:	0c005478 	jal	800151e0 <kmalloc>
8001e240:	240400f8 	li	a0,248
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:87
	if (proc != NULL) {
8001e244:	10400028 	beqz	v0,8001e2e8 <alloc_proc+0xb8>
8001e248:	00408021 	move	s0,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:98
		proc->parent = NULL;
		proc->mm = NULL;
		proc->tf = NULL;
		proc->flags = 0;
		proc->need_resched = 0;
		proc->cr3 = boot_cr3;
8001e24c:	3c028015 	lui	v0,0x8015
8001e250:	8c42779c 	lw	v0,30620(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:89
struct proc_struct *alloc_proc(void)
{
	struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
	if (proc != NULL) {
		proc->state = PROC_UNINIT;
		proc->pid = -1;
8001e254:	2403ffff 	li	v1,-1
8001e258:	ae030004 	sw	v1,4(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:92
		proc->runs = 0;
		proc->kstack = 0;
		proc->need_resched = 0;
8001e25c:	ae000018 	sw	zero,24(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:99
		proc->mm = NULL;
		proc->tf = NULL;
		proc->flags = 0;
		proc->need_resched = 0;
		proc->cr3 = boot_cr3;
		memset(&(proc->context), 0, sizeof(struct context));
8001e260:	26040024 	addiu	a0,s0,36
8001e264:	00002821 	move	a1,zero
8001e268:	24060030 	li	a2,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:88
// alloc_proc - alloc a proc_struct and init all fields of proc_struct
struct proc_struct *alloc_proc(void)
{
	struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
	if (proc != NULL) {
		proc->state = PROC_UNINIT;
8001e26c:	ae000000 	sw	zero,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:90
		proc->pid = -1;
		proc->runs = 0;
8001e270:	ae000010 	sw	zero,16(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:91
		proc->kstack = 0;
8001e274:	ae000014 	sw	zero,20(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:93
		proc->need_resched = 0;
		proc->parent = NULL;
8001e278:	ae00001c 	sw	zero,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:94
		proc->mm = NULL;
8001e27c:	ae000020 	sw	zero,32(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:95
		proc->tf = NULL;
8001e280:	ae000054 	sw	zero,84(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:96
		proc->flags = 0;
8001e284:	ae00005c 	sw	zero,92(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:97
		proc->need_resched = 0;
8001e288:	ae000018 	sw	zero,24(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:99
		proc->cr3 = boot_cr3;
		memset(&(proc->context), 0, sizeof(struct context));
8001e28c:	0c005c44 	jal	80017110 <memset>
8001e290:	ae020058 	sw	v0,88(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:100
		memset(proc->name, 0, PROC_NAME_LEN);
8001e294:	00002821 	move	a1,zero
8001e298:	2406000f 	li	a2,15
8001e29c:	0c005c44 	jal	80017110 <memset>
8001e2a0:	26040060 	addiu	a0,s0,96
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:103
		proc->exit_code = 0;
		proc->wait_state = 0;
		list_init(&(proc->run_link));
8001e2a4:	260300a0 	addiu	v1,s0,160
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:104
		list_init(&(proc->list_link));
8001e2a8:	26020070 	addiu	v0,s0,112
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:107
		proc->time_slice = 0;
		proc->cptr = proc->yptr = proc->optr = NULL;
		event_box_init(&(proc->event_box));
8001e2ac:	260400b0 	addiu	a0,s0,176
list_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001e2b0:	ae0300a4 	sw	v1,164(s0)
8001e2b4:	ae0300a0 	sw	v1,160(s0)
8001e2b8:	ae020074 	sw	v0,116(s0)
8001e2bc:	ae020070 	sw	v0,112(s0)
alloc_proc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:101
		proc->flags = 0;
		proc->need_resched = 0;
		proc->cr3 = boot_cr3;
		memset(&(proc->context), 0, sizeof(struct context));
		memset(proc->name, 0, PROC_NAME_LEN);
		proc->exit_code = 0;
8001e2c0:	ae000080 	sw	zero,128(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:102
		proc->wait_state = 0;
8001e2c4:	ae000084 	sw	zero,132(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:105
		list_init(&(proc->run_link));
		list_init(&(proc->list_link));
		proc->time_slice = 0;
8001e2c8:	ae0000a8 	sw	zero,168(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:106
		proc->cptr = proc->yptr = proc->optr = NULL;
8001e2cc:	ae000090 	sw	zero,144(s0)
8001e2d0:	ae00008c 	sw	zero,140(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:107
		event_box_init(&(proc->event_box));
8001e2d4:	0c005fe5 	jal	80017f94 <event_box_init>
8001e2d8:	ae000088 	sw	zero,136(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:109
		proc->fs_struct = NULL;
		proc->sem_queue = sem_queue_create();
8001e2dc:	0c00673a 	jal	80019ce8 <sem_queue_create>
8001e2e0:	ae0000bc 	sw	zero,188(s0)
8001e2e4:	ae0200ac 	sw	v0,172(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:112
	}
	return proc;
}
8001e2e8:	8fbf0014 	lw	ra,20(sp)
8001e2ec:	02001021 	move	v0,s0
8001e2f0:	8fb00010 	lw	s0,16(sp)
8001e2f4:	03e00008 	jr	ra
8001e2f8:	27bd0018 	addiu	sp,sp,24

8001e2fc <kernel_thread>:
kernel_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:204

// kernel_thread - create a kernel thread using "fn" function
// NOTE: the contents of temp trapframe tf will be copied to 
//       proc->tf in do_fork-->copy_thread function
int kernel_thread(int (*fn) (void *), void *arg, uint32_t clone_flags)
{
8001e2fc:	27bdff48 	addiu	sp,sp,-184
8001e300:	afb200b0 	sw	s2,176(sp)
8001e304:	afb100ac 	sw	s1,172(sp)
8001e308:	afb000a8 	sw	s0,168(sp)
8001e30c:	00808821 	move	s1,a0
8001e310:	00a09021 	move	s2,a1
8001e314:	00c08021 	move	s0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:206
	struct trapframe tf;
	memset(&tf, 0, sizeof(struct trapframe));
8001e318:	27a40010 	addiu	a0,sp,16
8001e31c:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:204

// kernel_thread - create a kernel thread using "fn" function
// NOTE: the contents of temp trapframe tf will be copied to 
//       proc->tf in do_fork-->copy_thread function
int kernel_thread(int (*fn) (void *), void *arg, uint32_t clone_flags)
{
8001e320:	afbf00b4 	sw	ra,180(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:206
	struct trapframe tf;
	memset(&tf, 0, sizeof(struct trapframe));
8001e324:	0c005c44 	jal	80017110 <memset>
8001e328:	24060094 	li	a2,148
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:207
	tf.tf_regs.reg_r[MIPS_REG_A0] = (uint32_t) arg;
8001e32c:	afb20034 	sw	s2,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:208
	tf.tf_regs.reg_r[MIPS_REG_A1] = (uint32_t) fn;
8001e330:	afb10038 	sw	s1,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:209
	tf.tf_regs.reg_r[MIPS_REG_V0] = 0;
8001e334:	afa0002c 	sw	zero,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:211
	//TODO
	tf.tf_status = read_c0_status();
8001e338:	40036000 	mfc0	v1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:212
	tf.tf_status &= ~ST0_KSU;
8001e33c:	2402ffe7 	li	v0,-25
8001e340:	00621024 	and	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:214
	tf.tf_status |= ST0_IE;
	tf.tf_status |= ST0_EXL;
8001e344:	34420003 	ori	v0,v0,0x3
8001e348:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:215
	tf.tf_regs.reg_r[MIPS_REG_GP] = __read_reg($28);
8001e34c:	03801021 	move	v0,gp
8001e350:	afa20094 	sw	v0,148(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:216
	tf.tf_epc = (uint32_t) kernel_thread_entry;
8001e354:	3c028002 	lui	v0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:217
	return do_fork(clone_flags | CLONE_VM, 0, &tf);
8001e358:	36040100 	ori	a0,s0,0x100
8001e35c:	27a60010 	addiu	a2,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:216
	tf.tf_status = read_c0_status();
	tf.tf_status &= ~ST0_KSU;
	tf.tf_status |= ST0_IE;
	tf.tf_status |= ST0_EXL;
	tf.tf_regs.reg_r[MIPS_REG_GP] = __read_reg($28);
	tf.tf_epc = (uint32_t) kernel_thread_entry;
8001e360:	2442f814 	addiu	v0,v0,-2028
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:217
	return do_fork(clone_flags | CLONE_VM, 0, &tf);
8001e364:	00002821 	move	a1,zero
8001e368:	0c003b5f 	jal	8000ed7c <do_fork>
8001e36c:	afa200a0 	sw	v0,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:218
}
8001e370:	8fbf00b4 	lw	ra,180(sp)
8001e374:	8fb200b0 	lw	s2,176(sp)
8001e378:	8fb100ac 	lw	s1,172(sp)
8001e37c:	8fb000a8 	lw	s0,168(sp)
8001e380:	03e00008 	jr	ra
8001e384:	27bd00b8 	addiu	sp,sp,184

8001e388 <copy_thread>:
copy_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:311
//             - setup the kernel entry point and stack of process
int
copy_thread(uint32_t clone_flags, struct proc_struct *proc, uintptr_t esp,
	    struct trapframe *tf)
{
	proc->tf = (struct trapframe *)(proc->kstack + KSTACKSIZE) - 1;
8001e388:	8ca20014 	lw	v0,20(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:312
	*(proc->tf) = *tf;
8001e38c:	24e40090 	addiu	a0,a3,144
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:311
//             - setup the kernel entry point and stack of process
int
copy_thread(uint32_t clone_flags, struct proc_struct *proc, uintptr_t esp,
	    struct trapframe *tf)
{
	proc->tf = (struct trapframe *)(proc->kstack + KSTACKSIZE) - 1;
8001e390:	24421f6c 	addiu	v0,v0,8044
8001e394:	aca20054 	sw	v0,84(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:312
	*(proc->tf) = *tf;
8001e398:	00401821 	move	v1,v0
8001e39c:	8ceb0000 	lw	t3,0(a3)
8001e3a0:	8cea0004 	lw	t2,4(a3)
8001e3a4:	8ce90008 	lw	t1,8(a3)
8001e3a8:	8ce8000c 	lw	t0,12(a3)
8001e3ac:	24e70010 	addiu	a3,a3,16
8001e3b0:	ac6b0000 	sw	t3,0(v1)
8001e3b4:	ac6a0004 	sw	t2,4(v1)
8001e3b8:	ac690008 	sw	t1,8(v1)
8001e3bc:	ac68000c 	sw	t0,12(v1)
8001e3c0:	14e4fff6 	bne	a3,a0,8001e39c <copy_thread+0x14>
8001e3c4:	24630010 	addiu	v1,v1,16
8001e3c8:	8ce40000 	lw	a0,0(a3)
8001e3cc:	ac640000 	sw	a0,0(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:313
	proc->tf->tf_regs.reg_r[MIPS_REG_V0] = 0;
8001e3d0:	ac40001c 	sw	zero,28(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:314
	if (esp == 0)		//a kernel thread
8001e3d4:	14c00003 	bnez	a2,8001e3e4 <copy_thread+0x5c>
8001e3d8:	2443ffe0 	addiu	v1,v0,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:315
		esp = (uintptr_t) proc->tf - 32;
8001e3dc:	2446ffe0 	addiu	a2,v0,-32
8001e3e0:	00c01821 	move	v1,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:317
	proc->tf->tf_regs.reg_r[MIPS_REG_SP] = esp;
	proc->context.sf_ra = (uintptr_t) forkret;
8001e3e4:	3c048002 	lui	a0,0x8002
8001e3e8:	2484e220 	addiu	a0,a0,-7648
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:316
	proc->tf = (struct trapframe *)(proc->kstack + KSTACKSIZE) - 1;
	*(proc->tf) = *tf;
	proc->tf->tf_regs.reg_r[MIPS_REG_V0] = 0;
	if (esp == 0)		//a kernel thread
		esp = (uintptr_t) proc->tf - 32;
	proc->tf->tf_regs.reg_r[MIPS_REG_SP] = esp;
8001e3ec:	ac460088 	sw	a2,136(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:320
	proc->context.sf_ra = (uintptr_t) forkret;
	proc->context.sf_sp = (uintptr_t) (proc->tf) - 32;
	return 0;
}
8001e3f0:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:317
	*(proc->tf) = *tf;
	proc->tf->tf_regs.reg_r[MIPS_REG_V0] = 0;
	if (esp == 0)		//a kernel thread
		esp = (uintptr_t) proc->tf - 32;
	proc->tf->tf_regs.reg_r[MIPS_REG_SP] = esp;
	proc->context.sf_ra = (uintptr_t) forkret;
8001e3f4:	aca4004c 	sw	a0,76(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:320
	proc->context.sf_sp = (uintptr_t) (proc->tf) - 32;
	return 0;
}
8001e3f8:	03e00008 	jr	ra
8001e3fc:	aca30050 	sw	v1,80(a1)

8001e400 <kernel_execve>:
kernel_execve():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:404
// kernel_execve - do SYS_exec syscall to exec a user program scalled by user_main kernel_thread
int kernel_execve(const char *name, const char **argv, const char **kenvp)
{
	int argc = 0, ret;

	while (argv[argc] != NULL) {
8001e400:	8ca20000 	lw	v0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:401
	return ret;
}

// kernel_execve - do SYS_exec syscall to exec a user program scalled by user_main kernel_thread
int kernel_execve(const char *name, const char **argv, const char **kenvp)
{
8001e404:	00a04021 	move	t0,a1
8001e408:	00804821 	move	t1,a0
8001e40c:	00c05021 	move	t2,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:404
	int argc = 0, ret;

	while (argv[argc] != NULL) {
8001e410:	10400006 	beqz	v0,8001e42c <kernel_execve+0x2c>
8001e414:	00001821 	move	v1,zero
8001e418:	00a01021 	move	v0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:405
		argc++;
8001e41c:	24420004 	addiu	v0,v0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:404
// kernel_execve - do SYS_exec syscall to exec a user program scalled by user_main kernel_thread
int kernel_execve(const char *name, const char **argv, const char **kenvp)
{
	int argc = 0, ret;

	while (argv[argc] != NULL) {
8001e420:	8c440000 	lw	a0,0(v0)
8001e424:	1480fffd 	bnez	a0,8001e41c <kernel_execve+0x1c>
8001e428:	24630001 	addiu	v1,v1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:408
		argc++;
	}
	//panic("unimpl");
	asm volatile ("la $v0, %1;\n"	/* syscall no. */
8001e42c:	24020004 	li	v0,4
8001e430:	01202021 	move	a0,t1
8001e434:	01002821 	move	a1,t0
8001e438:	01403021 	move	a2,t2
8001e43c:	00603821 	move	a3,v1
8001e440:	0000000c 	syscall
8001e444:	00000000 	nop
8001e448:	00401821 	move	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:418
		      "syscall;\n" "nop;\n" "move %0, $v0;\n":"=r" (ret)
		      :"i"( /*T_SYSCALL+ */ SYS_exec), "r"(name), "r"(argv),
		      "r"(kenvp), "r"(argc)
		      :"a0", "a1", "a2", "a3", "v0");
	return ret;
}
8001e44c:	03e00008 	jr	ra
8001e450:	00601021 	move	v0,v1

8001e454 <cpu_idle>:
cpu_idle():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:437

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// cpu_idle - at the end of kern_init, the first kernel thread idleproc will do below works
void cpu_idle(void)
{
8001e454:	27bdffe8 	addiu	sp,sp,-24
8001e458:	afb00010 	sw	s0,16(sp)
8001e45c:	afbf0014 	sw	ra,20(sp)
8001e460:	3c108015 	lui	s0,0x8015
8001e464:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:441
	while (1) {
	//kprintf("current->need_resched=%d \n\r",current->need_resched);
	//current->need_resched = 1;
		if (current->need_resched) {
8001e468:	8c620018 	lw	v0,24(v1)
8001e46c:	1040fffe 	beqz	v0,8001e468 <cpu_idle+0x14>
8001e470:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:442
			schedule();
8001e474:	0c00059e 	jal	80001678 <schedule>
8001e478:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:437

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// cpu_idle - at the end of kern_init, the first kernel thread idleproc will do below works
void cpu_idle(void)
{
8001e47c:	0800791a 	j	8001e468 <cpu_idle+0x14>
8001e480:	8e0377a4 	lw	v1,30628(s0)

8001e484 <ucore_kernel_thread>:
ucore_kernel_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:450
}

//added by HHL
int ucore_kernel_thread(int (*fn) (void *), void *arg, uint32_t clone_flags)
{
	kernel_thread(fn, arg, clone_flags);
8001e484:	080078bf 	j	8001e2fc <kernel_thread>
8001e488:	00000000 	nop

8001e48c <de_thread_arch_hook>:
de_thread_arch_hook():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:455
}

void de_thread_arch_hook(struct proc_struct *proc)
{
}
8001e48c:	03e00008 	jr	ra
8001e490:	00000000 	nop

8001e494 <init_new_context>:
init_new_context():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:460

int
init_new_context(struct proc_struct *proc, struct elfhdr *elf,
		 int argc, char **kargv, int envc, char **kenvp)
{
8001e494:	27bdffc8 	addiu	sp,sp,-56
8001e498:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:462

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
8001e49c:	00061300 	sll	v0,a2,0xc
8001e4a0:	3c128000 	lui	s2,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:460
}

int
init_new_context(struct proc_struct *proc, struct elfhdr *elf,
		 int argc, char **kargv, int envc, char **kenvp)
{
8001e4a4:	afb30020 	sw	s3,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:462

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
8001e4a8:	02429023 	subu	s2,s2,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:463
	char **uargv = (char **)(stacktop - argc * sizeof(char *));
8001e4ac:	00069880 	sll	s3,a2,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:460
}

int
init_new_context(struct proc_struct *proc, struct elfhdr *elf,
		 int argc, char **kargv, int envc, char **kenvp)
{
8001e4b0:	afb40024 	sw	s4,36(sp)
8001e4b4:	afb10018 	sw	s1,24(sp)
8001e4b8:	afb00014 	sw	s0,20(sp)
8001e4bc:	afbf0034 	sw	ra,52(sp)
8001e4c0:	afb70030 	sw	s7,48(sp)
8001e4c4:	afb6002c 	sw	s6,44(sp)
8001e4c8:	afb50028 	sw	s5,40(sp)
8001e4cc:	00c08021 	move	s0,a2
8001e4d0:	0080a021 	move	s4,a0
8001e4d4:	00a08821 	move	s1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:465

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
	char **uargv = (char **)(stacktop - argc * sizeof(char *));
	int i;
	for (i = 0; i < argc; i++) {
8001e4d8:	18c0000d 	blez	a2,8001e510 <init_new_context+0x7c>
8001e4dc:	02539823 	subu	s3,s2,s3
8001e4e0:	00e0b821 	move	s7,a3
8001e4e4:	0260b021 	move	s6,s3
8001e4e8:	0000a821 	move	s5,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:466
		uargv[i] = strcpy((char *)(stacktop + i * PGSIZE), kargv[i]);
8001e4ec:	8ee50000 	lw	a1,0(s7)
8001e4f0:	02402021 	move	a0,s2
8001e4f4:	0c005b84 	jal	80016e10 <strcpy>
8001e4f8:	26b50001 	addiu	s5,s5,1
8001e4fc:	aec20000 	sw	v0,0(s6)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:465
{

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
	char **uargv = (char **)(stacktop - argc * sizeof(char *));
	int i;
	for (i = 0; i < argc; i++) {
8001e500:	26f70004 	addiu	s7,s7,4
8001e504:	26521000 	addiu	s2,s2,4096
8001e508:	16b0fff8 	bne	s5,s0,8001e4ec <init_new_context+0x58>
8001e50c:	26d60004 	addiu	s6,s6,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:470
		uargv[i] = strcpy((char *)(stacktop + i * PGSIZE), kargv[i]);
	}
	//stacktop = (uintptr_t)uargv - sizeof(int);
	//*(int *)stacktop = argc;
	struct trapframe *tf = proc->tf;
8001e510:	8e920054 	lw	s2,84(s4)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:471
	memset(tf, 0, sizeof(struct trapframe));
8001e514:	00002821 	move	a1,zero
8001e518:	24060094 	li	a2,148
8001e51c:	0c005c44 	jal	80017110 <memset>
8001e520:	02402021 	move	a0,s2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:472
	tf->tf_epc = elf->e_entry;
8001e524:	8e220018 	lw	v0,24(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:473
	tf->tf_regs.reg_r[MIPS_REG_SP] = USTACKTOP;
8001e528:	3c038000 	lui	v1,0x8000
8001e52c:	ae430088 	sw	v1,136(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:472
	}
	//stacktop = (uintptr_t)uargv - sizeof(int);
	//*(int *)stacktop = argc;
	struct trapframe *tf = proc->tf;
	memset(tf, 0, sizeof(struct trapframe));
	tf->tf_epc = elf->e_entry;
8001e530:	ae420090 	sw	v0,144(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:474
	tf->tf_regs.reg_r[MIPS_REG_SP] = USTACKTOP;
	uint32_t status = read_c0_status();
8001e534:	40036000 	mfc0	v1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:475
	status &= ~ST0_KSU;
8001e538:	2402ffe7 	li	v0,-25
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:483
	tf->tf_status = status;
	tf->tf_regs.reg_r[MIPS_REG_A0] = argc;
	tf->tf_regs.reg_r[MIPS_REG_A1] = (uint32_t) uargv;

	return 0;
}
8001e53c:	8fbf0034 	lw	ra,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:475
	struct trapframe *tf = proc->tf;
	memset(tf, 0, sizeof(struct trapframe));
	tf->tf_epc = elf->e_entry;
	tf->tf_regs.reg_r[MIPS_REG_SP] = USTACKTOP;
	uint32_t status = read_c0_status();
	status &= ~ST0_KSU;
8001e540:	00621024 	and	v0,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:477
	status |= KSU_USER;
	status |= ST0_EXL;
8001e544:	34420012 	ori	v0,v0,0x12
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:478
	tf->tf_status = status;
8001e548:	ae420004 	sw	v0,4(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:479
	tf->tf_regs.reg_r[MIPS_REG_A0] = argc;
8001e54c:	ae500024 	sw	s0,36(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:480
	tf->tf_regs.reg_r[MIPS_REG_A1] = (uint32_t) uargv;
8001e550:	ae530028 	sw	s3,40(s2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:483

	return 0;
}
8001e554:	00001021 	move	v0,zero
8001e558:	8fb70030 	lw	s7,48(sp)
8001e55c:	8fb6002c 	lw	s6,44(sp)
8001e560:	8fb50028 	lw	s5,40(sp)
8001e564:	8fb40024 	lw	s4,36(sp)
8001e568:	8fb30020 	lw	s3,32(sp)
8001e56c:	8fb2001c 	lw	s2,28(sp)
8001e570:	8fb10018 	lw	s1,24(sp)
8001e574:	8fb00014 	lw	s0,20(sp)
8001e578:	03e00008 	jr	ra
8001e57c:	27bd0038 	addiu	sp,sp,56

8001e580 <do_execve_arch_hook>:
do_execve_arch_hook():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/proc.c:488

int do_execve_arch_hook(int argc, char **kargv)
{
	return 0;
}
8001e580:	03e00008 	jr	ra
8001e584:	00001021 	move	v0,zero

8001e588 <__sig_setup_frame>:
__sig_setup_frame():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/signal.c:7
#include <assert.h>

int __sig_setup_frame(int sign, struct sigaction *act, sigset_t oldset,
		      struct trapframe *tf)
{
	warn("%s not implemented yet.", __func__);
8001e588:	3c048002 	lui	a0,0x8002
8001e58c:	3c068002 	lui	a2,0x8002
8001e590:	3c078002 	lui	a3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/signal.c:6
#include <proc.h>
#include <assert.h>

int __sig_setup_frame(int sign, struct sigaction *act, sigset_t oldset,
		      struct trapframe *tf)
{
8001e594:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/signal.c:7
	warn("%s not implemented yet.", __func__);
8001e598:	24842b60 	addiu	a0,a0,11104
8001e59c:	24050007 	li	a1,7
8001e5a0:	24c64438 	addiu	a2,a2,17464
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/signal.c:6
#include <proc.h>
#include <assert.h>

int __sig_setup_frame(int sign, struct sigaction *act, sigset_t oldset,
		      struct trapframe *tf)
{
8001e5a4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/signal.c:7
	warn("%s not implemented yet.", __func__);
8001e5a8:	0c006b1d 	jal	8001ac74 <__warn>
8001e5ac:	24e7050c 	addiu	a3,a3,1292
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/signal.c:9
	return -1;
}
8001e5b0:	8fbf0014 	lw	ra,20(sp)
8001e5b4:	2402ffff 	li	v0,-1
8001e5b8:	03e00008 	jr	ra
8001e5bc:	27bd0018 	addiu	sp,sp,24

8001e5c0 <cputch>:
cputch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:15
/* *
 * cputch - writes a single character @c to stdout, and it will
 * increace the value of counter pointed by @cnt.
 * */
static void cputch(int c, int *cnt)
{
8001e5c0:	27bdffe0 	addiu	sp,sp,-32
8001e5c4:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:16
	cons_putc(c);
8001e5c8:	0c006c15 	jal	8001b054 <cons_putc>
8001e5cc:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:17
	(*cnt)++;
8001e5d0:	8fa50010 	lw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:18
}
8001e5d4:	8fbf001c 	lw	ra,28(sp)
8001e5d8:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:17
 * increace the value of counter pointed by @cnt.
 * */
static void cputch(int c, int *cnt)
{
	cons_putc(c);
	(*cnt)++;
8001e5dc:	8ca20000 	lw	v0,0(a1)
8001e5e0:	24420001 	addiu	v0,v0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:18
}
8001e5e4:	03e00008 	jr	ra
8001e5e8:	aca20000 	sw	v0,0(a1)

8001e5ec <vkprintf>:
vkprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:52
 *
 * Call this function if you are already dealing with a va_list.
 * Or you probably want kprintf() instead.
 * */
int vkprintf(const char *fmt, va_list ap)
{
8001e5ec:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:54
	int cnt = 0;
	vprintfmt((void *)cputch, NO_FD, &cnt, fmt, ap);
8001e5f0:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:52
 *
 * Call this function if you are already dealing with a va_list.
 * Or you probably want kprintf() instead.
 * */
int vkprintf(const char *fmt, va_list ap)
{
8001e5f4:	00803821 	move	a3,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:54
	int cnt = 0;
	vprintfmt((void *)cputch, NO_FD, &cnt, fmt, ap);
8001e5f8:	3c05ffff 	lui	a1,0xffff
8001e5fc:	3c048002 	lui	a0,0x8002
8001e600:	27a60018 	addiu	a2,sp,24
8001e604:	2484e5c0 	addiu	a0,a0,-6720
8001e608:	24a56ad9 	addiu	a1,a1,27353
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:52
 *
 * Call this function if you are already dealing with a va_list.
 * Or you probably want kprintf() instead.
 * */
int vkprintf(const char *fmt, va_list ap)
{
8001e60c:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:54
	int cnt = 0;
	vprintfmt((void *)cputch, NO_FD, &cnt, fmt, ap);
8001e610:	0c0059b6 	jal	800166d8 <vprintfmt>
8001e614:	afa00018 	sw	zero,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:56
	return cnt;
}
8001e618:	8fbf0024 	lw	ra,36(sp)
8001e61c:	8fa20018 	lw	v0,24(sp)
8001e620:	03e00008 	jr	ra
8001e624:	27bd0028 	addiu	sp,sp,40

8001e628 <kprintf>:
kprintf():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:65
 *
 * The return value is the number of characters which would be
 * written to stdout.
 * */
int kprintf(const char *fmt, ...)
{
8001e628:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:68
	va_list ap;
	int cnt;
	va_start(ap, fmt);
8001e62c:	27a20024 	addiu	v0,sp,36
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:65
 *
 * The return value is the number of characters which would be
 * written to stdout.
 * */
int kprintf(const char *fmt, ...)
{
8001e630:	afa50024 	sw	a1,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:69
	va_list ap;
	int cnt;
	va_start(ap, fmt);
	cnt = vkprintf(fmt, ap);
8001e634:	00402821 	move	a1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:65
 *
 * The return value is the number of characters which would be
 * written to stdout.
 * */
int kprintf(const char *fmt, ...)
{
8001e638:	afbf001c 	sw	ra,28(sp)
8001e63c:	afa60028 	sw	a2,40(sp)
8001e640:	afa7002c 	sw	a3,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:69
	va_list ap;
	int cnt;
	va_start(ap, fmt);
	cnt = vkprintf(fmt, ap);
8001e644:	0c00797b 	jal	8001e5ec <vkprintf>
8001e648:	afa20010 	sw	v0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:72
	va_end(ap);
	return cnt;
}
8001e64c:	8fbf001c 	lw	ra,28(sp)
8001e650:	03e00008 	jr	ra
8001e654:	27bd0020 	addiu	sp,sp,32

8001e658 <printhex>:
printhex():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:76

static const char *hexdigits = "0123456789ABCDEF";
void printhex(unsigned int x)
{
8001e658:	27bdffd8 	addiu	sp,sp,-40
8001e65c:	3c058002 	lui	a1,0x8002
8001e660:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:79
	char tmp[9];
	int i = 0;
	tmp[8] = 0;
8001e664:	a3a00018 	sb	zero,24(sp)
8001e668:	27a20017 	addiu	v0,sp,23
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:75
	va_end(ap);
	return cnt;
}

static const char *hexdigits = "0123456789ABCDEF";
void printhex(unsigned int x)
8001e66c:	27a6000f 	addiu	a2,sp,15
8001e670:	24a54450 	addiu	a1,a1,17488
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:81
{
	char tmp[9];
	int i = 0;
	tmp[8] = 0;
	for (i = 7; i >= 0; i--) {
		tmp[i] = hexdigits[x & 0xf];
8001e674:	3083000f 	andi	v1,a0,0xf
8001e678:	00a31821 	addu	v1,a1,v1
8001e67c:	90630000 	lbu	v1,0(v1)
8001e680:	a0430000 	sb	v1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:82
		x = x >> 4;
8001e684:	2442ffff 	addiu	v0,v0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:80
void printhex(unsigned int x)
{
	char tmp[9];
	int i = 0;
	tmp[8] = 0;
	for (i = 7; i >= 0; i--) {
8001e688:	1446fffa 	bne	v0,a2,8001e674 <printhex+0x1c>
8001e68c:	00042102 	srl	a0,a0,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:84
		tmp[i] = hexdigits[x & 0xf];
		x = x >> 4;
	}
	kprintf(tmp);
8001e690:	0c00798a 	jal	8001e628 <kprintf>
8001e694:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:85
}
8001e698:	8fbf0024 	lw	ra,36(sp)
8001e69c:	03e00008 	jr	ra
8001e6a0:	27bd0028 	addiu	sp,sp,40

8001e6a4 <printbase10>:
printbase10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:88

void printbase10(int x)
{
8001e6a4:	27bdffd0 	addiu	sp,sp,-48
8001e6a8:	afb00024 	sw	s0,36(sp)
8001e6ac:	afbf002c 	sw	ra,44(sp)
8001e6b0:	afb10028 	sw	s1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:92
	unsigned int t;
	int i = 0;
	char buf[16];
	if (x < 0)
8001e6b4:	04800036 	bltz	a0,8001e790 <printbase10+0xec>
8001e6b8:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:94
		kputchar('-');
	x = (x < 0) ? -x : x;
8001e6bc:	00101fc3 	sra	v1,s0,0x1f
8001e6c0:	00701026 	xor	v0,v1,s0
8001e6c4:	00431023 	subu	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:95
	while (x >= 10) {
8001e6c8:	2843000a 	slti	v1,v0,10
8001e6cc:	00002821 	move	a1,zero
8001e6d0:	1460001d 	bnez	v1,8001e748 <printbase10+0xa4>
8001e6d4:	27a80010 	addiu	t0,sp,16
__divu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:32
/* __divu* routines are from the book, Hacker's Delight */

static inline unsigned int __divu10(unsigned int n)
{
	unsigned int q, r;
	q = (n >> 1) + (n >> 2);
8001e6d8:	00021842 	srl	v1,v0,0x1
8001e6dc:	00022082 	srl	a0,v0,0x2
8001e6e0:	00832021 	addu	a0,a0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:33
	q = q + (q >> 4);
8001e6e4:	00041902 	srl	v1,a0,0x4
8001e6e8:	00642021 	addu	a0,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:34
	q = q + (q >> 8);
8001e6ec:	00041a02 	srl	v1,a0,0x8
8001e6f0:	00642021 	addu	a0,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:35
	q = q + (q >> 16);
8001e6f4:	00041c02 	srl	v1,a0,0x10
8001e6f8:	00642021 	addu	a0,v1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:36
	q = q >> 3;
8001e6fc:	000420c2 	srl	a0,a0,0x3
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001e700:	24460006 	addiu	a2,v0,6
8001e704:	00041840 	sll	v1,a0,0x1
__divu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:37
	q = (n >> 1) + (n >> 2);
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
8001e708:	00c31823 	subu	v1,a2,v1
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001e70c:	000430c0 	sll	a2,a0,0x3
__divu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:38
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
	return q + ((r + 6) >> 4);
8001e710:	00661823 	subu	v1,v1,a2
8001e714:	00031902 	srl	v1,v1,0x4
8001e718:	00641821 	addu	v1,v1,a0
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001e71c:	000320c0 	sll	a0,v1,0x3
8001e720:	00033040 	sll	a2,v1,0x1
printbase10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:97
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
8001e724:	24470030 	addiu	a3,v0,48
__mulu10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
8001e728:	00c43021 	addu	a2,a2,a0
printbase10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:98
		x = t;
8001e72c:	00601021 	move	v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:87
		x = x >> 4;
	}
	kprintf(tmp);
}

void printbase10(int x)
8001e730:	01052021 	addu	a0,t0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:97
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
	while (x >= 10) {
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
8001e734:	00e63023 	subu	a2,a3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:95
	int i = 0;
	char buf[16];
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
	while (x >= 10) {
8001e738:	2863000a 	slti	v1,v1,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:97
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
8001e73c:	a0860000 	sb	a2,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:95
	int i = 0;
	char buf[16];
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
	while (x >= 10) {
8001e740:	1060ffe5 	beqz	v1,8001e6d8 <printbase10+0x34>
8001e744:	24a50001 	addiu	a1,a1,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:100
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
8001e748:	24420030 	addiu	v0,v0,48
8001e74c:	304400ff 	andi	a0,v0,0xff
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:87
		x = x >> 4;
	}
	kprintf(tmp);
}

void printbase10(int x)
8001e750:	24b0ffff 	addiu	s0,a1,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:100
	while (x >= 10) {
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
8001e754:	01051021 	addu	v0,t0,a1
8001e758:	a0440000 	sb	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:87
		x = x >> 4;
	}
	kprintf(tmp);
}

void printbase10(int x)
8001e75c:	01108021 	addu	s0,t0,s0
8001e760:	080079db 	j	8001e76c <printbase10+0xc8>
8001e764:	27b1000f 	addiu	s1,sp,15
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:101
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
	for (; i >= 0; i--) {
8001e768:	2610ffff 	addiu	s0,s0,-1
kputchar():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:115
	kprintf("\n\r");
}
/* kputchar - writes a single character to stdout */
void kputchar(int c)
{
	cons_putc(c);
8001e76c:	0c006c15 	jal	8001b054 <cons_putc>
8001e770:	00000000 	nop
printbase10():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:101
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
	for (; i >= 0; i--) {
8001e774:	5611fffc 	bnel	s0,s1,8001e768 <printbase10+0xc4>
8001e778:	92040000 	lbu	a0,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:104
		kputchar(buf[i]);
	}
}
8001e77c:	8fbf002c 	lw	ra,44(sp)
8001e780:	8fb10028 	lw	s1,40(sp)
8001e784:	8fb00024 	lw	s0,36(sp)
8001e788:	03e00008 	jr	ra
8001e78c:	27bd0030 	addiu	sp,sp,48
kputchar():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:115
	kprintf("\n\r");
}
/* kputchar - writes a single character to stdout */
void kputchar(int c)
{
	cons_putc(c);
8001e790:	0c006c15 	jal	8001b054 <cons_putc>
8001e794:	2404002d 	li	a0,45
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:94
	unsigned int t;
	int i = 0;
	char buf[16];
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
8001e798:	080079b0 	j	8001e6c0 <printbase10+0x1c>
8001e79c:	00101fc3 	sra	v1,s0,0x1f

8001e7a0 <PRINT_HEX>:
PRINT_HEX():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:107
		kputchar(buf[i]);
	}
}

void PRINT_HEX(const char *str,int x)
{
8001e7a0:	27bdffe0 	addiu	sp,sp,-32
8001e7a4:	afbf001c 	sw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:108
	kprintf(str);
8001e7a8:	0c00798a 	jal	8001e628 <kprintf>
8001e7ac:	afa50010 	sw	a1,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:109
	printhex((unsigned int)x);
8001e7b0:	8fa50010 	lw	a1,16(sp)
8001e7b4:	0c007996 	jal	8001e658 <printhex>
8001e7b8:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:111
	kprintf("\n\r");
}
8001e7bc:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:110

void PRINT_HEX(const char *str,int x)
{
	kprintf(str);
	printhex((unsigned int)x);
	kprintf("\n\r");
8001e7c0:	3c048002 	lui	a0,0x8002
8001e7c4:	24843ae8 	addiu	a0,a0,15080
8001e7c8:	0800798a 	j	8001e628 <kprintf>
8001e7cc:	27bd0020 	addiu	sp,sp,32

8001e7d0 <kputchar>:
kputchar():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:115
}
/* kputchar - writes a single character to stdout */
void kputchar(int c)
{
	cons_putc(c);
8001e7d0:	08006c15 	j	8001b054 <cons_putc>
8001e7d4:	00000000 	nop

8001e7d8 <kputs>:
kputs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:123
/* *
 * kputs- writes the string pointed by @str to stdout and
 * appends a newline character.
 * */
int kputs(const char *str)
{
8001e7d8:	27bdffe0 	addiu	sp,sp,-32
8001e7dc:	afb00018 	sw	s0,24(sp)
8001e7e0:	afbf001c 	sw	ra,28(sp)
8001e7e4:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:126
	int cnt = 0;
	char c;
	while ((c = *str++) != '\0') {
8001e7e8:	90840000 	lbu	a0,0(a0)
8001e7ec:	10800007 	beqz	a0,8001e80c <kputs+0x34>
8001e7f0:	afa00010 	sw	zero,16(sp)
8001e7f4:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:127
		cputch(c, &cnt);
8001e7f8:	0c007970 	jal	8001e5c0 <cputch>
8001e7fc:	27a50010 	addiu	a1,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:126
 * */
int kputs(const char *str)
{
	int cnt = 0;
	char c;
	while ((c = *str++) != '\0') {
8001e800:	92040000 	lbu	a0,0(s0)
8001e804:	1480fffc 	bnez	a0,8001e7f8 <kputs+0x20>
8001e808:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:129
		cputch(c, &cnt);
	}
	cputch('\n', &cnt);
8001e80c:	27a50010 	addiu	a1,sp,16
8001e810:	0c007970 	jal	8001e5c0 <cputch>
8001e814:	2404000a 	li	a0,10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:131
	return cnt;
}
8001e818:	8fbf001c 	lw	ra,28(sp)
8001e81c:	8fa20010 	lw	v0,16(sp)
8001e820:	8fb00018 	lw	s0,24(sp)
8001e824:	03e00008 	jr	ra
8001e828:	27bd0020 	addiu	sp,sp,32

8001e82c <getchar>:
getchar():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:135

/* getchar - reads a single non-zero character from stdin */
int getchar(void)
{
8001e82c:	27bdffe8 	addiu	sp,sp,-24
8001e830:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:137
	int c;
	while ((c = cons_getc()) == 0)
8001e834:	0c006c37 	jal	8001b0dc <cons_getc>
8001e838:	00000000 	nop
8001e83c:	1040fffd 	beqz	v0,8001e834 <getchar+0x8>
8001e840:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/mips_io.c:140
		/* do nothing */ ;
	return c;
}
8001e844:	03e00008 	jr	ra
8001e848:	27bd0018 	addiu	sp,sp,24

8001e84c <udivmodsi4>:
udivmodsi4():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:29
unsigned long udivmodsi4(unsigned long num, unsigned long den, int modwanted)
{
	unsigned long bit = 1;
	unsigned long res = 0;

	while (den < num && bit && !(den & (1L << 31))) {
8001e84c:	00a4182b 	sltu	v1,a1,a0
8001e850:	50600010 	beqzl	v1,8001e894 <udivmodsi4+0x48>
8001e854:	24030001 	li	v1,1
8001e858:	04a0001b 	bltz	a1,8001e8c8 <udivmodsi4+0x7c>
8001e85c:	24070020 	li	a3,32
8001e860:	08007a1e 	j	8001e878 <udivmodsi4+0x2c>
8001e864:	24030001 	li	v1,1
8001e868:	10e00015 	beqz	a3,8001e8c0 <udivmodsi4+0x74>
8001e86c:	00001021 	move	v0,zero
8001e870:	04a2000a 	bltzl	a1,8001e89c <udivmodsi4+0x50>
8001e874:	0085382b 	sltu	a3,a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:30
		den <<= 1;
8001e878:	00052840 	sll	a1,a1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:29
unsigned long udivmodsi4(unsigned long num, unsigned long den, int modwanted)
{
	unsigned long bit = 1;
	unsigned long res = 0;

	while (den < num && bit && !(den & (1L << 31))) {
8001e87c:	00a4402b 	sltu	t0,a1,a0
8001e880:	24e7ffff 	addiu	a3,a3,-1
8001e884:	1500fff8 	bnez	t0,8001e868 <udivmodsi4+0x1c>
8001e888:	00031840 	sll	v1,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:33
		den <<= 1;
		bit <<= 1;
	}
	while (bit) {
8001e88c:	1060000c 	beqz	v1,8001e8c0 <udivmodsi4+0x74>
8001e890:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:31
	unsigned long bit = 1;
	unsigned long res = 0;

	while (den < num && bit && !(den & (1L << 31))) {
		den <<= 1;
		bit <<= 1;
8001e894:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:34
	}
	while (bit) {
		if (num >= den) {
8001e898:	0085382b 	sltu	a3,a0,a1
8001e89c:	54e00004 	bnezl	a3,8001e8b0 <udivmodsi4+0x64>
8001e8a0:	00031842 	srl	v1,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:35
			num -= den;
8001e8a4:	00852023 	subu	a0,a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:36
			res |= bit;
8001e8a8:	00431025 	or	v0,v0,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:38
		}
		bit >>= 1;
8001e8ac:	00031842 	srl	v1,v1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:33

	while (den < num && bit && !(den & (1L << 31))) {
		den <<= 1;
		bit <<= 1;
	}
	while (bit) {
8001e8b0:	1460fff9 	bnez	v1,8001e898 <udivmodsi4+0x4c>
8001e8b4:	00052842 	srl	a1,a1,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:44
		den >>= 1;
	}
	if (modwanted)
		return num;
	return res;
}
8001e8b8:	03e00008 	jr	ra
8001e8bc:	0086100b 	movn	v0,a0,a2
8001e8c0:	03e00008 	jr	ra
8001e8c4:	0086100b 	movn	v0,a0,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmodsi4.c:26
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

unsigned long udivmodsi4(unsigned long num, unsigned long den, int modwanted)
{
	unsigned long bit = 1;
8001e8c8:	08007a25 	j	8001e894 <udivmodsi4+0x48>
8001e8cc:	24030001 	li	v1,1

8001e8d0 <__udivsi3>:
__udivsi3():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmod.c:28

long udivmodsi4();

long __udivsi3(long a, long b)
{
	return udivmodsi4(a, b, 0);
8001e8d0:	08007a13 	j	8001e84c <udivmodsi4>
8001e8d4:	00003021 	move	a2,zero

8001e8d8 <__umodsi3>:
__umodsi3():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/udivmod.c:33
}

long __umodsi3(long a, long b)
{
	return udivmodsi4(a, b, 1);
8001e8d8:	08007a13 	j	8001e84c <udivmodsi4>
8001e8dc:	24060001 	li	a2,1

8001e8e0 <__divsi3>:
__divsi3():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:27
<http://www.gnu.org/licenses/>.  */

long udivmodsi4();

long __divsi3(long a, long b)
{
8001e8e0:	27bdffe8 	addiu	sp,sp,-24
8001e8e4:	afb00010 	sw	s0,16(sp)
8001e8e8:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:31
	int neg = 0;
	long res;

	if (a < 0) {
8001e8ec:	0480000b 	bltz	a0,8001e91c <__divsi3+0x3c>
8001e8f0:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:36
		a = -a;
		neg = !neg;
	}

	if (b < 0) {
8001e8f4:	04a2000d 	bltzl	a1,8001e92c <__divsi3+0x4c>
8001e8f8:	00052823 	negu	a1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:41
		b = -b;
		neg = !neg;
	}

	res = udivmodsi4(a, b, 0);
8001e8fc:	0c007a13 	jal	8001e84c <udivmodsi4>
8001e900:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:47

	if (neg)
		res = -res;

	return res;
}
8001e904:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:44
	}

	res = udivmodsi4(a, b, 0);

	if (neg)
		res = -res;
8001e908:	00021823 	negu	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:47

	return res;
}
8001e90c:	0070100b 	movn	v0,v1,s0
8001e910:	8fb00010 	lw	s0,16(sp)
8001e914:	03e00008 	jr	ra
8001e918:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:32
{
	int neg = 0;
	long res;

	if (a < 0) {
		a = -a;
8001e91c:	00042023 	negu	a0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:36
		neg = !neg;
	}

	if (b < 0) {
8001e920:	04a1fff6 	bgez	a1,8001e8fc <__divsi3+0x1c>
8001e924:	24100001 	li	s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:37
		b = -b;
8001e928:	00052823 	negu	a1,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:41
		neg = !neg;
	}

	res = udivmodsi4(a, b, 0);
8001e92c:	0c007a13 	jal	8001e84c <udivmodsi4>
8001e930:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:47

	if (neg)
		res = -res;

	return res;
}
8001e934:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:38
		neg = !neg;
	}

	if (b < 0) {
		b = -b;
		neg = !neg;
8001e938:	3a100001 	xori	s0,s0,0x1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:44
	}

	res = udivmodsi4(a, b, 0);

	if (neg)
		res = -res;
8001e93c:	00021823 	negu	v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:47

	return res;
}
8001e940:	0070100b 	movn	v0,v1,s0
8001e944:	8fb00010 	lw	s0,16(sp)
8001e948:	03e00008 	jr	ra
8001e94c:	27bd0018 	addiu	sp,sp,24

8001e950 <__modsi3>:
__modsi3():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:50

long __modsi3(long a, long b)
{
8001e950:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:54
	int neg = 0;
	long res;

	if (a < 0) {
8001e954:	04800008 	bltz	a0,8001e978 <__modsi3+0x28>
8001e958:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:62
	}

	if (b < 0)
		b = -b;

	res = udivmodsi4(a, b, 1);
8001e95c:	000517c3 	sra	v0,a1,0x1f
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:68

	if (neg)
		res = -res;

	return res;
}
8001e960:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:62
	}

	if (b < 0)
		b = -b;

	res = udivmodsi4(a, b, 1);
8001e964:	00452826 	xor	a1,v0,a1
8001e968:	00a22823 	subu	a1,a1,v0
8001e96c:	24060001 	li	a2,1
8001e970:	08007a13 	j	8001e84c <udivmodsi4>
8001e974:	27bd0018 	addiu	sp,sp,24
8001e978:	00051fc3 	sra	v1,a1,0x1f
8001e97c:	00652826 	xor	a1,v1,a1
8001e980:	00042023 	negu	a0,a0
8001e984:	00a32823 	subu	a1,a1,v1
8001e988:	0c007a13 	jal	8001e84c <udivmodsi4>
8001e98c:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/libs/divmod.c:68

	if (neg)
		res = -res;

	return res;
}
8001e990:	8fbf0014 	lw	ra,20(sp)
8001e994:	00021023 	negu	v0,v0
8001e998:	03e00008 	jr	ra
8001e99c:	27bd0018 	addiu	sp,sp,24

8001e9a0 <sys_gettime>:
sys_gettime():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:82
    return do_kill(pid, -E_KILLED);
}

static uint32_t
sys_gettime(uint32_t arg[]) {
    return (int)ticks;
8001e9a0:	3c028015 	lui	v0,0x8015
8001e9a4:	8c4277ac 	lw	v0,30636(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:83
}
8001e9a8:	03e00008 	jr	ra
8001e9ac:	00000000 	nop

8001e9b0 <sys_getpid>:
sys_getpid():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:87

static uint32_t
sys_getpid(uint32_t arg[]) {
    return pls_read(current)->pid;
8001e9b0:	3c028015 	lui	v0,0x8015
8001e9b4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:88
}
8001e9b8:	03e00008 	jr	ra
8001e9bc:	8c420004 	lw	v0,4(v0)

8001e9c0 <sys_redraw_console>:
sys_redraw_console():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:297
    uint32_t open_flags = (uint32_t)arg[1];
    return sysfile_mkfifo(name, open_flags);
}

static int
sys_redraw_console(uint32_t arg[]) {
8001e9c0:	27bdffe8 	addiu	sp,sp,-24
8001e9c4:	afbf0014 	sw	ra,20(sp)
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001e9c8:	40026000 	mfc0	v0,c0_status
8001e9cc:	30420001 	andi	v0,v0,0x1
8001e9d0:	14400007 	bnez	v0,8001e9f0 <sys_redraw_console+0x30>
8001e9d4:	00000000 	nop
sys_redraw_console():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:300
    bool intr_flag;
    local_intr_save(intr_flag);
    vga_redraw();
8001e9d8:	0c006de7 	jal	8001b79c <vga_redraw>
8001e9dc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:303
    local_intr_restore(intr_flag);
	return 0;
}
8001e9e0:	8fbf0014 	lw	ra,20(sp)
8001e9e4:	00001021 	move	v0,zero
8001e9e8:	03e00008 	jr	ra
8001e9ec:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001e9f0:	0c006cbe 	jal	8001b2f8 <intr_disable>
8001e9f4:	00000000 	nop
sys_redraw_console():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:300

static int
sys_redraw_console(uint32_t arg[]) {
    bool intr_flag;
    local_intr_save(intr_flag);
    vga_redraw();
8001e9f8:	0c006de7 	jal	8001b79c <vga_redraw>
8001e9fc:	00000000 	nop
__intr_restore():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001ea00:	0c006cba 	jal	8001b2e8 <intr_enable>
8001ea04:	00000000 	nop
sys_redraw_console():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:303
    local_intr_restore(intr_flag);
	return 0;
}
8001ea08:	8fbf0014 	lw	ra,20(sp)
8001ea0c:	00001021 	move	v0,zero
8001ea10:	03e00008 	jr	ra
8001ea14:	27bd0018 	addiu	sp,sp,24

8001ea18 <sys_mkfifo>:
sys_mkfifo():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:290
    int *fd_store = (int *)arg[0];
    return sysfile_pipe(fd_store);
}

static uint32_t
sys_mkfifo(uint32_t arg[]) {
8001ea18:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:293
    const char *name = (const char *)arg[0];
    uint32_t open_flags = (uint32_t)arg[1];
    return sysfile_mkfifo(name, open_flags);
8001ea1c:	8c450004 	lw	a1,4(v0)
8001ea20:	0800371f 	j	8000dc7c <sysfile_mkfifo>
8001ea24:	8c840000 	lw	a0,0(a0)

8001ea28 <sys_pipe>:
sys_pipe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:286
}

static uint32_t
sys_pipe(uint32_t arg[]) {
    int *fd_store = (int *)arg[0];
    return sysfile_pipe(fd_store);
8001ea28:	080036e5 	j	8000db94 <sysfile_pipe>
8001ea2c:	8c840000 	lw	a0,0(a0)

8001ea30 <sys_dup>:
sys_dup():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:277
    struct dirent *direntp = (struct dirent *)arg[1];
    return sysfile_getdirentry(fd, direntp, NULL);
}

static uint32_t
sys_dup(uint32_t arg[]) {
8001ea30:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:280
    int fd1 = (int)arg[0];
    int fd2 = (int)arg[1];
    return sysfile_dup(fd1, fd2);
8001ea34:	8c450004 	lw	a1,4(v0)
8001ea38:	080036e3 	j	8000db8c <sysfile_dup>
8001ea3c:	8c840000 	lw	a0,0(a0)

8001ea40 <sys_getdirentry>:
sys_getdirentry():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:270
    const char *name = (const char *)arg[0];
    return sysfile_unlink(name);
}

static uint32_t
sys_getdirentry(uint32_t arg[]) {
8001ea40:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:273
    int fd = (int)arg[0];
    struct dirent *direntp = (struct dirent *)arg[1];
    return sysfile_getdirentry(fd, direntp, NULL);
8001ea44:	8c450004 	lw	a1,4(v0)
8001ea48:	8c840000 	lw	a0,0(a0)
8001ea4c:	0800369b 	j	8000da6c <sysfile_getdirentry>
8001ea50:	00003021 	move	a2,zero

8001ea54 <sys_unlink>:
sys_unlink():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:266
}

static uint32_t
sys_unlink(uint32_t arg[]) {
    const char *name = (const char *)arg[0];
    return sysfile_unlink(name);
8001ea54:	08003665 	j	8000d994 <sysfile_unlink>
8001ea58:	8c840000 	lw	a0,0(a0)

8001ea5c <sys_rename>:
sys_rename():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:257
    const char *path2 = (const char *)arg[1];
    return sysfile_link(path1, path2);
}

static uint32_t
sys_rename(uint32_t arg[]) {
8001ea5c:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:260
    const char *path1 = (const char *)arg[0];
    const char *path2 = (const char *)arg[1];
    return sysfile_rename(path1, path2);
8001ea60:	8c450004 	lw	a1,4(v0)
8001ea64:	08003640 	j	8000d900 <sysfile_rename>
8001ea68:	8c840000 	lw	a0,0(a0)

8001ea6c <sys_link>:
sys_link():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:250
    const char *path = (const char *)arg[0];
    return sysfile_mkdir(path);
}

static uint32_t
sys_link(uint32_t arg[]) {
8001ea6c:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:253
    const char *path1 = (const char *)arg[0];
    const char *path2 = (const char *)arg[1];
    return sysfile_link(path1, path2);
8001ea70:	8c450004 	lw	a1,4(v0)
8001ea74:	0800361b 	j	8000d86c <sysfile_link>
8001ea78:	8c840000 	lw	a0,0(a0)

8001ea7c <sys_mkdir>:
sys_mkdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:246
}

static uint32_t
sys_mkdir(uint32_t arg[]) {
    const char *path = (const char *)arg[0];
    return sysfile_mkdir(path);
8001ea7c:	0800360b 	j	8000d82c <sysfile_mkdir>
8001ea80:	8c840000 	lw	a0,0(a0)

8001ea84 <sys_getcwd>:
sys_getcwd():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:237
    const char *path = (const char *)arg[0];
    return sysfile_chdir(path);
}

static uint32_t
sys_getcwd(uint32_t arg[]) {
8001ea84:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:240
    char *buf = (char *)arg[0];
    size_t len = (size_t)arg[1];
    return sysfile_getcwd(buf, len);
8001ea88:	8c450004 	lw	a1,4(v0)
8001ea8c:	08003675 	j	8000d9d4 <sysfile_getcwd>
8001ea90:	8c840000 	lw	a0,0(a0)

8001ea94 <sys_chdir>:
sys_chdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:233
}

static uint32_t
sys_chdir(uint32_t arg[]) {
    const char *path = (const char *)arg[0];
    return sysfile_chdir(path);
8001ea94:	080035fb 	j	8000d7ec <sysfile_chdir>
8001ea98:	8c840000 	lw	a0,0(a0)

8001ea9c <sys_fsync>:
sys_fsync():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:227
}

static uint32_t
sys_fsync(uint32_t arg[]) {
    int fd = (int)arg[0];
    return sysfile_fsync(fd);
8001ea9c:	080035f9 	j	8000d7e4 <sysfile_fsync>
8001eaa0:	8c840000 	lw	a0,0(a0)

8001eaa4 <sys_fstat>:
sys_fstat():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:218
    int whence = (int)arg[2];
    return sysfile_seek(fd, pos, whence);
}

static uint32_t
sys_fstat(uint32_t arg[]) {
8001eaa4:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:221
    int fd = (int)arg[0];
    struct stat *stat = (struct stat *)arg[1];
    return sysfile_fstat(fd, stat);
8001eaa8:	8c450004 	lw	a1,4(v0)
8001eaac:	0800352a 	j	8000d4a8 <sysfile_fstat>
8001eab0:	8c840000 	lw	a0,0(a0)

8001eab4 <sys_seek>:
sys_seek():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:210
    size_t len = (size_t)arg[2];
    return sysfile_write(fd, base, len);
}

static uint32_t
sys_seek(uint32_t arg[]) {
8001eab4:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:214
    int fd = (int)arg[0];
    off_t pos = (off_t)arg[1];
    int whence = (int)arg[2];
    return sysfile_seek(fd, pos, whence);
8001eab8:	8c450004 	lw	a1,4(v0)
8001eabc:	8c840000 	lw	a0,0(a0)
8001eac0:	08003528 	j	8000d4a0 <sysfile_seek>
8001eac4:	8c460008 	lw	a2,8(v0)

8001eac8 <sys_write>:
sys_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:202
    size_t len = (size_t)arg[2];
    return sysfile_read(fd, base, len);
}

static uint32_t
sys_write(uint32_t arg[]) {
8001eac8:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:206
    int fd = (int)arg[0];
    void *base = (void *)arg[1];
    size_t len = (size_t)arg[2];
    return sysfile_write(fd, base, len);
8001eacc:	8c450004 	lw	a1,4(v0)
8001ead0:	8c840000 	lw	a0,0(a0)
8001ead4:	0800346d 	j	8000d1b4 <sysfile_write>
8001ead8:	8c460008 	lw	a2,8(v0)

8001eadc <sys_read>:
sys_read():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:194
    int fd = (int)arg[0];
    return sysfile_close(fd);
}

static uint32_t
sys_read(uint32_t arg[]) {
8001eadc:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:198
    int fd = (int)arg[0];
    void *base = (void *)arg[1];
    size_t len = (size_t)arg[2];
    return sysfile_read(fd, base, len);
8001eae0:	8c450004 	lw	a1,4(v0)
8001eae4:	8c840000 	lw	a0,0(a0)
8001eae8:	080033e8 	j	8000cfa0 <sysfile_read>
8001eaec:	8c460008 	lw	a2,8(v0)

8001eaf0 <sys_close>:
sys_close():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:190
}

static uint32_t
sys_close(uint32_t arg[]) {
    int fd = (int)arg[0];
    return sysfile_close(fd);
8001eaf0:	080033e6 	j	8000cf98 <sysfile_close>
8001eaf4:	8c840000 	lw	a0,0(a0)

8001eaf8 <sys_open>:
sys_open():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:181
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_recv(pid_store, event_store, timeout);
}

static uint32_t
sys_open(uint32_t arg[]) {
8001eaf8:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:184
    const char *path = (const char *)arg[0];
    uint32_t open_flags = (uint32_t)arg[1];
    return sysfile_open(path, open_flags);
8001eafc:	8c450004 	lw	a1,4(v0)
8001eb00:	080033d1 	j	8000cf44 <sysfile_open>
8001eb04:	8c840000 	lw	a0,0(a0)

8001eb08 <sys_event_recv>:
sys_event_recv():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:173
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_send(pid, event, timeout);
}

static uint32_t
sys_event_recv(uint32_t arg[]) {
8001eb08:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:177
    int *pid_store = (int *)arg[0];
    int *event_store = (int *)arg[1];
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_recv(pid_store, event_store, timeout);
8001eb0c:	8c450004 	lw	a1,4(v0)
8001eb10:	8c840000 	lw	a0,0(a0)
8001eb14:	0800607a 	j	800181e8 <ipc_event_recv>
8001eb18:	8c460008 	lw	a2,8(v0)

8001eb1c <sys_event_send>:
sys_event_send():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:165
    int *value_store = (int *)arg[1];
    return ipc_sem_get_value(sem_id, value_store);
}

static uint32_t
sys_event_send(uint32_t arg[]) {
8001eb1c:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:169
    int pid = (int)arg[0];
    int event = (int)arg[1];
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_send(pid, event, timeout);
8001eb20:	8c450004 	lw	a1,4(v0)
8001eb24:	8c840000 	lw	a0,0(a0)
8001eb28:	08005fe7 	j	80017f9c <ipc_event_send>
8001eb2c:	8c460008 	lw	a2,8(v0)

8001eb30 <sys_sem_get_value>:
sys_sem_get_value():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:158
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_free(sem_id);
}

static uint32_t
sys_sem_get_value(uint32_t arg[]) {
8001eb30:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:161
    sem_t sem_id = (sem_t)arg[0];
    int *value_store = (int *)arg[1];
    return ipc_sem_get_value(sem_id, value_store);
8001eb34:	8c450004 	lw	a1,4(v0)
8001eb38:	080068f5 	j	8001a3d4 <ipc_sem_get_value>
8001eb3c:	8c840000 	lw	a0,0(a0)

8001eb40 <sys_sem_free>:
sys_sem_free():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:154
}

static uint32_t
sys_sem_free(uint32_t arg[]) {
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_free(sem_id);
8001eb40:	080068ba 	j	8001a2e8 <ipc_sem_free>
8001eb44:	8c840000 	lw	a0,0(a0)

8001eb48 <sys_sem_wait>:
sys_sem_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:145
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_post(sem_id);
}

static uint32_t
sys_sem_wait(uint32_t arg[]) {
8001eb48:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:148
    sem_t sem_id = (sem_t)arg[0];
    unsigned int timeout = (unsigned int)arg[1];
    return ipc_sem_wait(sem_id, timeout);
8001eb4c:	8c450004 	lw	a1,4(v0)
8001eb50:	0800686e 	j	8001a1b8 <ipc_sem_wait>
8001eb54:	8c840000 	lw	a0,0(a0)

8001eb58 <sys_sem_post>:
sys_sem_post():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:141
}

static uint32_t
sys_sem_post(uint32_t arg[]) {
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_post(sem_id);
8001eb58:	08006848 	j	8001a120 <ipc_sem_post>
8001eb5c:	8c840000 	lw	a0,0(a0)

8001eb60 <sys_sem_init>:
sys_sem_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:135
}

static uint32_t
sys_sem_init(uint32_t arg[]) {
    int value = (int)arg[0];
    return ipc_sem_init(value);
8001eb60:	0800681c 	j	8001a070 <ipc_sem_init>
8001eb64:	8c840000 	lw	a0,0(a0)

8001eb68 <sys_pgdir>:
sys_pgdir():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:127
    kputchar(c);
    return 0;
}

static uint32_t
sys_pgdir(uint32_t arg[]) {
8001eb68:	27bdffe8 	addiu	sp,sp,-24
8001eb6c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:128
    print_pgdir();
8001eb70:	0c007431 	jal	8001d0c4 <print_pgdir>
8001eb74:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:130
    return 0;
}
8001eb78:	8fbf0014 	lw	ra,20(sp)
8001eb7c:	00001021 	move	v0,zero
8001eb80:	03e00008 	jr	ra
8001eb84:	27bd0018 	addiu	sp,sp,24

8001eb88 <sys_putc>:
sys_putc():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:122
}

static uint32_t
sys_putc(uint32_t arg[]) {
    int c = (int)arg[0];
    kputchar(c);
8001eb88:	8c840000 	lw	a0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:120
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_shmem(addr_store, len, mmap_flags);
}

static uint32_t
sys_putc(uint32_t arg[]) {
8001eb8c:	27bdffe8 	addiu	sp,sp,-24
8001eb90:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:122
    int c = (int)arg[0];
    kputchar(c);
8001eb94:	0c0079f4 	jal	8001e7d0 <kputchar>
8001eb98:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:124
    return 0;
}
8001eb9c:	8fbf0014 	lw	ra,20(sp)
8001eba0:	00001021 	move	v0,zero
8001eba4:	03e00008 	jr	ra
8001eba8:	27bd0018 	addiu	sp,sp,24

8001ebac <sys_shmem>:
sys_shmem():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:112
    size_t len = (size_t)arg[1];
    return do_munmap(addr, len);
}

static uint32_t
sys_shmem(uint32_t arg[]) {
8001ebac:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:116
    uintptr_t *addr_store = (uintptr_t *)arg[0];
    size_t len = (size_t)arg[1];
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_shmem(addr_store, len, mmap_flags);
8001ebb0:	8c450004 	lw	a1,4(v0)
8001ebb4:	8c840000 	lw	a0,0(a0)
8001ebb8:	0800437f 	j	80010dfc <do_shmem>
8001ebbc:	8c460008 	lw	a2,8(v0)

8001ebc0 <sys_munmap>:
sys_munmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:105
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_mmap(addr_store, len, mmap_flags);
}

static uint32_t
sys_munmap(uint32_t arg[]) {
8001ebc0:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:108
    uintptr_t addr = (uintptr_t)arg[0];
    size_t len = (size_t)arg[1];
    return do_munmap(addr, len);
8001ebc4:	8c450004 	lw	a1,4(v0)
8001ebc8:	0800435e 	j	80010d78 <do_munmap>
8001ebcc:	8c840000 	lw	a0,0(a0)

8001ebd0 <sys_mmap>:
sys_mmap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:97
    uintptr_t *brk_store = (uintptr_t *)arg[0];
    return do_brk(brk_store);
}

static uint32_t
sys_mmap(uint32_t arg[]) {
8001ebd0:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:101
    uintptr_t *addr_store = (uintptr_t *)arg[0];
    size_t len = (size_t)arg[1];
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_mmap(addr_store, len, mmap_flags);
8001ebd4:	8c450004 	lw	a1,4(v0)
8001ebd8:	8c840000 	lw	a0,0(a0)
8001ebdc:	08004308 	j	80010c20 <do_mmap>
8001ebe0:	8c460008 	lw	a2,8(v0)

8001ebe4 <sys_brk>:
sys_brk():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:93
}

static uint32_t
sys_brk(uint32_t arg[]) {
    uintptr_t *brk_store = (uintptr_t *)arg[0];
    return do_brk(brk_store);
8001ebe4:	0800418c 	j	80010630 <do_brk>
8001ebe8:	8c840000 	lw	a0,0(a0)

8001ebec <sys_kill>:
sys_kill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:77
}

static uint32_t
sys_kill(uint32_t arg[]) {
    int pid = (int)arg[0];
    return do_kill(pid, -E_KILLED);
8001ebec:	8c840000 	lw	a0,0(a0)
8001ebf0:	08004171 	j	800105c4 <do_kill>
8001ebf4:	2405ffdb 	li	a1,-37

8001ebf8 <sys_sleep>:
sys_sleep():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:71
}

static uint32_t
sys_sleep(uint32_t arg[]) {
    unsigned int time = (unsigned int)arg[0];
    return do_sleep(time);
8001ebf8:	08004234 	j	800108d0 <do_sleep>
8001ebfc:	8c840000 	lw	a0,0(a0)

8001ec00 <sys_yield>:
sys_yield():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:65
    return do_exit_thread(error_code);
}

static uint32_t
sys_yield(uint32_t arg[]) {
    return do_yield();
8001ec00:	08003fc0 	j	8000ff00 <do_yield>
8001ec04:	00000000 	nop

8001ec08 <sys_exit_thread>:
sys_exit_thread():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:60
}

static uint32_t
sys_exit_thread(uint32_t arg[]) {
    int error_code = (int)arg[0];
    return do_exit_thread(error_code);
8001ec08:	08003d2e 	j	8000f4b8 <do_exit_thread>
8001ec0c:	8c840000 	lw	a0,0(a0)

8001ec10 <sys_clone>:
sys_clone():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:48
    return do_execve(name, argv, envp);
}

static uint32_t
sys_clone(uint32_t arg[]) {
    struct trapframe *tf = pls_read(current)->tf;
8001ec10:	3c028015 	lui	v0,0x8015
8001ec14:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:50
    uint32_t clone_flags = (uint32_t)arg[0];
    uintptr_t stack = (uintptr_t)arg[1];
8001ec18:	8c850004 	lw	a1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:49
}

static uint32_t
sys_clone(uint32_t arg[]) {
    struct trapframe *tf = pls_read(current)->tf;
    uint32_t clone_flags = (uint32_t)arg[0];
8001ec1c:	8c840000 	lw	a0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:51
    uintptr_t stack = (uintptr_t)arg[1];
    if (stack == 0) {
8001ec20:	14a00002 	bnez	a1,8001ec2c <sys_clone+0x1c>
8001ec24:	8c460054 	lw	a2,84(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:52
        stack = tf->tf_regs.reg_r[MIPS_REG_SP];
8001ec28:	8cc50088 	lw	a1,136(a2)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:54
    }
    return do_fork(clone_flags, stack, tf);
8001ec2c:	08003b5f 	j	8000ed7c <do_fork>
8001ec30:	00000000 	nop

8001ec34 <sys_fork>:
sys_fork():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:26
    return do_exit(error_code);
}

static uint32_t
sys_fork(uint32_t arg[]) {
    struct trapframe *tf = current->tf;
8001ec34:	3c028015 	lui	v0,0x8015
8001ec38:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:28
    uintptr_t stack = tf->tf_regs.reg_r[MIPS_REG_SP];
    return do_fork(0, stack, tf);
8001ec3c:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:26
    return do_exit(error_code);
}

static uint32_t
sys_fork(uint32_t arg[]) {
    struct trapframe *tf = current->tf;
8001ec40:	8c460054 	lw	a2,84(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:28
    uintptr_t stack = tf->tf_regs.reg_r[MIPS_REG_SP];
    return do_fork(0, stack, tf);
8001ec44:	08003b5f 	j	8000ed7c <do_fork>
8001ec48:	8cc50088 	lw	a1,136(a2)

8001ec4c <sys_exec>:
sys_exec():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:39
    int *store = (int *)arg[1];
    return do_wait(pid, store);
}

static uint32_t
sys_exec(uint32_t arg[]) {
8001ec4c:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:43
    const char *name = (const char *)arg[0];
    const char **argv = (const char **)arg[1];
    const char **envp = (const char **)arg[2];
    return do_execve(name, argv, envp);
8001ec50:	8c450004 	lw	a1,4(v0)
8001ec54:	8c840000 	lw	a0,0(a0)
8001ec58:	08003d56 	j	8000f558 <do_execve>
8001ec5c:	8c460008 	lw	a2,8(v0)

8001ec60 <sys_wait>:
sys_wait():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:32
    uintptr_t stack = tf->tf_regs.reg_r[MIPS_REG_SP];
    return do_fork(0, stack, tf);
}

static uint32_t
sys_wait(uint32_t arg[]) {
8001ec60:	00801021 	move	v0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:35
    int pid = (int)arg[0];
    int *store = (int *)arg[1];
    return do_wait(pid, store);
8001ec64:	8c450004 	lw	a1,4(v0)
8001ec68:	08003fc7 	j	8000ff1c <do_wait>
8001ec6c:	8c840000 	lw	a0,0(a0)

8001ec70 <sys_exit>:
sys_exit():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:21
extern volatile int ticks;

static uint32_t
sys_exit(uint32_t arg[]) {
    int error_code = (int)arg[0];
    return do_exit(error_code);
8001ec70:	08003d34 	j	8000f4d0 <do_exit>
8001ec74:	8c840000 	lw	a0,0(a0)

8001ec78 <syscall>:
syscall():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:353
};

#define NUM_SYSCALLS        ((sizeof(syscalls)) / (sizeof(syscalls[0])))

void syscall(void)
{
8001ec78:	27bdffb8 	addiu	sp,sp,-72
8001ec7c:	afb10040 	sw	s1,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:354
	assert(current != NULL);
8001ec80:	3c118015 	lui	s1,0x8015
8001ec84:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:353
};

#define NUM_SYSCALLS        ((sizeof(syscalls)) / (sizeof(syscalls[0])))

void syscall(void)
{
8001ec88:	afbf0044 	sw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:354
	assert(current != NULL);
8001ec8c:	1040002d 	beqz	v0,8001ed44 <syscall+0xcc>
8001ec90:	afb0003c 	sw	s0,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:355
	struct trapframe *tf = current->tf;
8001ec94:	8c500054 	lw	s0,84(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:357
	uint32_t arg[5];
	int num = tf->tf_regs.reg_r[MIPS_REG_V0];
8001ec98:	8e07001c 	lw	a3,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:360
	//num -= T_SYSCALL;
	//kprintf("$ %d %d\n",current->pid, num);
	if (num >= 0 && num < NUM_SYSCALLS) {
8001ec9c:	2ce200f3 	sltiu	v0,a3,243
8001eca0:	10400019 	beqz	v0,8001ed08 <syscall+0x90>
8001eca4:	3c038002 	lui	v1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:361
		if (syscalls[num] != NULL) {
8001eca8:	00071080 	sll	v0,a3,0x2
8001ecac:	24630520 	addiu	v1,v1,1312
8001ecb0:	00431021 	addu	v0,v0,v1
8001ecb4:	8c420000 	lw	v0,0(v0)
8001ecb8:	50400014 	beqzl	v0,8001ed0c <syscall+0x94>
8001ecbc:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:365
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
8001ecc0:	8e040030 	lw	a0,48(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:362
	int num = tf->tf_regs.reg_r[MIPS_REG_V0];
	//num -= T_SYSCALL;
	//kprintf("$ %d %d\n",current->pid, num);
	if (num >= 0 && num < NUM_SYSCALLS) {
		if (syscalls[num] != NULL) {
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
8001ecc4:	8e070024 	lw	a3,36(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:363
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
8001ecc8:	8e060028 	lw	a2,40(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:364
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
8001eccc:	8e05002c 	lw	a1,44(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:366
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
8001ecd0:	8e030034 	lw	v1,52(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:365
	if (num >= 0 && num < NUM_SYSCALLS) {
		if (syscalls[num] != NULL) {
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
8001ecd4:	afa40024 	sw	a0,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:362
	int num = tf->tf_regs.reg_r[MIPS_REG_V0];
	//num -= T_SYSCALL;
	//kprintf("$ %d %d\n",current->pid, num);
	if (num >= 0 && num < NUM_SYSCALLS) {
		if (syscalls[num] != NULL) {
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
8001ecd8:	afa70018 	sw	a3,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:363
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
8001ecdc:	afa6001c 	sw	a2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:364
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
8001ece0:	afa50020 	sw	a1,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:366
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
8001ece4:	afa30028 	sw	v1,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:367
			tf->tf_regs.reg_r[MIPS_REG_V0] = syscalls[num] (arg);
8001ece8:	0040f809 	jalr	v0
8001ecec:	27a40018 	addiu	a0,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:374
		}
	}
	print_trapframe(tf);
	panic("undefined syscall %d, pid = %d, name = %s.\n",
	      num, current->pid, current->name);
}
8001ecf0:	8fbf0044 	lw	ra,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:367
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
			tf->tf_regs.reg_r[MIPS_REG_V0] = syscalls[num] (arg);
8001ecf4:	ae02001c 	sw	v0,28(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:374
		}
	}
	print_trapframe(tf);
	panic("undefined syscall %d, pid = %d, name = %s.\n",
	      num, current->pid, current->name);
}
8001ecf8:	8fb10040 	lw	s1,64(sp)
8001ecfc:	8fb0003c 	lw	s0,60(sp)
8001ed00:	03e00008 	jr	ra
8001ed04:	27bd0048 	addiu	sp,sp,72
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:371
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
			tf->tf_regs.reg_r[MIPS_REG_V0] = syscalls[num] (arg);
			return;
		}
	}
	print_trapframe(tf);
8001ed08:	02002021 	move	a0,s0
8001ed0c:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001ed10:	afa70030 	sw	a3,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:372
	panic("undefined syscall %d, pid = %d, name = %s.\n",
8001ed14:	8e2277a4 	lw	v0,30628(s1)
8001ed18:	8fa70030 	lw	a3,48(sp)
8001ed1c:	3c048002 	lui	a0,0x8002
8001ed20:	8c430004 	lw	v1,4(v0)
8001ed24:	3c068002 	lui	a2,0x8002
8001ed28:	24420060 	addiu	v0,v0,96
8001ed2c:	24844464 	addiu	a0,a0,17508
8001ed30:	24050175 	li	a1,373
8001ed34:	24c64470 	addiu	a2,a2,17520
8001ed38:	afa30010 	sw	v1,16(sp)
8001ed3c:	0c006afd 	jal	8001abf4 <__panic>
8001ed40:	afa20014 	sw	v0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/syscall/syscall.c:354

#define NUM_SYSCALLS        ((sizeof(syscalls)) / (sizeof(syscalls[0])))

void syscall(void)
{
	assert(current != NULL);
8001ed44:	3c048002 	lui	a0,0x8002
8001ed48:	3c068002 	lui	a2,0x8002
8001ed4c:	3c078002 	lui	a3,0x8002
8001ed50:	24844464 	addiu	a0,a0,17508
8001ed54:	24050162 	li	a1,354
8001ed58:	24c609b0 	addiu	a2,a2,2480
8001ed5c:	0c006afd 	jal	8001abf4 <__panic>
8001ed60:	24e72ee8 	addiu	a3,a3,12008

8001ed64 <mp_set_mm_pagetable>:
mp_set_mm_pagetable():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:11

PLS int pls_lapic_id;
PLS int pls_lcpu_idx;
PLS int pls_lcpu_count;
void mp_set_mm_pagetable(struct mm_struct *mm)
{
8001ed64:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:12
	if (mm != NULL && mm->pgdir != NULL)
8001ed68:	1080000d 	beqz	a0,8001eda0 <mp_set_mm_pagetable+0x3c>
8001ed6c:	afbf0014 	sw	ra,20(sp)
8001ed70:	8c870010 	lw	a3,16(a0)
8001ed74:	10e0000a 	beqz	a3,8001eda0 <mp_set_mm_pagetable+0x3c>
8001ed78:	3c028000 	lui	v0,0x8000
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:13
		lcr3(PADDR(mm->pgdir));
8001ed7c:	24421000 	addiu	v0,v0,4096
8001ed80:	00e2102b 	sltu	v0,a3,v0
8001ed84:	1440000c 	bnez	v0,8001edb8 <mp_set_mm_pagetable+0x54>
8001ed88:	3c048002 	lui	a0,0x8002
8001ed8c:	0c0073dc 	jal	8001cf70 <lcr3>
8001ed90:	00e02021 	move	a0,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:17
	else
		lcr3(boot_cr3);
	tlb_invalidate_all();
}
8001ed94:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:16
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
	else
		lcr3(boot_cr3);
	tlb_invalidate_all();
8001ed98:	08007808 	j	8001e020 <tlb_invalidate_all>
8001ed9c:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:15
void mp_set_mm_pagetable(struct mm_struct *mm)
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
	else
		lcr3(boot_cr3);
8001eda0:	3c028015 	lui	v0,0x8015
8001eda4:	0c0073dc 	jal	8001cf70 <lcr3>
8001eda8:	8c44779c 	lw	a0,30620(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:17
	tlb_invalidate_all();
}
8001edac:	8fbf0014 	lw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:16
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
	else
		lcr3(boot_cr3);
	tlb_invalidate_all();
8001edb0:	08007808 	j	8001e020 <tlb_invalidate_all>
8001edb4:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:13
PLS int pls_lcpu_idx;
PLS int pls_lcpu_count;
void mp_set_mm_pagetable(struct mm_struct *mm)
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
8001edb8:	3c068002 	lui	a2,0x8002
8001edbc:	2484449c 	addiu	a0,a0,17564
8001edc0:	2405000d 	li	a1,13
8001edc4:	0c006afd 	jal	8001abf4 <__panic>
8001edc8:	24c625a8 	addiu	a2,a2,9640

8001edcc <mp_tlb_invalidate>:
mp_tlb_invalidate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:21
	tlb_invalidate_all();
}

void mp_tlb_invalidate(pgd_t * pgdir, uintptr_t la)
{
	tlb_invalidate_all();
8001edcc:	08007808 	j	8001e020 <tlb_invalidate_all>
8001edd0:	00000000 	nop

8001edd4 <mp_tlb_update>:
mp_tlb_update():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:26
}

void mp_tlb_update(pgd_t * pgdir, uintptr_t la)
{
	tlb_invalidate_all();
8001edd4:	08007808 	j	8001e020 <tlb_invalidate_all>
8001edd8:	00000000 	nop

8001eddc <mp_init>:
mp_init():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:31
}

int mp_init(void)
{
	pls_write(lapic_id, 0);
8001eddc:	3c028015 	lui	v0,0x8015
8001ede0:	ac4077b0 	sw	zero,30640(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:32
	pls_write(lcpu_idx, 0);
8001ede4:	3c028015 	lui	v0,0x8015
8001ede8:	ac407790 	sw	zero,30608(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:33
	pls_write(lcpu_count, 1);
8001edec:	24030001 	li	v1,1
8001edf0:	3c028015 	lui	v0,0x8015
8001edf4:	ac4377a0 	sw	v1,30624(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/mp.c:36

	return 0;
}
8001edf8:	03e00008 	jr	ra
8001edfc:	00001021 	move	v0,zero

8001ee00 <trap_in_kernel>:
trap_in_kernel():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001ee00:	8c820004 	lw	v0,4(a0)
8001ee04:	30420010 	andi	v0,v0,0x10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:58
}
8001ee08:	03e00008 	jr	ra
8001ee0c:	2c420001 	sltiu	v0,v0,1

8001ee10 <print_regs>:
print_regs():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:61

void print_regs(struct pushregs *regs)
{
8001ee10:	27bdffd0 	addiu	sp,sp,-48
8001ee14:	afb50028 	sw	s5,40(sp)
8001ee18:	afb40024 	sw	s4,36(sp)
8001ee1c:	afb30020 	sw	s3,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:64
	int i;
	for (i = 0; i < 30; i++) {
		kprintf(" $");
8001ee20:	3c158002 	lui	s5,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:66
		printbase10(i + 1);
		kprintf("\t: ");
8001ee24:	3c148002 	lui	s4,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:68
		printhex(regs->reg_r[i]);
		kprintf("\n\r");
8001ee28:	3c138002 	lui	s3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:61
{
	return !(tf->tf_status & KSU_USER);
}

void print_regs(struct pushregs *regs)
{
8001ee2c:	afb2001c 	sw	s2,28(sp)
8001ee30:	afb10018 	sw	s1,24(sp)
8001ee34:	afb00014 	sw	s0,20(sp)
8001ee38:	afbf002c 	sw	ra,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:63
	int i;
	for (i = 0; i < 30; i++) {
8001ee3c:	00808821 	move	s1,a0
8001ee40:	00008021 	move	s0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:64
		kprintf(" $");
8001ee44:	26b544a4 	addiu	s5,s5,17572
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:66
		printbase10(i + 1);
		kprintf("\t: ");
8001ee48:	269444a8 	addiu	s4,s4,17576
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:68
		printhex(regs->reg_r[i]);
		kprintf("\n\r");
8001ee4c:	26733ae8 	addiu	s3,s3,15080
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:63
}

void print_regs(struct pushregs *regs)
{
	int i;
	for (i = 0; i < 30; i++) {
8001ee50:	2412001e 	li	s2,30
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:64
		kprintf(" $");
8001ee54:	02a02021 	move	a0,s5
8001ee58:	0c00798a 	jal	8001e628 <kprintf>
8001ee5c:	26100001 	addiu	s0,s0,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:65
		printbase10(i + 1);
8001ee60:	0c0079a9 	jal	8001e6a4 <printbase10>
8001ee64:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:66
		kprintf("\t: ");
8001ee68:	0c00798a 	jal	8001e628 <kprintf>
8001ee6c:	02802021 	move	a0,s4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:67
		printhex(regs->reg_r[i]);
8001ee70:	8e240000 	lw	a0,0(s1)
8001ee74:	0c007996 	jal	8001e658 <printhex>
8001ee78:	26310004 	addiu	s1,s1,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:68
		kprintf("\n\r");
8001ee7c:	0c00798a 	jal	8001e628 <kprintf>
8001ee80:	02602021 	move	a0,s3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:63
}

void print_regs(struct pushregs *regs)
{
	int i;
	for (i = 0; i < 30; i++) {
8001ee84:	5612fff4 	bnel	s0,s2,8001ee58 <print_regs+0x48>
8001ee88:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:70
		printbase10(i + 1);
		kprintf("\t: ");
		printhex(regs->reg_r[i]);
		kprintf("\n\r");
	}
}
8001ee8c:	8fbf002c 	lw	ra,44(sp)
8001ee90:	8fb50028 	lw	s5,40(sp)
8001ee94:	8fb40024 	lw	s4,36(sp)
8001ee98:	8fb30020 	lw	s3,32(sp)
8001ee9c:	8fb2001c 	lw	s2,28(sp)
8001eea0:	8fb10018 	lw	s1,24(sp)
8001eea4:	8fb00014 	lw	s0,20(sp)
8001eea8:	03e00008 	jr	ra
8001eeac:	27bd0030 	addiu	sp,sp,48

8001eeb0 <print_trapframe>:
print_trapframe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:73

void print_trapframe(struct trapframe *tf)
{
8001eeb0:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:74
	PRINT_HEX("trapframe at ", tf);
8001eeb4:	00802821 	move	a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:73
		kprintf("\n\r");
	}
}

void print_trapframe(struct trapframe *tf)
{
8001eeb8:	afb00010 	sw	s0,16(sp)
8001eebc:	00808021 	move	s0,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:74
	PRINT_HEX("trapframe at ", tf);
8001eec0:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:73
		kprintf("\n\r");
	}
}

void print_trapframe(struct trapframe *tf)
{
8001eec4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:74
	PRINT_HEX("trapframe at ", tf);
8001eec8:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001eecc:	248444b4 	addiu	a0,a0,17588
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:75
	print_regs(&tf->tf_regs);
8001eed0:	0c007b84 	jal	8001ee10 <print_regs>
8001eed4:	26040018 	addiu	a0,s0,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:76
	PRINT_HEX("\r\n $ra: ", tf->tf_ra);
8001eed8:	8e050014 	lw	a1,20(s0)
8001eedc:	3c048002 	lui	a0,0x8002
8001eee0:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001eee4:	248444c4 	addiu	a0,a0,17604
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:77
	PRINT_HEX("\r\n BadVA: ", tf->tf_vaddr);
8001eee8:	8e050000 	lw	a1,0(s0)
8001eeec:	3c048002 	lui	a0,0x8002
8001eef0:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001eef4:	248444d0 	addiu	a0,a0,17616
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:78
	PRINT_HEX("\r\n Status: ", tf->tf_status);
8001eef8:	8e050004 	lw	a1,4(s0)
8001eefc:	3c048002 	lui	a0,0x8002
8001ef00:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001ef04:	248444dc 	addiu	a0,a0,17628
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:79
	PRINT_HEX("\r\n Cause: ", tf->tf_cause);
8001ef08:	8e050008 	lw	a1,8(s0)
8001ef0c:	3c048002 	lui	a0,0x8002
8001ef10:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001ef14:	248444e8 	addiu	a0,a0,17640
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:80
	PRINT_HEX("\r\n EPC ", tf->tf_epc);
8001ef18:	8e050090 	lw	a1,144(s0)
8001ef1c:	3c048002 	lui	a0,0x8002
8001ef20:	0c0079e8 	jal	8001e7a0 <PRINT_HEX>
8001ef24:	248444f4 	addiu	a0,a0,17652
trap_in_kernel():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001ef28:	8e020004 	lw	v0,4(s0)
8001ef2c:	30420010 	andi	v0,v0,0x10
print_trapframe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:81
	PRINT_HEX("\r\n $ra: ", tf->tf_ra);
	PRINT_HEX("\r\n BadVA: ", tf->tf_vaddr);
	PRINT_HEX("\r\n Status: ", tf->tf_status);
	PRINT_HEX("\r\n Cause: ", tf->tf_cause);
	PRINT_HEX("\r\n EPC ", tf->tf_epc);
	if (!trap_in_kernel(tf)) {
8001ef30:	50400015 	beqzl	v0,8001ef88 <print_trapframe+0xd8>
8001ef34:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:82
		kprintf("\r\nTrap in usermode: ");
8001ef38:	3c048002 	lui	a0,0x8002
8001ef3c:	0c00798a 	jal	8001e628 <kprintf>
8001ef40:	248444fc 	addiu	a0,a0,17660
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:86
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001ef44:	8e020008 	lw	v0,8(s0)
8001ef48:	7c422080 	ext	v0,v0,0x2,0x5
trapname():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:49
		"Breakpoint",
		"Reserved (illegal) instruction",
		"Coprocessor unusable",
		"Arithmetic overflow",
	};
	if (trapno <= 12)
8001ef4c:	2843000d 	slti	v1,v0,13
8001ef50:	50600015 	beqzl	v1,8001efa8 <print_trapframe+0xf8>
8001ef54:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:50
		return excnames[trapno];
8001ef58:	3c038002 	lui	v1,0x8002
8001ef5c:	24630918 	addiu	v1,v1,2328
8001ef60:	00021080 	sll	v0,v0,0x2
8001ef64:	00431021 	addu	v0,v0,v1
print_trapframe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:86
	if (!trap_in_kernel(tf)) {
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001ef68:	0c00798a 	jal	8001e628 <kprintf>
8001ef6c:	8c440000 	lw	a0,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:88
	kprintf("\n\r");
}
8001ef70:	8fbf0014 	lw	ra,20(sp)
8001ef74:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:87
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
	kprintf("\n\r");
8001ef78:	3c048002 	lui	a0,0x8002
8001ef7c:	24843ae8 	addiu	a0,a0,15080
8001ef80:	0800798a 	j	8001e628 <kprintf>
8001ef84:	27bd0018 	addiu	sp,sp,24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:84
	PRINT_HEX("\r\n Cause: ", tf->tf_cause);
	PRINT_HEX("\r\n EPC ", tf->tf_epc);
	if (!trap_in_kernel(tf)) {
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
8001ef88:	0c00798a 	jal	8001e628 <kprintf>
8001ef8c:	24844514 	addiu	a0,a0,17684
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:86
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001ef90:	8e020008 	lw	v0,8(s0)
8001ef94:	7c422080 	ext	v0,v0,0x2,0x5
trapname():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:49
		"Breakpoint",
		"Reserved (illegal) instruction",
		"Coprocessor unusable",
		"Arithmetic overflow",
	};
	if (trapno <= 12)
8001ef98:	2843000d 	slti	v1,v0,13
8001ef9c:	1460ffef 	bnez	v1,8001ef5c <print_trapframe+0xac>
8001efa0:	3c038002 	lui	v1,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:52
		return excnames[trapno];
	else
		return "Unknown";
8001efa4:	3c048002 	lui	a0,0x8002
print_trapframe():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:86
	if (!trap_in_kernel(tf)) {
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001efa8:	0c00798a 	jal	8001e628 <kprintf>
8001efac:	248444ac 	addiu	a0,a0,17580
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:88
	kprintf("\n\r");
}
8001efb0:	8fbf0014 	lw	ra,20(sp)
8001efb4:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:87
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
	kprintf("\n\r");
8001efb8:	3c048002 	lui	a0,0x8002
8001efbc:	24843ae8 	addiu	a0,a0,15080
8001efc0:	0800798a 	j	8001e628 <kprintf>
8001efc4:	27bd0018 	addiu	sp,sp,24

8001efc8 <handle_tlbmiss>:
handle_tlbmiss():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:189
		while (1) ;
	}
#endif
	//dump_tlb_all();
	static int entercnt = 0;
	entercnt++;
8001efc8:	3c028015 	lui	v0,0x8015
8001efcc:	8c47777c 	lw	a3,30588(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:193
	//kprintf("## enter handle_tlbmiss %d times\n\r", entercnt);

	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
8001efd0:	3c038015 	lui	v1,0x8015
8001efd4:	8c637768 	lw	v1,30568(v1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:180
/* Hint:
 * 

 */
static void handle_tlbmiss(struct trapframe *tf, int write, int perm)//YX )
{
8001efd8:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:189
		while (1) ;
	}
#endif
	//dump_tlb_all();
	static int entercnt = 0;
	entercnt++;
8001efdc:	24e70001 	addiu	a3,a3,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:180
/* Hint:
 * 

 */
static void handle_tlbmiss(struct trapframe *tf, int write, int perm)//YX )
{
8001efe0:	afb40020 	sw	s4,32(sp)
8001efe4:	afb3001c 	sw	s3,28(sp)
8001efe8:	afb20018 	sw	s2,24(sp)
8001efec:	afb00010 	sw	s0,16(sp)
8001eff0:	afbf0024 	sw	ra,36(sp)
8001eff4:	afb10014 	sw	s1,20(sp)
8001eff8:	00808021 	move	s0,a0
8001effc:	00a09021 	move	s2,a1
8001f000:	00c09821 	move	s3,a2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:189
		while (1) ;
	}
#endif
	//dump_tlb_all();
	static int entercnt = 0;
	entercnt++;
8001f004:	ac47777c 	sw	a3,30588(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:193
	//kprintf("## enter handle_tlbmiss %d times\n\r", entercnt);

	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
8001f008:	10600095 	beqz	v1,8001f260 <handle_tlbmiss+0x298>
8001f00c:	8c940004 	lw	s4,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:195
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
8001f010:	8c910000 	lw	s1,0(a0)
trap_in_kernel():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f014:	32940010 	andi	s4,s4,0x10
handle_tlbmiss():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:197
	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
	int ret = 0;
	pte_t *pte = get_pte(current_pgdir, tf->tf_vaddr, 0);
8001f018:	00602021 	move	a0,v1
8001f01c:	02202821 	move	a1,s1
8001f020:	00003021 	move	a2,zero
8001f024:	0c005cbe 	jal	800172f8 <get_pte>
8001f028:	2e940001 	sltiu	s4,s4,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:199
	//  )
	if (perm ||pte == NULL || ptep_invalid(pte) || (write && !ptep_u_write(pte))) {	//PTE miss, pgfault
8001f02c:	16600035 	bnez	s3,8001f104 <handle_tlbmiss+0x13c>
8001f030:	00000000 	nop
8001f034:	10400037 	beqz	v0,8001f114 <handle_tlbmiss+0x14c>
8001f038:	00002821 	move	a1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:337
//add by HHL
int ucore_in_interrupt()
{
	//panic("ucore_in_interrupt()");
	return 0;
}
8001f03c:	8c450000 	lw	a1,0(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:199
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
	int ret = 0;
	pte_t *pte = get_pte(current_pgdir, tf->tf_vaddr, 0);
	//  )
	if (perm ||pte == NULL || ptep_invalid(pte) || (write && !ptep_u_write(pte))) {	//PTE miss, pgfault
8001f040:	50a00034 	beqzl	a1,8001f114 <handle_tlbmiss+0x14c>
8001f044:	30a50001 	andi	a1,a1,0x1
8001f048:	16400054 	bnez	s2,8001f19c <handle_tlbmiss+0x1d4>
8001f04c:	30a40006 	andi	a0,a1,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:209
		//permission check in tlb miss
		ret = pgfault_handler(tf, badaddr, get_error_code(write, pte));
	} else {		//tlb miss only, reload it
		/* refill two slot */
		/* check permission */
		if (in_kernel) {
8001f050:	16800060 	bnez	s4,8001f1d4 <handle_tlbmiss+0x20c>
8001f054:	30a30004 	andi	v1,a1,0x4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:215
			tlb_refill(badaddr, pte);
			//kprintf("## refill K\n\r");
			//dump_tlb_all();
			return;
		} else {
			if (!ptep_u_read(pte)) {
8001f058:	1060005a 	beqz	v1,8001f1c4 <handle_tlbmiss+0x1fc>
8001f05c:	00a02021 	move	a0,a1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:219
				ret = -1;
				goto exit;
			}
			if (write && !ptep_u_write(pte)) {
8001f060:	12400004 	beqz	s2,8001f074 <handle_tlbmiss+0xac>
8001f064:	30a60006 	andi	a2,a1,0x6
8001f068:	24030006 	li	v1,6
8001f06c:	14c30055 	bne	a2,v1,8001f1c4 <handle_tlbmiss+0x1fc>
8001f070:	00000000 	nop
tlb_refill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:137
{
	//kprintf("tlb_re ok\n\r");
	
	if (!pte)
		return;
	if (badaddr & (1 << 12))
8001f074:	32231000 	andi	v1,s1,0x1000
8001f078:	14600075 	bnez	v1,8001f250 <handle_tlbmiss+0x288>
8001f07c:	00a03021 	move	a2,a1
8001f080:	8c470004 	lw	a3,4(v0)
8001f084:	00e03021 	move	a2,a3
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
		pte--;
	//kprintf("*pte=0x%08x\n\r",*pte);
	//kprintf("*pte+1=0x%08x\n\r",*(pte+1));
//#ifdef MACH_QEMU
	//kprintf("badaddr=0x%08x\n\r",badaddr);
	tlb_replace_random(0, badaddr & THUMIPS_TLB_ENTRYH_VPN2_MASK,
8001f088:	2403e000 	li	v1,-8192
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f08c:	30820001 	andi	v0,a0,0x1
tlb_refill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
8001f090:	02238824 	and	s1,s1,v1
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f094:	10400009 	beqz	v0,8001f0bc <handle_tlbmiss+0xf4>
8001f098:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f09c:	3c028000 	lui	v0,0x8000
8001f0a0:	00a21021 	addu	v0,a1,v0
8001f0a4:	00021302 	srl	v0,v0,0xc
8001f0a8:	00021180 	sll	v0,v0,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f0ac:	3443001b 	ori	v1,v0,0x1b
ptep_s_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f0b0:	30840002 	andi	a0,a0,0x2
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f0b4:	3442001f 	ori	v0,v0,0x1f
8001f0b8:	0044180b 	movn	v1,v0,a0
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f0bc:	30c40001 	andi	a0,a2,0x1
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f0c0:	10800009 	beqz	a0,8001f0e8 <handle_tlbmiss+0x120>
8001f0c4:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f0c8:	3c048000 	lui	a0,0x8000
8001f0cc:	00e42021 	addu	a0,a3,a0
8001f0d0:	00042302 	srl	a0,a0,0xc
8001f0d4:	00042180 	sll	a0,a0,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f0d8:	3482001b 	ori	v0,a0,0x1b
ptep_s_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f0dc:	30c60002 	andi	a2,a2,0x2
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f0e0:	3484001f 	ori	a0,a0,0x1f
8001f0e4:	0086100b 	movn	v0,a0,a2
tlb_replace_random():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:105
				      unsigned int low0, unsigned int low1)
{
	//kprintf("entryhi=0x%08x\n\r",hi);
	//kprintf("entrylo0=0x%08x\n\r",low0);
	//kprintf("entrylo1=0x%08x\n\r",low1);
	write_c0_entrylo0(low0);
8001f0e8:	40831000 	mtc0	v1,c0_entrylo0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:106
	write_c0_pagemask(pagemask);
8001f0ec:	40802800 	mtc0	zero,c0_pagemask
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:107
	write_c0_entrylo1(low1);
8001f0f0:	40821800 	mtc0	v0,c0_entrylo1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:108
	write_c0_entryhi(hi);
8001f0f4:	40915000 	mtc0	s1,c0_entryhi
tlb_write_random():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/asm/mipsregs.h:1310
		".set reorder");
}

static inline void tlb_write_random(void)
{
	__asm__ __volatile__(
8001f0f8:	42000006 	tlbwr
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f0fc:	08007c54 	j	8001f150 <handle_tlbmiss+0x188>
8001f100:	8fbf0024 	lw	ra,36(sp)
get_error_code():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:132
extern pde_t *current_pgdir;

static inline int get_error_code(int write, pte_t * pte)
{
	int r = 0;
	if (pte != NULL && ptep_present(pte))
8001f104:	10400003 	beqz	v0,8001f114 <handle_tlbmiss+0x14c>
8001f108:	00002821 	move	a1,zero
8001f10c:	8c450000 	lw	a1,0(v0)
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f110:	30a50001 	andi	a1,a1,0x1
pgfault_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:154
	extern struct mm_struct *check_mm_struct;
	if (check_mm_struct != NULL) {	//used for test check_swap
		//print_pgfault(tf);
	}
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
8001f114:	3c028015 	lui	v0,0x8015
8001f118:	8c4477b8 	lw	a0,30648(v0)
get_error_code():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:135
{
	int r = 0;
	if (pte != NULL && ptep_present(pte))
		r |= 0x01;
	if (write)
		r |= 0x02;
8001f11c:	34a20002 	ori	v0,a1,0x2
8001f120:	0052280b 	movn	a1,v0,s2
pgfault_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:154
	extern struct mm_struct *check_mm_struct;
	if (check_mm_struct != NULL) {	//used for test check_swap
		//print_pgfault(tf);
	}
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
8001f124:	10800022 	beqz	a0,8001f1b0 <handle_tlbmiss+0x1e8>
8001f128:	3c028015 	lui	v0,0x8015
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:155
		assert(current == idleproc);
8001f12c:	8c4377a4 	lw	v1,30628(v0)
8001f130:	3c028015 	lui	v0,0x8015
8001f134:	8c4277a8 	lw	v0,30632(v0)
8001f138:	54620051 	bnel	v1,v0,8001f280 <handle_tlbmiss+0x2b8>
8001f13c:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:165
			//print_pgfault(tf);
			panic("unhandled page fault.\n\r");
		}
		mm = current->mm;
	}			//kprintf("  (do_pgfault(%x,%d,%x))  ", mm, error_code, addr);
	return do_pgfault(mm, error_code, addr);
8001f140:	0c0050af 	jal	800142bc <do_pgfault>
8001f144:	02203021 	move	a2,s1
handle_tlbmiss():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:230
			return;
		}
	}

exit:
	if (ret) {
8001f148:	14400008 	bnez	v0,8001f16c <handle_tlbmiss+0x1a4>
8001f14c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f150:	8fb40020 	lw	s4,32(sp)
8001f154:	8fb3001c 	lw	s3,28(sp)
8001f158:	8fb20018 	lw	s2,24(sp)
8001f15c:	8fb10014 	lw	s1,20(sp)
8001f160:	8fb00010 	lw	s0,16(sp)
8001f164:	03e00008 	jr	ra
8001f168:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:231
		}
	}

exit:
	if (ret) {
		print_trapframe(tf);
8001f16c:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f170:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:232
		if (in_kernel) {
8001f174:	16800049 	bnez	s4,8001f29c <handle_tlbmiss+0x2d4>
8001f178:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f17c:	8fb40020 	lw	s4,32(sp)
8001f180:	8fb3001c 	lw	s3,28(sp)
8001f184:	8fb20018 	lw	s2,24(sp)
8001f188:	8fb10014 	lw	s1,20(sp)
8001f18c:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:235
	if (ret) {
		print_trapframe(tf);
		if (in_kernel) {
			panic("unhandled pgfault");
		} else {
			do_exit(-E_KILLED);
8001f190:	2404ffdb 	li	a0,-37
8001f194:	08003d34 	j	8000f4d0 <do_exit>
8001f198:	27bd0028 	addiu	sp,sp,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:199
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
	int ret = 0;
	pte_t *pte = get_pte(current_pgdir, tf->tf_vaddr, 0);
	//  )
	if (perm ||pte == NULL || ptep_invalid(pte) || (write && !ptep_u_write(pte))) {	//PTE miss, pgfault
8001f19c:	24030006 	li	v1,6
8001f1a0:	5483ffdc 	bnel	a0,v1,8001f114 <handle_tlbmiss+0x14c>
8001f1a4:	30a50001 	andi	a1,a1,0x1
8001f1a8:	08007c14 	j	8001f050 <handle_tlbmiss+0x88>
8001f1ac:	00000000 	nop
pgfault_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:158
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
		assert(current == idleproc);
		mm = check_mm_struct;
	} else {
		if (current == NULL) {
8001f1b0:	8c4277a4 	lw	v0,30628(v0)
8001f1b4:	5040003f 	beqzl	v0,8001f2b4 <handle_tlbmiss+0x2ec>
8001f1b8:	3c048002 	lui	a0,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:163
			//print_trapframe(tf);
			//print_pgfault(tf);
			panic("unhandled page fault.\n\r");
		}
		mm = current->mm;
8001f1bc:	08007c50 	j	8001f140 <handle_tlbmiss+0x178>
8001f1c0:	8c440020 	lw	a0,32(v0)
handle_tlbmiss():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:231
		}
	}

exit:
	if (ret) {
		print_trapframe(tf);
8001f1c4:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f1c8:	02002021 	move	a0,s0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f1cc:	08007c5f 	j	8001f17c <handle_tlbmiss+0x1b4>
8001f1d0:	8fbf0024 	lw	ra,36(sp)
tlb_refill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:137
{
	//kprintf("tlb_re ok\n\r");
	
	if (!pte)
		return;
	if (badaddr & (1 << 12))
8001f1d4:	32231000 	andi	v1,s1,0x1000
8001f1d8:	1460001b 	bnez	v1,8001f248 <handle_tlbmiss+0x280>
8001f1dc:	00a02021 	move	a0,a1
8001f1e0:	8c440004 	lw	a0,4(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
		pte--;
	//kprintf("*pte=0x%08x\n\r",*pte);
	//kprintf("*pte+1=0x%08x\n\r",*(pte+1));
//#ifdef MACH_QEMU
	//kprintf("badaddr=0x%08x\n\r",badaddr);
	tlb_replace_random(0, badaddr & THUMIPS_TLB_ENTRYH_VPN2_MASK,
8001f1e4:	2403e000 	li	v1,-8192
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
8001f1e8:	30a20001 	andi	v0,a1,0x1
tlb_refill():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
8001f1ec:	02238824 	and	s1,s1,v1
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f1f0:	10400009 	beqz	v0,8001f218 <handle_tlbmiss+0x250>
8001f1f4:	00001821 	move	v1,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f1f8:	3c028000 	lui	v0,0x8000
8001f1fc:	00a21021 	addu	v0,a1,v0
8001f200:	00021302 	srl	v0,v0,0xc
8001f204:	00021180 	sll	v0,v0,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f208:	3443001b 	ori	v1,v0,0x1b
ptep_s_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f20c:	30a50002 	andi	a1,a1,0x2
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f210:	3442001f 	ori	v0,v0,0x1f
8001f214:	0045180b 	movn	v1,v0,a1
ptep_present():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f218:	30850001 	andi	a1,a0,0x1
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f21c:	10a0ffb2 	beqz	a1,8001f0e8 <handle_tlbmiss+0x120>
8001f220:	00001021 	move	v0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f224:	3c058000 	lui	a1,0x8000
8001f228:	00852821 	addu	a1,a0,a1
8001f22c:	00052b02 	srl	a1,a1,0xc
8001f230:	00052980 	sll	a1,a1,0x6
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f234:	34a2001b 	ori	v0,a1,0x1b
ptep_s_write():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f238:	30840002 	andi	a0,a0,0x2
pte2tlblow():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f23c:	34a5001f 	ori	a1,a1,0x1f
8001f240:	08007c3a 	j	8001f0e8 <handle_tlbmiss+0x120>
8001f244:	00a4100b 	movn	v0,a1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:137
{
	//kprintf("tlb_re ok\n\r");
	
	if (!pte)
		return;
	if (badaddr & (1 << 12))
8001f248:	08007c79 	j	8001f1e4 <handle_tlbmiss+0x21c>
8001f24c:	8c45fffc 	lw	a1,-4(v0)
tlb_refill():
8001f250:	8c45fffc 	lw	a1,-4(v0)
8001f254:	00c03821 	move	a3,a2
8001f258:	08007c22 	j	8001f088 <handle_tlbmiss+0xc0>
8001f25c:	00a02021 	move	a0,a1
handle_tlbmiss():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:193
	static int entercnt = 0;
	entercnt++;
	//kprintf("## enter handle_tlbmiss %d times\n\r", entercnt);

	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
8001f260:	3c048002 	lui	a0,0x8002
8001f264:	3c068002 	lui	a2,0x8002
8001f268:	3c078002 	lui	a3,0x8002
8001f26c:	24844528 	addiu	a0,a0,17704
8001f270:	240500c1 	li	a1,193
8001f274:	24c609b0 	addiu	a2,a2,2480
8001f278:	0c006afd 	jal	8001abf4 <__panic>
8001f27c:	24e74530 	addiu	a3,a3,17712
pgfault_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:155
	if (check_mm_struct != NULL) {	//used for test check_swap
		//print_pgfault(tf);
	}
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
		assert(current == idleproc);
8001f280:	3c068002 	lui	a2,0x8002
8001f284:	3c078002 	lui	a3,0x8002
8001f288:	24844528 	addiu	a0,a0,17704
8001f28c:	2405009b 	li	a1,155
8001f290:	24c609b0 	addiu	a2,a2,2480
8001f294:	0c006afd 	jal	8001abf4 <__panic>
8001f298:	24e74548 	addiu	a3,a3,17736
handle_tlbmiss():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:233

exit:
	if (ret) {
		print_trapframe(tf);
		if (in_kernel) {
			panic("unhandled pgfault");
8001f29c:	3c048002 	lui	a0,0x8002
8001f2a0:	3c068002 	lui	a2,0x8002
8001f2a4:	24844528 	addiu	a0,a0,17704
8001f2a8:	240500e9 	li	a1,233
8001f2ac:	0c006afd 	jal	8001abf4 <__panic>
8001f2b0:	24c64574 	addiu	a2,a2,17780
pgfault_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:161
		mm = check_mm_struct;
	} else {
		if (current == NULL) {
			//print_trapframe(tf);
			//print_pgfault(tf);
			panic("unhandled page fault.\n\r");
8001f2b4:	3c068002 	lui	a2,0x8002
8001f2b8:	24844528 	addiu	a0,a0,17704
8001f2bc:	240500a1 	li	a1,161
8001f2c0:	0c006afd 	jal	8001abf4 <__panic>
8001f2c4:	24c6455c 	addiu	a2,a2,17756

8001f2c8 <trap_dispatch>:
trap_dispatch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:244
}

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
8001f2c8:	8c820008 	lw	v0,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:242
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
{
8001f2cc:	27bdffd0 	addiu	sp,sp,-48
8001f2d0:	afb10018 	sw	s1,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:244
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
8001f2d4:	7c432080 	ext	v1,v0,0x2,0x5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:242
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
{
8001f2d8:	00808821 	move	s1,a0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:245
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f2dc:	2c64000b 	sltiu	a0,v1,11
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:242
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
{
8001f2e0:	afbf002c 	sw	ra,44(sp)
8001f2e4:	afb50028 	sw	s5,40(sp)
8001f2e8:	afb40024 	sw	s4,36(sp)
8001f2ec:	afb30020 	sw	s3,32(sp)
8001f2f0:	afb2001c 	sw	s2,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:245
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f2f4:	14800009 	bnez	a0,8001f31c <trap_dispatch+0x54>
8001f2f8:	afb00014 	sw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:285
			print_trapframe(tf);
			do_exit(-E_KILLED);
		}
		break;
	default:
		print_trapframe(tf);
8001f2fc:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f300:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:286
		panic("Unhandled Exception");
8001f304:	3c048002 	lui	a0,0x8002
8001f308:	3c068002 	lui	a2,0x8002
8001f30c:	24844528 	addiu	a0,a0,17704
8001f310:	2405011e 	li	a1,286
8001f314:	0c006afd 	jal	8001abf4 <__panic>
8001f318:	24c645e8 	addiu	a2,a2,17896
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:245

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f31c:	3c048002 	lui	a0,0x8002
8001f320:	00031880 	sll	v1,v1,0x2
8001f324:	248408ec 	addiu	a0,a0,2284
8001f328:	00831821 	addu	v1,a0,v1
8001f32c:	8c630000 	lw	v1,0(v1)
8001f330:	00600008 	jr	v1
8001f334:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:259
		break;
	case EX_TLBS:
		handle_tlbmiss(tf, 1, 0);
		break;
	case EX_RI:
		print_trapframe(tf);
8001f338:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f33c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:260
		uint32_t *addr = (uint32_t *) (tf->tf_epc);
8001f340:	8e300090 	lw	s0,144(s1)
8001f344:	3c138002 	lui	s3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:262
		for (i = 0; i < 10; ++i, addr++)
			kprintf("[%x:%x]\n\r", addr, *addr);
8001f348:	267345a4 	addiu	s3,s3,17828
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:241
		}
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
8001f34c:	26120028 	addiu	s2,s0,40
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:262
		break;
	case EX_RI:
		print_trapframe(tf);
		uint32_t *addr = (uint32_t *) (tf->tf_epc);
		for (i = 0; i < 10; ++i, addr++)
			kprintf("[%x:%x]\n\r", addr, *addr);
8001f350:	8e060000 	lw	a2,0(s0)
8001f354:	02002821 	move	a1,s0
8001f358:	02602021 	move	a0,s3
8001f35c:	0c00798a 	jal	8001e628 <kprintf>
8001f360:	26100004 	addiu	s0,s0,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:261
		handle_tlbmiss(tf, 1, 0);
		break;
	case EX_RI:
		print_trapframe(tf);
		uint32_t *addr = (uint32_t *) (tf->tf_epc);
		for (i = 0; i < 10; ++i, addr++)
8001f364:	5612fffb 	bnel	s0,s2,8001f354 <trap_dispatch+0x8c>
8001f368:	8e060000 	lw	a2,0(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:264
			kprintf("[%x:%x]\n\r", addr, *addr);

		panic("hey man! Do NOT use that insn! insn=%x",
8001f36c:	8e220090 	lw	v0,144(s1)
8001f370:	3c048002 	lui	a0,0x8002
8001f374:	3c068002 	lui	a2,0x8002
8001f378:	8c470000 	lw	a3,0(v0)
8001f37c:	24844528 	addiu	a0,a0,17704
8001f380:	24050109 	li	a1,265
8001f384:	0c006afd 	jal	8001abf4 <__panic>
8001f388:	24c645b0 	addiu	a2,a2,17840
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:245

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f38c:	24100001 	li	s0,1
interrupt_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f390:	24120001 	li	s2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:241
		}
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
8001f394:	26030007 	addiu	v1,s0,7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f398:	00721804 	sllv	v1,s2,v1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:107
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
				break;
			case COM1_IRQ:
				kprintf("COM1\n\r");
8001f39c:	3c158002 	lui	s5,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f3a0:	00621824 	and	v1,v1,v0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:97
{
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
8001f3a4:	24130008 	li	s3,8
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:99
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
			switch (i) {
8001f3a8:	24140004 	li	s4,4
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:107
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
				break;
			case COM1_IRQ:
				kprintf("COM1\n\r");
8001f3ac:	26b54588 	addiu	s5,s5,17800
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f3b0:	1060000c 	beqz	v1,8001f3e4 <trap_dispatch+0x11c>
8001f3b4:	2604ffff 	addiu	a0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:99
			switch (i) {
8001f3b8:	14800055 	bnez	a0,8001f510 <trap_dispatch+0x248>
8001f3bc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:104
#ifdef DEBUG_INT
                                kprintf("INT - No %d\r\n", i);
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
8001f3c0:	0c006b37 	jal	8001acdc <clock_int_handler>
8001f3c4:	00002021 	move	a0,zero
trap_dispatch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f3c8:	8e220008 	lw	v0,8(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:245

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f3cc:	26100001 	addiu	s0,s0,1
interrupt_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:241
		}
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
8001f3d0:	26030007 	addiu	v1,s0,7
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f3d4:	00721804 	sllv	v1,s2,v1
8001f3d8:	00621824 	and	v1,v1,v0
8001f3dc:	1460fff6 	bnez	v1,8001f3b8 <trap_dispatch+0xf0>
8001f3e0:	2604ffff 	addiu	a0,s0,-1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:97
{
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
8001f3e4:	1613fffa 	bne	s0,s3,8001f3d0 <trap_dispatch+0x108>
8001f3e8:	26100001 	addiu	s0,s0,1
trap_dispatch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f3ec:	8fbf002c 	lw	ra,44(sp)
8001f3f0:	8fb50028 	lw	s5,40(sp)
8001f3f4:	8fb40024 	lw	s4,36(sp)
8001f3f8:	8fb30020 	lw	s3,32(sp)
8001f3fc:	8fb2001c 	lw	s2,28(sp)
8001f400:	8fb10018 	lw	s1,24(sp)
8001f404:	8fb00014 	lw	s0,20(sp)
8001f408:	03e00008 	jr	ra
8001f40c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:250
	switch (code) {
	case EX_IRQ:
		interrupt_handler(tf);
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
8001f410:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f414:	8fbf002c 	lw	ra,44(sp)
8001f418:	8fb50028 	lw	s5,40(sp)
8001f41c:	8fb40024 	lw	s4,36(sp)
8001f420:	8fb30020 	lw	s3,32(sp)
8001f424:	8fb2001c 	lw	s2,28(sp)
8001f428:	8fb10018 	lw	s1,24(sp)
8001f42c:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:250
	switch (code) {
	case EX_IRQ:
		interrupt_handler(tf);
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
8001f430:	24050001 	li	a1,1
8001f434:	24060001 	li	a2,1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:253
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
8001f438:	08007bf2 	j	8001efc8 <handle_tlbmiss>
8001f43c:	27bd0030 	addiu	sp,sp,48
8001f440:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f444:	8fbf002c 	lw	ra,44(sp)
8001f448:	8fb50028 	lw	s5,40(sp)
8001f44c:	8fb40024 	lw	s4,36(sp)
8001f450:	8fb30020 	lw	s3,32(sp)
8001f454:	8fb2001c 	lw	s2,28(sp)
8001f458:	8fb10018 	lw	s1,24(sp)
8001f45c:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:253
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
8001f460:	00002821 	move	a1,zero
8001f464:	00003021 	move	a2,zero
8001f468:	08007bf2 	j	8001efc8 <handle_tlbmiss>
8001f46c:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:256
		break;
	case EX_TLBS:
		handle_tlbmiss(tf, 1, 0);
8001f470:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f474:	8fbf002c 	lw	ra,44(sp)
8001f478:	8fb50028 	lw	s5,40(sp)
8001f47c:	8fb40024 	lw	s4,36(sp)
8001f480:	8fb30020 	lw	s3,32(sp)
8001f484:	8fb2001c 	lw	s2,28(sp)
8001f488:	8fb10018 	lw	s1,24(sp)
8001f48c:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:256
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
		break;
	case EX_TLBS:
		handle_tlbmiss(tf, 1, 0);
8001f490:	24050001 	li	a1,1
8001f494:	00003021 	move	a2,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:253
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
8001f498:	08007bf2 	j	8001efc8 <handle_tlbmiss>
8001f49c:	27bd0030 	addiu	sp,sp,48
trap_in_kernel():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f4a0:	8e220004 	lw	v0,4(s1)
8001f4a4:	30420010 	andi	v0,v0,0x10
trap_dispatch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:276
		break;
		/* alignment error or access kernel
		 * address space in user mode */
	case EX_ADEL:
	case EX_ADES:
		if (trap_in_kernel(tf)) {
8001f4a8:	10400029 	beqz	v0,8001f550 <trap_dispatch+0x288>
8001f4ac:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:280
			print_trapframe(tf);
			panic("Alignment Error");
		} else {
			print_trapframe(tf);
8001f4b0:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f4b4:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f4b8:	8fbf002c 	lw	ra,44(sp)
8001f4bc:	8fb50028 	lw	s5,40(sp)
8001f4c0:	8fb40024 	lw	s4,36(sp)
8001f4c4:	8fb30020 	lw	s3,32(sp)
8001f4c8:	8fb2001c 	lw	s2,28(sp)
8001f4cc:	8fb10018 	lw	s1,24(sp)
8001f4d0:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:281
		if (trap_in_kernel(tf)) {
			print_trapframe(tf);
			panic("Alignment Error");
		} else {
			print_trapframe(tf);
			do_exit(-E_KILLED);
8001f4d4:	2404ffdb 	li	a0,-37
8001f4d8:	08003d34 	j	8000f4d0 <do_exit>
8001f4dc:	27bd0030 	addiu	sp,sp,48
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:269
		panic("hey man! Do NOT use that insn! insn=%x",
		      *(uint32_t *) (tf->tf_epc));
		break;
	case EX_SYS:
		//print_trapframe(tf);
		tf->tf_epc += 4;
8001f4e0:	8e220090 	lw	v0,144(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f4e4:	8fbf002c 	lw	ra,44(sp)
8001f4e8:	8fb50028 	lw	s5,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:269
		panic("hey man! Do NOT use that insn! insn=%x",
		      *(uint32_t *) (tf->tf_epc));
		break;
	case EX_SYS:
		//print_trapframe(tf);
		tf->tf_epc += 4;
8001f4ec:	24420004 	addiu	v0,v0,4
8001f4f0:	ae220090 	sw	v0,144(s1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f4f4:	8fb40024 	lw	s4,36(sp)
8001f4f8:	8fb30020 	lw	s3,32(sp)
8001f4fc:	8fb2001c 	lw	s2,28(sp)
8001f500:	8fb10018 	lw	s1,24(sp)
8001f504:	8fb00014 	lw	s0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:270
		      *(uint32_t *) (tf->tf_epc));
		break;
	case EX_SYS:
		//print_trapframe(tf);
		tf->tf_epc += 4;
		syscall();
8001f508:	08007b1e 	j	8001ec78 <syscall>
8001f50c:	27bd0030 	addiu	sp,sp,48
interrupt_handler():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:99
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
			switch (i) {
8001f510:	10940009 	beq	a0,s4,8001f538 <trap_dispatch+0x270>
8001f514:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:119
                                pic_disable(KEYBOARD_IRQ);
                                keyboard_int_handler();
                                pic_enable(KEYBOARD_IRQ);
                                break;*/
			default:
				print_trapframe(tf);
8001f518:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f51c:	02202021 	move	a0,s1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:120
				panic("Unknown interrupt!");
8001f520:	3c048002 	lui	a0,0x8002
8001f524:	3c068002 	lui	a2,0x8002
8001f528:	24844528 	addiu	a0,a0,17704
8001f52c:	24050078 	li	a1,120
8001f530:	0c006afd 	jal	8001abf4 <__panic>
8001f534:	24c64590 	addiu	a2,a2,17808
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:107
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
				break;
			case COM1_IRQ:
				kprintf("COM1\n\r");
8001f538:	0c00798a 	jal	8001e628 <kprintf>
8001f53c:	02a02021 	move	a0,s5
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:108
				serial_int_handler(NULL);
8001f540:	0c006c5b 	jal	8001b16c <serial_int_handler>
8001f544:	00002021 	move	a0,zero
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f548:	08007cf3 	j	8001f3cc <trap_dispatch+0x104>
8001f54c:	8e220008 	lw	v0,8(s1)
trap_dispatch():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:277
		/* alignment error or access kernel
		 * address space in user mode */
	case EX_ADEL:
	case EX_ADES:
		if (trap_in_kernel(tf)) {
			print_trapframe(tf);
8001f550:	0c007bac 	jal	8001eeb0 <print_trapframe>
8001f554:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:278
			panic("Alignment Error");
8001f558:	3c048002 	lui	a0,0x8002
8001f55c:	3c068002 	lui	a2,0x8002
8001f560:	24844528 	addiu	a0,a0,17704
8001f564:	24050116 	li	a1,278
8001f568:	0c006afd 	jal	8001abf4 <__panic>
8001f56c:	24c645d8 	addiu	a2,a2,17880

8001f570 <mips_trap>:
mips_trap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:297
 * General trap (exception) handling function for mips.
 * This is called by the assembly-language exception handler once
 * the trapframe has been set up.
 */
void mips_trap(struct trapframe *tf)
{
8001f570:	27bdffe0 	addiu	sp,sp,-32
8001f574:	afb00010 	sw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:308
	} else
		flag = 0;

	// dispatch based on what type of trap occurred
	// used for previous projects
	if (current == NULL) {
8001f578:	3c108015 	lui	s0,0x8015
8001f57c:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:297
 * General trap (exception) handling function for mips.
 * This is called by the assembly-language exception handler once
 * the trapframe has been set up.
 */
void mips_trap(struct trapframe *tf)
{
8001f580:	afbf001c 	sw	ra,28(sp)
8001f584:	afb20018 	sw	s2,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:308
	} else
		flag = 0;

	// dispatch based on what type of trap occurred
	// used for previous projects
	if (current == NULL) {
8001f588:	10400023 	beqz	v0,8001f618 <mips_trap+0xa8>
8001f58c:	afb10014 	sw	s1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:312
		trap_dispatch(tf);
	} else {
		// keep a trapframe chain in stack
		struct trapframe *otf = current->tf;
8001f590:	8c520054 	lw	s2,84(v0)
trap_in_kernel():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f594:	8c910004 	lw	s1,4(a0)
mips_trap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:317
		struct trapframe *otf = current->tf;
		current->tf = tf;

		bool in_kernel = trap_in_kernel(tf);

		trap_dispatch(tf);
8001f598:	0c007cb2 	jal	8001f2c8 <trap_dispatch>
8001f59c:	ac440054 	sw	a0,84(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:319

		current->tf = otf;
8001f5a0:	8e0277a4 	lw	v0,30628(s0)
trap_in_kernel():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f5a4:	32310010 	andi	s1,s1,0x10
mips_trap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:320
		bool in_kernel = trap_in_kernel(tf);

		trap_dispatch(tf);

		current->tf = otf;
		if (!in_kernel) {
8001f5a8:	12200008 	beqz	s1,8001f5cc <mips_trap+0x5c>
8001f5ac:	ac520054 	sw	s2,84(v0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:321
			if (current->flags & PF_EXITING) {
8001f5b0:	8c43005c 	lw	v1,92(v0)
8001f5b4:	30630001 	andi	v1,v1,0x1
8001f5b8:	1460000f 	bnez	v1,8001f5f8 <mips_trap+0x88>
8001f5bc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:324
				do_exit(-E_KILLED);
			}
			if (current->need_resched) {
8001f5c0:	8c420018 	lw	v0,24(v0)
8001f5c4:	14400007 	bnez	v0,8001f5e4 <mips_trap+0x74>
8001f5c8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:330
				schedule();
			}
		}
	}
//  if (flag) kprintf(" [end: epc=%x cause=%d syscall=%d pid=%d] ", tf->tf_epc, (tf->tf_cause >> 2) & 0x1F, (unsigned)(tf->tf_regs.reg_r[MIPS_REG_V0]), current?current->pid:-1);
}
8001f5cc:	8fbf001c 	lw	ra,28(sp)
8001f5d0:	8fb20018 	lw	s2,24(sp)
8001f5d4:	8fb10014 	lw	s1,20(sp)
8001f5d8:	8fb00010 	lw	s0,16(sp)
8001f5dc:	03e00008 	jr	ra
8001f5e0:	27bd0020 	addiu	sp,sp,32
8001f5e4:	8fb20018 	lw	s2,24(sp)
8001f5e8:	8fb10014 	lw	s1,20(sp)
8001f5ec:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:325
		if (!in_kernel) {
			if (current->flags & PF_EXITING) {
				do_exit(-E_KILLED);
			}
			if (current->need_resched) {
				schedule();
8001f5f0:	0800059e 	j	80001678 <schedule>
8001f5f4:	27bd0020 	addiu	sp,sp,32
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:322
		trap_dispatch(tf);

		current->tf = otf;
		if (!in_kernel) {
			if (current->flags & PF_EXITING) {
				do_exit(-E_KILLED);
8001f5f8:	0c003d34 	jal	8000f4d0 <do_exit>
8001f5fc:	2404ffdb 	li	a0,-37
8001f600:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:324
			}
			if (current->need_resched) {
8001f604:	8c420018 	lw	v0,24(v0)
8001f608:	1040fff1 	beqz	v0,8001f5d0 <mips_trap+0x60>
8001f60c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:330
				schedule();
			}
		}
	}
//  if (flag) kprintf(" [end: epc=%x cause=%d syscall=%d pid=%d] ", tf->tf_epc, (tf->tf_cause >> 2) & 0x1F, (unsigned)(tf->tf_regs.reg_r[MIPS_REG_V0]), current?current->pid:-1);
}
8001f610:	08007d7a 	j	8001f5e8 <mips_trap+0x78>
8001f614:	8fb20018 	lw	s2,24(sp)
8001f618:	8fbf001c 	lw	ra,28(sp)
8001f61c:	8fb20018 	lw	s2,24(sp)
8001f620:	8fb10014 	lw	s1,20(sp)
8001f624:	8fb00010 	lw	s0,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:309
		flag = 0;

	// dispatch based on what type of trap occurred
	// used for previous projects
	if (current == NULL) {
		trap_dispatch(tf);
8001f628:	08007cb2 	j	8001f2c8 <trap_dispatch>
8001f62c:	27bd0020 	addiu	sp,sp,32

8001f630 <ucore_in_interrupt>:
ucore_in_interrupt():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/trap.c:337
//add by HHL
int ucore_in_interrupt()
{
	//panic("ucore_in_interrupt()");
	return 0;
}
8001f630:	03e00008 	jr	ra
8001f634:	00001021 	move	v0,zero

8001f638 <ramExcHandle_tlbmiss>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:20
   .section .text
# +0x000: R4000 tlbmiss vector (user)
.global ramExcHandle_tlbmiss
ramExcHandle_tlbmiss:
  #b ramExcHandle_tlbmiss
  b ramExcHandle_general 
8001f638:	10000003 00000000                       ........

8001f640 <ramReserved>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:25
  nop

.global ramReserved
ramReserved:
  b ramReserved
8001f640:	1000ffff 00000000                       ........

8001f648 <ramExcHandle_general>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:33
# +0x180: R4000 general vector
  .global ramExcHandle_general
  .type ramExcHandle_general, @function
  .ent ramExcHandle_general
ramExcHandle_general:
   move k1, sp			/* Save previous stack pointer in k1 */
8001f648:	03a0d821 	move	k1,sp
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:34
   mfc0 k0, CP0_STATUS /* Get status register */
8001f64c:	401a6000 	mfc0	k0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:35
   andi k0, k0, KSU_USER/* Check the we-were-in-user-mode bit */
8001f650:	335a0010 	andi	k0,k0,0x10
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:36
   beq	k0, $0, 1f		/* If clear, from kernel, already have stack */
8001f654:	13400007 	beqz	k0,8001f674 <ramExcHandle_general+0x2c>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:37
   nop				/* delay slot */
8001f658:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:41
   
   /* TODO */
   /* Coming from user mode - load kernel stack into sp */
   la k0, pls_current /* get address of "curkstack" */
8001f65c:	3c1a8015 	lui	k0,0x8015
8001f660:	275a77a4 	addiu	k0,k0,30628
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:42
   lw k0, 0(k0)
8001f664:	8f5a0000 	lw	k0,0(k0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:43
   lw k0, 20(k0)
8001f668:	8f5a0014 	lw	k0,20(k0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:45

   addiu sp, k0, KSTACKSIZE
8001f66c:	275d2000 	addiu	sp,k0,8192
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:47
   #lw sp, 72(k0)			/* get its value */
   nop				/* delay slot for the load */
8001f670:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:50
  
1:
   mfc0 k0, CP0_CAUSE /* Now, load the exception cause. */
8001f674:	401a6800 	mfc0	k0,c0_cause
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:51
   j common_exception		/* Skip to common code */
8001f678:	08007da0 	j	8001f680 <common_exception>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:52
   nop				/* delay slot */
8001f67c:	00000000 	nop

8001f680 <common_exception>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:81
   
   /*
    * Allocate stack space for 37 words to hold the trap frame,
    * plus four more words for a minimal argument block.
    */
   addiu sp, sp, -164
8001f680:	27bdff5c 	addiu	sp,sp,-164
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:109
    *        handle the real value of ra afterwards.
    *    (4) Because gdb will think we're saving k0 and k1, we need to
    *        leave slots for them in the trap frame, even though the
    *        stuff we save there is useless.
    */
   sw ra, 160(sp)	/* dummy for gdb */
8001f684:	afbf00a0 	sw	ra,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:110
   sw s8, 156(sp)	/* save s8 */
8001f688:	afbe009c 	sw	s8,156(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:111
   sw sp, 152(sp)	/* dummy for gdb */
8001f68c:	afbd0098 	sw	sp,152(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:112
   sw gp, 148(sp)	/* save gp */
8001f690:	afbc0094 	sw	gp,148(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:113
   sw k1, 144(sp)	/* dummy for gdb */
8001f694:	afbb0090 	sw	k1,144(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:114
   sw k0, 140(sp)	/* dummy for gdb */
8001f698:	afba008c 	sw	k0,140(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:116

   sw k1, 152(sp)	/* real saved sp */
8001f69c:	afbb0098 	sw	k1,152(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:117
   nop			/* delay slot for store */
8001f6a0:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:119
   
   mfc0 k1, CP0_EPC /* Copr.0 reg 13 == PC for exception */
8001f6a4:	401b7000 	mfc0	k1,c0_epc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:120
   sw k1, 160(sp)	/* real saved PC */
8001f6a8:	afbb00a0 	sw	k1,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:122

   sw t9, 136(sp)
8001f6ac:	afb90088 	sw	t9,136(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:123
   sw t8, 132(sp)
8001f6b0:	afb80084 	sw	t8,132(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:124
   sw s7, 128(sp)
8001f6b4:	afb70080 	sw	s7,128(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:125
   sw s6, 124(sp)
8001f6b8:	afb6007c 	sw	s6,124(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:126
   sw s5, 120(sp)
8001f6bc:	afb50078 	sw	s5,120(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:127
   sw s4, 116(sp)
8001f6c0:	afb40074 	sw	s4,116(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:128
   sw s3, 112(sp)
8001f6c4:	afb30070 	sw	s3,112(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:129
   sw s2, 108(sp)
8001f6c8:	afb2006c 	sw	s2,108(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:130
   sw s1, 104(sp)
8001f6cc:	afb10068 	sw	s1,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:131
   sw s0, 100(sp)
8001f6d0:	afb00064 	sw	s0,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:132
   sw t7, 96(sp)
8001f6d4:	afaf0060 	sw	t7,96(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:133
   sw t6, 92(sp)
8001f6d8:	afae005c 	sw	t6,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:134
   sw t5, 88(sp)
8001f6dc:	afad0058 	sw	t5,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:135
   sw t4, 84(sp)
8001f6e0:	afac0054 	sw	t4,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:136
   sw t3, 80(sp)
8001f6e4:	afab0050 	sw	t3,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:137
   sw t2, 76(sp)
8001f6e8:	afaa004c 	sw	t2,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:138
   sw t1, 72(sp)
8001f6ec:	afa90048 	sw	t1,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:139
   sw t0, 68(sp)
8001f6f0:	afa80044 	sw	t0,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:140
   sw a3, 64(sp)
8001f6f4:	afa70040 	sw	a3,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:141
   sw a2, 60(sp)
8001f6f8:	afa6003c 	sw	a2,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:142
   sw a1, 56(sp)
8001f6fc:	afa50038 	sw	a1,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:143
   sw a0, 52(sp)
8001f700:	afa40034 	sw	a0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:144
   sw v1, 48(sp)
8001f704:	afa30030 	sw	v1,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:145
   sw v0, 44(sp)
8001f708:	afa2002c 	sw	v0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:146
   sw AT, 40(sp)
8001f70c:	afa10028 	sw	at,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:148

   sw ra, 36(sp)
8001f710:	afbf0024 	sw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:153

   /*
    * Save special registers.
    */
   mfhi t0
8001f714:	00004010 	mfhi	t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:154
   mflo t1
8001f718:	00004812 	mflo	t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:155
   sw t0, 32(sp)
8001f71c:	afa80020 	sw	t0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:156
   sw t1, 28(sp)
8001f720:	afa9001c 	sw	t1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:162

   /*
    * Save remaining exception context information.
    */

   sw   k0, 24(sp)               /* k0 was loaded with cause earlier */
8001f724:	afba0018 	sw	k0,24(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:163
   mfc0 t1, CP0_STATUS /* Copr.0 reg 11 == status */
8001f728:	40096000 	mfc0	t1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:164
   sw   t1, 20(sp)
8001f72c:	afa90014 	sw	t1,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:167


   mfc0 t2, CP0_BADVADDR /* Copr.0 reg 8 == faulting vaddr */
8001f730:	400a4000 	mfc0	t2,c0_badvaddr
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:168
   sw   t2, 16(sp)
8001f734:	afaa0010 	sw	t2,16(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:173

   /*
    * Pretend to save $0 for gdb's benefit.
    */
   sw $0, 12(sp)
8001f738:	afa0000c 	sw	zero,12(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:176

  # support nested interrupt
  la   t0, ~(ST0_KSU|ST0_EXL|ST0_IE)
8001f73c:	2408ffe4 	li	t0,-28
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:177
  and t1, t1, t0
8001f740:	01284824 	and	t1,t1,t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:178
  mtc0 t1, CP0_STATUS /* Copr.0 reg 11 == status */
8001f744:	40896000 	mtc0	t1,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:184

   /*
    * Prepare to call mips_trap(struct trapframe *)
    */

   addiu a0, sp, 16             /* set argument */
8001f748:	27a40010 	addiu	a0,sp,16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:185
   la  t9, mips_trap
8001f74c:	3c198002 	lui	t9,0x8002
8001f750:	2739f570 	addiu	t9,t9,-2704
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:186
   jal t9 /* call it */
8001f754:	0320f809 	jalr	t9
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:187
   nop				/* delay slot */
8001f758:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:190

   /* Something must be here or gdb doesn't find the stack frame. */
   nop
8001f75c:	00000000 	nop

8001f760 <exception_return>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:199
    * Interrupts should be off.
    */
exception_return:

   /*     16(sp)		   no need to restore tf_vaddr */
   lw t0, 20(sp)		/* load status register value into t0 */
8001f760:	8fa80014 	lw	t0,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:200
   ori t0, t0, ST0_EXL
8001f764:	35080002 	ori	t0,t0,0x2
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:201
   nop				/* load delay slot */
8001f768:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:202
   mtc0 t0, CP0_STATUS /* store it back to coprocessor 0 */
8001f76c:	40886000 	mtc0	t0,c0_status
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:206
   /*     24(sp)		   no need to restore tf_cause */

   /* restore special registers */
   lw t1, 28(sp)
8001f770:	8fa9001c 	lw	t1,28(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:207
   lw t0, 32(sp)
8001f774:	8fa80020 	lw	t0,32(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:208
   mtlo t1
8001f778:	01200013 	mtlo	t1
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:209
   mthi t0
8001f77c:	01000011 	mthi	t0
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:212

   /* load the general registers */
   lw ra, 36(sp)
8001f780:	8fbf0024 	lw	ra,36(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:214

   lw AT, 40(sp)
8001f784:	8fa10028 	lw	at,40(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:215
   lw v0, 44(sp)
8001f788:	8fa2002c 	lw	v0,44(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:216
   lw v1, 48(sp)
8001f78c:	8fa30030 	lw	v1,48(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:217
   lw a0, 52(sp)
8001f790:	8fa40034 	lw	a0,52(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:218
   lw a1, 56(sp)
8001f794:	8fa50038 	lw	a1,56(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:219
   lw a2, 60(sp)
8001f798:	8fa6003c 	lw	a2,60(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:220
   lw a3, 64(sp)
8001f79c:	8fa70040 	lw	a3,64(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:221
   lw t0, 68(sp)
8001f7a0:	8fa80044 	lw	t0,68(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:222
   lw t1, 72(sp)
8001f7a4:	8fa90048 	lw	t1,72(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:223
   lw t2, 76(sp)
8001f7a8:	8faa004c 	lw	t2,76(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:224
   lw t3, 80(sp)
8001f7ac:	8fab0050 	lw	t3,80(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:225
   lw t4, 84(sp)
8001f7b0:	8fac0054 	lw	t4,84(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:226
   lw t5, 88(sp)
8001f7b4:	8fad0058 	lw	t5,88(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:227
   lw t6, 92(sp)
8001f7b8:	8fae005c 	lw	t6,92(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:228
   lw t7, 96(sp)
8001f7bc:	8faf0060 	lw	t7,96(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:229
   lw s0, 100(sp)
8001f7c0:	8fb00064 	lw	s0,100(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:230
   lw s1, 104(sp)
8001f7c4:	8fb10068 	lw	s1,104(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:231
   lw s2, 108(sp)
8001f7c8:	8fb2006c 	lw	s2,108(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:232
   lw s3, 112(sp)
8001f7cc:	8fb30070 	lw	s3,112(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:233
   lw s4, 116(sp)
8001f7d0:	8fb40074 	lw	s4,116(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:234
   lw s5, 120(sp)
8001f7d4:	8fb50078 	lw	s5,120(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:235
   lw s6, 124(sp)
8001f7d8:	8fb6007c 	lw	s6,124(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:236
   lw s7, 128(sp)
8001f7dc:	8fb70080 	lw	s7,128(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:237
   lw t8, 132(sp)
8001f7e0:	8fb80084 	lw	t8,132(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:238
   lw t9, 136(sp)
8001f7e4:	8fb90088 	lw	t9,136(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:243

   /*     140(sp)		   "saved" k0 was dummy garbage anyway */
   /*     144(sp)		   "saved" k1 was dummy garbage anyway */

   lw gp, 148(sp)		/* restore gp */
8001f7e8:	8fbc0094 	lw	gp,148(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:245
   /*     152(sp)		   stack pointer - below */
   lw s8, 156(sp)		/* restore s8 */
8001f7ec:	8fbe009c 	lw	s8,156(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:246
   lw k0, 160(sp)		/* fetch exception return PC into k0 */
8001f7f0:	8fba00a0 	lw	k0,160(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:248

   lw sp, 152(sp)		/* fetch saved sp (must be last) */
8001f7f4:	8fbd0098 	lw	sp,152(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:251
   /* done */

   mtc0 k0, CP0_EPC /* Copr.0 reg 13 == PC for exception */
8001f7f8:	409a7000 	mtc0	k0,c0_epc
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:252
   nop
8001f7fc:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:253
   eret
8001f800:	42000018 	eret
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:254
   nop
8001f804:	00000000 	nop

8001f808 <forkrets>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:262

.globl forkrets
.type forkrets, @function
.ent forkrets 
forkrets:
  addiu sp, a0, -16
8001f808:	249dfff0 	addiu	sp,a0,-16
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:263
  b exception_return
8001f80c:	1000ffd4 	b	8001f760 <exception_return>
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/exception.S:264
  nop
8001f810:	00000000 	nop

8001f814 <kernel_thread_entry>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/entry.S:8
/* $a0 = arg, $a1 = func
 * see proc.c:kernel_thread
 */
kernel_thread_entry:        # void kernel_thread(void)
  addiu $sp, $sp, -16
  jal $a1
8001f814:	00a0f809 27bdfff0 00000000 00402021     .......'....! @.
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/entry.S:11
  nop
  move $a0, $v0
  la  $t0, do_exit
8001f824:	3c088001 2508f4d0 0100f809 00000000     ...<...%........
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/entry.S:13
  jal $t0 
  nop
8001f834:	00000000                                ....

8001f838 <switch_to>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:25
    *
    * The order must match arch/mips/include/switchframe.h.
    */

   /* Save the registers */
   sw	sp, 44(a0)
8001f838:	ac9d002c 	sw	sp,44(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:26
   sw	ra, 40(a0)
8001f83c:	ac9f0028 	sw	ra,40(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:27
   sw	gp, 36(a0)
8001f840:	ac9c0024 	sw	gp,36(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:28
   sw	s8, 32(a0)
8001f844:	ac9e0020 	sw	s8,32(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:29
   sw	s7, 28(a0)
8001f848:	ac97001c 	sw	s7,28(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:30
   sw	s6, 24(a0)
8001f84c:	ac960018 	sw	s6,24(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:31
   sw	s5, 20(a0)
8001f850:	ac950014 	sw	s5,20(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:32
   sw	s4, 16(a0)
8001f854:	ac940010 	sw	s4,16(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:33
   sw	s3, 12(a0)
8001f858:	ac93000c 	sw	s3,12(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:34
   sw	s2, 8(a0)
8001f85c:	ac920008 	sw	s2,8(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:35
   sw	s1, 4(a0)
8001f860:	ac910004 	sw	s1,4(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:36
   sw	s0, 0(a0)
8001f864:	ac900000 	sw	s0,0(a0)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:38

   nop
8001f868:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:41

   /* Now, restore the registers */
   lw	s0, 0(a1)
8001f86c:	8cb00000 	lw	s0,0(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:42
   lw	s1, 4(a1)
8001f870:	8cb10004 	lw	s1,4(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:43
   lw	s2, 8(a1)
8001f874:	8cb20008 	lw	s2,8(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:44
   lw	s3, 12(a1)
8001f878:	8cb3000c 	lw	s3,12(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:45
   lw	s4, 16(a1)
8001f87c:	8cb40010 	lw	s4,16(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:46
   lw	s5, 20(a1)
8001f880:	8cb50014 	lw	s5,20(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:47
   lw	s6, 24(a1)
8001f884:	8cb60018 	lw	s6,24(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:48
   lw	s7, 28(a1)
8001f888:	8cb7001c 	lw	s7,28(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:49
   lw	s8, 32(a1)
8001f88c:	8cbe0020 	lw	s8,32(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:50
   lw	gp, 36(a1)
8001f890:	8cbc0024 	lw	gp,36(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:51
   lw	ra, 40(a1)
8001f894:	8cbf0028 	lw	ra,40(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:52
   lw sp, 44(a1)
8001f898:	8cbd002c 	lw	sp,44(a1)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:53
   nop			/* delay slot for load */
8001f89c:	00000000 	nop
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:56

   /* and return. */
   j ra
8001f8a0:	03e00008 	jr	ra
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/process/switch.S:57
   nop
8001f8a4:	00000000 	nop

8001f8a8 <bitmap_translate.part.0>:
bitmap_translate():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8001f8a8:	3c048002 	lui	a0,0x8002
8001f8ac:	3c068002 	lui	a2,0x8002
8001f8b0:	3c078002 	lui	a3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:72
	}
	return -E_NO_MEM;
}

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
8001f8b4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8001f8b8:	24841900 	addiu	a0,a0,6400
8001f8bc:	2405004b 	li	a1,75
8001f8c0:	24c609b0 	addiu	a2,a2,2480
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:72
	}
	return -E_NO_MEM;
}

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
8001f8c4:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/fs/sfs/bitmap.c:75
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8001f8c8:	0c006afd 	jal	8001abf4 <__panic>
8001f8cc:	24e7190c 	addiu	a3,a3,6412

8001f8d0 <check_shmn_overlap.part.5>:
check_shmn_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
8001f8d0:	3c048002 	lui	a0,0x8002
8001f8d4:	3c068002 	lui	a2,0x8002
8001f8d8:	3c078002 	lui	a3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:107
		shmem->shmn_cache = shmn;
	}
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
8001f8dc:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:109
{
	assert(prev->start < prev->end);
8001f8e0:	24842c10 	addiu	a0,a0,11280
8001f8e4:	2405006d 	li	a1,109
8001f8e8:	24c609b0 	addiu	a2,a2,2480
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:107
		shmem->shmn_cache = shmn;
	}
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
8001f8ec:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:109
{
	assert(prev->start < prev->end);
8001f8f0:	0c006afd 	jal	8001abf4 <__panic>
8001f8f4:	24e72c18 	addiu	a3,a3,11288

8001f8f8 <shmem_remove_entry_pte.part.6>:
shmem_remove_entry_pte():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:72
	} else if (!ptep_invalid(ptep)) {
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
		ptep_unmap(ptep);
#else
		assert(0);
8001f8f8:	3c048002 	lui	a0,0x8002
8001f8fc:	3c068002 	lui	a2,0x8002
8001f900:	3c078002 	lui	a3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:43
		}
	}
	return shmn;
}

static inline void shmem_remove_entry_pte(pte_t * ptep)
8001f904:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:72
	} else if (!ptep_invalid(ptep)) {
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
		ptep_unmap(ptep);
#else
		assert(0);
8001f908:	24842c10 	addiu	a0,a0,11280
8001f90c:	24050048 	li	a1,72
8001f910:	24c609b0 	addiu	a2,a2,2480
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:43
		}
	}
	return shmn;
}

static inline void shmem_remove_entry_pte(pte_t * ptep)
8001f914:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/shmem.c:72
	} else if (!ptep_invalid(ptep)) {
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
		ptep_unmap(ptep);
#else
		assert(0);
8001f918:	0c006afd 	jal	8001abf4 <__panic>
8001f91c:	24e71fa4 	addiu	a3,a3,8100

8001f920 <check_vma_overlap.part.5>:
check_vma_overlap():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
8001f920:	3c048002 	lui	a0,0x8002
8001f924:	3c068002 	lui	a2,0x8002
8001f928:	3c078002 	lui	a3,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:268

#endif //UCONFIG_BIONIC_LIBC

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
8001f92c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:270
{
	assert(prev->vm_start < prev->vm_end);
8001f930:	24842ce8 	addiu	a0,a0,11496
8001f934:	2405010e 	li	a1,270
8001f938:	24c609b0 	addiu	a2,a2,2480
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:268

#endif //UCONFIG_BIONIC_LIBC

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
8001f93c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/mm/vmm.c:270
{
	assert(prev->vm_start < prev->vm_end);
8001f940:	0c006afd 	jal	8001abf4 <__panic>
8001f944:	24e72d58 	addiu	a3,a3,11608

8001f948 <pa2page.part.7>:
pa2page():
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001f948:	3c048002 	lui	a0,0x8002
8001f94c:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001f950:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001f954:	24842564 	addiu	a0,a0,9572
8001f958:	24050063 	li	a1,99
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001f95c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001f960:	0c006afd 	jal	8001abf4 <__panic>
8001f964:	24c625cc 	addiu	a2,a2,9676

8001f968 <pa2page.part.2>:
8001f968:	3c048002 	lui	a0,0x8002
8001f96c:	3c068002 	lui	a2,0x8002
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001f970:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001f974:	24842564 	addiu	a0,a0,9572
8001f978:	24050063 	li	a1,99
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001f97c:	afbf0014 	sw	ra,20(sp)
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001f980:	0c006afd 	jal	8001abf4 <__panic>
8001f984:	24c625cc 	addiu	a2,a2,9676

8001f988 <dev_node_ops>:
pa2page.part.2():
8001f988:	8c4ba476 80002094 8000204c 80002000     v.K.. ..L ... ..
8001f998:	80001fb4 800020f4 8000469c 800046bc     ..... ...F...F..
8001f9a8:	800046bc 800046bc 800046a4 800046bc     .F...F...F...F..
8001f9b8:	8000469c 800046a4 8000469c 80001f6c     .F...F...F..l...
8001f9c8:	80001f10 80001e94 800046a4 800046bc     .........F...F..
8001f9d8:	800046bc 80001e54 800046bc              .F..T....F..

8001f9e4 <pipe_node_ops>:
8001f9e4:	8c4ba476 80003068 80003410 8000337c     v.K.h0...4..|3..
8001f9f4:	800032d4 800031d8 8000469c 800046bc     .2...1...F...F..
8001fa04:	800046bc 800046bc 800046a4 800046bc     .F...F...F...F..
8001fa14:	80003100 800046a4 80002f30 800046a4     .1...F..0/...F..
8001fa24:	80002f20 800046a4 800046a4 800046bc      /...F...F...F..
8001fa34:	800046bc 800046bc 800046bc              .F...F...F..

8001fa40 <pipe_root_ops>:
8001fa40:	8c4ba476 800046a4 800046a4 800046a4     v.K..F...F...F..
8001fa50:	800046a4 800046a4 800046a4 800046a4     .F...F...F...F..
8001fa60:	800046a4 800046a4 800046a4 800046a4     .F...F...F...F..
8001fa70:	800046a4 800046a4 800046a4 800046a4     .F...F...F...F..
8001fa80:	800046a4 800046a4 800046a4 80003908     .F...F...F...9..
8001fa90:	800046a4 800037ec 80003b14              .F...7...;..

8001fa9c <sfs_node_dirops>:
8001fa9c:	8c4ba476 80006ccc 80008250 800046b4     v.K..l..P....F..
8001faac:	800046b4 800082c0 8000925c 800087d4     .F......\.......
8001fabc:	80008adc 8000a6d8 800046b4 800046ac     .........F...F..
8001facc:	800095f8 80008fc8 80007ed0 800046a4     .........~...F..
8001fadc:	80006db8 800046b4 800046b4 8000a3f0     .m...F...F......
8001faec:	8000a028 80009d00 800099c4              (...........

8001faf8 <sfs_node_fileops>:
8001faf8:	8c4ba476 80006cec 80008250 8000864c     v.K..l..P...L...
8001fb08:	800084c0 800082c0 8000925c 800046bc     ........\....F..
8001fb18:	800046bc 800046bc 800046bc 800046bc     .F...F...F...F..
8001fb28:	800046bc 800046bc 80007ed0 800046a4     .F...F...~...F..
8001fb38:	80006db8 80008164 80008d20 800046bc     .m..d... ....F..
8001fb48:	800046bc 800046bc 800046bc              .F...F...F..

8001fb54 <__slab_div_table>:
8001fb54:	00000071 0000003b 0000001e 0000000f     q...;...........
	...
8001fb74:	8001682c 800167a4 80016840 800167a4     ,h...g..@h...g..
8001fb84:	800167a4 800167a4 800167a4 80016854     .g...g...g..Th..
8001fb94:	800167a4 800167a4 80016878 80016888     .g...g..xh...h..
8001fba4:	800167a4 8001689c 800168ac 800168ac     .g...h...h...h..
8001fbb4:	800168ac 800168ac 800168ac 800168ac     .h...h...h...h..
8001fbc4:	800168ac 800168ac 800168ac 800167a4     .h...h...h...g..
8001fbd4:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fbe4:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fbf4:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc04:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc14:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc24:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc34:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc44:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc54:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc64:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc74:	800168fc 80016918 80016974 800167a4     .h...i..ti...g..
8001fc84:	800167a4 800167a4 800167a4 800167a4     .g...g...g...g..
8001fc94:	800167a4 800169c0 800167a4 800167a4     .g...i...g...g..
8001fca4:	800169d0 800169fc 800167a4 800167a4     .i...i...g...g..
8001fcb4:	80016a40 800167a4 80016b60 800167a4     @j...g..`k...g..
8001fcc4:	800167a4 80016b88                       .g...k..

8001fccc <error_string>:
8001fccc:	00000000 8002329c 800232b4 800232d0     .....2...2...2..
8001fcdc:	800232e0 800232f8 80023304 80023320     .2...2...3.. 3..
8001fcec:	80023338 8002334c 8002335c 80023370     83..L3..\3..p3..
8001fcfc:	8002337c 8002338c 800233a0 800233ac     |3...3...3...3..
8001fd0c:	800233c4 800233dc 800233e8 800233fc     .3...3...3...3..
8001fd1c:	8002340c 8002341c 8002342c 80023440     .4...4..,4..@4..
8001fd2c:	80023454 80023468 8002347c 8002348c     T4..h4..|4...4..
8001fd3c:	8002349c 800234b4 800234c4 800234dc     .4...4...4...4..
8001fd4c:	800234ec 800234f8 8002351c 8002353c     .4...4...5..<5..
8001fd5c:	80023554 80023564 80023578 80023598     T5..d5..x5...5..

8001fd6c <commands>:
8001fd6c:	80023988 80023994 8001a974 800239b4     .9...9..t....9..
8001fd7c:	800239c0 8001a954                       .9..T...

8001fd84 <CHAR_FONT_BITMAP>:
	...
8001fd98:	01000000 00401004 00000401 00040100     ......@.........
8001fda8:	00000000 02800000 00a0280a 00000000     .........(......
	...
8001fdc0:	04800000 43f86812 507f0902 00048120     .....h.C...P ...
8001fdd0:	00000000 01004000 6048961f 40d00f01     .....@....H`...@
8001fde0:	101f0d22 00000040 40600000 01180902     "...@.....`@....
8001fdf0:	40620303 00180902 00000000 03800000     ..b@............
8001fe00:	c0300401 88a22480 003f0663 00000000     ..0..$..c.?.....
8001fe10:	01000000 00401004 00000000 00000000     ......@.........
8001fe20:	00000000 01008000 80200804 20080200     .......... .... 
8001fe30:	20040100 00000000 00801000 00401002     ... ..........@.
8001fe40:	40100401 04020080 00000000 81000000     ...@............
8001fe50:	20e03824 00000409 00000000 00000000     $8. ............
8001fe60:	00000000 00401000 40103f81 00000100     ......@..?.@....
	...
8001fe80:	08060180 00000010 00000000 00000000     ................
8001fe90:	003c0000 00000000 00000000 00000000     ..<.............
	...
8001fea8:	00060180 00000000 04000000 00802008     ............. ..
8001feb8:	20080401 04010040 00000008 03800000     ... @...........
8001fec8:	22088211 08822089 000e0442 00000000     ...". ..B.......
8001fed8:	01800000 00401005 40100401 001f0100     ......@....@....
8001fee8:	00000000 83c00000 02008030 20301804     ........0.....0 
8001fef8:	003f8040 00000000 83c00000 83008030     @.?.........0...
8001ff08:	00803007 000f0c22 00000000 06000000     .0.."...........
8001ff18:	41205814 00fe1084 00100401 00000000     .X A............
8001ff28:	87e00000 20f80200 00802004 000f0422     ....... . .."...
8001ff38:	00000000 07800000 a0080623 08823187     ........#....1..
8001ff48:	001e0c42 00000000 0fe00000 00804030     B...........0@..
8001ff58:	20100402 00010080 00000000 87c00000     ... ............
8001ff68:	c3188231 08823187 001f0c62 00000000     1....1..b.......
8001ff78:	83c00000 62088211 00802f0c 000f0623     .......b./..#...
	...
8001ff90:	80600000 00000001 00060180 00000000     ..`.............
8001ffa0:	00000000 80600000 00000001 08060180     ......`.........
8001ffb0:	00000010 00000000 c1c08000 c01c0181     ................
8001ffc0:	00000801 00000000 00000000 03f80000     ................
8001ffd0:	00fe0000 00000000 00000000 00000000     ................
8001ffe0:	00700200 70703007 00000020 00000000     ..p..0pp .......
8001fff0:	81c00000 00c02008 00080201 00020080     ..... ..........
80020000:	00000000 07800000 23888433 48922489     ........3..#.$.H
80020010:	0c010e22 000001c0 01000000 80a0280e     "............(..
80020020:	107c1102 00208821 00000000 87e00000     ..|.!. .........
80020030:	e3088230 08823087 001f8c22 00000000     0....0..".......
80020040:	07800000 20080623 18020080 001e0840     ....#.. ....@...
80020050:	00000000 83e00000 22088218 08822088     ...........". ..
80020060:	000f8622 00000000 8fe00000 e0080200     "...............
80020070:	0802008f 003f8020 00000000 8fe00000     .... .?.........
80020080:	e0080200 0802008f 00008020 00000000     ........ .......
80020090:	07800000 20080621 08823080 001e0842     ....!.. .0..B...
800200a0:	00000000 88200000 e2088220 0882208f     ...... . .... ..
800200b0:	00208822 00000000 07c00000 00401004     ". ...........@.
800200c0:	40100401 001f0100 00000000 07800000     ...@............
800200d0:	01004010 00401004 000f0661 00000000     .@....@.a.......
800200e0:	84200000 e0281208 88320480 00208420     .. ...(...2. . .
800200f0:	00000000 80200000 20080200 08020080     ...... .... ....
80020100:	003f8020 00000000 8c600000 a2a8aa31      .?.......`.1...
80020110:	0882248b 00208822 00000000 88600000     .$..". .......`.
80020120:	22288a21 88a22489 00308c22 00000000     !.(".$..".0.....
80020130:	03800000 22088211 08822088 000e0442     .......". ..B...
80020140:	00000000 83e00000 22088230 08021f8c     ........0.."....
80020150:	00008020 00000000 03800000 22088211      .............."
80020160:	08822088 601e0442 00000100 83e00000     . ..B..`........
80020170:	22088230 08421f8c 00408822 00000000     0.."..B.".@.....
80020180:	87800000 c0080221 00801c00 001f0c22     ....!......."...
80020190:	00000000 0fe00000 00401004 40100401     ..........@....@
800201a0:	00040100 00000000 88200000 22088220     .......... . .."
800201b0:	08822088 001f0c62 00000000 88200000     . ..b......... .
800201c0:	41104420 a0280a04 00040380 00000000      D.A..(.........
800201d0:	48100000 a2648120 907e1685 00090240     ...H .d...~.@...
800201e0:	00000000 08200000 00a02811 10280e01     ...... ..(....(.
800201f0:	00208441 00000000 08200000 80a06411     A. ....... ..d..
80020200:	40100403 00040100 00000000 0fe00000     ...@............
80020210:	00804030 10080401 003f8060 00000000     0@......`.?.....
80020220:	0080e000 80200802 20080200 38020080     ...... .... ...8
80020230:	00000000 00200000 80100401 40100200     ...... ........@
80020240:	20080200 00000100 01007000 00401004     ... .....p....@.
80020250:	40100401 1c040100 00000000 01000000     ...@............
80020260:	0318440a 00000000 00000000 00000000     .D..............
	...
80020280:	000ff000 0100200c 00000000 00000000     ..... ..........
	...
8002029c:	01103800 08461f04 00170621 00000000     .8....F.!.......
800202ac:	80200800 20983a00 08421084 000e8261     .. ..:. ..B.a...
	...
800202c4:	21103800 08020080 000e0440 00000000     .8.!....@.......
800202d4:	04010000 21905c10 08421084 00170641     .....\.!..B.A...
	...
800202ec:	21903800 08021f84 000e0440 00000000     .8.!....@.......
800202fc:	0081c000 80207e02 20080200 00020080     .....~ .... ....
	...
80020314:	21905c00 08421084 40170641 00038190     .\.!..B.A..@....
80020324:	80200800 21983a00 08421084 00108421     .. ..:.!..B.!...
80020334:	00000000 01004000 00401c00 40100401     .....@....@....@
80020344:	003f8100 00000000 01004000 00401c00     ..?......@....@.
80020354:	40100401 10040100 0000e040 80200800     ...@....@..... .
80020364:	a0482200 48120380 00108220 00000000     ."H....H .......
80020374:	00803c00 80200802 20080200 001c0080     .<.... .... ....
	...
8002038c:	22487e00 48922489 00248922 00000000     .~H".$.H".$.....
8002039c:	00000000 21983a00 08421084 00108421     .....:.!..B.!...
	...
800203b4:	20903c00 08421084 000f0241 00000000     .<. ..B.A.......
800203c4:	00000000 20983a00 08421084 020e8261     .....:. ..B.a...
800203d4:	00002008 00000000 21905c00 08421084     . .......\.!..B.
800203e4:	40170641 00040100 00000000 41303400     A..@.........40A
800203f4:	10040100 00010040 00000000 00000000     ....@...........
80020404:	21083c00 00700380 000f0421 00000000     .<.!..p.!.......
80020414:	00800000 80207e02 20080200 001c0080     .....~ .... ....
	...
8002042c:	21084200 08421084 00170661 00000000     .B.!..B.a.......
8002043c:	00000000 41084200 60240902 00060180     .....B.A..$`....
	...
80020454:	a2048100 f85a1685 00090241 00000000     ......Z.A.......
80020464:	00000000 80904200 90180601 00108240     .....B......@...
	...
8002047c:	41104200 60280902 10040100 0000c020     .B.A..(`.... ...
8002048c:	00000000 01007e00 10080402 001f8020     .....~...... ...
8002049c:	00000000 01018000 00401004 40100301     ..........@....@
800204ac:	10040100 00000180 01004000 00401004     .........@....@.
800204bc:	40100401 10040100 00010040 01003000     ...@....@....0..
800204cc:	00401004 40101801 10040100 00000030     ..@....@....0...
	...
800204e4:	00622700 00000000 00000000              .'b.........

800204f0 <buddy_pmm_manager>:
800204f0:	80023f00 8001bb04 8001bb80 8001bda0     .?..............
80020500:	8001cd34 8001bb4c 8001c060              4...L...`...

8002050c <__func__.1820>:
8002050c:	69735f5f 65735f67 5f707574 6d617266     __sig_setup_fram
8002051c:	00000065                                e...

80020520 <syscalls>:
80020520:	00000000 8001ec70 8001ec34 8001ec60     ....p...4...`...
80020530:	8001ec4c 8001ec10 00000000 00000000     L...............
80020540:	00000000 8001ec08 8001ec00 8001ebf8     ................
80020550:	8001ebec 00000000 00000000 00000000     ................
80020560:	00000000 8001e9a0 8001e9b0 8001ebe4     ................
80020570:	8001ebd0 8001ebc0 8001ebac 00000000     ................
	...
80020598:	8001eb88 8001eb68 00000000 00000000     ....h...........
	...
800205c0:	8001eb60 8001eb58 8001eb48 8001eb40     `...X...H...@...
800205d0:	8001eb30 00000000 00000000 00000000     0...............
800205e0:	8001eb1c 8001eb08 00000000 00000000     ................
	...
800206b0:	8001eaf8 8001eaf0 8001eadc 8001eac8     ................
800206c0:	8001eab4 00000000 00000000 00000000     ................
	...
800206d8:	8001eaa4 8001ea9c 00000000 00000000     ................
	...
80020700:	8001ea94 8001ea84 8001ea7c 8001ea6c     ........|...l...
80020710:	8001ea5c 00000000 00000000 8001ea54     \...........T...
80020720:	8001ea40 00000000 8001ea30 00000000     @.......0.......
	...
80020750:	8001ea28 8001ea18 00000000 00000000     (...............
	...
800208e8:	8001e9c0 8001f38c 8001f410 8001f440     ............@...
800208f8:	8001f470 8001f4a0 8001f4a0 8001f2fc     p...............
80020908:	8001f2fc 8001f4e0 8001f2fc 8001f338     ............8...

80020918 <excnames.2164>:
80020918:	800245fc 80024608 80024614 80024628     .E...F...F..(F..
80020928:	8002463c 80024654 8002466c 8002468c     <F..TF..lF...F..
80020938:	800246ac 800246b4 800246c0 800246e0     .F...F...F...F..
80020948:	800246f8 20202020 20202020 00000000     .F..        ....
80020958:	2020207c 55504320 20206425 00002020     |    CPU%d    ..
80020968:	64342520 00000020 34252020 34252864      %4d ...  %4d(%4
80020978:	00202964 43206e4f 64255550 0000203a     d) .On CPU%d: ..
80020988:	00643425 64342528 000d0a29 65686373     %4d.(%4d)...sche
80020998:	6c632064 3a737361 0a732520 0000000d     d class: %s.....
800209a8:	65686373 00632e64 65737361 6f697472     sched.c.assertio
800209b8:	6166206e 64656c69 7325203a 00000000     n failed: %s....
800209c8:	636f7270 74733e2d 20657461 50203d21     proc->state != P
800209d8:	5f434f52 424d4f5a 00004549 636f7270     ROC_ZOMBIE..proc
800209e8:	69703e2d 3d3e2064 736c7020 6165725f     ->pid >= pls_rea
800209f8:	636c2864 635f7570 746e756f 00000029     d(lcpu_count)...
80020a08:	656b6177 72207075 616e6e75 20656c62     wakeup runnable 
80020a18:	636f7270 2e737365 00000d0a 656d6974     process.....time
80020a28:	653e2d72 72697078 3e207365 26203020     r->expires > 0 &
80020a38:	69742026 2d72656d 6f72703e 3d212063     & timer->proc !=
80020a48:	4c554e20 0000004c 7473696c 706d655f      NULL...list_emp
80020a58:	26287974 6d697428 3e2d7265 656d6974     ty(&(timer->time
80020a68:	696c5f72 29296b6e 00000000 656d6974     r_link))....time
80020a78:	653e2d72 72697078 21207365 0030203d     r->expires != 0.
80020a88:	636f7270 61773e2d 735f7469 65746174     proc->wait_state
80020a98:	57202620 4e495f54 52524554 45545055      & WT_INTERRUPTE
80020aa8:	00000044 636f7270 20737365 73276425     D...process %d's
80020ab8:	69617720 74735f74 20657461 30203d3d      wait_state == 0
80020ac8:	000d0a2e 65686373 52525f64 0000632e     ....sched_RR.c..
80020ad8:	73696c21 6d655f74 28797470 72702826     !list_empty(&(pr
80020ae8:	3e2d636f 5f6e7572 6b6e696c 26202929     oc->run_link)) &
80020af8:	72702026 3e2d636f 3d207172 7172203d     & proc->rq == rq
80020b08:	00000000 7473696c 706d655f 26287974     ....list_empty(&
80020b18:	6f727028 723e2d63 6c5f6e75 296b6e69     (proc->run_link)
80020b28:	00000029 735f5252 64656863 72656c75     )...RR_scheduler
80020b38:	00000000 2e766564 00000063 6f6e5f5f     ....dev.c...__no
80020b48:	21206564 554e203d 26204c4c 68632026     de != NULL && ch
80020b58:	5f6b6365 646f6e69 79745f65 5f286570     eck_inode_type(_
80020b68:	646f6e5f 64202c65 63697665 00002965     _node, device)..
80020b78:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
80020b88:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
80020b98:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
80020ba8:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
80020bb8:	74746567 20657079 4e203d21 004c4c55     gettype != NULL.
80020bc8:	74746567 00657079 5f766564 6b736964     gettype.dev_disk
80020bd8:	00632e30 69706f63 21206465 2030203d     0.c.copied != 0 
80020be8:	63202626 6569706f 3d3c2064 73657220     && copied <= res
80020bf8:	26206469 6f632026 64656970 44202520     id && copied % D
80020c08:	304b5349 4b4c425f 455a4953 203d3d20     ISK0_BLKSIZE == 
80020c18:	00000030 6b736964 77203a30 65746972     0...disk0: write
80020c28:	6b6c6220 3d206f6e 20642520 63657328      blkno = %d (sec
80020c38:	206f6e74 6425203d 6e202c29 736b6c62     tno = %d), nblks
80020c48:	25203d20 6e282064 73636573 25203d20      = %d (nsecs = %
80020c58:	203a2964 30257830 0a2e7838 00000000     d): 0x%08x......
80020c68:	6b736964 72203a30 20646165 6e6b6c62     disk0: read blkn
80020c78:	203d206f 28206425 74636573 3d206f6e     o = %d (sectno =
80020c88:	29642520 626e202c 20736b6c 6425203d      %d), nblks = %d
80020c98:	736e2820 20736365 6425203d 30203a29      (nsecs = %d): 0
80020ca8:	38302578 000a2e78 69706f63 3d206465     x%08x...copied =
80020cb8:	6c61203d 26206e65 6f632026 64656970     = alen && copied
80020cc8:	44202520 304b5349 4b4c425f 455a4953      % DISK0_BLKSIZE
80020cd8:	203d3d20 00000030 6b736964 64203a30      == 0...disk0: d
80020ce8:	635f7665 74616572 6f6e5f65 0a2e6564     ev_create_node..
80020cf8:	00000000 6b736964 65642030 65636976     ....disk0 device
80020d08:	6e736920 61207427 6c696176 656c6261      isn't available
80020d18:	00000a2e 6b736964 6c612030 20636f6c     ....disk0 alloc 
80020d28:	66667562 66207265 656c6961 000a2e64     buffer failed...
80020d38:	6b736964 00000030 6b736964 76203a30     disk0...disk0: v
80020d48:	615f7366 645f6464 203a7665 0a2e6525     fs_add_dev: %e..
80020d58:	00000000 5f766564 6b736964 00632e31     ....dev_disk1.c.
80020d68:	6b736964 64203a31 635f7665 74616572     disk1: dev_creat
80020d78:	6f6e5f65 0a2e6564 00000000 6b736964     e_node......disk
80020d88:	00000031 6b736964 76203a31 615f7366     1...disk1: vfs_a
80020d98:	645f6464 203a7665 0a2e6525 00000000     dd_dev: %e......
80020da8:	5f766564 6c6c756e 0000632e 6c6c756e     dev_null.c..null
80020db8:	6564203a 72635f76 65746165 646f6e5f     : dev_create_nod
80020dc8:	000a2e65 6c6c756e 00000000 6c6c756e     e...null....null
80020dd8:	6676203a 64615f73 65645f64 25203a76     : vfs_add_dev: %
80020de8:	000a2e65 5f766564 69647473 00632e6e     e...dev_stdin.c.
80020df8:	69647473 64203a6e 635f7665 74616572     stdin: dev_creat
80020e08:	6f6e5f65 0a2e6564 00000000 69647473     e_node......stdi
80020e18:	0000006e 69647473 76203a6e 615f7366     n...stdin: vfs_a
80020e28:	645f6464 203a7665 0a2e6525 00000000     dd_dev: %e......
80020e38:	5f766564 6f647473 632e7475 00000000     dev_stdout.c....
80020e48:	6f647473 203a7475 5f766564 61657263     stdout: dev_crea
80020e58:	6e5f6574 2e65646f 0000000a 6f647473     te_node.....stdo
80020e68:	00007475 6f647473 203a7475 5f736676     ut..stdout: vfs_
80020e78:	5f646461 3a766564 2e652520 0000000a     add_dev: %e.....
80020e88:	65706970 0000632e 73665f5f 203d2120     pipe.c..__fs != 
80020e98:	4c4c554e 20262620 63656863 73665f6b     NULL && check_fs
80020ea8:	7079745f 5f5f2865 202c7366 65706970     _type(__fs, pipe
80020eb8:	00000029 65706970 7263203a 65746165     )...pipe: create
80020ec8:	70697020 73665f65 69616620 2e64656c      pipe_fs failed.
80020ed8:	0000000a 65706970 7263203a 65746165     ....pipe: create
80020ee8:	6f6f7220 6e692074 2065646f 6c696166      root inode fail
80020ef8:	0a2e6465 00000000 65706970 00000000     ed......pipe....
80020f08:	65706970 6676203a 64615f73 73665f64     pipe: vfs_add_fs
80020f18:	6525203a 00000a2e 65706970 6f6e695f     : %e....pipe_ino
80020f28:	632e6564 00000000 6f6e5f5f 21206564     de.c....__node !
80020f38:	554e203d 26204c4c 68632026 5f6b6365     = NULL && check_
80020f48:	646f6e69 79745f65 5f286570 646f6e5f     inode_type(__nod
80020f58:	70202c65 5f657069 646f6e69 00002965     e, pipe_inode)..
80020f68:	2d6e6970 6365723e 6d69616c 756f635f     pin->reclaim_cou
80020f78:	3e20746e 00003020 74617473 3d212065     nt > 0..state !=
80020f88:	4c554e20 0000004c 65706970 6f6f725f      NULL...pipe_roo
80020f98:	00632e74 6f6e722a 735f6564 65726f74     t.c.*rnode_store
80020fa8:	203d3d20 4c4c554e 00000000 6f6e772a      == NULL....*wno
80020fb8:	735f6564 65726f74 203d3d20 4c4c554e     de_store == NULL
80020fc8:	00000000 6e6b6e75 206e776f 65706970     ....unknown pipe
80020fd8:	6f6e695f 74206564 20657079 0a2e6425     _inode type %d..
80020fe8:	00000000 74617028 5d305b68 203d3d20     ....(path[0] == 
80020ff8:	20277227 70207c7c 5b687461 3d205d30     'r' || path[0] =
80021008:	7727203d 26202927 61702026 315b6874     = 'w') && path[1
80021018:	3d3d205d 275f2720 00000000 6d616e28     ] == '_'....(nam
80021028:	5d305b65 203d3d20 20277227 6e207c7c     e[0] == 'r' || n
80021038:	5b656d61 3d205d30 7727203d 26202927     ame[0] == 'w') &
80021048:	616e2026 315b656d 3d3d205d 275f2720     & name[1] == '_'
80021058:	00000000 65706970 6174735f 632e6574     ....pipe_state.c
80021068:	00000000 74617473 723e2d65 635f6665     ....state->ref_c
80021078:	746e756f 30203e20 00000000 74617473     ount > 0....stat
80021088:	3d212065 4c554e20 2626204c 61747320     e != NULL && sta
80021098:	3e2d6574 5f666572 6e756f63 203e2074     te->ref_count > 
800210a8:	00000030 74696177 6575715f 655f6575     0...wait_queue_e
800210b8:	7974706d 73282628 65746174 65723e2d     mpty(&(state->re
800210c8:	72656461 6575715f 29296575 00000000     ader_queue))....
800210d8:	74696177 6575715f 655f6575 7974706d     wait_queue_empty
800210e8:	73282628 65746174 72773e2d 72657469     (&(state->writer
800210f8:	6575715f 29296575 00000000 646f6e69     _queue))....inod
80021108:	65725f65 6f635f66 28746e75 65646f6e     e_ref_count(node
80021118:	3d3d2029 00003020 646f6e69 706f5f65     ) == 0..inode_op
80021128:	635f6e65 746e756f 646f6e28 3d202965     en_count(node) =
80021138:	0030203d 65646f6e 203d2120 4c4c554e     = 0.node != NULL
80021148:	20262620 65646f6e 6e693e2d 73706f5f      && node->in_ops
80021158:	203d2120 4c4c554e 00000000 65646f6e      != NULL....node
80021168:	6e693e2d 73706f5f 6f763e2d 616d5f70     ->in_ops->vop_ma
80021178:	20636967 56203d3d 4d5f504f 43494741     gic == VOP_MAGIC
80021188:	00000000 5f666572 6e756f63 3d3e2074     ....ref_count >=
80021198:	65706f20 6f635f6e 20746e75 6f202626      open_count && o
800211a8:	5f6e6570 6e756f63 3d3e2074 00003020     pen_count >= 0..
800211b8:	5f666572 6e756f63 203c2074 5f58414d     ref_count < MAX_
800211c8:	444f4e49 4f435f45 20544e55 6f202626     INODE_COUNT && o
800211d8:	5f6e6570 6e756f63 203c2074 5f58414d     pen_count < MAX_
800211e8:	444f4e49 4f435f45 00544e55 646f6e69     INODE_COUNT.inod
800211f8:	706f5f65 635f6e65 746e756f 646f6e28     e_open_count(nod
80021208:	3e202965 00003020 6f6e5f5f 21206564     e) > 0..__node !
80021218:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
80021228:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
80021238:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
80021248:	3e2d7370 5f706f76 736f6c63 3d212065     ps->vop_close !=
80021258:	4c554e20 0000004c 736f6c63 00000065      NULL...close...
80021268:	3a736676 72617720 676e696e 6f76203a     vfs: warning: vo
80021278:	6c635f70 3a65736f 2e652520 00000d0a     p_close: %e.....
80021288:	646f6e69 65725f65 6f635f66 28746e75     inode_ref_count(
80021298:	65646f6e 203e2029 00000030 6f6e5f5f     node) > 0...__no
800212a8:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
800212b8:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
800212c8:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
800212d8:	6f5f6e69 3e2d7370 5f706f76 6c636572     in_ops->vop_recl
800212e8:	206d6961 4e203d21 004c4c55 6c636572     aim != NULL.recl
800212f8:	006d6961 3a736676 72617720 676e696e     aim.vfs: warning
80021308:	6f76203a 65725f70 69616c63 25203a6d     : vop_reclaim: %
80021318:	0d0a2e65 00000000 2e736676 00000063     e.......vfs.c...
80021328:	656d616e 203d2120 4c4c554e 00000000     name != NULL....
80021338:	79747366 3e2d6570 6e756f6d 00000074     fstype->mount...
80021348:	64736676 632e7665 00000000 6e766564     vfsdev.c....devn
80021358:	20656d61 4e203d21 004c4c55 76656428     ame != NULL.(dev
80021368:	65646f6e 203d3d20 4c4c554e 20262620     node == NULL && 
80021378:	756f6d21 6261746e 2029656c 28207c7c     !mountable) || (
80021388:	6e766564 2065646f 4e203d21 204c4c55     devnode != NULL 
80021398:	63202626 6b636568 6f6e695f 745f6564     && check_inode_t
800213a8:	28657079 6e766564 2c65646f 76656420     ype(devnode, dev
800213b8:	29656369 00000029 21207366 554e203d     ice))...fs != NU
800213c8:	00004c4c 76656476 65643e2d 6d616e76     LL..vdev->devnam
800213d8:	3d212065 4c554e20 2626204c 65647620     e != NULL && vde
800213e8:	6d3e2d76 746e756f 656c6261 00000000     v->mountable....
800213f8:	76656476 73663e2d 203d2120 4c4c554e     vdev->fs != NULL
80021408:	00000000 66760d0a 6d203a73 746e756f     ......vfs: mount
80021418:	2e732520 00000d0a 3a736676 6d6e7520      %s.....vfs: unm
80021428:	746e756f 2e732520 00000d0a 3a736676     ount %s.....vfs:
80021438:	72617720 676e696e 7973203a 6620636e      warning: sync f
80021448:	656c6961 6f662064 73252072 6525203a     ailed for %s: %e
80021458:	000d0a2e 3a736676 72617720 676e696e     ....vfs: warning
80021468:	6e75203a 6e756f6d 61662074 64656c69     : unmount failed
80021478:	726f6620 3a732520 2e652520 00000d0a      for %s: %e.....
80021488:	66736676 2e656c69 00000063 6f6e5f5f     vfsfile.c...__no
80021498:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
800214a8:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
800214b8:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
800214c8:	6f5f6e69 3e2d7370 5f706f76 61657263     in_ops->vop_crea
800214d8:	21206574 554e203d 00004c4c 61657263     te != NULL..crea
800214e8:	00006574 6f6e5f5f 21206564 554e203d     te..__node != NU
800214f8:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021508:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021518:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021528:	5f706f76 6e65706f 203d2120 4c4c554e     vop_open != NULL
80021538:	00000000 6e65706f 00000000 6f6e5f5f     ....open....__no
80021548:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021558:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021568:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021578:	6f5f6e69 3e2d7370 5f706f76 6e757274     in_ops->vop_trun
80021588:	65746163 203d2120 4c4c554e 00000000     cate != NULL....
80021598:	6e757274 65746163 00000000 6f6e5f5f     truncate....__no
800215a8:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
800215b8:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
800215c8:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
800215d8:	6f5f6e69 3e2d7370 5f706f76 696c6e75     in_ops->vop_unli
800215e8:	21206b6e 554e203d 00004c4c 696c6e75     nk != NULL..unli
800215f8:	00006b6e 6f6e5f5f 21206564 554e203d     nk..__node != NU
80021608:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021618:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021628:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021638:	5f706f76 616e6572 2120656d 554e203d     vop_rename != NU
80021648:	00004c4c 616e6572 0000656d 6f6e5f5f     LL..rename..__no
80021658:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021668:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021678:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021688:	6f5f6e69 3e2d7370 5f706f76 6b6e696c     in_ops->vop_link
80021698:	203d2120 4c4c554e 00000000 6f6e5f5f      != NULL....__no
800216a8:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
800216b8:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
800216c8:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
800216d8:	6f5f6e69 3e2d7370 5f706f76 6c6d7973     in_ops->vop_syml
800216e8:	206b6e69 4e203d21 004c4c55 6c6d7973     ink != NULL.syml
800216f8:	006b6e69 6f6e5f5f 21206564 554e203d     ink.__node != NU
80021708:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021718:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021728:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021738:	5f706f76 64616572 6b6e696c 203d2120     vop_readlink != 
80021748:	4c4c554e 00000000 64616572 6b6e696c     NULL....readlink
80021758:	00000000 6f6e5f5f 21206564 554e203d     ....__node != NU
80021768:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021778:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021788:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021798:	5f706f76 69646b6d 3d212072 4c554e20     vop_mkdir != NUL
800217a8:	0000004c 69646b6d 00000072 6c736676     L...mkdir...vfsl
800217b8:	756b6f6f 00632e70 65646f6e 6e693e2d     ookup.c.node->in
800217c8:	2073665f 4e203d21 004c4c55 6f6e5f5f     _fs != NULL.__no
800217d8:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
800217e8:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
800217f8:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021808:	6f5f6e69 3e2d7370 5f706f76 6b6f6f6c     in_ops->vop_look
80021818:	21207075 554e203d 00004c4c 6b6f6f6c     up != NULL..look
80021828:	00007075 6f6e5f5f 21206564 554e203d     up..__node != NU
80021838:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021848:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021858:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021868:	5f706f76 6b6f6f6c 705f7075 6e657261     vop_lookup_paren
80021878:	3d212074 4c554e20 0000004c 6b6f6f6c     t != NULL...look
80021888:	705f7075 6e657261 00000074 70736676     up_parent...vfsp
80021898:	2e687461 00000063 6f6e5f5f 21206564     ath.c...__node !
800218a8:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
800218b8:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
800218c8:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
800218d8:	3e2d7370 5f706f76 656d616e 656c6966     ps->vop_namefile
800218e8:	203d2120 4c4c554e 00000000 656d616e      != NULL....name
800218f8:	656c6966 00000000 6d746962 632e7061     file....bitmap.c
80021908:	00000000 65646e69 203c2078 6d746962     ....index < bitm
80021918:	3e2d7061 7469626e 00000073 7469626e     ap->nbits...nbit
80021928:	3d212073 26203020 626e2026 20737469     s != 0 && nbits 
80021938:	4f57202b 425f4452 20535449 626e203e     + WORD_BITS > nb
80021948:	00737469 7469626e 202f2073 44524f57     its.nbits / WORD
80021958:	5449425f 3d3d2053 00786920 7265766f     _BITS == ix.over
80021968:	73746962 30203e20 20262620 7265766f     bits > 0 && over
80021978:	73746962 57203c20 5f44524f 53544942     bits < WORD_BITS
80021988:	00000000 772a2821 2064726f 616d2026     ....!(*word & ma
80021998:	00296b73 00736673 2e736673 00000063     sk).sfs.sfs.c...
800219a8:	6c696166 203a6465 3a736673 67657220     failed: sfs: reg
800219b8:	65747369 69665f72 7973656c 6d657473     ister_filesystem
800219c8:	6525203a 00000a2e 6c696166 203a6465     : %e....failed: 
800219d8:	3a736673 73667320 756f6d5f 203a746e     sfs: sfs_mount: 
800219e8:	0a2e6525 00000000 5f736673 632e7366     %e......sfs_fs.c
800219f8:	00000000 73665f5f 203d2120 4c4c554e     ....__fs != NULL
80021a08:	20262620 63656863 73665f6b 7079745f      && check_fs_typ
80021a18:	5f5f2865 202c7366 29736673 00000000     e(__fs, sfs)....
80021a28:	3a736673 6f727720 6d20676e 63696761     sfs: wrong magic
80021a38:	206e6920 65707573 6f6c6272 202e6b63      in superblock. 
80021a48:	38302528 68732078 646c756f 20656220     (%08x should be 
80021a58:	78383025 000a2e29 3a736673 20736620     %08x)...sfs: fs 
80021a68:	20736168 62207525 6b636f6c 64202c73     has %u blocks, d
80021a78:	63697665 61682065 75252073 6f6c6220     evice has %u blo
80021a88:	2e736b63 0000000a 61746164 203d2120     cks.....data != 
80021a98:	4c4c554e 20262620 206e656c 6e203d3d     NULL && len == n
80021aa8:	736b6c62 53202a20 425f5346 49534b4c     blks * SFS_BLKSI
80021ab8:	0000455a 3a736673 756f6d20 203a746e     ZE..sfs: mount: 
80021ac8:	27732527 64252820 2f64252f 0a296425     '%s' (%d/%d/%d).
80021ad8:	00000000 6f6e5f5f 21206564 554e203d     ....__node != NU
80021ae8:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021af8:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021b08:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021b18:	5f706f76 6e797366 3d212063 4c554e20     vop_fsync != NUL
80021b28:	0000004c 6e797366 00000063 73667321     L...fsync...!sfs
80021b38:	75733e2d 5f726570 74726964 00000079     ->super_dirty...
80021b48:	3a736673 6d6e7520 746e756f 2527203a     sfs: unmount: '%
80021b58:	28202773 252f6425 64252f64 00000a29     s' (%d/%d/%d)...
80021b68:	3a736673 6e797320 72652063 3a726f72     sfs: sync error:
80021b78:	73252720 25203a27 000a2e65 64616f6c      '%s': %e...load
80021b88:	73667320 6f6f7220 61662074 64656c69      sfs root failed
80021b98:	6525203a 00000000 5f736673 646f6e69     : %e....sfs_inod
80021ba8:	00632e65 6f6e5f5f 21206564 554e203d     e.c.__node != NU
80021bb8:	26204c4c 68632026 5f6b6365 646f6e69     LL && check_inod
80021bc8:	79745f65 5f286570 646f6e5f 73202c65     e_type(__node, s
80021bd8:	695f7366 65646f6e 00000029 61766e69     fs_inode)...inva
80021be8:	2064696c 656c6966 70797420 64252065     lid file type %d
80021bf8:	00000a2e 5f736673 636f6c62 6e695f6b     ....sfs_block_in
80021c08:	3a657375 6c616320 2064656c 2074756f     use: called out 
80021c18:	7220666f 65676e61 2c302820 29752520     of range (0, %u)
80021c28:	2e752520 0000000a 2d736673 7075733e      %u.....sfs->sup
80021c38:	752e7265 6573756e 6c625f64 736b636f     er.unused_blocks
80021c48:	30203e20 00000000 5f736673 636f6c62      > 0....sfs_bloc
80021c58:	6e695f6b 28657375 2c736673 6e692a20     k_inuse(sfs, *in
80021c68:	74735f6f 2965726f 00000000 65646e69     o_store)....inde
80021c78:	203c2078 5f534653 5f4b4c42 544e454e     x < SFS_BLK_NENT
80021c88:	00005952 65646e69 3d3c2078 6e696420     RY..index <= din
80021c98:	6c623e2d 736b636f 00000000 2d6e6964     ->blocks....din-
80021ca8:	646e693e 63657269 3d3d2074 00003020     >indirect == 0..
80021cb8:	2d6e6964 5f62643e 69646e69 74636572     din->db_indirect
80021cc8:	203d3d20 00000030 206f6e69 30203d3d      == 0...ino == 0
80021cd8:	207c7c20 5f736673 636f6c62 6e695f6b      || sfs_block_in
80021ce8:	28657375 2c736673 6f6e6920 00000029     use(sfs, ino)...
80021cf8:	2d6e6964 7079743e 3d212065 53465320     din->type != SFS
80021d08:	5059545f 49445f45 00000052 2d6e6973     _TYPE_DIR...sin-
80021d18:	6e69643e 79743e2d 3d206570 4653203d     >din->type == SF
80021d28:	59545f53 445f4550 26205249 73282026     S_TYPE_DIR && (s
80021d38:	20746f6c 30203d3e 20262620 746f6c73     lot >= 0 && slot
80021d48:	73203c20 3e2d6e69 2d6e6964 6f6c623e      < sin->din->blo
80021d58:	29736b63 00000000 6c727473 6e286e65     cks)....strlen(n
80021d68:	29656d61 203d3c20 5f534653 5f58414d     ame) <= SFS_MAX_
80021d78:	4d414e46 454c5f45 0000004e 2d6e6973     FNAME_LEN...sin-
80021d88:	6e69643e 79743e2d 3d206570 4653203d     >din->type == SF
80021d98:	59545f53 445f4550 26205249 73282026     S_TYPE_DIR && (s
80021da8:	20746f6c 30203d3e 20262620 746f6c73     lot >= 0 && slot
80021db8:	203d3c20 2d6e6973 6e69643e 6c623e2d      <= sin->din->bl
80021dc8:	736b636f 00000029 5f736673 636f6c62     ocks)...sfs_bloc
80021dd8:	6e695f6b 28657375 2c736673 746e6520     k_inuse(sfs, ent
80021de8:	26262029 646e6920 3c207865 53465320     ) && index < SFS
80021df8:	4b4c425f 4e454e5f 00595254 2d6e6964     _BLK_NENTRY.din-
80021e08:	6f6c623e 20736b63 30203d21 00000000     >blocks != 0....
80021e18:	2d6e6973 6365723e 6d69616c 756f635f     sin->reclaim_cou
80021e28:	3e20746e 00003020 646f6e69 65725f65     nt > 0..inode_re
80021e38:	6f635f66 28746e75 65646f6e 3d3d2029     f_count(node) ==
80021e48:	26203020 6e692026 5f65646f 6e65706f      0 && inode_open
80021e58:	756f635f 6e28746e 2965646f 203d3d20     _count(node) == 
80021e68:	00000030 2d6e6973 6e69643e 69643e2d     0...sin->din->di
80021e78:	666e6972 6c732e6f 2073746f 30203d21     rinfo.slots != 0
80021e88:	20262620 736b6e6c 3e2d6e69 2d6e6964      && lnksin->din-
80021e98:	696c6e3e 20736b6e 30203d21 00000000     >nlinks != 0....
80021ea8:	00002e2e 736b6e6c 3e2d6e69 2d6e6964     ....lnksin->din-
80021eb8:	696c6e3e 20736b6e 30203d3d 00000000     >nlinks == 0....
80021ec8:	646f6e69 65725f65 6f635f66 28746e75     inode_ref_count(
80021ed8:	6b6e696c 646f6e5f 3d202965 2031203d     link_node) == 1 
80021ee8:	69202626 65646f6e 65706f5f 6f635f6e     && inode_open_co
80021ef8:	28746e75 6b6e696c 646f6e5f 3d202965     unt(link_node) =
80021f08:	0030203d 6b6c6274 3d3d2073 6e696420     = 0.tblks == din
80021f18:	6c623e2d 736b636f 00000000 2d6e6964     ->blocks....din-
80021f28:	6f6c623e 20736b63 74203d3d 736b6c62     >blocks == tblks
80021f38:	00000000 206f6e69 73203d21 3e2d6e69     ....ino != sin->
80021f48:	206f6e69 73202626 3e2d6e69 2d6e6964     ino && sin->din-
80021f58:	7079743e 3d3d2065 53465320 5059545f     >type == SFS_TYP
80021f68:	49445f45 00000052 7461702a 3d212068     E_DIR...*path !=
80021f78:	305c2720 26262027 61702a20 21206874      '\0' && *path !
80021f88:	2f27203d 00000027 2d6e6973 6e69643e     = '/'...sin->din
80021f98:	6c6e3e2d 736b6e69 203d2120 00000030     ->nlinks != 0...
80021fa8:	5f736673 65726964 6c5f746e 206b6e69     sfs_dirent_link 
80021fb8:	6f727265 25203a72 000a2e65 5f736673     error: %e...sfs_
80021fc8:	632e6f69 00000000 6b6c6228 21206f6e     io.c....(blkno !
80021fd8:	2030203d 21207c7c 63656863 2620296b     = 0 || !check) &
80021fe8:	6c622026 206f6e6b 6673203c 733e2d73     & blkno < sfs->s
80021ff8:	72657075 6f6c622e 00736b63 7366666f     uper.blocks.offs
80022008:	3e207465 2030203d 6f202626 65736666     et >= 0 && offse
80022018:	203c2074 5f534653 534b4c42 20455a49     t < SFS_BLKSIZE 
80022028:	6f202626 65736666 202b2074 206e656c     && offset + len 
80022038:	53203d3c 425f5346 49534b4c 0000455a     <= SFS_BLKSIZE..
80022048:	656c6966 0000632e 735f7366 63757274     file.c..fs_struc
80022058:	3d212074 4c554e20 2626204c 5f736620     t != NULL && fs_
80022068:	6e756f63 73662874 7274735f 29746375     count(fs_struct)
80022078:	30203e20 00000000 65706f66 6f635f6e      > 0....fopen_co
80022088:	28746e75 656c6966 3d3d2029 00003020     unt(file) == 0..
80022098:	656c6966 74733e2d 73757461 203d3d20     file->status == 
800220a8:	495f4446 2054494e 66207c7c 2d656c69     FD_INIT || file-
800220b8:	6174733e 20737574 46203d3d 4c435f44     >status == FD_CL
800220c8:	4445534f 00000000 656c6966 74733e2d     OSED....file->st
800220d8:	73757461 203d3d20 4f5f4446 454e4550     atus == FD_OPENE
800220e8:	7c7c2044 6c696620 733e2d65 75746174     D || file->statu
800220f8:	3d3d2073 5f444620 534f4c43 00004445     s == FD_CLOSED..
80022108:	65706f66 6f635f6e 28746e75 656c6966     fopen_count(file
80022118:	203e2029 00000030 6c696628 733e2d65     ) > 0...(file->s
80022128:	75746174 3d3d2073 5f444620 54494e49     tatus == FD_INIT
80022138:	207c7c20 656c6966 74733e2d 73757461      || file->status
80022148:	203d3d20 4f5f4446 454e4550 26202944      == FD_OPENED) &
80022158:	69662026 3e2d656c 65646f6e 203d2120     & file->node != 
80022168:	4c4c554e 00000000 656c6966 74733e2d     NULL....file->st
80022178:	73757461 203d3d20 4f5f4446 454e4550     atus == FD_OPENE
80022188:	00000044 3e2d6f74 74617473 3d207375     D...to->status =
80022198:	4446203d 494e495f 26262054 6f726620     = FD_INIT && fro
800221a8:	733e2d6d 75746174 3d3d2073 5f444620     m->status == FD_
800221b8:	4e45504f 00004445 3e2d6f74 74617473     OPENED..to->stat
800221c8:	3d207375 4446203d 4f4c435f 20444553     us == FD_CLOSED 
800221d8:	66202626 2d6d6f72 6174733e 20737574     && from->status 
800221e8:	46203d3d 4c435f44 4445534f 00000000     == FD_CLOSED....
800221f8:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
80022208:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
80022218:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
80022228:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
80022238:	61747366 3d212074 4c554e20 0000004c     fstat != NULL...
80022248:	61747366 00000074 6f6e5f5f 21206564     fstat...__node !
80022258:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
80022268:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
80022278:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
80022288:	3e2d7370 5f706f76 64616572 203d2120     ps->vop_read != 
80022298:	4c4c554e 00000000 64616572 00000000     NULL....read....
800222a8:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
800222b8:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
800222c8:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
800222d8:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
800222e8:	74697277 3d212065 4c554e20 0000004c     write != NULL...
800222f8:	74697277 00000065 6f6e5f5f 21206564     write...__node !
80022308:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
80022318:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
80022328:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
80022338:	3e2d7370 5f706f76 73797274 206b6565     ps->vop_tryseek 
80022348:	4e203d21 004c4c55 73797274 006b6565     != NULL.tryseek.
80022358:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
80022368:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
80022378:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
80022388:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
80022398:	64746567 6e657269 20797274 4e203d21     getdirentry != N
800223a8:	004c4c55 64746567 6e657269 00797274     ULL.getdirentry.
800223b8:	65706970 005f723a 65706970 005f773a     pipe:r_.pipe:w_.
800223c8:	735f7366 63757274 3d212074 4c554e20     fs_struct != NUL
800223d8:	2626204c 5f736620 6e756f63 73662874     L && fs_count(fs
800223e8:	7274735f 29746375 203d3d20 00000030     _struct) == 0...
800223f8:	656c6966 64663e2d 0a64253a 00000000     file->fd:%d.....
80022408:	656c6966 74733e2d 73757461 203d3d20     file->status == 
80022418:	4e5f4446 00454e4f 21206f74 554e203d     FD_NONE.to != NU
80022428:	26204c4c 72662026 21206d6f 554e203d     LL && from != NU
80022438:	00004c4c 635f7366 746e756f 296f7428     LL..fs_count(to)
80022448:	203d3d20 26262030 5f736620 6e756f63      == 0 && fs_coun
80022458:	72662874 20296d6f 0030203e 75626f69     t(from) > 0.iobu
80022468:	00632e66 2d626f69 5f6f693e 69736572     f.c.iob->io_resi
80022478:	3d3e2064 00006e20 66737973 2e656c69     d >= n..sysfile.
80022488:	00000063 206e656c 61203d3e 006e656c     c...len >= alen.
80022498:	74697277 203a7665 253d6466 20783830     writev: fd=%08x 
800224a8:	3d766f69 78383025 766f6920 3d746e63     iov=%08x iovcnt=
800224b8:	000a6425 66737973 5f656c69 756e696c     %d..sysfile_linu
800224c8:	63665f78 366c746e 64663a34 3830253d     x_fcntl64:fd=%08
800224d8:	6d632078 30253d64 61207838 253d6772     x cmd=%08x arg=%
800224e8:	0a783830 00000000 69647473 00003a6e     08x.....stdin:..
800224f8:	6f647473 003a7475 6e69622f 0068732f     stdout:./bin/sh.
80022508:	48544150 69622f3d 00002f6e 6e72656b     PATH=/bin/..kern
80022518:	655f6c65 76636578 70203a65 3d206469     el_execve: pid =
80022528:	2c642520 6d616e20 203d2065 22732522      %d, name = "%s"
80022538:	000d0a2e 72657375 69616d5f 7865206e     ....user_main ex
80022548:	65766365 69616620 2c64656c 206f6e20     ecve failed, no 
80022558:	6e69622f 3f68732f 000d0a2e 6d6f682f     /bin/sh?..../hom
80022568:	736f2f65 2f62616c 755f736f 65726f63     e/oslab/os_ucore
80022578:	70696d5f 316d5f73 732f6b34 6b2f6372     _mips_m14k/src/k
80022588:	2d6e7265 726f6375 72612f65 6d2f6863     ern-ucore/arch/m
80022598:	2f737069 702f6d6d 682e6d6d 00000000     ips/mm/pmm.h....
800225a8:	44444150 61632052 64656c6c 74697720     PADDR called wit
800225b8:	6e692068 696c6176 766b2064 30252061     h invalid kva %0
800225c8:	00786c38 70326170 20656761 6c6c6163     8lx.pa2page call
800225d8:	77206465 20687469 61766e69 2064696c     ed with invalid 
800225e8:	00006170 4444414b 61632052 64656c6c     pa..KADDR called
800225f8:	74697720 6e692068 696c6176 61702064      with invalid pa
80022608:	38302520 0000786c 636f7270 0000632e      %08lx..proc.c..
80022618:	646e6528 6c203c20 26262061 61747320     (end < la && sta
80022628:	3d207472 6e65203d 7c202964 6528207c     rt == end) || (e
80022638:	3e20646e 616c203d 20262620 72617473     nd >= la && star
80022648:	3d3d2074 29616c20 00000000 656c6469     t == la)....idle
80022658:	636f7270 69786520 0d0a2e74 00000000     proc exit.......
80022668:	74696e69 636f7270 69786520 0d0a2e74     initproc exit...
80022678:	00000000 6f645f5f 6978655f 69772074     ....__do_exit wi
80022688:	6e206c6c 7220746f 72757465 2021216e     ll not return!! 
80022698:	25206425 0d0a2e64 00000000 72727563     %d %d.......curr
800226a8:	2d746e65 6961773e 74735f74 20657461     ent->wait_state 
800226b8:	30203d3d 00000000 72727563 2d746e65     == 0....current-
800226c8:	6d69743e 6c735f65 20656369 30203d3e     >time_slice >= 0
800226d8:	00000000 5f646c6f 735f7366 63757274     ....old_fs_struc
800226e8:	3d212074 4c554e20 0000004c 6c756e3c     t != NULL...<nul
800226f8:	25203e6c 00000064 63677261 203d3e20     l> %d...argc >= 
80022708:	26262030 67726120 3d3c2063 45584520     0 && argc <= EXE
80022718:	414d5f43 52415f58 554e5f47 0000004d     C_MAX_ARG_NUM...
80022728:	63766e65 203d3e20 26262030 766e6520     envc >= 0 && env
80022738:	3d3c2063 45584520 414d5f43 4e455f58     c <= EXEC_MAX_EN
80022748:	554e5f56 0000004d 64616f6c 6f63695f     V_NUM...load_ico
80022758:	203a6564 72727563 2d746e65 206d6d3e     de: current->mm 
80022768:	7473756d 20656220 74706d65 000a2e79     must be empty...
80022778:	64616f6c 64646120 73736572 7830203a     load address: 0x
80022788:	78383025 7a697320 25203a65 000d0a64     %08x size: %d...
80022798:	65746e69 665f7072 3d3e2064 00003020     interp_fd >= 0..
800227a8:	74657228 6c203d20 5f64616f 646f6369     (ret = load_icod
800227b8:	65725f65 69286461 7265746e 64665f70     e_read(interp_fd
800227c8:	6e69202c 70726574 666c655f 6973202c     , interp_elf, si
800227d8:	666f657a 72747328 20746375 68666c65     zeof(struct elfh
800227e8:	2c297264 29293020 203d3d20 00000030     dr), 0)) == 0...
800227f8:	65746e69 655f7072 3e2d666c 616d5f65     interp_elf->e_ma
80022808:	20636967 45203d3d 4d5f464c 43494741     gic == ELF_MAGIC
80022818:	00000000 74657228 6c203d20 5f64616f     ....(ret = load_
80022828:	646f6369 65725f65 69286461 7265746e     icode_read(inter
80022838:	64665f70 6e69202c 70726574 2c68705f     p_fd, interp_ph,
80022848:	7a697320 28666f65 75727473 70207463      sizeof(struct p
80022858:	68676f72 2c297264 746e6920 5f707265     roghdr), interp_
80022868:	666f6870 20292966 30203d3d 00000000     phoff)) == 0....
80022878:	74657228 6d203d20 705f7061 6e692868     (ret = map_ph(in
80022888:	70726574 2c64665f 746e6920 5f707265     terp_fd, interp_
80022898:	202c6870 202c6d6d 61696226 31202c73     ph, mm, &bias, 1
800228a8:	3d202929 0030203d 74696177 6c646920     )) == 0.wait idl
800228b8:	6f727065 726f2063 696e6920 6f727074     eproc or initpro
800228c8:	000a2e63 6b736964 00003a30 20746573     c...disk0:..set 
800228d8:	746f6f62 20736620 6c696166 203a6465     boot fs failed: 
800228e8:	0a2e6525 0000000d 61657263 75206574     %e......create u
800228f8:	5f726573 6e69616d 69616620 2e64656c     ser_main failed.
80022908:	00000d0a 206c6c61 72657375 646f6d2d     ....all user-mod
80022918:	72702065 7365636f 20736573 65766168     e processes have
80022928:	69757120 0d0a2e74 00000000 705f726e      quit.......nr_p
80022938:	65636f72 3d207373 2031203d 6c70202b     rocess == 1 + pl
80022948:	65725f73 6c286461 5f757063 6e756f63     s_read(lcpu_coun
80022958:	00002974 755f726e 5f646573 65676170     t)..nr_used_page
80022968:	74735f73 2065726f 6e203d3d 73755f72     s_store == nr_us
80022978:	705f6465 73656761 00002928 62616c73     ed_pages()..slab
80022988:	6c6c615f 7461636f 735f6465 65726f74     _allocated_store
80022998:	203d3d20 62616c73 6c6c615f 7461636f      == slab_allocat
800229a8:	29286465 00000000 74696e69 65686320     ed()....init che
800229b8:	6d206b63 726f6d65 61702079 0a2e7373     ck memory pass..
800229c8:	0000000d 74696177 6c646920 6f727065     ....wait idlepro
800229d8:	726f2063 696e6920 6f727074 0d0a2e63     c or initproc...
800229e8:	00000000 6e72656b 74206c65 61657268     ....kernel threa
800229f8:	61632064 73206c6c 625f7379 21216b72     d call sys_brk!!
80022a08:	000d0a2e 62646c6f 25206b72 53475020     ....oldbrk % PGS
80022a18:	20455a49 30203d3d 00000000 6f637521     IZE == 0....!uco
80022a28:	695f6572 6e695f6e 72726574 28747075     re_in_interrupt(
80022a38:	00000029 6e72656b 74206c65 61657268     )...kernel threa
80022a48:	61632064 6d206c6c 2170616d 0d0a2e21     d call mmap!!...
80022a58:	00000000 6e72656b 74206c65 61657268     ....kernel threa
80022a68:	61632064 6d206c6c 616d6e75 2e212170     d call munmap!!.
80022a78:	00000d0a 656d6873 65725f6d 68732866     ....shmem_ref(sh
80022a88:	296d656d 203d3d20 00000030 6e6e6163     mem) == 0...cann
80022a98:	6120746f 636f6c6c 6c646920 6f727065     ot alloc idlepro
80022aa8:	000a2e63 61657263 66206574 74735f73     c...create fs_st
80022ab8:	74637572 64692820 7270656c 2029636f     ruct (idleproc) 
80022ac8:	6c696166 0a2e6465 00000000 656c6469     failed......idle
80022ad8:	0064252f 61657263 69206574 5f74696e     /%d.create init_
80022ae8:	6e69616d 69616620 2e64656c 0000000a     main failed.....
80022af8:	696e696b 00000074 656c6469 636f7270     kinit...idleproc
80022b08:	203d2120 4c4c554e 20262620 656c6469      != NULL && idle
80022b18:	636f7270 69703e2d 3d3d2064 70636c20     proc->pid == lcp
80022b28:	64695f75 00000078 74696e69 636f7270     u_idx...initproc
80022b38:	203d2120 4c4c554e 20262620 74696e69      != NULL && init
80022b48:	636f7270 69703e2d 3d3d2064 70636c20     proc->pid == lcp
80022b58:	6f635f75 00746e75 6e676973 632e6c61     u_count.signal.c
80022b68:	00000000 20676973 4e203d21 204c4c55     ....sig != NULL 
80022b78:	73202626 616e6769 6f635f6c 28746e75     && signal_count(
80022b88:	29676973 203d3d20 00000030 21206873     sig) == 0...sh !
80022b98:	554e203d 26204c4c 69732026 6e616867     = NULL && sighan
80022ba8:	6f635f64 28746e75 20296873 30203d3d     d_count(sh) == 0
80022bb8:	00000000 5f746567 63286973 65727275     ....get_si(curre
80022bc8:	2d29746e 6769733e 646e6168 00000000     nt)->sighand....
80022bd8:	5f746567 63286973 65727275 2d29746e     get_si(current)-
80022be8:	6769733e 006c616e 61727421 6e695f70     >signal.!trap_in
80022bf8:	72656b5f 286c656e 00296674 21206d6d     _kernel(tf).mm !
80022c08:	554e203d 00004c4c 656d6873 00632e6d     = NULL..shmem.c.
80022c18:	76657270 74733e2d 20747261 7270203c     prev->start < pr
80022c28:	3e2d7665 00646e65 70657470 203d2120     ev->end.ptep != 
80022c38:	4c4c554e 00000000 32657470 65676170     NULL....pte2page
80022c48:	6c616320 2064656c 68746977 766e6920      called with inv
80022c58:	64696c61 65747020 00000000 72646461     alid pte....addr
80022c68:	73203c20 6d656d68 656c3e2d 0000006e      < shmem->len...
80022c78:	6e6d6873 203d3d20 4c4c554e 207c7c20     shmn == NULL || 
80022c88:	6d687328 733e2d6e 74726174 203d3c20     (shmn->start <= 
80022c98:	72646461 20262620 72646461 73203c20     addr && addr < s
80022ca8:	2d6e6d68 646e653e 00000029 76657270     hmn->end)...prev
80022cb8:	6e653e2d 3d3c2064 78656e20 733e2d74     ->end <= next->s
80022cc8:	74726174 00000000 7478656e 74733e2d     tart....next->st
80022cd8:	20747261 656e203c 3e2d7478 00646e65     art < next->end.
80022ce8:	2e6d6d76 00000063 72617473 20252074     vmm.c...start % 
80022cf8:	49534750 3d20455a 2030203d 65202626     PGSIZE == 0 && e
80022d08:	2520646e 53475020 20455a49 30203d3d     nd % PGSIZE == 0
80022d18:	00000000 2d616d76 5f6d763e 72617473     ....vma->vm_star
80022d28:	3d3c2074 61747320 26207472 74732026     t <= start && st
80022d38:	20747261 6e65203c 26262064 646e6520     art < end && end
80022d48:	203d3c20 2d616d76 5f6d763e 00646e65      <= vma->vm_end.
80022d58:	76657270 6d763e2d 6174735f 3c207472     prev->vm_start <
80022d68:	65727020 763e2d76 6e655f6d 00000064      prev->vm_end...
80022d78:	2d616d76 5f6d763e 72617473 203c2074     vma->vm_start < 
80022d88:	2d616d76 5f6d763e 00646e65 76657270     vma->vm_end.prev
80022d98:	6d763e2d 646e655f 203d3c20 7478656e     ->vm_end <= next
80022da8:	6d763e2d 6174735f 00007472 7478656e     ->vm_start..next
80022db8:	6d763e2d 6174735f 3c207472 78656e20     ->vm_start < nex
80022dc8:	763e2d74 6e655f6d 00000064 635f6d6d     t->vm_end...mm_c
80022dd8:	746e756f 296d6d28 203d3d20 00000030     ount(mm) == 0...
80022de8:	20616d76 4e203d21 004c4c55 2120656c     vma != NULL.le !
80022df8:	2826203d 3e2d6d6d 70616d6d 73696c5f     = &(mm->mmap_lis
80022e08:	00002974 70616d6d 6d763e2d 6174735f     t)..mmap->vm_sta
80022e18:	3d207472 2069203d 2035202a 6d202626     rt == i * 5 && m
80022e28:	2d70616d 5f6d763e 20646e65 69203d3d     map->vm_end == i
80022e38:	35202a20 32202b20 00000000 2d616d76      * 5 + 2....vma-
80022e48:	5f6d763e 72617473 3d3d2074 2a206a20     >vm_start == j *
80022e58:	26203520 6d762026 763e2d61 6e655f6d      5 && vma->vm_en
80022e68:	3d3d2064 2a206a20 2b203520 00003220     d == j * 5 + 2..
80022e78:	63656863 6d765f6b 74735f61 74637572     check_vma_struct
80022e88:	73202928 65636375 64656465 000d0a21     () succeeded!...
80022e98:	63656863 6d765f6b 2029286d 63637573     check_vmm() succ
80022ea8:	65646565 0d0a2e64 00000000 3d206d6d     eeded.......mm =
80022eb8:	6d76203d 763e2d61 6d6d5f6d 00000000     = vma->vm_mm....
80022ec8:	21206d6d 554e203d 26204c4c 6d6d2026     mm != NULL && mm
80022ed8:	756f635f 6d28746e 3d20296d 0030203d     _count(mm) == 0.
80022ee8:	72727563 20746e65 4e203d21 004c4c55     current != NULL.
80022ef8:	65676170 75616620 6920746c 656b206e     page fault in ke
80022f08:	6c656e72 72687420 3a646165 64697020     rnel thread: pid
80022f18:	25203d20 6e202c64 20656d61 7325203d      = %d, name = %s
80022f28:	6425202c 38302520 0d0a2e78 00000000     , %d %08x.......
80022f38:	53204f4e 0a504157 00000000 25207025     NO SWAP.....%p %
80022f48:	64252070 20642520 0d0a7825 00000000     p %d %d %x......
80022f58:	62616c73 0000632e 20746f6e 6c732061     slab.c..not a sl
80022f68:	70206261 20656761 78383025 0000000a     ab page %08x....
80022f78:	65676150 62616c53 00297028 6f746567     PageSlab(p).geto
80022f88:	72656472 69616620 2e64656c 0a642520     rder failed. %d.
80022f98:	00000000 6e756f66 0a213264 00000000     ....found2!.....
80022fa8:	5f66666f 62616c73 626f203a 7a69736a     off_slab: objsiz
80022fb8:	203d2065 202c6425 206d756e 3025203d     e = %d, num = %0
80022fc8:	6f207838 735f6666 5f62616c 696d696c     8x off_slab_limi
80022fd8:	203d2074 78383025 0000002e 636c6163     t = %08x....calc
80022fe8:	74616c75 6c735f65 6f5f6261 3a726576     ulate_slab_over:
80022ff8:	69616620 2e64656c 00000000 6c616d6b      failed.....kmal
80023008:	5f636f6c 74696e69 73202928 65636375     loc_init() succe
80023018:	64656465 00000a21 657a6973 30203e20     eded!...size > 0
80023028:	00000000 745f6272 2e656572 00000063     ....rb_tree.c...
80023038:	3d212078 65727420 723e2d65 20746f6f     x != tree->root 
80023048:	78202626 203d2120 206c696e 79202626     && x != nil && y
80023058:	203d2120 006c696e 696e2821 723e2d6c      != nil.!(nil->r
80023068:	00296465 20746572 4e203d21 004c4c55     ed).ret != NULL.
80023078:	706d6f63 20657261 4e203d21 004c4c55     compare != NULL.
80023088:	72742821 3e2d6565 2d6c696e 6465723e     !(tree->nil->red
80023098:	26262029 74282120 2d656572 6f6f723e     ) && !(tree->roo
800230a8:	723e2d74 00296465 3d212079 6f6f7220     t->red).y != roo
800230b8:	26262074 21207920 696e203d 0000006c     t && y != nil...
800230c8:	646f6e21 723e2d65 00006465 504d4f43     !node->red..COMP
800230d8:	28455241 65657274 6f6e202c 202c6564     ARE(tree, node, 
800230e8:	65646f6e 656c3e2d 20297466 30203d3e     node->left) >= 0
800230f8:	00000000 65646f6e 656c3e2d 3e2d7466     ....node->left->
80023108:	65726170 3d20746e 6f6e203d 00006564     parent == node..
80023118:	504d4f43 28455241 65657274 6f6e202c     COMPARE(tree, no
80023128:	202c6564 65646f6e 69723e2d 29746867     de, node->right)
80023138:	203d3c20 00000030 65646f6e 69723e2d      <= 0...node->ri
80023148:	2d746867 7261703e 20746e65 6e203d3d     ght->parent == n
80023158:	0065646f 646f6e21 6c3e2d65 2d746665     ode.!node->left-
80023168:	6465723e 20262620 646f6e21 723e2d65     >red && !node->r
80023178:	74686769 65723e2d 00000064 6c5f6268     ight->red...hb_l
80023188:	20746665 68203d3d 69725f62 00746867     eft == hb_right.
80023198:	65657274 203d2120 4c4c554e 00000000     tree != NULL....
800231a8:	6c696e21 65723e2d 26262064 6f6f7220     !nil->red && roo
800231b8:	6c3e2d74 20746665 6e203d3d 00006c69     t->left == nil..
800231c8:	6b72616d 205d695b 31203d3d 00000000     mark[i] == 1....
800231d8:	65646f6e 203d2120 4c4c554e 20262620     node != NULL && 
800231e8:	65646f6e 203d3d20 6c612826 5d695b6c     node == &(all[i]
800231f8:	62723e2d 6e696c5f 0000296b 65646f6e     ->rb_link)..node
80023208:	203d2120 4c4c554e 20262620 326e6272      != NULL && rbn2
80023218:	61746164 646f6e28 3e2d2965 61746164     data(node)->data
80023228:	203d3d20 00000069 65646f6e 203d2120      == i...node != 
80023238:	4c4c554e 20262620 326e6272 61746164     NULL && rbn2data
80023248:	646f6e28 3e2d2965 61746164 203d3d20     (node)->data == 
80023258:	0078616d 745f6272 5f656572 74706d65     max.rb_tree_empt
80023268:	72742879 00296565 00007325 33323130     y(tree).%s..0123
80023278:	37363534 62613938 66656463 00000000     456789abcdef....
80023288:	6c756e28 0000296c 6f727265 64252072     (null)..error %d
80023298:	00000000 7265704f 6f697461 6f6e206e     ....Operation no
800232a8:	65702074 74696d72 00646574 73206f4e     t permitted.No s
800232b8:	20686375 656c6966 20726f20 65726964     uch file or dire
800232c8:	726f7463 00000079 73206f4e 20686375     ctory...No such 
800232d8:	636f7270 00737365 65746e49 70757272     process.Interrup
800232e8:	20646574 74737973 63206d65 006c6c61     ted system call.
800232f8:	204f2f49 6f727265 00000072 73206f4e     I/O error...No s
80023308:	20686375 69766564 6f206563 64612072     uch device or ad
80023318:	73657264 00000073 75677241 746e656d     dress...Argument
80023328:	73696c20 6f742074 6f6c206f 0000676e      list too long..
80023338:	63657845 726f6620 2074616d 6f727265     Exec format erro
80023348:	00000072 20646142 656c6966 6d756e20     r...Bad file num
80023358:	00726562 63206f4e 646c6968 6f727020     ber.No child pro
80023368:	73736563 00007365 20797254 69616761     cesses..Try agai
80023378:	0000006e 2074754f 6d20666f 726f6d65     n...Out of memor
80023388:	00000079 6d726550 69737369 64206e6f     y...Permission d
80023398:	65696e65 00000064 20646142 72646461     enied...Bad addr
800233a8:	00737365 636f6c42 6564206b 65636976     ess.Block device
800233b8:	71657220 65726975 00000064 69766544      required...Devi
800233c8:	6f206563 65722072 72756f73 62206563     ce or resource b
800233d8:	00797375 656c6946 69786520 00737473     usy.File exists.
800233e8:	736f7243 65642d73 65636976 6e696c20     Cross-device lin
800233f8:	0000006b 73206f4e 20686375 69766564     k...No such devi
80023408:	00006563 20746f4e 69642061 74636572     ce..Not a direct
80023418:	0079726f 61207349 72696420 6f746365     ory.Is a directo
80023428:	00007972 61766e49 2064696c 75677261     ry..Invalid argu
80023438:	746e656d 00000000 656c6946 62617420     ment....File tab
80023448:	6f20656c 66726576 00776f6c 206f6f54     le overflow.Too 
80023458:	796e616d 65706f20 6966206e 0073656c     many open files.
80023468:	20746f4e 79742061 72776570 72657469     Not a typewriter
80023478:	00000000 74786554 6c696620 75622065     ....Text file bu
80023488:	00007973 656c6946 6f6f7420 72616c20     sy..File too lar
80023498:	00006567 73206f4e 65636170 66656c20     ge..No space lef
800234a8:	6e6f2074 76656420 00656369 656c6c49     t on device.Ille
800234b8:	206c6167 6b656573 00000000 64616552     gal seek....Read
800234c8:	6c6e6f2d 69662079 7320656c 65747379     -only file syste
800234d8:	0000006d 206f6f54 796e616d 6e696c20     m...Too many lin
800234e8:	0000736b 6b6f7242 70206e65 00657069     ks..Broken pipe.
800234f8:	6874614d 67726120 6e656d75 756f2074     Math argument ou
80023508:	666f2074 6d6f6420 206e6961 6620666f     t of domain of f
80023518:	00636e75 6874614d 73657220 20746c75     unc.Math result 
80023528:	20746f6e 72706572 6e657365 6c626174     not representabl
80023538:	00000065 6d696e55 6d656c70 65746e65     e...Unimplemente
80023548:	65462064 72757461 00000065 696e6150     d Feature...Pani
80023558:	61462063 72756c69 00000065 636f7250     c Failure...Proc
80023568:	20737365 6b207369 656c6c69 00000064     ess is killed...
80023578:	70736e55 66696365 20646569 7520726f     Unspecified or u
80023588:	6f6e6b6e 70206e77 6c626f72 00006d65     nknown problem..
80023598:	50415753 41455220 52572f44 20455449     SWAP READ/WRITE 
800235a8:	6c756166 00000074 2e6d6d70 00000063     fault...pmm.c...
800235b8:	52455355 4343415f 28535345 72617473     USER_ACCESS(star
800235c8:	65202c74 0029646e 72617473 3d3e2074     t, end).start >=
800235d8:	26203020 74732026 20747261 6e65203c      0 && start < en
800235e8:	26262064 646e6520 203d3c20 49535450     d && end <= PTSI
800235f8:	0000455a 6574702a 3d212070 26203020     ZE..*ptep != 0 &
80023608:	6e2a2026 70657470 203d3d20 00000030     & *nptep == 0...
80023618:	20746572 30203d3d 00000000 6e657665     ret == 0....even
80023628:	00632e74 67616c66 3d3d2073 5f545720     t.c.flags == WT_
80023638:	45544e49 50555252 00444554 786f626d     INTERRUPTED.mbox
80023648:	0000632e 786f626d 74733e2d 20657461     .c..mbox->state 
80023658:	43203d3d 49534f4c 2620474e 626d2026     == CLOSING && mb
80023668:	3e2d786f 73756e69 3d3d2065 00003020     ox->inuse == 0..
80023678:	7473696c 706d655f 26287974 6f626d28     list_empty(&(mbo
80023688:	6d3e2d78 6c5f6773 296b6e69 00000029     x->msg_link))...
80023698:	74696177 6575715f 655f6575 7974706d     wait_queue_empty
800236a8:	6d282628 2d786f62 6e65733e 73726564     (&(mbox->senders
800236b8:	00002929 74696177 6575715f 655f6575     ))..wait_queue_e
800236c8:	7974706d 6d282628 2d786f62 6365723e     mpty(&(mbox->rec
800236d8:	65766965 29297372 00000000 786f626d     eivers))....mbox
800236e8:	74733e2d 20657461 4f203d3d 454e4550     ->state == OPENE
800236f8:	00000044 73696c21 6d655f74 28797470     D...!list_empty(
80023708:	65726626 626d5f65 6c5f786f 29747369     &free_mbox_list)
80023718:	00000000 786f626d 74733e2d 20657461     ....mbox->state 
80023728:	4f203d3d 454e4550 26262044 6f626d20     == OPENED && mbo
80023738:	6d3e2d78 735f7861 73746f6c 6d203e20     x->max_slots > m
80023748:	2d786f62 6f6c733e 00007374 20746572     box->slots..ret 
80023758:	30203d21 20262620 786f626d 74733e2d     != 0 && mbox->st
80023768:	20657461 43203d3d 49534f4c 0000474e     ate == CLOSING..
80023778:	786f626d 74733e2d 20657461 4f203d3d     mbox->state == O
80023788:	454e4550 26262044 6f626d20 733e2d78     PENED && mbox->s
80023798:	73746f6c 30203e20 00000000 73696c21     lots > 0....!lis
800237a8:	6d655f74 28797470 626d2826 3e2d786f     t_empty(&(mbox->
800237b8:	5f67736d 6b6e696c 00002929 20676573     msg_link))..seg 
800237c8:	4e203d21 004c4c55 2e6d6573 00000063     != NULL.sem.c...
800237d8:	2d6d6573 6c61763e 00006469 74696177     sem->valid..wait
800237e8:	72703e2d 3e2d636f 74696177 6174735f     ->proc->wait_sta
800237f8:	3d206574 6177203d 735f7469 65746174     te == wait_state
80023808:	00000000 67616c66 3d3d2073 00003020     ....flags == 0..
80023818:	5f6d6573 75657571 3d212065 4c554e20     sem_queue != NUL
80023828:	2626204c 6d657320 6575715f 635f6575     L && sem_queue_c
80023838:	746e756f 6d657328 6575715f 20296575     ount(sem_queue) 
80023848:	30203d3d 00000000 72727563 2d746e65     == 0....current-
80023858:	6d65733e 6575715f 21206575 554e203d     >sem_queue != NU
80023868:	00004c4c 74696177 0000632e 7473696c     LL..wait.c..list
80023878:	706d655f 26287974 69617728 773e2d74     _empty(&(wait->w
80023888:	5f746961 6b6e696c 26202929 61772026     ait_link)) && wa
80023898:	3e2d7469 636f7270 203d2120 4c4c554e     it->proc != NULL
800238a8:	00000000 73696c21 6d655f74 28797470     ....!list_empty(
800238b8:	61772826 3e2d7469 74696177 6e696c5f     &(wait->wait_lin
800238c8:	2029296b 77202626 2d746961 6961773e     k)) && wait->wai
800238d8:	75715f74 20657565 71203d3d 65756575     t_queue == queue
800238e8:	00000000 63657053 206c6169 6e72656b     ....Special kern
800238f8:	73206c65 6f626d79 0a3a736c 0000000d     el symbols:.....
80023908:	6e652020 20797274 00783020 68702820       entry  0x. (ph
80023918:	0a297379 0000000d 74652020 09747865     ys).....  etext.
80023928:	00007830 64652020 09617461 00007830     0x..  edata.0x..
80023938:	6e652020 78300964 00000000 6e72654b       end.0x....Kern
80023948:	65206c65 75636578 6c626174 656d2065     el executable me
80023958:	79726f6d 6f6f6620 69727074 203a746e     mory footprint: 
80023968:	00000000 0d0a424b 00000000 6265646b     ....KB......kdeb
80023978:	632e6775 00000000 6d696e55 00006c70     ug.c....Unimpl..
80023988:	706c6568 00000000 00202d20 70736944     help.... - .Disp
80023998:	2079616c 73696874 73696c20 666f2074     lay this list of
800239a8:	6d6f6320 646e616d 00002e73 6e72656b      commands...kern
800239b8:	6f666e69 00000000 70736944 2079616c     info....Display 
800239c8:	6f666e69 74616d72 206e6f69 756f6261     information abou
800239d8:	68742074 656b2065 6c656e72 0000002e     t the kernel....
800239e8:	636c6557 20656d6f 74206f74 6b206568     Welcome to the k
800239f8:	656e7265 6564206c 20677562 696e6f6d     ernel debug moni
80023a08:	21726f74 00000a21 65707954 65682720     tor!!...Type 'he
80023a18:	2027706c 20726f66 696c2061 6f207473     lp' for a list o
80023a28:	6f632066 6e616d6d 0a2e7364 00000000     f commands......
80023a38:	00203e4b 0d0a0920 00000000 206f6f54     K> . .......Too 
80023a48:	796e616d 67726120 6e656d75 0a2e7374     many arguments..
80023a58:	00000000 6e6b6e55 206e776f 6d6d6f63     ....Unknown comm
80023a68:	20646e61 00000027 00000a27 6e72656b     and '...'...kern
80023a78:	70206c65 63696e61 20746120 253a7325     el panic at %s:%
80023a88:	200a3a64 00202020 6e72656b 77206c65     d:.    .kernel w
80023a98:	696e7261 6120676e 73252074 3a64253a     arning at %s:%d:
80023aa8:	2020200a 00000020 65732b2b 20707574     .    ...++setup 
80023ab8:	656d6974 6e692072 72726574 73747075     timer interrupts
80023ac8:	00000d0a 69726573 70206c61 2074726f     ....serial port 
80023ad8:	73656f64 746f6e20 69786520 21217473     does not exist!!
80023ae8:	00000d0a 69636970 632e7172 00000000     ....picirq.c....
80023af8:	20717269 0038203c 646d6172 5f6b7369     irq < 8.ramdisk_
80023b08:	74696e69 203a2928 74696e69 66206472     init(): initrd f
80023b18:	646e756f 616d202c 3a636967 25783020     ound, magic: 0x%
80023b28:	2c783830 25783020 20783830 73636573     08x, 0x%08x secs
80023b38:	00000d0a 6e726157 3a676e69 206f4e20     ....Warning: No 
80023b48:	74696e49 0a216472 0000000d 74696e49     Initrd!.....Init
80023b58:	203a6472 30257830 2d207838 25783020     rd: 0x%08x - 0x%
80023b68:	2c783830 7a697320 30203a65 38302578     08x, size: 0x%08
80023b78:	6d202c78 63696761 7830203a 78383025     x, magic: 0x%08x
80023b88:	00000d0a 646d6172 2e6b7369 00000063     ....ramdisk.c...
80023b98:	54494e49 535f4452 28455a49 20252029     INITRD_SIZE() % 
80023ba8:	54434553 455a4953 203d3d20 00000030     SECTSIZE == 0...
80023bb8:	4e52454b 494e495f 00445254 55485428     KERN_INITRD.(THU
80023bc8:	5453432e 736f2029 20736920 64616f6c     .CST) os is load
80023bd8:	20676e69 0a2e2e2e 000d0a0d 64647562     ing ........budd
80023be8:	6d705f79 00632e6d 203e206e 26262030     y_pmm.c.n > 0 &&
80023bf8:	6e6f7a20 756e5f65 203c206d 5f58414d      zone_num < MAX_
80023c08:	454e4f5a 4d554e5f 00000000 65676150     ZONE_NUM....Page
80023c18:	65736552 64657672 00297028 203e206e     Reserved(p).n > 
80023c28:	00000030 65676150 706f7250 79747265     0...PageProperty
80023c38:	20297028 70202626 72703e2d 7265706f     (p) && p->proper
80023c48:	3d207974 0069203d 61746f74 3d3d206c     ty == i.total ==
80023c58:	5f726e20 65657266 6761705f 29287365      nr_free_pages()
80023c68:	00000000 21203070 554e203d 00004c4c     ....p0 != NULL..
80023c78:	67617028 64693265 30702878 20262029     (page2idx(p0) & 
80023c88:	3d202937 0030203d 67615021 6f725065     7) == 0.!PagePro
80023c98:	74726570 30702879 00000029 6f6c6c61     perty(p0)...allo
80023ca8:	61705f63 29286567 203d3d20 4c4c554e     c_page() == NULL
80023cb8:	00000000 665f726e 5f656572 65676170     ....nr_free_page
80023cc8:	20292873 38203d3d 00000000 65676150     s() == 8....Page
80023cd8:	706f7250 79747265 29307028 20262620     Property(p0) && 
80023ce8:	3e2d3070 706f7270 79747265 203d3d20     p0->property == 
80023cf8:	00000033 20307028 6c61203d 5f636f6c     3...(p0 = alloc_
80023d08:	65676170 29362873 3d212029 4c554e20     pages(6)) != NUL
80023d18:	2626204c 61502120 72506567 7265706f     L && !PageProper
80023d28:	70287974 26202930 726e2026 6572665f     ty(p0) && nr_fre
80023d38:	61705f65 28736567 3d3d2029 00003220     e_pages() == 2..
80023d48:	20317028 6c61203d 5f636f6c 65676170     (p1 = alloc_page
80023d58:	29322873 3d212029 4c554e20 2626204c     s(2)) != NULL &&
80023d68:	20317020 70203d3d 202b2030 00000036      p1 == p0 + 6...
80023d78:	65676150 706f7250 79747265 29307028     PageProperty(p0)
80023d88:	20262620 3e2d3070 706f7270 79747265      && p0->property
80023d98:	203d3d20 00000031 65676150 706f7250      == 1...PageProp
80023da8:	79747265 20307028 2932202b 20262620     erty(p0 + 2) && 
80023db8:	325b3070 72702e5d 7265706f 3d207974     p0[2].property =
80023dc8:	0030203d 20307028 6c61203d 5f636f6c     = 0.(p0 = alloc_
80023dd8:	65676170 29362873 3d212029 4c554e20     pages(6)) != NUL
80023de8:	0000004c 20317028 6c61203d 5f636f6c     L...(p1 = alloc_
80023df8:	65676170 29322873 3d212029 4c554e20     pages(2)) != NUL
80023e08:	0000004c 65676150 706f7250 79747265     L...PageProperty
80023e18:	29317028 20262620 3e2d3170 706f7270     (p1) && p1->prop
80023e28:	79747265 203d3d20 00000032 20307028     erty == 2...(p0 
80023e38:	6c61203d 5f636f6c 65676170 29382873     = alloc_pages(8)
80023e48:	3d212029 4c554e20 0000004c 6f6c6c61     ) != NULL...allo
80023e58:	61705f63 29286567 203d3d20 4c4c554e     c_page() == NULL
80023e68:	20262620 665f726e 5f656572 65676170      && nr_free_page
80023e78:	20292873 30203d3d 00000000 6e756f63     s() == 0....coun
80023e88:	3d3d2074 00003020 61746f74 3d3d206c     t == 0..total ==
80023e98:	00003020 67617028 64695f65 20262078      0..(page_idx & 
80023ea8:	20312828 6f203c3c 72656472 202d2029     ((1 << order) - 
80023eb8:	20292931 30203d3d 00000000 67615021     1)) == 0....!Pag
80023ec8:	73655265 65767265 29702864 20262620     eReserved(p) && 
80023ed8:	67615021 6f725065 74726570 29702879     !PageProperty(p)
80023ee8:	00000000 6564726f 3d3c2072 58414d20     ....order <= MAX
80023ef8:	44524f5f 00005245 64647562 6d705f79     _ORDER..buddy_pm
80023f08:	616d5f6d 6567616e 00000072 2d2d2d2d     m_manager...----
80023f18:	2d2d2d2d 2d2d2d2d 2d2d2d2d 47415020     ------------ PAG
80023f28:	69442045 74636572 2079726f 49474542     E Directory BEGI
80023f38:	2d2d204e 2d2d2d2d 2d2d2d2d 2d2d2d2d     N --------------
80023f48:	0d0a2d2d 00000000 28454450 00000000     --......PDE(....
80023f58:	00002029 0000002d 2d7c2020 5450202d     ) ..-...  |-- PT
80023f68:	00002845 2d2d2d2d 2d2d2d2d 2d2d2d2d     E(..------------
80023f78:	2d2d2d2d 47415020 69442045 74636572     ---- PAGE Direct
80023f88:	2079726f 20444e45 2d2d2d2d 2d2d2d2d     ory END --------
80023f98:	2d2d2d2d 2d2d2d2d 0d0a2d2d 00000000     ----------......
80023fa8:	6f6d656d 6d207972 67616e61 6e656d65     memory managemen
80023fb8:	00203a74 6f6d656d 6d207972 0a3a7061     t: .memory map:.
80023fc8:	0000000d 20202020 0078305b 7830202c     ....    [0x., 0x
80023fd8:	00000000 0a0d0a5d 0000000d 65657266     ....].......free
80023fe8:	206d656d 72617473 74612074 0a78253a     mem start at:%x.
80023ff8:	0000000d 6765626d 3c206e69 6e656d20     ....mbegin < men
80024008:	00000064 65657266 67617020 203a7365     d...free pages: 
80024018:	00000000 65676170 72747320 75746375     ....page structu
80024028:	73206572 3a657a69 00000020 63656863     re size: ...chec
80024038:	6c615f6b 5f636f6c 65676170 73202928     k_alloc_page() s
80024048:	65636375 64656465 000d0a21 746f6f62     ucceeded!...boot
80024058:	6c6c615f 705f636f 20656761 6c696166     _alloc_page fail
80024068:	0a2e6465 0000000d 6761706e 3d3c2065     ed......npage <=
80024078:	454d4b20 5a49534d 202f2045 49534750      KMEMSIZE / PGSI
80024088:	0000455a 746f6f62 6467705f 21207269     ZE..boot_pgdir !
80024098:	554e203d 26204c4c 75282026 33746e69     = NULL && (uint3
800240a8:	29745f32 4f475020 62284646 5f746f6f     2_t) PGOFF(boot_
800240b8:	69646770 3d202972 0030203d 5f746567     pgdir) == 0.get_
800240c8:	65676170 6f6f6228 67705f74 2c726964     page(boot_pgdir,
800240d8:	30783020 554e202c 20294c4c 4e203d3d      0x0, NULL) == N
800240e8:	004c4c55 65676170 736e695f 28747265     ULL.page_insert(
800240f8:	746f6f62 6467705f 202c7269 202c3170     boot_pgdir, p1, 
80024108:	2c307830 20293020 30203d3d 00000000     0x0, 0) == 0....
80024118:	65747028 203d2070 5f746567 28657470     (ptep = get_pte(
80024128:	746f6f62 6467705f 202c7269 2c307830     boot_pgdir, 0x0,
80024138:	29293020 203d2120 4c4c554e 00000000      0)) != NULL....
80024148:	70326170 28656761 6574702a 3d202970     pa2page(*ptep) =
80024158:	3170203d 00000000 65676170 6665725f     = p1....page_ref
80024168:	29317028 203d3d20 00000031 5f746567     (p1) == 1...get_
80024178:	28657470 746f6f62 6467705f 202c7269     pte(boot_pgdir, 
80024188:	49534750 202c455a 3d202930 7470203d     PGSIZE, 0) == pt
80024198:	00007065 65676170 736e695f 28747265     ep..page_insert(
800241a8:	746f6f62 6467705f 202c7269 202c3270     boot_pgdir, p2, 
800241b8:	49534750 202c455a 5f455450 207c2055     PGSIZE, PTE_U | 
800241c8:	5f455450 3d202957 0030203d 65747028     PTE_W) == 0.(pte
800241d8:	203d2070 5f746567 28657470 746f6f62     p = get_pte(boot
800241e8:	6467705f 202c7269 49534750 202c455a     _pgdir, PGSIZE, 
800241f8:	20292930 4e203d21 004c4c55 6574702a     0)) != NULL.*pte
80024208:	20262070 5f455450 00000055 6574702a     p & PTE_U...*pte
80024218:	20262070 5f455450 00000057 746f6f62     p & PTE_W...boot
80024228:	6467705f 305b7269 2026205d 5f455450     _pgdir[0] & PTE_
80024238:	00000055 65676170 6665725f 29327028     U...page_ref(p2)
80024248:	203d3d20 00000031 65676170 736e695f      == 1...page_ins
80024258:	28747265 746f6f62 6467705f 202c7269     ert(boot_pgdir, 
80024268:	202c3170 49534750 202c455a 3d202930     p1, PGSIZE, 0) =
80024278:	0030203d 65676170 6665725f 29317028     = 0.page_ref(p1)
80024288:	203d3d20 00000032 65676170 6665725f      == 2...page_ref
80024298:	29327028 203d3d20 00000030 74702a28     (p2) == 0...(*pt
800242a8:	26207065 45545020 2029555f 30203d3d     ep & PTE_U) == 0
800242b8:	00000000 65676170 6665725f 29317028     ....page_ref(p1)
800242c8:	203d3d20 00000030 65676170 6665725f      == 0...page_ref
800242d8:	32617028 65676170 6f6f6228 67705f74     (pa2page(boot_pg
800242e8:	5b726964 29295d30 203d3d20 00000031     dir[0])) == 1...
800242f8:	63656863 67705f6b 28726964 75732029     check_pgdir() su
80024308:	65656363 21646564 00000d0a 65676170     cceeded!....page
80024318:	736e695f 28747265 746f6f62 6467705f     _insert(boot_pgd
80024328:	202c7269 30202c70 30303178 5450202c     ir, p, 0x100, PT
80024338:	29575f45 203d3d20 00000030 65676170     E_W) == 0...page
80024348:	6665725f 20297028 31203d3d 00000000     _ref(p) == 1....
80024358:	65676170 736e695f 28747265 746f6f62     page_insert(boot
80024368:	6467705f 202c7269 30202c70 30303178     _pgdir, p, 0x100
80024378:	50202b20 5a495347 50202c45 575f4554      + PGSIZE, PTE_W
80024388:	3d3d2029 00003020 65676170 6665725f     ) == 0..page_ref
80024398:	20297028 32203d3d 00000000 6e69282a     (p) == 2....*(in
800243a8:	292a2074 30317830 3d3d2030 31783020     t *)0x100 == 0x1
800243b8:	00343332 63727473 2828706d 64696f76     234.strcmp((void
800243c8:	30292a20 30303178 7628202c 2064696f      *)0x100, (void 
800243d8:	3028292a 30303178 50202b20 5a495347     *)(0x100 + PGSIZ
800243e8:	20292945 30203d3d 00000000 6c727473     E)) == 0....strl
800243f8:	28286e65 736e6f63 68632074 2a207261     en((const char *
80024408:	31783029 20293030 30203d3d 00000000     )0x100) == 0....
80024418:	63656863 6f625f6b 705f746f 72696467     check_boot_pgdir
80024428:	73202928 65636375 64656465 000d0a21     () succeeded!...
80024438:	6e207325 6920746f 656c706d 746e656d     %s not implement
80024448:	79206465 002e7465 33323130 37363534     ed yet..01234567
80024458:	42413938 46454443 00000000 63737973     89ABCDEF....sysc
80024468:	2e6c6c61 00000063 65646e75 656e6966     all.c...undefine
80024478:	79732064 6c616373 6425206c 6970202c     d syscall %d, pi
80024488:	203d2064 202c6425 656d616e 25203d20     d = %d, name = %
80024498:	000a2e73 632e706d 00000000 00002420     s...mp.c.... $..
800244a8:	00203a09 6e6b6e55 006e776f 70617274     .: .Unknown.trap
800244b8:	6d617266 74612065 00000020 24200a0d     frame at ..... $
800244c8:	203a6172 00000000 42200a0d 41566461     ra: ...... BadVA
800244d8:	0000203a 53200a0d 75746174 00203a73     : .... Status: .
800244e8:	43200a0d 65737561 0000203a 45200a0d     .. Cause: .... E
800244f8:	00204350 72540a0d 69207061 7375206e     PC ...Trap in us
80024508:	6f6d7265 203a6564 00000000 72540d0a     ermode: ......Tr
80024518:	69207061 656b206e 6c656e72 0000203a     ap in kernel: ..
80024528:	70617274 0000632e 72727563 5f746e65     trap.c..current_
80024538:	69646770 3d212072 4c554e20 0000004c     pgdir != NULL...
80024548:	72727563 20746e65 69203d3d 70656c64     current == idlep
80024558:	00636f72 61686e75 656c646e 61702064     roc.unhandled pa
80024568:	66206567 746c7561 000d0a2e 61686e75     ge fault....unha
80024578:	656c646e 67702064 6c756166 00000074     ndled pgfault...
80024588:	314d4f43 00000d0a 6e6b6e55 206e776f     COM1....Unknown 
80024598:	65746e69 70757272 00002174 3a78255b     interrupt!..[%x:
800245a8:	0a5d7825 0000000d 20796568 216e616d     %x].....hey man!
800245b8:	206f4420 20544f4e 20657375 74616874      Do NOT use that
800245c8:	736e6920 6920216e 3d6e736e 00007825      insn! insn=%x..
800245d8:	67696c41 6e656d6e 72452074 00726f72     Alignment Error.
800245e8:	61686e55 656c646e 78452064 74706563     Unhandled Except
800245f8:	006e6f69 65746e49 70757272 00000074     ion.Interrupt...
80024608:	20424c54 69646f4d 00007966 20424c54     TLB Modify..TLB 
80024618:	7373696d 206e6f20 64616f6c 00000000     miss on load....
80024628:	20424c54 7373696d 206e6f20 726f7473     TLB miss on stor
80024638:	00000065 72646441 20737365 6f727265     e...Address erro
80024648:	6e6f2072 616f6c20 00000064 72646441     r on load...Addr
80024658:	20737365 6f727265 6e6f2072 6f747320     ess error on sto
80024668:	00006572 20737542 6f727265 6e6f2072     re..Bus error on
80024678:	736e6920 63757274 6e6f6974 74656620      instruction fet
80024688:	00006863 20737542 6f727265 6e6f2072     ch..Bus error on
80024698:	74616420 6f6c2061 6f206461 74732072      data load or st
800246a8:	0065726f 63737953 006c6c61 61657242     ore.Syscall.Brea
800246b8:	696f706b 0000746e 65736552 64657672     kpoint..Reserved
800246c8:	6c692820 6167656c 6920296c 7274736e      (illegal) instr
800246d8:	69746375 00006e6f 72706f43 7365636f     uction..Coproces
800246e8:	20726f73 73756e75 656c6261 00000000     sor unusable....
800246f8:	74697241 74656d68 6f206369 66726576     Arithmetic overf
80024708:	00776f6c 00000000 00000000 00000000     low.............
	...

80025000 <__exception_vector>:
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:26
# maybe behavior of gnu/as changed ...?
.set noreorder

.global __exception_vector
__exception_vector:
  RVECENT(ramExcHandle_tlbmiss,0) 
80025000:	1000e98d 00000000 1000e98d 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:28
	RVECENT(ramReserved,1)
	RVECENT(ramReserved,2)
80025010:	1000e98b 00000000 1000e989 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:30
	RVECENT(ramReserved,3)
	RVECENT(ramReserved,4)
80025020:	1000e987 00000000 1000e985 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:32
	RVECENT(ramReserved,5)
	RVECENT(ramReserved,6)
80025030:	1000e983 00000000 1000e981 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:34
	RVECENT(ramReserved,7)
	RVECENT(ramReserved,8)
80025040:	1000e97f 00000000 1000e97d 00000000     ........}.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:36
	RVECENT(ramReserved,9)
	RVECENT(ramReserved,10)
80025050:	1000e97b 00000000 1000e979 00000000     {.......y.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:38
	RVECENT(ramReserved,11)
	RVECENT(ramReserved,12)
80025060:	1000e977 00000000 1000e975 00000000     w.......u.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:40
	RVECENT(ramReserved,13)
	RVECENT(ramReserved,14)
80025070:	1000e973 00000000 1000e971 00000000     s.......q.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:42
	RVECENT(ramReserved,15)
	RVECENT(ramReserved,16)
80025080:	1000e96f 00000000 1000e96d 00000000     o.......m.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:44
	RVECENT(ramReserved,17)
	RVECENT(ramReserved,18)
80025090:	1000e96b 00000000 1000e969 00000000     k.......i.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:46
	RVECENT(ramReserved,19)
	RVECENT(ramReserved,20)
800250a0:	1000e967 00000000 1000e965 00000000     g.......e.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:48
	RVECENT(ramReserved,21)
	RVECENT(ramReserved,22)
800250b0:	1000e963 00000000 1000e961 00000000     c.......a.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:50
	RVECENT(ramReserved,23)
	RVECENT(ramReserved,24)
800250c0:	1000e95f 00000000 1000e95d 00000000     _.......].......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:52
	RVECENT(ramReserved,25)
	RVECENT(ramReserved,26)
800250d0:	1000e95b 00000000 1000e959 00000000     [.......Y.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:54
	RVECENT(ramReserved,27)
	RVECENT(ramReserved,28)
800250e0:	1000e957 00000000 1000e955 00000000     W.......U.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:56
	RVECENT(ramReserved,29)
	RVECENT(ramReserved,30)
800250f0:	1000e953 00000000 1000e951 00000000     S.......Q.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:58
	RVECENT(ramReserved,31)
	XVECENT(ramExcHandle_general, 32) 
80025100:	1000e951 00000000 1000e94d 00000000     Q.......M.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:60
	RVECENT(ramReserved,33)
	RVECENT(ramReserved,34)
80025110:	1000e94b 00000000 1000e949 00000000     K.......I.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:62
	RVECENT(ramReserved,35)
	RVECENT(ramReserved,36)
80025120:	1000e947 00000000 1000e945 00000000     G.......E.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:64
	RVECENT(ramReserved,37)
	RVECENT(ramReserved,38)
80025130:	1000e943 00000000 1000e941 00000000     C.......A.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:66
	RVECENT(ramReserved,39)
	RVECENT(ramReserved,40)
80025140:	1000e93f 00000000 1000e93d 00000000     ?.......=.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:68
	RVECENT(ramReserved,41)
	RVECENT(ramReserved,42)
80025150:	1000e93b 00000000 1000e939 00000000     ;.......9.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:70
	RVECENT(ramReserved,43)
	RVECENT(ramReserved,44)
80025160:	1000e937 00000000 1000e935 00000000     7.......5.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:72
	RVECENT(ramReserved,45)
	RVECENT(ramReserved,46)
80025170:	1000e933 00000000 1000e931 00000000     3.......1.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:74
	RVECENT(ramReserved,47)
  XVECENT(ramExcHandle_general, 0x180) 
80025180:	1000e931 00000000 1000e92d 00000000     1.......-.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:76
	RVECENT(ramReserved,49)
	RVECENT(ramReserved,50)
80025190:	1000e92b 00000000 1000e929 00000000     +.......).......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:78
	RVECENT(ramReserved,51)
	RVECENT(ramReserved,52)
800251a0:	1000e927 00000000 1000e925 00000000     '.......%.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:80
	RVECENT(ramReserved,53)
	RVECENT(ramReserved,54)
800251b0:	1000e923 00000000 1000e921 00000000     #.......!.......
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:82
	RVECENT(ramReserved,55)
	RVECENT(ramReserved,56)
800251c0:	1000e91f 00000000 1000e91d 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:84
	RVECENT(ramReserved,57)
	RVECENT(ramReserved,58)
800251d0:	1000e91b 00000000 1000e919 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:86
	RVECENT(ramReserved,59)
	RVECENT(ramReserved,60)
800251e0:	1000e917 00000000 1000e915 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:88
	RVECENT(ramReserved,61)
	RVECENT(ramReserved,62)
800251f0:	1000e913 00000000 1000e911 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:90
	RVECENT(ramReserved,63)
	RVECENT(ramReserved,64)
80025200:	1000e90f 00000000 1000e90d 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:92
	RVECENT(ramReserved,65)
	RVECENT(ramReserved,66)
80025210:	1000e90b 00000000 1000e909 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:94
	RVECENT(ramReserved,67)
	RVECENT(ramReserved,68)
80025220:	1000e907 00000000 1000e905 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:96
	RVECENT(ramReserved,69)
	RVECENT(ramReserved,70)
80025230:	1000e903 00000000 1000e901 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:98
	RVECENT(ramReserved,71)
	RVECENT(ramReserved,72)
80025240:	1000e8ff 00000000 1000e8fd 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:100
	RVECENT(ramReserved,73)
	RVECENT(ramReserved,74)
80025250:	1000e8fb 00000000 1000e8f9 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:102
	RVECENT(ramReserved,75)
	RVECENT(ramReserved,76)
80025260:	1000e8f7 00000000 1000e8f5 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:104
	RVECENT(ramReserved,77)
	RVECENT(ramReserved,78)
80025270:	1000e8f3 00000000 1000e8f1 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:106
	RVECENT(ramReserved,79)
	RVECENT(ramReserved,80)
80025280:	1000e8ef 00000000 1000e8ed 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:108
	RVECENT(ramReserved,81)
	RVECENT(ramReserved,82)
80025290:	1000e8eb 00000000 1000e8e9 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:110
	RVECENT(ramReserved,83)
	RVECENT(ramReserved,84)
800252a0:	1000e8e7 00000000 1000e8e5 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:112
	RVECENT(ramReserved,85)
	RVECENT(ramReserved,86)
800252b0:	1000e8e3 00000000 1000e8e1 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:114
	RVECENT(ramReserved,87)
	RVECENT(ramReserved,88)
800252c0:	1000e8df 00000000 1000e8dd 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:116
	RVECENT(ramReserved,89)
	RVECENT(ramReserved,90)
800252d0:	1000e8db 00000000 1000e8d9 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:118
	RVECENT(ramReserved,91)
	RVECENT(ramReserved,92)
800252e0:	1000e8d7 00000000 1000e8d5 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:120
	RVECENT(ramReserved,93)
	RVECENT(ramReserved,94)
800252f0:	1000e8d3 00000000 1000e8d1 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:122
	RVECENT(ramReserved,95)
	RVECENT(ramReserved,96)
80025300:	1000e8cf 00000000 1000e8cd 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:124
	RVECENT(ramReserved,97)
	RVECENT(ramReserved,98)
80025310:	1000e8cb 00000000 1000e8c9 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:126
	RVECENT(ramReserved,99)
	RVECENT(ramReserved,100)
80025320:	1000e8c7 00000000 1000e8c5 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:128
	RVECENT(ramReserved,101)
	RVECENT(ramReserved,102)
80025330:	1000e8c3 00000000 1000e8c1 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:130
	RVECENT(ramReserved,103)
	RVECENT(ramReserved,104)
80025340:	1000e8bf 00000000 1000e8bd 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:132
	RVECENT(ramReserved,105)
	RVECENT(ramReserved,106)
80025350:	1000e8bb 00000000 1000e8b9 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:134
	RVECENT(ramReserved,107)
	RVECENT(ramReserved,108)
80025360:	1000e8b7 00000000 1000e8b5 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:136
	RVECENT(ramReserved,109)
	RVECENT(ramReserved,110)
80025370:	1000e8b3 00000000 1000e8b1 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:138
	RVECENT(ramReserved,111)
	RVECENT(ramReserved,112)
80025380:	1000e8af 00000000 1000e8ad 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:140
	RVECENT(ramReserved,113)
	RVECENT(ramReserved,114)
80025390:	1000e8ab 00000000 1000e8a9 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:142
	RVECENT(ramReserved,115)
	RVECENT(ramReserved,116)
800253a0:	1000e8a7 00000000 1000e8a5 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:144
	RVECENT(ramReserved,116)
	RVECENT(ramReserved,118)
800253b0:	1000e8a3 00000000 1000e8a1 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:146
	RVECENT(ramReserved,119)
	RVECENT(ramReserved,120)
800253c0:	1000e89f 00000000 1000e89d 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:148
	RVECENT(ramReserved,121)
	RVECENT(ramReserved,122)
800253d0:	1000e89b 00000000 1000e899 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:150
	RVECENT(ramReserved,123)
	RVECENT(ramReserved,124)
800253e0:	1000e897 00000000 1000e895 00000000     ................
/home/oslab/os_ucore_mips_m14k/src/kern-ucore/arch/mips/trap/vectors.S:152
	RVECENT(ramReserved,125)
	RVECENT(ramReserved,126)
800253f0:	1000e893 00000000 1000e891 00000000     ................
