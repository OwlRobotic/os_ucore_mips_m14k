
/home/oslab/ucore-mips-standard_2/obj/kernel/ucore-kernel-initrd:     file format elf32-tradlittlemips


Disassembly of section .text:

80001000 <_wrs_kernel_text_start>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:17
.section .startup

#define KSTACKSIZE (4096*2)

kernel_entry:
  b reset
80001000:	10000003 	b	80001010 <reset>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:18
  nop
80001004:	00000000 	nop
	...

80001010 <reset>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:30
	mtc0	$zero, CP0_WATCHLO
	mtc0	$zero, CP0_WATCHHI
#endif

	/* WP(Watch Pending), SW0/1 should be cleared */
	mtc0	$zero, CP0_CAUSE
80001010:	40806800 	mtc0	zero,c0_cause
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:32
  /* clear SR(ERL), which is 1 after reset */
	mtc0	$zero, CP0_STATUS
80001014:	40806000 	mtc0	zero,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:34

  jal 1f
80001018:	0c000409 	jal	80001024 <reset+0x14>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:35
  nop
8000101c:	00000000 	nop
80001020:	8015b440 	lb	s5,-19392(zero)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:38
  .word _gp
1:
  lw $gp, 0($ra)
80001024:	8ffc0000 	lw	gp,0(ra)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:39
  la $sp, bootstacktop
80001028:	3c1d8002 	lui	sp,0x8002
8000102c:	27bd7430 	addiu	sp,sp,29744
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:41
#setup ram exception
  la   $t0, __exception_vector
80001030:	3c088002 	lui	t0,0x8002
80001034:	25085000 	addiu	t0,t0,20480
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:43
#TODO
  mtc0 $t0, $15, 1 
80001038:	40887801 	mtc0	t0,c0_ebase
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:45

  mfc0 $t0, CP0_STATUS
8000103c:	40086000 	mfc0	t0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:46
  li   $t1, ~ST0_BEV
80001040:	3c09ffbf 	lui	t1,0xffbf
80001044:	3529ffff 	ori	t1,t1,0xffff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:47
  and  $t0, $t0, $t1
80001048:	01094024 	and	t0,t0,t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:48
  mtc0 $t0, CP0_STATUS
8000104c:	40886000 	mtc0	t0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:51

#zero bss
  la $t0, edata
80001050:	3c088015 	lui	t0,0x8015
80001054:	25083450 	addiu	t0,t0,13392
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:52
  la $t1, end
80001058:	3c098015 	lui	t1,0x8015
8000105c:	252977c0 	addiu	t1,t1,30656
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:55
  
2:
  sw $zero, 0($t0)
80001060:	ad000000 	sw	zero,0(t0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:56
  addiu $t0, $t0, 4
80001064:	25080004 	addiu	t0,t0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:57
  slt $t3, $t0, $t1
80001068:	0109582a 	slt	t3,t0,t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:58
  bgtz $t3, 2b
8000106c:	1d60fffc 	bgtz	t3,80001060 <reset+0x50>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:59
  nop 
80001070:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:61

  addiu $sp, $sp, -16
80001074:	27bdfff0 	addiu	sp,sp,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:62
  la $t9, kern_init 
80001078:	3c198002 	lui	t9,0x8002
8000107c:	2739bbb0 	addiu	t9,t9,-17488
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:63
  jal $t9
80001080:	0320f809 	jalr	t9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:64
  nop
80001084:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:66
#never here
  bgez $zero, .
80001088:	0401ffff 	b	80001088 <reset+0x78>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:67
  nop
8000108c:	00000000 	nop

80001090 <romExcHandle_280>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:72


# bfc00280: R4000 xtlbmiss vector
romExcHandle_280:
  b romExcHandle_280
80001090:	1000ffff 	b	80001090 <romExcHandle_280>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:73
  nop
80001094:	00000000 	nop

80001098 <romExcHandle_300>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:77

# bfc00300: R4000 cache vector
romExcHandle_300:
  b romExcHandle_300
80001098:	1000ffff 	b	80001098 <romExcHandle_300>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/entry.S:78
  nop
8000109c:	00000000 	nop

800010a0 <db_sched>:
db_sched():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:27
static int sched_info_head[8];
static int sched_slices[8][SLICEPOOL_SIZE];
int sched_collect_info = 1;

void db_sched(int lines)
{
800010a0:	27bdffd0 	addiu	sp,sp,-48
800010a4:	afb40020 	sw	s4,32(sp)
800010a8:	0080a021 	move	s4,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:28
	kprintf("\n");
800010ac:	3c048002 	lui	a0,0x8002
800010b0:	24843f4c 	addiu	a0,a0,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:27
static int sched_info_head[8];
static int sched_slices[8][SLICEPOOL_SIZE];
int sched_collect_info = 1;

void db_sched(int lines)
{
800010b4:	afb10014 	sw	s1,20(sp)
800010b8:	afbf002c 	sw	ra,44(sp)
800010bc:	afb60028 	sw	s6,40(sp)
800010c0:	afb50024 	sw	s5,36(sp)
800010c4:	afb3001c 	sw	s3,28(sp)
800010c8:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:28
	kprintf("\n");
800010cc:	0c007aa6 	jal	8001ea98 <kprintf>
800010d0:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:30

	int lcpu_count = pls_read(lcpu_count);
800010d4:	3c028015 	lui	v0,0x8015
800010d8:	8c5177a0 	lw	s1,30624(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:33
	int i, j, k;
	/* Print a header */
	kprintf("        ");
800010dc:	3c048002 	lui	a0,0x8002
800010e0:	0c007aa6 	jal	8001ea98 <kprintf>
800010e4:	24840de4 	addiu	a0,a0,3556
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:34
	for (i = 0; i < lcpu_count; i++)
800010e8:	1a200009 	blez	s1,80001110 <db_sched+0x70>
800010ec:	3c128002 	lui	s2,0x8002
800010f0:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:35
		kprintf("|    CPU%d    ", i);
800010f4:	26520df0 	addiu	s2,s2,3568
800010f8:	02002821 	move	a1,s0
800010fc:	02402021 	move	a0,s2
80001100:	0c007aa6 	jal	8001ea98 <kprintf>
80001104:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:34

	int lcpu_count = pls_read(lcpu_count);
	int i, j, k;
	/* Print a header */
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
80001108:	1611fffc 	bne	s0,s1,800010fc <db_sched+0x5c>
8000110c:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:36
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
80001110:	3c158002 	lui	s5,0x8002
80001114:	0c007aa6 	jal	8001ea98 <kprintf>
80001118:	26a4476c 	addiu	a0,s5,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:38
	/* Print the table */
	for (i = 0; i < lines; i++) {
8000111c:	1a800018 	blez	s4,80001180 <db_sched+0xe0>
80001120:	3c168002 	lui	s6,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:44
		kprintf(" %4d ", i);
		for (k = 0; k < lcpu_count; k++) {
			j = sched_info_head[k] - i;
			if (j < 0)
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
80001124:	3c128002 	lui	s2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:38
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
80001128:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:39
		kprintf(" %4d ", i);
8000112c:	26d60e00 	addiu	s6,s6,3584
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:44
		for (k = 0; k < lcpu_count; k++) {
			j = sched_info_head[k] - i;
			if (j < 0)
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
80001130:	26520e08 	addiu	s2,s2,3592
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:48
				sched_info_pid[j * lcpu_count + k],
				sched_info_times[j * lcpu_count + k]);
		}
		kprintf("\n\r");
80001134:	26b5476c 	addiu	s5,s5,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:39
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
		kprintf(" %4d ", i);
80001138:	02c02021 	move	a0,s6
8000113c:	0c007aa6 	jal	8001ea98 <kprintf>
80001140:	02602821 	move	a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:40
		for (k = 0; k < lcpu_count; k++) {
80001144:	5a20000a 	blezl	s1,80001170 <db_sched+0xd0>
80001148:	26730001 	addiu	s3,s3,1
8000114c:	00008021 	move	s0,zero
80001150:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:44
			j = sched_info_head[k] - i;
			if (j < 0)
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
80001154:	02402021 	move	a0,s2
80001158:	00002821 	move	a1,zero
8000115c:	0c007aa6 	jal	8001ea98 <kprintf>
80001160:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:40
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
		kprintf(" %4d ", i);
		for (k = 0; k < lcpu_count; k++) {
80001164:	5611fffb 	bnel	s0,s1,80001154 <db_sched+0xb4>
80001168:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:38
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
8000116c:	26730001 	addiu	s3,s3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:48
				j += PGSIZE / sizeof(uint16_t) / lcpu_count;
			kprintf("  %4d(%4d) ",
				sched_info_pid[j * lcpu_count + k],
				sched_info_times[j * lcpu_count + k]);
		}
		kprintf("\n\r");
80001170:	0c007aa6 	jal	8001ea98 <kprintf>
80001174:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:38
	kprintf("        ");
	for (i = 0; i < lcpu_count; i++)
		kprintf("|    CPU%d    ", i);
	kprintf("\n\r");
	/* Print the table */
	for (i = 0; i < lines; i++) {
80001178:	5674fff0 	bnel	s3,s4,8000113c <db_sched+0x9c>
8000117c:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:50
				sched_info_pid[j * lcpu_count + k],
				sched_info_times[j * lcpu_count + k]);
		}
		kprintf("\n\r");
	}
}
80001180:	8fbf002c 	lw	ra,44(sp)
80001184:	8fb60028 	lw	s6,40(sp)
80001188:	8fb50024 	lw	s5,36(sp)
8000118c:	8fb40020 	lw	s4,32(sp)
80001190:	8fb3001c 	lw	s3,28(sp)
80001194:	8fb20018 	lw	s2,24(sp)
80001198:	8fb10014 	lw	s1,20(sp)
8000119c:	8fb00010 	lw	s0,16(sp)
800011a0:	03e00008 	jr	ra
800011a4:	27bd0030 	addiu	sp,sp,48

800011a8 <db_time>:
db_time():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:54

void db_time(uint16_t left, uint16_t right)
{
	kprintf("\n\r");
800011a8:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:53
		kprintf("\n\r");
	}
}

void db_time(uint16_t left, uint16_t right)
{
800011ac:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:54
	kprintf("\n\r");
800011b0:	2484476c 	addiu	a0,a0,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:53
		kprintf("\n\r");
	}
}

void db_time(uint16_t left, uint16_t right)
{
800011b4:	afb10014 	sw	s1,20(sp)
800011b8:	afbf0024 	sw	ra,36(sp)
800011bc:	afb40020 	sw	s4,32(sp)
800011c0:	afb3001c 	sw	s3,28(sp)
800011c4:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:54
	kprintf("\n\r");
800011c8:	0c007aa6 	jal	8001ea98 <kprintf>
800011cc:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:56

	int lcpu_count = pls_read(lcpu_count);
800011d0:	3c028015 	lui	v0,0x8015
800011d4:	8c5177a0 	lw	s1,30624(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:58
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
800011d8:	1a200013 	blez	s1,80001228 <db_time+0x80>
800011dc:	3c148002 	lui	s4,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:66
		for (j = 0; j < total; j++) {
			uint16_t pid = sched_info_pid[j * lcpu_count + i];
			if (pid >= left && pid <= right)
				sum += sched_info_times[j * lcpu_count + i];
		}
		kprintf("%4d", sum);
800011e0:	3c138002 	lui	s3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:70
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
800011e4:	3c128002 	lui	s2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:58
{
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
800011e8:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:59
		kprintf("On CPU%d: ", i);
800011ec:	26940e14 	addiu	s4,s4,3604
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:66
		for (j = 0; j < total; j++) {
			uint16_t pid = sched_info_pid[j * lcpu_count + i];
			if (pid >= left && pid <= right)
				sum += sched_info_times[j * lcpu_count + i];
		}
		kprintf("%4d", sum);
800011f0:	26730e20 	addiu	s3,s3,3616
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:70
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
800011f4:	26520e24 	addiu	s2,s2,3620
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:59
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
		kprintf("On CPU%d: ", i);
800011f8:	02002821 	move	a1,s0
800011fc:	0c007aa6 	jal	8001ea98 <kprintf>
80001200:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:66
		for (j = 0; j < total; j++) {
			uint16_t pid = sched_info_pid[j * lcpu_count + i];
			if (pid >= left && pid <= right)
				sum += sched_info_times[j * lcpu_count + i];
		}
		kprintf("%4d", sum);
80001204:	02602021 	move	a0,s3
80001208:	0c007aa6 	jal	8001ea98 <kprintf>
8000120c:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:58
{
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
80001210:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:70
		}
		kprintf("%4d", sum);
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
80001214:	02402021 	move	a0,s2
80001218:	0c007aa6 	jal	8001ea98 <kprintf>
8000121c:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:58
{
	kprintf("\n\r");

	int lcpu_count = pls_read(lcpu_count);
	int i, j;
	for (i = 0; i < lcpu_count; i++) {
80001220:	5611fff6 	bnel	s0,s1,800011fc <db_time+0x54>
80001224:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:72
		sum = 0;
		for (j = left; j <= right; j++)
			sum += sched_slices[i][j % SLICEPOOL_SIZE];
		kprintf("(%4d)\n\r", sum);
	}
}
80001228:	8fbf0024 	lw	ra,36(sp)
8000122c:	8fb40020 	lw	s4,32(sp)
80001230:	8fb3001c 	lw	s3,28(sp)
80001234:	8fb20018 	lw	s2,24(sp)
80001238:	8fb10014 	lw	s1,20(sp)
8000123c:	8fb00010 	lw	s0,16(sp)
80001240:	03e00008 	jr	ra
80001244:	27bd0028 	addiu	sp,sp,40

80001248 <sched_init>:
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001248:	3c038015 	lui	v1,0x8015
8000124c:	24623450 	addiu	v0,v1,13392
sched_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:111
}

static struct run_queue __rq[4];

void sched_init(void)
{
80001250:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:114
	list_init(&timer_list);

	rq = __rq;
80001254:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:111
}

static struct run_queue __rq[4];

void sched_init(void)
{
80001258:	afbf0014 	sw	ra,20(sp)
8000125c:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:114
	list_init(&timer_list);

	rq = __rq;
80001260:	2484345c 	addiu	a0,a0,13404
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80001264:	ac420004 	sw	v0,4(v0)
80001268:	ac623450 	sw	v0,13392(v1)
sched_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:114
8000126c:	3c028015 	lui	v0,0x8015
80001270:	ac443458 	sw	a0,13400(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:116
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;
80001274:	24020008 	li	v0,8
80001278:	ac82000c 	sw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:119

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
8000127c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:120
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
80001280:	000218c0 	sll	v1,v0,0x3
80001284:	00024940 	sll	t1,v0,0x5
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80001288:	3c088015 	lui	t0,0x8015
sched_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:120
8000128c:	01231823 	subu	v1,t1,v1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80001290:	2508346c 	addiu	t0,t0,13420
sched_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:116
{
	list_init(&timer_list);

	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;
80001294:	3c058015 	lui	a1,0x8015
80001298:	24070008 	li	a3,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:120

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
8000129c:	24630010 	addiu	v1,v1,16
800012a0:	00831821 	addu	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:116
{
	list_init(&timer_list);

	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;
800012a4:	24a53480 	addiu	a1,a1,13440
800012a8:	01003021 	move	a2,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:121

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
800012ac:	00473804 	sllv	a3,a3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012b0:	240a0004 	li	t2,4
800012b4:	24420001 	addiu	v0,v0,1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
800012b8:	ac880014 	sw	t0,20(a0)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800012bc:	ac830010 	sw	v1,16(a0)
800012c0:	acc30004 	sw	v1,4(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
800012c4:	ac660000 	sw	a2,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800012c8:	ac680004 	sw	t0,4(v1)
sched_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:121
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
800012cc:	aca70000 	sw	a3,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012d0:	104a0011 	beq	v0,t2,80001318 <sched_init+0xd0>
800012d4:	24a50018 	addiu	a1,a1,24
800012d8:	8c87000c 	lw	a3,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:120
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
800012dc:	000218c0 	sll	v1,v0,0x3
800012e0:	00024940 	sll	t1,v0,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012e4:	8c860010 	lw	a2,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:120
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
800012e8:	01231823 	subu	v1,t1,v1
800012ec:	24630010 	addiu	v1,v1,16
800012f0:	00831821 	addu	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:121
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
800012f4:	00473804 	sllv	a3,a3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
800012f8:	24420001 	addiu	v0,v0,1
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800012fc:	ac830010 	sw	v1,16(a0)
80001300:	acc30004 	sw	v1,4(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001304:	ac660000 	sw	a2,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80001308:	ac680004 	sw	t0,4(v1)
sched_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:121
		list_add_before(&(rq->rq_link), &(__rq[i].rq_link));
		__rq[i].max_time_slice = rq->max_time_slice * (1 << i);
8000130c:	aca70000 	sw	a3,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:119
	rq = __rq;
	list_init(&(rq->rq_link));
	rq->max_time_slice = 8;

	int i;
	for (i = 1; i < sizeof(__rq) / sizeof(__rq[0]); i++) {
80001310:	144afff1 	bne	v0,t2,800012d8 <sched_init+0x90>
80001314:	24a50018 	addiu	a1,a1,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:127
	}

#ifdef UCONFIG_SCHEDULER_MLFQ
	sched_class = &MLFQ_sched_class;
#else
	sched_class = &RR_sched_class;
80001318:	3c038002 	lui	v1,0x8002
8000131c:	24635404 	addiu	v1,v1,21508
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:129
#endif
	sched_class->init(rq);
80001320:	8c620004 	lw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:127
	}

#ifdef UCONFIG_SCHEDULER_MLFQ
	sched_class = &MLFQ_sched_class;
#else
	sched_class = &RR_sched_class;
80001324:	3c108015 	lui	s0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:129
#endif
	sched_class->init(rq);
80001328:	0040f809 	jalr	v0
8000132c:	ae0334bc 	sw	v1,13500(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:131

	kprintf("sched class: %s\n\r", sched_class->name);
80001330:	8e0234bc 	lw	v0,13500(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:132
}
80001334:	8fbf0014 	lw	ra,20(sp)
80001338:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:131
#else
	sched_class = &RR_sched_class;
#endif
	sched_class->init(rq);

	kprintf("sched class: %s\n\r", sched_class->name);
8000133c:	8c450000 	lw	a1,0(v0)
80001340:	3c048002 	lui	a0,0x8002
80001344:	24840e2c 	addiu	a0,a0,3628
80001348:	08007aa6 	j	8001ea98 <kprintf>
8000134c:	27bd0018 	addiu	sp,sp,24

80001350 <stop_proc>:
stop_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:135
}

void stop_proc(struct proc_struct *proc, uint32_t wait)
{
80001350:	27bdffd8 	addiu	sp,sp,-40
80001354:	afb0001c 	sw	s0,28(sp)
80001358:	afbf0024 	sw	ra,36(sp)
8000135c:	afb10020 	sw	s1,32(sp)
80001360:	00808021 	move	s0,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001364:	40026000 	mfc0	v0,c0_status
80001368:	30420001 	andi	v0,v0,0x1
8000136c:	10400005 	beqz	v0,80001384 <stop_proc+0x34>
80001370:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80001374:	0c006d0c 	jal	8001b430 <intr_disable>
80001378:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8000137c:	8fa50010 	lw	a1,16(sp)
80001380:	24110001 	li	s1,1
stop_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:140
	bool intr_flag;
	local_intr_save(intr_flag);
	proc->state = PROC_SLEEPING;
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
80001384:	8e0300a4 	lw	v1,164(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:138

void stop_proc(struct proc_struct *proc, uint32_t wait)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	proc->state = PROC_SLEEPING;
80001388:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:140
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
8000138c:	260200a0 	addiu	v0,s0,160
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:138

void stop_proc(struct proc_struct *proc, uint32_t wait)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	proc->state = PROC_SLEEPING;
80001390:	ae040000 	sw	a0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:140
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
80001394:	10620008 	beq	v1,v0,800013b8 <stop_proc+0x68>
80001398:	ae050084 	sw	a1,132(s0)
sched_class_dequeue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:91
	}
}

static inline void sched_class_dequeue(struct proc_struct *proc)
{
	sched_class->dequeue(rq, proc);
8000139c:	3c028015 	lui	v0,0x8015
800013a0:	8c4234bc 	lw	v0,13500(v0)
800013a4:	3c038015 	lui	v1,0x8015
800013a8:	8c643458 	lw	a0,13400(v1)
800013ac:	8c42000c 	lw	v0,12(v0)
800013b0:	0040f809 	jalr	v0
800013b4:	02002821 	move	a1,s0
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800013b8:	16200005 	bnez	s1,800013d0 <stop_proc+0x80>
800013bc:	8fbf0024 	lw	ra,36(sp)
stop_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:144
	proc->wait_state = wait;
	if (!list_empty(&(proc->run_link))) {
		sched_class_dequeue(proc);
	}
	local_intr_restore(intr_flag);
}
800013c0:	8fb10020 	lw	s1,32(sp)
800013c4:	8fb0001c 	lw	s0,28(sp)
800013c8:	03e00008 	jr	ra
800013cc:	27bd0028 	addiu	sp,sp,40
800013d0:	8fb10020 	lw	s1,32(sp)
800013d4:	8fb0001c 	lw	s0,28(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800013d8:	08006d08 	j	8001b420 <intr_enable>
800013dc:	27bd0028 	addiu	sp,sp,40

800013e0 <wakeup_proc>:
wakeup_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:148

void wakeup_proc(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
800013e0:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:147
	}
	local_intr_restore(intr_flag);
}

void wakeup_proc(struct proc_struct *proc)
{
800013e4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:148
	assert(proc->state != PROC_ZOMBIE);
800013e8:	24030003 	li	v1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:147
	}
	local_intr_restore(intr_flag);
}

void wakeup_proc(struct proc_struct *proc)
{
800013ec:	afbf001c 	sw	ra,28(sp)
800013f0:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:148
	assert(proc->state != PROC_ZOMBIE);
800013f4:	1043002f 	beq	v0,v1,800014b4 <wakeup_proc+0xd4>
800013f8:	00802821 	move	a1,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800013fc:	40036000 	mfc0	v1,c0_status
80001400:	30630001 	andi	v1,v1,0x1
80001404:	10600006 	beqz	v1,80001420 <wakeup_proc+0x40>
80001408:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000140c:	0c006d0c 	jal	8001b430 <intr_disable>
80001410:	afa40010 	sw	a0,16(sp)
80001414:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80001418:	24100001 	li	s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000141c:	8ca20000 	lw	v0,0(a1)
wakeup_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:152
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
80001420:	24030002 	li	v1,2
80001424:	1043001b 	beq	v0,v1,80001494 <wakeup_proc+0xb4>
80001428:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:155
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
			if (proc != current) {
8000142c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:154
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
80001430:	aca00084 	sw	zero,132(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:155
			if (proc != current) {
80001434:	10a2000f 	beq	a1,v0,80001474 <wakeup_proc+0x94>
80001438:	aca30000 	sw	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:156
				assert(proc->pid >= pls_read(lcpu_count));
8000143c:	3c028015 	lui	v0,0x8015
80001440:	8ca30004 	lw	v1,4(a1)
80001444:	8c4277a0 	lw	v0,30624(v0)
80001448:	0062102a 	slt	v0,v1,v0
8000144c:	14400021 	bnez	v0,800014d4 <wakeup_proc+0xf4>
80001450:	3c028015 	lui	v0,0x8015
sched_class_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
80001454:	8c4277a8 	lw	v0,30632(v0)
80001458:	10a20006 	beq	a1,v0,80001474 <wakeup_proc+0x94>
8000145c:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
80001460:	8c4234bc 	lw	v0,13500(v0)
80001464:	3c038015 	lui	v1,0x8015
80001468:	8c420008 	lw	v0,8(v0)
8000146c:	0040f809 	jalr	v0
80001470:	8c643458 	lw	a0,13400(v1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001474:	16000004 	bnez	s0,80001488 <wakeup_proc+0xa8>
80001478:	8fbf001c 	lw	ra,28(sp)
wakeup_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:164
		} else {
			warn("wakeup runnable process.\n\r");
		}
	}
	local_intr_restore(intr_flag);
}
8000147c:	8fb00018 	lw	s0,24(sp)
80001480:	03e00008 	jr	ra
80001484:	27bd0020 	addiu	sp,sp,32
80001488:	8fb00018 	lw	s0,24(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000148c:	08006d08 	j	8001b420 <intr_enable>
80001490:	27bd0020 	addiu	sp,sp,32
wakeup_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:160
			if (proc != current) {
				assert(proc->pid >= pls_read(lcpu_count));
				sched_class_enqueue(proc);
			}
		} else {
			warn("wakeup runnable process.\n\r");
80001494:	3c048002 	lui	a0,0x8002
80001498:	3c068002 	lui	a2,0x8002
8000149c:	24840e40 	addiu	a0,a0,3648
800014a0:	240500a0 	li	a1,160
800014a4:	0c006b33 	jal	8001accc <__warn>
800014a8:	24c60ea0 	addiu	a2,a2,3744
800014ac:	0800051d 	j	80001474 <wakeup_proc+0x94>
800014b0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:148
	local_intr_restore(intr_flag);
}

void wakeup_proc(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
800014b4:	3c048002 	lui	a0,0x8002
800014b8:	3c068002 	lui	a2,0x8002
800014bc:	3c078002 	lui	a3,0x8002
800014c0:	24840e40 	addiu	a0,a0,3648
800014c4:	24050094 	li	a1,148
800014c8:	24c60e48 	addiu	a2,a2,3656
800014cc:	0c006b13 	jal	8001ac4c <__panic>
800014d0:	24e70e60 	addiu	a3,a3,3680
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:156
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
			if (proc != current) {
				assert(proc->pid >= pls_read(lcpu_count));
800014d4:	3c048002 	lui	a0,0x8002
800014d8:	3c068002 	lui	a2,0x8002
800014dc:	3c078002 	lui	a3,0x8002
800014e0:	24840e40 	addiu	a0,a0,3648
800014e4:	2405009c 	li	a1,156
800014e8:	24c60e48 	addiu	a2,a2,3656
800014ec:	0c006b13 	jal	8001ac4c <__panic>
800014f0:	24e70e7c 	addiu	a3,a3,3708

800014f4 <try_to_wakeup>:
try_to_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:168
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
800014f4:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:167
	}
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
800014f8:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:168
	assert(proc->state != PROC_ZOMBIE);
800014fc:	24030003 	li	v1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:167
	}
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
80001500:	afb0001c 	sw	s0,28(sp)
80001504:	afbf003c 	sw	ra,60(sp)
80001508:	afb70038 	sw	s7,56(sp)
8000150c:	afb60034 	sw	s6,52(sp)
80001510:	afb50030 	sw	s5,48(sp)
80001514:	afb4002c 	sw	s4,44(sp)
80001518:	afb30028 	sw	s3,40(sp)
8000151c:	afb20024 	sw	s2,36(sp)
80001520:	afb10020 	sw	s1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:168
	assert(proc->state != PROC_ZOMBIE);
80001524:	1043004d 	beq	v0,v1,8000165c <try_to_wakeup+0x168>
80001528:	00808021 	move	s0,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000152c:	40036000 	mfc0	v1,c0_status
80001530:	30630001 	andi	v1,v1,0x1
80001534:	10600004 	beqz	v1,80001548 <try_to_wakeup+0x54>
80001538:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000153c:	0c006d0c 	jal	8001b430 <intr_disable>
80001540:	24130001 	li	s3,1
80001544:	8e020000 	lw	v0,0(s0)
try_to_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:173
	int ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
80001548:	24030002 	li	v1,2
8000154c:	10430011 	beq	v0,v1,80001594 <try_to_wakeup+0xa0>
80001550:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:176
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
			if (proc != current) {
80001554:	3c028015 	lui	v0,0x8015
80001558:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:175
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
			proc->wait_state = 0;
8000155c:	ae000084 	sw	zero,132(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:174
	int ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (proc->state != PROC_RUNNABLE) {
			proc->state = PROC_RUNNABLE;
80001560:	ae030000 	sw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:176
			proc->wait_state = 0;
			if (proc != current) {
80001564:	1202000b 	beq	s0,v0,80001594 <try_to_wakeup+0xa0>
80001568:	24120001 	li	s2,1
sched_class_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
8000156c:	3c028015 	lui	v0,0x8015
80001570:	8c4277a8 	lw	v0,30632(v0)
80001574:	12020007 	beq	s0,v0,80001594 <try_to_wakeup+0xa0>
80001578:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
8000157c:	8c4234bc 	lw	v0,13500(v0)
80001580:	3c038015 	lui	v1,0x8015
80001584:	8c643458 	lw	a0,13400(v1)
80001588:	8c420008 	lw	v0,8(v0)
8000158c:	0040f809 	jalr	v0
80001590:	02002821 	move	a1,s0
try_to_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:184
			ret = 1;
		} else {
			ret = 0;
		}
		struct proc_struct *next = proc;
		while ((next = next_thread(next)) != proc) {
80001594:	02001021 	move	v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:185
			if (next->state == PROC_SLEEPING
80001598:	24110001 	li	s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:189
			    && next->wait_state == WT_SIGNAL) {
				next->state = PROC_RUNNABLE;
				next->wait_state = 0;
				if (next != current) {
8000159c:	3c148015 	lui	s4,0x8015
sched_class_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
800015a0:	3c158015 	lui	s5,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
800015a4:	3c178015 	lui	s7,0x8015
800015a8:	3c168015 	lui	s6,0x8015
try_to_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:184
			ret = 1;
		} else {
			ret = 0;
		}
		struct proc_struct *next = proc;
		while ((next = next_thread(next)) != proc) {
800015ac:	0c004535 	jal	800114d4 <next_thread>
800015b0:	00402021 	move	a0,v0
800015b4:	10500019 	beq	v0,s0,8000161c <try_to_wakeup+0x128>
800015b8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:185
			if (next->state == PROC_SLEEPING
800015bc:	8c430000 	lw	v1,0(v0)
800015c0:	1471fffa 	bne	v1,s1,800015ac <try_to_wakeup+0xb8>
800015c4:	3c038000 	lui	v1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:186
			    && next->wait_state == WT_SIGNAL) {
800015c8:	8c440084 	lw	a0,132(v0)
800015cc:	24630400 	addiu	v1,v1,1024
800015d0:	1483fff6 	bne	a0,v1,800015ac <try_to_wakeup+0xb8>
800015d4:	8e8377a4 	lw	v1,30628(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:187
				next->state = PROC_RUNNABLE;
800015d8:	24040002 	li	a0,2
800015dc:	ac440000 	sw	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:189
				next->wait_state = 0;
				if (next != current) {
800015e0:	1043fff2 	beq	v0,v1,800015ac <try_to_wakeup+0xb8>
800015e4:	ac400084 	sw	zero,132(v0)
sched_class_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
800015e8:	8ea377a8 	lw	v1,30632(s5)
800015ec:	1043ffef 	beq	v0,v1,800015ac <try_to_wakeup+0xb8>
800015f0:	8ee334bc 	lw	v1,13500(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
800015f4:	8ec43458 	lw	a0,13400(s6)
800015f8:	00402821 	move	a1,v0
800015fc:	8c630008 	lw	v1,8(v1)
80001600:	0060f809 	jalr	v1
80001604:	afa20010 	sw	v0,16(sp)
80001608:	8fa20010 	lw	v0,16(sp)
try_to_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:184
			ret = 1;
		} else {
			ret = 0;
		}
		struct proc_struct *next = proc;
		while ((next = next_thread(next)) != proc) {
8000160c:	0c004535 	jal	800114d4 <next_thread>
80001610:	00402021 	move	a0,v0
80001614:	5450ffea 	bnel	v0,s0,800015c0 <try_to_wakeup+0xcc>
80001618:	8c430000 	lw	v1,0(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000161c:	12600004 	beqz	s3,80001630 <try_to_wakeup+0x13c>
80001620:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001624:	0c006d08 	jal	8001b420 <intr_enable>
80001628:	00000000 	nop
try_to_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:197
			}
		}
	}
	local_intr_restore(intr_flag);
	return ret;
}
8000162c:	8fbf003c 	lw	ra,60(sp)
80001630:	02401021 	move	v0,s2
80001634:	8fb70038 	lw	s7,56(sp)
80001638:	8fb60034 	lw	s6,52(sp)
8000163c:	8fb50030 	lw	s5,48(sp)
80001640:	8fb4002c 	lw	s4,44(sp)
80001644:	8fb30028 	lw	s3,40(sp)
80001648:	8fb20024 	lw	s2,36(sp)
8000164c:	8fb10020 	lw	s1,32(sp)
80001650:	8fb0001c 	lw	s0,28(sp)
80001654:	03e00008 	jr	ra
80001658:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:168
	local_intr_restore(intr_flag);
}

int try_to_wakeup(struct proc_struct *proc)
{
	assert(proc->state != PROC_ZOMBIE);
8000165c:	3c048002 	lui	a0,0x8002
80001660:	3c068002 	lui	a2,0x8002
80001664:	3c078002 	lui	a3,0x8002
80001668:	24840e40 	addiu	a0,a0,3648
8000166c:	240500a8 	li	a1,168
80001670:	24c60e48 	addiu	a2,a2,3656
80001674:	0c006b13 	jal	8001ac4c <__panic>
80001678:	24e70e60 	addiu	a3,a3,3680

8000167c <schedule>:
schedule():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:204
#include <vmm.h>

#define MT_SUPPORT

void schedule(void)
{
8000167c:	27bdffd0 	addiu	sp,sp,-48
80001680:	afbf002c 	sw	ra,44(sp)
80001684:	afb30028 	sw	s3,40(sp)
80001688:	afb20024 	sw	s2,36(sp)
8000168c:	afb10020 	sw	s1,32(sp)
80001690:	afb0001c 	sw	s0,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001694:	40026000 	mfc0	v0,c0_status
80001698:	30420001 	andi	v0,v0,0x1
8000169c:	10400003 	beqz	v0,800016ac <schedule+0x30>
800016a0:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800016a4:	0c006d0c 	jal	8001b430 <intr_disable>
800016a8:	24110001 	li	s1,1
schedule():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:209
	bool intr_flag;
	struct proc_struct *next;
	local_intr_save(intr_flag);
	{
        	current->need_resched = 0;
800016ac:	3c108015 	lui	s0,0x8015
800016b0:	8e0577a4 	lw	a1,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:210
        	if (current->state == PROC_RUNNABLE) {
800016b4:	24020002 	li	v0,2
800016b8:	8ca30000 	lw	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:209
{
	bool intr_flag;
	struct proc_struct *next;
	local_intr_save(intr_flag);
	{
        	current->need_resched = 0;
800016bc:	aca00018 	sw	zero,24(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:210
        	if (current->state == PROC_RUNNABLE) {
800016c0:	10620028 	beq	v1,v0,80001764 <schedule+0xe8>
800016c4:	3c138015 	lui	s3,0x8015
800016c8:	3c128015 	lui	s2,0x8015
sched_class_pick_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:96
	sched_class->dequeue(rq, proc);
}

static inline struct proc_struct *sched_class_pick_next(void)
{
	return sched_class->pick_next(rq);
800016cc:	8e6234bc 	lw	v0,13500(s3)
800016d0:	8c420010 	lw	v0,16(v0)
800016d4:	0040f809 	jalr	v0
800016d8:	8e443458 	lw	a0,13400(s2)
schedule():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:213
	{
        	current->need_resched = 0;
        	if (current->state == PROC_RUNNABLE) {
            		sched_class_enqueue(current);
        	}
        	if ((next = sched_class_pick_next()) != NULL) {
800016dc:	1040001e 	beqz	v0,80001758 <schedule+0xdc>
800016e0:	3c038015 	lui	v1,0x8015
sched_class_dequeue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:91
	}
}

static inline void sched_class_dequeue(struct proc_struct *proc)
{
	sched_class->dequeue(rq, proc);
800016e4:	8c6334bc 	lw	v1,13500(v1)
800016e8:	3c048015 	lui	a0,0x8015
800016ec:	8c843458 	lw	a0,13400(a0)
800016f0:	8c63000c 	lw	v1,12(v1)
800016f4:	00402821 	move	a1,v0
800016f8:	0060f809 	jalr	v1
800016fc:	afa20010 	sw	v0,16(sp)
80001700:	8fa20010 	lw	v0,16(sp)
schedule():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:219
            		sched_class_dequeue(next);
       	 	}
        	if (next == NULL) {
           		next = idleproc;
        	}
        	next->runs ++;
80001704:	8c440010 	lw	a0,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:220
        	if (next != current) {
80001708:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:219
            		sched_class_dequeue(next);
       	 	}
        	if (next == NULL) {
           		next = idleproc;
        	}
        	next->runs ++;
8000170c:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:220
        	if (next != current) {
80001710:	10430003 	beq	v0,v1,80001720 <schedule+0xa4>
80001714:	ac440010 	sw	a0,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:225
            		//kprintf("########################\n");
            		//kprintf("c %d TO %d\n", current->pid, next->pid);
           		//print_trapframe(next->tf);
            		//kprintf("@@@@@@@@@@@@@@@@@@@@@@@@\n");
            		proc_run(next);
80001718:	0c003b1a 	jal	8000ec68 <proc_run>
8000171c:	00402021 	move	a0,v0
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001720:	16200007 	bnez	s1,80001740 <schedule+0xc4>
80001724:	8fbf002c 	lw	ra,44(sp)
schedule():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:229
        	}
    	}
    	local_intr_restore(intr_flag);
}
80001728:	8fb30028 	lw	s3,40(sp)
8000172c:	8fb20024 	lw	s2,36(sp)
80001730:	8fb10020 	lw	s1,32(sp)
80001734:	8fb0001c 	lw	s0,28(sp)
80001738:	03e00008 	jr	ra
8000173c:	27bd0030 	addiu	sp,sp,48
80001740:	8fb30028 	lw	s3,40(sp)
80001744:	8fb20024 	lw	s2,36(sp)
80001748:	8fb10020 	lw	s1,32(sp)
8000174c:	8fb0001c 	lw	s0,28(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001750:	08006d08 	j	8001b420 <intr_enable>
80001754:	27bd0030 	addiu	sp,sp,48
schedule():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:217
        	}
        	if ((next = sched_class_pick_next()) != NULL) {
            		sched_class_dequeue(next);
       	 	}
        	if (next == NULL) {
           		next = idleproc;
80001758:	3c028015 	lui	v0,0x8015
8000175c:	080005c1 	j	80001704 <schedule+0x88>
80001760:	8c4277a8 	lw	v0,30632(v0)
sched_class_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:84

static struct run_queue *rq;

static inline void sched_class_enqueue(struct proc_struct *proc)
{
	if (proc != idleproc) {
80001764:	3c028015 	lui	v0,0x8015
80001768:	8c4277a8 	lw	v0,30632(v0)
8000176c:	10a20007 	beq	a1,v0,8000178c <schedule+0x110>
80001770:	8e6234bc 	lw	v0,13500(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:85
		sched_class->enqueue(rq, proc);
80001774:	3c128015 	lui	s2,0x8015
80001778:	8c420008 	lw	v0,8(v0)
8000177c:	0040f809 	jalr	v0
80001780:	8e443458 	lw	a0,13400(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:96
	sched_class->dequeue(rq, proc);
}

static inline struct proc_struct *sched_class_pick_next(void)
{
	return sched_class->pick_next(rq);
80001784:	080005b4 	j	800016d0 <schedule+0x54>
80001788:	8e6234bc 	lw	v0,13500(s3)
8000178c:	080005b3 	j	800016cc <schedule+0x50>
80001790:	3c128015 	lui	s2,0x8015

80001794 <add_timer>:
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:232
    	}
    	local_intr_restore(intr_flag);
}

void add_timer(timer_t * timer)
{
80001794:	27bdffe0 	addiu	sp,sp,-32
80001798:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000179c:	40026000 	mfc0	v0,c0_status
800017a0:	30420001 	andi	v0,v0,0x1
800017a4:	10400005 	beqz	v0,800017bc <add_timer+0x28>
800017a8:	00004821 	move	t1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800017ac:	0c006d0c 	jal	8001b430 <intr_disable>
800017b0:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
800017b4:	8fa40010 	lw	a0,16(sp)
800017b8:	24090001 	li	t1,1
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:236
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		assert(timer->expires > 0 && timer->proc != NULL);
800017bc:	8c830000 	lw	v1,0(a0)
800017c0:	5060002e 	beqzl	v1,8000187c <add_timer+0xe8>
800017c4:	3c048002 	lui	a0,0x8002
800017c8:	8c820004 	lw	v0,4(a0)
800017cc:	1040002a 	beqz	v0,80001878 <add_timer+0xe4>
800017d0:	24880014 	addiu	t0,a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:237
		assert(list_empty(&(timer->timer_link)));
800017d4:	8c820018 	lw	v0,24(a0)
800017d8:	5502002f 	bnel	t0,v0,80001898 <add_timer+0x104>
800017dc:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800017e0:	3c078015 	lui	a3,0x8015
800017e4:	24e73450 	addiu	a3,a3,13392
800017e8:	8ce20004 	lw	v0,4(a3)
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:239
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
800017ec:	50470010 	beql	v0,a3,80001830 <add_timer+0x9c>
800017f0:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:241
			timer_t *next = le2timer(le, timer_link);
			if (timer->expires < next->expires) {
800017f4:	8c45ffec 	lw	a1,-20(v0)
800017f8:	0065302b 	sltu	a2,v1,a1
800017fc:	50c00008 	beqzl	a2,80001820 <add_timer+0x8c>
80001800:	8c420004 	lw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:242
				next->expires -= timer->expires;
80001804:	08000614 	j	80001850 <add_timer+0xbc>
80001808:	00a31823 	subu	v1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:241
		assert(timer->expires > 0 && timer->proc != NULL);
		assert(list_empty(&(timer->timer_link)));
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
			timer_t *next = le2timer(le, timer_link);
			if (timer->expires < next->expires) {
8000180c:	8c45ffec 	lw	a1,-20(v0)
80001810:	0065302b 	sltu	a2,v1,a1
80001814:	54c0000e 	bnezl	a2,80001850 <add_timer+0xbc>
80001818:	00a31823 	subu	v1,a1,v1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8000181c:	8c420004 	lw	v0,4(v0)
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:245
				next->expires -= timer->expires;
				break;
			}
			timer->expires -= next->expires;
80001820:	00651823 	subu	v1,v1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:239
	local_intr_save(intr_flag);
	{
		assert(timer->expires > 0 && timer->proc != NULL);
		assert(list_empty(&(timer->timer_link)));
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
80001824:	1447fff9 	bne	v0,a3,8000180c <add_timer+0x78>
80001828:	ac830000 	sw	v1,0(a0)
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
8000182c:	8c430000 	lw	v1,0(v0)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80001830:	ac480000 	sw	t0,0(v0)
80001834:	ac680004 	sw	t0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001838:	ac830014 	sw	v1,20(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000183c:	1520000b 	bnez	t1,8000186c <add_timer+0xd8>
80001840:	ac820018 	sw	v0,24(a0)
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:251
			le = list_next(le);
		}
		list_add_before(le, &(timer->timer_link));
	}
	local_intr_restore(intr_flag);
}
80001844:	8fbf001c 	lw	ra,28(sp)
80001848:	03e00008 	jr	ra
8000184c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:242
		assert(list_empty(&(timer->timer_link)));
		list_entry_t *le = list_next(&timer_list);
		while (le != &timer_list) {
			timer_t *next = le2timer(le, timer_link);
			if (timer->expires < next->expires) {
				next->expires -= timer->expires;
80001850:	ac43ffec 	sw	v1,-20(v0)
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80001854:	8c430000 	lw	v1,0(v0)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80001858:	ac480000 	sw	t0,0(v0)
8000185c:	ac680004 	sw	t0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001860:	ac830014 	sw	v1,20(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
80001864:	1120fff7 	beqz	t1,80001844 <add_timer+0xb0>
80001868:	ac820018 	sw	v0,24(a0)
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:251
			le = list_next(le);
		}
		list_add_before(le, &(timer->timer_link));
	}
	local_intr_restore(intr_flag);
}
8000186c:	8fbf001c 	lw	ra,28(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001870:	08006d08 	j	8001b420 <intr_enable>
80001874:	27bd0020 	addiu	sp,sp,32
add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:236
void add_timer(timer_t * timer)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		assert(timer->expires > 0 && timer->proc != NULL);
80001878:	3c048002 	lui	a0,0x8002
8000187c:	3c068002 	lui	a2,0x8002
80001880:	3c078002 	lui	a3,0x8002
80001884:	24840e40 	addiu	a0,a0,3648
80001888:	240500ec 	li	a1,236
8000188c:	24c60e48 	addiu	a2,a2,3656
80001890:	0c006b13 	jal	8001ac4c <__panic>
80001894:	24e70ebc 	addiu	a3,a3,3772
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:237
		assert(list_empty(&(timer->timer_link)));
80001898:	3c068002 	lui	a2,0x8002
8000189c:	3c078002 	lui	a3,0x8002
800018a0:	24840e40 	addiu	a0,a0,3648
800018a4:	240500ed 	li	a1,237
800018a8:	24c60e48 	addiu	a2,a2,3656
800018ac:	0c006b13 	jal	8001ac4c <__panic>
800018b0:	24e70ee8 	addiu	a3,a3,3816

800018b4 <del_timer>:
del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:254
	}
	local_intr_restore(intr_flag);
}

void del_timer(timer_t * timer)
{
800018b4:	27bdffe0 	addiu	sp,sp,-32
800018b8:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800018bc:	40026000 	mfc0	v0,c0_status
800018c0:	30420001 	andi	v0,v0,0x1
800018c4:	10400005 	beqz	v0,800018dc <del_timer+0x28>
800018c8:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800018cc:	0c006d0c 	jal	8001b430 <intr_disable>
800018d0:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
800018d4:	8fa40010 	lw	a0,16(sp)
800018d8:	24060001 	li	a2,1
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
800018dc:	8c820018 	lw	v0,24(a0)
del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:258
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		if (!list_empty(&(timer->timer_link))) {
800018e0:	24830014 	addiu	v1,a0,20
800018e4:	10620010 	beq	v1,v0,80001928 <del_timer+0x74>
800018e8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:259
			if (timer->expires != 0) {
800018ec:	8c850000 	lw	a1,0(a0)
800018f0:	50a00009 	beqzl	a1,80001918 <del_timer+0x64>
800018f4:	8c850014 	lw	a1,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:262
				list_entry_t *le =
				    list_next(&(timer->timer_link));
				if (le != &timer_list) {
800018f8:	3c078015 	lui	a3,0x8015
800018fc:	24e73450 	addiu	a3,a3,13392
80001900:	50470005 	beql	v0,a3,80001918 <del_timer+0x64>
80001904:	8c850014 	lw	a1,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:265
					timer_t *next =
					    le2timer(le, timer_link);
					next->expires += timer->expires;
80001908:	8c47ffec 	lw	a3,-20(v0)
8000190c:	00e52821 	addu	a1,a3,a1
80001910:	ac45ffec 	sw	a1,-20(v0)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80001914:	8c850014 	lw	a1,20(a0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80001918:	aca20004 	sw	v0,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8000191c:	ac450000 	sw	a1,0(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001920:	ac830018 	sw	v1,24(a0)
80001924:	ac830014 	sw	v1,20(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001928:	14c00003 	bnez	a2,80001938 <del_timer+0x84>
8000192c:	8fbf001c 	lw	ra,28(sp)
del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:272
			}
			list_del_init(&(timer->timer_link));
		}
	}
	local_intr_restore(intr_flag);
}
80001930:	03e00008 	jr	ra
80001934:	27bd0020 	addiu	sp,sp,32
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001938:	08006d08 	j	8001b420 <intr_enable>
8000193c:	27bd0020 	addiu	sp,sp,32

80001940 <run_timer_list>:
run_timer_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:275

void run_timer_list(void)
{
80001940:	27bdffd0 	addiu	sp,sp,-48
80001944:	afbf002c 	sw	ra,44(sp)
80001948:	afb60028 	sw	s6,40(sp)
8000194c:	afb50024 	sw	s5,36(sp)
80001950:	afb40020 	sw	s4,32(sp)
80001954:	afb3001c 	sw	s3,28(sp)
80001958:	afb20018 	sw	s2,24(sp)
8000195c:	afb10014 	sw	s1,20(sp)
80001960:	afb00010 	sw	s0,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80001964:	40026000 	mfc0	v0,c0_status
80001968:	30420001 	andi	v0,v0,0x1
8000196c:	10400003 	beqz	v0,8000197c <run_timer_list+0x3c>
80001970:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80001974:	0c006d0c 	jal	8001b430 <intr_disable>
80001978:	24130001 	li	s3,1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000197c:	3c128015 	lui	s2,0x8015
80001980:	26523450 	addiu	s2,s2,13392
80001984:	8e510004 	lw	s1,4(s2)
run_timer_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:280
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
80001988:	1232001b 	beq	s1,s2,800019f8 <run_timer_list+0xb8>
8000198c:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:282
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
80001990:	8e22ffec 	lw	v0,-20(s1)
80001994:	10400056 	beqz	v0,80001af0 <run_timer_list+0x1b0>
80001998:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:300
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
					       WT_INTERRUPTED);
				} else {
					warn("process %d's wait_state == 0.\n\r",
8000199c:	3c158002 	lui	s5,0x8002
800019a0:	3c148002 	lui	s4,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:281
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
800019a4:	2630ffec 	addiu	s0,s1,-20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:283
			assert(timer->expires != 0);
			timer->expires--;
800019a8:	ae22ffec 	sw	v0,-20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:300
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
					       WT_INTERRUPTED);
				} else {
					warn("process %d's wait_state == 0.\n\r",
800019ac:	26b50e40 	addiu	s5,s5,3648
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:284
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
			timer->expires--;
			while (timer->expires == 0) {
800019b0:	14400010 	bnez	v0,800019f4 <run_timer_list+0xb4>
800019b4:	26940f44 	addiu	s4,s4,3908
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:286
				le = list_next(le);
				if (__ucore_is_linux_timer(timer)) {
800019b8:	8e020008 	lw	v0,8(s0)
800019bc:	10400023 	beqz	v0,80001a4c <run_timer_list+0x10c>
800019c0:	8e310004 	lw	s1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:289
					struct __ucore_linux_timer *lt =
					    &(timer->linux_timer);
					if (lt->function)
800019c4:	8e020010 	lw	v0,16(s0)
800019c8:	10400003 	beqz	v0,800019d8 <run_timer_list+0x98>
800019cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:290
						(lt->function) (lt->data);
800019d0:	0040f809 	jalr	v0
800019d4:	8e04000c 	lw	a0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:291
					del_timer(timer);
800019d8:	0c00062d 	jal	800018b4 <del_timer>
800019dc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:292
					kfree(timer);
800019e0:	0c0054b9 	jal	800152e4 <kfree>
800019e4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:310

				del_timer(timer);
				if (le == &timer_list) {
					break;
				}
				timer = le2timer(le, timer_link);
800019e8:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:284
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
			timer->expires--;
			while (timer->expires == 0) {
800019ec:	5040fff3 	beqzl	v0,800019bc <run_timer_list+0x7c>
800019f0:	8e020008 	lw	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:313
					break;
				}
				timer = le2timer(le, timer_link);
			}
		}
		sched_class_proc_tick(current);
800019f4:	3c028015 	lui	v0,0x8015
800019f8:	8c4577a4 	lw	a1,30628(v0)
sched_class_proc_tick():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:101
	return sched_class->pick_next(rq);
}

static void sched_class_proc_tick(struct proc_struct *proc)
{
	if (proc != idleproc) {
800019fc:	3c028015 	lui	v0,0x8015
80001a00:	8c4277a8 	lw	v0,30632(v0)
80001a04:	10a20026 	beq	a1,v0,80001aa0 <run_timer_list+0x160>
80001a08:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:102
		sched_class->proc_tick(rq, proc);
80001a0c:	8c4234bc 	lw	v0,13500(v0)
80001a10:	3c038015 	lui	v1,0x8015
80001a14:	8c420014 	lw	v0,20(v0)
80001a18:	0040f809 	jalr	v0
80001a1c:	8c643458 	lw	a0,13400(v1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80001a20:	16600023 	bnez	s3,80001ab0 <run_timer_list+0x170>
80001a24:	8fbf002c 	lw	ra,44(sp)
run_timer_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:316
			}
		}
		sched_class_proc_tick(current);
	}
	local_intr_restore(intr_flag);
}
80001a28:	8fb60028 	lw	s6,40(sp)
80001a2c:	8fb50024 	lw	s5,36(sp)
80001a30:	8fb40020 	lw	s4,32(sp)
80001a34:	8fb3001c 	lw	s3,28(sp)
80001a38:	8fb20018 	lw	s2,24(sp)
80001a3c:	8fb10014 	lw	s1,20(sp)
80001a40:	8fb00010 	lw	s0,16(sp)
80001a44:	03e00008 	jr	ra
80001a48:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:295
						(lt->function) (lt->data);
					del_timer(timer);
					kfree(timer);
					continue;
				}
				struct proc_struct *proc = timer->proc;
80001a4c:	8e160004 	lw	s6,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:296
				if (proc->wait_state != 0) {
80001a50:	8ec20084 	lw	v0,132(s6)
80001a54:	5040000c 	beqzl	v0,80001a88 <run_timer_list+0x148>
80001a58:	8ec70004 	lw	a3,4(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:297
					assert(proc->wait_state &
80001a5c:	0441001d 	bgez	v0,80001ad4 <run_timer_list+0x194>
80001a60:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:304
				} else {
					warn("process %d's wait_state == 0.\n\r",
					     proc->pid);
				}

				wakeup_proc(proc);
80001a64:	0c0004f8 	jal	800013e0 <wakeup_proc>
80001a68:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:306

				del_timer(timer);
80001a6c:	0c00062d 	jal	800018b4 <del_timer>
80001a70:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:307
				if (le == &timer_list) {
80001a74:	5232ffe0 	beql	s1,s2,800019f8 <run_timer_list+0xb8>
80001a78:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:310
					break;
				}
				timer = le2timer(le, timer_link);
80001a7c:	2630ffec 	addiu	s0,s1,-20
80001a80:	0800067b 	j	800019ec <run_timer_list+0xac>
80001a84:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:300
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
					       WT_INTERRUPTED);
				} else {
					warn("process %d's wait_state == 0.\n\r",
80001a88:	02a02021 	move	a0,s5
80001a8c:	2405012d 	li	a1,301
80001a90:	0c006b33 	jal	8001accc <__warn>
80001a94:	02803021 	move	a2,s4
80001a98:	08000699 	j	80001a64 <run_timer_list+0x124>
80001a9c:	00000000 	nop
sched_class_proc_tick():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:104
static void sched_class_proc_tick(struct proc_struct *proc)
{
	if (proc != idleproc) {
		sched_class->proc_tick(rq, proc);
	} else {
		proc->need_resched = 1;
80001aa0:	24020001 	li	v0,1
80001aa4:	aca20018 	sw	v0,24(a1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
80001aa8:	1260ffdf 	beqz	s3,80001a28 <run_timer_list+0xe8>
80001aac:	8fbf002c 	lw	ra,44(sp)
run_timer_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:316
			}
		}
		sched_class_proc_tick(current);
	}
	local_intr_restore(intr_flag);
}
80001ab0:	8fb60028 	lw	s6,40(sp)
80001ab4:	8fb50024 	lw	s5,36(sp)
80001ab8:	8fb40020 	lw	s4,32(sp)
80001abc:	8fb3001c 	lw	s3,28(sp)
80001ac0:	8fb20018 	lw	s2,24(sp)
80001ac4:	8fb10014 	lw	s1,20(sp)
80001ac8:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80001acc:	08006d08 	j	8001b420 <intr_enable>
80001ad0:	27bd0030 	addiu	sp,sp,48
run_timer_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:297
					kfree(timer);
					continue;
				}
				struct proc_struct *proc = timer->proc;
				if (proc->wait_state != 0) {
					assert(proc->wait_state &
80001ad4:	3c068002 	lui	a2,0x8002
80001ad8:	3c078002 	lui	a3,0x8002
80001adc:	24840e40 	addiu	a0,a0,3648
80001ae0:	2405012a 	li	a1,298
80001ae4:	24c60e48 	addiu	a2,a2,3656
80001ae8:	0c006b13 	jal	8001ac4c <__panic>
80001aec:	24e70f20 	addiu	a3,a3,3872
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.c:282
	local_intr_save(intr_flag);
	{
		list_entry_t *le = list_next(&timer_list);
		if (le != &timer_list) {
			timer_t *timer = le2timer(le, timer_link);
			assert(timer->expires != 0);
80001af0:	3c048002 	lui	a0,0x8002
80001af4:	3c068002 	lui	a2,0x8002
80001af8:	3c078002 	lui	a3,0x8002
80001afc:	24840e40 	addiu	a0,a0,3648
80001b00:	2405011a 	li	a1,282
80001b04:	24c60e48 	addiu	a2,a2,3656
80001b08:	0c006b13 	jal	8001ac4c <__panic>
80001b0c:	24e70f0c 	addiu	a3,a3,3852

80001b10 <RR_init>:
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001b10:	ac840004 	sw	a0,4(a0)
80001b14:	ac840000 	sw	a0,0(a0)
RR_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:11

static void RR_init(struct run_queue *rq)
{
	list_init(&(rq->run_list));
	rq->proc_num = 0;
}
80001b18:	03e00008 	jr	ra
80001b1c:	ac800008 	sw	zero,8(a0)

80001b20 <RR_pick_next>:
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80001b20:	8c830004 	lw	v1,4(a0)
RR_pick_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:35

static struct proc_struct *RR_pick_next(struct run_queue *rq)
{
	list_entry_t *le = list_next(&(rq->run_list));
	if (le != &(rq->run_list)) {
		return le2proc(le, run_link);
80001b24:	2462ff60 	addiu	v0,v1,-160
80001b28:	00831826 	xor	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:38
	}
	return NULL;
}
80001b2c:	03e00008 	jr	ra
80001b30:	0003100a 	movz	v0,zero,v1

80001b34 <RR_proc_tick>:
RR_proc_tick():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:42

static void RR_proc_tick(struct run_queue *rq, struct proc_struct *proc)
{
	if (proc->time_slice > 0) {
80001b34:	8ca200a8 	lw	v0,168(a1)
80001b38:	18400003 	blez	v0,80001b48 <RR_proc_tick+0x14>
80001b3c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:43
		proc->time_slice--;
80001b40:	2442ffff 	addiu	v0,v0,-1
80001b44:	aca200a8 	sw	v0,168(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:45
	}
	if (proc->time_slice == 0) {
80001b48:	14400002 	bnez	v0,80001b54 <RR_proc_tick+0x20>
80001b4c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:46
		proc->need_resched = 1;
80001b50:	aca20018 	sw	v0,24(a1)
80001b54:	03e00008 	jr	ra
80001b58:	00000000 	nop

80001b5c <RR_dequeue>:
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80001b5c:	8ca300a4 	lw	v1,164(a1)
RR_dequeue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:25
	proc->rq = rq;
	rq->proc_num++;
}

static void RR_dequeue(struct run_queue *rq, struct proc_struct *proc)
{
80001b60:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:26
	assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
80001b64:	24a200a0 	addiu	v0,a1,160
80001b68:	1043000e 	beq	v0,v1,80001ba4 <RR_dequeue+0x48>
80001b6c:	afbf0014 	sw	ra,20(sp)
80001b70:	8ca6009c 	lw	a2,156(a1)
80001b74:	14c4000b 	bne	a2,a0,80001ba4 <RR_dequeue+0x48>
80001b78:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:28
	list_del_init(&(proc->run_link));
	rq->proc_num--;
80001b7c:	8cc70008 	lw	a3,8(a2)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80001b80:	8ca400a0 	lw	a0,160(a1)
RR_dequeue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:28
80001b84:	24e7ffff 	addiu	a3,a3,-1
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80001b88:	ac830004 	sw	v1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80001b8c:	ac640000 	sw	a0,0(v1)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80001b90:	aca200a4 	sw	v0,164(a1)
80001b94:	aca200a0 	sw	v0,160(a1)
RR_dequeue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:29
}
80001b98:	27bd0018 	addiu	sp,sp,24
80001b9c:	03e00008 	jr	ra
80001ba0:	acc70008 	sw	a3,8(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:26
	rq->proc_num++;
}

static void RR_dequeue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(!list_empty(&(proc->run_link)) && proc->rq == rq);
80001ba4:	3c048002 	lui	a0,0x8002
80001ba8:	3c068002 	lui	a2,0x8002
80001bac:	3c078002 	lui	a3,0x8002
80001bb0:	24840f64 	addiu	a0,a0,3940
80001bb4:	2405001a 	li	a1,26
80001bb8:	24c60e48 	addiu	a2,a2,3656
80001bbc:	0c006b13 	jal	8001ac4c <__panic>
80001bc0:	24e70f70 	addiu	a3,a3,3952

80001bc4 <RR_enqueue>:
RR_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:15
	rq->proc_num = 0;
}

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(list_empty(&(proc->run_link)));
80001bc4:	8ca300a4 	lw	v1,164(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:14
	list_init(&(rq->run_list));
	rq->proc_num = 0;
}

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
80001bc8:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:15
	assert(list_empty(&(proc->run_link)));
80001bcc:	24a200a0 	addiu	v0,a1,160
80001bd0:	1443001b 	bne	v0,v1,80001c40 <RR_enqueue+0x7c>
80001bd4:	afbf0014 	sw	ra,20(sp)
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80001bd8:	8c830000 	lw	v1,0(a0)
RR_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:17
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
80001bdc:	8ca600a8 	lw	a2,168(a1)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80001be0:	ac820000 	sw	v0,0(a0)
80001be4:	ac620004 	sw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80001be8:	aca300a0 	sw	v1,160(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80001bec:	aca400a4 	sw	a0,164(a1)
RR_enqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:17
80001bf0:	14c00009 	bnez	a2,80001c18 <RR_enqueue+0x54>
80001bf4:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:18
		proc->time_slice = rq->max_time_slice;
80001bf8:	aca200a8 	sw	v0,168(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:21
	}
	proc->rq = rq;
	rq->proc_num++;
80001bfc:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:22
}
80001c00:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:20
	assert(list_empty(&(proc->run_link)));
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
		proc->time_slice = rq->max_time_slice;
	}
	proc->rq = rq;
80001c04:	aca4009c 	sw	a0,156(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:21
	rq->proc_num++;
80001c08:	24420001 	addiu	v0,v0,1
80001c0c:	ac820008 	sw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:22
}
80001c10:	03e00008 	jr	ra
80001c14:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:17

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(list_empty(&(proc->run_link)));
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
80001c18:	0046302a 	slt	a2,v0,a2
80001c1c:	54c0fff7 	bnezl	a2,80001bfc <RR_enqueue+0x38>
80001c20:	aca200a8 	sw	v0,168(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:21
		proc->time_slice = rq->max_time_slice;
	}
	proc->rq = rq;
	rq->proc_num++;
80001c24:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:22
}
80001c28:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:20
	assert(list_empty(&(proc->run_link)));
	list_add_before(&(rq->run_list), &(proc->run_link));
	if (proc->time_slice == 0 || proc->time_slice > rq->max_time_slice) {
		proc->time_slice = rq->max_time_slice;
	}
	proc->rq = rq;
80001c2c:	aca4009c 	sw	a0,156(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:21
	rq->proc_num++;
80001c30:	24420001 	addiu	v0,v0,1
80001c34:	ac820008 	sw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:22
}
80001c38:	03e00008 	jr	ra
80001c3c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched_RR.c:15
	rq->proc_num = 0;
}

static void RR_enqueue(struct run_queue *rq, struct proc_struct *proc)
{
	assert(list_empty(&(proc->run_link)));
80001c40:	3c048002 	lui	a0,0x8002
80001c44:	3c068002 	lui	a2,0x8002
80001c48:	3c078002 	lui	a3,0x8002
80001c4c:	24840f64 	addiu	a0,a0,3940
80001c50:	2405000f 	li	a1,15
80001c54:	24c60e48 	addiu	a2,a2,3656
80001c58:	0c006b13 	jal	8001ac4c <__panic>
80001c5c:	24e70fa4 	addiu	a3,a3,4004

80001c60 <ucore_gettimeofday>:
ucore_gettimeofday():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:12
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
80001c60:	3c028015 	lui	v0,0x8015
80001c64:	8c4277ac 	lw	v0,30636(v0)
80001c68:	3c0351eb 	lui	v1,0x51eb
80001c6c:	3463851f 	ori	v1,v1,0x851f
80001c70:	00430018 	mult	v0,v1
80001c74:	000237c3 	sra	a2,v0,0x1f
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:9
#include <string.h>

extern int ticks;
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
80001c78:	27bdffd0 	addiu	sp,sp,-48
80001c7c:	afb10024 	sw	s1,36(sp)
80001c80:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:10
	struct mm_struct *mm = pls_read(current)->mm;
80001c84:	3c078015 	lui	a3,0x8015
80001c88:	8ce777a4 	lw	a3,30628(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:9
#include <string.h>

extern int ticks;
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
80001c8c:	afb00020 	sw	s0,32(sp)
80001c90:	afb20028 	sw	s2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:10
	struct mm_struct *mm = pls_read(current)->mm;
80001c94:	8cf00020 	lw	s0,32(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:9
#include <string.h>

extern int ticks;
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
80001c98:	00809021 	move	s2,a0
80001c9c:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:14
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
	ktv.tv_usec = (ticks % 100) * 10000;
	lock_mm(mm);
80001ca0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:12
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
80001ca4:	00001810 	mfhi	v1
80001ca8:	00031943 	sra	v1,v1,0x5
80001cac:	00663023 	subu	a2,v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:13
	ktv.tv_usec = (ticks % 100) * 10000;
80001cb0:	00062880 	sll	a1,a2,0x2
80001cb4:	00061900 	sll	v1,a2,0x4
80001cb8:	00a31821 	addu	v1,a1,v1
80001cbc:	00032880 	sll	a1,v1,0x2
80001cc0:	00651821 	addu	v1,v1,a1
80001cc4:	00431023 	subu	v0,v0,v1
80001cc8:	000229c0 	sll	a1,v0,0x7
80001ccc:	00021880 	sll	v1,v0,0x2
80001cd0:	00a31823 	subu	v1,a1,v1
80001cd4:	00621021 	addu	v0,v1,v0
80001cd8:	00021880 	sll	v1,v0,0x2
80001cdc:	00431021 	addu	v0,v0,v1
80001ce0:	00021100 	sll	v0,v0,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:12
int ucore_gettimeofday(struct linux_timeval __user * tv,
		       struct linux_timezone __user * tz)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timeval ktv;
	ktv.tv_sec = ticks / 100;
80001ce4:	afa60018 	sw	a2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:14
	ktv.tv_usec = (ticks % 100) * 10000;
	lock_mm(mm);
80001ce8:	0c004c2e 	jal	800130b8 <lock_mm>
80001cec:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:15
	if (!copy_to_user(mm, tv, &ktv, sizeof(struct linux_timeval))) {
80001cf0:	02002021 	move	a0,s0
80001cf4:	02402821 	move	a1,s2
80001cf8:	27a60018 	addiu	a2,sp,24
80001cfc:	0c007950 	jal	8001e540 <copy_to_user>
80001d00:	24070008 	li	a3,8
80001d04:	1040001a 	beqz	v0,80001d70 <ucore_gettimeofday+0x110>
80001d08:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:19
		unlock_mm(mm);
		return -1;
	}
	unlock_mm(mm);
80001d0c:	0c004c3f 	jal	800130fc <unlock_mm>
80001d10:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:20
	if (tz) {
80001d14:	1220000f 	beqz	s1,80001d54 <ucore_gettimeofday+0xf4>
80001d18:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:22
		struct linux_timezone ktz;
		memset(&ktz, 0, sizeof(struct linux_timezone));
80001d1c:	24060008 	li	a2,8
80001d20:	0c005c5a 	jal	80017168 <memset>
80001d24:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:23
		lock_mm(mm);
80001d28:	0c004c2e 	jal	800130b8 <lock_mm>
80001d2c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:24
		if (!copy_to_user(mm, tz, &ktz, sizeof(struct linux_timezone))) {
80001d30:	02002021 	move	a0,s0
80001d34:	02202821 	move	a1,s1
80001d38:	27a60010 	addiu	a2,sp,16
80001d3c:	0c007950 	jal	8001e540 <copy_to_user>
80001d40:	24070008 	li	a3,8
80001d44:	1040000a 	beqz	v0,80001d70 <ucore_gettimeofday+0x110>
80001d48:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:28
			unlock_mm(mm);
			return -1;
		}
		unlock_mm(mm);
80001d4c:	0c004c3f 	jal	800130fc <unlock_mm>
80001d50:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:31
	}
	return 0;
}
80001d54:	8fbf002c 	lw	ra,44(sp)
80001d58:	02401021 	move	v0,s2
80001d5c:	8fb10024 	lw	s1,36(sp)
80001d60:	8fb20028 	lw	s2,40(sp)
80001d64:	8fb00020 	lw	s0,32(sp)
80001d68:	03e00008 	jr	ra
80001d6c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:25
	if (tz) {
		struct linux_timezone ktz;
		memset(&ktz, 0, sizeof(struct linux_timezone));
		lock_mm(mm);
		if (!copy_to_user(mm, tz, &ktz, sizeof(struct linux_timezone))) {
			unlock_mm(mm);
80001d70:	0c004c3f 	jal	800130fc <unlock_mm>
80001d74:	2412ffff 	li	s2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:26
			return -1;
80001d78:	08000756 	j	80001d58 <ucore_gettimeofday+0xf8>
80001d7c:	8fbf002c 	lw	ra,44(sp)

80001d80 <do_clock_gettime>:
do_clock_gettime():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:37

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001d80:	3c028015 	lui	v0,0x8015
80001d84:	8c4277ac 	lw	v0,30636(v0)
80001d88:	3c0351eb 	lui	v1,0x51eb
80001d8c:	3463851f 	ori	v1,v1,0x851f
80001d90:	00430018 	mult	v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:35
	return 0;
}

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
80001d94:	3c058015 	lui	a1,0x8015
80001d98:	8ca777a4 	lw	a3,30628(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:37
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001d9c:	000237c3 	sra	a2,v0,0x1f
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:34
	}
	return 0;
}

int do_clock_gettime(struct linux_timespec __user * time)
{
80001da0:	27bdffd8 	addiu	sp,sp,-40
80001da4:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:35
	struct mm_struct *mm = pls_read(current)->mm;
80001da8:	8cf00020 	lw	s0,32(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:34
	}
	return 0;
}

int do_clock_gettime(struct linux_timespec __user * time)
{
80001dac:	00802821 	move	a1,a0
80001db0:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:39
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
	ktv.tv_nsec = (ticks % 100) * 10000000;
	lock_mm(mm);
80001db4:	02002021 	move	a0,s0
80001db8:	afa50018 	sw	a1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:37

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001dbc:	00001810 	mfhi	v1
80001dc0:	00031943 	sra	v1,v1,0x5
80001dc4:	00661823 	subu	v1,v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:38
	ktv.tv_nsec = (ticks % 100) * 10000000;
80001dc8:	00033880 	sll	a3,v1,0x2
80001dcc:	00033100 	sll	a2,v1,0x4
80001dd0:	00e63021 	addu	a2,a3,a2
80001dd4:	00063880 	sll	a3,a2,0x2
80001dd8:	00c73021 	addu	a2,a2,a3
80001ddc:	00461023 	subu	v0,v0,a2
80001de0:	00023a00 	sll	a3,v0,0x8
80001de4:	000230c0 	sll	a2,v0,0x3
80001de8:	00e63023 	subu	a2,a3,a2
80001dec:	00063980 	sll	a3,a2,0x6
80001df0:	00e63023 	subu	a2,a3,a2
80001df4:	00c21021 	addu	v0,a2,v0
80001df8:	00023080 	sll	a2,v0,0x2
80001dfc:	00461021 	addu	v0,v0,a2
80001e00:	000211c0 	sll	v0,v0,0x7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:37

int do_clock_gettime(struct linux_timespec __user * time)
{
	struct mm_struct *mm = pls_read(current)->mm;
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
80001e04:	afa30010 	sw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:39
	ktv.tv_nsec = (ticks % 100) * 10000000;
	lock_mm(mm);
80001e08:	0c004c2e 	jal	800130b8 <lock_mm>
80001e0c:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:40
	if (!copy_to_user(mm, time, &ktv, sizeof(struct linux_timespec))) {
80001e10:	8fa50018 	lw	a1,24(sp)
80001e14:	02002021 	move	a0,s0
80001e18:	27a60010 	addiu	a2,sp,16
80001e1c:	0c007950 	jal	8001e540 <copy_to_user>
80001e20:	24070008 	li	a3,8
80001e24:	10400008 	beqz	v0,80001e48 <do_clock_gettime+0xc8>
80001e28:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:44
		unlock_mm(mm);
		return -1;
	}
	unlock_mm(mm);
80001e2c:	0c004c3f 	jal	800130fc <unlock_mm>
80001e30:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:45
	return 0;
80001e34:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:46
}
80001e38:	8fbf0024 	lw	ra,36(sp)
80001e3c:	8fb00020 	lw	s0,32(sp)
80001e40:	03e00008 	jr	ra
80001e44:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:41
	struct linux_timespec ktv;
	ktv.tv_sec = ticks / 100;
	ktv.tv_nsec = (ticks % 100) * 10000000;
	lock_mm(mm);
	if (!copy_to_user(mm, time, &ktv, sizeof(struct linux_timespec))) {
		unlock_mm(mm);
80001e48:	0c004c3f 	jal	800130fc <unlock_mm>
80001e4c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/syscall/gettimeofday.c:42
		return -1;
80001e50:	0800078e 	j	80001e38 <do_clock_gettime+0xb8>
80001e54:	2402ffff 	li	v0,-1

80001e58 <dev_lookup>:
dev_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:123
 *
 * However, we have no support for this in the base system.
 */
static int dev_lookup(struct inode *node, char *path, struct inode **node_store)
{
	if (*path != '\0') {
80001e58:	90a30000 	lbu	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:122
 * mode.
 *
 * However, we have no support for this in the base system.
 */
static int dev_lookup(struct inode *node, char *path, struct inode **node_store)
{
80001e5c:	27bdffe0 	addiu	sp,sp,-32
80001e60:	afb00018 	sw	s0,24(sp)
80001e64:	afbf001c 	sw	ra,28(sp)
80001e68:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:123
	if (*path != '\0') {
80001e6c:	14600006 	bnez	v1,80001e88 <dev_lookup+0x30>
80001e70:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:126
		return -E_NOENT;
	}
	vop_ref_inc(node);
80001e74:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80001e78:	afa60010 	sw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:127
	*node_store = node;
80001e7c:	8fa60010 	lw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:128
	return 0;
80001e80:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:127
{
	if (*path != '\0') {
		return -E_NOENT;
	}
	vop_ref_inc(node);
	*node_store = node;
80001e84:	acd00000 	sw	s0,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:129
	return 0;
}
80001e88:	8fbf001c 	lw	ra,28(sp)
80001e8c:	8fb00018 	lw	s0,24(sp)
80001e90:	03e00008 	jr	ra
80001e94:	27bd0020 	addiu	sp,sp,32

80001e98 <dev_tryseek>:
dev_tryseek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:97
 * Attempt a seek.
 * For block devices, require block alignment.
 * For character devices, prohibit seeking entirely.
 */
static int dev_tryseek(struct inode *node, off_t pos)
{
80001e98:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:98
	struct device *dev = vop_info(node, device);
80001e9c:	10800015 	beqz	a0,80001ef4 <dev_tryseek+0x5c>
80001ea0:	afbf0014 	sw	ra,20(sp)
80001ea4:	8c830038 	lw	v1,56(a0)
80001ea8:	24021234 	li	v0,4660
80001eac:	54620012 	bnel	v1,v0,80001ef8 <dev_tryseek+0x60>
80001eb0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:99
	if (dev->d_blocks > 0) {
80001eb4:	8c860000 	lw	a2,0(a0)
80001eb8:	10c0000b 	beqz	a2,80001ee8 <dev_tryseek+0x50>
80001ebc:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:100
		if ((pos % dev->d_blocksize) == 0) {
80001ec0:	8c830004 	lw	v1,4(a0)
80001ec4:	00a3001b 	divu	zero,a1,v1
80001ec8:	006001f4 	teq	v1,zero,0x7
80001ecc:	00002010 	mfhi	a0
80001ed0:	14800006 	bnez	a0,80001eec <dev_tryseek+0x54>
80001ed4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:101
			if (pos >= 0 && pos < dev->d_blocks * dev->d_blocksize) {
80001ed8:	04a00004 	bltz	a1,80001eec <dev_tryseek+0x54>
80001edc:	70661802 	mul	v1,v1,a2
80001ee0:	00a3282b 	sltu	a1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:106
				return 0;
			}
		}
	}
	return -E_INVAL;
80001ee4:	0005100b 	movn	v0,zero,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:107
}
80001ee8:	8fbf0014 	lw	ra,20(sp)
80001eec:	03e00008 	jr	ra
80001ef0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:98
 * For block devices, require block alignment.
 * For character devices, prohibit seeking entirely.
 */
static int dev_tryseek(struct inode *node, off_t pos)
{
	struct device *dev = vop_info(node, device);
80001ef4:	3c048002 	lui	a0,0x8002
80001ef8:	3c068002 	lui	a2,0x8002
80001efc:	3c078002 	lui	a3,0x8002
80001f00:	24840fd4 	addiu	a0,a0,4052
80001f04:	24050062 	li	a1,98
80001f08:	24c60e48 	addiu	a2,a2,3656
80001f0c:	0c006b13 	jal	8001ac4c <__panic>
80001f10:	24e70fdc 	addiu	a3,a3,4060

80001f14 <dev_gettype>:
dev_gettype():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:85
 * Return the type. A device is a "block device" if it has a known
 * length. A device that generates data in a stream is a "character
 * device".
 */
static int dev_gettype(struct inode *node, uint32_t * type_store)
{
80001f14:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:86
	struct device *dev = vop_info(node, device);
80001f18:	1080000d 	beqz	a0,80001f50 <dev_gettype+0x3c>
80001f1c:	afbf0014 	sw	ra,20(sp)
80001f20:	8c830038 	lw	v1,56(a0)
80001f24:	24021234 	li	v0,4660
80001f28:	14620009 	bne	v1,v0,80001f50 <dev_gettype+0x3c>
80001f2c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:87
	*type_store = (dev->d_blocks > 0) ? S_IFBLK : S_IFCHR;
80001f30:	8c840000 	lw	a0,0(a0)
80001f34:	24026000 	li	v0,24576
80001f38:	24032000 	li	v1,8192
80001f3c:	0064100a 	movz	v0,v1,a0
80001f40:	aca20000 	sw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:89
	return 0;
}
80001f44:	27bd0018 	addiu	sp,sp,24
80001f48:	03e00008 	jr	ra
80001f4c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:86
 * length. A device that generates data in a stream is a "character
 * device".
 */
static int dev_gettype(struct inode *node, uint32_t * type_store)
{
	struct device *dev = vop_info(node, device);
80001f50:	3c048002 	lui	a0,0x8002
80001f54:	3c068002 	lui	a2,0x8002
80001f58:	3c078002 	lui	a3,0x8002
80001f5c:	24840fd4 	addiu	a0,a0,4052
80001f60:	24050056 	li	a1,86
80001f64:	24c60e48 	addiu	a2,a2,3656
80001f68:	0c006b13 	jal	8001ac4c <__panic>
80001f6c:	24e70fdc 	addiu	a3,a3,4060

80001f70 <dev_ioctl>:
dev_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:55

/*
 * Called for ioctl(). Just pass through.
 */
static int dev_ioctl(struct inode *node, int op, void *data)
{
80001f70:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:56
	struct device *dev = vop_info(node, device);
80001f74:	10800008 	beqz	a0,80001f98 <dev_ioctl+0x28>
80001f78:	afbf0014 	sw	ra,20(sp)
80001f7c:	8c870038 	lw	a3,56(a0)
80001f80:	24031234 	li	v1,4660
80001f84:	14e30004 	bne	a3,v1,80001f98 <dev_ioctl+0x28>
80001f88:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:57
	return dop_ioctl(dev, op, data);
80001f8c:	8c99002c 	lw	t9,44(a0)
80001f90:	03200008 	jr	t9
80001f94:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:56
/*
 * Called for ioctl(). Just pass through.
 */
static int dev_ioctl(struct inode *node, int op, void *data)
{
	struct device *dev = vop_info(node, device);
80001f98:	3c048002 	lui	a0,0x8002
80001f9c:	3c068002 	lui	a2,0x8002
80001fa0:	3c078002 	lui	a3,0x8002
80001fa4:	24840fd4 	addiu	a0,a0,4052
80001fa8:	24050038 	li	a1,56
80001fac:	24c60e48 	addiu	a2,a2,3656
80001fb0:	0c006b13 	jal	8001ac4c <__panic>
80001fb4:	24e70fdc 	addiu	a3,a3,4060

80001fb8 <dev_write>:
dev_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:46

/*
 * Called for write. Hand off to dop_io.
 */
static int dev_write(struct inode *node, struct iobuf *iob)
{
80001fb8:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:47
	struct device *dev = vop_info(node, device);
80001fbc:	10800009 	beqz	a0,80001fe4 <dev_write+0x2c>
80001fc0:	afbf0014 	sw	ra,20(sp)
80001fc4:	8c860038 	lw	a2,56(a0)
80001fc8:	24031234 	li	v1,4660
80001fcc:	14c30005 	bne	a2,v1,80001fe4 <dev_write+0x2c>
80001fd0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:48
	return dop_io(dev, iob, 1);
80001fd4:	8c990028 	lw	t9,40(a0)
80001fd8:	24060001 	li	a2,1
80001fdc:	03200008 	jr	t9
80001fe0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:47
/*
 * Called for write. Hand off to dop_io.
 */
static int dev_write(struct inode *node, struct iobuf *iob)
{
	struct device *dev = vop_info(node, device);
80001fe4:	3c048002 	lui	a0,0x8002
80001fe8:	3c068002 	lui	a2,0x8002
80001fec:	3c078002 	lui	a3,0x8002
80001ff0:	24840fd4 	addiu	a0,a0,4052
80001ff4:	2405002f 	li	a1,47
80001ff8:	24c60e48 	addiu	a2,a2,3656
80001ffc:	0c006b13 	jal	8001ac4c <__panic>
80002000:	24e70fdc 	addiu	a3,a3,4060

80002004 <dev_read>:
dev_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:37

/*
 * Called for read. Hand off to dop_io.
 */
static int dev_read(struct inode *node, struct iobuf *iob)
{
80002004:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:38
	struct device *dev = vop_info(node, device);
80002008:	10800009 	beqz	a0,80002030 <dev_read+0x2c>
8000200c:	afbf0014 	sw	ra,20(sp)
80002010:	8c860038 	lw	a2,56(a0)
80002014:	24031234 	li	v1,4660
80002018:	14c30005 	bne	a2,v1,80002030 <dev_read+0x2c>
8000201c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:39
	return dop_io(dev, iob, 0);
80002020:	8c990028 	lw	t9,40(a0)
80002024:	00003021 	move	a2,zero
80002028:	03200008 	jr	t9
8000202c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:38
/*
 * Called for read. Hand off to dop_io.
 */
static int dev_read(struct inode *node, struct iobuf *iob)
{
	struct device *dev = vop_info(node, device);
80002030:	3c048002 	lui	a0,0x8002
80002034:	3c068002 	lui	a2,0x8002
80002038:	3c078002 	lui	a3,0x8002
8000203c:	24840fd4 	addiu	a0,a0,4052
80002040:	24050026 	li	a1,38
80002044:	24c60e48 	addiu	a2,a2,3656
80002048:	0c006b13 	jal	8001ac4c <__panic>
8000204c:	24e70fdc 	addiu	a3,a3,4060

80002050 <dev_close>:
dev_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:28
/*
 * Called on the last close().
 * Just pass through.
 */
static int dev_close(struct inode *node)
{
80002050:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:29
	struct device *dev = vop_info(node, device);
80002054:	10800008 	beqz	a0,80002078 <dev_close+0x28>
80002058:	afbf0014 	sw	ra,20(sp)
8000205c:	8c850038 	lw	a1,56(a0)
80002060:	24031234 	li	v1,4660
80002064:	14a30004 	bne	a1,v1,80002078 <dev_close+0x28>
80002068:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:30
	return dop_close(dev);
8000206c:	8c990024 	lw	t9,36(a0)
80002070:	03200008 	jr	t9
80002074:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:29
 * Called on the last close().
 * Just pass through.
 */
static int dev_close(struct inode *node)
{
	struct device *dev = vop_info(node, device);
80002078:	3c048002 	lui	a0,0x8002
8000207c:	3c068002 	lui	a2,0x8002
80002080:	3c078002 	lui	a3,0x8002
80002084:	24840fd4 	addiu	a0,a0,4052
80002088:	2405001d 	li	a1,29
8000208c:	24c60e48 	addiu	a2,a2,3656
80002090:	0c006b13 	jal	8001ac4c <__panic>
80002094:	24e70fdc 	addiu	a3,a3,4060

80002098 <dev_open>:
dev_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:15
 * Called for each open().
 *
 * We reject O_CREAT | O_TRUNC | O_EXCL | O_APPEND
 */
static int dev_open(struct inode *node, uint32_t open_flags)
{
80002098:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:16
	if (open_flags & (O_CREAT | O_TRUNC | O_EXCL | O_APPEND)) {
8000209c:	30a306c0 	andi	v1,a1,0x6c0
800020a0:	14600009 	bnez	v1,800020c8 <dev_open+0x30>
800020a4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:19
		return -E_INVAL;
	}
	struct device *dev = vop_info(node, device);
800020a8:	1080000b 	beqz	a0,800020d8 <dev_open+0x40>
800020ac:	24031234 	li	v1,4660
800020b0:	8c860038 	lw	a2,56(a0)
800020b4:	14c30008 	bne	a2,v1,800020d8 <dev_open+0x40>
800020b8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:20
	return dop_open(dev, open_flags);
800020bc:	8c990020 	lw	t9,32(a0)
800020c0:	03200008 	jr	t9
800020c4:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:21
}
800020c8:	8fbf0014 	lw	ra,20(sp)
800020cc:	2402ffea 	li	v0,-22
800020d0:	03e00008 	jr	ra
800020d4:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:19
static int dev_open(struct inode *node, uint32_t open_flags)
{
	if (open_flags & (O_CREAT | O_TRUNC | O_EXCL | O_APPEND)) {
		return -E_INVAL;
	}
	struct device *dev = vop_info(node, device);
800020d8:	3c048002 	lui	a0,0x8002
800020dc:	3c068002 	lui	a2,0x8002
800020e0:	3c078002 	lui	a3,0x8002
800020e4:	24840fd4 	addiu	a0,a0,4052
800020e8:	24050013 	li	a1,19
800020ec:	24c60e48 	addiu	a2,a2,3656
800020f0:	0c006b13 	jal	8001ac4c <__panic>
800020f4:	24e70fdc 	addiu	a3,a3,4060

800020f8 <dev_fstat>:
dev_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:66
 * Called for fstat().
 * Set the type and the size.
 * The link count for a device is always 1.
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
800020f8:	27bdffe0 	addiu	sp,sp,-32
800020fc:	afb10018 	sw	s1,24(sp)
80002100:	00a08821 	move	s1,a1
80002104:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80002108:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:66
 * Called for fstat().
 * Set the type and the size.
 * The link count for a device is always 1.
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
8000210c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80002110:	24060010 	li	a2,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:66
 * Called for fstat().
 * Set the type and the size.
 * The link count for a device is always 1.
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
80002114:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80002118:	0c005c5a 	jal	80017168 <memset>
8000211c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:69
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
80002120:	1200001f 	beqz	s0,800021a0 <dev_fstat+0xa8>
80002124:	3c048002 	lui	a0,0x8002
80002128:	8e020048 	lw	v0,72(s0)
8000212c:	1040001d 	beqz	v0,800021a4 <dev_fstat+0xac>
80002130:	3c068002 	lui	a2,0x8002
80002134:	8c420040 	lw	v0,64(v0)
80002138:	10400019 	beqz	v0,800021a0 <dev_fstat+0xa8>
8000213c:	3c058002 	lui	a1,0x8002
80002140:	02002021 	move	a0,s0
80002144:	0c0010f2 	jal	800043c8 <inode_check>
80002148:	24a51060 	addiu	a1,a1,4192
8000214c:	8e020048 	lw	v0,72(s0)
80002150:	02002021 	move	a0,s0
80002154:	8c420040 	lw	v0,64(v0)
80002158:	0040f809 	jalr	v0
8000215c:	02202821 	move	a1,s1
80002160:	1440000a 	bnez	v0,8000218c <dev_fstat+0x94>
80002164:	24031234 	li	v1,4660
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:72
		return ret;
	}
	struct device *dev = vop_info(node, device);
80002168:	8e040038 	lw	a0,56(s0)
8000216c:	14830013 	bne	a0,v1,800021bc <dev_fstat+0xc4>
80002170:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:74
	stat->st_nlinks = 1;
	stat->st_blocks = dev->d_blocks;
80002174:	8e030000 	lw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:75
	stat->st_size = stat->st_blocks * dev->d_blocksize;
80002178:	8e040004 	lw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:73
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct device *dev = vop_info(node, device);
	stat->st_nlinks = 1;
8000217c:	ae250004 	sw	a1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:75
	stat->st_blocks = dev->d_blocks;
	stat->st_size = stat->st_blocks * dev->d_blocksize;
80002180:	70832002 	mul	a0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:74
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct device *dev = vop_info(node, device);
	stat->st_nlinks = 1;
	stat->st_blocks = dev->d_blocks;
80002184:	ae230008 	sw	v1,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:75
	stat->st_size = stat->st_blocks * dev->d_blocksize;
80002188:	ae24000c 	sw	a0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:77
	return 0;
}
8000218c:	8fbf001c 	lw	ra,28(sp)
80002190:	8fb10018 	lw	s1,24(sp)
80002194:	8fb00014 	lw	s0,20(sp)
80002198:	03e00008 	jr	ra
8000219c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:69
 */
static int dev_fstat(struct inode *node, struct stat *stat)
{
	int ret;
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
800021a0:	3c068002 	lui	a2,0x8002
800021a4:	3c078002 	lui	a3,0x8002
800021a8:	24840fd4 	addiu	a0,a0,4052
800021ac:	24050045 	li	a1,69
800021b0:	24c60e48 	addiu	a2,a2,3656
800021b4:	0c006b13 	jal	8001ac4c <__panic>
800021b8:	24e71010 	addiu	a3,a3,4112
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:72
		return ret;
	}
	struct device *dev = vop_info(node, device);
800021bc:	3c048002 	lui	a0,0x8002
800021c0:	3c068002 	lui	a2,0x8002
800021c4:	3c078002 	lui	a3,0x8002
800021c8:	24840fd4 	addiu	a0,a0,4052
800021cc:	24050048 	li	a1,72
800021d0:	24c60e48 	addiu	a2,a2,3656
800021d4:	0c006b13 	jal	8001ac4c <__panic>
800021d8:	24e70fdc 	addiu	a3,a3,4060

800021dc <dev_init>:
dev_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:167
        extern void dev_init_##x(void);                 \
        dev_init_##x();                                 \
    } while (0)

void dev_init(void)
{
800021dc:	27bdffe8 	addiu	sp,sp,-24
800021e0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:168
	init_device(null);
800021e4:	0c0009de 	jal	80002778 <dev_init_null>
800021e8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:169
	init_device(stdin);
800021ec:	0c000ad1 	jal	80002b44 <dev_init_stdin>
800021f0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:170
	init_device(stdout);
800021f4:	0c000b33 	jal	80002ccc <dev_init_stdout>
800021f8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:171
	init_device(disk0);
800021fc:	0c000939 	jal	800024e4 <dev_init_disk0>
80002200:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:174
	/* for Nand flash */
	init_device(disk1);
}
80002204:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:173
	init_device(null);
	init_device(stdin);
	init_device(stdout);
	init_device(disk0);
	/* for Nand flash */
	init_device(disk1);
80002208:	08000998 	j	80002660 <dev_init_disk1>
8000220c:	27bd0018 	addiu	sp,sp,24

80002210 <dev_create_inode>:
dev_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:180

/*
 * Function to create a inode for a VFS device.
 */
struct inode *dev_create_inode(void)
{
80002210:	27bdffe0 	addiu	sp,sp,-32
80002214:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:182
	struct inode *node;
	if ((node = alloc_inode(device)) != NULL) {
80002218:	0c001090 	jal	80004240 <__alloc_inode>
8000221c:	24041234 	li	a0,4660
80002220:	10400007 	beqz	v0,80002240 <dev_create_inode+0x30>
80002224:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:183
		vop_init(node, &dev_node_ops, NULL);
80002228:	00402021 	move	a0,v0
8000222c:	24a5fe20 	addiu	a1,a1,-480
80002230:	00003021 	move	a2,zero
80002234:	0c0010d1 	jal	80004344 <inode_init>
80002238:	afa20010 	sw	v0,16(sp)
8000223c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev.c:186
	}
	return node;
}
80002240:	8fbf001c 	lw	ra,28(sp)
80002244:	03e00008 	jr	ra
80002248:	27bd0020 	addiu	sp,sp,32

8000224c <disk0_open>:
disk0_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:33
}

static int disk0_open(struct device *dev, uint32_t open_flags)
{
	return 0;
}
8000224c:	03e00008 	jr	ra
80002250:	00001021 	move	v0,zero

80002254 <disk0_close>:
disk0_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:38

static int disk0_close(struct device *dev)
{
	return 0;
}
80002254:	03e00008 	jr	ra
80002258:	00001021 	move	v0,zero

8000225c <disk0_ioctl>:
disk0_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:115
}

static int disk0_ioctl(struct device *dev, int op, void *data)
{
	return -E_UNIMP;
}
8000225c:	03e00008 	jr	ra
80002260:	2402ffdd 	li	v0,-35

80002264 <disk0_io>:
disk0_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:67
		     blkno, sectno, nblks, nsecs, ret);
	}
}

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
80002264:	27bdffb0 	addiu	sp,sp,-80
80002268:	afb00028 	sw	s0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:68
	off_t offset = iob->io_offset;
8000226c:	8ca20004 	lw	v0,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:69
	size_t resid = iob->io_resid;
80002270:	8cb0000c 	lw	s0,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:67
		     blkno, sectno, nblks, nsecs, ret);
	}
}

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
80002274:	afb70044 	sw	s7,68(sp)
80002278:	afb60040 	sw	s6,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:66
		    ("disk0: write blkno = %d (sectno = %d), nblks = %d (nsecs = %d): 0x%08x.\n",
		     blkno, sectno, nblks, nsecs, ret);
	}
}

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
8000227c:	00501825 	or	v1,v0,s0
80002280:	30630fff 	andi	v1,v1,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:67
{
80002284:	afbf004c 	sw	ra,76(sp)
80002288:	afbe0048 	sw	s8,72(sp)
8000228c:	afb5003c 	sw	s5,60(sp)
80002290:	afb40038 	sw	s4,56(sp)
80002294:	afb30034 	sw	s3,52(sp)
80002298:	afb20030 	sw	s2,48(sp)
8000229c:	afb1002c 	sw	s1,44(sp)
800022a0:	00a0b021 	move	s6,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:74
	size_t resid = iob->io_resid;
	uint32_t blkno = offset / DISK0_BLKSIZE;
	uint32_t nblks = resid / DISK0_BLKSIZE;

	/* don't allow I/O that isn't block-aligned */
	if ((offset % DISK0_BLKSIZE) != 0 || (resid % DISK0_BLKSIZE) != 0) {
800022a4:	14600068 	bnez	v1,80002448 <disk0_io+0x1e4>
800022a8:	00c0b821 	move	s7,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:70

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
	off_t offset = iob->io_offset;
	size_t resid = iob->io_resid;
	uint32_t blkno = offset / DISK0_BLKSIZE;
800022ac:	24430fff 	addiu	v1,v0,4095
800022b0:	28510000 	slti	s1,v0,0
800022b4:	0071100b 	movn	v0,v1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:79
	if ((offset % DISK0_BLKSIZE) != 0 || (resid % DISK0_BLKSIZE) != 0) {
		return -E_INVAL;
	}

	/* don't allow I/O past the end of disk0 */
	if (blkno + nblks > dev->d_blocks) {
800022b8:	8c840000 	lw	a0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:70

static int disk0_io(struct device *dev, struct iobuf *iob, bool write)
{
	off_t offset = iob->io_offset;
	size_t resid = iob->io_resid;
	uint32_t blkno = offset / DISK0_BLKSIZE;
800022bc:	00028b03 	sra	s1,v0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:71
	uint32_t nblks = resid / DISK0_BLKSIZE;
800022c0:	00101b02 	srl	v1,s0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:79
	if ((offset % DISK0_BLKSIZE) != 0 || (resid % DISK0_BLKSIZE) != 0) {
		return -E_INVAL;
	}

	/* don't allow I/O past the end of disk0 */
	if (blkno + nblks > dev->d_blocks) {
800022c4:	02231021 	addu	v0,s1,v1
800022c8:	0082102b 	sltu	v0,a0,v0
800022cc:	54400003 	bnezl	v0,800022dc <disk0_io+0x78>
800022d0:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:84
		return -E_INVAL;
	}

	/* read/write nothing ? */
	if (nblks == 0) {
800022d4:	5460000d 	bnezl	v1,8000230c <disk0_io+0xa8>
800022d8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:110
		}
		resid -= copied, blkno += nblks;
	}
	unlock_disk0();
	return 0;
}
800022dc:	8fbf004c 	lw	ra,76(sp)
800022e0:	8fbe0048 	lw	s8,72(sp)
800022e4:	8fb70044 	lw	s7,68(sp)
800022e8:	8fb60040 	lw	s6,64(sp)
800022ec:	8fb5003c 	lw	s5,60(sp)
800022f0:	8fb40038 	lw	s4,56(sp)
800022f4:	8fb30034 	lw	s3,52(sp)
800022f8:	8fb20030 	lw	s2,48(sp)
800022fc:	8fb1002c 	lw	s1,44(sp)
80002300:	8fb00028 	lw	s0,40(sp)
80002304:	03e00008 	jr	ra
80002308:	27bd0050 	addiu	sp,sp,80
lock_disk0():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:22
static char *disk0_buffer;
static semaphore_t disk0_sem;

static void lock_disk0(void)
{
	down(&(disk0_sem));
8000230c:	0c006727 	jal	80019c9c <down>
80002310:	244434c0 	addiu	a0,v0,13504
disk0_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:89
	if (nblks == 0) {
		return 0;
	}

	lock_disk0();
	while (resid != 0) {
80002314:	1200001f 	beqz	s0,80002394 <disk0_io+0x130>
80002318:	3c1e8015 	lui	s8,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:91
		size_t copied, alen = DISK0_BUFSIZE;
		if (write) {
8000231c:	16e00030 	bnez	s7,800023e0 <disk0_io+0x17c>
80002320:	2e024000 	sltiu	v0,s0,16384
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:98
			assert(copied != 0 && copied <= resid
			       && copied % DISK0_BLKSIZE == 0);
			nblks = copied / DISK0_BLKSIZE;
			disk0_write_blks_nolock(blkno, nblks);
		} else {
			if (alen > resid) {
80002324:	1040002b 	beqz	v0,800023d4 <disk0_io+0x170>
80002328:	24150020 	li	s5,32
8000232c:	00109b02 	srl	s3,s0,0xc
80002330:	0013a8c0 	sll	s5,s3,0x3
80002334:	02009021 	move	s2,s0
disk0_read_blks_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:45
static void disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
80002338:	8fc634d4 	lw	a2,13524(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:43
}

static void disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
8000233c:	0011a0c0 	sll	s4,s1,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:45
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
80002340:	24040002 	li	a0,2
80002344:	02802821 	move	a1,s4
80002348:	0c006ce4 	jal	8001b390 <ide_read_secs>
8000234c:	02a03821 	move	a3,s5
80002350:	1440004f 	bnez	v0,80002490 <disk0_io+0x22c>
80002354:	02c02021 	move	a0,s6
disk0_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:103
			if (alen > resid) {
				alen = resid;
			}
			nblks = alen / DISK0_BLKSIZE;
			disk0_read_blks_nolock(blkno, nblks);
			iobuf_move(iob, disk0_buffer, alen, 1, &copied);
80002358:	3c028015 	lui	v0,0x8015
8000235c:	8c4534d4 	lw	a1,13524(v0)
80002360:	27a20020 	addiu	v0,sp,32
80002364:	02403021 	move	a2,s2
80002368:	24070001 	li	a3,1
8000236c:	0c003387 	jal	8000ce1c <iobuf_move>
80002370:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:104
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
80002374:	8fa20020 	lw	v0,32(sp)
80002378:	14520035 	bne	v0,s2,80002450 <disk0_io+0x1ec>
8000237c:	32520fff 	andi	s2,s2,0xfff
80002380:	16400034 	bnez	s2,80002454 <disk0_io+0x1f0>
80002384:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:106
		}
		resid -= copied, blkno += nblks;
80002388:	02028023 	subu	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:89
	if (nblks == 0) {
		return 0;
	}

	lock_disk0();
	while (resid != 0) {
8000238c:	1600ffe3 	bnez	s0,8000231c <disk0_io+0xb8>
80002390:	02338821 	addu	s1,s1,s3
unlock_disk0():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:27
	down(&(disk0_sem));
}

static void unlock_disk0(void)
{
	up(&(disk0_sem));
80002394:	3c028015 	lui	v0,0x8015
80002398:	0c006725 	jal	80019c94 <up>
8000239c:	244434c0 	addiu	a0,v0,13504
disk0_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:110
		}
		resid -= copied, blkno += nblks;
	}
	unlock_disk0();
	return 0;
}
800023a0:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:109
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
		}
		resid -= copied, blkno += nblks;
	}
	unlock_disk0();
	return 0;
800023a4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:110
}
800023a8:	8fbe0048 	lw	s8,72(sp)
800023ac:	8fb70044 	lw	s7,68(sp)
800023b0:	8fb60040 	lw	s6,64(sp)
800023b4:	8fb5003c 	lw	s5,60(sp)
800023b8:	8fb40038 	lw	s4,56(sp)
800023bc:	8fb30034 	lw	s3,52(sp)
800023c0:	8fb20030 	lw	s2,48(sp)
800023c4:	8fb1002c 	lw	s1,44(sp)
800023c8:	8fb00028 	lw	s0,40(sp)
800023cc:	03e00008 	jr	ra
800023d0:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:98
			assert(copied != 0 && copied <= resid
			       && copied % DISK0_BLKSIZE == 0);
			nblks = copied / DISK0_BLKSIZE;
			disk0_write_blks_nolock(blkno, nblks);
		} else {
			if (alen > resid) {
800023d4:	24130004 	li	s3,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:90
		return 0;
	}

	lock_disk0();
	while (resid != 0) {
		size_t copied, alen = DISK0_BUFSIZE;
800023d8:	080008ce 	j	80002338 <disk0_io+0xd4>
800023dc:	24124000 	li	s2,16384
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:92
		if (write) {
			iobuf_move(iob, disk0_buffer, alen, 0, &copied);
800023e0:	8fc534d4 	lw	a1,13524(s8)
800023e4:	27a20020 	addiu	v0,sp,32
800023e8:	02c02021 	move	a0,s6
800023ec:	24064000 	li	a2,16384
800023f0:	00003821 	move	a3,zero
800023f4:	0c003387 	jal	8000ce1c <iobuf_move>
800023f8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:93
			assert(copied != 0 && copied <= resid
800023fc:	8fb30020 	lw	s3,32(sp)
80002400:	1260001b 	beqz	s3,80002470 <disk0_io+0x20c>
80002404:	0213102b 	sltu	v0,s0,s3
80002408:	14400019 	bnez	v0,80002470 <disk0_io+0x20c>
8000240c:	32620fff 	andi	v0,s3,0xfff
80002410:	14400017 	bnez	v0,80002470 <disk0_io+0x20c>
80002414:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:95
			       && copied % DISK0_BLKSIZE == 0);
			nblks = copied / DISK0_BLKSIZE;
80002418:	00139b02 	srl	s3,s3,0xc
disk0_write_blks_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:58
static void disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
8000241c:	8c4634d4 	lw	a2,13524(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:56
}

static void disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks)
{
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
80002420:	0011a0c0 	sll	s4,s1,0x3
80002424:	001390c0 	sll	s2,s3,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:58
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
80002428:	24040002 	li	a0,2
8000242c:	02802821 	move	a1,s4
80002430:	0c006cf6 	jal	8001b3d8 <ide_write_secs>
80002434:	02403821 	move	a3,s2
80002438:	14400020 	bnez	v0,800024bc <disk0_io+0x258>
8000243c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:104
				alen = resid;
			}
			nblks = alen / DISK0_BLKSIZE;
			disk0_read_blks_nolock(blkno, nblks);
			iobuf_move(iob, disk0_buffer, alen, 1, &copied);
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
80002440:	080008e2 	j	80002388 <disk0_io+0x124>
80002444:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:80
		return -E_INVAL;
	}

	/* don't allow I/O past the end of disk0 */
	if (blkno + nblks > dev->d_blocks) {
		return -E_INVAL;
80002448:	080008b7 	j	800022dc <disk0_io+0x78>
8000244c:	2402ffea 	li	v0,-22
disk0_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:104
				alen = resid;
			}
			nblks = alen / DISK0_BLKSIZE;
			disk0_read_blks_nolock(blkno, nblks);
			iobuf_move(iob, disk0_buffer, alen, 1, &copied);
			assert(copied == alen && copied % DISK0_BLKSIZE == 0);
80002450:	3c048002 	lui	a0,0x8002
80002454:	3c068002 	lui	a2,0x8002
80002458:	3c078002 	lui	a3,0x8002
8000245c:	24841068 	addiu	a0,a0,4200
80002460:	24050068 	li	a1,104
80002464:	24c60e48 	addiu	a2,a2,3656
80002468:	0c006b13 	jal	8001ac4c <__panic>
8000246c:	24e71148 	addiu	a3,a3,4424
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:93
	lock_disk0();
	while (resid != 0) {
		size_t copied, alen = DISK0_BUFSIZE;
		if (write) {
			iobuf_move(iob, disk0_buffer, alen, 0, &copied);
			assert(copied != 0 && copied <= resid
80002470:	3c048002 	lui	a0,0x8002
80002474:	3c068002 	lui	a2,0x8002
80002478:	3c078002 	lui	a3,0x8002
8000247c:	24841068 	addiu	a0,a0,4200
80002480:	2405005e 	li	a1,94
80002484:	24c60e48 	addiu	a2,a2,3656
80002488:	0c006b13 	jal	8001ac4c <__panic>
8000248c:	24e71074 	addiu	a3,a3,4212
disk0_read_blks_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:47
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
	     ide_read_secs(DISK0_DEV_NO, sectno, disk0_buffer, nsecs)) != 0) {
		panic
80002490:	3c048002 	lui	a0,0x8002
80002494:	3c068002 	lui	a2,0x8002
80002498:	24841068 	addiu	a0,a0,4200
8000249c:	24050031 	li	a1,49
800024a0:	24c61100 	addiu	a2,a2,4352
800024a4:	02203821 	move	a3,s1
800024a8:	afb40010 	sw	s4,16(sp)
800024ac:	afb30014 	sw	s3,20(sp)
800024b0:	afb50018 	sw	s5,24(sp)
800024b4:	0c006b13 	jal	8001ac4c <__panic>
800024b8:	afa2001c 	sw	v0,28(sp)
disk0_write_blks_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:60
	int ret;
	uint32_t sectno = blkno * DISK0_BLK_NSECT, nsecs =
	    nblks * DISK0_BLK_NSECT;
	if ((ret =
	     ide_write_secs(DISK0_DEV_NO, sectno, disk0_buffer, nsecs)) != 0) {
		panic
800024bc:	3c068002 	lui	a2,0x8002
800024c0:	24841068 	addiu	a0,a0,4200
800024c4:	2405003e 	li	a1,62
800024c8:	24c610b4 	addiu	a2,a2,4276
800024cc:	02203821 	move	a3,s1
800024d0:	afb40010 	sw	s4,16(sp)
800024d4:	afb30014 	sw	s3,20(sp)
800024d8:	afb20018 	sw	s2,24(sp)
800024dc:	0c006b13 	jal	8001ac4c <__panic>
800024e0:	afa2001c 	sw	v0,28(sp)

800024e4 <dev_init_disk0>:
dev_init_disk0():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:139
		panic("disk0 alloc buffer failed.\n");
	}
}

void dev_init_disk0(void)
{
800024e4:	27bdffe8 	addiu	sp,sp,-24
800024e8:	afb00010 	sw	s0,16(sp)
800024ec:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:141
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
800024f0:	0c000884 	jal	80002210 <dev_create_inode>
800024f4:	00000000 	nop
800024f8:	10400039 	beqz	v0,800025e0 <dev_init_disk0+0xfc>
800024fc:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:144
		panic("disk0: dev_create_node.\n");
	}
	disk0_device_init(vop_info(node, device));
80002500:	8c430038 	lw	v1,56(v0)
80002504:	24021234 	li	v0,4660
80002508:	1462002d 	bne	v1,v0,800025c0 <dev_init_disk0+0xdc>
8000250c:	02002021 	move	a0,s0
disk0_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:119
	return -E_UNIMP;
}

static void disk0_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
80002510:	00002821 	move	a1,zero
80002514:	0c005c5a 	jal	80017168 <memset>
80002518:	24060030 	li	a2,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:121
	static_assert(DISK0_BLKSIZE % SECTSIZE == 0);
	if (!ide_device_valid(DISK0_DEV_NO)) {
8000251c:	0c006ccd 	jal	8001b334 <ide_device_valid>
80002520:	24040002 	li	a0,2
80002524:	50400041 	beqzl	v0,8000262c <dev_init_disk0+0x148>
80002528:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:124
		panic("disk0 device isn't available.\n");
	}
	dev->d_blocks = ide_device_size(DISK0_DEV_NO) / DISK0_BLK_NSECT;
8000252c:	0c006cd8 	jal	8001b360 <ide_device_size>
80002530:	24040002 	li	a0,2
80002534:	000210c2 	srl	v0,v0,0x3
80002538:	ae020000 	sw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:125
	dev->d_blocksize = DISK0_BLKSIZE;
8000253c:	24021000 	li	v0,4096
80002540:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:126
	dev->d_open = disk0_open;
80002544:	3c028000 	lui	v0,0x8000
80002548:	2442224c 	addiu	v0,v0,8780
8000254c:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:127
	dev->d_close = disk0_close;
80002550:	3c028000 	lui	v0,0x8000
80002554:	24422254 	addiu	v0,v0,8788
80002558:	ae020024 	sw	v0,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:128
	dev->d_io = disk0_io;
8000255c:	3c028000 	lui	v0,0x8000
80002560:	24422264 	addiu	v0,v0,8804
80002564:	ae020028 	sw	v0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:129
	dev->d_ioctl = disk0_ioctl;
80002568:	3c028000 	lui	v0,0x8000
8000256c:	2442225c 	addiu	v0,v0,8796
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:130
	sem_init(&(disk0_sem), 1);
80002570:	3c048015 	lui	a0,0x8015
80002574:	248434c0 	addiu	a0,a0,13504
80002578:	24050001 	li	a1,1
8000257c:	0c00671f 	jal	80019c7c <sem_init>
80002580:	ae02002c 	sw	v0,44(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:133

	static_assert(DISK0_BUFSIZE % DISK0_BLKSIZE == 0);
	if ((disk0_buffer = kmalloc(DISK0_BUFSIZE)) == NULL) {
80002584:	0c00548e 	jal	80015238 <kmalloc>
80002588:	24044000 	li	a0,16384
8000258c:	3c038015 	lui	v1,0x8015
80002590:	10400020 	beqz	v0,80002614 <dev_init_disk0+0x130>
80002594:	ac6234d4 	sw	v0,13524(v1)
dev_init_disk0():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:147
		panic("disk0: dev_create_node.\n");
	}
	disk0_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk0", node, 1)) != 0) {
80002598:	3c048002 	lui	a0,0x8002
8000259c:	248411d0 	addiu	a0,a0,4560
800025a0:	02002821 	move	a1,s0
800025a4:	0c001443 	jal	8000510c <vfs_add_dev>
800025a8:	24060001 	li	a2,1
800025ac:	14400012 	bnez	v0,800025f8 <dev_init_disk0+0x114>
800025b0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:150
		panic("disk0: vfs_add_dev: %e.\n", ret);
	}
}
800025b4:	8fb00010 	lw	s0,16(sp)
800025b8:	03e00008 	jr	ra
800025bc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:144
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk0: dev_create_node.\n");
	}
	disk0_device_init(vop_info(node, device));
800025c0:	3c048002 	lui	a0,0x8002
800025c4:	3c068002 	lui	a2,0x8002
800025c8:	3c078002 	lui	a3,0x8002
800025cc:	24841068 	addiu	a0,a0,4200
800025d0:	24050090 	li	a1,144
800025d4:	24c60e48 	addiu	a2,a2,3656
800025d8:	0c006b13 	jal	8001ac4c <__panic>
800025dc:	24e70fdc 	addiu	a3,a3,4060
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:142

void dev_init_disk0(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk0: dev_create_node.\n");
800025e0:	3c048002 	lui	a0,0x8002
800025e4:	3c068002 	lui	a2,0x8002
800025e8:	24841068 	addiu	a0,a0,4200
800025ec:	2405008e 	li	a1,142
800025f0:	0c006b13 	jal	8001ac4c <__panic>
800025f4:	24c61178 	addiu	a2,a2,4472
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:148
	}
	disk0_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk0", node, 1)) != 0) {
		panic("disk0: vfs_add_dev: %e.\n", ret);
800025f8:	3c048002 	lui	a0,0x8002
800025fc:	3c068002 	lui	a2,0x8002
80002600:	24841068 	addiu	a0,a0,4200
80002604:	24050094 	li	a1,148
80002608:	24c611d8 	addiu	a2,a2,4568
8000260c:	0c006b13 	jal	8001ac4c <__panic>
80002610:	00403821 	move	a3,v0
disk0_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:134
	dev->d_ioctl = disk0_ioctl;
	sem_init(&(disk0_sem), 1);

	static_assert(DISK0_BUFSIZE % DISK0_BLKSIZE == 0);
	if ((disk0_buffer = kmalloc(DISK0_BUFSIZE)) == NULL) {
		panic("disk0 alloc buffer failed.\n");
80002614:	3c048002 	lui	a0,0x8002
80002618:	3c068002 	lui	a2,0x8002
8000261c:	24841068 	addiu	a0,a0,4200
80002620:	24050086 	li	a1,134
80002624:	0c006b13 	jal	8001ac4c <__panic>
80002628:	24c611b4 	addiu	a2,a2,4532
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk0.c:122
static void disk0_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	static_assert(DISK0_BLKSIZE % SECTSIZE == 0);
	if (!ide_device_valid(DISK0_DEV_NO)) {
		panic("disk0 device isn't available.\n");
8000262c:	3c068002 	lui	a2,0x8002
80002630:	24841068 	addiu	a0,a0,4200
80002634:	2405007a 	li	a1,122
80002638:	0c006b13 	jal	8001ac4c <__panic>
8000263c:	24c61194 	addiu	a2,a2,4500

80002640 <disk1_open>:
disk1_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:41

/* For open() */
static int disk1_open(struct device *dev, uint32_t open_flags)
{
	return 0;
}
80002640:	03e00008 	jr	ra
80002644:	00001021 	move	v0,zero

80002648 <disk1_close>:
disk1_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:47

/* For close() */
static int disk1_close(struct device *dev)
{
	return 0;
}
80002648:	03e00008 	jr	ra
8000264c:	00001021 	move	v0,zero

80002650 <disk1_io>:
disk1_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:53

/* For dop_io() */
static int disk1_io(struct device *dev, struct iobuf *iob, bool write)
{
	return -E_INVAL;
}
80002650:	03e00008 	jr	ra
80002654:	2402ffea 	li	v0,-22

80002658 <disk1_ioctl>:
disk1_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:59

/* For ioctl() */
static int disk1_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
80002658:	03e00008 	jr	ra
8000265c:	2402ffea 	li	v0,-22

80002660 <dev_init_disk1>:
dev_init_disk1():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:76

/*
 * Function to create and attach disk1:
 */
void dev_init_disk1(void)
{
80002660:	27bdffe8 	addiu	sp,sp,-24
80002664:	afb00010 	sw	s0,16(sp)
80002668:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:78
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
8000266c:	0c000884 	jal	80002210 <dev_create_inode>
80002670:	00000000 	nop
80002674:	10400029 	beqz	v0,8000271c <dev_init_disk1+0xbc>
80002678:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:81
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));
8000267c:	8c430038 	lw	v1,56(v0)
80002680:	24021234 	li	v0,4660
80002684:	1462001d 	bne	v1,v0,800026fc <dev_init_disk1+0x9c>
80002688:	02002021 	move	a0,s0
disk1_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:63
	return -E_INVAL;
}

static void disk1_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
8000268c:	00002821 	move	a1,zero
80002690:	0c005c5a 	jal	80017168 <memset>
80002694:	24060030 	li	a2,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:65
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
80002698:	24020001 	li	v0,1
8000269c:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:66
	dev->d_open = disk1_open;
800026a0:	3c028000 	lui	v0,0x8000
800026a4:	24422640 	addiu	v0,v0,9792
800026a8:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:67
	dev->d_close = disk1_close;
800026ac:	3c028000 	lui	v0,0x8000
800026b0:	24422648 	addiu	v0,v0,9800
800026b4:	ae020024 	sw	v0,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:68
	dev->d_io = disk1_io;
800026b8:	3c028000 	lui	v0,0x8000
800026bc:	24422650 	addiu	v0,v0,9808
800026c0:	ae020028 	sw	v0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:69
	dev->d_ioctl = disk1_ioctl;
800026c4:	3c028000 	lui	v0,0x8000
800026c8:	24422658 	addiu	v0,v0,9816
dev_init_disk1():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:84
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk1", node, 1)) != 0) {
800026cc:	3c048002 	lui	a0,0x8002
disk1_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:64
}

static void disk1_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
800026d0:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:69
	dev->d_blocksize = 1;
	dev->d_open = disk1_open;
	dev->d_close = disk1_close;
	dev->d_io = disk1_io;
	dev->d_ioctl = disk1_ioctl;
800026d4:	ae02002c 	sw	v0,44(s0)
dev_init_disk1():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:84
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk1", node, 1)) != 0) {
800026d8:	2484121c 	addiu	a0,a0,4636
800026dc:	02002821 	move	a1,s0
800026e0:	0c001443 	jal	8000510c <vfs_add_dev>
800026e4:	24060001 	li	a2,1
800026e8:	14400012 	bnez	v0,80002734 <dev_init_disk1+0xd4>
800026ec:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:87
		panic("disk1: vfs_add_dev: %e.\n", ret);
	}
}
800026f0:	8fb00010 	lw	s0,16(sp)
800026f4:	03e00008 	jr	ra
800026f8:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:81
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk1: dev_create_node.\n");
	}
	disk1_device_init(vop_info(node, device));
800026fc:	3c048002 	lui	a0,0x8002
80002700:	3c068002 	lui	a2,0x8002
80002704:	3c078002 	lui	a3,0x8002
80002708:	248411f4 	addiu	a0,a0,4596
8000270c:	24050051 	li	a1,81
80002710:	24c60e48 	addiu	a2,a2,3656
80002714:	0c006b13 	jal	8001ac4c <__panic>
80002718:	24e70fdc 	addiu	a3,a3,4060
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:79
 */
void dev_init_disk1(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("disk1: dev_create_node.\n");
8000271c:	3c048002 	lui	a0,0x8002
80002720:	3c068002 	lui	a2,0x8002
80002724:	248411f4 	addiu	a0,a0,4596
80002728:	2405004f 	li	a1,79
8000272c:	0c006b13 	jal	8001ac4c <__panic>
80002730:	24c61200 	addiu	a2,a2,4608
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_disk1.c:85
	}
	disk1_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("disk1", node, 1)) != 0) {
		panic("disk1: vfs_add_dev: %e.\n", ret);
80002734:	3c048002 	lui	a0,0x8002
80002738:	3c068002 	lui	a2,0x8002
8000273c:	248411f4 	addiu	a0,a0,4596
80002740:	24050055 	li	a1,85
80002744:	24c61224 	addiu	a2,a2,4644
80002748:	0c006b13 	jal	8001ac4c <__panic>
8000274c:	00403821 	move	a3,v0

80002750 <null_open>:
null_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:17

/* For open() */
static int null_open(struct device *dev, uint32_t open_flags)
{
	return 0;
}
80002750:	03e00008 	jr	ra
80002754:	00001021 	move	v0,zero

80002758 <null_close>:
null_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:23

/* For close() */
static int null_close(struct device *dev)
{
	return 0;
}
80002758:	03e00008 	jr	ra
8000275c:	00001021 	move	v0,zero

80002760 <null_io>:
null_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:32
{
/*
 * On write, discard everything without looking at it.
 * On read, do nothing, generating an immediate EOF.
 */
	if (write) {
80002760:	54c00001 	bnezl	a2,80002768 <null_io+0x8>
80002764:	aca0000c 	sw	zero,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:36
		iob->io_resid = 0;
	}
	return 0;
}
80002768:	03e00008 	jr	ra
8000276c:	00001021 	move	v0,zero

80002770 <null_ioctl>:
null_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:42

/* For ioctl() */
static int null_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
80002770:	03e00008 	jr	ra
80002774:	2402ffea 	li	v0,-22

80002778 <dev_init_null>:
dev_init_null():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:59

/*
 * Function to create and attach null:
 */
void dev_init_null(void)
{
80002778:	27bdffe8 	addiu	sp,sp,-24
8000277c:	afb00010 	sw	s0,16(sp)
80002780:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:61
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002784:	0c000884 	jal	80002210 <dev_create_inode>
80002788:	00000000 	nop
8000278c:	10400029 	beqz	v0,80002834 <dev_init_null+0xbc>
80002790:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:64
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));
80002794:	8c430038 	lw	v1,56(v0)
80002798:	24021234 	li	v0,4660
8000279c:	1462001d 	bne	v1,v0,80002814 <dev_init_null+0x9c>
800027a0:	02002021 	move	a0,s0
null_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:46
	return -E_INVAL;
}

static void null_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
800027a4:	00002821 	move	a1,zero
800027a8:	0c005c5a 	jal	80017168 <memset>
800027ac:	24060030 	li	a2,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:48
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
800027b0:	24020001 	li	v0,1
800027b4:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:49
	dev->d_open = null_open;
800027b8:	3c028000 	lui	v0,0x8000
800027bc:	24422750 	addiu	v0,v0,10064
800027c0:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:50
	dev->d_close = null_close;
800027c4:	3c028000 	lui	v0,0x8000
800027c8:	24422758 	addiu	v0,v0,10072
800027cc:	ae020024 	sw	v0,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:51
	dev->d_io = null_io;
800027d0:	3c028000 	lui	v0,0x8000
800027d4:	24422760 	addiu	v0,v0,10080
800027d8:	ae020028 	sw	v0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:52
	dev->d_ioctl = null_ioctl;
800027dc:	3c028000 	lui	v0,0x8000
800027e0:	24422770 	addiu	v0,v0,10096
dev_init_null():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:67
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("null", node, 0)) != 0) {
800027e4:	3c048002 	lui	a0,0x8002
null_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:47
}

static void null_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
800027e8:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:52
	dev->d_blocksize = 1;
	dev->d_open = null_open;
	dev->d_close = null_close;
	dev->d_io = null_io;
	dev->d_ioctl = null_ioctl;
800027ec:	ae02002c 	sw	v0,44(s0)
dev_init_null():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:67
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("null", node, 0)) != 0) {
800027f0:	24841264 	addiu	a0,a0,4708
800027f4:	02002821 	move	a1,s0
800027f8:	0c001443 	jal	8000510c <vfs_add_dev>
800027fc:	00003021 	move	a2,zero
80002800:	14400012 	bnez	v0,8000284c <dev_init_null+0xd4>
80002804:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:70
		panic("null: vfs_add_dev: %e.\n", ret);
	}
}
80002808:	8fb00010 	lw	s0,16(sp)
8000280c:	03e00008 	jr	ra
80002810:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:64
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("null: dev_create_node.\n");
	}
	null_device_init(vop_info(node, device));
80002814:	3c048002 	lui	a0,0x8002
80002818:	3c068002 	lui	a2,0x8002
8000281c:	3c078002 	lui	a3,0x8002
80002820:	24841240 	addiu	a0,a0,4672
80002824:	24050040 	li	a1,64
80002828:	24c60e48 	addiu	a2,a2,3656
8000282c:	0c006b13 	jal	8001ac4c <__panic>
80002830:	24e70fdc 	addiu	a3,a3,4060
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:62
 */
void dev_init_null(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("null: dev_create_node.\n");
80002834:	3c048002 	lui	a0,0x8002
80002838:	3c068002 	lui	a2,0x8002
8000283c:	24841240 	addiu	a0,a0,4672
80002840:	2405003e 	li	a1,62
80002844:	0c006b13 	jal	8001ac4c <__panic>
80002848:	24c6124c 	addiu	a2,a2,4684
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_null.c:68
	}
	null_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("null", node, 0)) != 0) {
		panic("null: vfs_add_dev: %e.\n", ret);
8000284c:	3c048002 	lui	a0,0x8002
80002850:	3c068002 	lui	a2,0x8002
80002854:	24841240 	addiu	a0,a0,4672
80002858:	24050044 	li	a1,68
8000285c:	24c6126c 	addiu	a2,a2,4716
80002860:	0c006b13 	jal	8001ac4c <__panic>
80002864:	00403821 	move	a3,v0

80002868 <stdin_open>:
stdin_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:82
}

static int stdin_open(struct device *dev, uint32_t open_flags)
{
	if (open_flags != O_RDONLY) {
		return -E_INVAL;
80002868:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:85
	}
	return 0;
}
8000286c:	03e00008 	jr	ra
80002870:	0005100a 	movz	v0,zero,a1

80002874 <stdin_close>:
stdin_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:90

static int stdin_close(struct device *dev)
{
	return 0;
}
80002874:	03e00008 	jr	ra
80002878:	00001021 	move	v0,zero

8000287c <stdin_ioctl>:
stdin_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:107
}

static int stdin_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
8000287c:	03e00008 	jr	ra
80002880:	2402ffea 	li	v0,-22

80002884 <stdin_io>:
stdin_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:93
{
	return 0;
}

static int stdin_io(struct device *dev, struct iobuf *iob, bool write)
{
80002884:	27bdffa8 	addiu	sp,sp,-88
80002888:	afb60048 	sw	s6,72(sp)
8000288c:	afb50044 	sw	s5,68(sp)
80002890:	afbf0054 	sw	ra,84(sp)
80002894:	afbe0050 	sw	s8,80(sp)
80002898:	afb7004c 	sw	s7,76(sp)
8000289c:	afb40040 	sw	s4,64(sp)
800028a0:	afb3003c 	sw	s3,60(sp)
800028a4:	afb20038 	sw	s2,56(sp)
800028a8:	afb10034 	sw	s1,52(sp)
800028ac:	afb00030 	sw	s0,48(sp)
800028b0:	00a0b021 	move	s6,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:94
	if (!write) {
800028b4:	14c0003f 	bnez	a2,800029b4 <stdin_io+0x130>
800028b8:	2415ffea 	li	s5,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:96
		int ret;
		if ((ret = dev_stdin_read(iob->io_base, iob->io_resid)) > 0) {
800028bc:	8cbe0000 	lw	s8,0(a1)
800028c0:	8cb7000c 	lw	s7,12(a1)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800028c4:	40026000 	mfc0	v0,c0_status
800028c8:	30420001 	andi	v0,v0,0x1
800028cc:	10400003 	beqz	v0,800028dc <stdin_io+0x58>
800028d0:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800028d4:	0c006d0c 	jal	8001b430 <intr_disable>
800028d8:	24100001 	li	s0,1
dev_stdin_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:61
				ret++;
				if (p_rpos >= p_wpos)
					break;
			} else {
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
800028dc:	3c128015 	lui	s2,0x8015
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:42
	}
}

static int dev_stdin_read(char *buf, size_t len)
{
	int ret = 0;
800028e0:	0000a821 	move	s5,zero
800028e4:	3c148015 	lui	s4,0x8015
800028e8:	3c138015 	lui	s3,0x8015
dev_stdin_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:61
				ret++;
				if (p_rpos >= p_wpos)
					break;
			} else {
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
800028ec:	265244e0 	addiu	s2,s2,17632
800028f0:	3c118000 	lui	s1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:47
	int ret = 0;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		while (1) {
			if (ret >= len)
800028f4:	16b70012 	bne	s5,s7,80002940 <stdin_io+0xbc>
800028f8:	8e8344dc 	lw	v1,17628(s4)
800028fc:	08000a66 	j	80002998 <stdin_io+0x114>
80002900:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:64
			} else {
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
				local_intr_restore(intr_flag);

				schedule();
80002904:	0c00059f 	jal	8000167c <schedule>
80002908:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000290c:	40026000 	mfc0	v0,c0_status
80002910:	30420001 	andi	v0,v0,0x1
80002914:	10400003 	beqz	v0,80002924 <stdin_io+0xa0>
80002918:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000291c:	0c006d0c 	jal	8001b430 <intr_disable>
80002920:	24100001 	li	s0,1
dev_stdin_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:67

				local_intr_save(intr_flag);
				wait_current_del(wait_queue, wait);
80002924:	0c0069be 	jal	8001a6f8 <wait_in_queue>
80002928:	27a40010 	addiu	a0,sp,16
8000292c:	14400013 	bnez	v0,8000297c <stdin_io+0xf8>
80002930:	8fa30014 	lw	v1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (wait->wakeup_flags == WT_KBD) {
80002934:	26220004 	addiu	v0,s1,4
80002938:	14620017 	bne	v1,v0,80002998 <stdin_io+0x114>
8000293c:	8e8344dc 	lw	v1,17628(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:50
	{
		while (1) {
			if (ret >= len)
				break;
try_again:
			if (p_rpos < p_wpos) {
80002940:	8e6734d8 	lw	a3,13528(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:61
				ret++;
				if (p_rpos >= p_wpos)
					break;
			} else {
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
80002944:	02402021 	move	a0,s2
80002948:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:50
	{
		while (1) {
			if (ret >= len)
				break;
try_again:
			if (p_rpos < p_wpos) {
8000294c:	0067382a 	slt	a3,v1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:61
				ret++;
				if (p_rpos >= p_wpos)
					break;
			} else {
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
80002950:	26260004 	addiu	a2,s1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:50
	{
		while (1) {
			if (ret >= len)
				break;
try_again:
			if (p_rpos < p_wpos) {
80002954:	14e00028 	bnez	a3,800029f8 <stdin_io+0x174>
80002958:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:61
				ret++;
				if (p_rpos >= p_wpos)
					break;
			} else {
				wait_t __wait, *wait = &__wait;
				wait_current_set(wait_queue, wait, WT_KBD);
8000295c:	0c006a08 	jal	8001a820 <wait_current_set>
80002960:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002964:	1200ffe7 	beqz	s0,80002904 <stdin_io+0x80>
80002968:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000296c:	0c006d08 	jal	8001b420 <intr_enable>
80002970:	00000000 	nop
80002974:	08000a41 	j	80002904 <stdin_io+0x80>
80002978:	00000000 	nop
dev_stdin_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:67
				local_intr_restore(intr_flag);

				schedule();

				local_intr_save(intr_flag);
				wait_current_del(wait_queue, wait);
8000297c:	02402021 	move	a0,s2
80002980:	0c00696e 	jal	8001a5b8 <wait_queue_del>
80002984:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:68
				if (wait->wakeup_flags == WT_KBD) {
80002988:	8fa30014 	lw	v1,20(sp)
8000298c:	26220004 	addiu	v0,s1,4
80002990:	1062ffeb 	beq	v1,v0,80002940 <stdin_io+0xbc>
80002994:	8e8344dc 	lw	v1,17628(s4)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002998:	16000013 	bnez	s0,800029e8 <stdin_io+0x164>
8000299c:	00000000 	nop
stdin_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:96

static int stdin_io(struct device *dev, struct iobuf *iob, bool write)
{
	if (!write) {
		int ret;
		if ((ret = dev_stdin_read(iob->io_base, iob->io_resid)) > 0) {
800029a0:	12a00005 	beqz	s5,800029b8 <stdin_io+0x134>
800029a4:	8fbf0054 	lw	ra,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:97
			iob->io_resid -= ret;
800029a8:	8ec2000c 	lw	v0,12(s6)
800029ac:	00551023 	subu	v0,v0,s5
800029b0:	aec2000c 	sw	v0,12(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:102
		}
		return ret;
	}
	return -E_INVAL;
}
800029b4:	8fbf0054 	lw	ra,84(sp)
800029b8:	02a01021 	move	v0,s5
800029bc:	8fbe0050 	lw	s8,80(sp)
800029c0:	8fb7004c 	lw	s7,76(sp)
800029c4:	8fb60048 	lw	s6,72(sp)
800029c8:	8fb50044 	lw	s5,68(sp)
800029cc:	8fb40040 	lw	s4,64(sp)
800029d0:	8fb3003c 	lw	s3,60(sp)
800029d4:	8fb20038 	lw	s2,56(sp)
800029d8:	8fb10034 	lw	s1,52(sp)
800029dc:	8fb00030 	lw	s0,48(sp)
800029e0:	03e00008 	jr	ra
800029e4:	27bd0058 	addiu	sp,sp,88
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800029e8:	0c006d08 	jal	8001b420 <intr_enable>
800029ec:	00000000 	nop
800029f0:	08000a68 	j	800029a0 <stdin_io+0x11c>
800029f4:	00000000 	nop
dev_stdin_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:51
		while (1) {
			if (ret >= len)
				break;
try_again:
			if (p_rpos < p_wpos) {
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
800029f8:	000327c3 	sra	a0,v1,0x1f
800029fc:	00042502 	srl	a0,a0,0x14
80002a00:	00641821 	addu	v1,v1,a0
80002a04:	30630fff 	andi	v1,v1,0xfff
80002a08:	00642023 	subu	a0,v1,a0
80002a0c:	3c038015 	lui	v1,0x8015
80002a10:	246334dc 	addiu	v1,v1,13532
80002a14:	00832021 	addu	a0,a0,v1
80002a18:	90830000 	lbu	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:53
				//FIXME
				kcons_putc(c);
80002a1c:	afa2002c 	sw	v0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:56
				*buf++ = c;
				p_rpos++;
				ret++;
80002a20:	26b50001 	addiu	s5,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:53
				break;
try_again:
			if (p_rpos < p_wpos) {
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				kcons_putc(c);
80002a24:	00602021 	move	a0,v1
80002a28:	0c006c63 	jal	8001b18c <cons_putc>
80002a2c:	afa30028 	sw	v1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:55
				*buf++ = c;
				p_rpos++;
80002a30:	8fa2002c 	lw	v0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:54
try_again:
			if (p_rpos < p_wpos) {
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				kcons_putc(c);
				*buf++ = c;
80002a34:	8fa30028 	lw	v1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:57
				p_rpos++;
				ret++;
				if (p_rpos >= p_wpos)
80002a38:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:55
			if (p_rpos < p_wpos) {
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				kcons_putc(c);
				*buf++ = c;
				p_rpos++;
80002a3c:	8c4544dc 	lw	a1,17628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:57
				ret++;
				if (p_rpos >= p_wpos)
80002a40:	8c8434d8 	lw	a0,13528(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:54
try_again:
			if (p_rpos < p_wpos) {
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				kcons_putc(c);
				*buf++ = c;
80002a44:	a3c30000 	sb	v1,0(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:55
				p_rpos++;
80002a48:	24a30001 	addiu	v1,a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:57
				ret++;
				if (p_rpos >= p_wpos)
80002a4c:	0064202a 	slt	a0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:54
try_again:
			if (p_rpos < p_wpos) {
				char c = stdin_buffer[p_rpos % STDIN_BUFSIZE];
				//FIXME
				kcons_putc(c);
				*buf++ = c;
80002a50:	27de0001 	addiu	s8,s8,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:57
				p_rpos++;
				ret++;
				if (p_rpos >= p_wpos)
80002a54:	1480ffa7 	bnez	a0,800028f4 <stdin_io+0x70>
80002a58:	ac4344dc 	sw	v1,17628(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002a5c:	1200ffd0 	beqz	s0,800029a0 <stdin_io+0x11c>
80002a60:	00000000 	nop
80002a64:	08000a7a 	j	800029e8 <stdin_io+0x164>
80002a68:	00000000 	nop

80002a6c <dev_stdin_write>:
dev_stdin_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:23
static char stdin_buffer[STDIN_BUFSIZE];
static off_t p_rpos, p_wpos;
static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;

void dev_stdin_write(char c)
{
80002a6c:	27bdffe0 	addiu	sp,sp,-32
80002a70:	afb10018 	sw	s1,24(sp)
80002a74:	309100ff 	andi	s1,a0,0xff
80002a78:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:25
	bool intr_flag;
	if (c != '\0') {
80002a7c:	16200006 	bnez	s1,80002a98 <dev_stdin_write+0x2c>
80002a80:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:38
				wakeup_queue(wait_queue, WT_KBD, 1);
			}
		}
		local_intr_restore(intr_flag);
	}
}
80002a84:	8fbf001c 	lw	ra,28(sp)
80002a88:	8fb10018 	lw	s1,24(sp)
80002a8c:	8fb00014 	lw	s0,20(sp)
80002a90:	03e00008 	jr	ra
80002a94:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80002a98:	40026000 	mfc0	v0,c0_status
80002a9c:	30420001 	andi	v0,v0,0x1
80002aa0:	10400003 	beqz	v0,80002ab0 <dev_stdin_write+0x44>
80002aa4:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80002aa8:	0c006d0c 	jal	8001b430 <intr_disable>
80002aac:	24100001 	li	s0,1
dev_stdin_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:28
{
	bool intr_flag;
	if (c != '\0') {
		local_intr_save(intr_flag);
		{
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
80002ab0:	3c048015 	lui	a0,0x8015
80002ab4:	8c8234d8 	lw	v0,13528(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:29
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
80002ab8:	3c038015 	lui	v1,0x8015
80002abc:	8c6544dc 	lw	a1,17628(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:28
{
	bool intr_flag;
	if (c != '\0') {
		local_intr_save(intr_flag);
		{
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
80002ac0:	00021fc3 	sra	v1,v0,0x1f
80002ac4:	00031d02 	srl	v1,v1,0x14
80002ac8:	00433021 	addu	a2,v0,v1
80002acc:	30c60fff 	andi	a2,a2,0xfff
80002ad0:	00c31823 	subu	v1,a2,v1
80002ad4:	3c068015 	lui	a2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:29
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
80002ad8:	00452823 	subu	a1,v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:28
{
	bool intr_flag;
	if (c != '\0') {
		local_intr_save(intr_flag);
		{
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
80002adc:	24c634dc 	addiu	a2,a2,13532
80002ae0:	00661821 	addu	v1,v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:29
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
80002ae4:	28a51000 	slti	a1,a1,4096
80002ae8:	10a00003 	beqz	a1,80002af8 <dev_stdin_write+0x8c>
80002aec:	a0710000 	sb	s1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:30
				p_wpos++;
80002af0:	24420001 	addiu	v0,v0,1
80002af4:	ac8234d8 	sw	v0,13528(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:32
			}
			if (!wait_queue_empty(wait_queue)) {
80002af8:	3c118015 	lui	s1,0x8015
80002afc:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80002b00:	262444e0 	addiu	a0,s1,17632
80002b04:	10400007 	beqz	v0,80002b24 <dev_stdin_write+0xb8>
80002b08:	3c058000 	lui	a1,0x8000
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002b0c:	1200ffde 	beqz	s0,80002a88 <dev_stdin_write+0x1c>
80002b10:	8fbf001c 	lw	ra,28(sp)
dev_stdin_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:38
				wakeup_queue(wait_queue, WT_KBD, 1);
			}
		}
		local_intr_restore(intr_flag);
	}
}
80002b14:	8fb10018 	lw	s1,24(sp)
80002b18:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80002b1c:	08006d08 	j	8001b420 <intr_enable>
80002b20:	27bd0020 	addiu	sp,sp,32
dev_stdin_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:33
			stdin_buffer[p_wpos % STDIN_BUFSIZE] = c;
			if (p_wpos - p_rpos < STDIN_BUFSIZE) {
				p_wpos++;
			}
			if (!wait_queue_empty(wait_queue)) {
				wakeup_queue(wait_queue, WT_KBD, 1);
80002b24:	262444e0 	addiu	a0,s1,17632
80002b28:	24a50004 	addiu	a1,a1,4
80002b2c:	0c0069dc 	jal	8001a770 <wakeup_queue>
80002b30:	24060001 	li	a2,1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80002b34:	1200ffd4 	beqz	s0,80002a88 <dev_stdin_write+0x1c>
80002b38:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:38
			}
		}
		local_intr_restore(intr_flag);
	}
}
80002b3c:	08000ac6 	j	80002b18 <dev_stdin_write+0xac>
80002b40:	8fb10018 	lw	s1,24(sp)

80002b44 <dev_init_stdin>:
dev_init_stdin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:124
	p_rpos = p_wpos = 0;
	wait_queue_init(wait_queue);
}

void dev_init_stdin(void)
{
80002b44:	27bdffe8 	addiu	sp,sp,-24
80002b48:	afb00010 	sw	s0,16(sp)
80002b4c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:126
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002b50:	0c000884 	jal	80002210 <dev_create_inode>
80002b54:	00000000 	nop
80002b58:	10400030 	beqz	v0,80002c1c <dev_init_stdin+0xd8>
80002b5c:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:129
		panic("stdin: dev_create_node.\n");
	}
	stdin_device_init(vop_info(node, device));
80002b60:	8c430038 	lw	v1,56(v0)
80002b64:	24021234 	li	v0,4660
80002b68:	14620024 	bne	v1,v0,80002bfc <dev_init_stdin+0xb8>
80002b6c:	00002821 	move	a1,zero
stdin_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:111
	return -E_INVAL;
}

static void stdin_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
80002b70:	24060030 	li	a2,48
80002b74:	0c005c5a 	jal	80017168 <memset>
80002b78:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:113
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
80002b7c:	24020001 	li	v0,1
80002b80:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:114
	dev->d_open = stdin_open;
80002b84:	3c028000 	lui	v0,0x8000
80002b88:	24422868 	addiu	v0,v0,10344
80002b8c:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:115
	dev->d_close = stdin_close;
80002b90:	3c028000 	lui	v0,0x8000
80002b94:	24422874 	addiu	v0,v0,10356
80002b98:	ae020024 	sw	v0,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:116
	dev->d_io = stdin_io;
80002b9c:	3c028000 	lui	v0,0x8000
80002ba0:	24422884 	addiu	v0,v0,10372
80002ba4:	ae020028 	sw	v0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:117
	dev->d_ioctl = stdin_ioctl;
80002ba8:	3c028000 	lui	v0,0x8000
80002bac:	2442287c 	addiu	v0,v0,10364
80002bb0:	ae02002c 	sw	v0,44(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:120

	p_rpos = p_wpos = 0;
	wait_queue_init(wait_queue);
80002bb4:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:119
	dev->d_open = stdin_open;
	dev->d_close = stdin_close;
	dev->d_io = stdin_io;
	dev->d_ioctl = stdin_ioctl;

	p_rpos = p_wpos = 0;
80002bb8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:120
	wait_queue_init(wait_queue);
80002bbc:	248444e0 	addiu	a0,a0,17632
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:119
	dev->d_open = stdin_open;
	dev->d_close = stdin_close;
	dev->d_io = stdin_io;
	dev->d_ioctl = stdin_ioctl;

	p_rpos = p_wpos = 0;
80002bc0:	ac4034d8 	sw	zero,13528(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:112
}

static void stdin_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
80002bc4:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:119
	dev->d_open = stdin_open;
	dev->d_close = stdin_close;
	dev->d_io = stdin_io;
	dev->d_ioctl = stdin_ioctl;

	p_rpos = p_wpos = 0;
80002bc8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:120
	wait_queue_init(wait_queue);
80002bcc:	0c006953 	jal	8001a54c <wait_queue_init>
80002bd0:	ac4044dc 	sw	zero,17628(v0)
dev_init_stdin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:132
		panic("stdin: dev_create_node.\n");
	}
	stdin_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdin", node, 0)) != 0) {
80002bd4:	3c048002 	lui	a0,0x8002
80002bd8:	248412ac 	addiu	a0,a0,4780
80002bdc:	02002821 	move	a1,s0
80002be0:	0c001443 	jal	8000510c <vfs_add_dev>
80002be4:	00003021 	move	a2,zero
80002be8:	14400012 	bnez	v0,80002c34 <dev_init_stdin+0xf0>
80002bec:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:135
		panic("stdin: vfs_add_dev: %e.\n", ret);
	}
}
80002bf0:	8fb00010 	lw	s0,16(sp)
80002bf4:	03e00008 	jr	ra
80002bf8:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:129
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdin: dev_create_node.\n");
	}
	stdin_device_init(vop_info(node, device));
80002bfc:	3c048002 	lui	a0,0x8002
80002c00:	3c068002 	lui	a2,0x8002
80002c04:	3c078002 	lui	a3,0x8002
80002c08:	24841284 	addiu	a0,a0,4740
80002c0c:	24050081 	li	a1,129
80002c10:	24c60e48 	addiu	a2,a2,3656
80002c14:	0c006b13 	jal	8001ac4c <__panic>
80002c18:	24e70fdc 	addiu	a3,a3,4060
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:127

void dev_init_stdin(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdin: dev_create_node.\n");
80002c1c:	3c048002 	lui	a0,0x8002
80002c20:	3c068002 	lui	a2,0x8002
80002c24:	24841284 	addiu	a0,a0,4740
80002c28:	2405007f 	li	a1,127
80002c2c:	0c006b13 	jal	8001ac4c <__panic>
80002c30:	24c61290 	addiu	a2,a2,4752
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdin.c:133
	}
	stdin_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdin", node, 0)) != 0) {
		panic("stdin: vfs_add_dev: %e.\n", ret);
80002c34:	3c048002 	lui	a0,0x8002
80002c38:	3c068002 	lui	a2,0x8002
80002c3c:	24841284 	addiu	a0,a0,4740
80002c40:	24050085 	li	a1,133
80002c44:	24c612b4 	addiu	a2,a2,4788
80002c48:	0c006b13 	jal	8001ac4c <__panic>
80002c4c:	00403821 	move	a3,v0

80002c50 <stdout_open>:
stdout_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:15
#include <glue_kio.h>

static int stdout_open(struct device *dev, uint32_t open_flags)
{
	if (open_flags != O_WRONLY) {
		return -E_INVAL;
80002c50:	38a50001 	xori	a1,a1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:18
	}
	return 0;
}
80002c54:	2402ffea 	li	v0,-22
80002c58:	03e00008 	jr	ra
80002c5c:	0005100a 	movz	v0,zero,a1

80002c60 <stdout_close>:
stdout_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:23

static int stdout_close(struct device *dev)
{
	return 0;
}
80002c60:	03e00008 	jr	ra
80002c64:	00001021 	move	v0,zero

80002c68 <stdout_ioctl>:
stdout_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:40
}

static int stdout_ioctl(struct device *dev, int op, void *data)
{
	return -E_INVAL;
}
80002c68:	03e00008 	jr	ra
80002c6c:	2402ffea 	li	v0,-22

80002c70 <stdout_io>:
stdout_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:26
{
	return 0;
}

static int stdout_io(struct device *dev, struct iobuf *iob, bool write)
{
80002c70:	27bdffe0 	addiu	sp,sp,-32
80002c74:	afb00014 	sw	s0,20(sp)
80002c78:	afbf001c 	sw	ra,28(sp)
80002c7c:	afb10018 	sw	s1,24(sp)
80002c80:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:27
	if (write) {
80002c84:	10c0000c 	beqz	a2,80002cb8 <stdout_io+0x48>
80002c88:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:29
		char *data = iob->io_base;
		for (; iob->io_resid != 0; iob->io_resid--) {
80002c8c:	8ca3000c 	lw	v1,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:28
}

static int stdout_io(struct device *dev, struct iobuf *iob, bool write)
{
	if (write) {
		char *data = iob->io_base;
80002c90:	8cb10000 	lw	s1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:29
		for (; iob->io_resid != 0; iob->io_resid--) {
80002c94:	10600008 	beqz	v1,80002cb8 <stdout_io+0x48>
80002c98:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:30
			kcons_putc(*data++);
80002c9c:	92240000 	lbu	a0,0(s1)
80002ca0:	0c006c63 	jal	8001b18c <cons_putc>
80002ca4:	26310001 	addiu	s1,s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:29

static int stdout_io(struct device *dev, struct iobuf *iob, bool write)
{
	if (write) {
		char *data = iob->io_base;
		for (; iob->io_resid != 0; iob->io_resid--) {
80002ca8:	8e02000c 	lw	v0,12(s0)
80002cac:	2442ffff 	addiu	v0,v0,-1
80002cb0:	1440fffa 	bnez	v0,80002c9c <stdout_io+0x2c>
80002cb4:	ae02000c 	sw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:35
			kcons_putc(*data++);
		}
		return 0;
	}
	return -E_INVAL;
}
80002cb8:	8fbf001c 	lw	ra,28(sp)
80002cbc:	8fb10018 	lw	s1,24(sp)
80002cc0:	8fb00014 	lw	s0,20(sp)
80002cc4:	03e00008 	jr	ra
80002cc8:	27bd0020 	addiu	sp,sp,32

80002ccc <dev_init_stdout>:
dev_init_stdout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:54
	dev->d_io = stdout_io;
	dev->d_ioctl = stdout_ioctl;
}

void dev_init_stdout(void)
{
80002ccc:	27bdffe8 	addiu	sp,sp,-24
80002cd0:	afb00010 	sw	s0,16(sp)
80002cd4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:56
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
80002cd8:	0c000884 	jal	80002210 <dev_create_inode>
80002cdc:	00000000 	nop
80002ce0:	10400029 	beqz	v0,80002d88 <dev_init_stdout+0xbc>
80002ce4:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:59
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));
80002ce8:	8c430038 	lw	v1,56(v0)
80002cec:	24021234 	li	v0,4660
80002cf0:	1462001d 	bne	v1,v0,80002d68 <dev_init_stdout+0x9c>
80002cf4:	02002021 	move	a0,s0
stdout_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:44
	return -E_INVAL;
}

static void stdout_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
80002cf8:	00002821 	move	a1,zero
80002cfc:	0c005c5a 	jal	80017168 <memset>
80002d00:	24060030 	li	a2,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:46
	dev->d_blocks = 0;
	dev->d_blocksize = 1;
80002d04:	24020001 	li	v0,1
80002d08:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:47
	dev->d_open = stdout_open;
80002d0c:	3c028000 	lui	v0,0x8000
80002d10:	24422c50 	addiu	v0,v0,11344
80002d14:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:48
	dev->d_close = stdout_close;
80002d18:	3c028000 	lui	v0,0x8000
80002d1c:	24422c60 	addiu	v0,v0,11360
80002d20:	ae020024 	sw	v0,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:49
	dev->d_io = stdout_io;
80002d24:	3c028000 	lui	v0,0x8000
80002d28:	24422c70 	addiu	v0,v0,11376
80002d2c:	ae020028 	sw	v0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:50
	dev->d_ioctl = stdout_ioctl;
80002d30:	3c028000 	lui	v0,0x8000
80002d34:	24422c68 	addiu	v0,v0,11368
dev_init_stdout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:62
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdout", node, 0)) != 0) {
80002d38:	3c048002 	lui	a0,0x8002
stdout_device_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:45
}

static void stdout_device_init(struct device *dev)
{
	memset(dev, 0, sizeof(*dev));
	dev->d_blocks = 0;
80002d3c:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:50
	dev->d_blocksize = 1;
	dev->d_open = stdout_open;
	dev->d_close = stdout_close;
	dev->d_io = stdout_io;
	dev->d_ioctl = stdout_ioctl;
80002d40:	ae02002c 	sw	v0,44(s0)
dev_init_stdout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:62
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdout", node, 0)) != 0) {
80002d44:	248412fc 	addiu	a0,a0,4860
80002d48:	02002821 	move	a1,s0
80002d4c:	0c001443 	jal	8000510c <vfs_add_dev>
80002d50:	00003021 	move	a2,zero
80002d54:	14400012 	bnez	v0,80002da0 <dev_init_stdout+0xd4>
80002d58:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:65
		panic("stdout: vfs_add_dev: %e.\n", ret);
	}
}
80002d5c:	8fb00010 	lw	s0,16(sp)
80002d60:	03e00008 	jr	ra
80002d64:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:59
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdout: dev_create_node.\n");
	}
	stdout_device_init(vop_info(node, device));
80002d68:	3c048002 	lui	a0,0x8002
80002d6c:	3c068002 	lui	a2,0x8002
80002d70:	3c078002 	lui	a3,0x8002
80002d74:	248412d0 	addiu	a0,a0,4816
80002d78:	2405003b 	li	a1,59
80002d7c:	24c60e48 	addiu	a2,a2,3656
80002d80:	0c006b13 	jal	8001ac4c <__panic>
80002d84:	24e70fdc 	addiu	a3,a3,4060
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:57

void dev_init_stdout(void)
{
	struct inode *node;
	if ((node = dev_create_inode()) == NULL) {
		panic("stdout: dev_create_node.\n");
80002d88:	3c048002 	lui	a0,0x8002
80002d8c:	3c068002 	lui	a2,0x8002
80002d90:	248412d0 	addiu	a0,a0,4816
80002d94:	24050039 	li	a1,57
80002d98:	0c006b13 	jal	8001ac4c <__panic>
80002d9c:	24c612e0 	addiu	a2,a2,4832
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/devs/dev_stdout.c:63
	}
	stdout_device_init(vop_info(node, device));

	int ret;
	if ((ret = vfs_add_dev("stdout", node, 0)) != 0) {
		panic("stdout: vfs_add_dev: %e.\n", ret);
80002da0:	3c048002 	lui	a0,0x8002
80002da4:	3c068002 	lui	a2,0x8002
80002da8:	248412d0 	addiu	a0,a0,4816
80002dac:	2405003f 	li	a1,63
80002db0:	24c61304 	addiu	a2,a2,4868
80002db4:	0c006b13 	jal	8001ac4c <__panic>
80002db8:	00403821 	move	a3,v0

80002dbc <pipe_sync>:
pipe_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:24
}

static int pipe_sync(struct fs *fs)
{
	return 0;
}
80002dbc:	03e00008 	jr	ra
80002dc0:	00001021 	move	v0,zero

80002dc4 <pipe_unmount>:
pipe_unmount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:36
}

static int pipe_unmount(struct fs *fs)
{
	return -E_INVAL;
}
80002dc4:	03e00008 	jr	ra
80002dc8:	2402ffea 	li	v0,-22

80002dcc <pipe_cleanup>:
pipe_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:42

static int pipe_cleanup(struct fs *fs)
{
	/* do nothing */
	return 0;
}
80002dcc:	03e00008 	jr	ra
80002dd0:	00001021 	move	v0,zero

80002dd4 <pipe_get_root>:
pipe_get_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:27
{
	return 0;
}

static struct inode *pipe_get_root(struct fs *fs)
{
80002dd4:	27bdffe8 	addiu	sp,sp,-24
80002dd8:	afb00010 	sw	s0,16(sp)
80002ddc:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:28
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002de0:	1080000c 	beqz	a0,80002e14 <pipe_get_root+0x40>
80002de4:	00808021 	move	s0,a0
80002de8:	8c830084 	lw	v1,132(a0)
80002dec:	24025678 	li	v0,22136
80002df0:	54620009 	bnel	v1,v0,80002e18 <pipe_get_root+0x44>
80002df4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:29
	vop_ref_inc(pipe->root);
80002df8:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80002dfc:	8c840000 	lw	a0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:31
	return pipe->root;
}
80002e00:	8fbf0014 	lw	ra,20(sp)
80002e04:	8e020000 	lw	v0,0(s0)
80002e08:	8fb00010 	lw	s0,16(sp)
80002e0c:	03e00008 	jr	ra
80002e10:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:28
	return 0;
}

static struct inode *pipe_get_root(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002e14:	3c048002 	lui	a0,0x8002
80002e18:	3c068002 	lui	a2,0x8002
80002e1c:	3c078002 	lui	a3,0x8002
80002e20:	24841320 	addiu	a0,a0,4896
80002e24:	2405001c 	li	a1,28
80002e28:	24c60e48 	addiu	a2,a2,3656
80002e2c:	0c006b13 	jal	8001ac4c <__panic>
80002e30:	24e71328 	addiu	a3,a3,4904

80002e34 <lock_pipe>:
lock_pipe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:13
#include <error.h>
#include <assert.h>

void lock_pipe(struct pipe_fs *pipe)
{
	down(&(pipe->pipe_sem));
80002e34:	08006727 	j	80019c9c <down>
80002e38:	24840004 	addiu	a0,a0,4

80002e3c <unlock_pipe>:
unlock_pipe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:18
}

void unlock_pipe(struct pipe_fs *pipe)
{
	up(&(pipe->pipe_sem));
80002e3c:	08006725 	j	80019c94 <up>
80002e40:	24840004 	addiu	a0,a0,4

80002e44 <pipe_init>:
pipe_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:60
	fs->fs_unmount = pipe_unmount;
	fs->fs_cleanup = pipe_cleanup;
}

void pipe_init(void)
{
80002e44:	27bdffe8 	addiu	sp,sp,-24
80002e48:	afb00010 	sw	s0,16(sp)
80002e4c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:62
	struct fs *fs;
	if ((fs = alloc_fs(pipe)) == NULL) {
80002e50:	0c0011be 	jal	800046f8 <__alloc_fs>
80002e54:	24045678 	li	a0,22136
80002e58:	1040002b 	beqz	v0,80002f08 <pipe_init+0xc4>
80002e5c:	00408021 	move	s0,v0
pipe_fs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:46
	return 0;
}

static void pipe_fs_init(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002e60:	8c430084 	lw	v1,132(v0)
80002e64:	24025678 	li	v0,22136
80002e68:	14620020 	bne	v1,v0,80002eec <pipe_init+0xa8>
80002e6c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:47
	if ((pipe->root = pipe_create_root(fs)) == NULL) {
80002e70:	0c000eec 	jal	80003bb0 <pipe_create_root>
80002e74:	02002021 	move	a0,s0
80002e78:	10400030 	beqz	v0,80002f3c <pipe_init+0xf8>
80002e7c:	ae020000 	sw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:50
		panic("pipe: create root inode failed.\n");
	}
	sem_init(&(pipe->pipe_sem), 1);
80002e80:	26040004 	addiu	a0,s0,4
80002e84:	0c00671f 	jal	80019c7c <sem_init>
80002e88:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:51
	list_init(&(pipe->pipe_list));
80002e8c:	26020018 	addiu	v0,s0,24
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80002e90:	ae02001c 	sw	v0,28(s0)
80002e94:	ae020018 	sw	v0,24(s0)
pipe_fs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:53

	fs->fs_sync = pipe_sync;
80002e98:	3c028000 	lui	v0,0x8000
80002e9c:	24422dbc 	addiu	v0,v0,11708
80002ea0:	ae020088 	sw	v0,136(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:54
	fs->fs_get_root = pipe_get_root;
80002ea4:	3c028000 	lui	v0,0x8000
80002ea8:	24422dd4 	addiu	v0,v0,11732
80002eac:	ae02008c 	sw	v0,140(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:55
	fs->fs_unmount = pipe_unmount;
80002eb0:	3c028000 	lui	v0,0x8000
80002eb4:	24422dc4 	addiu	v0,v0,11716
80002eb8:	ae020090 	sw	v0,144(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:56
	fs->fs_cleanup = pipe_cleanup;
80002ebc:	3c028000 	lui	v0,0x8000
80002ec0:	24422dcc 	addiu	v0,v0,11724
pipe_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:68
		panic("pipe: create pipe_fs failed.\n");
	}
	pipe_fs_init(fs);

	int ret;
	if ((ret = vfs_add_fs("pipe", fs)) != 0) {
80002ec4:	3c048002 	lui	a0,0x8002
pipe_fs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:56
	list_init(&(pipe->pipe_list));

	fs->fs_sync = pipe_sync;
	fs->fs_get_root = pipe_get_root;
	fs->fs_unmount = pipe_unmount;
	fs->fs_cleanup = pipe_cleanup;
80002ec8:	ae020094 	sw	v0,148(s0)
pipe_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:68
		panic("pipe: create pipe_fs failed.\n");
	}
	pipe_fs_init(fs);

	int ret;
	if ((ret = vfs_add_fs("pipe", fs)) != 0) {
80002ecc:	24841398 	addiu	a0,a0,5016
80002ed0:	0c00143f 	jal	800050fc <vfs_add_fs>
80002ed4:	02002821 	move	a1,s0
80002ed8:	14400011 	bnez	v0,80002f20 <pipe_init+0xdc>
80002edc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:71
		panic("pipe: vfs_add_fs: %e.\n", ret);
	}
}
80002ee0:	8fb00010 	lw	s0,16(sp)
80002ee4:	03e00008 	jr	ra
80002ee8:	27bd0018 	addiu	sp,sp,24
pipe_fs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:46
	return 0;
}

static void pipe_fs_init(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80002eec:	3c068002 	lui	a2,0x8002
80002ef0:	3c078002 	lui	a3,0x8002
80002ef4:	24841320 	addiu	a0,a0,4896
80002ef8:	2405002e 	li	a1,46
80002efc:	24c60e48 	addiu	a2,a2,3656
80002f00:	0c006b13 	jal	8001ac4c <__panic>
80002f04:	24e71328 	addiu	a3,a3,4904
pipe_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:63

void pipe_init(void)
{
	struct fs *fs;
	if ((fs = alloc_fs(pipe)) == NULL) {
		panic("pipe: create pipe_fs failed.\n");
80002f08:	3c048002 	lui	a0,0x8002
80002f0c:	3c068002 	lui	a2,0x8002
80002f10:	24841320 	addiu	a0,a0,4896
80002f14:	2405003f 	li	a1,63
80002f18:	0c006b13 	jal	8001ac4c <__panic>
80002f1c:	24c61354 	addiu	a2,a2,4948
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:69
	}
	pipe_fs_init(fs);

	int ret;
	if ((ret = vfs_add_fs("pipe", fs)) != 0) {
		panic("pipe: vfs_add_fs: %e.\n", ret);
80002f20:	3c048002 	lui	a0,0x8002
80002f24:	3c068002 	lui	a2,0x8002
80002f28:	24841320 	addiu	a0,a0,4896
80002f2c:	24050045 	li	a1,69
80002f30:	24c613a0 	addiu	a2,a2,5024
80002f34:	0c006b13 	jal	8001ac4c <__panic>
80002f38:	00403821 	move	a3,v0
pipe_fs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe.c:48

static void pipe_fs_init(struct fs *fs)
{
	struct pipe_fs *pipe = fsop_info(fs, pipe);
	if ((pipe->root = pipe_create_root(fs)) == NULL) {
		panic("pipe: create root inode failed.\n");
80002f3c:	3c048002 	lui	a0,0x8002
80002f40:	3c068002 	lui	a2,0x8002
80002f44:	24841320 	addiu	a0,a0,4896
80002f48:	24050030 	li	a1,48
80002f4c:	0c006b13 	jal	8001ac4c <__panic>
80002f50:	24c61374 	addiu	a2,a2,4980

80002f54 <pipe_inode_gettype>:
pipe_inode_gettype():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:117
	return 0;
}

static int pipe_inode_gettype(struct inode *node, uint32_t * type_store)
{
	*type_store = S_IFCHR;
80002f54:	24022000 	li	v0,8192
80002f58:	aca20000 	sw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:119
	return 0;
}
80002f5c:	03e00008 	jr	ra
80002f60:	00001021 	move	v0,zero

80002f64 <pipe_inode_reclaim>:
pipe_inode_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:96
	iobuf_skip(iob, len);
	return 0;
}

static int pipe_inode_reclaim(struct inode *node)
{
80002f64:	27bdffe0 	addiu	sp,sp,-32
80002f68:	afb00014 	sw	s0,20(sp)
80002f6c:	afbf001c 	sw	ra,28(sp)
80002f70:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:97
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80002f74:	10800031 	beqz	a0,8000303c <pipe_inode_reclaim+0xd8>
80002f78:	00808021 	move	s0,a0
80002f7c:	8c830038 	lw	v1,56(a0)
80002f80:	24021236 	li	v0,4662
80002f84:	5462002e 	bnel	v1,v0,80003040 <pipe_inode_reclaim+0xdc>
80002f88:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:98
	if (pin->name != NULL) {
80002f8c:	8c820004 	lw	v0,4(a0)
80002f90:	10400018 	beqz	v0,80002ff4 <pipe_inode_reclaim+0x90>
80002f94:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:99
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
80002f98:	8c910044 	lw	s1,68(a0)
80002f9c:	1220002f 	beqz	s1,8000305c <pipe_inode_reclaim+0xf8>
80002fa0:	24025678 	li	v0,22136
80002fa4:	8e230084 	lw	v1,132(s1)
80002fa8:	1462002d 	bne	v1,v0,80003060 <pipe_inode_reclaim+0xfc>
80002fac:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:100
		lock_pipe(pipe);
80002fb0:	0c000b8d 	jal	80002e34 <lock_pipe>
80002fb4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:101
		assert(pin->reclaim_count > 0);
80002fb8:	8e020008 	lw	v0,8(s0)
80002fbc:	1840002f 	blez	v0,8000307c <pipe_inode_reclaim+0x118>
80002fc0:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:102
		if ((--pin->reclaim_count) != 0 || inode_ref_count(node) != 0) {
80002fc4:	14400015 	bnez	v0,8000301c <pipe_inode_reclaim+0xb8>
80002fc8:	ae020008 	sw	v0,8(s0)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80002fcc:	8e02003c 	lw	v0,60(s0)
pipe_inode_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:102
80002fd0:	14400012 	bnez	v0,8000301c <pipe_inode_reclaim+0xb8>
80002fd4:	02202021 	move	a0,s1
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80002fd8:	8e030010 	lw	v1,16(s0)
80002fdc:	8e020014 	lw	v0,20(s0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80002fe0:	ac620004 	sw	v0,4(v1)
pipe_inode_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:107
			unlock_pipe(pipe);
			return -E_BUSY;
		}
		list_del(&(pin->pipe_link));
		unlock_pipe(pipe);
80002fe4:	0c000b8f 	jal	80002e3c <unlock_pipe>
80002fe8:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:108
		kfree(pin->name);
80002fec:	0c0054b9 	jal	800152e4 <kfree>
80002ff0:	8e040004 	lw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:110
	}
	pipe_state_release(pin->state);
80002ff4:	0c000f81 	jal	80003e04 <pipe_state_release>
80002ff8:	8e04000c 	lw	a0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:111
	vop_kill(node);
80002ffc:	0c00109c 	jal	80004270 <inode_kill>
80003000:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:113
	return 0;
}
80003004:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:112
		unlock_pipe(pipe);
		kfree(pin->name);
	}
	pipe_state_release(pin->state);
	vop_kill(node);
	return 0;
80003008:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:113
}
8000300c:	8fb10018 	lw	s1,24(sp)
80003010:	8fb00014 	lw	s0,20(sp)
80003014:	03e00008 	jr	ra
80003018:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:103
	if (pin->name != NULL) {
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
		lock_pipe(pipe);
		assert(pin->reclaim_count > 0);
		if ((--pin->reclaim_count) != 0 || inode_ref_count(node) != 0) {
			unlock_pipe(pipe);
8000301c:	0c000b8f 	jal	80002e3c <unlock_pipe>
80003020:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:113
		kfree(pin->name);
	}
	pipe_state_release(pin->state);
	vop_kill(node);
	return 0;
}
80003024:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:104
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
		lock_pipe(pipe);
		assert(pin->reclaim_count > 0);
		if ((--pin->reclaim_count) != 0 || inode_ref_count(node) != 0) {
			unlock_pipe(pipe);
			return -E_BUSY;
80003028:	2402fff0 	li	v0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:113
		kfree(pin->name);
	}
	pipe_state_release(pin->state);
	vop_kill(node);
	return 0;
}
8000302c:	8fb10018 	lw	s1,24(sp)
80003030:	8fb00014 	lw	s0,20(sp)
80003034:	03e00008 	jr	ra
80003038:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:97
	return 0;
}

static int pipe_inode_reclaim(struct inode *node)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
8000303c:	3c048002 	lui	a0,0x8002
80003040:	3c068002 	lui	a2,0x8002
80003044:	3c078002 	lui	a3,0x8002
80003048:	248413b8 	addiu	a0,a0,5048
8000304c:	24050061 	li	a1,97
80003050:	24c60e48 	addiu	a2,a2,3656
80003054:	0c006b13 	jal	8001ac4c <__panic>
80003058:	24e713c8 	addiu	a3,a3,5064
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:99
	if (pin->name != NULL) {
		struct pipe_fs *pipe = fsop_info(vop_fs(node), pipe);
8000305c:	3c048002 	lui	a0,0x8002
80003060:	3c068002 	lui	a2,0x8002
80003064:	3c078002 	lui	a3,0x8002
80003068:	248413b8 	addiu	a0,a0,5048
8000306c:	24050063 	li	a1,99
80003070:	24c60e48 	addiu	a2,a2,3656
80003074:	0c006b13 	jal	8001ac4c <__panic>
80003078:	24e71328 	addiu	a3,a3,4904
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:101
		lock_pipe(pipe);
		assert(pin->reclaim_count > 0);
8000307c:	3c048002 	lui	a0,0x8002
80003080:	3c068002 	lui	a2,0x8002
80003084:	3c078002 	lui	a3,0x8002
80003088:	248413b8 	addiu	a0,a0,5048
8000308c:	24050065 	li	a1,101
80003090:	24c60e48 	addiu	a2,a2,3656
80003094:	0c006b13 	jal	8001ac4c <__panic>
80003098:	24e71400 	addiu	a3,a3,5120

8000309c <pipe_inode_open>:
pipe_inode_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:15
#include <unistd.h>
#include <error.h>
#include <assert.h>

static int pipe_inode_open(struct inode *node, uint32_t open_flags)
{
8000309c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:16
	if (open_flags & (O_TRUNC | O_APPEND)) {
800030a0:	30a20600 	andi	v0,a1,0x600
800030a4:	14400010 	bnez	v0,800030e8 <pipe_inode_open+0x4c>
800030a8:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:19
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800030ac:	10800019 	beqz	a0,80003114 <pipe_inode_open+0x78>
800030b0:	24021236 	li	v0,4662
800030b4:	8c830038 	lw	v1,56(a0)
800030b8:	14620016 	bne	v1,v0,80003114 <pipe_inode_open+0x78>
800030bc:	30a50003 	andi	a1,a1,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:20
	switch (open_flags & O_ACCMODE) {
800030c0:	14a00007 	bnez	a1,800030e0 <pipe_inode_open+0x44>
800030c4:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:22
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
800030c8:	8c830000 	lw	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:28
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
	}
}
800030cc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:22
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
800030d0:	2402ffea 	li	v0,-22
800030d4:	0003100a 	movz	v0,zero,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:28
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
	}
}
800030d8:	03e00008 	jr	ra
800030dc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:20
{
	if (open_flags & (O_TRUNC | O_APPEND)) {
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	switch (open_flags & O_ACCMODE) {
800030e0:	50a20005 	beql	a1,v0,800030f8 <pipe_inode_open+0x5c>
800030e4:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:28
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
	}
}
800030e8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:26
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
	default:
		return -E_INVAL;
800030ec:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:28
	}
}
800030f0:	03e00008 	jr	ra
800030f4:	27bd0018 	addiu	sp,sp,24
800030f8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:24
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		return (pin->pin_type == PIN_RDONLY) ? 0 : -E_INVAL;
	case O_WRONLY:
		return (pin->pin_type == PIN_WRONLY) ? 0 : -E_INVAL;
800030fc:	2403ffea 	li	v1,-22
80003100:	38420001 	xori	v0,v0,0x1
80003104:	0002180a 	movz	v1,zero,v0
80003108:	00601021 	move	v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:28
	default:
		return -E_INVAL;
	}
}
8000310c:	03e00008 	jr	ra
80003110:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:19
static int pipe_inode_open(struct inode *node, uint32_t open_flags)
{
	if (open_flags & (O_TRUNC | O_APPEND)) {
		return -E_INVAL;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003114:	3c048002 	lui	a0,0x8002
80003118:	3c068002 	lui	a2,0x8002
8000311c:	3c078002 	lui	a3,0x8002
80003120:	248413b8 	addiu	a0,a0,5048
80003124:	24050013 	li	a1,19
80003128:	24c60e48 	addiu	a2,a2,3656
8000312c:	0c006b13 	jal	8001ac4c <__panic>
80003130:	24e713c8 	addiu	a3,a3,5064

80003134 <pipe_inode_namefile>:
pipe_inode_namefile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:81
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
	return 0;
}

static int pipe_inode_namefile(struct inode *node, struct iobuf *iob)
{
80003134:	27bdffd8 	addiu	sp,sp,-40
80003138:	afb30020 	sw	s3,32(sp)
8000313c:	afb00014 	sw	s0,20(sp)
80003140:	afbf0024 	sw	ra,36(sp)
80003144:	afb2001c 	sw	s2,28(sp)
80003148:	afb10018 	sw	s1,24(sp)
8000314c:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:82
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003150:	10800026 	beqz	a0,800031ec <pipe_inode_namefile+0xb8>
80003154:	00a08021 	move	s0,a1
80003158:	8c830038 	lw	v1,56(a0)
8000315c:	24021236 	li	v0,4662
80003160:	54620023 	bnel	v1,v0,800031f0 <pipe_inode_namefile+0xbc>
80003164:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:83
	size_t len = (pin->name != NULL) ? strlen(pin->name) : 0;
80003168:	8c840004 	lw	a0,4(a0)
8000316c:	1080001d 	beqz	a0,800031e4 <pipe_inode_namefile+0xb0>
80003170:	24120001 	li	s2,1
80003174:	0c005b81 	jal	80016e04 <strlen>
80003178:	00000000 	nop
8000317c:	00408821 	move	s1,v0
80003180:	24520001 	addiu	s2,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:84
	if (iob->io_resid < len + 1) {
80003184:	8e03000c 	lw	v1,12(s0)
80003188:	0072182b 	sltu	v1,v1,s2
8000318c:	1460000e 	bnez	v1,800031c8 <pipe_inode_namefile+0x94>
80003190:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:87
		return -E_NO_MEM;
	}
	if (pin->name != NULL) {
80003194:	8e650004 	lw	a1,4(s3)
80003198:	50a00005 	beqzl	a1,800031b0 <pipe_inode_namefile+0x7c>
8000319c:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:88
		memcpy(iob->io_base, pin->name, len);
800031a0:	8e040000 	lw	a0,0(s0)
800031a4:	0c005c84 	jal	80017210 <memcpy>
800031a8:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:90
	}
	((char *)(iob->io_base))[len++] = '\0';
800031ac:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:91
	iobuf_skip(iob, len);
800031b0:	02002021 	move	a0,s0
800031b4:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:90
		return -E_NO_MEM;
	}
	if (pin->name != NULL) {
		memcpy(iob->io_base, pin->name, len);
	}
	((char *)(iob->io_base))[len++] = '\0';
800031b8:	00518821 	addu	s1,v0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:91
	iobuf_skip(iob, len);
800031bc:	0c00334d 	jal	8000cd34 <iobuf_skip>
800031c0:	a2200000 	sb	zero,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:92
	return 0;
800031c4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:93
}
800031c8:	8fbf0024 	lw	ra,36(sp)
800031cc:	8fb30020 	lw	s3,32(sp)
800031d0:	8fb2001c 	lw	s2,28(sp)
800031d4:	8fb10018 	lw	s1,24(sp)
800031d8:	8fb00014 	lw	s0,20(sp)
800031dc:	03e00008 	jr	ra
800031e0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:83
}

static int pipe_inode_namefile(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	size_t len = (pin->name != NULL) ? strlen(pin->name) : 0;
800031e4:	08000c61 	j	80003184 <pipe_inode_namefile+0x50>
800031e8:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:82
	return 0;
}

static int pipe_inode_namefile(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800031ec:	3c048002 	lui	a0,0x8002
800031f0:	3c068002 	lui	a2,0x8002
800031f4:	3c078002 	lui	a3,0x8002
800031f8:	248413b8 	addiu	a0,a0,5048
800031fc:	24050052 	li	a1,82
80003200:	24c60e48 	addiu	a2,a2,3656
80003204:	0c006b13 	jal	8001ac4c <__panic>
80003208:	24e713c8 	addiu	a3,a3,5064

8000320c <pipe_inode_fstat>:
pipe_inode_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:66
	}
	return 0;
}

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
8000320c:	27bdffe0 	addiu	sp,sp,-32
80003210:	afb10014 	sw	s1,20(sp)
80003214:	00a08821 	move	s1,a1
80003218:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
8000321c:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:66
	}
	return 0;
}

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
80003220:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80003224:	24060010 	li	a2,16
80003228:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:66
	}
	return 0;
}

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
8000322c:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:68
	int ret;
	memset(stat, 0, sizeof(struct stat));
80003230:	0c005c5a 	jal	80017168 <memset>
80003234:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:69
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
80003238:	12000024 	beqz	s0,800032cc <pipe_inode_fstat+0xc0>
8000323c:	3c048002 	lui	a0,0x8002
80003240:	8e020048 	lw	v0,72(s0)
80003244:	10400022 	beqz	v0,800032d0 <pipe_inode_fstat+0xc4>
80003248:	3c068002 	lui	a2,0x8002
8000324c:	8c420040 	lw	v0,64(v0)
80003250:	1040001e 	beqz	v0,800032cc <pipe_inode_fstat+0xc0>
80003254:	3c058002 	lui	a1,0x8002
80003258:	02002021 	move	a0,s0
8000325c:	0c0010f2 	jal	800043c8 <inode_check>
80003260:	24a51060 	addiu	a1,a1,4192
80003264:	8e020048 	lw	v0,72(s0)
80003268:	02002021 	move	a0,s0
8000326c:	8c420040 	lw	v0,64(v0)
80003270:	0040f809 	jalr	v0
80003274:	02202821 	move	a1,s1
80003278:	1440000d 	bnez	v0,800032b0 <pipe_inode_fstat+0xa4>
8000327c:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:72
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003280:	8e030038 	lw	v1,56(s0)
80003284:	24021236 	li	v0,4662
80003288:	14620017 	bne	v1,v0,800032e8 <pipe_inode_fstat+0xdc>
8000328c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:76
	stat->st_nlinks = 1;
	stat->st_blocks = 0;
	stat->st_size =
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
80003290:	8e050000 	lw	a1,0(s0)
80003294:	8e04000c 	lw	a0,12(s0)
80003298:	38a50001 	xori	a1,a1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:73
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	stat->st_nlinks = 1;
8000329c:	ae220004 	sw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:74
	stat->st_blocks = 0;
800032a0:	ae200008 	sw	zero,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:76
	stat->st_size =
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
800032a4:	0c000fca 	jal	80003f28 <pipe_state_size>
800032a8:	2ca50001 	sltiu	a1,a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:75
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
	stat->st_nlinks = 1;
	stat->st_blocks = 0;
	stat->st_size =
800032ac:	ae22000c 	sw	v0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:78
	    pipe_state_size(pin->state, pin->pin_type == PIN_WRONLY);
	return 0;
}
800032b0:	8fbf001c 	lw	ra,28(sp)
800032b4:	02401021 	move	v0,s2
800032b8:	8fb10014 	lw	s1,20(sp)
800032bc:	8fb20018 	lw	s2,24(sp)
800032c0:	8fb00010 	lw	s0,16(sp)
800032c4:	03e00008 	jr	ra
800032c8:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:69

static int pipe_inode_fstat(struct inode *node, struct stat *stat)
{
	int ret;
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
800032cc:	3c068002 	lui	a2,0x8002
800032d0:	3c078002 	lui	a3,0x8002
800032d4:	248413b8 	addiu	a0,a0,5048
800032d8:	24050045 	li	a1,69
800032dc:	24c60e48 	addiu	a2,a2,3656
800032e0:	0c006b13 	jal	8001ac4c <__panic>
800032e4:	24e71010 	addiu	a3,a3,4112
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:72
		return ret;
	}
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800032e8:	3c048002 	lui	a0,0x8002
800032ec:	3c068002 	lui	a2,0x8002
800032f0:	3c078002 	lui	a3,0x8002
800032f4:	248413b8 	addiu	a0,a0,5048
800032f8:	24050048 	li	a1,72
800032fc:	24c60e48 	addiu	a2,a2,3656
80003300:	0c006b13 	jal	8001ac4c <__panic>
80003304:	24e713c8 	addiu	a3,a3,5064

80003308 <pipe_inode_write>:
pipe_inode_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:52
	}
	return 0;
}

static int pipe_inode_write(struct inode *node, struct iobuf *iob)
{
80003308:	27bdffe0 	addiu	sp,sp,-32
8000330c:	afb00014 	sw	s0,20(sp)
80003310:	afbf001c 	sw	ra,28(sp)
80003314:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:53
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003318:	1080001d 	beqz	a0,80003390 <pipe_inode_write+0x88>
8000331c:	00a08021 	move	s0,a1
80003320:	8c830038 	lw	v1,56(a0)
80003324:	24021236 	li	v0,4662
80003328:	14620019 	bne	v1,v0,80003390 <pipe_inode_write+0x88>
8000332c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:54
	if (pin->pin_type != PIN_WRONLY) {
80003330:	8c830000 	lw	v1,0(a0)
80003334:	14620008 	bne	v1,v0,80003358 <pipe_inode_write+0x50>
80003338:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:58
		return -E_INVAL;
	}
	size_t ret;
	if ((ret =
8000333c:	8c84000c 	lw	a0,12(a0)
80003340:	8ca50000 	lw	a1,0(a1)
80003344:	8e06000c 	lw	a2,12(s0)
80003348:	0c00102e 	jal	800040b8 <pipe_state_write>
8000334c:	00008821 	move	s1,zero
80003350:	14400007 	bnez	v0,80003370 <pipe_inode_write+0x68>
80003354:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:63
	     pipe_state_write(pin->state, iob->io_base, iob->io_resid)) != 0) {
		iobuf_skip(iob, ret);
	}
	return 0;
}
80003358:	8fbf001c 	lw	ra,28(sp)
8000335c:	02201021 	move	v0,s1
80003360:	8fb00014 	lw	s0,20(sp)
80003364:	8fb10018 	lw	s1,24(sp)
80003368:	03e00008 	jr	ra
8000336c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:60
		return -E_INVAL;
	}
	size_t ret;
	if ((ret =
	     pipe_state_write(pin->state, iob->io_base, iob->io_resid)) != 0) {
		iobuf_skip(iob, ret);
80003370:	0c00334d 	jal	8000cd34 <iobuf_skip>
80003374:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:63
	}
	return 0;
}
80003378:	8fbf001c 	lw	ra,28(sp)
8000337c:	02201021 	move	v0,s1
80003380:	8fb00014 	lw	s0,20(sp)
80003384:	8fb10018 	lw	s1,24(sp)
80003388:	03e00008 	jr	ra
8000338c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:53
	return 0;
}

static int pipe_inode_write(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003390:	3c048002 	lui	a0,0x8002
80003394:	3c068002 	lui	a2,0x8002
80003398:	3c078002 	lui	a3,0x8002
8000339c:	248413b8 	addiu	a0,a0,5048
800033a0:	24050035 	li	a1,53
800033a4:	24c60e48 	addiu	a2,a2,3656
800033a8:	0c006b13 	jal	8001ac4c <__panic>
800033ac:	24e713c8 	addiu	a3,a3,5064

800033b0 <pipe_inode_read>:
pipe_inode_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:38
	pipe_state_close(pin->state);
	return 0;
}

static int pipe_inode_read(struct inode *node, struct iobuf *iob)
{
800033b0:	27bdffe0 	addiu	sp,sp,-32
800033b4:	afb00014 	sw	s0,20(sp)
800033b8:	afbf001c 	sw	ra,28(sp)
800033bc:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:39
	struct pipe_inode *pin = vop_info(node, pipe_inode);
800033c0:	10800018 	beqz	a0,80003424 <pipe_inode_read+0x74>
800033c4:	00a08021 	move	s0,a1
800033c8:	8c830038 	lw	v1,56(a0)
800033cc:	24021236 	li	v0,4662
800033d0:	54620015 	bnel	v1,v0,80003428 <pipe_inode_read+0x78>
800033d4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:40
	if (pin->pin_type != PIN_RDONLY) {
800033d8:	8c820000 	lw	v0,0(a0)
800033dc:	1440000b 	bnez	v0,8000340c <pipe_inode_read+0x5c>
800033e0:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:44
		return -E_INVAL;
	}
	size_t ret;
	if ((ret =
800033e4:	8c84000c 	lw	a0,12(a0)
800033e8:	8ca50000 	lw	a1,0(a1)
800033ec:	8e06000c 	lw	a2,12(s0)
800033f0:	0c000fd6 	jal	80003f58 <pipe_state_read>
800033f4:	00008821 	move	s1,zero
800033f8:	10400005 	beqz	v0,80003410 <pipe_inode_read+0x60>
800033fc:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:46
	     pipe_state_read(pin->state, iob->io_base, iob->io_resid)) != 0) {
		iobuf_skip(iob, ret);
80003400:	02002021 	move	a0,s0
80003404:	0c00334d 	jal	8000cd34 <iobuf_skip>
80003408:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:49
	}
	return 0;
}
8000340c:	8fbf001c 	lw	ra,28(sp)
80003410:	02201021 	move	v0,s1
80003414:	8fb00014 	lw	s0,20(sp)
80003418:	8fb10018 	lw	s1,24(sp)
8000341c:	03e00008 	jr	ra
80003420:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:39
	return 0;
}

static int pipe_inode_read(struct inode *node, struct iobuf *iob)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003424:	3c048002 	lui	a0,0x8002
80003428:	3c068002 	lui	a2,0x8002
8000342c:	3c078002 	lui	a3,0x8002
80003430:	248413b8 	addiu	a0,a0,5048
80003434:	24050027 	li	a1,39
80003438:	24c60e48 	addiu	a2,a2,3656
8000343c:	0c006b13 	jal	8001ac4c <__panic>
80003440:	24e713c8 	addiu	a3,a3,5064

80003444 <pipe_inode_close>:
pipe_inode_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:31
		return -E_INVAL;
	}
}

static int pipe_inode_close(struct inode *node)
{
80003444:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:32
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003448:	1080000b 	beqz	a0,80003478 <pipe_inode_close+0x34>
8000344c:	afbf0014 	sw	ra,20(sp)
80003450:	8c830038 	lw	v1,56(a0)
80003454:	24021236 	li	v0,4662
80003458:	54620008 	bnel	v1,v0,8000347c <pipe_inode_close+0x38>
8000345c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:33
	pipe_state_close(pin->state);
80003460:	0c000fb2 	jal	80003ec8 <pipe_state_close>
80003464:	8c84000c 	lw	a0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:35
	return 0;
}
80003468:	8fbf0014 	lw	ra,20(sp)
8000346c:	00001021 	move	v0,zero
80003470:	03e00008 	jr	ra
80003474:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:32
	}
}

static int pipe_inode_close(struct inode *node)
{
	struct pipe_inode *pin = vop_info(node, pipe_inode);
80003478:	3c048002 	lui	a0,0x8002
8000347c:	3c068002 	lui	a2,0x8002
80003480:	3c078002 	lui	a3,0x8002
80003484:	248413b8 	addiu	a0,a0,5048
80003488:	24050020 	li	a1,32
8000348c:	24c60e48 	addiu	a2,a2,3656
80003490:	0c006b13 	jal	8001ac4c <__panic>
80003494:	24e713c8 	addiu	a3,a3,5064

80003498 <pipe_create_inode>:
pipe_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:159
	list_init(&(pin->pipe_link));
}

struct inode *pipe_create_inode(struct fs *fs, const char *__name,
				struct pipe_state *state, bool readonly)
{
80003498:	27bdffd0 	addiu	sp,sp,-48
8000349c:	afb30028 	sw	s3,40(sp)
800034a0:	afb10020 	sw	s1,32(sp)
800034a4:	afb0001c 	sw	s0,28(sp)
800034a8:	afbf002c 	sw	ra,44(sp)
800034ac:	afb20024 	sw	s2,36(sp)
800034b0:	00808821 	move	s1,a0
800034b4:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:161
	char *name = NULL;
	if (__name == NULL || (name = strdup(__name)) != NULL) {
800034b8:	10a00030 	beqz	a1,8000357c <pipe_create_inode+0xe4>
800034bc:	00e09821 	move	s3,a3
800034c0:	0c00591f 	jal	8001647c <strdup>
800034c4:	00a02021 	move	a0,a1
800034c8:	1040002e 	beqz	v0,80003584 <pipe_create_inode+0xec>
800034cc:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:163
		struct inode *node;
		if ((node = alloc_inode(pipe_inode)) != NULL) {
800034d0:	0c001090 	jal	80004240 <__alloc_inode>
800034d4:	24041236 	li	a0,4662
800034d8:	1040001c 	beqz	v0,8000354c <pipe_create_inode+0xb4>
800034dc:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:164
			vop_init(node, &pipe_node_ops, fs);
800034e0:	00402021 	move	a0,v0
800034e4:	24a5fe7c 	addiu	a1,a1,-388
800034e8:	02203021 	move	a2,s1
800034ec:	0c0010d1 	jal	80004344 <inode_init>
800034f0:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:165
			pipe_inode_init(vop_info(node, pipe_inode), name, state,
800034f4:	8fa20010 	lw	v0,16(sp)
800034f8:	24031236 	li	v1,4662
800034fc:	8c440038 	lw	a0,56(v0)
80003500:	14830022 	bne	a0,v1,8000358c <pipe_create_inode+0xf4>
80003504:	3c048002 	lui	a0,0x8002
pipe_inode_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:151

static void
pipe_inode_init(struct pipe_inode *pin, char *name, struct pipe_state *state,
		bool readonly)
{
	assert(state != NULL);
80003508:	12000027 	beqz	s0,800035a8 <pipe_create_inode+0x110>
8000350c:	24430010 	addiu	v1,v0,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:152
	pin->pin_type = readonly ? PIN_RDONLY : PIN_WRONLY;
80003510:	2e730001 	sltiu	s3,s3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:153
	pin->name = name, pin->state = state, pin->reclaim_count = 1;
80003514:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:152
static void
pipe_inode_init(struct pipe_inode *pin, char *name, struct pipe_state *state,
		bool readonly)
{
	assert(state != NULL);
	pin->pin_type = readonly ? PIN_RDONLY : PIN_WRONLY;
80003518:	ac530000 	sw	s3,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:153
	pin->name = name, pin->state = state, pin->reclaim_count = 1;
8000351c:	ac520004 	sw	s2,4(v0)
80003520:	ac50000c 	sw	s0,12(v0)
80003524:	ac440008 	sw	a0,8(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80003528:	ac430014 	sw	v1,20(v0)
8000352c:	ac430010 	sw	v1,16(v0)
pipe_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:174
		if (name != NULL) {
			kfree(name);
		}
	}
	return NULL;
}
80003530:	8fbf002c 	lw	ra,44(sp)
80003534:	8fb30028 	lw	s3,40(sp)
80003538:	8fb20024 	lw	s2,36(sp)
8000353c:	8fb10020 	lw	s1,32(sp)
80003540:	8fb0001c 	lw	s0,28(sp)
80003544:	03e00008 	jr	ra
80003548:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:169
			vop_init(node, &pipe_node_ops, fs);
			pipe_inode_init(vop_info(node, pipe_inode), name, state,
					readonly);
			return node;
		}
		if (name != NULL) {
8000354c:	1240fff8 	beqz	s2,80003530 <pipe_create_inode+0x98>
80003550:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:170
			kfree(name);
80003554:	0c0054b9 	jal	800152e4 <kfree>
80003558:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:174
		}
	}
	return NULL;
}
8000355c:	8fbf002c 	lw	ra,44(sp)
80003560:	8fa20010 	lw	v0,16(sp)
80003564:	8fb30028 	lw	s3,40(sp)
80003568:	8fb20024 	lw	s2,36(sp)
8000356c:	8fb10020 	lw	s1,32(sp)
80003570:	8fb0001c 	lw	s0,28(sp)
80003574:	03e00008 	jr	ra
80003578:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:160
}

struct inode *pipe_create_inode(struct fs *fs, const char *__name,
				struct pipe_state *state, bool readonly)
{
	char *name = NULL;
8000357c:	08000d34 	j	800034d0 <pipe_create_inode+0x38>
80003580:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:173
		}
		if (name != NULL) {
			kfree(name);
		}
	}
	return NULL;
80003584:	08000d4c 	j	80003530 <pipe_create_inode+0x98>
80003588:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:165
	char *name = NULL;
	if (__name == NULL || (name = strdup(__name)) != NULL) {
		struct inode *node;
		if ((node = alloc_inode(pipe_inode)) != NULL) {
			vop_init(node, &pipe_node_ops, fs);
			pipe_inode_init(vop_info(node, pipe_inode), name, state,
8000358c:	3c068002 	lui	a2,0x8002
80003590:	3c078002 	lui	a3,0x8002
80003594:	248413b8 	addiu	a0,a0,5048
80003598:	240500a5 	li	a1,165
8000359c:	24c60e48 	addiu	a2,a2,3656
800035a0:	0c006b13 	jal	8001ac4c <__panic>
800035a4:	24e713c8 	addiu	a3,a3,5064
pipe_inode_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:151

static void
pipe_inode_init(struct pipe_inode *pin, char *name, struct pipe_state *state,
		bool readonly)
{
	assert(state != NULL);
800035a8:	3c068002 	lui	a2,0x8002
800035ac:	3c078002 	lui	a3,0x8002
800035b0:	248413b8 	addiu	a0,a0,5048
800035b4:	24050097 	li	a1,151
800035b8:	24c60e48 	addiu	a2,a2,3656
800035bc:	0c006b13 	jal	8001ac4c <__panic>
800035c0:	24e71418 	addiu	a3,a3,5144

800035c4 <pipe_open>:
pipe_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035c4:	27bdffc8 	addiu	sp,sp,-56
800035c8:	afb30028 	sw	s3,40(sp)
800035cc:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035d0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035d4:	afb20024 	sw	s2,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035d8:	24841398 	addiu	a0,a0,5016
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035dc:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035e0:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:177
	}
	return NULL;
}

int pipe_open(struct inode **rnode_store, struct inode **wnode_store)
{
800035e4:	afb0001c 	sw	s0,28(sp)
800035e8:	afbf0034 	sw	ra,52(sp)
800035ec:	afb50030 	sw	s5,48(sp)
800035f0:	afb4002c 	sw	s4,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:180
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
800035f4:	0c0013e7 	jal	80004f9c <vfs_get_root>
800035f8:	afb10020 	sw	s1,32(sp)
800035fc:	1040000b 	beqz	v0,8000362c <pipe_open+0x68>
80003600:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:216
failed_cleanup_node0:
	vop_ref_dec(node[0]);
failed_cleanup_state:
	pipe_state_release(state);
	goto out;
}
80003604:	8fbf0034 	lw	ra,52(sp)
80003608:	02001021 	move	v0,s0
8000360c:	8fb50030 	lw	s5,48(sp)
80003610:	8fb4002c 	lw	s4,44(sp)
80003614:	8fb30028 	lw	s3,40(sp)
80003618:	8fb20024 	lw	s2,36(sp)
8000361c:	8fb10020 	lw	s1,32(sp)
80003620:	8fb0001c 	lw	s0,28(sp)
80003624:	03e00008 	jr	ra
80003628:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:186
		return ret;
	}
	ret = -E_NO_MEM;

	struct pipe_state *state;
	if ((state = pipe_state_create()) == NULL) {
8000362c:	0c000f56 	jal	80003d58 <pipe_state_create>
80003630:	00000000 	nop
80003634:	1040002c 	beqz	v0,800036e8 <pipe_open+0x124>
80003638:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:192
		goto out;
	}

	struct fs *fs = vop_fs(root);
	struct inode *node[2] = { NULL, NULL };
	if ((node[0] = pipe_create_inode(fs, NULL, state, 1)) == NULL) {
8000363c:	00403021 	move	a2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:190
	struct pipe_state *state;
	if ((state = pipe_state_create()) == NULL) {
		goto out;
	}

	struct fs *fs = vop_fs(root);
80003640:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:192
	struct inode *node[2] = { NULL, NULL };
	if ((node[0] = pipe_create_inode(fs, NULL, state, 1)) == NULL) {
80003644:	00002821 	move	a1,zero
80003648:	24070001 	li	a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:190
	struct pipe_state *state;
	if ((state = pipe_state_create()) == NULL) {
		goto out;
	}

	struct fs *fs = vop_fs(root);
8000364c:	8c550044 	lw	s5,68(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:192
	struct inode *node[2] = { NULL, NULL };
	if ((node[0] = pipe_create_inode(fs, NULL, state, 1)) == NULL) {
80003650:	0c000d26 	jal	80003498 <pipe_create_inode>
80003654:	02a02021 	move	a0,s5
80003658:	1040001f 	beqz	v0,800036d8 <pipe_open+0x114>
8000365c:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:196
		goto failed_cleanup_state;
	}

	pipe_state_acquire(state);
80003660:	0c000f70 	jal	80003dc0 <pipe_state_acquire>
80003664:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:197
	if ((node[1] = pipe_create_inode(fs, NULL, state, 0)) == NULL) {
80003668:	02a02021 	move	a0,s5
8000366c:	00002821 	move	a1,zero
80003670:	02203021 	move	a2,s1
80003674:	0c000d26 	jal	80003498 <pipe_create_inode>
80003678:	00003821 	move	a3,zero
8000367c:	0040a821 	move	s5,v0
80003680:	10400013 	beqz	v0,800036d0 <pipe_open+0x10c>
80003684:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:201
		goto failed_cleanup_node0;
	}

	vop_open_inc(node[0]), vop_open_inc(node[1]);
80003688:	0c0010d6 	jal	80004358 <inode_open_inc>
8000368c:	00000000 	nop
80003690:	0c0010d6 	jal	80004358 <inode_open_inc>
80003694:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:203

	*rnode_store = node[0];
80003698:	ae740000 	sw	s4,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:204
	*wnode_store = node[1];
8000369c:	ae550000 	sw	s5,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:208
	ret = 0;

out:
	vop_ref_dec(root);
800036a0:	0c001171 	jal	800045c4 <inode_ref_dec>
800036a4:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:216
failed_cleanup_node0:
	vop_ref_dec(node[0]);
failed_cleanup_state:
	pipe_state_release(state);
	goto out;
}
800036a8:	8fbf0034 	lw	ra,52(sp)
800036ac:	02001021 	move	v0,s0
800036b0:	8fb50030 	lw	s5,48(sp)
800036b4:	8fb4002c 	lw	s4,44(sp)
800036b8:	8fb30028 	lw	s3,40(sp)
800036bc:	8fb20024 	lw	s2,36(sp)
800036c0:	8fb10020 	lw	s1,32(sp)
800036c4:	8fb0001c 	lw	s0,28(sp)
800036c8:	03e00008 	jr	ra
800036cc:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:212
out:
	vop_ref_dec(root);
	return ret;

failed_cleanup_node0:
	vop_ref_dec(node[0]);
800036d0:	0c001171 	jal	800045c4 <inode_ref_dec>
800036d4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:214
failed_cleanup_state:
	pipe_state_release(state);
800036d8:	0c000f81 	jal	80003e04 <pipe_state_release>
800036dc:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:215
	goto out;
800036e0:	08000da8 	j	800036a0 <pipe_open+0xdc>
800036e4:	2410fff4 	li	s0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_inode.c:183
	int ret;
	struct inode *root;
	if ((ret = vfs_get_root("pipe", &root)) != 0) {
		return ret;
	}
	ret = -E_NO_MEM;
800036e8:	08000da8 	j	800036a0 <pipe_open+0xdc>
800036ec:	2410fff4 	li	s0,-12

800036f0 <lookup_pipe_nolock>:
lookup_pipe_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:13
#include <assert.h>

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
800036f0:	27bdffd0 	addiu	sp,sp,-48
800036f4:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:14
	list_entry_t *list = &(pipe->pipe_list), *le = list;
800036f8:	24920018 	addiu	s2,a0,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:13
#include <assert.h>

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
800036fc:	afb50028 	sw	s5,40(sp)
80003700:	afb40024 	sw	s4,36(sp)
80003704:	afb30020 	sw	s3,32(sp)
80003708:	afb10018 	sw	s1,24(sp)
8000370c:	afb00014 	sw	s0,20(sp)
80003710:	afbf002c 	sw	ra,44(sp)
80003714:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:15
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
80003718:	ace00000 	sw	zero,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:13
#include <assert.h>

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
8000371c:	00e0a821 	move	s5,a3
80003720:	00a09821 	move	s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:15
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
80003724:	acc00000 	sw	zero,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:14

static void
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
	list_entry_t *list = &(pipe->pipe_list), *le = list;
80003728:	02408821 	move	s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:33
				break;
			default:
				panic("unknown pipe_inode type %d.\n",
				      pin->pin_type);
			}
			if (vop_ref_inc(node) == 1) {
8000372c:	24140001 	li	s4,1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80003730:	8e310004 	lw	s1,4(s1)
lookup_pipe_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:16
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
	while ((le = list_next(le)) != list) {
80003734:	12510018 	beq	s2,s1,80003798 <lookup_pipe_nolock+0xa8>
80003738:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:18
		struct pipe_inode *pin = le2pin(le, pipe_link);
		if (strcmp(pin->name, name) == 0) {
8000373c:	8e24fff4 	lw	a0,-12(s1)
80003740:	0c005bc0 	jal	80016f00 <strcmp>
80003744:	02602821 	move	a1,s3
80003748:	5440fffa 	bnezl	v0,80003734 <lookup_pipe_nolock+0x44>
8000374c:	8e310004 	lw	s1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:20
			struct inode *node = info2node(pin, pipe_inode);
			switch (pin->pin_type) {
80003750:	8e27fff0 	lw	a3,-16(s1)
80003754:	14e00018 	bnez	a3,800037b8 <lookup_pipe_nolock+0xc8>
80003758:	2624fff0 	addiu	a0,s1,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:22
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
8000375c:	8e020000 	lw	v0,0(s0)
80003760:	54400028 	bnezl	v0,80003804 <lookup_pipe_nolock+0x114>
80003764:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:23
				*rnode_store = node;
80003768:	ae040000 	sw	a0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:33
				break;
			default:
				panic("unknown pipe_inode type %d.\n",
				      pin->pin_type);
			}
			if (vop_ref_inc(node) == 1) {
8000376c:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80003770:	00000000 	nop
80003774:	5454ffef 	bnel	v0,s4,80003734 <lookup_pipe_nolock+0x44>
80003778:	8e310004 	lw	s1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:34
				pin->reclaim_count++;
8000377c:	8e22fff8 	lw	v0,-8(s1)
80003780:	24420001 	addiu	v0,v0,1
80003784:	ae22fff8 	sw	v0,-8(s1)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80003788:	8e310004 	lw	s1,4(s1)
lookup_pipe_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:16
lookup_pipe_nolock(struct pipe_fs *pipe, const char *name,
		   struct inode **rnode_store, struct inode **wnode_store)
{
	list_entry_t *list = &(pipe->pipe_list), *le = list;
	*rnode_store = *wnode_store = NULL;
	while ((le = list_next(le)) != list) {
8000378c:	5651ffec 	bnel	s2,s1,80003740 <lookup_pipe_nolock+0x50>
80003790:	8e24fff4 	lw	a0,-12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:38
			if (vop_ref_inc(node) == 1) {
				pin->reclaim_count++;
			}
		}
	}
}
80003794:	8fbf002c 	lw	ra,44(sp)
80003798:	8fb50028 	lw	s5,40(sp)
8000379c:	8fb40024 	lw	s4,36(sp)
800037a0:	8fb30020 	lw	s3,32(sp)
800037a4:	8fb2001c 	lw	s2,28(sp)
800037a8:	8fb10018 	lw	s1,24(sp)
800037ac:	8fb00014 	lw	s0,20(sp)
800037b0:	03e00008 	jr	ra
800037b4:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:20
	*rnode_store = *wnode_store = NULL;
	while ((le = list_next(le)) != list) {
		struct pipe_inode *pin = le2pin(le, pipe_link);
		if (strcmp(pin->name, name) == 0) {
			struct inode *node = info2node(pin, pipe_inode);
			switch (pin->pin_type) {
800037b8:	10f40006 	beq	a3,s4,800037d4 <lookup_pipe_nolock+0xe4>
800037bc:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:30
			case PIN_WRONLY:
				assert(*wnode_store == NULL);
				*wnode_store = node;
				break;
			default:
				panic("unknown pipe_inode type %d.\n",
800037c0:	3c048002 	lui	a0,0x8002
800037c4:	24841428 	addiu	a0,a0,5160
800037c8:	2405001f 	li	a1,31
800037cc:	0c006b13 	jal	8001ac4c <__panic>
800037d0:	24c61464 	addiu	a2,a2,5220
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:26
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
				*rnode_store = node;
				break;
			case PIN_WRONLY:
				assert(*wnode_store == NULL);
800037d4:	8ea20000 	lw	v0,0(s5)
800037d8:	54400003 	bnezl	v0,800037e8 <lookup_pipe_nolock+0xf8>
800037dc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:28
				*wnode_store = node;
				break;
800037e0:	08000ddb 	j	8000376c <lookup_pipe_nolock+0x7c>
800037e4:	aea40000 	sw	a0,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:26
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
				*rnode_store = node;
				break;
			case PIN_WRONLY:
				assert(*wnode_store == NULL);
800037e8:	3c068002 	lui	a2,0x8002
800037ec:	3c078002 	lui	a3,0x8002
800037f0:	24841428 	addiu	a0,a0,5160
800037f4:	2405001a 	li	a1,26
800037f8:	24c60e48 	addiu	a2,a2,3656
800037fc:	0c006b13 	jal	8001ac4c <__panic>
80003800:	24e7144c 	addiu	a3,a3,5196
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:22
		struct pipe_inode *pin = le2pin(le, pipe_link);
		if (strcmp(pin->name, name) == 0) {
			struct inode *node = info2node(pin, pipe_inode);
			switch (pin->pin_type) {
			case PIN_RDONLY:
				assert(*rnode_store == NULL);
80003804:	3c068002 	lui	a2,0x8002
80003808:	3c078002 	lui	a3,0x8002
8000380c:	24841428 	addiu	a0,a0,5160
80003810:	24050016 	li	a1,22
80003814:	24c60e48 	addiu	a2,a2,3656
80003818:	0c006b13 	jal	8001ac4c <__panic>
8000381c:	24e71434 	addiu	a3,a3,5172

80003820 <pipe_root_lookup>:
pipe_root_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:102
	return ret;
}

static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
80003820:	27bdffd8 	addiu	sp,sp,-40
80003824:	afb20020 	sw	s2,32(sp)
80003828:	afb00018 	sw	s0,24(sp)
8000382c:	afbf0024 	sw	ra,36(sp)
80003830:	afb1001c 	sw	s1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:103
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003834:	90a20000 	lbu	v0,0(a1)
80003838:	24030072 	li	v1,114
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:102
	return ret;
}

static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
8000383c:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:103
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003840:	10430004 	beq	v0,v1,80003854 <pipe_root_lookup+0x34>
80003844:	00c08021 	move	s0,a2
80003848:	24030077 	li	v1,119
8000384c:	54430034 	bnel	v0,v1,80003920 <pipe_root_lookup+0x100>
80003850:	3c048002 	lui	a0,0x8002
80003854:	92430001 	lbu	v1,1(s2)
80003858:	2402005f 	li	v0,95
8000385c:	54620030 	bnel	v1,v0,80003920 <pipe_root_lookup+0x100>
80003860:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:105
	struct inode *node[2];
	struct pipe_fs *pipe = fsop_info(vop_fs(__node), pipe);
80003864:	8c910044 	lw	s1,68(a0)
80003868:	12200025 	beqz	s1,80003900 <pipe_root_lookup+0xe0>
8000386c:	24025678 	li	v0,22136
80003870:	8e230084 	lw	v1,132(s1)
80003874:	54620023 	bnel	v1,v0,80003904 <pipe_root_lookup+0xe4>
80003878:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:106
	lock_pipe(pipe);
8000387c:	0c000b8d 	jal	80002e34 <lock_pipe>
80003880:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:108
	{
		lookup_pipe_nolock(pipe, path + 2, &node[0], &node[1]);
80003884:	02202021 	move	a0,s1
80003888:	26450002 	addiu	a1,s2,2
8000388c:	27a60010 	addiu	a2,sp,16
80003890:	0c000dbc 	jal	800036f0 <lookup_pipe_nolock>
80003894:	27a70014 	addiu	a3,sp,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:110
	}
	unlock_pipe(pipe);
80003898:	0c000b8f 	jal	80002e3c <unlock_pipe>
8000389c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:112

	if (path[0] != 'r') {
800038a0:	92430000 	lbu	v1,0(s2)
800038a4:	24020072 	li	v0,114
800038a8:	10620013 	beq	v1,v0,800038f8 <pipe_root_lookup+0xd8>
800038ac:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:113
		struct inode *tmp = node[0];
800038b0:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:114
		node[0] = node[1], node[1] = tmp;
800038b4:	afa40014 	sw	a0,20(sp)
800038b8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:117
	}

	if (node[1] != NULL) {
800038bc:	10800004 	beqz	a0,800038d0 <pipe_root_lookup+0xb0>
800038c0:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:118
		vop_ref_dec(node[1]);
800038c4:	0c001171 	jal	800045c4 <inode_ref_dec>
800038c8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:120
	}
	if (node[0] == NULL) {
800038cc:	8fa30010 	lw	v1,16(sp)
800038d0:	10600003 	beqz	v1,800038e0 <pipe_root_lookup+0xc0>
800038d4:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:123
		return -E_NOENT;
	}
	*node_store = node[0];
800038d8:	ae030000 	sw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:124
	return 0;
800038dc:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:125
}
800038e0:	8fbf0024 	lw	ra,36(sp)
800038e4:	8fb20020 	lw	s2,32(sp)
800038e8:	8fb1001c 	lw	s1,28(sp)
800038ec:	8fb00018 	lw	s0,24(sp)
800038f0:	03e00008 	jr	ra
800038f4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:112
	{
		lookup_pipe_nolock(pipe, path + 2, &node[0], &node[1]);
	}
	unlock_pipe(pipe);

	if (path[0] != 'r') {
800038f8:	08000e2f 	j	800038bc <pipe_root_lookup+0x9c>
800038fc:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:105
static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
	struct inode *node[2];
	struct pipe_fs *pipe = fsop_info(vop_fs(__node), pipe);
80003900:	3c048002 	lui	a0,0x8002
80003904:	3c068002 	lui	a2,0x8002
80003908:	3c078002 	lui	a3,0x8002
8000390c:	24841428 	addiu	a0,a0,5160
80003910:	24050069 	li	a1,105
80003914:	24c60e48 	addiu	a2,a2,3656
80003918:	0c006b13 	jal	8001ac4c <__panic>
8000391c:	24e71328 	addiu	a3,a3,4904
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:103
}

static int
pipe_root_lookup(struct inode *__node, char *path, struct inode **node_store)
{
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003920:	3c068002 	lui	a2,0x8002
80003924:	3c078002 	lui	a3,0x8002
80003928:	24841428 	addiu	a0,a0,5160
8000392c:	24050067 	li	a1,103
80003930:	24c60e48 	addiu	a2,a2,3656
80003934:	0c006b13 	jal	8001ac4c <__panic>
80003938:	24e71484 	addiu	a3,a3,5252

8000393c <pipe_root_create>:
pipe_root_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:43
}

static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
8000393c:	27bdffd0 	addiu	sp,sp,-48
80003940:	afb40028 	sw	s4,40(sp)
80003944:	afb30024 	sw	s3,36(sp)
80003948:	afbf002c 	sw	ra,44(sp)
8000394c:	afb20020 	sw	s2,32(sp)
80003950:	afb1001c 	sw	s1,28(sp)
80003954:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:44
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
80003958:	90b10000 	lbu	s1,0(a1)
8000395c:	24020072 	li	v0,114
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:43
}

static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
80003960:	00c0a021 	move	s4,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:44
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
80003964:	12220004 	beq	s1,v0,80003978 <pipe_root_create+0x3c>
80003968:	00e09821 	move	s3,a3
8000396c:	24020077 	li	v0,119
80003970:	5622005f 	bnel	s1,v0,80003af0 <pipe_root_create+0x1b4>
80003974:	3c048002 	lui	a0,0x8002
80003978:	90a30001 	lbu	v1,1(a1)
8000397c:	2402005f 	li	v0,95
80003980:	5462005b 	bnel	v1,v0,80003af0 <pipe_root_create+0x1b4>
80003984:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:50
	int ret = 0;
	bool readonly = (name[0] == 'r');
	name += 2;

	struct inode *node[2];
	struct fs *fs = vop_fs(__node);
80003988:	8c900044 	lw	s0,68(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:51
	struct pipe_fs *pipe = fsop_info(fs, pipe);
8000398c:	12000050 	beqz	s0,80003ad0 <pipe_root_create+0x194>
80003990:	24025678 	li	v0,22136
80003994:	8e030084 	lw	v1,132(s0)
80003998:	1462004d 	bne	v1,v0,80003ad0 <pipe_root_create+0x194>
8000399c:	24b20002 	addiu	s2,a1,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:53

	lock_pipe(pipe);
800039a0:	02002021 	move	a0,s0
800039a4:	0c000b8d 	jal	80002e34 <lock_pipe>
800039a8:	3a310072 	xori	s1,s1,0x72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:46
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
	int ret = 0;
	bool readonly = (name[0] == 'r');
800039ac:	2e310001 	sltiu	s1,s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:55
	struct fs *fs = vop_fs(__node);
	struct pipe_fs *pipe = fsop_info(fs, pipe);

	lock_pipe(pipe);

	lookup_pipe_nolock(pipe, name, &node[0], &node[1]);
800039b0:	02002021 	move	a0,s0
800039b4:	02402821 	move	a1,s2
800039b8:	27a60010 	addiu	a2,sp,16
800039bc:	0c000dbc 	jal	800036f0 <lookup_pipe_nolock>
800039c0:	27a70014 	addiu	a3,sp,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:56
	if (!readonly) {
800039c4:	1620001a 	bnez	s1,80003a30 <pipe_root_create+0xf4>
800039c8:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:58
		struct inode *tmp = node[0];
		node[0] = node[1], node[1] = tmp;
800039cc:	8fa40014 	lw	a0,20(sp)
800039d0:	8fa20010 	lw	v0,16(sp)
800039d4:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:61
	}

	if (node[0] != NULL) {
800039d8:	10800017 	beqz	a0,80003a38 <pipe_root_create+0xfc>
800039dc:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:62
		if (excl) {
800039e0:	16800031 	bnez	s4,80003aa8 <pipe_root_create+0x16c>
800039e4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:66
			ret = -E_EXISTS, vop_ref_dec(node[0]);
			goto out;
		}
		*node_store = node[0];
800039e8:	ae640000 	sw	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:45
static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
	int ret = 0;
800039ec:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:92
	list_add(&(pipe->pipe_list),
		 &(vop_info(new_node, pipe_inode)->pipe_link));
	ret = 0, *node_store = new_node;

out:
	unlock_pipe(pipe);
800039f0:	0c000b8f 	jal	80002e3c <unlock_pipe>
800039f4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:94

	if (node[1] != NULL) {
800039f8:	8fa40014 	lw	a0,20(sp)
800039fc:	10800004 	beqz	a0,80003a10 <pipe_root_create+0xd4>
80003a00:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:95
		vop_ref_dec(node[1]);
80003a04:	0c001171 	jal	800045c4 <inode_ref_dec>
80003a08:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:98
	}
	return ret;
}
80003a0c:	8fbf002c 	lw	ra,44(sp)
80003a10:	02201021 	move	v0,s1
80003a14:	8fb40028 	lw	s4,40(sp)
80003a18:	8fb30024 	lw	s3,36(sp)
80003a1c:	8fb20020 	lw	s2,32(sp)
80003a20:	8fb1001c 	lw	s1,28(sp)
80003a24:	8fb00018 	lw	s0,24(sp)
80003a28:	03e00008 	jr	ra
80003a2c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:61
	if (!readonly) {
		struct inode *tmp = node[0];
		node[0] = node[1], node[1] = tmp;
	}

	if (node[0] != NULL) {
80003a30:	1480ffeb 	bnez	a0,800039e0 <pipe_root_create+0xa4>
80003a34:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:72
		goto out;
	}
	ret = -E_NO_MEM;

	struct pipe_state *state;
	if (node[1] == NULL) {
80003a38:	8fa20014 	lw	v0,20(sp)
80003a3c:	1040001e 	beqz	v0,80003ab8 <pipe_root_create+0x17c>
80003a40:	24031236 	li	v1,4662
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:77
		if ((state = pipe_state_create()) == NULL) {
			goto out;
		}
	} else {
		state = vop_info(node[1], pipe_inode)->state;
80003a44:	8c440038 	lw	a0,56(v0)
80003a48:	14830034 	bne	a0,v1,80003b1c <pipe_root_create+0x1e0>
80003a4c:	3c048002 	lui	a0,0x8002
80003a50:	8c54000c 	lw	s4,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:78
		pipe_state_acquire(state);
80003a54:	0c000f70 	jal	80003dc0 <pipe_state_acquire>
80003a58:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:82
	}

	struct inode *new_node;
	if ((new_node = pipe_create_inode(fs, name, state, readonly)) == NULL) {
80003a5c:	02002021 	move	a0,s0
80003a60:	02402821 	move	a1,s2
80003a64:	02803021 	move	a2,s4
80003a68:	0c000d26 	jal	80003498 <pipe_create_inode>
80003a6c:	02203821 	move	a3,s1
80003a70:	10400026 	beqz	v0,80003b0c <pipe_root_create+0x1d0>
80003a74:	24031236 	li	v1,4662
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:88
		pipe_state_release(state);
		goto out;
	}

	list_add(&(pipe->pipe_list),
		 &(vop_info(new_node, pipe_inode)->pipe_link));
80003a78:	8c440038 	lw	a0,56(v0)
80003a7c:	1483002e 	bne	a0,v1,80003b38 <pipe_root_create+0x1fc>
80003a80:	24440010 	addiu	a0,v0,16
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80003a84:	8e03001c 	lw	v1,28(s0)
pipe_root_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:87
	if ((new_node = pipe_create_inode(fs, name, state, readonly)) == NULL) {
		pipe_state_release(state);
		goto out;
	}

	list_add(&(pipe->pipe_list),
80003a88:	26050018 	addiu	a1,s0,24
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80003a8c:	ac640000 	sw	a0,0(v1)
80003a90:	ae04001c 	sw	a0,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80003a94:	ac450010 	sw	a1,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80003a98:	ac430014 	sw	v1,20(v0)
pipe_root_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:89
		 &(vop_info(new_node, pipe_inode)->pipe_link));
	ret = 0, *node_store = new_node;
80003a9c:	00008821 	move	s1,zero
80003aa0:	08000e7c 	j	800039f0 <pipe_root_create+0xb4>
80003aa4:	ae620000 	sw	v0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:63
		node[0] = node[1], node[1] = tmp;
	}

	if (node[0] != NULL) {
		if (excl) {
			ret = -E_EXISTS, vop_ref_dec(node[0]);
80003aa8:	0c001171 	jal	800045c4 <inode_ref_dec>
80003aac:	2411ffef 	li	s1,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:64
			goto out;
80003ab0:	08000e7c 	j	800039f0 <pipe_root_create+0xb4>
80003ab4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:73
	}
	ret = -E_NO_MEM;

	struct pipe_state *state;
	if (node[1] == NULL) {
		if ((state = pipe_state_create()) == NULL) {
80003ab8:	0c000f56 	jal	80003d58 <pipe_state_create>
80003abc:	00000000 	nop
80003ac0:	1440ffe6 	bnez	v0,80003a5c <pipe_root_create+0x120>
80003ac4:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:69
			goto out;
		}
		*node_store = node[0];
		goto out;
	}
	ret = -E_NO_MEM;
80003ac8:	08000e7c 	j	800039f0 <pipe_root_create+0xb4>
80003acc:	2411fff4 	li	s1,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:51
	bool readonly = (name[0] == 'r');
	name += 2;

	struct inode *node[2];
	struct fs *fs = vop_fs(__node);
	struct pipe_fs *pipe = fsop_info(fs, pipe);
80003ad0:	3c048002 	lui	a0,0x8002
80003ad4:	3c068002 	lui	a2,0x8002
80003ad8:	3c078002 	lui	a3,0x8002
80003adc:	24841428 	addiu	a0,a0,5160
80003ae0:	24050033 	li	a1,51
80003ae4:	24c60e48 	addiu	a2,a2,3656
80003ae8:	0c006b13 	jal	8001ac4c <__panic>
80003aec:	24e71328 	addiu	a3,a3,4904
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:44

static int
pipe_root_create(struct inode *__node, const char *name, bool excl,
		 struct inode **node_store)
{
	assert((name[0] == 'r' || name[0] == 'w') && name[1] == '_');
80003af0:	3c068002 	lui	a2,0x8002
80003af4:	3c078002 	lui	a3,0x8002
80003af8:	24841428 	addiu	a0,a0,5160
80003afc:	2405002c 	li	a1,44
80003b00:	24c60e48 	addiu	a2,a2,3656
80003b04:	0c006b13 	jal	8001ac4c <__panic>
80003b08:	24e714bc 	addiu	a3,a3,5308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:83
		pipe_state_acquire(state);
	}

	struct inode *new_node;
	if ((new_node = pipe_create_inode(fs, name, state, readonly)) == NULL) {
		pipe_state_release(state);
80003b0c:	0c000f81 	jal	80003e04 <pipe_state_release>
80003b10:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:84
		goto out;
80003b14:	08000e7c 	j	800039f0 <pipe_root_create+0xb4>
80003b18:	2411fff4 	li	s1,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:77
	if (node[1] == NULL) {
		if ((state = pipe_state_create()) == NULL) {
			goto out;
		}
	} else {
		state = vop_info(node[1], pipe_inode)->state;
80003b1c:	24841428 	addiu	a0,a0,5160
80003b20:	2405004d 	li	a1,77
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:88
		pipe_state_release(state);
		goto out;
	}

	list_add(&(pipe->pipe_list),
		 &(vop_info(new_node, pipe_inode)->pipe_link));
80003b24:	3c068002 	lui	a2,0x8002
80003b28:	3c078002 	lui	a3,0x8002
80003b2c:	24c60e48 	addiu	a2,a2,3656
80003b30:	0c006b13 	jal	8001ac4c <__panic>
80003b34:	24e713c8 	addiu	a3,a3,5064
80003b38:	3c048002 	lui	a0,0x8002
80003b3c:	24841428 	addiu	a0,a0,5160
80003b40:	08000ec9 	j	80003b24 <pipe_root_create+0x1e8>
80003b44:	24050058 	li	a1,88

80003b48 <pipe_root_lookup_parent>:
pipe_root_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:130
}

static int
pipe_root_lookup_parent(struct inode *node, char *path,
			struct inode **node_store, char **endp)
{
80003b48:	27bdffe8 	addiu	sp,sp,-24
80003b4c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:131
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003b50:	90a20000 	lbu	v0,0(a1)
80003b54:	24030072 	li	v1,114
80003b58:	10430003 	beq	v0,v1,80003b68 <pipe_root_lookup_parent+0x20>
80003b5c:	24030077 	li	v1,119
80003b60:	5443000c 	bnel	v0,v1,80003b94 <pipe_root_lookup_parent+0x4c>
80003b64:	3c048002 	lui	a0,0x8002
80003b68:	90a30001 	lbu	v1,1(a1)
80003b6c:	2402005f 	li	v0,95
80003b70:	54620008 	bnel	v1,v0,80003b94 <pipe_root_lookup_parent+0x4c>
80003b74:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:132
	*node_store = node, *endp = path;
80003b78:	acc40000 	sw	a0,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:133
	vop_ref_inc(node);
80003b7c:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80003b80:	ace50000 	sw	a1,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:135
	return 0;
}
80003b84:	8fbf0014 	lw	ra,20(sp)
80003b88:	00001021 	move	v0,zero
80003b8c:	03e00008 	jr	ra
80003b90:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:131

static int
pipe_root_lookup_parent(struct inode *node, char *path,
			struct inode **node_store, char **endp)
{
	assert((path[0] == 'r' || path[0] == 'w') && path[1] == '_');
80003b94:	3c068002 	lui	a2,0x8002
80003b98:	3c078002 	lui	a3,0x8002
80003b9c:	24841428 	addiu	a0,a0,5160
80003ba0:	24050083 	li	a1,131
80003ba4:	24c60e48 	addiu	a2,a2,3656
80003ba8:	0c006b13 	jal	8001ac4c <__panic>
80003bac:	24e71484 	addiu	a3,a3,5252

80003bb0 <pipe_create_root>:
pipe_create_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:164
	.vop_lookup = pipe_root_lookup,
	.vop_lookup_parent = pipe_root_lookup_parent,
};

struct inode *pipe_create_root(struct fs *fs)
{
80003bb0:	27bdffe0 	addiu	sp,sp,-32
80003bb4:	00803021 	move	a2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:166
	struct inode *node;
	if ((node = alloc_inode(pipe_root)) != NULL) {
80003bb8:	afa60010 	sw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:164
	.vop_lookup = pipe_root_lookup,
	.vop_lookup_parent = pipe_root_lookup_parent,
};

struct inode *pipe_create_root(struct fs *fs)
{
80003bbc:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:166
	struct inode *node;
	if ((node = alloc_inode(pipe_root)) != NULL) {
80003bc0:	0c001090 	jal	80004240 <__alloc_inode>
80003bc4:	24041235 	li	a0,4661
80003bc8:	10400007 	beqz	v0,80003be8 <pipe_create_root+0x38>
80003bcc:	8fa60010 	lw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:167
		vop_init(node, &pipe_root_ops, fs);
80003bd0:	3c058002 	lui	a1,0x8002
80003bd4:	00402021 	move	a0,v0
80003bd8:	24a5fed8 	addiu	a1,a1,-296
80003bdc:	0c0010d1 	jal	80004344 <inode_init>
80003be0:	afa20010 	sw	v0,16(sp)
80003be4:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_root.c:170
	}
	return node;
}
80003be8:	8fbf001c 	lw	ra,28(sp)
80003bec:	03e00008 	jr	ra
80003bf0:	27bd0020 	addiu	sp,sp,32

80003bf4 <pipe_state_wakeup>:
pipe_state_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:81
	local_intr_restore(intr_flag);
	return wait->wakeup_flags == WT_PIPE;
}

static void pipe_state_wakeup(wait_queue_t * queue)
{
80003bf4:	27bdffe8 	addiu	sp,sp,-24
80003bf8:	afb00010 	sw	s0,16(sp)
80003bfc:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:82
	if (!wait_queue_empty(queue)) {
80003c00:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80003c04:	00808021 	move	s0,a0
80003c08:	10400004 	beqz	v0,80003c1c <pipe_state_wakeup+0x28>
80003c0c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:90
		{
			wakeup_queue(queue, WT_PIPE, 1);
		}
		local_intr_restore(intr_flag);
	}
}
80003c10:	8fb00010 	lw	s0,16(sp)
80003c14:	03e00008 	jr	ra
80003c18:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80003c1c:	40026000 	mfc0	v0,c0_status
80003c20:	30420001 	andi	v0,v0,0x1
80003c24:	14400008 	bnez	v0,80003c48 <pipe_state_wakeup+0x54>
80003c28:	02002021 	move	a0,s0
pipe_state_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:90
80003c2c:	8fbf0014 	lw	ra,20(sp)
80003c30:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:86
{
	if (!wait_queue_empty(queue)) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			wakeup_queue(queue, WT_PIPE, 1);
80003c34:	3c058000 	lui	a1,0x8000
80003c38:	24a50200 	addiu	a1,a1,512
80003c3c:	24060001 	li	a2,1
80003c40:	080069dc 	j	8001a770 <wakeup_queue>
80003c44:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80003c48:	0c006d0c 	jal	8001b430 <intr_disable>
80003c4c:	00000000 	nop
pipe_state_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:86
80003c50:	3c058000 	lui	a1,0x8000
80003c54:	02002021 	move	a0,s0
80003c58:	24a50200 	addiu	a1,a1,512
80003c5c:	0c0069dc 	jal	8001a770 <wakeup_queue>
80003c60:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:90
		}
		local_intr_restore(intr_flag);
	}
}
80003c64:	8fbf0014 	lw	ra,20(sp)
80003c68:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80003c6c:	08006d08 	j	8001b420 <intr_enable>
80003c70:	27bd0018 	addiu	sp,sp,24

80003c74 <pipe_state_wait>:
pipe_state_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:65
{
	return state->p_wpos - state->p_rpos >= PIPE_BUFSIZE;
}

static bool pipe_state_wait(wait_queue_t * queue)
{
80003c74:	27bdffc8 	addiu	sp,sp,-56
80003c78:	afb1002c 	sw	s1,44(sp)
80003c7c:	afbf0034 	sw	ra,52(sp)
80003c80:	afb20030 	sw	s2,48(sp)
80003c84:	afb00028 	sw	s0,40(sp)
80003c88:	00808821 	move	s1,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80003c8c:	40026000 	mfc0	v0,c0_status
80003c90:	30420001 	andi	v0,v0,0x1
80003c94:	14400025 	bnez	v0,80003d2c <pipe_state_wait+0xb8>
80003c98:	00000000 	nop
pipe_state_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:69
	bool intr_flag;
	wait_t __wait, *wait = &__wait;
	local_intr_save(intr_flag);
	wait_current_set(queue, wait, WT_PIPE);
80003c9c:	27b00010 	addiu	s0,sp,16
80003ca0:	3c068000 	lui	a2,0x8000
80003ca4:	02002821 	move	a1,s0
80003ca8:	0c006a08 	jal	8001a820 <wait_current_set>
80003cac:	24c60200 	addiu	a2,a2,512
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:72
	local_intr_restore(intr_flag);

	schedule();
80003cb0:	0c00059f 	jal	8000167c <schedule>
80003cb4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80003cb8:	40026000 	mfc0	v0,c0_status
80003cbc:	30420001 	andi	v0,v0,0x1
80003cc0:	10400003 	beqz	v0,80003cd0 <pipe_state_wait+0x5c>
80003cc4:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80003cc8:	0c006d0c 	jal	8001b430 <intr_disable>
80003ccc:	24120001 	li	s2,1
pipe_state_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:75

	local_intr_save(intr_flag);
	wait_current_del(queue, wait);
80003cd0:	0c0069be 	jal	8001a6f8 <wait_in_queue>
80003cd4:	02002021 	move	a0,s0
80003cd8:	54400010 	bnezl	v0,80003d1c <pipe_state_wait+0xa8>
80003cdc:	02202021 	move	a0,s1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80003ce0:	12400004 	beqz	s2,80003cf4 <pipe_state_wait+0x80>
80003ce4:	8fa30014 	lw	v1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80003ce8:	0c006d08 	jal	8001b420 <intr_enable>
80003cec:	00000000 	nop
pipe_state_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:77
	local_intr_restore(intr_flag);
	return wait->wakeup_flags == WT_PIPE;
80003cf0:	8fa30014 	lw	v1,20(sp)
80003cf4:	3c027fff 	lui	v0,0x7fff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:78
}
80003cf8:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:77
	schedule();

	local_intr_save(intr_flag);
	wait_current_del(queue, wait);
	local_intr_restore(intr_flag);
	return wait->wakeup_flags == WT_PIPE;
80003cfc:	3442fe00 	ori	v0,v0,0xfe00
80003d00:	00621021 	addu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:78
}
80003d04:	2c420001 	sltiu	v0,v0,1
80003d08:	8fb20030 	lw	s2,48(sp)
80003d0c:	8fb1002c 	lw	s1,44(sp)
80003d10:	8fb00028 	lw	s0,40(sp)
80003d14:	03e00008 	jr	ra
80003d18:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:75
	local_intr_restore(intr_flag);

	schedule();

	local_intr_save(intr_flag);
	wait_current_del(queue, wait);
80003d1c:	0c00696e 	jal	8001a5b8 <wait_queue_del>
80003d20:	02002821 	move	a1,s0
80003d24:	08000f38 	j	80003ce0 <pipe_state_wait+0x6c>
80003d28:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80003d2c:	0c006d0c 	jal	8001b430 <intr_disable>
80003d30:	27b00010 	addiu	s0,sp,16
pipe_state_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:69
static bool pipe_state_wait(wait_queue_t * queue)
{
	bool intr_flag;
	wait_t __wait, *wait = &__wait;
	local_intr_save(intr_flag);
	wait_current_set(queue, wait, WT_PIPE);
80003d34:	3c068000 	lui	a2,0x8000
80003d38:	02202021 	move	a0,s1
80003d3c:	02002821 	move	a1,s0
80003d40:	0c006a08 	jal	8001a820 <wait_current_set>
80003d44:	24c60200 	addiu	a2,a2,512
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80003d48:	0c006d08 	jal	8001b420 <intr_enable>
80003d4c:	00000000 	nop
80003d50:	08000f2c 	j	80003cb0 <pipe_state_wait+0x3c>
80003d54:	00000000 	nop

80003d58 <pipe_state_create>:
pipe_state_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:29
};

#define PIPE_BUFSIZE                            (PGSIZE - sizeof(struct pipe_state))

struct pipe_state *pipe_state_create(void)
{
80003d58:	27bdffe0 	addiu	sp,sp,-32
80003d5c:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:32
	static_assert((int)PIPE_BUFSIZE > 128);
	struct pipe_state *state;
	if ((state = kmalloc(sizeof(struct pipe_state) + PIPE_BUFSIZE)) != NULL) {
80003d60:	0c00548e 	jal	80015238 <kmalloc>
80003d64:	24041000 	li	a0,4096
80003d68:	10400012 	beqz	v0,80003db4 <pipe_state_create+0x5c>
80003d6c:	24430038 	addiu	v1,v0,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:34
		state->p_rpos = state->p_wpos = 0;
		state->buf = (uint8_t *) (state + 1);
80003d70:	ac430008 	sw	v1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:36
		state->isclosed = 0;
		state->ref_count = 1;
80003d74:	24030001 	li	v1,1
80003d78:	ac430010 	sw	v1,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:37
		sem_init(&(state->sem), 1);
80003d7c:	24440014 	addiu	a0,v0,20
80003d80:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:33
struct pipe_state *pipe_state_create(void)
{
	static_assert((int)PIPE_BUFSIZE > 128);
	struct pipe_state *state;
	if ((state = kmalloc(sizeof(struct pipe_state) + PIPE_BUFSIZE)) != NULL) {
		state->p_rpos = state->p_wpos = 0;
80003d84:	ac400004 	sw	zero,4(v0)
80003d88:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:35
		state->buf = (uint8_t *) (state + 1);
		state->isclosed = 0;
80003d8c:	ac40000c 	sw	zero,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:37
		state->ref_count = 1;
		sem_init(&(state->sem), 1);
80003d90:	0c00671f 	jal	80019c7c <sem_init>
80003d94:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:38
		wait_queue_init(&(state->reader_queue));
80003d98:	8fa20010 	lw	v0,16(sp)
80003d9c:	0c006953 	jal	8001a54c <wait_queue_init>
80003da0:	24440028 	addiu	a0,v0,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:39
		wait_queue_init(&(state->writer_queue));
80003da4:	8fa20010 	lw	v0,16(sp)
80003da8:	0c006953 	jal	8001a54c <wait_queue_init>
80003dac:	24440030 	addiu	a0,v0,48
80003db0:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:42
	}
	return state;
}
80003db4:	8fbf001c 	lw	ra,28(sp)
80003db8:	03e00008 	jr	ra
80003dbc:	27bd0020 	addiu	sp,sp,32

80003dc0 <pipe_state_acquire>:
pipe_state_acquire():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:99
#define wakeup_reader(state)                        pipe_state_wakeup(&((state)->reader_queue))
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
	assert(state->ref_count > 0);
80003dc0:	8c820010 	lw	v0,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:98
#define wait_writer(state)                          pipe_state_wait(&((state)->reader_queue))
#define wakeup_reader(state)                        pipe_state_wakeup(&((state)->reader_queue))
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
80003dc4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:99
	assert(state->ref_count > 0);
80003dc8:	18400006 	blez	v0,80003de4 <pipe_state_acquire+0x24>
80003dcc:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:101
	state->ref_count++;
}
80003dd0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:100
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
	assert(state->ref_count > 0);
	state->ref_count++;
80003dd4:	24420001 	addiu	v0,v0,1
80003dd8:	ac820010 	sw	v0,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:101
}
80003ddc:	03e00008 	jr	ra
80003de0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:99
#define wakeup_reader(state)                        pipe_state_wakeup(&((state)->reader_queue))
#define wakeup_writer(state)                        pipe_state_wakeup(&((state)->writer_queue))

void pipe_state_acquire(struct pipe_state *state)
{
	assert(state->ref_count > 0);
80003de4:	3c048002 	lui	a0,0x8002
80003de8:	3c068002 	lui	a2,0x8002
80003dec:	3c078002 	lui	a3,0x8002
80003df0:	248414f4 	addiu	a0,a0,5364
80003df4:	24050063 	li	a1,99
80003df8:	24c60e48 	addiu	a2,a2,3656
80003dfc:	0c006b13 	jal	8001ac4c <__panic>
80003e00:	24e71504 	addiu	a3,a3,5380

80003e04 <pipe_state_release>:
pipe_state_release():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:104
	state->ref_count++;
}

void pipe_state_release(struct pipe_state *state)
{
80003e04:	27bdffe8 	addiu	sp,sp,-24
80003e08:	afb00010 	sw	s0,16(sp)
80003e0c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:105
	assert(state != NULL && state->ref_count > 0);
80003e10:	10800016 	beqz	a0,80003e6c <pipe_state_release+0x68>
80003e14:	00808021 	move	s0,a0
80003e18:	8c820010 	lw	v0,16(a0)
80003e1c:	18400013 	blez	v0,80003e6c <pipe_state_release+0x68>
80003e20:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:106
	if (--state->ref_count == 0) {
80003e24:	10400005 	beqz	v0,80003e3c <pipe_state_release+0x38>
80003e28:	ac820010 	sw	v0,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:111
		assert(wait_queue_empty(&(state->reader_queue)));
		assert(wait_queue_empty(&(state->writer_queue)));
		kfree(state);
	}
}
80003e2c:	8fbf0014 	lw	ra,20(sp)
80003e30:	8fb00010 	lw	s0,16(sp)
80003e34:	03e00008 	jr	ra
80003e38:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:107

void pipe_state_release(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
	if (--state->ref_count == 0) {
		assert(wait_queue_empty(&(state->reader_queue)));
80003e3c:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80003e40:	24840028 	addiu	a0,a0,40
80003e44:	10400011 	beqz	v0,80003e8c <pipe_state_release+0x88>
80003e48:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:108
		assert(wait_queue_empty(&(state->writer_queue)));
80003e4c:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80003e50:	26040030 	addiu	a0,s0,48
80003e54:	10400014 	beqz	v0,80003ea8 <pipe_state_release+0xa4>
80003e58:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:111
		kfree(state);
	}
}
80003e5c:	8fbf0014 	lw	ra,20(sp)
80003e60:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:109
{
	assert(state != NULL && state->ref_count > 0);
	if (--state->ref_count == 0) {
		assert(wait_queue_empty(&(state->reader_queue)));
		assert(wait_queue_empty(&(state->writer_queue)));
		kfree(state);
80003e64:	080054b9 	j	800152e4 <kfree>
80003e68:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:105
	state->ref_count++;
}

void pipe_state_release(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
80003e6c:	3c048002 	lui	a0,0x8002
80003e70:	3c068002 	lui	a2,0x8002
80003e74:	3c078002 	lui	a3,0x8002
80003e78:	248414f4 	addiu	a0,a0,5364
80003e7c:	24050069 	li	a1,105
80003e80:	24c60e48 	addiu	a2,a2,3656
80003e84:	0c006b13 	jal	8001ac4c <__panic>
80003e88:	24e7151c 	addiu	a3,a3,5404
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:107
	if (--state->ref_count == 0) {
		assert(wait_queue_empty(&(state->reader_queue)));
80003e8c:	3c068002 	lui	a2,0x8002
80003e90:	3c078002 	lui	a3,0x8002
80003e94:	248414f4 	addiu	a0,a0,5364
80003e98:	2405006b 	li	a1,107
80003e9c:	24c60e48 	addiu	a2,a2,3656
80003ea0:	0c006b13 	jal	8001ac4c <__panic>
80003ea4:	24e71544 	addiu	a3,a3,5444
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:108
		assert(wait_queue_empty(&(state->writer_queue)));
80003ea8:	3c048002 	lui	a0,0x8002
80003eac:	3c068002 	lui	a2,0x8002
80003eb0:	3c078002 	lui	a3,0x8002
80003eb4:	248414f4 	addiu	a0,a0,5364
80003eb8:	2405006c 	li	a1,108
80003ebc:	24c60e48 	addiu	a2,a2,3656
80003ec0:	0c006b13 	jal	8001ac4c <__panic>
80003ec4:	24e71570 	addiu	a3,a3,5488

80003ec8 <pipe_state_close>:
pipe_state_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:114
		kfree(state);
	}
}

void pipe_state_close(struct pipe_state *state)
{
80003ec8:	27bdffe8 	addiu	sp,sp,-24
80003ecc:	afb00010 	sw	s0,16(sp)
80003ed0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:115
	assert(state != NULL && state->ref_count > 0);
80003ed4:	1080000c 	beqz	a0,80003f08 <pipe_state_close+0x40>
80003ed8:	00808021 	move	s0,a0
80003edc:	8c820010 	lw	v0,16(a0)
80003ee0:	18400009 	blez	v0,80003f08 <pipe_state_close+0x40>
80003ee4:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:117
	state->isclosed = 1;
	wakeup_reader(state);
80003ee8:	24840028 	addiu	a0,a0,40
80003eec:	0c000efd 	jal	80003bf4 <pipe_state_wakeup>
80003ef0:	ae02000c 	sw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:118
	wakeup_writer(state);
80003ef4:	26040030 	addiu	a0,s0,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:119
}
80003ef8:	8fbf0014 	lw	ra,20(sp)
80003efc:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:118
void pipe_state_close(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
	state->isclosed = 1;
	wakeup_reader(state);
	wakeup_writer(state);
80003f00:	08000efd 	j	80003bf4 <pipe_state_wakeup>
80003f04:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:115
	}
}

void pipe_state_close(struct pipe_state *state)
{
	assert(state != NULL && state->ref_count > 0);
80003f08:	3c048002 	lui	a0,0x8002
80003f0c:	3c068002 	lui	a2,0x8002
80003f10:	3c078002 	lui	a3,0x8002
80003f14:	248414f4 	addiu	a0,a0,5364
80003f18:	24050073 	li	a1,115
80003f1c:	24c60e48 	addiu	a2,a2,3656
80003f20:	0c006b13 	jal	8001ac4c <__panic>
80003f24:	24e7151c 	addiu	a3,a3,5404

80003f28 <pipe_state_size>:
pipe_state_size():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:123
	wakeup_writer(state);
}

size_t pipe_state_size(struct pipe_state *state, bool write)
{
	size_t size = state->p_wpos - state->p_rpos;
80003f28:	8c830004 	lw	v1,4(a0)
80003f2c:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:124
	if (write) {
80003f30:	10a00007 	beqz	a1,80003f50 <pipe_state_size+0x28>
80003f34:	00621023 	subu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:125
		if (state->isclosed) {
80003f38:	8c83000c 	lw	v1,12(a0)
80003f3c:	14600003 	bnez	v1,80003f4c <pipe_state_size+0x24>
80003f40:	24030fc8 	li	v1,4040
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:128
			return 0;
		}
		return PIPE_BUFSIZE - size;
80003f44:	03e00008 	jr	ra
80003f48:	00621023 	subu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:126
size_t pipe_state_size(struct pipe_state *state, bool write)
{
	size_t size = state->p_wpos - state->p_rpos;
	if (write) {
		if (state->isclosed) {
			return 0;
80003f4c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:131
		}
		return PIPE_BUFSIZE - size;
	}
	return size;
}
80003f50:	03e00008 	jr	ra
80003f54:	00000000 	nop

80003f58 <pipe_state_read>:
pipe_state_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:134

size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
{
80003f58:	27bdffd0 	addiu	sp,sp,-48
80003f5c:	afb40028 	sw	s4,40(sp)
80003f60:	afb30024 	sw	s3,36(sp)
80003f64:	afb20020 	sw	s2,32(sp)
80003f68:	afb1001c 	sw	s1,28(sp)
80003f6c:	afb00018 	sw	s0,24(sp)
80003f70:	afbf002c 	sw	ra,44(sp)
80003f74:	00808021 	move	s0,a0
80003f78:	00a08821 	move	s1,a1
80003f7c:	00c0a021 	move	s4,a2
80003f80:	24920014 	addiu	s2,a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:143
	if (is_empty(state)) {
		if (state->isclosed) {
			goto out_unlock;
		} else {
			unlock_state(state);
			if (!wait_writer(state)) {
80003f84:	24930028 	addiu	s3,a0,40
lock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:46
	return state;
}

static void lock_state(struct pipe_state *state)
{
	down(&(state->sem));
80003f88:	0c006727 	jal	80019c9c <down>
80003f8c:	02402021 	move	a0,s2
is_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:56
	up(&(state->sem));
}

static inline bool is_empty(struct pipe_state *state)
{
	return state->p_rpos == state->p_wpos;
80003f90:	8e030000 	lw	v1,0(s0)
pipe_state_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:138
size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
{
	size_t ret = 0;
try_again:
	lock_state(state);
	if (is_empty(state)) {
80003f94:	8e020004 	lw	v0,4(s0)
80003f98:	14620012 	bne	v1,v0,80003fe4 <pipe_state_read+0x8c>
80003f9c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:139
		if (state->isclosed) {
80003fa0:	8e02000c 	lw	v0,12(s0)
80003fa4:	1440003b 	bnez	v0,80004094 <pipe_state_read+0x13c>
80003fa8:	00001021 	move	v0,zero
unlock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80003fac:	0c006725 	jal	80019c94 <up>
80003fb0:	00000000 	nop
pipe_state_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:143
	if (is_empty(state)) {
		if (state->isclosed) {
			goto out_unlock;
		} else {
			unlock_state(state);
			if (!wait_writer(state)) {
80003fb4:	0c000f1d 	jal	80003c74 <pipe_state_wait>
80003fb8:	02602021 	move	a0,s3
80003fbc:	1440fff2 	bnez	v0,80003f88 <pipe_state_read+0x30>
80003fc0:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:135
	return size;
}

size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
{
	size_t ret = 0;
80003fc4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:161

out_unlock:
	unlock_state(state);
out:
	return ret;
}
80003fc8:	8fb40028 	lw	s4,40(sp)
80003fcc:	8fb30024 	lw	s3,36(sp)
80003fd0:	8fb20020 	lw	s2,32(sp)
80003fd4:	8fb1001c 	lw	s1,28(sp)
80003fd8:	8fb00018 	lw	s0,24(sp)
80003fdc:	03e00008 	jr	ra
80003fe0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80003fe4:	1280001f 	beqz	s4,80004064 <pipe_state_read+0x10c>
80003fe8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:151
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
80003fec:	3c050207 	lui	a1,0x207
80003ff0:	08001001 	j	80004004 <pipe_state_read+0xac>
80003ff4:	24a518d7 	addiu	a1,a1,6359
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80003ff8:	8e040004 	lw	a0,4(s0)
80003ffc:	1064002a 	beq	v1,a0,800040a8 <pipe_state_read+0x150>
80004000:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:151
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
80004004:	000320c2 	srl	a0,v1,0x3
80004008:	00850019 	multu	a0,a1
8000400c:	8e070008 	lw	a3,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:133
		return PIPE_BUFSIZE - size;
	}
	return size;
}

size_t pipe_state_read(struct pipe_state * state, void *buf, size_t n)
80004010:	02223021 	addu	a2,s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80004014:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:151
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
80004018:	00002010 	mfhi	a0
8000401c:	00042082 	srl	a0,a0,0x2
80004020:	000440c0 	sll	t0,a0,0x3
80004024:	00044a40 	sll	t1,a0,0x9
80004028:	01284023 	subu	t0,t1,t0
8000402c:	01042021 	addu	a0,t0,a0
80004030:	000420c0 	sll	a0,a0,0x3
80004034:	00641823 	subu	v1,v1,a0
80004038:	00e31821 	addu	v1,a3,v1
8000403c:	90630000 	lbu	v1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:150
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
		*(uint8_t *) (buf + ret) =
80004040:	a0c30000 	sb	v1,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:149
				goto out;
			}
			goto try_again;
		}
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
80004044:	8e030000 	lw	v1,0(s0)
80004048:	24630001 	addiu	v1,v1,1
8000404c:	1454ffea 	bne	v0,s4,80003ff8 <pipe_state_read+0xa0>
80004050:	ae030000 	sw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:154
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
	}
	if (ret != 0) {
		wakeup_writer(state);
80004054:	26040030 	addiu	a0,s0,48
80004058:	0c000efd 	jal	80003bf4 <pipe_state_wakeup>
8000405c:	afa20010 	sw	v0,16(sp)
80004060:	8fa20010 	lw	v0,16(sp)
unlock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80004064:	02402021 	move	a0,s2
80004068:	0c006725 	jal	80019c94 <up>
8000406c:	afa20010 	sw	v0,16(sp)
80004070:	8fa20010 	lw	v0,16(sp)
pipe_state_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:161

out_unlock:
	unlock_state(state);
out:
	return ret;
}
80004074:	8fbf002c 	lw	ra,44(sp)
80004078:	8fb40028 	lw	s4,40(sp)
8000407c:	8fb30024 	lw	s3,36(sp)
80004080:	8fb20020 	lw	s2,32(sp)
80004084:	8fb1001c 	lw	s1,28(sp)
80004088:	8fb00018 	lw	s0,24(sp)
8000408c:	03e00008 	jr	ra
80004090:	27bd0030 	addiu	sp,sp,48
unlock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
80004094:	02402021 	move	a0,s2
80004098:	0c006725 	jal	80019c94 <up>
8000409c:	afa20010 	sw	v0,16(sp)
800040a0:	0800101d 	j	80004074 <pipe_state_read+0x11c>
800040a4:	8fa20010 	lw	v0,16(sp)
pipe_state_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:153
	}
	for (; ret < n && !is_empty(state); ret++, state->p_rpos++) {
		*(uint8_t *) (buf + ret) =
		    state->buf[state->p_rpos % PIPE_BUFSIZE];
	}
	if (ret != 0) {
800040a8:	5040ffef 	beqzl	v0,80004068 <pipe_state_read+0x110>
800040ac:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:154
		wakeup_writer(state);
800040b0:	08001016 	j	80004058 <pipe_state_read+0x100>
800040b4:	26040030 	addiu	a0,s0,48

800040b8 <pipe_state_write>:
pipe_state_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:164
out:
	return ret;
}

size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
{
800040b8:	27bdffc8 	addiu	sp,sp,-56
800040bc:	afb40024 	sw	s4,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
800040c0:	3c140207 	lui	s4,0x207
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:164
out:
	return ret;
}

size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
{
800040c4:	afb70030 	sw	s7,48(sp)
800040c8:	afb6002c 	sw	s6,44(sp)
800040cc:	afb50028 	sw	s5,40(sp)
800040d0:	afb30020 	sw	s3,32(sp)
800040d4:	afb2001c 	sw	s2,28(sp)
800040d8:	afb10018 	sw	s1,24(sp)
800040dc:	afb00014 	sw	s0,20(sp)
800040e0:	afbf0034 	sw	ra,52(sp)
800040e4:	00808021 	move	s0,a0
800040e8:	00a08821 	move	s1,a1
800040ec:	00c09821 	move	s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:165
	size_t ret = 0, step;
800040f0:	00009021 	move	s2,zero
800040f4:	24950014 	addiu	s5,a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
800040f8:	269418d7 	addiu	s4,s4,6359
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:173
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
			wakeup_reader(state);
800040fc:	24970028 	addiu	s7,a0,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:175
			unlock_state(state);
			if (!wait_reader(state)) {
80004100:	24960030 	addiu	s6,a0,48
lock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:46
	return state;
}

static void lock_state(struct pipe_state *state)
{
	down(&(state->sem));
80004104:	0c006727 	jal	80019c9c <down>
80004108:	02a02021 	move	a0,s5
pipe_state_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:168
size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
{
	size_t ret = 0, step;
try_again:
	lock_state(state);
	if (state->isclosed) {
8000410c:	8e02000c 	lw	v0,12(s0)
80004110:	14400026 	bnez	v0,800041ac <pipe_state_write+0xf4>
80004114:	0253102b 	sltu	v0,s2,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:171
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
80004118:	10400024 	beqz	v0,800041ac <pipe_state_write+0xf4>
8000411c:	00000000 	nop
is_full():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:61
	return state->p_rpos == state->p_wpos;
}

static inline bool is_full(struct pipe_state *state)
{
	return state->p_wpos - state->p_rpos >= PIPE_BUFSIZE;
80004120:	8e020004 	lw	v0,4(s0)
80004124:	8e030000 	lw	v1,0(s0)
80004128:	00431823 	subu	v1,v0,v1
pipe_state_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:172
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
8000412c:	2c630fc8 	sltiu	v1,v1,4040
80004130:	1060002c 	beqz	v1,800041e4 <pipe_state_write+0x12c>
80004134:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
80004138:	08001055 	j	80004154 <pipe_state_write+0x9c>
8000413c:	000220c2 	srl	a0,v0,0x3
is_full():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:61
	return state->p_rpos == state->p_wpos;
}

static inline bool is_full(struct pipe_state *state)
{
	return state->p_wpos - state->p_rpos >= PIPE_BUFSIZE;
80004140:	8e040000 	lw	a0,0(s0)
80004144:	00442023 	subu	a0,v0,a0
pipe_state_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:172
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
80004148:	2c840fc8 	sltiu	a0,a0,4040
8000414c:	10800025 	beqz	a0,800041e4 <pipe_state_write+0x12c>
80004150:	000220c2 	srl	a0,v0,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
80004154:	00940019 	multu	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:163
	unlock_state(state);
out:
	return ret;
}

size_t pipe_state_write(struct pipe_state * state, void *buf, size_t n)
80004158:	02322821 	addu	a1,s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
8000415c:	8e060008 	lw	a2,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:181
		    *(uint8_t *) (buf + ret);
80004160:	90a50000 	lbu	a1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:171
try_again:
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
80004164:	26520001 	addiu	s2,s2,1
80004168:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:180
			if (!wait_reader(state)) {
				goto out;
			}
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
8000416c:	00002010 	mfhi	a0
80004170:	00042082 	srl	a0,a0,0x2
80004174:	000438c0 	sll	a3,a0,0x3
80004178:	00044240 	sll	t0,a0,0x9
8000417c:	01073823 	subu	a3,t0,a3
80004180:	00e42021 	addu	a0,a3,a0
80004184:	000420c0 	sll	a0,a0,0x3
80004188:	00441023 	subu	v0,v0,a0
8000418c:	00c21021 	addu	v0,a2,v0
80004190:	a0450000 	sb	a1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:171
try_again:
	lock_state(state);
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
80004194:	8e020004 	lw	v0,4(s0)
80004198:	24420001 	addiu	v0,v0,1
8000419c:	1653ffe8 	bne	s2,s3,80004140 <pipe_state_write+0x88>
800041a0:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:183
			goto try_again;
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
		    *(uint8_t *) (buf + ret);
	}
	if (step != 0) {
800041a4:	14600022 	bnez	v1,80004230 <pipe_state_write+0x178>
800041a8:	00000000 	nop
unlock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
800041ac:	0c006725 	jal	80019c94 <up>
800041b0:	02a02021 	move	a0,s5
pipe_state_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:191

out_unlock:
	unlock_state(state);
out:
	return ret;
}
800041b4:	8fbf0034 	lw	ra,52(sp)
800041b8:	02401021 	move	v0,s2
800041bc:	8fb70030 	lw	s7,48(sp)
800041c0:	8fb6002c 	lw	s6,44(sp)
800041c4:	8fb50028 	lw	s5,40(sp)
800041c8:	8fb40024 	lw	s4,36(sp)
800041cc:	8fb30020 	lw	s3,32(sp)
800041d0:	8fb2001c 	lw	s2,28(sp)
800041d4:	8fb10018 	lw	s1,24(sp)
800041d8:	8fb00014 	lw	s0,20(sp)
800041dc:	03e00008 	jr	ra
800041e0:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:173
	if (state->isclosed) {
		goto out_unlock;
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
			wakeup_reader(state);
800041e4:	0c000efd 	jal	80003bf4 <pipe_state_wakeup>
800041e8:	02e02021 	move	a0,s7
unlock_state():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:51
	down(&(state->sem));
}

static void unlock_state(struct pipe_state *state)
{
	up(&(state->sem));
800041ec:	0c006725 	jal	80019c94 <up>
800041f0:	02a02021 	move	a0,s5
pipe_state_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:175
	}
	for (step = 0; ret < n; ret++, step++, state->p_wpos++) {
		if (is_full(state)) {
			wakeup_reader(state);
			unlock_state(state);
			if (!wait_reader(state)) {
800041f4:	0c000f1d 	jal	80003c74 <pipe_state_wait>
800041f8:	02c02021 	move	a0,s6
800041fc:	1440ffc1 	bnez	v0,80004104 <pipe_state_write+0x4c>
80004200:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:191

out_unlock:
	unlock_state(state);
out:
	return ret;
}
80004204:	02401021 	move	v0,s2
80004208:	8fb70030 	lw	s7,48(sp)
8000420c:	8fb6002c 	lw	s6,44(sp)
80004210:	8fb50028 	lw	s5,40(sp)
80004214:	8fb40024 	lw	s4,36(sp)
80004218:	8fb30020 	lw	s3,32(sp)
8000421c:	8fb2001c 	lw	s2,28(sp)
80004220:	8fb10018 	lw	s1,24(sp)
80004224:	8fb00014 	lw	s0,20(sp)
80004228:	03e00008 	jr	ra
8000422c:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/pipe/pipe_state.c:184
		}
		state->buf[state->p_wpos % PIPE_BUFSIZE] =
		    *(uint8_t *) (buf + ret);
	}
	if (step != 0) {
		wakeup_reader(state);
80004230:	0c000efd 	jal	80003bf4 <pipe_state_wakeup>
80004234:	26040028 	addiu	a0,s0,40
80004238:	0800106b 	j	800041ac <pipe_state_write+0xf4>
8000423c:	00000000 	nop

80004240 <__alloc_inode>:
__alloc_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:16

/* *
 * __alloc_inode - alloc a inode structure and initialize in_type
 * */
struct inode *__alloc_inode(int type)
{
80004240:	27bdffe8 	addiu	sp,sp,-24
80004244:	afb00010 	sw	s0,16(sp)
80004248:	00808021 	move	s0,a0
8000424c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:18
	struct inode *node;
	if ((node = kmalloc(sizeof(struct inode))) != NULL) {
80004250:	0c00548e 	jal	80015238 <kmalloc>
80004254:	2404004c 	li	a0,76
80004258:	54400001 	bnezl	v0,80004260 <__alloc_inode+0x20>
8000425c:	ac500038 	sw	s0,56(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:22
		node->in_type = type;
	}
	return node;
}
80004260:	8fbf0014 	lw	ra,20(sp)
80004264:	8fb00010 	lw	s0,16(sp)
80004268:	03e00008 	jr	ra
8000426c:	27bd0018 	addiu	sp,sp,24

80004270 <inode_kill>:
atomic_read():
80004270:	8c83003c 	lw	v1,60(a0)
inode_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:44
/* *
 * inode_kill - kill a inode structure
 * invoked by vop_kill
 * */
void inode_kill(struct inode *node)
{
80004274:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:45
	assert(inode_ref_count(node) == 0);
80004278:	14600006 	bnez	v1,80004294 <inode_kill+0x24>
8000427c:	afbf0014 	sw	ra,20(sp)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
80004280:	8c820040 	lw	v0,64(a0)
inode_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:46
	assert(inode_open_count(node) == 0);
80004284:	1440000b 	bnez	v0,800042b4 <inode_kill+0x44>
80004288:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:47
	kfree(node);
8000428c:	080054b9 	j	800152e4 <kfree>
80004290:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:45
 * inode_kill - kill a inode structure
 * invoked by vop_kill
 * */
void inode_kill(struct inode *node)
{
	assert(inode_ref_count(node) == 0);
80004294:	3c048002 	lui	a0,0x8002
80004298:	3c068002 	lui	a2,0x8002
8000429c:	3c078002 	lui	a3,0x8002
800042a0:	24842034 	addiu	a0,a0,8244
800042a4:	2405002d 	li	a1,45
800042a8:	24c60e48 	addiu	a2,a2,3656
800042ac:	0c006b13 	jal	8001ac4c <__panic>
800042b0:	24e7159c 	addiu	a3,a3,5532
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:46
	assert(inode_open_count(node) == 0);
800042b4:	3c048002 	lui	a0,0x8002
800042b8:	3c068002 	lui	a2,0x8002
800042bc:	3c078002 	lui	a3,0x8002
800042c0:	24842034 	addiu	a0,a0,8244
800042c4:	2405002e 	li	a1,46
800042c8:	24c60e48 	addiu	a2,a2,3656
800042cc:	0c006b13 	jal	8001ac4c <__panic>
800042d0:	24e715b8 	addiu	a3,a3,5560

800042d4 <inode_ref_inc>:
inode_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:55
/* *
 * inode_ref_inc - increment ref_count
 * invoked by vop_ref_inc
 * */
int inode_ref_inc(struct inode *node)
{
800042d4:	27bdffe0 	addiu	sp,sp,-32
800042d8:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800042dc:	40026000 	mfc0	v0,c0_status
800042e0:	30420001 	andi	v0,v0,0x1
800042e4:	14400009 	bnez	v0,8000430c <inode_ref_inc+0x38>
800042e8:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800042ec:	8c82003c 	lw	v0,60(a0)
inode_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:57
	return atomic_add_return(&(node->ref_count), 1);
}
800042f0:	8fbf001c 	lw	ra,28(sp)
800042f4:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
800042f8:	24420001 	addiu	v0,v0,1
800042fc:	ac82003c 	sw	v0,60(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80004300:	8c82003c 	lw	v0,60(a0)
inode_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:57
80004304:	03e00008 	jr	ra
80004308:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000430c:	0c006d0c 	jal	8001b430 <intr_disable>
80004310:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004314:	8fa40010 	lw	a0,16(sp)
80004318:	8c82003c 	lw	v0,60(a0)
8000431c:	24420001 	addiu	v0,v0,1
80004320:	ac82003c 	sw	v0,60(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80004324:	0c006d08 	jal	8001b420 <intr_enable>
80004328:	00000000 	nop
8000432c:	8fa40010 	lw	a0,16(sp)
inode_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:57
80004330:	8fbf001c 	lw	ra,28(sp)
80004334:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80004338:	8c82003c 	lw	v0,60(a0)
inode_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:57
8000433c:	03e00008 	jr	ra
80004340:	00000000 	nop

80004344 <inode_init>:
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80004344:	ac80003c 	sw	zero,60(a0)
inode_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:32
 * */
void inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs)
{
	atomic_set(&(node->ref_count), 0);
	atomic_set(&(node->open_count), 0);
	node->in_ops = ops, node->in_fs = fs;
80004348:	ac850048 	sw	a1,72(a0)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
8000434c:	ac800040 	sw	zero,64(a0)
inode_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:36
#ifdef UCONFIG_BIONIC_LIBC
	list_init(&(node->mapped_addr_list));
#endif //UCONFIG_BIONIC_LIBC
	vop_ref_inc(node);
80004350:	080010b5 	j	800042d4 <inode_ref_inc>
80004354:	ac860044 	sw	a2,68(a0)

80004358 <inode_open_inc>:
inode_open_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:81
/* *
 * inode_open_inc - increment the open_count
 * invoked by vop_open_inc
 * */
int inode_open_inc(struct inode *node)
{
80004358:	27bdffe0 	addiu	sp,sp,-32
8000435c:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80004360:	40026000 	mfc0	v0,c0_status
80004364:	30420001 	andi	v0,v0,0x1
80004368:	14400009 	bnez	v0,80004390 <inode_open_inc+0x38>
8000436c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004370:	8c820040 	lw	v0,64(a0)
inode_open_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:83
	return atomic_add_return(&(node->open_count), 1);
}
80004374:	8fbf001c 	lw	ra,28(sp)
80004378:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000437c:	24420001 	addiu	v0,v0,1
80004380:	ac820040 	sw	v0,64(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80004384:	8c820040 	lw	v0,64(a0)
inode_open_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:83
80004388:	03e00008 	jr	ra
8000438c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80004390:	0c006d0c 	jal	8001b430 <intr_disable>
80004394:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004398:	8fa40010 	lw	a0,16(sp)
8000439c:	8c820040 	lw	v0,64(a0)
800043a0:	24420001 	addiu	v0,v0,1
800043a4:	ac820040 	sw	v0,64(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800043a8:	0c006d08 	jal	8001b420 <intr_enable>
800043ac:	00000000 	nop
800043b0:	8fa40010 	lw	a0,16(sp)
inode_open_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:83
800043b4:	8fbf001c 	lw	ra,28(sp)
800043b8:	27bd0020 	addiu	sp,sp,32
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800043bc:	8c820040 	lw	v0,64(a0)
inode_open_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:83
800043c0:	03e00008 	jr	ra
800043c4:	00000000 	nop

800043c8 <inode_check>:
inode_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:107
/* *
 * inode_check - check the various things being valid
 * called before all vop_* calls
 * */
void inode_check(struct inode *node, const char *opstr)
{
800043c8:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:108
	assert(node != NULL && node->in_ops != NULL);
800043cc:	10800018 	beqz	a0,80004430 <inode_check+0x68>
800043d0:	afbf0014 	sw	ra,20(sp)
800043d4:	8c820048 	lw	v0,72(a0)
800043d8:	50400016 	beqzl	v0,80004434 <inode_check+0x6c>
800043dc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:109
	assert(node->in_ops->vop_magic == VOP_MAGIC);
800043e0:	8c430000 	lw	v1,0(v0)
800043e4:	3c028c4b 	lui	v0,0x8c4b
800043e8:	3442a476 	ori	v0,v0,0xa476
800043ec:	54620027 	bnel	v1,v0,8000448c <inode_check+0xc4>
800043f0:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
800043f4:	8c83003c 	lw	v1,60(a0)
800043f8:	8c820040 	lw	v0,64(a0)
inode_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:112
	int ref_count = inode_ref_count(node), open_count =
	    inode_open_count(node);
	assert(ref_count >= open_count && open_count >= 0);
800043fc:	0062202a 	slt	a0,v1,v0
80004400:	1480001b 	bnez	a0,80004470 <inode_check+0xa8>
80004404:	3c048002 	lui	a0,0x8002
80004408:	0440001a 	bltz	v0,80004474 <inode_check+0xac>
8000440c:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:113
	assert(ref_count < MAX_INODE_COUNT && open_count < MAX_INODE_COUNT);
80004410:	3c040001 	lui	a0,0x1
80004414:	0064182a 	slt	v1,v1,a0
80004418:	1060000d 	beqz	v1,80004450 <inode_check+0x88>
8000441c:	0044102a 	slt	v0,v0,a0
80004420:	1040000b 	beqz	v0,80004450 <inode_check+0x88>
80004424:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:114
}
80004428:	03e00008 	jr	ra
8000442c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:108
 * inode_check - check the various things being valid
 * called before all vop_* calls
 * */
void inode_check(struct inode *node, const char *opstr)
{
	assert(node != NULL && node->in_ops != NULL);
80004430:	3c048002 	lui	a0,0x8002
80004434:	3c068002 	lui	a2,0x8002
80004438:	3c078002 	lui	a3,0x8002
8000443c:	24842034 	addiu	a0,a0,8244
80004440:	2405006c 	li	a1,108
80004444:	24c60e48 	addiu	a2,a2,3656
80004448:	0c006b13 	jal	8001ac4c <__panic>
8000444c:	24e715d4 	addiu	a3,a3,5588
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:113
	assert(node->in_ops->vop_magic == VOP_MAGIC);
	int ref_count = inode_ref_count(node), open_count =
	    inode_open_count(node);
	assert(ref_count >= open_count && open_count >= 0);
	assert(ref_count < MAX_INODE_COUNT && open_count < MAX_INODE_COUNT);
80004450:	3c048002 	lui	a0,0x8002
80004454:	3c068002 	lui	a2,0x8002
80004458:	3c078002 	lui	a3,0x8002
8000445c:	24842034 	addiu	a0,a0,8244
80004460:	24050071 	li	a1,113
80004464:	24c60e48 	addiu	a2,a2,3656
80004468:	0c006b13 	jal	8001ac4c <__panic>
8000446c:	24e71650 	addiu	a3,a3,5712
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:112
{
	assert(node != NULL && node->in_ops != NULL);
	assert(node->in_ops->vop_magic == VOP_MAGIC);
	int ref_count = inode_ref_count(node), open_count =
	    inode_open_count(node);
	assert(ref_count >= open_count && open_count >= 0);
80004470:	3c068002 	lui	a2,0x8002
80004474:	3c078002 	lui	a3,0x8002
80004478:	24842034 	addiu	a0,a0,8244
8000447c:	24050070 	li	a1,112
80004480:	24c60e48 	addiu	a2,a2,3656
80004484:	0c006b13 	jal	8001ac4c <__panic>
80004488:	24e71624 	addiu	a3,a3,5668
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:109
 * called before all vop_* calls
 * */
void inode_check(struct inode *node, const char *opstr)
{
	assert(node != NULL && node->in_ops != NULL);
	assert(node->in_ops->vop_magic == VOP_MAGIC);
8000448c:	3c068002 	lui	a2,0x8002
80004490:	3c078002 	lui	a3,0x8002
80004494:	24842034 	addiu	a0,a0,8244
80004498:	2405006d 	li	a1,109
8000449c:	24c60e48 	addiu	a2,a2,3656
800044a0:	0c006b13 	jal	8001ac4c <__panic>
800044a4:	24e715fc 	addiu	a3,a3,5628

800044a8 <inode_open_dec>:
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
800044a8:	8c820040 	lw	v0,64(a0)
inode_open_dec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:91
 * inode_open_dec - decrement the open_count
 * invoked by vop_open_dec
 * calls vop_close if the open_count hits zero
 * */
int inode_open_dec(struct inode *node)
{
800044ac:	27bdffe0 	addiu	sp,sp,-32
800044b0:	afb10018 	sw	s1,24(sp)
800044b4:	afbf001c 	sw	ra,28(sp)
800044b8:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:92
	assert(inode_open_count(node) > 0);
800044bc:	18400039 	blez	v0,800045a4 <inode_open_dec+0xfc>
800044c0:	00808821 	move	s1,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800044c4:	40026000 	mfc0	v0,c0_status
800044c8:	30420001 	andi	v0,v0,0x1
800044cc:	14400025 	bnez	v0,80004564 <inode_open_dec+0xbc>
800044d0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800044d4:	8c820040 	lw	v0,64(a0)
800044d8:	2442ffff 	addiu	v0,v0,-1
800044dc:	ac820040 	sw	v0,64(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800044e0:	8e300040 	lw	s0,64(s1)
inode_open_dec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:94
	int open_count, ret;
	if ((open_count = atomic_sub_return(&(node->open_count), 1)) == 0) {
800044e4:	16000010 	bnez	s0,80004528 <inode_open_dec+0x80>
800044e8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:95
		if ((ret = vop_close(node)) != 0) {
800044ec:	8e220048 	lw	v0,72(s1)
800044f0:	10400025 	beqz	v0,80004588 <inode_open_dec+0xe0>
800044f4:	3c048002 	lui	a0,0x8002
800044f8:	8c420008 	lw	v0,8(v0)
800044fc:	10400022 	beqz	v0,80004588 <inode_open_dec+0xe0>
80004500:	3c058002 	lui	a1,0x8002
80004504:	02202021 	move	a0,s1
80004508:	0c0010f2 	jal	800043c8 <inode_check>
8000450c:	24a516f8 	addiu	a1,a1,5880
80004510:	8e220048 	lw	v0,72(s1)
80004514:	8c420008 	lw	v0,8(v0)
80004518:	0040f809 	jalr	v0
8000451c:	02202021 	move	a0,s1
80004520:	14400006 	bnez	v0,8000453c <inode_open_dec+0x94>
80004524:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:100
			kprintf("vfs: warning: vop_close: %e.\n", ret);
		}
	}
	return open_count;
}
80004528:	02001021 	move	v0,s0
8000452c:	8fb10018 	lw	s1,24(sp)
80004530:	8fb00014 	lw	s0,20(sp)
80004534:	03e00008 	jr	ra
80004538:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:96
{
	assert(inode_open_count(node) > 0);
	int open_count, ret;
	if ((open_count = atomic_sub_return(&(node->open_count), 1)) == 0) {
		if ((ret = vop_close(node)) != 0) {
			kprintf("vfs: warning: vop_close: %e.\n", ret);
8000453c:	3c048002 	lui	a0,0x8002
80004540:	24841700 	addiu	a0,a0,5888
80004544:	0c007aa6 	jal	8001ea98 <kprintf>
80004548:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:100
		}
	}
	return open_count;
}
8000454c:	8fbf001c 	lw	ra,28(sp)
80004550:	02001021 	move	v0,s0
80004554:	8fb10018 	lw	s1,24(sp)
80004558:	8fb00014 	lw	s0,20(sp)
8000455c:	03e00008 	jr	ra
80004560:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80004564:	0c006d0c 	jal	8001b430 <intr_disable>
80004568:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000456c:	8e220040 	lw	v0,64(s1)
80004570:	2442ffff 	addiu	v0,v0,-1
80004574:	ae220040 	sw	v0,64(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80004578:	0c006d08 	jal	8001b420 <intr_enable>
8000457c:	00000000 	nop
80004580:	08001138 	j	800044e0 <inode_open_dec+0x38>
80004584:	00000000 	nop
inode_open_dec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:95
int inode_open_dec(struct inode *node)
{
	assert(inode_open_count(node) > 0);
	int open_count, ret;
	if ((open_count = atomic_sub_return(&(node->open_count), 1)) == 0) {
		if ((ret = vop_close(node)) != 0) {
80004588:	3c068002 	lui	a2,0x8002
8000458c:	3c078002 	lui	a3,0x8002
80004590:	24842034 	addiu	a0,a0,8244
80004594:	2405005f 	li	a1,95
80004598:	24c60e48 	addiu	a2,a2,3656
8000459c:	0c006b13 	jal	8001ac4c <__panic>
800045a0:	24e716a8 	addiu	a3,a3,5800
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:92
 * invoked by vop_open_dec
 * calls vop_close if the open_count hits zero
 * */
int inode_open_dec(struct inode *node)
{
	assert(inode_open_count(node) > 0);
800045a4:	3c048002 	lui	a0,0x8002
800045a8:	3c068002 	lui	a2,0x8002
800045ac:	3c078002 	lui	a3,0x8002
800045b0:	24842034 	addiu	a0,a0,8244
800045b4:	2405005c 	li	a1,92
800045b8:	24c60e48 	addiu	a2,a2,3656
800045bc:	0c006b13 	jal	8001ac4c <__panic>
800045c0:	24e7168c 	addiu	a3,a3,5772

800045c4 <inode_ref_dec>:
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
800045c4:	8c82003c 	lw	v0,60(a0)
inode_ref_dec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:65
 * inode_ref_dec - decrement ref_count
 * invoked by vop_ref_dec
 * calls vop_reclaim if the ref_count hits zero
 * */
int inode_ref_dec(struct inode *node)
{
800045c8:	27bdffe0 	addiu	sp,sp,-32
800045cc:	afb10018 	sw	s1,24(sp)
800045d0:	afbf001c 	sw	ra,28(sp)
800045d4:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:66
	assert(inode_ref_count(node) > 0);
800045d8:	18400035 	blez	v0,800046b0 <inode_ref_dec+0xec>
800045dc:	00808821 	move	s1,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800045e0:	40026000 	mfc0	v0,c0_status
800045e4:	30420001 	andi	v0,v0,0x1
800045e8:	14400021 	bnez	v0,80004670 <inode_ref_dec+0xac>
800045ec:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800045f0:	8c82003c 	lw	v0,60(a0)
800045f4:	2442ffff 	addiu	v0,v0,-1
800045f8:	ac82003c 	sw	v0,60(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800045fc:	8e30003c 	lw	s0,60(s1)
inode_ref_dec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:68
	int ref_count, ret;
	if ((ref_count = atomic_sub_return(&(node->ref_count), 1)) == 0) {
80004600:	16000016 	bnez	s0,8000465c <inode_ref_dec+0x98>
80004604:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:69
		if ((ret = vop_reclaim(node)) != 0 && ret != -E_BUSY) {
80004608:	8e220048 	lw	v0,72(s1)
8000460c:	10400021 	beqz	v0,80004694 <inode_ref_dec+0xd0>
80004610:	3c048002 	lui	a0,0x8002
80004614:	8c420038 	lw	v0,56(v0)
80004618:	1040001e 	beqz	v0,80004694 <inode_ref_dec+0xd0>
8000461c:	3c058002 	lui	a1,0x8002
80004620:	02202021 	move	a0,s1
80004624:	0c0010f2 	jal	800043c8 <inode_check>
80004628:	24a5178c 	addiu	a1,a1,6028
8000462c:	8e220048 	lw	v0,72(s1)
80004630:	8c420038 	lw	v0,56(v0)
80004634:	0040f809 	jalr	v0
80004638:	02202021 	move	a0,s1
8000463c:	10400006 	beqz	v0,80004658 <inode_ref_dec+0x94>
80004640:	2403fff0 	li	v1,-16
80004644:	10430004 	beq	v0,v1,80004658 <inode_ref_dec+0x94>
80004648:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:70
			kprintf("vfs: warning: vop_reclaim: %e.\n", ret);
8000464c:	24841794 	addiu	a0,a0,6036
80004650:	0c007aa6 	jal	8001ea98 <kprintf>
80004654:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:74
		}
	}
	return ref_count;
}
80004658:	8fbf001c 	lw	ra,28(sp)
8000465c:	02001021 	move	v0,s0
80004660:	8fb10018 	lw	s1,24(sp)
80004664:	8fb00014 	lw	s0,20(sp)
80004668:	03e00008 	jr	ra
8000466c:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80004670:	0c006d0c 	jal	8001b430 <intr_disable>
80004674:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80004678:	8e22003c 	lw	v0,60(s1)
8000467c:	2442ffff 	addiu	v0,v0,-1
80004680:	ae22003c 	sw	v0,60(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80004684:	0c006d08 	jal	8001b420 <intr_enable>
80004688:	00000000 	nop
8000468c:	0800117f 	j	800045fc <inode_ref_dec+0x38>
80004690:	00000000 	nop
inode_ref_dec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:69
int inode_ref_dec(struct inode *node)
{
	assert(inode_ref_count(node) > 0);
	int ref_count, ret;
	if ((ref_count = atomic_sub_return(&(node->ref_count), 1)) == 0) {
		if ((ret = vop_reclaim(node)) != 0 && ret != -E_BUSY) {
80004694:	3c068002 	lui	a2,0x8002
80004698:	3c078002 	lui	a3,0x8002
8000469c:	24842034 	addiu	a0,a0,8244
800046a0:	24050045 	li	a1,69
800046a4:	24c60e48 	addiu	a2,a2,3656
800046a8:	0c006b13 	jal	8001ac4c <__panic>
800046ac:	24e7173c 	addiu	a3,a3,5948
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:66
 * invoked by vop_ref_dec
 * calls vop_reclaim if the ref_count hits zero
 * */
int inode_ref_dec(struct inode *node)
{
	assert(inode_ref_count(node) > 0);
800046b0:	3c048002 	lui	a0,0x8002
800046b4:	3c068002 	lui	a2,0x8002
800046b8:	3c078002 	lui	a3,0x8002
800046bc:	24842034 	addiu	a0,a0,8244
800046c0:	24050042 	li	a1,66
800046c4:	24c60e48 	addiu	a2,a2,3656
800046c8:	0c006b13 	jal	8001ac4c <__panic>
800046cc:	24e71720 	addiu	a3,a3,5920

800046d0 <null_vop_pass>:
null_vop_pass():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:122
 * null_vop_* - null vop functions
 * */
int null_vop_pass(void)
{
	return 0;
}
800046d0:	03e00008 	jr	ra
800046d4:	00001021 	move	v0,zero

800046d8 <null_vop_inval>:
null_vop_inval():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:127

int null_vop_inval(void)
{
	return -E_INVAL;
}
800046d8:	03e00008 	jr	ra
800046dc:	2402ffea 	li	v0,-22

800046e0 <null_vop_unimp>:
null_vop_unimp():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:132

int null_vop_unimp(void)
{
	return -E_UNIMP;
}
800046e0:	03e00008 	jr	ra
800046e4:	2402ffdd 	li	v0,-35

800046e8 <null_vop_isdir>:
null_vop_isdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:137

int null_vop_isdir(void)
{
	return -E_ISDIR;
}
800046e8:	03e00008 	jr	ra
800046ec:	2402ffeb 	li	v0,-21

800046f0 <null_vop_notdir>:
null_vop_notdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/inode.c:142

int null_vop_notdir(void)
{
	return -E_NOTDIR;
}
800046f0:	03e00008 	jr	ra
800046f4:	2402ffec 	li	v0,-20

800046f8 <__alloc_fs>:
__alloc_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:16
static struct inode *bootfs_node = NULL;

extern void vfs_devlist_init(void);

struct fs *__alloc_fs(int type)
{
800046f8:	27bdffe8 	addiu	sp,sp,-24
800046fc:	afb00010 	sw	s0,16(sp)
80004700:	00808021 	move	s0,a0
80004704:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:18
	struct fs *fs;
	if ((fs = kmalloc(sizeof(struct fs))) != NULL) {
80004708:	0c00548e 	jal	80015238 <kmalloc>
8000470c:	24040098 	li	a0,152
80004710:	54400001 	bnezl	v0,80004718 <__alloc_fs+0x20>
80004714:	ac500084 	sw	s0,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:22
		fs->fs_type = type;
	}
	return fs;
}
80004718:	8fbf0014 	lw	ra,20(sp)
8000471c:	8fb00010 	lw	s0,16(sp)
80004720:	03e00008 	jr	ra
80004724:	27bd0018 	addiu	sp,sp,24

80004728 <vfs_set_bootfs>:
vfs_set_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:66
 * pathnames starting with /.
 *
 * It is also incidentally the system's first current directory.
 */
int vfs_set_bootfs(char *fsname)
{
80004728:	27bdffd8 	addiu	sp,sp,-40
8000472c:	afb00018 	sw	s0,24(sp)
80004730:	afbf0024 	sw	ra,36(sp)
80004734:	afb20020 	sw	s2,32(sp)
80004738:	afb1001c 	sw	s1,28(sp)
8000473c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:68
	struct inode *node = NULL;
	if (fsname != NULL) {
80004740:	1080002c 	beqz	a0,800047f4 <vfs_set_bootfs+0xcc>
80004744:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:70
		char *s;
		if ((s = strchr(fsname, ':')) == NULL || s[1] != '\0') {
80004748:	0c005be7 	jal	80016f9c <strchr>
8000474c:	2405003a 	li	a1,58
80004750:	10400008 	beqz	v0,80004774 <vfs_set_bootfs+0x4c>
80004754:	2411ffea 	li	s1,-22
80004758:	90420001 	lbu	v0,1(v0)
8000475c:	14400006 	bnez	v0,80004778 <vfs_set_bootfs+0x50>
80004760:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:74
			return -E_INVAL;
		}
		int ret;
		if ((ret = vfs_chdir(fsname)) != 0) {
80004764:	0c001822 	jal	80006088 <vfs_chdir>
80004768:	02002021 	move	a0,s0
8000476c:	10400008 	beqz	v0,80004790 <vfs_set_bootfs+0x68>
80004770:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:83
			return ret;
		}
	}
	change_bootfs(node);
	return 0;
}
80004774:	8fbf0024 	lw	ra,36(sp)
80004778:	02201021 	move	v0,s1
8000477c:	8fb20020 	lw	s2,32(sp)
80004780:	8fb1001c 	lw	s1,28(sp)
80004784:	8fb00018 	lw	s0,24(sp)
80004788:	03e00008 	jr	ra
8000478c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:77
		}
		int ret;
		if ((ret = vfs_chdir(fsname)) != 0) {
			return ret;
		}
		if ((ret = vfs_get_curdir(&node)) != 0) {
80004790:	0c0017ac 	jal	80005eb0 <vfs_get_curdir>
80004794:	27a40010 	addiu	a0,sp,16
80004798:	1440fff6 	bnez	v0,80004774 <vfs_set_bootfs+0x4c>
8000479c:	00408821 	move	s1,v0
800047a0:	8fb10010 	lw	s1,16(sp)
lock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:33
	file_system_type_list_init();
}

static void lock_bootfs(void)
{
	down(&bootfs_sem);
800047a4:	3c108015 	lui	s0,0x8015
800047a8:	0c006727 	jal	80019c9c <down>
800047ac:	260444e8 	addiu	a0,s0,17640
change_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:49
static void change_bootfs(struct inode *node)
{
	struct inode *old;
	lock_bootfs();
	{
		old = bootfs_node, bootfs_node = node;
800047b0:	3c028015 	lui	v0,0x8015
800047b4:	8c5244fc 	lw	s2,17660(v0)
unlock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
800047b8:	260444e8 	addiu	a0,s0,17640
change_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:49
static void change_bootfs(struct inode *node)
{
	struct inode *old;
	lock_bootfs();
	{
		old = bootfs_node, bootfs_node = node;
800047bc:	ac5144fc 	sw	s1,17660(v0)
unlock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
800047c0:	0c006725 	jal	80019c94 <up>
800047c4:	00008821 	move	s1,zero
change_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:52
	lock_bootfs();
	{
		old = bootfs_node, bootfs_node = node;
	}
	unlock_bootfs();
	if (old != NULL) {
800047c8:	1240ffeb 	beqz	s2,80004778 <vfs_set_bootfs+0x50>
800047cc:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:53
		vop_ref_dec(old);
800047d0:	0c001171 	jal	800045c4 <inode_ref_dec>
800047d4:	02402021 	move	a0,s2
vfs_set_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:83
			return ret;
		}
	}
	change_bootfs(node);
	return 0;
}
800047d8:	8fbf0024 	lw	ra,36(sp)
800047dc:	02201021 	move	v0,s1
800047e0:	8fb20020 	lw	s2,32(sp)
800047e4:	8fb1001c 	lw	s1,28(sp)
800047e8:	8fb00018 	lw	s0,24(sp)
800047ec:	03e00008 	jr	ra
800047f0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:68
 * It is also incidentally the system's first current directory.
 */
int vfs_set_bootfs(char *fsname)
{
	struct inode *node = NULL;
	if (fsname != NULL) {
800047f4:	080011e9 	j	800047a4 <vfs_set_bootfs+0x7c>
800047f8:	00008821 	move	s1,zero

800047fc <vfs_get_bootfs>:
vfs_get_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:89

/*
 * Get bootfs_inode.
 */
int vfs_get_bootfs(struct inode **node_store)
{
800047fc:	27bdffd8 	addiu	sp,sp,-40
80004800:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:91
	struct inode *node = NULL;
	if (bootfs_node != NULL) {
80004804:	3c108015 	lui	s0,0x8015
80004808:	8e0344fc 	lw	v1,17660(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:89

/*
 * Get bootfs_inode.
 */
int vfs_get_bootfs(struct inode **node_store)
{
8000480c:	afb20020 	sw	s2,32(sp)
80004810:	afbf0024 	sw	ra,36(sp)
80004814:	afb1001c 	sw	s1,28(sp)
80004818:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:91
	struct inode *node = NULL;
	if (bootfs_node != NULL) {
8000481c:	1060000e 	beqz	v1,80004858 <vfs_get_bootfs+0x5c>
80004820:	2402fffe 	li	v0,-2
lock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:33
	file_system_type_list_init();
}

static void lock_bootfs(void)
{
	down(&bootfs_sem);
80004824:	3c118015 	lui	s1,0x8015
80004828:	262444e8 	addiu	a0,s1,17640
8000482c:	0c006727 	jal	80019c9c <down>
80004830:	afa20010 	sw	v0,16(sp)
vfs_get_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:94
{
	struct inode *node = NULL;
	if (bootfs_node != NULL) {
		lock_bootfs();
		{
			if ((node = bootfs_node) != NULL) {
80004834:	8e1044fc 	lw	s0,17660(s0)
80004838:	1200000d 	beqz	s0,80004870 <vfs_get_bootfs+0x74>
8000483c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:95
				vop_ref_inc(bootfs_node);
80004840:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80004844:	02002021 	move	a0,s0
unlock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
80004848:	0c006725 	jal	80019c94 <up>
8000484c:	262444e8 	addiu	a0,s1,17640
vfs_get_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:104
	}
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
	return 0;
80004850:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:103
		unlock_bootfs();
	}
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
80004854:	ae500000 	sw	s0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:105
	return 0;
}
80004858:	8fbf0024 	lw	ra,36(sp)
8000485c:	8fb20020 	lw	s2,32(sp)
80004860:	8fb1001c 	lw	s1,28(sp)
80004864:	8fb00018 	lw	s0,24(sp)
80004868:	03e00008 	jr	ra
8000486c:	27bd0028 	addiu	sp,sp,40
unlock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
80004870:	262444e8 	addiu	a0,s1,17640
80004874:	0c006725 	jal	80019c94 <up>
80004878:	afa20010 	sw	v0,16(sp)
vfs_get_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:105
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
	return 0;
}
8000487c:	8fbf0024 	lw	ra,36(sp)
unlock_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:38
	down(&bootfs_sem);
}

static void unlock_bootfs(void)
{
	up(&bootfs_sem);
80004880:	8fa20010 	lw	v0,16(sp)
vfs_get_bootfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:105
	if (node == NULL) {
		return -E_NOENT;
	}
	*node_store = node;
	return 0;
}
80004884:	8fb20020 	lw	s2,32(sp)
80004888:	8fb1001c 	lw	s1,28(sp)
8000488c:	8fb00018 	lw	s0,24(sp)
80004890:	03e00008 	jr	ra
80004894:	27bd0028 	addiu	sp,sp,40

80004898 <file_system_type_list_init>:
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80004898:	3c038015 	lui	v1,0x8015
file_system_type_list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:139
}

void file_system_type_list_init(void)
{
	list_init(&file_system_type_list);
	sem_init(&file_system_type_sem, 1);
8000489c:	3c048015 	lui	a0,0x8015
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
800048a0:	24624500 	addiu	v0,v1,17664
file_system_type_list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:139
800048a4:	24844508 	addiu	a0,a0,17672
800048a8:	24050001 	li	a1,1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
800048ac:	ac420004 	sw	v0,4(v0)
file_system_type_list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:139
800048b0:	0800671f 	j	80019c7c <sem_init>
800048b4:	ac624500 	sw	v0,17664(v1)

800048b8 <vfs_init>:
vfs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:26
	return fs;
}

void vfs_init(void)
{
	sem_init(&bootfs_sem, 1);
800048b8:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:25
	}
	return fs;
}

void vfs_init(void)
{
800048bc:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:26
	sem_init(&bootfs_sem, 1);
800048c0:	248444e8 	addiu	a0,a0,17640
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:25
	}
	return fs;
}

void vfs_init(void)
{
800048c4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:26
	sem_init(&bootfs_sem, 1);
800048c8:	0c00671f 	jal	80019c7c <sem_init>
800048cc:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:27
	vfs_devlist_init();
800048d0:	0c0013a1 	jal	80004e84 <vfs_devlist_init>
800048d4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:29
	file_system_type_list_init();
}
800048d8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:28

void vfs_init(void)
{
	sem_init(&bootfs_sem, 1);
	vfs_devlist_init();
	file_system_type_list_init();
800048dc:	08001226 	j	80004898 <file_system_type_list_init>
800048e0:	27bd0018 	addiu	sp,sp,24

800048e4 <register_filesystem>:
register_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:143
	list_init(&file_system_type_list);
	sem_init(&file_system_type_sem, 1);
}

int register_filesystem(const char *name, int (*mount) (const char *devname))
{
800048e4:	27bdffd0 	addiu	sp,sp,-48
800048e8:	afb50028 	sw	s5,40(sp)
800048ec:	afb00014 	sw	s0,20(sp)
800048f0:	afbf002c 	sw	ra,44(sp)
800048f4:	afb40024 	sw	s4,36(sp)
800048f8:	afb30020 	sw	s3,32(sp)
800048fc:	afb2001c 	sw	s2,28(sp)
80004900:	afb10018 	sw	s1,24(sp)
80004904:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:144
	assert(name != NULL);
80004908:	10800042 	beqz	a0,80004a14 <register_filesystem+0x130>
8000490c:	00a0a821 	move	s5,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:145
	if (strlen(name) > FS_MAX_DNAME_LEN) {
80004910:	0c005b81 	jal	80016e04 <strlen>
80004914:	2412ffe5 	li	s2,-27
80004918:	2c420020 	sltiu	v0,v0,32
8000491c:	10400020 	beqz	v0,800049a0 <register_filesystem+0xbc>
80004920:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:151
		return -E_TOO_BIG;
	}

	int ret = -E_NO_MEM;
	char *s_name;
	if ((s_name = strdup(name)) == NULL) {
80004924:	0c00591f 	jal	8001647c <strdup>
80004928:	02002021 	move	a0,s0
8000492c:	00408821 	move	s1,v0
80004930:	1040001a 	beqz	v0,8000499c <register_filesystem+0xb8>
80004934:	2412fff4 	li	s2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:156
		return ret;
	}

	struct file_system_type *fstype;
	if ((fstype = kmalloc(sizeof(struct file_system_type))) == NULL) {
80004938:	0c00548e 	jal	80015238 <kmalloc>
8000493c:	24040010 	li	a0,16
80004940:	10400014 	beqz	v0,80004994 <register_filesystem+0xb0>
80004944:	00409821 	move	s3,v0
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004948:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:125
	up(&file_system_type_sem);
}

static bool check_file_system_type_name_conflict(const char *name)
{
	list_entry_t *list = &file_system_type_list, *le = list;
8000494c:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004950:	26844508 	addiu	a0,s4,17672
80004954:	0c006727 	jal	80019c9c <down>
80004958:	26524500 	addiu	s2,s2,17664
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:125
	up(&file_system_type_sem);
}

static bool check_file_system_type_name_conflict(const char *name)
{
	list_entry_t *list = &file_system_type_list, *le = list;
8000495c:	02408021 	move	s0,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004960:	8e100004 	lw	s0,4(s0)
check_file_system_type_name_conflict():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:126
	while ((le = list_next(le)) != list) {
80004964:	52120017 	beql	s0,s2,800049c4 <register_filesystem+0xe0>
80004968:	8e030004 	lw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:129
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, name) == 0) {
8000496c:	8e04fff8 	lw	a0,-8(s0)
80004970:	0c005bc0 	jal	80016f00 <strcmp>
80004974:	02202821 	move	a1,s1
80004978:	5440fffa 	bnezl	v0,80004964 <register_filesystem+0x80>
8000497c:	8e100004 	lw	s0,4(s0)
unlock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004980:	0c006725 	jal	80019c94 <up>
80004984:	26844508 	addiu	a0,s4,17672
register_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:174
	list_add(&file_system_type_list, &(fstype->file_system_type_link));
	unlock_file_system_type_list();
	return 0;

failed_cleanup_fstype:
	kfree(fstype);
80004988:	0c0054b9 	jal	800152e4 <kfree>
8000498c:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:160
	struct file_system_type *fstype;
	if ((fstype = kmalloc(sizeof(struct file_system_type))) == NULL) {
		goto failed_cleanup_name;
	}

	ret = -E_EXISTS;
80004990:	2412ffef 	li	s2,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:176
	return 0;

failed_cleanup_fstype:
	kfree(fstype);
failed_cleanup_name:
	kfree(s_name);
80004994:	0c0054b9 	jal	800152e4 <kfree>
80004998:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:178
	return ret;
}
8000499c:	8fbf002c 	lw	ra,44(sp)
800049a0:	02401021 	move	v0,s2
800049a4:	8fb50028 	lw	s5,40(sp)
800049a8:	8fb40024 	lw	s4,36(sp)
800049ac:	8fb30020 	lw	s3,32(sp)
800049b0:	8fb2001c 	lw	s2,28(sp)
800049b4:	8fb10018 	lw	s1,24(sp)
800049b8:	8fb00014 	lw	s0,20(sp)
800049bc:	03e00008 	jr	ra
800049c0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:169
		goto failed_cleanup_fstype;
	}
	fstype->name = s_name;
	fstype->mount = mount;

	list_add(&file_system_type_list, &(fstype->file_system_type_link));
800049c4:	26620008 	addiu	v0,s3,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:166
	lock_file_system_type_list();
	if (!check_file_system_type_name_conflict(s_name)) {
		unlock_file_system_type_list();
		goto failed_cleanup_fstype;
	}
	fstype->name = s_name;
800049c8:	ae710000 	sw	s1,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:167
	fstype->mount = mount;
800049cc:	ae750004 	sw	s5,4(s3)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800049d0:	ae63000c 	sw	v1,12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800049d4:	ac620000 	sw	v0,0(v1)
800049d8:	ae020004 	sw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
800049dc:	ae700008 	sw	s0,8(s3)
unlock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
800049e0:	0c006725 	jal	80019c94 <up>
800049e4:	26844508 	addiu	a0,s4,17672
register_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:178
failed_cleanup_fstype:
	kfree(fstype);
failed_cleanup_name:
	kfree(s_name);
	return ret;
}
800049e8:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:171
	fstype->name = s_name;
	fstype->mount = mount;

	list_add(&file_system_type_list, &(fstype->file_system_type_link));
	unlock_file_system_type_list();
	return 0;
800049ec:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:178
failed_cleanup_fstype:
	kfree(fstype);
failed_cleanup_name:
	kfree(s_name);
	return ret;
}
800049f0:	02401021 	move	v0,s2
800049f4:	8fb50028 	lw	s5,40(sp)
800049f8:	8fb40024 	lw	s4,36(sp)
800049fc:	8fb30020 	lw	s3,32(sp)
80004a00:	8fb2001c 	lw	s2,28(sp)
80004a04:	8fb10018 	lw	s1,24(sp)
80004a08:	8fb00014 	lw	s0,20(sp)
80004a0c:	03e00008 	jr	ra
80004a10:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:144
	sem_init(&file_system_type_sem, 1);
}

int register_filesystem(const char *name, int (*mount) (const char *devname))
{
	assert(name != NULL);
80004a14:	3c048002 	lui	a0,0x8002
80004a18:	3c068002 	lui	a2,0x8002
80004a1c:	3c078002 	lui	a3,0x8002
80004a20:	248417b4 	addiu	a0,a0,6068
80004a24:	24050090 	li	a1,144
80004a28:	24c60e48 	addiu	a2,a2,3656
80004a2c:	0c006b13 	jal	8001ac4c <__panic>
80004a30:	24e717bc 	addiu	a3,a3,6076

80004a34 <unregister_filesystem>:
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a34:	27bdffd0 	addiu	sp,sp,-48
80004a38:	afb40028 	sw	s4,40(sp)
80004a3c:	afb1001c 	sw	s1,28(sp)
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004a40:	3c148015 	lui	s4,0x8015
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:184

int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004a44:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a48:	afb20020 	sw	s2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:184
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004a4c:	26314500 	addiu	s1,s1,17664
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a50:	00809021 	move	s2,a0
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004a54:	26844508 	addiu	a0,s4,17672
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:181
	kfree(s_name);
	return ret;
}

int unregister_filesystem(const char *name)
{
80004a58:	afb00018 	sw	s0,24(sp)
80004a5c:	afbf002c 	sw	ra,44(sp)
80004a60:	afb30024 	sw	s3,36(sp)
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004a64:	0c006727 	jal	80019c9c <down>
80004a68:	02208021 	move	s0,s1
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:185
int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004a6c:	080012a2 	j	80004a88 <unregister_filesystem+0x54>
80004a70:	8e100004 	lw	s0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:188
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, name) == 0) {
80004a74:	0c005bc0 	jal	80016f00 <strcmp>
80004a78:	8e04fff8 	lw	a0,-8(s0)
80004a7c:	50400012 	beqzl	v0,80004ac8 <unregister_filesystem+0x94>
80004a80:	8e050000 	lw	a1,0(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004a84:	8e100004 	lw	s0,4(s0)
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:188
80004a88:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:185
int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004a8c:	1611fff9 	bne	s0,s1,80004a74 <unregister_filesystem+0x40>
80004a90:	2613fff8 	addiu	s3,s0,-8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:182
	return ret;
}

int unregister_filesystem(const char *name)
{
	int ret = -E_EXISTS;
80004a94:	2402ffef 	li	v0,-17
unlock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004a98:	26844508 	addiu	a0,s4,17672
80004a9c:	0c006725 	jal	80019c94 <up>
80004aa0:	afa20010 	sw	v0,16(sp)
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:199
		}
	}

	unlock_file_system_type_list();
	return ret;
}
80004aa4:	8fbf002c 	lw	ra,44(sp)
80004aa8:	8fa20010 	lw	v0,16(sp)
80004aac:	8fb40028 	lw	s4,40(sp)
80004ab0:	8fb30024 	lw	s3,36(sp)
80004ab4:	8fb20020 	lw	s2,32(sp)
80004ab8:	8fb1001c 	lw	s1,28(sp)
80004abc:	8fb00018 	lw	s0,24(sp)
80004ac0:	03e00008 	jr	ra
80004ac4:	27bd0030 	addiu	sp,sp,48
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80004ac8:	8e030004 	lw	v1,4(s0)
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:190
	while ((le = list_next(le)) != list) {
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, name) == 0) {
			list_del(le);
			kfree((char *)fstype->name);
80004acc:	8e04fff8 	lw	a0,-8(s0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80004ad0:	aca30004 	sw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80004ad4:	ac650000 	sw	a1,0(v1)
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:190
80004ad8:	0c0054b9 	jal	800152e4 <kfree>
80004adc:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:191
			kfree(fstype);
80004ae0:	0c0054b9 	jal	800152e4 <kfree>
80004ae4:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:193
			ret = 0;
			break;
80004ae8:	8fa20010 	lw	v0,16(sp)
unlock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004aec:	26844508 	addiu	a0,s4,17672
80004af0:	0c006725 	jal	80019c94 <up>
80004af4:	afa20010 	sw	v0,16(sp)
unregister_filesystem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:199
		}
	}

	unlock_file_system_type_list();
	return ret;
}
80004af8:	8fbf002c 	lw	ra,44(sp)
80004afc:	8fa20010 	lw	v0,16(sp)
80004b00:	8fb40028 	lw	s4,40(sp)
80004b04:	8fb30024 	lw	s3,36(sp)
80004b08:	8fb20020 	lw	s2,32(sp)
80004b0c:	8fb1001c 	lw	s1,28(sp)
80004b10:	8fb00018 	lw	s0,24(sp)
80004b14:	03e00008 	jr	ra
80004b18:	27bd0030 	addiu	sp,sp,48

80004b1c <do_mount>:
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:202

int do_mount(const char *devname, const char *fsname)
{
80004b1c:	27bdffd0 	addiu	sp,sp,-48
80004b20:	afb30024 	sw	s3,36(sp)
80004b24:	afb1001c 	sw	s1,28(sp)
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004b28:	3c138015 	lui	s3,0x8015
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:205

int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004b2c:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:202
	unlock_file_system_type_list();
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
80004b30:	afb40028 	sw	s4,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:205
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
80004b34:	26314500 	addiu	s1,s1,17664
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:202
	unlock_file_system_type_list();
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
80004b38:	0080a021 	move	s4,a0
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004b3c:	26644508 	addiu	a0,s3,17672
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:202
	unlock_file_system_type_list();
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
80004b40:	afb20020 	sw	s2,32(sp)
80004b44:	afb00018 	sw	s0,24(sp)
80004b48:	afbf002c 	sw	ra,44(sp)
80004b4c:	00a09021 	move	s2,a1
lock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:115
static list_entry_t file_system_type_list;
static semaphore_t file_system_type_sem;

static void lock_file_system_type_list(void)
{
	down(&file_system_type_sem);
80004b50:	0c006727 	jal	80019c9c <down>
80004b54:	02208021 	move	s0,s1
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:206
int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004b58:	080012dd 	j	80004b74 <do_mount+0x58>
80004b5c:	8e100004 	lw	s0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:209
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, fsname) == 0) {
80004b60:	0c005bc0 	jal	80016f00 <strcmp>
80004b64:	02402821 	move	a1,s2
80004b68:	50400011 	beqzl	v0,80004bb0 <do_mount+0x94>
80004b6c:	8e02fffc 	lw	v0,-4(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004b70:	8e100004 	lw	s0,4(s0)
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:206
int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
	lock_file_system_type_list();
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
80004b74:	5611fffa 	bnel	s0,s1,80004b60 <do_mount+0x44>
80004b78:	8e04fff8 	lw	a0,-8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:203
	return ret;
}

int do_mount(const char *devname, const char *fsname)
{
	int ret = -E_EXISTS;
80004b7c:	2402ffef 	li	v0,-17
unlock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004b80:	26644508 	addiu	a0,s3,17672
80004b84:	0c006725 	jal	80019c94 <up>
80004b88:	afa20010 	sw	v0,16(sp)
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:217
			break;
		}
	}
	unlock_file_system_type_list();
	return ret;
}
80004b8c:	8fbf002c 	lw	ra,44(sp)
80004b90:	8fa20010 	lw	v0,16(sp)
80004b94:	8fb40028 	lw	s4,40(sp)
80004b98:	8fb30024 	lw	s3,36(sp)
80004b9c:	8fb20020 	lw	s2,32(sp)
80004ba0:	8fb1001c 	lw	s1,28(sp)
80004ba4:	8fb00018 	lw	s0,24(sp)
80004ba8:	03e00008 	jr	ra
80004bac:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:210
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, fsname) == 0) {
			assert(fstype->mount);
80004bb0:	1040000f 	beqz	v0,80004bf0 <do_mount+0xd4>
80004bb4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:211
			ret = (fstype->mount) (devname);
80004bb8:	0040f809 	jalr	v0
80004bbc:	02802021 	move	a0,s4
unlock_file_system_type_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:120
	down(&file_system_type_sem);
}

static void unlock_file_system_type_list(void)
{
	up(&file_system_type_sem);
80004bc0:	26644508 	addiu	a0,s3,17672
80004bc4:	0c006725 	jal	80019c94 <up>
80004bc8:	afa20010 	sw	v0,16(sp)
do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:217
			break;
		}
	}
	unlock_file_system_type_list();
	return ret;
}
80004bcc:	8fbf002c 	lw	ra,44(sp)
80004bd0:	8fa20010 	lw	v0,16(sp)
80004bd4:	8fb40028 	lw	s4,40(sp)
80004bd8:	8fb30024 	lw	s3,36(sp)
80004bdc:	8fb20020 	lw	s2,32(sp)
80004be0:	8fb1001c 	lw	s1,28(sp)
80004be4:	8fb00018 	lw	s0,24(sp)
80004be8:	03e00008 	jr	ra
80004bec:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:210
	list_entry_t *list = &file_system_type_list, *le = list;
	while ((le = list_next(le)) != list) {
		struct file_system_type *fstype =
		    le2fstype(le, file_system_type_link);
		if (strcmp(fstype->name, fsname) == 0) {
			assert(fstype->mount);
80004bf0:	3c068002 	lui	a2,0x8002
80004bf4:	3c078002 	lui	a3,0x8002
80004bf8:	248417b4 	addiu	a0,a0,6068
80004bfc:	240500d2 	li	a1,210
80004c00:	24c60e48 	addiu	a2,a2,3656
80004c04:	0c006b13 	jal	8001ac4c <__panic>
80004c08:	24e717cc 	addiu	a3,a3,6092

80004c0c <do_umount>:
do_umount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfs.c:221
	return ret;
}

int do_umount(const char *devname)
{
	return vfs_unmount(devname);
80004c0c:	08001494 	j	80005250 <vfs_unmount>
80004c10:	00000000 	nop

80004c14 <lock_vdev_list>:
lock_vdev_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:54
static list_entry_t vdev_list;
static semaphore_t vdev_list_sem;

static void lock_vdev_list(void)
{
	down(&vdev_list_sem);
80004c14:	3c048015 	lui	a0,0x8015
80004c18:	08006727 	j	80019c9c <down>
80004c1c:	24844524 	addiu	a0,a0,17700

80004c20 <unlock_vdev_list>:
unlock_vdev_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:59
}

static void unlock_vdev_list(void)
{
	up(&vdev_list_sem);
80004c20:	3c048015 	lui	a0,0x8015
80004c24:	08006725 	j	80019c94 <up>
80004c28:	24844524 	addiu	a0,a0,17700

80004c2c <vfs_do_add>:
vfs_do_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:211
 * to have a filesystem mounted on it.
 */
static int
vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs,
	   bool mountable)
{
80004c2c:	27bdffd0 	addiu	sp,sp,-48
80004c30:	afb60028 	sw	s6,40(sp)
80004c34:	afb20018 	sw	s2,24(sp)
80004c38:	afb10014 	sw	s1,20(sp)
80004c3c:	afb00010 	sw	s0,16(sp)
80004c40:	afbf002c 	sw	ra,44(sp)
80004c44:	afb50024 	sw	s5,36(sp)
80004c48:	afb40020 	sw	s4,32(sp)
80004c4c:	afb3001c 	sw	s3,28(sp)
80004c50:	00808021 	move	s0,a0
80004c54:	00a08821 	move	s1,a1
80004c58:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:212
	assert(devname != NULL);
80004c5c:	10800050 	beqz	a0,80004da0 <vfs_do_add+0x174>
80004c60:	00e0b021 	move	s6,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:213
	assert((devnode == NULL && !mountable)
80004c64:	10a00045 	beqz	a1,80004d7c <vfs_do_add+0x150>
80004c68:	24021234 	li	v0,4660
80004c6c:	8ca30038 	lw	v1,56(a1)
80004c70:	14620044 	bne	v1,v0,80004d84 <vfs_do_add+0x158>
80004c74:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:215
	       || (devnode != NULL && check_inode_type(devnode, device)));
	if (strlen(devname) > FS_MAX_DNAME_LEN) {
80004c78:	0c005b81 	jal	80016e04 <strlen>
80004c7c:	02002021 	move	a0,s0
80004c80:	2c420020 	sltiu	v0,v0,32
80004c84:	1040001c 	beqz	v0,80004cf8 <vfs_do_add+0xcc>
80004c88:	2414ffe5 	li	s4,-27
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:221
		return -E_TOO_BIG;
	}

	int ret = -E_NO_MEM;
	char *s_devname;
	if ((s_devname = strdup(devname)) == NULL) {
80004c8c:	0c00591f 	jal	8001647c <strdup>
80004c90:	02002021 	move	a0,s0
80004c94:	00409821 	move	s3,v0
80004c98:	10400017 	beqz	v0,80004cf8 <vfs_do_add+0xcc>
80004c9c:	2414fff4 	li	s4,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:226
		return ret;
	}

	vfs_dev_t *vdev;
	if ((vdev = kmalloc(sizeof(vfs_dev_t))) == NULL) {
80004ca0:	0c00548e 	jal	80015238 <kmalloc>
80004ca4:	24040018 	li	a0,24
80004ca8:	10400011 	beqz	v0,80004cf0 <vfs_do_add+0xc4>
80004cac:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:192
	return NULL;
}

static bool check_devname_conflict(const char *devname)
{
	list_entry_t *list = &vdev_list, *le = list;
80004cb0:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:231
	if ((vdev = kmalloc(sizeof(vfs_dev_t))) == NULL) {
		goto failed_cleanup_name;
	}

	ret = -E_EXISTS;
	lock_vdev_list();
80004cb4:	0c001305 	jal	80004c14 <lock_vdev_list>
80004cb8:	2694451c 	addiu	s4,s4,17692
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:192
	return NULL;
}

static bool check_devname_conflict(const char *devname)
{
	list_entry_t *list = &vdev_list, *le = list;
80004cbc:	02808021 	move	s0,s4
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80004cc0:	8e100004 	lw	s0,4(s0)
check_devname_conflict():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:193
	while ((le = list_next(le)) != list) {
80004cc4:	52140017 	beql	s0,s4,80004d24 <vfs_do_add+0xf8>
80004cc8:	8e020004 	lw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:195
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (strcmp(vdev->devname, devname) == 0) {
80004ccc:	8e04fff0 	lw	a0,-16(s0)
80004cd0:	0c005bc0 	jal	80016f00 <strcmp>
80004cd4:	02602821 	move	a1,s3
80004cd8:	5440fffa 	bnezl	v0,80004cc4 <vfs_do_add+0x98>
80004cdc:	8e100004 	lw	s0,4(s0)
vfs_do_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:233
	}

	ret = -E_EXISTS;
	lock_vdev_list();
	if (!check_devname_conflict(s_devname)) {
		unlock_vdev_list();
80004ce0:	0c001308 	jal	80004c20 <unlock_vdev_list>
80004ce4:	2414ffef 	li	s4,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:246
	list_add(&vdev_list, &(vdev->vdev_link));
	unlock_vdev_list();
	return 0;

failed_cleanup_vdev:
	kfree(vdev);
80004ce8:	0c0054b9 	jal	800152e4 <kfree>
80004cec:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:248
failed_cleanup_name:
	kfree(s_devname);
80004cf0:	0c0054b9 	jal	800152e4 <kfree>
80004cf4:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:250
	return ret;
}
80004cf8:	8fbf002c 	lw	ra,44(sp)
80004cfc:	02801021 	move	v0,s4
80004d00:	8fb60028 	lw	s6,40(sp)
80004d04:	8fb50024 	lw	s5,36(sp)
80004d08:	8fb40020 	lw	s4,32(sp)
80004d0c:	8fb3001c 	lw	s3,28(sp)
80004d10:	8fb20018 	lw	s2,24(sp)
80004d14:	8fb10014 	lw	s1,20(sp)
80004d18:	8fb00010 	lw	s0,16(sp)
80004d1c:	03e00008 	jr	ra
80004d20:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:241
	vdev->devname = s_devname;
	vdev->devnode = devnode;
	vdev->mountable = mountable;
	vdev->fs = fs;

	list_add(&vdev_list, &(vdev->vdev_link));
80004d24:	26a30010 	addiu	v1,s5,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:236
	lock_vdev_list();
	if (!check_devname_conflict(s_devname)) {
		unlock_vdev_list();
		goto failed_cleanup_vdev;
	}
	vdev->devname = s_devname;
80004d28:	aeb30000 	sw	s3,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:237
	vdev->devnode = devnode;
80004d2c:	aeb10004 	sw	s1,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:238
	vdev->mountable = mountable;
80004d30:	aeb6000c 	sw	s6,12(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:239
	vdev->fs = fs;
80004d34:	aeb20008 	sw	s2,8(s5)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80004d38:	aea20014 	sw	v0,20(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80004d3c:	ac430000 	sw	v1,0(v0)
80004d40:	ae030004 	sw	v1,4(s0)
vfs_do_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:242

	list_add(&vdev_list, &(vdev->vdev_link));
	unlock_vdev_list();
80004d44:	0c001308 	jal	80004c20 <unlock_vdev_list>
80004d48:	aeb00010 	sw	s0,16(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:250
failed_cleanup_vdev:
	kfree(vdev);
failed_cleanup_name:
	kfree(s_devname);
	return ret;
}
80004d4c:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:243
	vdev->mountable = mountable;
	vdev->fs = fs;

	list_add(&vdev_list, &(vdev->vdev_link));
	unlock_vdev_list();
	return 0;
80004d50:	0000a021 	move	s4,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:250
failed_cleanup_vdev:
	kfree(vdev);
failed_cleanup_name:
	kfree(s_devname);
	return ret;
}
80004d54:	02801021 	move	v0,s4
80004d58:	8fb60028 	lw	s6,40(sp)
80004d5c:	8fb50024 	lw	s5,36(sp)
80004d60:	8fb40020 	lw	s4,32(sp)
80004d64:	8fb3001c 	lw	s3,28(sp)
80004d68:	8fb20018 	lw	s2,24(sp)
80004d6c:	8fb10014 	lw	s1,20(sp)
80004d70:	8fb00010 	lw	s0,16(sp)
80004d74:	03e00008 	jr	ra
80004d78:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:213
static int
vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs,
	   bool mountable)
{
	assert(devname != NULL);
	assert((devnode == NULL && !mountable)
80004d7c:	10e0ffbe 	beqz	a3,80004c78 <vfs_do_add+0x4c>
80004d80:	3c048002 	lui	a0,0x8002
80004d84:	3c068002 	lui	a2,0x8002
80004d88:	3c078002 	lui	a3,0x8002
80004d8c:	248417dc 	addiu	a0,a0,6108
80004d90:	240500d6 	li	a1,214
80004d94:	24c60e48 	addiu	a2,a2,3656
80004d98:	0c006b13 	jal	8001ac4c <__panic>
80004d9c:	24e717f8 	addiu	a3,a3,6136
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:212
 */
static int
vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs,
	   bool mountable)
{
	assert(devname != NULL);
80004da0:	3c048002 	lui	a0,0x8002
80004da4:	3c068002 	lui	a2,0x8002
80004da8:	3c078002 	lui	a3,0x8002
80004dac:	248417dc 	addiu	a0,a0,6108
80004db0:	240500d4 	li	a1,212
80004db4:	24c60e48 	addiu	a2,a2,3656
80004db8:	0c006b13 	jal	8001ac4c <__panic>
80004dbc:	24e717e8 	addiu	a3,a3,6120

80004dc0 <find_mount>:
find_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:276
/*
 * Look for a mountable device named DEVNAME.
 * Should already hold an lock::vdev_list_sem.
 */
static int find_mount(const char *devname, vfs_dev_t ** vdev_store)
{
80004dc0:	27bdffd8 	addiu	sp,sp,-40
80004dc4:	afb40020 	sw	s4,32(sp)
80004dc8:	afb3001c 	sw	s3,28(sp)
80004dcc:	afbf0024 	sw	ra,36(sp)
80004dd0:	afb20018 	sw	s2,24(sp)
80004dd4:	afb10014 	sw	s1,20(sp)
80004dd8:	afb00010 	sw	s0,16(sp)
80004ddc:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:277
	assert(devname != NULL);
80004de0:	10800020 	beqz	a0,80004e64 <find_mount+0xa4>
80004de4:	00a0a021 	move	s4,a1
80004de8:	3c118015 	lui	s1,0x8015
80004dec:	2631451c 	addiu	s1,s1,17692
80004df0:	02208021 	move	s0,s1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004df4:	8e100004 	lw	s0,4(s0)
find_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:279
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
80004df8:	12110012 	beq	s0,s1,80004e44 <find_mount+0x84>
80004dfc:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:281
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (vdev->mountable && strcmp(vdev->devname, devname) == 0) {
80004e00:	8e02fffc 	lw	v0,-4(s0)
80004e04:	1040fffb 	beqz	v0,80004df4 <find_mount+0x34>
80004e08:	2612fff0 	addiu	s2,s0,-16
80004e0c:	8e04fff0 	lw	a0,-16(s0)
80004e10:	0c005bc0 	jal	80016f00 <strcmp>
80004e14:	02602821 	move	a1,s3
80004e18:	5440fff7 	bnezl	v0,80004df8 <find_mount+0x38>
80004e1c:	8e100004 	lw	s0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:287
			*vdev_store = vdev;
			return 0;
		}
	}
	return -E_NO_DEV;
}
80004e20:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:282
	assert(devname != NULL);
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (vdev->mountable && strcmp(vdev->devname, devname) == 0) {
			*vdev_store = vdev;
80004e24:	ae920000 	sw	s2,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:287
			return 0;
		}
	}
	return -E_NO_DEV;
}
80004e28:	8fb3001c 	lw	s3,28(sp)
80004e2c:	8fb40020 	lw	s4,32(sp)
80004e30:	8fb20018 	lw	s2,24(sp)
80004e34:	8fb10014 	lw	s1,20(sp)
80004e38:	8fb00010 	lw	s0,16(sp)
80004e3c:	03e00008 	jr	ra
80004e40:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:286
		if (vdev->mountable && strcmp(vdev->devname, devname) == 0) {
			*vdev_store = vdev;
			return 0;
		}
	}
	return -E_NO_DEV;
80004e44:	2402ffed 	li	v0,-19
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:287
}
80004e48:	8fb40020 	lw	s4,32(sp)
80004e4c:	8fb3001c 	lw	s3,28(sp)
80004e50:	8fb20018 	lw	s2,24(sp)
80004e54:	8fb10014 	lw	s1,20(sp)
80004e58:	8fb00010 	lw	s0,16(sp)
80004e5c:	03e00008 	jr	ra
80004e60:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:277
 * Look for a mountable device named DEVNAME.
 * Should already hold an lock::vdev_list_sem.
 */
static int find_mount(const char *devname, vfs_dev_t ** vdev_store)
{
	assert(devname != NULL);
80004e64:	3c048002 	lui	a0,0x8002
80004e68:	3c068002 	lui	a2,0x8002
80004e6c:	3c078002 	lui	a3,0x8002
80004e70:	248417dc 	addiu	a0,a0,6108
80004e74:	24050115 	li	a1,277
80004e78:	24c60e48 	addiu	a2,a2,3656
80004e7c:	0c006b13 	jal	8001ac4c <__panic>
80004e80:	24e717e8 	addiu	a3,a3,6120

80004e84 <vfs_devlist_init>:
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80004e84:	3c038015 	lui	v1,0x8015
vfs_devlist_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:65
}

void vfs_devlist_init(void)
{
	list_init(&vdev_list);
	sem_init(&vdev_list_sem, 1);
80004e88:	3c048015 	lui	a0,0x8015
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80004e8c:	2462451c 	addiu	v0,v1,17692
vfs_devlist_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:65
80004e90:	24844524 	addiu	a0,a0,17700
80004e94:	24050001 	li	a1,1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80004e98:	ac420004 	sw	v0,4(v0)
vfs_devlist_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:65
80004e9c:	0800671f 	j	80019c7c <sem_init>
80004ea0:	ac62451c 	sw	v0,17692(v1)

80004ea4 <vfs_cleanup>:
vfs_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:72

/*
 * clean up all FS
 */
void vfs_cleanup(void)
{
80004ea4:	27bdffe0 	addiu	sp,sp,-32
80004ea8:	afb10018 	sw	s1,24(sp)
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80004eac:	3c118015 	lui	s1,0x8015
80004eb0:	2631451c 	addiu	s1,s1,17692
vfs_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:73
	if (!list_empty(&vdev_list)) {
80004eb4:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:72

/*
 * clean up all FS
 */
void vfs_cleanup(void)
{
80004eb8:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:73
	if (!list_empty(&vdev_list)) {
80004ebc:	10510014 	beq	v0,s1,80004f10 <vfs_cleanup+0x6c>
80004ec0:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:74
		lock_vdev_list();
80004ec4:	0c001305 	jal	80004c14 <lock_vdev_list>
80004ec8:	02208021 	move	s0,s1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004ecc:	8e100004 	lw	s0,4(s0)
vfs_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:77
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004ed0:	1211000b 	beq	s0,s1,80004f00 <vfs_cleanup+0x5c>
80004ed4:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:79
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->fs != NULL) {
80004ed8:	8e02fff8 	lw	v0,-8(s0)
80004edc:	1040fffb 	beqz	v0,80004ecc <vfs_cleanup+0x28>
80004ee0:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:80
					fsop_cleanup(vdev->fs);
80004ee4:	8c420094 	lw	v0,148(v0)
80004ee8:	0040f809 	jalr	v0
80004eec:	00000000 	nop
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80004ef0:	8e100004 	lw	s0,4(s0)
vfs_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:77
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004ef4:	5611fff9 	bnel	s0,s1,80004edc <vfs_cleanup+0x38>
80004ef8:	8e02fff8 	lw	v0,-8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:86
				}
			}
		}
		unlock_vdev_list();
	}
}
80004efc:	8fbf001c 	lw	ra,28(sp)
80004f00:	8fb10018 	lw	s1,24(sp)
80004f04:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:84
				if (vdev->fs != NULL) {
					fsop_cleanup(vdev->fs);
				}
			}
		}
		unlock_vdev_list();
80004f08:	08001308 	j	80004c20 <unlock_vdev_list>
80004f0c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:86
	}
}
80004f10:	8fbf001c 	lw	ra,28(sp)
80004f14:	8fb10018 	lw	s1,24(sp)
80004f18:	8fb00014 	lw	s0,20(sp)
80004f1c:	03e00008 	jr	ra
80004f20:	27bd0020 	addiu	sp,sp,32

80004f24 <vfs_sync>:
vfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:92

/*
 * Global sync function - call fsos_sync on all devices.
 */
int vfs_sync(void)
{
80004f24:	27bdffe0 	addiu	sp,sp,-32
80004f28:	afb10018 	sw	s1,24(sp)
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80004f2c:	3c118015 	lui	s1,0x8015
80004f30:	2631451c 	addiu	s1,s1,17692
vfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:93
	if (!list_empty(&vdev_list)) {
80004f34:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:92

/*
 * Global sync function - call fsos_sync on all devices.
 */
int vfs_sync(void)
{
80004f38:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:93
	if (!list_empty(&vdev_list)) {
80004f3c:	10510011 	beq	v0,s1,80004f84 <vfs_sync+0x60>
80004f40:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:94
		lock_vdev_list();
80004f44:	0c001305 	jal	80004c14 <lock_vdev_list>
80004f48:	02208021 	move	s0,s1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004f4c:	8e100004 	lw	s0,4(s0)
vfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:97
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004f50:	1211000a 	beq	s0,s1,80004f7c <vfs_sync+0x58>
80004f54:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:99
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->fs != NULL) {
80004f58:	8e02fff8 	lw	v0,-8(s0)
80004f5c:	1040fffb 	beqz	v0,80004f4c <vfs_sync+0x28>
80004f60:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:100
					fsop_sync(vdev->fs);
80004f64:	8c420088 	lw	v0,136(v0)
80004f68:	0040f809 	jalr	v0
80004f6c:	00000000 	nop
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80004f70:	8e100004 	lw	s0,4(s0)
vfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:97
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004f74:	5611fff9 	bnel	s0,s1,80004f5c <vfs_sync+0x38>
80004f78:	8e02fff8 	lw	v0,-8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:104
				if (vdev->fs != NULL) {
					fsop_sync(vdev->fs);
				}
			}
		}
		unlock_vdev_list();
80004f7c:	0c001308 	jal	80004c20 <unlock_vdev_list>
80004f80:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:107
	}
	return 0;
}
80004f84:	8fbf001c 	lw	ra,28(sp)
80004f88:	00001021 	move	v0,zero
80004f8c:	8fb10018 	lw	s1,24(sp)
80004f90:	8fb00014 	lw	s0,20(sp)
80004f94:	03e00008 	jr	ra
80004f98:	27bd0020 	addiu	sp,sp,32

80004f9c <vfs_get_root>:
vfs_get_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:114
/*
 * Given a device name (lhd0, emu0, somevolname, null, etc.), hand
 * back an appropriate inode.
 */
int vfs_get_root(const char *devname, struct inode **node_store)
{
80004f9c:	27bdffd0 	addiu	sp,sp,-48
80004fa0:	afb30028 	sw	s3,40(sp)
80004fa4:	afb20024 	sw	s2,36(sp)
80004fa8:	afbf002c 	sw	ra,44(sp)
80004fac:	afb10020 	sw	s1,32(sp)
80004fb0:	afb0001c 	sw	s0,28(sp)
80004fb4:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:115
	assert(devname != NULL);
80004fb8:	1080002d 	beqz	a0,80005070 <vfs_get_root+0xd4>
80004fbc:	00a09821 	move	s3,a1
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80004fc0:	3c118015 	lui	s1,0x8015
80004fc4:	2631451c 	addiu	s1,s1,17692
vfs_get_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:117
	int ret = -E_NO_DEV;
	if (!list_empty(&vdev_list)) {
80004fc8:	8e230004 	lw	v1,4(s1)
80004fcc:	10710010 	beq	v1,s1,80005010 <vfs_get_root+0x74>
80004fd0:	2402ffed 	li	v0,-19
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:118
		lock_vdev_list();
80004fd4:	0c001305 	jal	80004c14 <lock_vdev_list>
80004fd8:	02208021 	move	s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:121
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004fdc:	080013fe 	j	80004ff8 <vfs_get_root+0x5c>
80004fe0:	8e100004 	lw	s0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:123
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (strcmp(devname, vdev->devname) == 0) {
80004fe4:	0c005bc0 	jal	80016f00 <strcmp>
80004fe8:	02402021 	move	a0,s2
80004fec:	5040000f 	beqzl	v0,8000502c <vfs_get_root+0x90>
80004ff0:	8e04fff8 	lw	a0,-8(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80004ff4:	8e100004 	lw	s0,4(s0)
vfs_get_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:121
	int ret = -E_NO_DEV;
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80004ff8:	5611fffa 	bnel	s0,s1,80004fe4 <vfs_get_root+0x48>
80004ffc:	8e05fff0 	lw	a1,-16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:116
 * back an appropriate inode.
 */
int vfs_get_root(const char *devname, struct inode **node_store)
{
	assert(devname != NULL);
	int ret = -E_NO_DEV;
80005000:	2402ffed 	li	v0,-19
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:163
				 * any of the names of this device, so go on to the
				 * next one. 
				 */
			}
		}
		unlock_vdev_list();
80005004:	0c001308 	jal	80004c20 <unlock_vdev_list>
80005008:	afa20010 	sw	v0,16(sp)
8000500c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:166
	}
	return ret;
}
80005010:	8fbf002c 	lw	ra,44(sp)
80005014:	8fb30028 	lw	s3,40(sp)
80005018:	8fb20024 	lw	s2,36(sp)
8000501c:	8fb10020 	lw	s1,32(sp)
80005020:	8fb0001c 	lw	s0,28(sp)
80005024:	03e00008 	jr	ra
80005028:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:135
					 *
					 * If it has no mounted filesystem, it's mountable,
					 * and DEVNAME names the device, return -E_NA_DEV.
					 */

					if (vdev->fs != NULL) {
8000502c:	5080000a 	beqzl	a0,80005058 <vfs_get_root+0xbc>
80005030:	8e03fffc 	lw	v1,-4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:136
						found = fsop_get_root(vdev->fs);
80005034:	8c82008c 	lw	v0,140(a0)
80005038:	0040f809 	jalr	v0
8000503c:	00000000 	nop
80005040:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:141
					} else if (!vdev->mountable) {
						vop_ref_inc(vdev->devnode);
						found = vdev->devnode;
					}
					if (found != NULL) {
80005044:	1060ffef 	beqz	v1,80005004 <vfs_get_root+0x68>
80005048:	2402fff0 	li	v0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:147
						/*
						 * If DEVNAME names the device, and we get here, it
						 * must have no fs and not be mountable. In this case,
						 * we return the inode of device itself--node_store.
						 */
						ret = 0, *node_store = found;
8000504c:	ae630000 	sw	v1,0(s3)
80005050:	08001401 	j	80005004 <vfs_get_root+0x68>
80005054:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:137
					 * and DEVNAME names the device, return -E_NA_DEV.
					 */

					if (vdev->fs != NULL) {
						found = fsop_get_root(vdev->fs);
					} else if (!vdev->mountable) {
80005058:	1460ffea 	bnez	v1,80005004 <vfs_get_root+0x68>
8000505c:	2402fff0 	li	v0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:138
						vop_ref_inc(vdev->devnode);
80005060:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80005064:	8e04fff4 	lw	a0,-12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:139
						found = vdev->devnode;
80005068:	08001411 	j	80005044 <vfs_get_root+0xa8>
8000506c:	8e03fff4 	lw	v1,-12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:115
 * Given a device name (lhd0, emu0, somevolname, null, etc.), hand
 * back an appropriate inode.
 */
int vfs_get_root(const char *devname, struct inode **node_store)
{
	assert(devname != NULL);
80005070:	3c048002 	lui	a0,0x8002
80005074:	3c068002 	lui	a2,0x8002
80005078:	3c078002 	lui	a3,0x8002
8000507c:	248417dc 	addiu	a0,a0,6108
80005080:	24050073 	li	a1,115
80005084:	24c60e48 	addiu	a2,a2,3656
80005088:	0c006b13 	jal	8001ac4c <__panic>
8000508c:	24e717e8 	addiu	a3,a3,6120

80005090 <vfs_get_devname>:
vfs_get_devname():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:172

/*
 * Given a filesystem, hand back the name of the device it's mounted on.
 */
const char *vfs_get_devname(struct fs *fs)
{
80005090:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:173
	assert(fs != NULL);
80005094:	10800011 	beqz	a0,800050dc <vfs_get_devname+0x4c>
80005098:	afbf0014 	sw	ra,20(sp)
8000509c:	3c058015 	lui	a1,0x8015
800050a0:	24a5451c 	addiu	a1,a1,17692
800050a4:	0800142d 	j	800050b4 <vfs_get_devname+0x24>
800050a8:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:177
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
		vfs_dev_t *vdev = le2vdev(le, vdev_link);
		if (vdev->fs == fs) {
800050ac:	10640008 	beq	v1,a0,800050d0 <vfs_get_devname+0x40>
800050b0:	8fbf0014 	lw	ra,20(sp)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800050b4:	8c420004 	lw	v0,4(v0)
vfs_get_devname():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:175
 */
const char *vfs_get_devname(struct fs *fs)
{
	assert(fs != NULL);
	list_entry_t *list = &vdev_list, *le = list;
	while ((le = list_next(le)) != list) {
800050b8:	5445fffc 	bnel	v0,a1,800050ac <vfs_get_devname+0x1c>
800050bc:	8c43fff8 	lw	v1,-8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:188
			 */
			return vdev->devname;
		}
	}
	return NULL;
}
800050c0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:187
			 * go away until the fs goes away.
			 */
			return vdev->devname;
		}
	}
	return NULL;
800050c4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:188
}
800050c8:	03e00008 	jr	ra
800050cc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:184
			 * This is not a race condition: as long as the
			 * guy calling us holds a reference to the fs,
			 * the fs cannot go away, and the device can't
			 * go away until the fs goes away.
			 */
			return vdev->devname;
800050d0:	8c42fff0 	lw	v0,-16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:188
		}
	}
	return NULL;
}
800050d4:	03e00008 	jr	ra
800050d8:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:173
/*
 * Given a filesystem, hand back the name of the device it's mounted on.
 */
const char *vfs_get_devname(struct fs *fs)
{
	assert(fs != NULL);
800050dc:	3c048002 	lui	a0,0x8002
800050e0:	3c068002 	lui	a2,0x8002
800050e4:	3c078002 	lui	a3,0x8002
800050e8:	248417dc 	addiu	a0,a0,6108
800050ec:	240500ad 	li	a1,173
800050f0:	24c60e48 	addiu	a2,a2,3656
800050f4:	0c006b13 	jal	8001ac4c <__panic>
800050f8:	24e71854 	addiu	a3,a3,6228

800050fc <vfs_add_fs>:
vfs_add_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:259
 * This is used for emufs(not implementation???), but might also be used for network
 * filesystems and the like.
 */
int vfs_add_fs(const char *devname, struct fs *fs)
{
	return vfs_do_add(devname, NULL, fs, 0);
800050fc:	00a03021 	move	a2,a1
80005100:	00003821 	move	a3,zero
80005104:	0800130b 	j	80004c2c <vfs_do_add>
80005108:	00002821 	move	a1,zero

8000510c <vfs_add_dev>:
vfs_add_dev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:268
 * Add a new device, by name. See above for the description of
 * mountable.
 */
int vfs_add_dev(const char *devname, struct inode *devnode, bool mountable)
{
	return vfs_do_add(devname, devnode, NULL, mountable);
8000510c:	00c03821 	move	a3,a2
80005110:	0800130b 	j	80004c2c <vfs_do_add>
80005114:	00003021 	move	a2,zero

80005118 <vfs_mount>:
vfs_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:296
 * set up the filesystem and hand back a struct fs.
 */
int
vfs_mount(const char *devname,
	  int (*mountfunc) (struct device * dev, struct fs ** fs_store))
{
80005118:	27bdffd0 	addiu	sp,sp,-48
8000511c:	afbf002c 	sw	ra,44(sp)
80005120:	afb10028 	sw	s1,40(sp)
80005124:	afb00024 	sw	s0,36(sp)
80005128:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:298
	int ret;
	lock_vdev_list();
8000512c:	0c001305 	jal	80004c14 <lock_vdev_list>
80005130:	afa40018 	sw	a0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:300
	vfs_dev_t *vdev;
	if ((ret = find_mount(devname, &vdev)) != 0) {
80005134:	8fa40018 	lw	a0,24(sp)
80005138:	0c001370 	jal	80004dc0 <find_mount>
8000513c:	27a50010 	addiu	a1,sp,16
80005140:	1440001c 	bnez	v0,800051b4 <vfs_mount+0x9c>
80005144:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:303
		goto out;
	}
	if (vdev->fs != NULL) {
80005148:	8fa50010 	lw	a1,16(sp)
8000514c:	8ca20008 	lw	v0,8(a1)
80005150:	14400020 	bnez	v0,800051d4 <vfs_mount+0xbc>
80005154:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:307
		ret = -E_BUSY;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
80005158:	8ca20000 	lw	v0,0(a1)
8000515c:	10400025 	beqz	v0,800051f4 <vfs_mount+0xdc>
80005160:	3c048002 	lui	a0,0x8002
80005164:	8ca2000c 	lw	v0,12(a1)
80005168:	10400023 	beqz	v0,800051f8 <vfs_mount+0xe0>
8000516c:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:309

	struct device *dev = vop_info(vdev->devnode, device);
80005170:	8ca40004 	lw	a0,4(a1)
80005174:	10800026 	beqz	a0,80005210 <vfs_mount+0xf8>
80005178:	24021234 	li	v0,4660
8000517c:	8c830038 	lw	v1,56(a0)
80005180:	54620025 	bnel	v1,v0,80005218 <vfs_mount+0x100>
80005184:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:310
	if ((ret = mountfunc(dev, &(vdev->fs))) == 0) {
80005188:	0220f809 	jalr	s1
8000518c:	24a50008 	addiu	a1,a1,8
80005190:	14400008 	bnez	v0,800051b4 <vfs_mount+0x9c>
80005194:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:311
		assert(vdev->fs != NULL);
80005198:	8fa20010 	lw	v0,16(sp)
8000519c:	8c430008 	lw	v1,8(v0)
800051a0:	10600023 	beqz	v1,80005230 <vfs_mount+0x118>
800051a4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:312
		kprintf("vfs: mount %s.\n", vdev->devname);
800051a8:	8c450000 	lw	a1,0(v0)
800051ac:	0c007aa6 	jal	8001ea98 <kprintf>
800051b0:	248418a0 	addiu	a0,a0,6304
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:316
	}

out:
	unlock_vdev_list();
800051b4:	0c001308 	jal	80004c20 <unlock_vdev_list>
800051b8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:318
	return ret;
}
800051bc:	8fbf002c 	lw	ra,44(sp)
800051c0:	02001021 	move	v0,s0
800051c4:	8fb10028 	lw	s1,40(sp)
800051c8:	8fb00024 	lw	s0,36(sp)
800051cc:	03e00008 	jr	ra
800051d0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:316
		assert(vdev->fs != NULL);
		kprintf("vfs: mount %s.\n", vdev->devname);
	}

out:
	unlock_vdev_list();
800051d4:	0c001308 	jal	80004c20 <unlock_vdev_list>
800051d8:	2410fff0 	li	s0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:318
	return ret;
}
800051dc:	8fbf002c 	lw	ra,44(sp)
800051e0:	02001021 	move	v0,s0
800051e4:	8fb10028 	lw	s1,40(sp)
800051e8:	8fb00024 	lw	s0,36(sp)
800051ec:	03e00008 	jr	ra
800051f0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:307
	}
	if (vdev->fs != NULL) {
		ret = -E_BUSY;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
800051f4:	3c068002 	lui	a2,0x8002
800051f8:	3c078002 	lui	a3,0x8002
800051fc:	248417dc 	addiu	a0,a0,6108
80005200:	24050133 	li	a1,307
80005204:	24c60e48 	addiu	a2,a2,3656
80005208:	0c006b13 	jal	8001ac4c <__panic>
8000520c:	24e71860 	addiu	a3,a3,6240
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:309

	struct device *dev = vop_info(vdev->devnode, device);
80005210:	3c048002 	lui	a0,0x8002
80005214:	3c068002 	lui	a2,0x8002
80005218:	3c078002 	lui	a3,0x8002
8000521c:	248417dc 	addiu	a0,a0,6108
80005220:	24050135 	li	a1,309
80005224:	24c60e48 	addiu	a2,a2,3656
80005228:	0c006b13 	jal	8001ac4c <__panic>
8000522c:	24e70fdc 	addiu	a3,a3,4060
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:311
	if ((ret = mountfunc(dev, &(vdev->fs))) == 0) {
		assert(vdev->fs != NULL);
80005230:	3c048002 	lui	a0,0x8002
80005234:	3c068002 	lui	a2,0x8002
80005238:	3c078002 	lui	a3,0x8002
8000523c:	248417dc 	addiu	a0,a0,6108
80005240:	24050137 	li	a1,311
80005244:	24c60e48 	addiu	a2,a2,3656
80005248:	0c006b13 	jal	8001ac4c <__panic>
8000524c:	24e7188c 	addiu	a3,a3,6284

80005250 <vfs_unmount>:
vfs_unmount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:325
/*
 * Unmount a filesystem/device by name.
 * First calls fsop_sync on the filesystem; then calls fsop_umount.
 */
int vfs_unmount(const char *devname)
{
80005250:	27bdffd8 	addiu	sp,sp,-40
80005254:	afbf0024 	sw	ra,36(sp)
80005258:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:327
	int ret;
	lock_vdev_list();
8000525c:	0c001305 	jal	80004c14 <lock_vdev_list>
80005260:	afa40018 	sw	a0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:329
	vfs_dev_t *vdev;
	if ((ret = find_mount(devname, &vdev)) != 0) {
80005264:	8fa40018 	lw	a0,24(sp)
80005268:	0c001370 	jal	80004dc0 <find_mount>
8000526c:	27a50010 	addiu	a1,sp,16
80005270:	14400010 	bnez	v0,800052b4 <vfs_unmount+0x64>
80005274:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:332
		goto out;
	}
	if (vdev->fs == NULL) {
80005278:	8fa20010 	lw	v0,16(sp)
8000527c:	8c440008 	lw	a0,8(v0)
80005280:	5080000c 	beqzl	a0,800052b4 <vfs_unmount+0x64>
80005284:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:336
		ret = -E_INVAL;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
80005288:	8c430000 	lw	v1,0(v0)
8000528c:	50600024 	beqzl	v1,80005320 <vfs_unmount+0xd0>
80005290:	3c048002 	lui	a0,0x8002
80005294:	8c42000c 	lw	v0,12(v0)
80005298:	50400021 	beqzl	v0,80005320 <vfs_unmount+0xd0>
8000529c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:338

	if ((ret = fsop_sync(vdev->fs)) != 0) {
800052a0:	8c820088 	lw	v0,136(a0)
800052a4:	0040f809 	jalr	v0
800052a8:	00000000 	nop
800052ac:	10400008 	beqz	v0,800052d0 <vfs_unmount+0x80>
800052b0:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:348
		vdev->fs = NULL;
		kprintf("vfs: unmount %s.\n", vdev->devname);
	}

out:
	unlock_vdev_list();
800052b4:	0c001308 	jal	80004c20 <unlock_vdev_list>
800052b8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:350
	return ret;
}
800052bc:	8fbf0024 	lw	ra,36(sp)
800052c0:	02001021 	move	v0,s0
800052c4:	8fb00020 	lw	s0,32(sp)
800052c8:	03e00008 	jr	ra
800052cc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:341
	assert(vdev->devname != NULL && vdev->mountable);

	if ((ret = fsop_sync(vdev->fs)) != 0) {
		goto out;
	}
	if ((ret = fsop_unmount(vdev->fs)) == 0) {
800052d0:	8fa20010 	lw	v0,16(sp)
800052d4:	8c440008 	lw	a0,8(v0)
800052d8:	8c820090 	lw	v0,144(a0)
800052dc:	0040f809 	jalr	v0
800052e0:	00000000 	nop
800052e4:	1440fff3 	bnez	v0,800052b4 <vfs_unmount+0x64>
800052e8:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:343
		/* now drop the filesystem */
		vdev->fs = NULL;
800052ec:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:344
		kprintf("vfs: unmount %s.\n", vdev->devname);
800052f0:	3c048002 	lui	a0,0x8002
800052f4:	248418b0 	addiu	a0,a0,6320
800052f8:	8c450000 	lw	a1,0(v0)
800052fc:	0c007aa6 	jal	8001ea98 <kprintf>
80005300:	ac400008 	sw	zero,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:348
	}

out:
	unlock_vdev_list();
80005304:	0c001308 	jal	80004c20 <unlock_vdev_list>
80005308:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:350
	return ret;
}
8000530c:	8fbf0024 	lw	ra,36(sp)
80005310:	02001021 	move	v0,s0
80005314:	8fb00020 	lw	s0,32(sp)
80005318:	03e00008 	jr	ra
8000531c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:336
	}
	if (vdev->fs == NULL) {
		ret = -E_INVAL;
		goto out;
	}
	assert(vdev->devname != NULL && vdev->mountable);
80005320:	3c068002 	lui	a2,0x8002
80005324:	3c078002 	lui	a3,0x8002
80005328:	248417dc 	addiu	a0,a0,6108
8000532c:	24050150 	li	a1,336
80005330:	24c60e48 	addiu	a2,a2,3656
80005334:	0c006b13 	jal	8001ac4c <__panic>
80005338:	24e71860 	addiu	a3,a3,6240

8000533c <vfs_unmount_all>:
vfs_unmount_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:356

/*
 * Global unmount function.
 */
int vfs_unmount_all(void)
{
8000533c:	27bdffd8 	addiu	sp,sp,-40
80005340:	afb10014 	sw	s1,20(sp)
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80005344:	3c118015 	lui	s1,0x8015
80005348:	2631451c 	addiu	s1,s1,17692
vfs_unmount_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:357
	if (!list_empty(&vdev_list)) {
8000534c:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:356

/*
 * Global unmount function.
 */
int vfs_unmount_all(void)
{
80005350:	afbf0024 	sw	ra,36(sp)
80005354:	afb40020 	sw	s4,32(sp)
80005358:	afb3001c 	sw	s3,28(sp)
8000535c:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:357
	if (!list_empty(&vdev_list)) {
80005360:	1051001e 	beq	v0,s1,800053dc <vfs_unmount_all+0xa0>
80005364:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:379
						     vdev->devname, ret);
						continue;
					}
					/* now drop the filesystem */
					vdev->fs = NULL;
					kprintf("vfs: unmount %s.\n",
80005368:	3c148002 	lui	s4,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:358
 * Global unmount function.
 */
int vfs_unmount_all(void)
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
8000536c:	0c001305 	jal	80004c14 <lock_vdev_list>
80005370:	3c138002 	lui	s3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:360
		{
			list_entry_t *list = &vdev_list, *le = list;
80005374:	02208021 	move	s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:379
						     vdev->devname, ret);
						continue;
					}
					/* now drop the filesystem */
					vdev->fs = NULL;
					kprintf("vfs: unmount %s.\n",
80005378:	269418b0 	addiu	s4,s4,6320
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:373
						     vdev->devname, ret);
						continue;
					}
					if ((ret = fsop_unmount(vdev->fs)) != 0) {
						kprintf
						    ("vfs: warning: unmount failed for %s: %e.\n",
8000537c:	267318ec 	addiu	s3,s3,6380
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:367
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->mountable && vdev->fs != NULL) {
					int ret;
					if ((ret = fsop_sync(vdev->fs)) != 0) {
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n",
80005380:	3c128002 	lui	s2,0x8002
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80005384:	8e100004 	lw	s0,4(s0)
vfs_unmount_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:361
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
80005388:	12110012 	beq	s0,s1,800053d4 <vfs_unmount_all+0x98>
8000538c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:363
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->mountable && vdev->fs != NULL) {
80005390:	8e02fffc 	lw	v0,-4(s0)
80005394:	5040fffc 	beqzl	v0,80005388 <vfs_unmount_all+0x4c>
80005398:	8e100004 	lw	s0,4(s0)
8000539c:	8e02fff8 	lw	v0,-8(s0)
800053a0:	1040fff8 	beqz	v0,80005384 <vfs_unmount_all+0x48>
800053a4:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:365
					int ret;
					if ((ret = fsop_sync(vdev->fs)) != 0) {
800053a8:	8c420088 	lw	v0,136(v0)
800053ac:	0040f809 	jalr	v0
800053b0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:367
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n",
800053b4:	00403021 	move	a2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:365
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
				vfs_dev_t *vdev = le2vdev(le, vdev_link);
				if (vdev->mountable && vdev->fs != NULL) {
					int ret;
					if ((ret = fsop_sync(vdev->fs)) != 0) {
800053b8:	10400011 	beqz	v0,80005400 <vfs_unmount_all+0xc4>
800053bc:	264418c4 	addiu	a0,s2,6340
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:367
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n",
800053c0:	0c007aa6 	jal	8001ea98 <kprintf>
800053c4:	8e05fff0 	lw	a1,-16(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800053c8:	8e100004 	lw	s0,4(s0)
vfs_unmount_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:361
{
	if (!list_empty(&vdev_list)) {
		lock_vdev_list();
		{
			list_entry_t *list = &vdev_list, *le = list;
			while ((le = list_next(le)) != list) {
800053cc:	5611fff1 	bnel	s0,s1,80005394 <vfs_unmount_all+0x58>
800053d0:	8e02fffc 	lw	v0,-4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:384
					kprintf("vfs: unmount %s.\n",
						vdev->devname);
				}
			}
		}
		unlock_vdev_list();
800053d4:	0c001308 	jal	80004c20 <unlock_vdev_list>
800053d8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:387
	}
	return 0;
}
800053dc:	8fbf0024 	lw	ra,36(sp)
800053e0:	00001021 	move	v0,zero
800053e4:	8fb40020 	lw	s4,32(sp)
800053e8:	8fb3001c 	lw	s3,28(sp)
800053ec:	8fb20018 	lw	s2,24(sp)
800053f0:	8fb10014 	lw	s1,20(sp)
800053f4:	8fb00010 	lw	s0,16(sp)
800053f8:	03e00008 	jr	ra
800053fc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:371
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n",
						     vdev->devname, ret);
						continue;
					}
					if ((ret = fsop_unmount(vdev->fs)) != 0) {
80005400:	8e04fff8 	lw	a0,-8(s0)
80005404:	8c820090 	lw	v0,144(a0)
80005408:	0040f809 	jalr	v0
8000540c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:373
						kprintf
						    ("vfs: warning: unmount failed for %s: %e.\n",
80005410:	00403021 	move	a2,v0
80005414:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:371
						kprintf
						    ("vfs: warning: sync failed for %s: %e.\n",
						     vdev->devname, ret);
						continue;
					}
					if ((ret = fsop_unmount(vdev->fs)) != 0) {
80005418:	10400005 	beqz	v0,80005430 <vfs_unmount_all+0xf4>
8000541c:	8e05fff0 	lw	a1,-16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:373
						kprintf
						    ("vfs: warning: unmount failed for %s: %e.\n",
80005420:	0c007aa6 	jal	8001ea98 <kprintf>
80005424:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:375
						     vdev->devname, ret);
						continue;
80005428:	080014e2 	j	80005388 <vfs_unmount_all+0x4c>
8000542c:	8e100004 	lw	s0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:378
					}
					/* now drop the filesystem */
					vdev->fs = NULL;
80005430:	ae00fff8 	sw	zero,-8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsdev.c:379
					kprintf("vfs: unmount %s.\n",
80005434:	0c007aa6 	jal	8001ea98 <kprintf>
80005438:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8000543c:	080014e2 	j	80005388 <vfs_unmount_all+0x4c>
80005440:	8e100004 	lw	s0,4(s0)

80005444 <vfs_open>:
vfs_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:15
#include <error.h>
#include <assert.h>

/* Does most of the work for open(). */
int vfs_open(char *path, uint32_t open_flags, struct inode **node_store)
{
80005444:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:17
	bool can_write = 0;
	switch (open_flags & O_ACCMODE) {
80005448:	30a20003 	andi	v0,a1,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:15
#include <error.h>
#include <assert.h>

/* Does most of the work for open(). */
int vfs_open(char *path, uint32_t open_flags, struct inode **node_store)
{
8000544c:	afb2002c 	sw	s2,44(sp)
80005450:	afb00024 	sw	s0,36(sp)
80005454:	afbf0034 	sw	ra,52(sp)
80005458:	afb30030 	sw	s3,48(sp)
8000545c:	afb10028 	sw	s1,40(sp)
80005460:	00a08021 	move	s0,a1
80005464:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:17
	bool can_write = 0;
	switch (open_flags & O_ACCMODE) {
80005468:	1040000d 	beqz	v0,800054a0 <vfs_open+0x5c>
8000546c:	00001821 	move	v1,zero
80005470:	2c420003 	sltiu	v0,v0,3
80005474:	14400009 	bnez	v0,8000549c <vfs_open+0x58>
80005478:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:68
			return ret;
		}
	}
	*node_store = node;
	return 0;
}
8000547c:	8fbf0034 	lw	ra,52(sp)
80005480:	02601021 	move	v0,s3
80005484:	8fb2002c 	lw	s2,44(sp)
80005488:	8fb30030 	lw	s3,48(sp)
8000548c:	8fb10028 	lw	s1,40(sp)
80005490:	8fb00024 	lw	s0,36(sp)
80005494:	03e00008 	jr	ra
80005498:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:22
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		break;
	case O_WRONLY:
	case O_RDWR:
		can_write = 1;
8000549c:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:28
		break;
	default:
		return -E_INVAL;
	}

	if (open_flags & O_TRUNC) {
800054a0:	32110200 	andi	s1,s0,0x200
800054a4:	12200003 	beqz	s1,800054b4 <vfs_open+0x70>
800054a8:	32020040 	andi	v0,s0,0x40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:29
		if (!can_write) {
800054ac:	1060fff3 	beqz	v1,8000547c <vfs_open+0x38>
800054b0:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:36
		}
	}

	int ret;
	struct inode *dir, *node;
	if (open_flags & O_CREAT) {
800054b4:	10400052 	beqz	v0,80005600 <vfs_open+0x1bc>
800054b8:	27a50018 	addiu	a1,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:39
		char *name;
		bool excl = (open_flags & O_EXCL) != 0;
		if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
800054bc:	0c001777 	jal	80005ddc <vfs_lookup_parent>
800054c0:	27a60010 	addiu	a2,sp,16
800054c4:	1440ffed 	bnez	v0,8000547c <vfs_open+0x38>
800054c8:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:42
			return ret;
		}
		ret = vop_create(dir, name, excl, &node);
800054cc:	8fb30018 	lw	s3,24(sp)
800054d0:	12600063 	beqz	s3,80005660 <vfs_open+0x21c>
800054d4:	3c048002 	lui	a0,0x8002
800054d8:	8e620048 	lw	v0,72(s3)
800054dc:	10400061 	beqz	v0,80005664 <vfs_open+0x220>
800054e0:	3c068002 	lui	a2,0x8002
800054e4:	8c42004c 	lw	v0,76(v0)
800054e8:	1040005d 	beqz	v0,80005660 <vfs_open+0x21c>
800054ec:	3c058002 	lui	a1,0x8002
800054f0:	02602021 	move	a0,s3
800054f4:	0c0010f2 	jal	800043c8 <inode_check>
800054f8:	24a51974 	addiu	a1,a1,6516
800054fc:	8e620048 	lw	v0,72(s3)
80005500:	8fa40018 	lw	a0,24(sp)
80005504:	8fa50010 	lw	a1,16(sp)
80005508:	8c42004c 	lw	v0,76(v0)
8000550c:	7e0601c0 	ext	a2,s0,0x7,0x1
80005510:	0040f809 	jalr	v0
80005514:	27a70014 	addiu	a3,sp,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:43
		vop_ref_dec(dir);
80005518:	8fa40018 	lw	a0,24(sp)
8000551c:	0c001171 	jal	800045c4 <inode_ref_dec>
80005520:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:48
	} else {
		ret = vfs_lookup(path, &node);
	}

	if (ret != 0) {
80005524:	1660ffd6 	bnez	s3,80005480 <vfs_open+0x3c>
80005528:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:51
		return ret;
	}
	assert(node != NULL);
8000552c:	8fb30014 	lw	s3,20(sp)
80005530:	12600059 	beqz	s3,80005698 <vfs_open+0x254>
80005534:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:53

	if ((ret = vop_open(node, open_flags)) != 0) {
80005538:	8e620048 	lw	v0,72(s3)
8000553c:	10400042 	beqz	v0,80005648 <vfs_open+0x204>
80005540:	3c068002 	lui	a2,0x8002
80005544:	8c420004 	lw	v0,4(v0)
80005548:	1040003e 	beqz	v0,80005644 <vfs_open+0x200>
8000554c:	3c058002 	lui	a1,0x8002
80005550:	02602021 	move	a0,s3
80005554:	0c0010f2 	jal	800043c8 <inode_check>
80005558:	24a519cc 	addiu	a1,a1,6604
8000555c:	8e620048 	lw	v0,72(s3)
80005560:	8fa40014 	lw	a0,20(sp)
80005564:	8c420004 	lw	v0,4(v0)
80005568:	0040f809 	jalr	v0
8000556c:	02002821 	move	a1,s0
80005570:	00409821 	move	s3,v0
80005574:	14400029 	bnez	v0,8000561c <vfs_open+0x1d8>
80005578:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:58
		vop_ref_dec(node);
		return ret;
	}

	vop_open_inc(node);
8000557c:	0c0010d6 	jal	80004358 <inode_open_inc>
80005580:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:59
	if (open_flags & O_TRUNC) {
80005584:	12200015 	beqz	s1,800055dc <vfs_open+0x198>
80005588:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:60
		if ((ret = vop_truncate(node, 0)) != 0) {
8000558c:	8fb00014 	lw	s0,20(sp)
80005590:	1200003a 	beqz	s0,8000567c <vfs_open+0x238>
80005594:	3c048002 	lui	a0,0x8002
80005598:	8e020048 	lw	v0,72(s0)
8000559c:	10400038 	beqz	v0,80005680 <vfs_open+0x23c>
800055a0:	3c068002 	lui	a2,0x8002
800055a4:	8c420048 	lw	v0,72(v0)
800055a8:	10400034 	beqz	v0,8000567c <vfs_open+0x238>
800055ac:	3c058002 	lui	a1,0x8002
800055b0:	02002021 	move	a0,s0
800055b4:	0c0010f2 	jal	800043c8 <inode_check>
800055b8:	24a51a28 	addiu	a1,a1,6696
800055bc:	8e020048 	lw	v0,72(s0)
800055c0:	8fa40014 	lw	a0,20(sp)
800055c4:	8c420048 	lw	v0,72(v0)
800055c8:	0040f809 	jalr	v0
800055cc:	00002821 	move	a1,zero
800055d0:	1440000f 	bnez	v0,80005610 <vfs_open+0x1cc>
800055d4:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:66
			vop_open_dec(node);
			vop_ref_dec(node);
			return ret;
		}
	}
	*node_store = node;
800055d8:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:68
	return 0;
}
800055dc:	8fbf0034 	lw	ra,52(sp)
800055e0:	8fb10028 	lw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:66
			vop_open_dec(node);
			vop_ref_dec(node);
			return ret;
		}
	}
	*node_store = node;
800055e4:	ae420000 	sw	v0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:68
	return 0;
}
800055e8:	8fb00024 	lw	s0,36(sp)
800055ec:	02601021 	move	v0,s3
800055f0:	8fb2002c 	lw	s2,44(sp)
800055f4:	8fb30030 	lw	s3,48(sp)
800055f8:	03e00008 	jr	ra
800055fc:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:45
			return ret;
		}
		ret = vop_create(dir, name, excl, &node);
		vop_ref_dec(dir);
	} else {
		ret = vfs_lookup(path, &node);
80005600:	0c00173f 	jal	80005cfc <vfs_lookup>
80005604:	27a50014 	addiu	a1,sp,20
80005608:	08001549 	j	80005524 <vfs_open+0xe0>
8000560c:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:61
	}

	vop_open_inc(node);
	if (open_flags & O_TRUNC) {
		if ((ret = vop_truncate(node, 0)) != 0) {
			vop_open_dec(node);
80005610:	0c00112a 	jal	800044a8 <inode_open_dec>
80005614:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:62
			vop_ref_dec(node);
80005618:	8fa40014 	lw	a0,20(sp)
8000561c:	0c001171 	jal	800045c4 <inode_ref_dec>
80005620:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:68
			return ret;
		}
	}
	*node_store = node;
	return 0;
}
80005624:	8fbf0034 	lw	ra,52(sp)
80005628:	02601021 	move	v0,s3
8000562c:	8fb2002c 	lw	s2,44(sp)
80005630:	8fb30030 	lw	s3,48(sp)
80005634:	8fb10028 	lw	s1,40(sp)
80005638:	8fb00024 	lw	s0,36(sp)
8000563c:	03e00008 	jr	ra
80005640:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:53
	if (ret != 0) {
		return ret;
	}
	assert(node != NULL);

	if ((ret = vop_open(node, open_flags)) != 0) {
80005644:	3c068002 	lui	a2,0x8002
80005648:	3c078002 	lui	a3,0x8002
8000564c:	24841918 	addiu	a0,a0,6424
80005650:	24050035 	li	a1,53
80005654:	24c60e48 	addiu	a2,a2,3656
80005658:	0c006b13 	jal	8001ac4c <__panic>
8000565c:	24e7197c 	addiu	a3,a3,6524
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:42
		char *name;
		bool excl = (open_flags & O_EXCL) != 0;
		if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
			return ret;
		}
		ret = vop_create(dir, name, excl, &node);
80005660:	3c068002 	lui	a2,0x8002
80005664:	3c078002 	lui	a3,0x8002
80005668:	24841918 	addiu	a0,a0,6424
8000566c:	2405002a 	li	a1,42
80005670:	24c60e48 	addiu	a2,a2,3656
80005674:	0c006b13 	jal	8001ac4c <__panic>
80005678:	24e71924 	addiu	a3,a3,6436
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:60
		return ret;
	}

	vop_open_inc(node);
	if (open_flags & O_TRUNC) {
		if ((ret = vop_truncate(node, 0)) != 0) {
8000567c:	3c068002 	lui	a2,0x8002
80005680:	3c078002 	lui	a3,0x8002
80005684:	24841918 	addiu	a0,a0,6424
80005688:	2405003c 	li	a1,60
8000568c:	24c60e48 	addiu	a2,a2,3656
80005690:	0c006b13 	jal	8001ac4c <__panic>
80005694:	24e719d4 	addiu	a3,a3,6612
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:51
	}

	if (ret != 0) {
		return ret;
	}
	assert(node != NULL);
80005698:	3c068002 	lui	a2,0x8002
8000569c:	3c078002 	lui	a3,0x8002
800056a0:	24841918 	addiu	a0,a0,6424
800056a4:	24050033 	li	a1,51
800056a8:	24c60e48 	addiu	a2,a2,3656
800056ac:	0c006b13 	jal	8001ac4c <__panic>
800056b0:	24e725f0 	addiu	a3,a3,9712

800056b4 <vfs_close>:
vfs_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:72
	return 0;
}

/* Does most of the work for close(). */
int vfs_close(struct inode *node)
{
800056b4:	27bdffe8 	addiu	sp,sp,-24
800056b8:	afb00010 	sw	s0,16(sp)
800056bc:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:88
 *    (2) we're often called from places like process exit
 *        where reporting the error is impossible and
 *        meaningful recovery is entirely impractical.
 */

	vop_open_dec(node);
800056c0:	0c00112a 	jal	800044a8 <inode_open_dec>
800056c4:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:89
	vop_ref_dec(node);
800056c8:	0c001171 	jal	800045c4 <inode_ref_dec>
800056cc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:91
	return 0;
}
800056d0:	8fbf0014 	lw	ra,20(sp)
800056d4:	00001021 	move	v0,zero
800056d8:	8fb00010 	lw	s0,16(sp)
800056dc:	03e00008 	jr	ra
800056e0:	27bd0018 	addiu	sp,sp,24

800056e4 <vfs_unlink>:
vfs_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:95

/* Does most of the work for unlink(). */
int vfs_unlink(char *path)
{
800056e4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:99
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
800056e8:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:95
	return 0;
}

/* Does most of the work for unlink(). */
int vfs_unlink(char *path)
{
800056ec:	afb00018 	sw	s0,24(sp)
800056f0:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:99
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
800056f4:	0c001777 	jal	80005ddc <vfs_lookup_parent>
800056f8:	27a60014 	addiu	a2,sp,20
800056fc:	14400015 	bnez	v0,80005754 <vfs_unlink+0x70>
80005700:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:102
		return ret;
	}
	ret = vop_unlink(dir, name);
80005704:	8fb00010 	lw	s0,16(sp)
80005708:	12000017 	beqz	s0,80005768 <vfs_unlink+0x84>
8000570c:	3c048002 	lui	a0,0x8002
80005710:	8e020048 	lw	v0,72(s0)
80005714:	10400015 	beqz	v0,8000576c <vfs_unlink+0x88>
80005718:	3c068002 	lui	a2,0x8002
8000571c:	8c420050 	lw	v0,80(v0)
80005720:	10400011 	beqz	v0,80005768 <vfs_unlink+0x84>
80005724:	3c058002 	lui	a1,0x8002
80005728:	02002021 	move	a0,s0
8000572c:	0c0010f2 	jal	800043c8 <inode_check>
80005730:	24a51a84 	addiu	a1,a1,6788
80005734:	8e020048 	lw	v0,72(s0)
80005738:	8fa40010 	lw	a0,16(sp)
8000573c:	8c420050 	lw	v0,80(v0)
80005740:	0040f809 	jalr	v0
80005744:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:103
	vop_ref_dec(dir);
80005748:	8fa40010 	lw	a0,16(sp)
8000574c:	0c001171 	jal	800045c4 <inode_ref_dec>
80005750:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:105
	return ret;
}
80005754:	8fbf001c 	lw	ra,28(sp)
80005758:	02001021 	move	v0,s0
8000575c:	8fb00018 	lw	s0,24(sp)
80005760:	03e00008 	jr	ra
80005764:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:102
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
		return ret;
	}
	ret = vop_unlink(dir, name);
80005768:	3c068002 	lui	a2,0x8002
8000576c:	3c078002 	lui	a3,0x8002
80005770:	24841918 	addiu	a0,a0,6424
80005774:	24050066 	li	a1,102
80005778:	24c60e48 	addiu	a2,a2,3656
8000577c:	0c006b13 	jal	8001ac4c <__panic>
80005780:	24e71a34 	addiu	a3,a3,6708

80005784 <vfs_rename>:
vfs_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:109
	return ret;
}

/* Does most of the work for rename(). */
int vfs_rename(char *old_path, char *new_path)
{
80005784:	27bdffd0 	addiu	sp,sp,-48
80005788:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:113
	int ret;
	char *old_name, *new_name;
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
8000578c:	27a6001c 	addiu	a2,sp,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:109
	return ret;
}

/* Does most of the work for rename(). */
int vfs_rename(char *old_path, char *new_path)
{
80005790:	00a08021 	move	s0,a1
80005794:	afb10028 	sw	s1,40(sp)
80005798:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:113
	int ret;
	char *old_name, *new_name;
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
8000579c:	0c001777 	jal	80005ddc <vfs_lookup_parent>
800057a0:	27a50014 	addiu	a1,sp,20
800057a4:	10400007 	beqz	v0,800057c4 <vfs_rename+0x40>
800057a8:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:129
		ret = vop_rename(old_dir, old_name, new_dir, new_name);
	}
	vop_ref_dec(old_dir);
	vop_ref_dec(new_dir);
	return ret;
}
800057ac:	8fbf002c 	lw	ra,44(sp)
800057b0:	02201021 	move	v0,s1
800057b4:	8fb00024 	lw	s0,36(sp)
800057b8:	8fb10028 	lw	s1,40(sp)
800057bc:	03e00008 	jr	ra
800057c0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:116
	char *old_name, *new_name;
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
		return ret;
	}
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
800057c4:	02002021 	move	a0,s0
800057c8:	27a50010 	addiu	a1,sp,16
800057cc:	0c001777 	jal	80005ddc <vfs_lookup_parent>
800057d0:	27a60018 	addiu	a2,sp,24
800057d4:	14400013 	bnez	v0,80005824 <vfs_rename+0xa0>
800057d8:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:121
		vop_ref_dec(old_dir);
		return ret;
	}

	if (old_dir->in_fs == NULL || old_dir->in_fs != new_dir->in_fs) {
800057dc:	8fb00014 	lw	s0,20(sp)
800057e0:	8e020044 	lw	v0,68(s0)
800057e4:	10400005 	beqz	v0,800057fc <vfs_rename+0x78>
800057e8:	2411ffee 	li	s1,-18
800057ec:	8fa30010 	lw	v1,16(sp)
800057f0:	8c630044 	lw	v1,68(v1)
800057f4:	5043000f 	beql	v0,v1,80005834 <vfs_rename+0xb0>
800057f8:	8e020048 	lw	v0,72(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:126
		ret = -E_XDEV;
	} else {
		ret = vop_rename(old_dir, old_name, new_dir, new_name);
	}
	vop_ref_dec(old_dir);
800057fc:	0c001171 	jal	800045c4 <inode_ref_dec>
80005800:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:127
	vop_ref_dec(new_dir);
80005804:	0c001171 	jal	800045c4 <inode_ref_dec>
80005808:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:129
	return ret;
}
8000580c:	8fbf002c 	lw	ra,44(sp)
80005810:	02201021 	move	v0,s1
80005814:	8fb00024 	lw	s0,36(sp)
80005818:	8fb10028 	lw	s1,40(sp)
8000581c:	03e00008 	jr	ra
80005820:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:117
	struct inode *old_dir, *new_dir;
	if ((ret = vfs_lookup_parent(old_path, &old_dir, &old_name)) != 0) {
		return ret;
	}
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
		vop_ref_dec(old_dir);
80005824:	0c001171 	jal	800045c4 <inode_ref_dec>
80005828:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:118
		return ret;
8000582c:	080015ec 	j	800057b0 <vfs_rename+0x2c>
80005830:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:124
	}

	if (old_dir->in_fs == NULL || old_dir->in_fs != new_dir->in_fs) {
		ret = -E_XDEV;
	} else {
		ret = vop_rename(old_dir, old_name, new_dir, new_name);
80005834:	10400011 	beqz	v0,8000587c <vfs_rename+0xf8>
80005838:	3c048002 	lui	a0,0x8002
8000583c:	8c420024 	lw	v0,36(v0)
80005840:	1040000e 	beqz	v0,8000587c <vfs_rename+0xf8>
80005844:	3c058002 	lui	a1,0x8002
80005848:	02002021 	move	a0,s0
8000584c:	0c0010f2 	jal	800043c8 <inode_check>
80005850:	24a51adc 	addiu	a1,a1,6876
80005854:	8e020048 	lw	v0,72(s0)
80005858:	8fa40014 	lw	a0,20(sp)
8000585c:	8fa5001c 	lw	a1,28(sp)
80005860:	8c420024 	lw	v0,36(v0)
80005864:	8fa60010 	lw	a2,16(sp)
80005868:	0040f809 	jalr	v0
8000586c:	8fa70018 	lw	a3,24(sp)
80005870:	00408821 	move	s1,v0
80005874:	080015ff 	j	800057fc <vfs_rename+0x78>
80005878:	8fb00014 	lw	s0,20(sp)
8000587c:	3c068002 	lui	a2,0x8002
80005880:	3c078002 	lui	a3,0x8002
80005884:	24841918 	addiu	a0,a0,6424
80005888:	2405007c 	li	a1,124
8000588c:	24c60e48 	addiu	a2,a2,3656
80005890:	0c006b13 	jal	8001ac4c <__panic>
80005894:	24e71a8c 	addiu	a3,a3,6796

80005898 <vfs_link>:
vfs_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:133
	return ret;
}

/* Does most of the work for link(). */
int vfs_link(char *old_path, char *new_path)
{
80005898:	27bdffd0 	addiu	sp,sp,-48
8000589c:	afb00024 	sw	s0,36(sp)
800058a0:	00a08021 	move	s0,a1
800058a4:	afb10028 	sw	s1,40(sp)
800058a8:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:137
	int ret;
	char *new_name;
	struct inode *old_node, *new_dir;
	if ((ret = vfs_lookup(old_path, &old_node)) != 0) {
800058ac:	0c00173f 	jal	80005cfc <vfs_lookup>
800058b0:	27a50014 	addiu	a1,sp,20
800058b4:	10400007 	beqz	v0,800058d4 <vfs_link+0x3c>
800058b8:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:153
		ret = vop_link(new_dir, new_name, old_node);
	}
	vop_ref_dec(old_node);
	vop_ref_dec(new_dir);
	return ret;
}
800058bc:	8fbf002c 	lw	ra,44(sp)
800058c0:	02201021 	move	v0,s1
800058c4:	8fb00024 	lw	s0,36(sp)
800058c8:	8fb10028 	lw	s1,40(sp)
800058cc:	03e00008 	jr	ra
800058d0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:140
	char *new_name;
	struct inode *old_node, *new_dir;
	if ((ret = vfs_lookup(old_path, &old_node)) != 0) {
		return ret;
	}
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
800058d4:	02002021 	move	a0,s0
800058d8:	27a50010 	addiu	a1,sp,16
800058dc:	0c001777 	jal	80005ddc <vfs_lookup_parent>
800058e0:	27a60018 	addiu	a2,sp,24
800058e4:	00408821 	move	s1,v0
800058e8:	1440000a 	bnez	v0,80005914 <vfs_link+0x7c>
800058ec:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:145
		vop_ref_dec(old_node);
		return ret;
	}

	if (old_node->in_fs == NULL || old_node->in_fs != new_dir->in_fs) {
800058f0:	8c820044 	lw	v0,68(a0)
800058f4:	10400021 	beqz	v0,8000597c <vfs_link+0xe4>
800058f8:	8fb00010 	lw	s0,16(sp)
800058fc:	8e030044 	lw	v1,68(s0)
80005900:	1043000c 	beq	v0,v1,80005934 <vfs_link+0x9c>
80005904:	2411ffee 	li	s1,-18
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:150
		ret = -E_XDEV;
	} else {
		ret = vop_link(new_dir, new_name, old_node);
	}
	vop_ref_dec(old_node);
80005908:	0c001171 	jal	800045c4 <inode_ref_dec>
8000590c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:151
	vop_ref_dec(new_dir);
80005910:	8fa40010 	lw	a0,16(sp)
80005914:	0c001171 	jal	800045c4 <inode_ref_dec>
80005918:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:153
	return ret;
}
8000591c:	8fbf002c 	lw	ra,44(sp)
80005920:	02201021 	move	v0,s1
80005924:	8fb00024 	lw	s0,36(sp)
80005928:	8fb10028 	lw	s1,40(sp)
8000592c:	03e00008 	jr	ra
80005930:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:148
	}

	if (old_node->in_fs == NULL || old_node->in_fs != new_dir->in_fs) {
		ret = -E_XDEV;
	} else {
		ret = vop_link(new_dir, new_name, old_node);
80005934:	8e020048 	lw	v0,72(s0)
80005938:	10400012 	beqz	v0,80005984 <vfs_link+0xec>
8000593c:	3c048002 	lui	a0,0x8002
80005940:	8c420020 	lw	v0,32(v0)
80005944:	1040000f 	beqz	v0,80005984 <vfs_link+0xec>
80005948:	3c058002 	lui	a1,0x8002
8000594c:	02002021 	move	a0,s0
80005950:	0c0010f2 	jal	800043c8 <inode_check>
80005954:	24a51be4 	addiu	a1,a1,7140
80005958:	8e020048 	lw	v0,72(s0)
8000595c:	8fa40010 	lw	a0,16(sp)
80005960:	8fa50018 	lw	a1,24(sp)
80005964:	8c420020 	lw	v0,32(v0)
80005968:	0040f809 	jalr	v0
8000596c:	8fa60014 	lw	a2,20(sp)
80005970:	00408821 	move	s1,v0
80005974:	08001642 	j	80005908 <vfs_link+0x70>
80005978:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:146
		vop_ref_dec(old_node);
		return ret;
	}

	if (old_node->in_fs == NULL || old_node->in_fs != new_dir->in_fs) {
		ret = -E_XDEV;
8000597c:	08001642 	j	80005908 <vfs_link+0x70>
80005980:	2411ffee 	li	s1,-18
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:148
	} else {
		ret = vop_link(new_dir, new_name, old_node);
80005984:	3c068002 	lui	a2,0x8002
80005988:	3c078002 	lui	a3,0x8002
8000598c:	24841918 	addiu	a0,a0,6424
80005990:	24050094 	li	a1,148
80005994:	24c60e48 	addiu	a2,a2,3656
80005998:	0c006b13 	jal	8001ac4c <__panic>
8000599c:	24e71ae4 	addiu	a3,a3,6884

800059a0 <vfs_symlink>:
vfs_symlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:163
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_symlink(char *old_path, char *new_path)
{
800059a0:	27bdffd8 	addiu	sp,sp,-40
800059a4:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:167
	int ret;
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
800059a8:	27a60014 	addiu	a2,sp,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:163
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_symlink(char *old_path, char *new_path)
{
800059ac:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:167
	int ret;
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
800059b0:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:163
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_symlink(char *old_path, char *new_path)
{
800059b4:	afb10020 	sw	s1,32(sp)
800059b8:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:167
	int ret;
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
800059bc:	0c001777 	jal	80005ddc <vfs_lookup_parent>
800059c0:	27a50010 	addiu	a1,sp,16
800059c4:	14400016 	bnez	v0,80005a20 <vfs_symlink+0x80>
800059c8:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:170
		return ret;
	}
	ret = vop_symlink(new_dir, new_name, old_path);
800059cc:	8fb10010 	lw	s1,16(sp)
800059d0:	12200019 	beqz	s1,80005a38 <vfs_symlink+0x98>
800059d4:	3c048002 	lui	a0,0x8002
800059d8:	8e220048 	lw	v0,72(s1)
800059dc:	10400017 	beqz	v0,80005a3c <vfs_symlink+0x9c>
800059e0:	3c068002 	lui	a2,0x8002
800059e4:	8c42002c 	lw	v0,44(v0)
800059e8:	10400013 	beqz	v0,80005a38 <vfs_symlink+0x98>
800059ec:	3c058002 	lui	a1,0x8002
800059f0:	02202021 	move	a0,s1
800059f4:	0c0010f2 	jal	800043c8 <inode_check>
800059f8:	24a51b84 	addiu	a1,a1,7044
800059fc:	8e220048 	lw	v0,72(s1)
80005a00:	8fa40010 	lw	a0,16(sp)
80005a04:	8fa50014 	lw	a1,20(sp)
80005a08:	8c42002c 	lw	v0,44(v0)
80005a0c:	0040f809 	jalr	v0
80005a10:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:171
	vop_ref_dec(new_dir);
80005a14:	8fa40010 	lw	a0,16(sp)
80005a18:	0c001171 	jal	800045c4 <inode_ref_dec>
80005a1c:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:173
	return ret;
}
80005a20:	8fbf0024 	lw	ra,36(sp)
80005a24:	02201021 	move	v0,s1
80005a28:	8fb0001c 	lw	s0,28(sp)
80005a2c:	8fb10020 	lw	s1,32(sp)
80005a30:	03e00008 	jr	ra
80005a34:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:170
	char *new_name;
	struct inode *new_dir;
	if ((ret = vfs_lookup_parent(new_path, &new_dir, &new_name)) != 0) {
		return ret;
	}
	ret = vop_symlink(new_dir, new_name, old_path);
80005a38:	3c068002 	lui	a2,0x8002
80005a3c:	3c078002 	lui	a3,0x8002
80005a40:	24841918 	addiu	a0,a0,6424
80005a44:	240500aa 	li	a1,170
80005a48:	24c60e48 	addiu	a2,a2,3656
80005a4c:	0c006b13 	jal	8001ac4c <__panic>
80005a50:	24e71b34 	addiu	a3,a3,6964

80005a54 <vfs_readlink>:
vfs_readlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:183
 * Note, however, if you're implementing symlinks, that various
 * other parts of the VFS layer are missing crucial elements of
 * support for symlinks.
 */
int vfs_readlink(char *path, struct iobuf *iob)
{
80005a54:	27bdffd8 	addiu	sp,sp,-40
80005a58:	afb0001c 	sw	s0,28(sp)
80005a5c:	00a08021 	move	s0,a1
80005a60:	afb10020 	sw	s1,32(sp)
80005a64:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:186
	int ret;
	struct inode *node;
	if ((ret = vfs_lookup(path, &node)) != 0) {
80005a68:	0c00173f 	jal	80005cfc <vfs_lookup>
80005a6c:	27a50010 	addiu	a1,sp,16
80005a70:	14400015 	bnez	v0,80005ac8 <vfs_readlink+0x74>
80005a74:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:189
		return ret;
	}
	ret = vop_readlink(node, iob);
80005a78:	8fb10010 	lw	s1,16(sp)
80005a7c:	12200018 	beqz	s1,80005ae0 <vfs_readlink+0x8c>
80005a80:	3c048002 	lui	a0,0x8002
80005a84:	8e220048 	lw	v0,72(s1)
80005a88:	10400016 	beqz	v0,80005ae4 <vfs_readlink+0x90>
80005a8c:	3c068002 	lui	a2,0x8002
80005a90:	8c420028 	lw	v0,40(v0)
80005a94:	10400012 	beqz	v0,80005ae0 <vfs_readlink+0x8c>
80005a98:	3c058002 	lui	a1,0x8002
80005a9c:	02202021 	move	a0,s1
80005aa0:	0c0010f2 	jal	800043c8 <inode_check>
80005aa4:	24a51be0 	addiu	a1,a1,7136
80005aa8:	8e220048 	lw	v0,72(s1)
80005aac:	8fa40010 	lw	a0,16(sp)
80005ab0:	8c420028 	lw	v0,40(v0)
80005ab4:	0040f809 	jalr	v0
80005ab8:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:190
	vop_ref_dec(node);
80005abc:	8fa40010 	lw	a0,16(sp)
80005ac0:	0c001171 	jal	800045c4 <inode_ref_dec>
80005ac4:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:192
	return ret;
}
80005ac8:	8fbf0024 	lw	ra,36(sp)
80005acc:	02201021 	move	v0,s1
80005ad0:	8fb0001c 	lw	s0,28(sp)
80005ad4:	8fb10020 	lw	s1,32(sp)
80005ad8:	03e00008 	jr	ra
80005adc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:189
	int ret;
	struct inode *node;
	if ((ret = vfs_lookup(path, &node)) != 0) {
		return ret;
	}
	ret = vop_readlink(node, iob);
80005ae0:	3c068002 	lui	a2,0x8002
80005ae4:	3c078002 	lui	a3,0x8002
80005ae8:	24841918 	addiu	a0,a0,6424
80005aec:	240500bd 	li	a1,189
80005af0:	24c60e48 	addiu	a2,a2,3656
80005af4:	0c006b13 	jal	8001ac4c <__panic>
80005af8:	24e71b8c 	addiu	a3,a3,7052

80005afc <vfs_mkdir>:
vfs_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:198

/*
 * Does most of the work for mkdir.
 */
int vfs_mkdir(char *path)
{
80005afc:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:202
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
80005b00:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:198

/*
 * Does most of the work for mkdir.
 */
int vfs_mkdir(char *path)
{
80005b04:	afb00018 	sw	s0,24(sp)
80005b08:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:202
	int ret;
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
80005b0c:	0c001777 	jal	80005ddc <vfs_lookup_parent>
80005b10:	27a60014 	addiu	a2,sp,20
80005b14:	14400015 	bnez	v0,80005b6c <vfs_mkdir+0x70>
80005b18:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:205
		return ret;
	}
	ret = vop_mkdir(dir, name);
80005b1c:	8fb00010 	lw	s0,16(sp)
80005b20:	12000017 	beqz	s0,80005b80 <vfs_mkdir+0x84>
80005b24:	3c048002 	lui	a0,0x8002
80005b28:	8e020048 	lw	v0,72(s0)
80005b2c:	10400015 	beqz	v0,80005b84 <vfs_mkdir+0x88>
80005b30:	3c068002 	lui	a2,0x8002
80005b34:	8c42001c 	lw	v0,28(v0)
80005b38:	10400011 	beqz	v0,80005b80 <vfs_mkdir+0x84>
80005b3c:	3c058002 	lui	a1,0x8002
80005b40:	02002021 	move	a0,s0
80005b44:	0c0010f2 	jal	800043c8 <inode_check>
80005b48:	24a51c3c 	addiu	a1,a1,7228
80005b4c:	8e020048 	lw	v0,72(s0)
80005b50:	8fa40010 	lw	a0,16(sp)
80005b54:	8c42001c 	lw	v0,28(v0)
80005b58:	0040f809 	jalr	v0
80005b5c:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:206
	vop_ref_dec(dir);
80005b60:	8fa40010 	lw	a0,16(sp)
80005b64:	0c001171 	jal	800045c4 <inode_ref_dec>
80005b68:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:208
	return ret;
}
80005b6c:	8fbf001c 	lw	ra,28(sp)
80005b70:	02001021 	move	v0,s0
80005b74:	8fb00018 	lw	s0,24(sp)
80005b78:	03e00008 	jr	ra
80005b7c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfsfile.c:205
	char *name;
	struct inode *dir;
	if ((ret = vfs_lookup_parent(path, &dir, &name)) != 0) {
		return ret;
	}
	ret = vop_mkdir(dir, name);
80005b80:	3c068002 	lui	a2,0x8002
80005b84:	3c078002 	lui	a3,0x8002
80005b88:	24841918 	addiu	a0,a0,6424
80005b8c:	240500cd 	li	a1,205
80005b90:	24c60e48 	addiu	a2,a2,3656
80005b94:	0c006b13 	jal	8001ac4c <__panic>
80005b98:	24e71bec 	addiu	a3,a3,7148

80005b9c <get_device>:
get_device():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:17
/*
 * Common code to pull the device name, if any, off the front of a
 * path and choose the inode to begin the name lookup relative to.
 */
static int get_device(char *path, char **subpath, struct inode **node_store)
{
80005b9c:	27bdffd8 	addiu	sp,sp,-40
80005ba0:	afb00020 	sw	s0,32(sp)
80005ba4:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:22
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
80005ba8:	90820000 	lbu	v0,0(a0)
80005bac:	10400011 	beqz	v0,80005bf4 <get_device+0x58>
80005bb0:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:23
		if (path[i] == ':') {
80005bb4:	2403003a 	li	v1,58
80005bb8:	10430023 	beq	v0,v1,80005c48 <get_device+0xac>
80005bbc:	2403002f 	li	v1,47
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:27
			colon = i;
			break;
		}
		if (path[i] == '/') {
80005bc0:	10430040 	beq	v0,v1,80005cc4 <get_device+0x128>
80005bc4:	24830001 	addiu	v1,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:23
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
		if (path[i] == ':') {
80005bc8:	2407003a 	li	a3,58
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:22
{
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
80005bcc:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:27
		if (path[i] == ':') {
			colon = i;
			break;
		}
		if (path[i] == '/') {
80005bd0:	080016fa 	j	80005be8 <get_device+0x4c>
80005bd4:	2408002f 	li	t0,47
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:23
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
		if (path[i] == ':') {
80005bd8:	5047000b 	beql	v0,a3,80005c08 <get_device+0x6c>
80005bdc:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:27
			colon = i;
			break;
		}
		if (path[i] == '/') {
80005be0:	10480004 	beq	v0,t0,80005bf4 <get_device+0x58>
80005be4:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:22
{
	int i, slash = -1, colon = -1;
	/*
	 * Locate the first colon or slash.
	 */
	for (i = 0; path[i] != '\0'; i++) {
80005be8:	90620000 	lbu	v0,0(v1)
80005bec:	1440fffa 	bnez	v0,80005bd8 <get_device+0x3c>
80005bf0:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:38
		/* *
		 * No colon before a slash, so no device name specified, and the slash isn't leading
		 * or is also absent, so this is a relative path or just a bare filename. Start from
		 * the current directory, and use the whole thing as the subpath.
		 * */
		*subpath = path;
80005bf4:	acb00000 	sw	s0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:39
		return vfs_get_curdir(node_store);
80005bf8:	0c0017ac 	jal	80005eb0 <vfs_get_curdir>
80005bfc:	00c02021 	move	a0,a2
80005c00:	0800170f 	j	80005c3c <get_device+0xa0>
80005c04:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:43
	}
	if (colon > 0) {
		/* device:path - get root of device's filesystem */
		path[colon] = '\0';
80005c08:	a0600000 	sb	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:16

/*
 * Common code to pull the device name, if any, off the front of a
 * path and choose the inode to begin the name lookup relative to.
 */
static int get_device(char *path, char **subpath, struct inode **node_store)
80005c0c:	02042021 	addu	a0,s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:46
	if (colon > 0) {
		/* device:path - get root of device's filesystem */
		path[colon] = '\0';

		/* device:/path - skip slash, treat as device:path */
		while (path[++colon] == '/') ;
80005c10:	2407002f 	li	a3,47
80005c14:	00801821 	move	v1,a0
80005c18:	24840001 	addiu	a0,a0,1
80005c1c:	9082ffff 	lbu	v0,-1(a0)
80005c20:	5047fffd 	beql	v0,a3,80005c18 <get_device+0x7c>
80005c24:	00801821 	move	v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:48

		*subpath = path + colon;
80005c28:	aca30000 	sw	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:49
		return vfs_get_root(path, node_store);
80005c2c:	02002021 	move	a0,s0
80005c30:	0c0013e7 	jal	80004f9c <vfs_get_root>
80005c34:	00c02821 	move	a1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:78

	/* ///... or :/... */
	while (*(++path) == '/') ;
	*subpath = path;
	return 0;
}
80005c38:	8fbf0024 	lw	ra,36(sp)
80005c3c:	8fb00020 	lw	s0,32(sp)
80005c40:	03e00008 	jr	ra
80005c44:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:65
			return ret;
		}
	} else {
		assert(*path == ':');
		struct inode *node;
		if ((ret = vfs_get_curdir(&node)) != 0) {
80005c48:	27a40010 	addiu	a0,sp,16
80005c4c:	afa5001c 	sw	a1,28(sp)
80005c50:	0c0017ac 	jal	80005eb0 <vfs_get_curdir>
80005c54:	afa60018 	sw	a2,24(sp)
80005c58:	8fa5001c 	lw	a1,28(sp)
80005c5c:	1440fff6 	bnez	v0,80005c38 <get_device+0x9c>
80005c60:	8fa60018 	lw	a2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:69
			return ret;
		}
		/* The current directory may not be a device, so it must have a fs. */
		assert(node->in_fs != NULL);
80005c64:	8fa20010 	lw	v0,16(sp)
80005c68:	8c440044 	lw	a0,68(v0)
80005c6c:	5080001c 	beqzl	a0,80005ce0 <get_device+0x144>
80005c70:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:70
		*node_store = fsop_get_root(node->in_fs);
80005c74:	8c82008c 	lw	v0,140(a0)
80005c78:	afa5001c 	sw	a1,28(sp)
80005c7c:	0040f809 	jalr	v0
80005c80:	afa60018 	sw	a2,24(sp)
80005c84:	8fa60018 	lw	a2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:71
		vop_ref_dec(node);
80005c88:	8fa40010 	lw	a0,16(sp)
80005c8c:	0c001171 	jal	800045c4 <inode_ref_dec>
80005c90:	acc20000 	sw	v0,0(a2)
80005c94:	8fa5001c 	lw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:75
	}

	/* ///... or :/... */
	while (*(++path) == '/') ;
80005c98:	2403002f 	li	v1,47
80005c9c:	26100001 	addiu	s0,s0,1
80005ca0:	92020000 	lbu	v0,0(s0)
80005ca4:	5043fffe 	beql	v0,v1,80005ca0 <get_device+0x104>
80005ca8:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:78
	*subpath = path;
	return 0;
}
80005cac:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:76
		vop_ref_dec(node);
	}

	/* ///... or :/... */
	while (*(++path) == '/') ;
	*subpath = path;
80005cb0:	acb00000 	sw	s0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:77
	return 0;
80005cb4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:78
}
80005cb8:	8fb00020 	lw	s0,32(sp)
80005cbc:	03e00008 	jr	ra
80005cc0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:59
	 * /path is a path relative to the root of the "boot filesystem"
	 * :path is a path relative to the root of the current filesystem
	 * */
	int ret;
	if (*path == '/') {
		if ((ret = vfs_get_bootfs(node_store)) != 0) {
80005cc4:	00c02021 	move	a0,a2
80005cc8:	0c0011ff 	jal	800047fc <vfs_get_bootfs>
80005ccc:	afa5001c 	sw	a1,28(sp)
80005cd0:	1040fff1 	beqz	v0,80005c98 <get_device+0xfc>
80005cd4:	8fa5001c 	lw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:78

	/* ///... or :/... */
	while (*(++path) == '/') ;
	*subpath = path;
	return 0;
}
80005cd8:	0800170f 	j	80005c3c <get_device+0xa0>
80005cdc:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:69
		struct inode *node;
		if ((ret = vfs_get_curdir(&node)) != 0) {
			return ret;
		}
		/* The current directory may not be a device, so it must have a fs. */
		assert(node->in_fs != NULL);
80005ce0:	3c068002 	lui	a2,0x8002
80005ce4:	3c078002 	lui	a3,0x8002
80005ce8:	24841c44 	addiu	a0,a0,7236
80005cec:	24050045 	li	a1,69
80005cf0:	24c60e48 	addiu	a2,a2,3656
80005cf4:	0c006b13 	jal	8001ac4c <__panic>
80005cf8:	24e71c50 	addiu	a3,a3,7248

80005cfc <vfs_lookup>:
vfs_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:86
 * Name-to-inode translation.
 * (In BSD, both of these are subsumed by namei().)
 */

int vfs_lookup(char *path, struct inode **node_store)
{
80005cfc:	27bdffd8 	addiu	sp,sp,-40
80005d00:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:89
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005d04:	27a60010 	addiu	a2,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:86
 * Name-to-inode translation.
 * (In BSD, both of these are subsumed by namei().)
 */

int vfs_lookup(char *path, struct inode **node_store)
{
80005d08:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:89
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005d0c:	27a50028 	addiu	a1,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:86
 * Name-to-inode translation.
 * (In BSD, both of these are subsumed by namei().)
 */

int vfs_lookup(char *path, struct inode **node_store)
{
80005d10:	afb10020 	sw	s1,32(sp)
80005d14:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:89
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005d18:	0c0016e7 	jal	80005b9c <get_device>
80005d1c:	afa40028 	sw	a0,40(sp)
80005d20:	1440001a 	bnez	v0,80005d8c <vfs_lookup+0x90>
80005d24:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:92
		return ret;
	}
	if (*path != '\0') {
80005d28:	8fa20028 	lw	v0,40(sp)
80005d2c:	90420000 	lbu	v0,0(v0)
80005d30:	1040001c 	beqz	v0,80005da4 <vfs_lookup+0xa8>
80005d34:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:93
		ret = vop_lookup(node, path, node_store);
80005d38:	8fb10010 	lw	s1,16(sp)
80005d3c:	12200020 	beqz	s1,80005dc0 <vfs_lookup+0xc4>
80005d40:	3c048002 	lui	a0,0x8002
80005d44:	8e220048 	lw	v0,72(s1)
80005d48:	1040001e 	beqz	v0,80005dc4 <vfs_lookup+0xc8>
80005d4c:	3c068002 	lui	a2,0x8002
80005d50:	8c420054 	lw	v0,84(v0)
80005d54:	1040001a 	beqz	v0,80005dc0 <vfs_lookup+0xc4>
80005d58:	3c058002 	lui	a1,0x8002
80005d5c:	02202021 	move	a0,s1
80005d60:	0c0010f2 	jal	800043c8 <inode_check>
80005d64:	24a51cb4 	addiu	a1,a1,7348
80005d68:	8e220048 	lw	v0,72(s1)
80005d6c:	8fa40010 	lw	a0,16(sp)
80005d70:	8fa50028 	lw	a1,40(sp)
80005d74:	8c420054 	lw	v0,84(v0)
80005d78:	0040f809 	jalr	v0
80005d7c:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:94
		vop_ref_dec(node);
80005d80:	8fa40010 	lw	a0,16(sp)
80005d84:	0c001171 	jal	800045c4 <inode_ref_dec>
80005d88:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:99
		return ret;
	}
	*node_store = node;
	return 0;
}
80005d8c:	8fbf0024 	lw	ra,36(sp)
80005d90:	02201021 	move	v0,s1
80005d94:	8fb0001c 	lw	s0,28(sp)
80005d98:	8fb10020 	lw	s1,32(sp)
80005d9c:	03e00008 	jr	ra
80005da0:	27bd0028 	addiu	sp,sp,40
80005da4:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:97
	if (*path != '\0') {
		ret = vop_lookup(node, path, node_store);
		vop_ref_dec(node);
		return ret;
	}
	*node_store = node;
80005da8:	ae020000 	sw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:99
	return 0;
}
80005dac:	02201021 	move	v0,s1
80005db0:	8fb0001c 	lw	s0,28(sp)
80005db4:	8fb10020 	lw	s1,32(sp)
80005db8:	03e00008 	jr	ra
80005dbc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:93
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
		return ret;
	}
	if (*path != '\0') {
		ret = vop_lookup(node, path, node_store);
80005dc0:	3c068002 	lui	a2,0x8002
80005dc4:	3c078002 	lui	a3,0x8002
80005dc8:	24841c44 	addiu	a0,a0,7236
80005dcc:	2405005d 	li	a1,93
80005dd0:	24c60e48 	addiu	a2,a2,3656
80005dd4:	0c006b13 	jal	8001ac4c <__panic>
80005dd8:	24e71c64 	addiu	a3,a3,7268

80005ddc <vfs_lookup_parent>:
vfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:102
	*node_store = node;
	return 0;
}

int vfs_lookup_parent(char *path, struct inode **node_store, char **endp)
{
80005ddc:	27bdffd8 	addiu	sp,sp,-40
80005de0:	afb1001c 	sw	s1,28(sp)
80005de4:	afb00018 	sw	s0,24(sp)
80005de8:	00a08821 	move	s1,a1
80005dec:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:105
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005df0:	27a50028 	addiu	a1,sp,40
80005df4:	27a60010 	addiu	a2,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:102
	*node_store = node;
	return 0;
}

int vfs_lookup_parent(char *path, struct inode **node_store, char **endp)
{
80005df8:	afb20020 	sw	s2,32(sp)
80005dfc:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:105
	int ret;
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
80005e00:	0c0016e7 	jal	80005b9c <get_device>
80005e04:	afa40028 	sw	a0,40(sp)
80005e08:	1440001b 	bnez	v0,80005e78 <vfs_lookup_parent+0x9c>
80005e0c:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:109
		return ret;
	}
	ret =
	    (*path != '\0') ? vop_lookup_parent(node, path, node_store,
80005e10:	8fa20028 	lw	v0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:110
						endp) : -E_INVAL;
80005e14:	90420000 	lbu	v0,0(v0)
80005e18:	10400015 	beqz	v0,80005e70 <vfs_lookup_parent+0x94>
80005e1c:	2412ffea 	li	s2,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:109
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
		return ret;
	}
	ret =
	    (*path != '\0') ? vop_lookup_parent(node, path, node_store,
80005e20:	8fb20010 	lw	s2,16(sp)
80005e24:	1240001b 	beqz	s2,80005e94 <vfs_lookup_parent+0xb8>
80005e28:	3c048002 	lui	a0,0x8002
80005e2c:	8e420048 	lw	v0,72(s2)
80005e30:	10400019 	beqz	v0,80005e98 <vfs_lookup_parent+0xbc>
80005e34:	3c068002 	lui	a2,0x8002
80005e38:	8c420058 	lw	v0,88(v0)
80005e3c:	10400015 	beqz	v0,80005e94 <vfs_lookup_parent+0xb8>
80005e40:	3c058002 	lui	a1,0x8002
80005e44:	02402021 	move	a0,s2
80005e48:	0c0010f2 	jal	800043c8 <inode_check>
80005e4c:	24a51d14 	addiu	a1,a1,7444
80005e50:	8e420048 	lw	v0,72(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:110
						endp) : -E_INVAL;
80005e54:	8fa40010 	lw	a0,16(sp)
80005e58:	8fa50028 	lw	a1,40(sp)
80005e5c:	8c420058 	lw	v0,88(v0)
80005e60:	02203021 	move	a2,s1
80005e64:	0040f809 	jalr	v0
80005e68:	02003821 	move	a3,s0
80005e6c:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:111
	vop_ref_dec(node);
80005e70:	0c001171 	jal	800045c4 <inode_ref_dec>
80005e74:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:113
	return ret;
}
80005e78:	8fbf0024 	lw	ra,36(sp)
80005e7c:	02401021 	move	v0,s2
80005e80:	8fb1001c 	lw	s1,28(sp)
80005e84:	8fb20020 	lw	s2,32(sp)
80005e88:	8fb00018 	lw	s0,24(sp)
80005e8c:	03e00008 	jr	ra
80005e90:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfslookup.c:109
	struct inode *node;
	if ((ret = get_device(path, &path, &node)) != 0) {
		return ret;
	}
	ret =
	    (*path != '\0') ? vop_lookup_parent(node, path, node_store,
80005e94:	3c068002 	lui	a2,0x8002
80005e98:	3c078002 	lui	a3,0x8002
80005e9c:	24841c44 	addiu	a0,a0,7236
80005ea0:	2405006e 	li	a1,110
80005ea4:	24c60e48 	addiu	a2,a2,3656
80005ea8:	0c006b13 	jal	8001ac4c <__panic>
80005eac:	24e71cbc 	addiu	a3,a3,7356

80005eb0 <vfs_get_curdir>:
get_cwd_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005eb0:	3c028015 	lui	v0,0x8015
80005eb4:	8c4377a4 	lw	v1,30628(v0)
vfs_get_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:38
 * 
 * We do not synchronize current->fs_struct->pwd, because it belongs exclusively
 * to its own process(or threads) with the holding lock.
 */
int vfs_get_curdir(struct inode **dir_store)
{
80005eb8:	27bdffe0 	addiu	sp,sp,-32
80005ebc:	afb00014 	sw	s0,20(sp)
get_cwd_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005ec0:	8c6300bc 	lw	v1,188(v1)
vfs_get_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:38
 * 
 * We do not synchronize current->fs_struct->pwd, because it belongs exclusively
 * to its own process(or threads) with the holding lock.
 */
int vfs_get_curdir(struct inode **dir_store)
{
80005ec4:	afb10018 	sw	s1,24(sp)
80005ec8:	afbf001c 	sw	ra,28(sp)
get_cwd_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005ecc:	8c700000 	lw	s0,0(v1)
vfs_get_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:38
 * 
 * We do not synchronize current->fs_struct->pwd, because it belongs exclusively
 * to its own process(or threads) with the holding lock.
 */
int vfs_get_curdir(struct inode **dir_store)
{
80005ed0:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:40
	struct inode *node;
	if ((node = get_cwd_nolock()) != NULL) {
80005ed4:	12000005 	beqz	s0,80005eec <vfs_get_curdir+0x3c>
80005ed8:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:41
		vop_ref_inc(node);
80005edc:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80005ee0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:42
		*dir_store = node;
80005ee4:	ae300000 	sw	s0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:43
		return 0;
80005ee8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:46
	}
	return -E_NOENT;
}
80005eec:	8fbf001c 	lw	ra,28(sp)
80005ef0:	8fb10018 	lw	s1,24(sp)
80005ef4:	8fb00014 	lw	s0,20(sp)
80005ef8:	03e00008 	jr	ra
80005efc:	27bd0020 	addiu	sp,sp,32

80005f00 <vfs_set_curdir>:
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:53
/*
 * Set current directory as a vnode.
 * The passed inode must in fact be a directory.
 */
int vfs_set_curdir(struct inode *dir)
{
80005f00:	27bdffd0 	addiu	sp,sp,-48
80005f04:	afb10024 	sw	s1,36(sp)
lock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:23
	pls_read(current)->fs_struct->pwd = pwd;
}

static void lock_cfs(void)
{
	lock_fs(pls_read(current)->fs_struct);
80005f08:	3c118015 	lui	s1,0x8015
80005f0c:	8e2277a4 	lw	v0,30628(s1)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:53
/*
 * Set current directory as a vnode.
 * The passed inode must in fact be a directory.
 */
int vfs_set_curdir(struct inode *dir)
{
80005f10:	afb00020 	sw	s0,32(sp)
80005f14:	00808021 	move	s0,a0
lock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:23
	pls_read(current)->fs_struct->pwd = pwd;
}

static void lock_cfs(void)
{
	lock_fs(pls_read(current)->fs_struct);
80005f18:	8c4400bc 	lw	a0,188(v0)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:53
/*
 * Set current directory as a vnode.
 * The passed inode must in fact be a directory.
 */
int vfs_set_curdir(struct inode *dir)
{
80005f1c:	afb20028 	sw	s2,40(sp)
80005f20:	afbf002c 	sw	ra,44(sp)
lock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:23
	pls_read(current)->fs_struct->pwd = pwd;
}

static void lock_cfs(void)
{
	lock_fs(pls_read(current)->fs_struct);
80005f24:	0c00327f 	jal	8000c9fc <lock_fs>
80005f28:	00000000 	nop
get_cwd_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:13
#include <error.h>
#include <assert.h>

static struct inode *get_cwd_nolock(void)
{
	return pls_read(current)->fs_struct->pwd;
80005f2c:	8e2277a4 	lw	v0,30628(s1)
80005f30:	8c4400bc 	lw	a0,188(v0)
80005f34:	8c920000 	lw	s2,0(a0)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:57
int vfs_set_curdir(struct inode *dir)
{
	int ret = 0;
	lock_cfs();
	struct inode *old_dir;
	if ((old_dir = get_cwd_nolock()) != dir) {
80005f38:	52120022 	beql	s0,s2,80005fc4 <vfs_set_curdir+0xc4>
80005f3c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:58
		if (dir != NULL) {
80005f40:	12000019 	beqz	s0,80005fa8 <vfs_set_curdir+0xa8>
80005f44:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:60
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
80005f48:	8e020048 	lw	v0,72(s0)
80005f4c:	10400047 	beqz	v0,8000606c <vfs_set_curdir+0x16c>
80005f50:	3c048002 	lui	a0,0x8002
80005f54:	8c420040 	lw	v0,64(v0)
80005f58:	10400044 	beqz	v0,8000606c <vfs_set_curdir+0x16c>
80005f5c:	3c058002 	lui	a1,0x8002
80005f60:	02002021 	move	a0,s0
80005f64:	0c0010f2 	jal	800043c8 <inode_check>
80005f68:	24a51060 	addiu	a1,a1,4192
80005f6c:	8e020048 	lw	v0,72(s0)
80005f70:	02002021 	move	a0,s0
80005f74:	8c420040 	lw	v0,64(v0)
80005f78:	0040f809 	jalr	v0
80005f7c:	27a50010 	addiu	a1,sp,16
80005f80:	14400019 	bnez	v0,80005fe8 <vfs_set_curdir+0xe8>
80005f84:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:63
				goto out;
			}
			if (!S_ISDIR(type)) {
80005f88:	24024000 	li	v0,16384
80005f8c:	3063f000 	andi	v1,v1,0xf000
80005f90:	1462002b 	bne	v1,v0,80006040 <vfs_set_curdir+0x140>
80005f94:	8e2377a4 	lw	v1,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:67
				ret = -E_NOTDIR;
				goto out;
			}
			vop_ref_inc(dir);
80005f98:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80005f9c:	02002021 	move	a0,s0
80005fa0:	8e2277a4 	lw	v0,30628(s1)
80005fa4:	8c4400bc 	lw	a0,188(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:70
		}
		set_cwd_nolock(dir);
		if (old_dir != NULL) {
80005fa8:	1240001a 	beqz	s2,80006014 <vfs_set_curdir+0x114>
80005fac:	ac900000 	sw	s0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:71
			vop_ref_dec(old_dir);
80005fb0:	0c001171 	jal	800045c4 <inode_ref_dec>
80005fb4:	02402021 	move	a0,s2
80005fb8:	8e2377a4 	lw	v1,30628(s1)
80005fbc:	00001021 	move	v0,zero
80005fc0:	8c6400bc 	lw	a0,188(v1)
unlock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80005fc4:	0c003281 	jal	8000ca04 <unlock_fs>
80005fc8:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80005fcc:	8fbf002c 	lw	ra,44(sp)
80005fd0:	8fa20018 	lw	v0,24(sp)
80005fd4:	8fb20028 	lw	s2,40(sp)
80005fd8:	8fb10024 	lw	s1,36(sp)
80005fdc:	8fb00020 	lw	s0,32(sp)
80005fe0:	03e00008 	jr	ra
80005fe4:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:60
	lock_cfs();
	struct inode *old_dir;
	if ((old_dir = get_cwd_nolock()) != dir) {
		if (dir != NULL) {
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
80005fe8:	8e2377a4 	lw	v1,30628(s1)
80005fec:	8c6400bc 	lw	a0,188(v1)
unlock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80005ff0:	0c003281 	jal	8000ca04 <unlock_fs>
80005ff4:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80005ff8:	8fbf002c 	lw	ra,44(sp)
80005ffc:	8fa20018 	lw	v0,24(sp)
80006000:	8fb20028 	lw	s2,40(sp)
80006004:	8fb10024 	lw	s1,36(sp)
80006008:	8fb00020 	lw	s0,32(sp)
8000600c:	03e00008 	jr	ra
80006010:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:70
				goto out;
			}
			vop_ref_inc(dir);
		}
		set_cwd_nolock(dir);
		if (old_dir != NULL) {
80006014:	8c4400bc 	lw	a0,188(v0)
80006018:	00001021 	move	v0,zero
unlock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
8000601c:	0c003281 	jal	8000ca04 <unlock_fs>
80006020:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80006024:	8fbf002c 	lw	ra,44(sp)
80006028:	8fa20018 	lw	v0,24(sp)
8000602c:	8fb20028 	lw	s2,40(sp)
80006030:	8fb10024 	lw	s1,36(sp)
80006034:	8fb00020 	lw	s0,32(sp)
80006038:	03e00008 	jr	ra
8000603c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:64
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
				goto out;
			}
			if (!S_ISDIR(type)) {
				ret = -E_NOTDIR;
80006040:	2402ffec 	li	v0,-20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:63
		if (dir != NULL) {
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
				goto out;
			}
			if (!S_ISDIR(type)) {
80006044:	8c6400bc 	lw	a0,188(v1)
unlock_cfs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:28
	lock_fs(pls_read(current)->fs_struct);
}

static void unlock_cfs(void)
{
	unlock_fs(pls_read(current)->fs_struct);
80006048:	0c003281 	jal	8000ca04 <unlock_fs>
8000604c:	afa20018 	sw	v0,24(sp)
vfs_set_curdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:77
		}
	}
out:
	unlock_cfs();
	return ret;
}
80006050:	8fbf002c 	lw	ra,44(sp)
80006054:	8fa20018 	lw	v0,24(sp)
80006058:	8fb20028 	lw	s2,40(sp)
8000605c:	8fb10024 	lw	s1,36(sp)
80006060:	8fb00020 	lw	s0,32(sp)
80006064:	03e00008 	jr	ra
80006068:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:60
	lock_cfs();
	struct inode *old_dir;
	if ((old_dir = get_cwd_nolock()) != dir) {
		if (dir != NULL) {
			uint32_t type;
			if ((ret = vop_gettype(dir, &type)) != 0) {
8000606c:	3c068002 	lui	a2,0x8002
80006070:	3c078002 	lui	a3,0x8002
80006074:	24841d24 	addiu	a0,a0,7460
80006078:	2405003c 	li	a1,60
8000607c:	24c60e48 	addiu	a2,a2,3656
80006080:	0c006b13 	jal	8001ac4c <__panic>
80006084:	24e71010 	addiu	a3,a3,4112

80006088 <vfs_chdir>:
vfs_chdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:84
/*
 * Set current directory, as a pathname. Use vfs_lookup to translate
 * it to a inode.
 */
int vfs_chdir(char *path)
{
80006088:	27bdffe0 	addiu	sp,sp,-32
8000608c:	afb00018 	sw	s0,24(sp)
80006090:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:87
	int ret;
	struct inode *node;
	if ((ret = vfs_lookup(path, &node)) == 0) {
80006094:	0c00173f 	jal	80005cfc <vfs_lookup>
80006098:	27a50010 	addiu	a1,sp,16
8000609c:	14400006 	bnez	v0,800060b8 <vfs_chdir+0x30>
800060a0:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:88
		ret = vfs_set_curdir(node);
800060a4:	0c0017c0 	jal	80005f00 <vfs_set_curdir>
800060a8:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:89
		vop_ref_dec(node);
800060ac:	8fa40010 	lw	a0,16(sp)
800060b0:	0c001171 	jal	800045c4 <inode_ref_dec>
800060b4:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:92
	}
	return ret;
}
800060b8:	8fbf001c 	lw	ra,28(sp)
800060bc:	02001021 	move	v0,s0
800060c0:	8fb00018 	lw	s0,24(sp)
800060c4:	03e00008 	jr	ra
800060c8:	27bd0020 	addiu	sp,sp,32

800060cc <vfs_getcwd>:
vfs_getcwd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:99
/*
 * Get current directory, as a pathname.
 * Use vop_namefile to get the pathname.
 */
int vfs_getcwd(struct iobuf *iob)
{
800060cc:	27bdffc8 	addiu	sp,sp,-56
800060d0:	afb0002c 	sw	s0,44(sp)
800060d4:	00808021 	move	s0,a0
800060d8:	afb10030 	sw	s1,48(sp)
800060dc:	afbf0034 	sw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:102
	int ret;
	struct inode *node;
	if ((ret = vfs_get_curdir(&node)) != 0) {
800060e0:	0c0017ac 	jal	80005eb0 <vfs_get_curdir>
800060e4:	27a4001c 	addiu	a0,sp,28
800060e8:	14400014 	bnez	v0,8000613c <vfs_getcwd+0x70>
800060ec:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:106
		return ret;
	}
	/* The current dir must be a directory, and thus it is not a device. */
	assert(node->in_fs != NULL);
800060f0:	8fa2001c 	lw	v0,28(sp)
800060f4:	8c440044 	lw	a0,68(v0)
800060f8:	5080003a 	beqzl	a0,800061e4 <vfs_getcwd+0x118>
800060fc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:108

	const char *devname = vfs_get_devname(node->in_fs);
80006100:	0c001424 	jal	80005090 <vfs_get_devname>
80006104:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:110
	if ((ret =
	     iobuf_move(iob, (char *)devname, strlen(devname), 1, NULL)) != 0) {
80006108:	00402021 	move	a0,v0
8000610c:	0c005b81 	jal	80016e04 <strlen>
80006110:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:109
	}
	/* The current dir must be a directory, and thus it is not a device. */
	assert(node->in_fs != NULL);

	const char *devname = vfs_get_devname(node->in_fs);
	if ((ret =
80006114:	8fa50020 	lw	a1,32(sp)
80006118:	00403021 	move	a2,v0
8000611c:	02002021 	move	a0,s0
80006120:	24070001 	li	a3,1
80006124:	0c003387 	jal	8000ce1c <iobuf_move>
80006128:	afa00010 	sw	zero,16(sp)
8000612c:	10400009 	beqz	v0,80006154 <vfs_getcwd+0x88>
80006130:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:120
		goto out;
	}
	ret = vop_namefile(node, iob);

out:
	vop_ref_dec(node);
80006134:	0c001171 	jal	800045c4 <inode_ref_dec>
80006138:	8fa4001c 	lw	a0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:122
	return ret;
}
8000613c:	8fbf0034 	lw	ra,52(sp)
80006140:	02201021 	move	v0,s1
80006144:	8fb0002c 	lw	s0,44(sp)
80006148:	8fb10030 	lw	s1,48(sp)
8000614c:	03e00008 	jr	ra
80006150:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:113
	const char *devname = vfs_get_devname(node->in_fs);
	if ((ret =
	     iobuf_move(iob, (char *)devname, strlen(devname), 1, NULL)) != 0) {
		goto out;
	}
	char colon = ':';
80006154:	2402003a 	li	v0,58
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:114
	if ((ret = iobuf_move(iob, &colon, sizeof(colon), 1, NULL)) != 0) {
80006158:	02002021 	move	a0,s0
8000615c:	27a50018 	addiu	a1,sp,24
80006160:	24060001 	li	a2,1
80006164:	24070001 	li	a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:113
	const char *devname = vfs_get_devname(node->in_fs);
	if ((ret =
	     iobuf_move(iob, (char *)devname, strlen(devname), 1, NULL)) != 0) {
		goto out;
	}
	char colon = ':';
80006168:	a3a20018 	sb	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:114
	if ((ret = iobuf_move(iob, &colon, sizeof(colon), 1, NULL)) != 0) {
8000616c:	0c003387 	jal	8000ce1c <iobuf_move>
80006170:	afa00010 	sw	zero,16(sp)
80006174:	1440ffef 	bnez	v0,80006134 <vfs_getcwd+0x68>
80006178:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:117
		goto out;
	}
	ret = vop_namefile(node, iob);
8000617c:	8fb1001c 	lw	s1,28(sp)
80006180:	12200011 	beqz	s1,800061c8 <vfs_getcwd+0xfc>
80006184:	3c048002 	lui	a0,0x8002
80006188:	8e220048 	lw	v0,72(s1)
8000618c:	1040000f 	beqz	v0,800061cc <vfs_getcwd+0x100>
80006190:	3c068002 	lui	a2,0x8002
80006194:	8c420030 	lw	v0,48(v0)
80006198:	1040000b 	beqz	v0,800061c8 <vfs_getcwd+0xfc>
8000619c:	3c058002 	lui	a1,0x8002
800061a0:	02202021 	move	a0,s1
800061a4:	0c0010f2 	jal	800043c8 <inode_check>
800061a8:	24a51d84 	addiu	a1,a1,7556
800061ac:	8e220048 	lw	v0,72(s1)
800061b0:	8fa4001c 	lw	a0,28(sp)
800061b4:	8c420030 	lw	v0,48(v0)
800061b8:	0040f809 	jalr	v0
800061bc:	02002821 	move	a1,s0
800061c0:	0800184d 	j	80006134 <vfs_getcwd+0x68>
800061c4:	00408821 	move	s1,v0
800061c8:	3c068002 	lui	a2,0x8002
800061cc:	3c078002 	lui	a3,0x8002
800061d0:	24841d24 	addiu	a0,a0,7460
800061d4:	24050075 	li	a1,117
800061d8:	24c60e48 	addiu	a2,a2,3656
800061dc:	0c006b13 	jal	8001ac4c <__panic>
800061e0:	24e71d30 	addiu	a3,a3,7472
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/vfs/vfspath.c:106
	struct inode *node;
	if ((ret = vfs_get_curdir(&node)) != 0) {
		return ret;
	}
	/* The current dir must be a directory, and thus it is not a device. */
	assert(node->in_fs != NULL);
800061e4:	3c068002 	lui	a2,0x8002
800061e8:	3c078002 	lui	a3,0x8002
800061ec:	24841d24 	addiu	a0,a0,7460
800061f0:	2405006a 	li	a1,106
800061f4:	24c60e48 	addiu	a2,a2,3656
800061f8:	0c006b13 	jal	8001ac4c <__panic>
800061fc:	24e71c50 	addiu	a3,a3,7248

80006200 <bitmap_create>:
bitmap_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:18
	uint32_t nwords;
	WORD_TYPE *map;
};

struct bitmap *bitmap_create(uint32_t nbits)
{
80006200:	27bdffd8 	addiu	sp,sp,-40
80006204:	afb00018 	sw	s0,24(sp)
80006208:	afbf0024 	sw	ra,36(sp)
8000620c:	afb20020 	sw	s2,32(sp)
80006210:	afb1001c 	sw	s1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:20
	static_assert(WORD_BITS != 0);
	assert(nbits != 0 && nbits + WORD_BITS > nbits);
80006214:	10800036 	beqz	a0,800062f0 <bitmap_create+0xf0>
80006218:	00808021 	move	s0,a0
8000621c:	24820020 	addiu	v0,a0,32
80006220:	0082102b 	sltu	v0,a0,v0
80006224:	10400033 	beqz	v0,800062f4 <bitmap_create+0xf4>
80006228:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:23

	struct bitmap *bitmap;
	if ((bitmap = kmalloc(sizeof(struct bitmap))) == NULL) {
8000622c:	0c00548e 	jal	80015238 <kmalloc>
80006230:	2404000c 	li	a0,12
80006234:	10400023 	beqz	v0,800062c4 <bitmap_create+0xc4>
80006238:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:27
		return NULL;
	}

	uint32_t nwords = ROUNDUP_DIV(nbits, WORD_BITS);
8000623c:	2612001f 	addiu	s2,s0,31
80006240:	00129142 	srl	s2,s2,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:29
	WORD_TYPE *map;
	if ((map = kmalloc(sizeof(WORD_TYPE) * nwords)) == NULL) {
80006244:	00123080 	sll	a2,s2,0x2
80006248:	00c02021 	move	a0,a2
8000624c:	0c00548e 	jal	80015238 <kmalloc>
80006250:	afa60010 	sw	a2,16(sp)
80006254:	10400022 	beqz	v0,800062e0 <bitmap_create+0xe0>
80006258:	8fa60010 	lw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:34
		kfree(bitmap);
		return NULL;
	}

	bitmap->nbits = nbits, bitmap->nwords = nwords;
8000625c:	ae300000 	sw	s0,0(s1)
80006260:	ae320004 	sw	s2,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:35
	bitmap->map = memset(map, 0xFF, sizeof(WORD_TYPE) * nwords);
80006264:	00402021 	move	a0,v0
80006268:	0c005c5a 	jal	80017168 <memset>
8000626c:	240500ff 	li	a1,255
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:38

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
80006270:	00121940 	sll	v1,s2,0x5
80006274:	10700013 	beq	v1,s0,800062c4 <bitmap_create+0xc4>
80006278:	ae220008 	sw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:41
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
8000627c:	00101942 	srl	v1,s0,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:39
	bitmap->nbits = nbits, bitmap->nwords = nwords;
	bitmap->map = memset(map, 0xFF, sizeof(WORD_TYPE) * nwords);

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;
80006280:	2652ffff 	addiu	s2,s2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:41

		assert(nbits / WORD_BITS == ix);
80006284:	1472002a 	bne	v1,s2,80006330 <bitmap_create+0x130>
80006288:	00032140 	sll	a0,v1,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:39
	bitmap->nbits = nbits, bitmap->nwords = nwords;
	bitmap->map = memset(map, 0xFF, sizeof(WORD_TYPE) * nwords);

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;
8000628c:	02048023 	subu	s0,s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:42

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);
80006290:	2604ffff 	addiu	a0,s0,-1
80006294:	2c84001f 	sltiu	a0,a0,31
80006298:	1080001d 	beqz	a0,80006310 <bitmap_create+0x110>
8000629c:	00031880 	sll	v1,v1,0x2
800062a0:	00431021 	addu	v0,v0,v1
800062a4:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:45

		for (; overbits < WORD_BITS; overbits++) {
			bitmap->map[ix] ^= (1 << overbits);
800062a8:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:44
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);

		for (; overbits < WORD_BITS; overbits++) {
800062ac:	24050020 	li	a1,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:45
			bitmap->map[ix] ^= (1 << overbits);
800062b0:	02062004 	sllv	a0,a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:44
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);

		for (; overbits < WORD_BITS; overbits++) {
800062b4:	26100001 	addiu	s0,s0,1
800062b8:	1605fffd 	bne	s0,a1,800062b0 <bitmap_create+0xb0>
800062bc:	00641826 	xor	v1,v1,a0
800062c0:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:49
			bitmap->map[ix] ^= (1 << overbits);
		}
	}
	return bitmap;
}
800062c4:	8fbf0024 	lw	ra,36(sp)
800062c8:	02201021 	move	v0,s1
800062cc:	8fb20020 	lw	s2,32(sp)
800062d0:	8fb1001c 	lw	s1,28(sp)
800062d4:	8fb00018 	lw	s0,24(sp)
800062d8:	03e00008 	jr	ra
800062dc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:30
	}

	uint32_t nwords = ROUNDUP_DIV(nbits, WORD_BITS);
	WORD_TYPE *map;
	if ((map = kmalloc(sizeof(WORD_TYPE) * nwords)) == NULL) {
		kfree(bitmap);
800062e0:	0c0054b9 	jal	800152e4 <kfree>
800062e4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:31
		return NULL;
800062e8:	080018b1 	j	800062c4 <bitmap_create+0xc4>
800062ec:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:20
};

struct bitmap *bitmap_create(uint32_t nbits)
{
	static_assert(WORD_BITS != 0);
	assert(nbits != 0 && nbits + WORD_BITS > nbits);
800062f0:	3c048002 	lui	a0,0x8002
800062f4:	3c068002 	lui	a2,0x8002
800062f8:	3c078002 	lui	a3,0x8002
800062fc:	24841d90 	addiu	a0,a0,7568
80006300:	24050014 	li	a1,20
80006304:	24c60e48 	addiu	a2,a2,3656
80006308:	0c006b13 	jal	8001ac4c <__panic>
8000630c:	24e71db4 	addiu	a3,a3,7604
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:42
	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
		assert(overbits > 0 && overbits < WORD_BITS);
80006310:	3c048002 	lui	a0,0x8002
80006314:	3c068002 	lui	a2,0x8002
80006318:	3c078002 	lui	a3,0x8002
8000631c:	24841d90 	addiu	a0,a0,7568
80006320:	2405002a 	li	a1,42
80006324:	24c60e48 	addiu	a2,a2,3656
80006328:	0c006b13 	jal	8001ac4c <__panic>
8000632c:	24e71df4 	addiu	a3,a3,7668
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:41

	/* mark any leftover bits at the end in use(0) */
	if (nbits != nwords * WORD_BITS) {
		uint32_t ix = nwords - 1, overbits = nbits - ix * WORD_BITS;

		assert(nbits / WORD_BITS == ix);
80006330:	3c048002 	lui	a0,0x8002
80006334:	3c068002 	lui	a2,0x8002
80006338:	3c078002 	lui	a3,0x8002
8000633c:	24841d90 	addiu	a0,a0,7568
80006340:	24050029 	li	a1,41
80006344:	24c60e48 	addiu	a2,a2,3656
80006348:	0c006b13 	jal	8001ac4c <__panic>
8000634c:	24e71ddc 	addiu	a3,a3,7644

80006350 <bitmap_alloc>:
bitmap_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:54
}

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
80006350:	8c820004 	lw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:52
	}
	return bitmap;
}

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
80006354:	27bdffe8 	addiu	sp,sp,-24
80006358:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:55
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
8000635c:	1040000d 	beqz	v0,80006394 <bitmap_alloc+0x44>
80006360:	8c870008 	lw	a3,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:56
		if (map[ix] != 0) {
80006364:	8ce60000 	lw	a2,0(a3)
80006368:	14c0000e 	bnez	a2,800063a4 <bitmap_alloc+0x54>
8000636c:	24e30004 	addiu	v1,a3,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:55

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
80006370:	080018e2 	j	80006388 <bitmap_alloc+0x38>
80006374:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:56
		if (map[ix] != 0) {
80006378:	24630004 	addiu	v1,v1,4
8000637c:	8c66fffc 	lw	a2,-4(v1)
80006380:	54c0000a 	bnezl	a2,800063ac <bitmap_alloc+0x5c>
80006384:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:55

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
80006388:	24840001 	addiu	a0,a0,1
8000638c:	5482fffa 	bnel	a0,v0,80006378 <bitmap_alloc+0x28>
80006390:	00603821 	move	a3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:69
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
}
80006394:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:68
				}
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
80006398:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:69
}
8000639c:	03e00008 	jr	ra
800063a0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:55

int bitmap_alloc(struct bitmap *bitmap, uint32_t * index_store)
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
800063a4:	00002021 	move	a0,zero
800063a8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:58
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
800063ac:	24090001 	li	t1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:57
{
	WORD_TYPE *map = bitmap->map;
	uint32_t ix, offset, nwords = bitmap->nwords;
	for (ix = 0; ix < nwords; ix++) {
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
800063b0:	080018f0 	j	800063c0 <bitmap_alloc+0x70>
800063b4:	240a0020 	li	t2,32
800063b8:	504a000e 	beql	v0,t2,800063f4 <bitmap_alloc+0xa4>
800063bc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:58
				WORD_TYPE mask = (1 << offset);
800063c0:	00491804 	sllv	v1,t1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:59
				if (map[ix] & mask) {
800063c4:	00664024 	and	t0,v1,a2
800063c8:	5100fffb 	beqzl	t0,800063b8 <bitmap_alloc+0x68>
800063cc:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:69
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
}
800063d0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:61
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
				if (map[ix] & mask) {
					map[ix] ^= mask;
					*index_store = ix * WORD_BITS + offset;
800063d4:	00042140 	sll	a0,a0,0x5
800063d8:	00442021 	addu	a0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:60
	for (ix = 0; ix < nwords; ix++) {
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
				if (map[ix] & mask) {
					map[ix] ^= mask;
800063dc:	00663026 	xor	a2,v1,a2
800063e0:	ace60000 	sw	a2,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:62
					*index_store = ix * WORD_BITS + offset;
					return 0;
800063e4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:61
		if (map[ix] != 0) {
			for (offset = 0; offset < WORD_BITS; offset++) {
				WORD_TYPE mask = (1 << offset);
				if (map[ix] & mask) {
					map[ix] ^= mask;
					*index_store = ix * WORD_BITS + offset;
800063e8:	aca40000 	sw	a0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:69
			}
			assert(0);
		}
	}
	return -E_NO_MEM;
}
800063ec:	03e00008 	jr	ra
800063f0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:65
					map[ix] ^= mask;
					*index_store = ix * WORD_BITS + offset;
					return 0;
				}
			}
			assert(0);
800063f4:	3c068002 	lui	a2,0x8002
800063f8:	3c078002 	lui	a3,0x8002
800063fc:	24841d90 	addiu	a0,a0,7568
80006400:	24050041 	li	a1,65
80006404:	24c60e48 	addiu	a2,a2,3656
80006408:	0c006b13 	jal	8001ac4c <__panic>
8000640c:	24e72434 	addiu	a3,a3,9268

80006410 <bitmap_test>:
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
80006410:	8c830000 	lw	v1,0(a0)
bitmap_test():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:82
	*word = bitmap->map + ix;
	*mask = (1 << offset);
}

bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
80006414:	27bdffe8 	addiu	sp,sp,-24
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
80006418:	00a3182b 	sltu	v1,a1,v1
8000641c:	1060000c 	beqz	v1,80006450 <bitmap_test+0x40>
80006420:	afbf0014 	sw	ra,20(sp)
bitmap_test():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:85

bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
80006424:	8c830008 	lw	v1,8(a0)
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:76
static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
80006428:	00051142 	srl	v0,a1,0x5
bitmap_test():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:85

bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
8000642c:	00021080 	sll	v0,v0,0x2
80006430:	00621021 	addu	v0,v1,v0
80006434:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:86
}
80006438:	8fbf0014 	lw	ra,20(sp)
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:78
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
	*word = bitmap->map + ix;
	*mask = (1 << offset);
8000643c:	24020001 	li	v0,1
80006440:	00a22804 	sllv	a1,v0,a1
bitmap_test():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:86
bool bitmap_test(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
}
80006444:	00a31024 	and	v0,a1,v1
80006448:	03e00008 	jr	ra
8000644c:	27bd0018 	addiu	sp,sp,24
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
80006450:	0c007f50 	jal	8001fd40 <bitmap_translate.part.0>
80006454:	00000000 	nop

80006458 <bitmap_free>:
80006458:	8c820000 	lw	v0,0(a0)
bitmap_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:89
	bitmap_translate(bitmap, index, &word, &mask);
	return (*word & mask);
}

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
8000645c:	27bdffe8 	addiu	sp,sp,-24
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
80006460:	00a2102b 	sltu	v0,a1,v0
80006464:	1040000f 	beqz	v0,800064a4 <bitmap_free+0x4c>
80006468:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:77
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
	*word = bitmap->map + ix;
8000646c:	8c830008 	lw	v1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:76
static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
80006470:	00051142 	srl	v0,a1,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:77
	*word = bitmap->map + ix;
80006474:	00021080 	sll	v0,v0,0x2
80006478:	00621021 	addu	v0,v1,v0
bitmap_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:92

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	assert(!(*word & mask));
8000647c:	8c430000 	lw	v1,0(v0)
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:78
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
	uint32_t ix = index / WORD_BITS, offset = index % WORD_BITS;
	*word = bitmap->map + ix;
	*mask = (1 << offset);
80006480:	24040001 	li	a0,1
80006484:	00a42804 	sllv	a1,a0,a1
bitmap_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:92

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	assert(!(*word & mask));
80006488:	00a32024 	and	a0,a1,v1
8000648c:	14800007 	bnez	a0,800064ac <bitmap_free+0x54>
80006490:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:93
	*word |= mask;
80006494:	00a32825 	or	a1,a1,v1
80006498:	ac450000 	sw	a1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:94
}
8000649c:	03e00008 	jr	ra
800064a0:	27bd0018 	addiu	sp,sp,24
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
800064a4:	0c007f50 	jal	8001fd40 <bitmap_translate.part.0>
800064a8:	00000000 	nop
bitmap_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:92

void bitmap_free(struct bitmap *bitmap, uint32_t index)
{
	WORD_TYPE *word, mask;
	bitmap_translate(bitmap, index, &word, &mask);
	assert(!(*word & mask));
800064ac:	3c048002 	lui	a0,0x8002
800064b0:	3c068002 	lui	a2,0x8002
800064b4:	3c078002 	lui	a3,0x8002
800064b8:	24841d90 	addiu	a0,a0,7568
800064bc:	2405005c 	li	a1,92
800064c0:	24c60e48 	addiu	a2,a2,3656
800064c4:	0c006b13 	jal	8001ac4c <__panic>
800064c8:	24e71e1c 	addiu	a3,a3,7708

800064cc <bitmap_destroy>:
bitmap_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:97
	*word |= mask;
}

void bitmap_destroy(struct bitmap *bitmap)
{
800064cc:	27bdffe8 	addiu	sp,sp,-24
800064d0:	afb00010 	sw	s0,16(sp)
800064d4:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:98
	kfree(bitmap->map);
800064d8:	8c840008 	lw	a0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:97
	assert(!(*word & mask));
	*word |= mask;
}

void bitmap_destroy(struct bitmap *bitmap)
{
800064dc:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:98
	kfree(bitmap->map);
800064e0:	0c0054b9 	jal	800152e4 <kfree>
800064e4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:99
	kfree(bitmap);
800064e8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:100
}
800064ec:	8fbf0014 	lw	ra,20(sp)
800064f0:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:99
}

void bitmap_destroy(struct bitmap *bitmap)
{
	kfree(bitmap->map);
	kfree(bitmap);
800064f4:	080054b9 	j	800152e4 <kfree>
800064f8:	27bd0018 	addiu	sp,sp,24

800064fc <bitmap_getdata>:
bitmap_getdata():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:104
}

void *bitmap_getdata(struct bitmap *bitmap, size_t * len_store)
{
	if (len_store != NULL) {
800064fc:	50a00006 	beqzl	a1,80006518 <bitmap_getdata+0x1c>
80006500:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:105
		*len_store = sizeof(WORD_TYPE) * bitmap->nwords;
80006504:	8c820004 	lw	v0,4(a0)
80006508:	00021080 	sll	v0,v0,0x2
8000650c:	aca20000 	sw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:108
	}
	return bitmap->map;
}
80006510:	03e00008 	jr	ra
80006514:	8c820008 	lw	v0,8(a0)
80006518:	03e00008 	jr	ra
8000651c:	00000000 	nop

80006520 <sfs_init>:
sfs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:10
#include <vfs.h>

void sfs_init(void)
{
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
80006520:	3c048002 	lui	a0,0x8002
80006524:	3c058000 	lui	a1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:8
#include <error.h>
#include <assert.h>
#include <vfs.h>

void sfs_init(void)
{
80006528:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:10
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
8000652c:	24841e2c 	addiu	a0,a0,7724
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:8
#include <error.h>
#include <assert.h>
#include <vfs.h>

void sfs_init(void)
{
80006530:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:10
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
80006534:	0c001239 	jal	800048e4 <register_filesystem>
80006538:	24a56cf4 	addiu	a1,a1,27892
8000653c:	14400007 	bnez	v0,8000655c <sfs_init+0x3c>
80006540:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:13
		panic("failed: sfs: register_filesystem: %e.\n", ret);
	}
	if ((ret = sfs_mount("disk0")) != 0) {
80006544:	0c001b3d 	jal	80006cf4 <sfs_mount>
80006548:	248411d0 	addiu	a0,a0,4560
8000654c:	1440000a 	bnez	v0,80006578 <sfs_init+0x58>
80006550:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:16
		panic("failed: sfs: sfs_mount: %e.\n", ret);
	}
}
80006554:	03e00008 	jr	ra
80006558:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:11

void sfs_init(void)
{
	int ret;
	if ((ret = register_filesystem("sfs", sfs_mount)) != 0) {
		panic("failed: sfs: register_filesystem: %e.\n", ret);
8000655c:	3c048002 	lui	a0,0x8002
80006560:	3c068002 	lui	a2,0x8002
80006564:	24841e30 	addiu	a0,a0,7728
80006568:	2405000b 	li	a1,11
8000656c:	24c61e38 	addiu	a2,a2,7736
80006570:	0c006b13 	jal	8001ac4c <__panic>
80006574:	00403821 	move	a3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs.c:14
	}
	if ((ret = sfs_mount("disk0")) != 0) {
		panic("failed: sfs: sfs_mount: %e.\n", ret);
80006578:	3c048002 	lui	a0,0x8002
8000657c:	3c068002 	lui	a2,0x8002
80006580:	24841e30 	addiu	a0,a0,7728
80006584:	2405000e 	li	a1,14
80006588:	24c61e60 	addiu	a2,a2,7776
8000658c:	0c006b13 	jal	8001ac4c <__panic>
80006590:	00403821 	move	a3,v0

80006594 <sfs_do_mount>:
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:192
 * (Note: for all intents and purposes here, "sector" and
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
80006594:	8c820004 	lw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:175
 * filesystem with the same name mounted at once, or two filesystems
 * mounted on the same device at once.
 */

static int sfs_do_mount(struct device *dev, struct fs **fs_store)
{
80006598:	27bdff98 	addiu	sp,sp,-104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:192
 * (Note: for all intents and purposes here, "sector" and
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
8000659c:	24031000 	li	v1,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:175
 * filesystem with the same name mounted at once, or two filesystems
 * mounted on the same device at once.
 */

static int sfs_do_mount(struct device *dev, struct fs **fs_store)
{
800065a0:	afb7005c 	sw	s7,92(sp)
800065a4:	afb00040 	sw	s0,64(sp)
800065a8:	afbf0064 	sw	ra,100(sp)
800065ac:	afbe0060 	sw	s8,96(sp)
800065b0:	afb60058 	sw	s6,88(sp)
800065b4:	afb50054 	sw	s5,84(sp)
800065b8:	afb40050 	sw	s4,80(sp)
800065bc:	afb3004c 	sw	s3,76(sp)
800065c0:	afb20048 	sw	s2,72(sp)
800065c4:	afb10044 	sw	s1,68(sp)
800065c8:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:192
 * (Note: for all intents and purposes here, "sector" and
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
800065cc:	1443008b 	bne	v0,v1,800067fc <sfs_do_mount+0x268>
800065d0:	00a0b821 	move	s7,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:198
		return -E_NA_DEV;
	}

	/* allocate fs structure */
	struct fs *fs;
	if ((fs = alloc_fs(sfs)) == NULL) {
800065d4:	0c0011be 	jal	800046f8 <__alloc_fs>
800065d8:	24045679 	li	a0,22137
800065dc:	104000cf 	beqz	v0,8000691c <sfs_do_mount+0x388>
800065e0:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:203
		return -E_NO_MEM;
	}

	/* get sfs from fs.fs_info.__sfs_info */
	struct sfs_fs *sfs = fsop_info(fs, sfs);
800065e4:	8c430084 	lw	v1,132(v0)
800065e8:	24025679 	li	v0,22137
800065ec:	146200cd 	bne	v1,v0,80006924 <sfs_do_mount+0x390>
800065f0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:204
	sfs->dev = dev;
800065f4:	ae30002c 	sw	s0,44(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:209

	int ret = -E_NO_MEM;

	void *sfs_buffer;
	if ((sfs->sfs_buffer = sfs_buffer = kmalloc(SFS_BLKSIZE)) == NULL) {
800065f8:	0c00548e 	jal	80015238 <kmalloc>
800065fc:	24041000 	li	a0,4096
80006600:	00409021 	move	s2,v0
80006604:	1040008f 	beqz	v0,80006844 <sfs_do_mount+0x2b0>
80006608:	ae220038 	sw	v0,56(s1)
sfs_init_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:138
	return ret;
}

static int sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer)
{
	struct iobuf __iob, *iob =
8000660c:	27a4001c 	addiu	a0,sp,28
80006610:	00402821 	move	a1,v0
80006614:	24061000 	li	a2,4096
80006618:	0c003347 	jal	8000cd1c <iobuf_init>
8000661c:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:140
	    iobuf_init(&__iob, blk_buffer, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(dev, iob, 0);
80006620:	8e030028 	lw	v1,40(s0)
80006624:	02002021 	move	a0,s0
80006628:	00402821 	move	a1,v0
8000662c:	0060f809 	jalr	v1
80006630:	00003021 	move	a2,zero
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:214
	if ((sfs->sfs_buffer = sfs_buffer = kmalloc(SFS_BLKSIZE)) == NULL) {
		goto failed_cleanup_fs;
	}

	/* load and check sfs's superblock */
	if ((ret = sfs_init_read(dev, SFS_BLKN_SUPER, sfs_buffer)) != 0) {
80006634:	14400009 	bnez	v0,8000665c <sfs_do_mount+0xc8>
80006638:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:223
	ret = -E_INVAL;

	struct sfs_super *super = sfs_buffer;

	/* Make some simple sanity checks */
	if (super->magic != SFS_MAGIC) {
8000663c:	8e450000 	lw	a1,0(s2)
80006640:	3c062f8d 	lui	a2,0x2f8d
80006644:	34c6be2a 	ori	a2,a2,0xbe2a
80006648:	10a60015 	beq	a1,a2,800066a0 <sfs_do_mount+0x10c>
8000664c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:225
		kprintf
		    ("sfs: wrong magic in superblock. (%08x should be %08x).\n",
80006650:	0c007aa6 	jal	8001ea98 <kprintf>
80006654:	24841eb8 	addiu	a0,a0,7864
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:218
	/* load and check sfs's superblock */
	if ((ret = sfs_init_read(dev, SFS_BLKN_SUPER, sfs_buffer)) != 0) {
		goto failed_cleanup_sfs_buffer;
	}

	ret = -E_INVAL;
80006658:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:297
failed_cleanup_freemap:
	bitmap_destroy(freemap);
failed_cleanup_hash_list:
	kfree(hash_list);
failed_cleanup_sfs_buffer:
	kfree(sfs_buffer);
8000665c:	0c0054b9 	jal	800152e4 <kfree>
80006660:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:299
failed_cleanup_fs:
	kfree(fs);
80006664:	0c0054b9 	jal	800152e4 <kfree>
80006668:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:301
	return ret;
}
8000666c:	8fbf0064 	lw	ra,100(sp)
80006670:	02601021 	move	v0,s3
80006674:	8fbe0060 	lw	s8,96(sp)
80006678:	8fb7005c 	lw	s7,92(sp)
8000667c:	8fb60058 	lw	s6,88(sp)
80006680:	8fb50054 	lw	s5,84(sp)
80006684:	8fb40050 	lw	s4,80(sp)
80006688:	8fb3004c 	lw	s3,76(sp)
8000668c:	8fb20048 	lw	s2,72(sp)
80006690:	8fb10044 	lw	s1,68(sp)
80006694:	8fb00040 	lw	s0,64(sp)
80006698:	03e00008 	jr	ra
8000669c:	27bd0068 	addiu	sp,sp,104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:229
		kprintf
		    ("sfs: wrong magic in superblock. (%08x should be %08x).\n",
		     super->magic, SFS_MAGIC);
		goto failed_cleanup_sfs_buffer;
	}
	if (super->blocks > dev->d_blocks) {
800066a0:	8e450004 	lw	a1,4(s2)
800066a4:	8e060000 	lw	a2,0(s0)
800066a8:	00c5102b 	sltu	v0,a2,a1
800066ac:	14400061 	bnez	v0,80006834 <sfs_do_mount+0x2a0>
800066b0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:234
		kprintf("sfs: fs has %u blocks, device has %u blocks.\n",
			super->blocks, dev->d_blocks);
		goto failed_cleanup_sfs_buffer;
	}
	super->info[SFS_MAX_INFO_LEN] = '\0';
800066b4:	a240002b 	sb	zero,43(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:235
	sfs->super = *super;
800066b8:	02401821 	move	v1,s2
800066bc:	02201021 	move	v0,s1
800066c0:	26440020 	addiu	a0,s2,32
800066c4:	8c680000 	lw	t0,0(v1)
800066c8:	8c670004 	lw	a3,4(v1)
800066cc:	8c660008 	lw	a2,8(v1)
800066d0:	8c65000c 	lw	a1,12(v1)
800066d4:	24630010 	addiu	v1,v1,16
800066d8:	ac480000 	sw	t0,0(v0)
800066dc:	ac470004 	sw	a3,4(v0)
800066e0:	ac460008 	sw	a2,8(v0)
800066e4:	ac45000c 	sw	a1,12(v0)
800066e8:	1464fff6 	bne	v1,a0,800066c4 <sfs_do_mount+0x130>
800066ec:	24420010 	addiu	v0,v0,16
800066f0:	8c660000 	lw	a2,0(v1)
800066f4:	8c650004 	lw	a1,4(v1)
800066f8:	8c630008 	lw	v1,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:243

	uint32_t i;

	/* alloc and initialize hash list */
	list_entry_t *hash_list;
	if ((sfs->hash_list = hash_list =
800066fc:	24042000 	li	a0,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:235
		kprintf("sfs: fs has %u blocks, device has %u blocks.\n",
			super->blocks, dev->d_blocks);
		goto failed_cleanup_sfs_buffer;
	}
	super->info[SFS_MAX_INFO_LEN] = '\0';
	sfs->super = *super;
80006700:	ac460000 	sw	a2,0(v0)
80006704:	ac450004 	sw	a1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:243

	uint32_t i;

	/* alloc and initialize hash list */
	list_entry_t *hash_list;
	if ((sfs->hash_list = hash_list =
80006708:	0c00548e 	jal	80015238 <kmalloc>
8000670c:	ac430008 	sw	v1,8(v0)
80006710:	afa20034 	sw	v0,52(sp)
80006714:	1040007d 	beqz	v0,8000690c <sfs_do_mount+0x378>
80006718:	ae220080 	sw	v0,128(s1)
8000671c:	24030400 	li	v1,1024
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80006720:	2463ffff 	addiu	v1,v1,-1
80006724:	ac420004 	sw	v0,4(v0)
80006728:	ac420000 	sw	v0,0(v0)
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:247
	     kmalloc(sizeof(list_entry_t) * SFS_HLIST_SIZE)) == NULL) {
		goto failed_cleanup_sfs_buffer;
	}
	for (i = 0; i < SFS_HLIST_SIZE; i++) {
8000672c:	1460fffc 	bnez	v1,80006720 <sfs_do_mount+0x18c>
80006730:	24420008 	addiu	v0,v0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:253
		list_init(hash_list + i);
	}

	/* load and check freemap (free space bitmap in disk) */
	struct bitmap *freemap;
	uint32_t freemap_size_nbits = sfs_freemap_bits(super);
80006734:	8e420004 	lw	v0,4(s2)
80006738:	24427fff 	addiu	v0,v0,32767
8000673c:	30437fff 	andi	v1,v0,0x7fff
80006740:	00431823 	subu	v1,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:254
	if ((sfs->freemap = freemap =
80006744:	00602021 	move	a0,v1
80006748:	0c001880 	jal	80006200 <bitmap_create>
8000674c:	afa30030 	sw	v1,48(sp)
80006750:	0040f021 	move	s8,v0
80006754:	1040006f 	beqz	v0,80006914 <sfs_do_mount+0x380>
80006758:	ae220030 	sw	v0,48(s1)
sfs_init_freemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:148
static int
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
8000675c:	00402021 	move	a0,v0
80006760:	27a50018 	addiu	a1,sp,24
80006764:	0c00193f 	jal	800064fc <bitmap_getdata>
80006768:	8e540004 	lw	s4,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:149
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
8000676c:	10400074 	beqz	v0,80006940 <sfs_do_mount+0x3ac>
80006770:	0040a821 	move	s5,v0
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:258
	uint32_t freemap_size_nbits = sfs_freemap_bits(super);
	if ((sfs->freemap = freemap =
	     bitmap_create(freemap_size_nbits)) == NULL) {
		goto failed_cleanup_hash_list;
	}
	uint32_t freemap_size_nblks = sfs_freemap_blocks(super);
80006774:	26947fff 	addiu	s4,s4,32767
sfs_init_freemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:149
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
80006778:	8fa20018 	lw	v0,24(sp)
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:258
	uint32_t freemap_size_nbits = sfs_freemap_bits(super);
	if ((sfs->freemap = freemap =
	     bitmap_create(freemap_size_nbits)) == NULL) {
		goto failed_cleanup_hash_list;
	}
	uint32_t freemap_size_nblks = sfs_freemap_blocks(super);
8000677c:	0014a3c2 	srl	s4,s4,0xf
sfs_init_freemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:149
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
80006780:	00141b00 	sll	v1,s4,0xc
80006784:	1462006f 	bne	v1,v0,80006944 <sfs_do_mount+0x3b0>
80006788:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:150
	while (nblks != 0) {
8000678c:	16800006 	bnez	s4,800067a8 <sfs_do_mount+0x214>
80006790:	24162000 	li	s6,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:266
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
	for (i = 0; i < freemap_size_nbits; i++) {
80006794:	08001a14 	j	80006850 <sfs_do_mount+0x2bc>
80006798:	8fa20030 	lw	v0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:155
	while (nblks != 0) {
		int ret;
		if ((ret = sfs_init_read(dev, blkno, data)) != 0) {
			return ret;
		}
		blkno++, nblks--, data += SFS_BLKSIZE;
8000679c:	26b51000 	addiu	s5,s5,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:150
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
	while (nblks != 0) {
800067a0:	1280002a 	beqz	s4,8000684c <sfs_do_mount+0x2b8>
800067a4:	26d61000 	addiu	s6,s6,4096
sfs_init_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:138
	return ret;
}

static int sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer)
{
	struct iobuf __iob, *iob =
800067a8:	27a4001c 	addiu	a0,sp,28
800067ac:	02a02821 	move	a1,s5
800067b0:	24061000 	li	a2,4096
800067b4:	0c003347 	jal	8000cd1c <iobuf_init>
800067b8:	02c03821 	move	a3,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:140
	    iobuf_init(&__iob, blk_buffer, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(dev, iob, 0);
800067bc:	8e030028 	lw	v1,40(s0)
800067c0:	02002021 	move	a0,s0
800067c4:	00402821 	move	a1,v0
800067c8:	0060f809 	jalr	v1
800067cc:	00003021 	move	a2,zero
sfs_init_freemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:152
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
	while (nblks != 0) {
		int ret;
		if ((ret = sfs_init_read(dev, blkno, data)) != 0) {
800067d0:	1040fff2 	beqz	v0,8000679c <sfs_do_mount+0x208>
800067d4:	2694ffff 	addiu	s4,s4,-1
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:293

	*fs_store = fs;
	return 0;

failed_cleanup_freemap:
	bitmap_destroy(freemap);
800067d8:	03c02021 	move	a0,s8
800067dc:	0c001933 	jal	800064cc <bitmap_destroy>
800067e0:	afa20038 	sw	v0,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:140

static int sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer)
{
	struct iobuf __iob, *iob =
	    iobuf_init(&__iob, blk_buffer, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(dev, iob, 0);
800067e4:	8fa20038 	lw	v0,56(sp)
800067e8:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:295
	return 0;

failed_cleanup_freemap:
	bitmap_destroy(freemap);
failed_cleanup_hash_list:
	kfree(hash_list);
800067ec:	0c0054b9 	jal	800152e4 <kfree>
800067f0:	8fa40034 	lw	a0,52(sp)
800067f4:	08001997 	j	8000665c <sfs_do_mount+0xc8>
800067f8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:301
failed_cleanup_sfs_buffer:
	kfree(sfs_buffer);
failed_cleanup_fs:
	kfree(fs);
	return ret;
}
800067fc:	8fbf0064 	lw	ra,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:193
 * "block" are interchangeable terms. Technically a filesystem
 * block may be composed of several hardware sectors, but we
 * don't do that in sfs.)
 */
	if (dev->d_blocksize != SFS_BLKSIZE) {
		return -E_NA_DEV;
80006800:	2413fff0 	li	s3,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:301
failed_cleanup_sfs_buffer:
	kfree(sfs_buffer);
failed_cleanup_fs:
	kfree(fs);
	return ret;
}
80006804:	02601021 	move	v0,s3
80006808:	8fbe0060 	lw	s8,96(sp)
8000680c:	8fb7005c 	lw	s7,92(sp)
80006810:	8fb60058 	lw	s6,88(sp)
80006814:	8fb50054 	lw	s5,84(sp)
80006818:	8fb40050 	lw	s4,80(sp)
8000681c:	8fb3004c 	lw	s3,76(sp)
80006820:	8fb20048 	lw	s2,72(sp)
80006824:	8fb10044 	lw	s1,68(sp)
80006828:	8fb00040 	lw	s0,64(sp)
8000682c:	03e00008 	jr	ra
80006830:	27bd0068 	addiu	sp,sp,104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:230
		    ("sfs: wrong magic in superblock. (%08x should be %08x).\n",
		     super->magic, SFS_MAGIC);
		goto failed_cleanup_sfs_buffer;
	}
	if (super->blocks > dev->d_blocks) {
		kprintf("sfs: fs has %u blocks, device has %u blocks.\n",
80006834:	0c007aa6 	jal	8001ea98 <kprintf>
80006838:	24841ef0 	addiu	a0,a0,7920
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:232
			super->blocks, dev->d_blocks);
		goto failed_cleanup_sfs_buffer;
8000683c:	08001997 	j	8000665c <sfs_do_mount+0xc8>
80006840:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:206

	/* get sfs from fs.fs_info.__sfs_info */
	struct sfs_fs *sfs = fsop_info(fs, sfs);
	sfs->dev = dev;

	int ret = -E_NO_MEM;
80006844:	08001999 	j	80006664 <sfs_do_mount+0xd0>
80006848:	2413fff4 	li	s3,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:266
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
	for (i = 0; i < freemap_size_nbits; i++) {
8000684c:	8fa20030 	lw	v0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:265
	     sfs_init_freemap(dev, freemap, SFS_BLKN_FREEMAP,
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
80006850:	8e300004 	lw	s0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:266
	for (i = 0; i < freemap_size_nbits; i++) {
80006854:	00009021 	move	s2,zero
80006858:	1040000a 	beqz	v0,80006884 <sfs_do_mount+0x2f0>
8000685c:	0000a021 	move	s4,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:267
		if (bitmap_test(freemap, i)) {
80006860:	02802821 	move	a1,s4
80006864:	0c001904 	jal	80006410 <bitmap_test>
80006868:	03c02021 	move	a0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:268
			unused_blocks++;
8000686c:	0002102b 	sltu	v0,zero,v0
80006870:	02429021 	addu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:266
			      freemap_size_nblks, sfs_buffer)) != 0) {
		goto failed_cleanup_freemap;
	}

	uint32_t blocks = sfs->super.blocks, unused_blocks = 0;
	for (i = 0; i < freemap_size_nbits; i++) {
80006874:	8fa20030 	lw	v0,48(sp)
80006878:	26940001 	addiu	s4,s4,1
8000687c:	5682fff9 	bnel	s4,v0,80006864 <sfs_do_mount+0x2d0>
80006880:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:276
	//YX you can close -O2 option to enable it
	//assert(unused_blocks == sfs->super.unused_blocks);

	/* and other fields */
	sfs->super_dirty = 0;
	sem_init(&(sfs->fs_sem), 1);
80006884:	2624003c 	addiu	a0,s1,60
80006888:	24050001 	li	a1,1
8000688c:	0c00671f 	jal	80019c7c <sem_init>
80006890:	ae200034 	sw	zero,52(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:277
	sem_init(&(sfs->io_sem), 1);
80006894:	26240050 	addiu	a0,s1,80
80006898:	0c00671f 	jal	80019c7c <sem_init>
8000689c:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:278
	sem_init(&(sfs->mutex_sem), 1);
800068a0:	26240064 	addiu	a0,s1,100
800068a4:	0c00671f 	jal	80019c7c <sem_init>
800068a8:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:279
	list_init(&(sfs->inode_list));
800068ac:	26220078 	addiu	v0,s1,120
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:280
	kprintf("sfs: mount: '%s' (%d/%d/%d)\n", sfs->super.info,
800068b0:	3c048002 	lui	a0,0x8002
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
800068b4:	ae22007c 	sw	v0,124(s1)
800068b8:	ae220078 	sw	v0,120(s1)
sfs_do_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:280
800068bc:	24841f4c 	addiu	a0,a0,8012
800068c0:	2625000c 	addiu	a1,s1,12
800068c4:	02123023 	subu	a2,s0,s2
800068c8:	02403821 	move	a3,s2
800068cc:	0c007aa6 	jal	8001ea98 <kprintf>
800068d0:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:284
		blocks - unused_blocks, unused_blocks, blocks);

	/* Set up abstract fs calls */
	fs->fs_sync = sfs_sync;
800068d4:	3c028000 	lui	v0,0x8000
800068d8:	24426960 	addiu	v0,v0,26976
800068dc:	ae220088 	sw	v0,136(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:285
	fs->fs_get_root = sfs_get_root;
800068e0:	3c028000 	lui	v0,0x8000
800068e4:	24426c80 	addiu	v0,v0,27776
800068e8:	ae22008c 	sw	v0,140(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:286
	fs->fs_unmount = sfs_unmount;
800068ec:	3c028000 	lui	v0,0x8000
800068f0:	24426b98 	addiu	v0,v0,27544
800068f4:	ae220090 	sw	v0,144(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:287
	fs->fs_cleanup = sfs_cleanup;
800068f8:	3c028000 	lui	v0,0x8000
800068fc:	24426adc 	addiu	v0,v0,27356
80006900:	ae220094 	sw	v0,148(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:290

	*fs_store = fs;
	return 0;
80006904:	0800199b 	j	8000666c <sfs_do_mount+0xd8>
80006908:	aef10000 	sw	s1,0(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:237
		goto failed_cleanup_sfs_buffer;
	}
	super->info[SFS_MAX_INFO_LEN] = '\0';
	sfs->super = *super;

	ret = -E_NO_MEM;
8000690c:	08001997 	j	8000665c <sfs_do_mount+0xc8>
80006910:	2413fff4 	li	s3,-12
80006914:	080019fb 	j	800067ec <sfs_do_mount+0x258>
80006918:	2413fff4 	li	s3,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:199
	}

	/* allocate fs structure */
	struct fs *fs;
	if ((fs = alloc_fs(sfs)) == NULL) {
		return -E_NO_MEM;
8000691c:	0800199b 	j	8000666c <sfs_do_mount+0xd8>
80006920:	2413fff4 	li	s3,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:203
	}

	/* get sfs from fs.fs_info.__sfs_info */
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006924:	3c068002 	lui	a2,0x8002
80006928:	3c078002 	lui	a3,0x8002
8000692c:	24841e80 	addiu	a0,a0,7808
80006930:	240500cb 	li	a1,203
80006934:	24c60e48 	addiu	a2,a2,3656
80006938:	0c006b13 	jal	8001ac4c <__panic>
8000693c:	24e71e8c 	addiu	a3,a3,7820
sfs_init_freemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:149
sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno,
		 uint32_t nblks, void *blk_buffer)
{
	size_t len;
	void *data = bitmap_getdata(freemap, &len);
	assert(data != NULL && len == nblks * SFS_BLKSIZE);
80006940:	3c048002 	lui	a0,0x8002
80006944:	3c068002 	lui	a2,0x8002
80006948:	3c078002 	lui	a3,0x8002
8000694c:	24841e80 	addiu	a0,a0,7808
80006950:	24050095 	li	a1,149
80006954:	24c60e48 	addiu	a2,a2,3656
80006958:	0c006b13 	jal	8001ac4c <__panic>
8000695c:	24e71f20 	addiu	a3,a3,7968

80006960 <sfs_sync>:
sfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:23
 * Sync routine. This is what gets invoked if you do FS_SYNC on the
 * sfs filesystem structure.
 */

static int sfs_sync(struct fs *fs)
{
80006960:	27bdffd8 	addiu	sp,sp,-40
80006964:	afb3001c 	sw	s3,28(sp)
80006968:	afbf0024 	sw	ra,36(sp)
8000696c:	afb40020 	sw	s4,32(sp)
80006970:	afb20018 	sw	s2,24(sp)
80006974:	afb10014 	sw	s1,20(sp)
80006978:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:24
	struct sfs_fs *sfs = fsop_info(fs, sfs);
8000697c:	1080004f 	beqz	a0,80006abc <sfs_sync+0x15c>
80006980:	00809821 	move	s3,a0
80006984:	8c830084 	lw	v1,132(a0)
80006988:	24025679 	li	v0,22137
8000698c:	5462004c 	bnel	v1,v0,80006ac0 <sfs_sync+0x160>
80006990:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:25
	lock_sfs_fs(sfs);
80006994:	0c002c4a 	jal	8000b128 <lock_sfs_fs>
80006998:	26710078 	addiu	s1,s3,120
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000699c:	8e70007c 	lw	s0,124(s3)
sfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:57
 * similar things all over the place in ucore, so taking the
 * time to straighten it out in your mind is worthwhile.
 */
	{
		list_entry_t *list = &(sfs->inode_list), *le = list;
		while ((le = list_next(le)) != list) {
800069a0:	1230001e 	beq	s1,s0,80006a1c <sfs_sync+0xbc>
800069a4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:58
			struct sfs_inode *sin = le2sin(le, inode_link);
800069a8:	2614ffd8 	addiu	s4,s0,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:59
			vop_fsync(info2node(sin, sfs_inode));
800069ac:	1280003c 	beqz	s4,80006aa0 <sfs_sync+0x140>
800069b0:	3c048002 	lui	a0,0x8002
800069b4:	8e020020 	lw	v0,32(s0)
800069b8:	1040003a 	beqz	v0,80006aa4 <sfs_sync+0x144>
800069bc:	3c068002 	lui	a2,0x8002
800069c0:	8c420018 	lw	v0,24(v0)
800069c4:	10400036 	beqz	v0,80006aa0 <sfs_sync+0x140>
800069c8:	3c128002 	lui	s2,0x8002
800069cc:	08001a7d 	j	800069f4 <sfs_sync+0x94>
800069d0:	26521fbc 	addiu	s2,s2,8124
800069d4:	12800032 	beqz	s4,80006aa0 <sfs_sync+0x140>
800069d8:	3c048002 	lui	a0,0x8002
800069dc:	8e020020 	lw	v0,32(s0)
800069e0:	10400030 	beqz	v0,80006aa4 <sfs_sync+0x144>
800069e4:	3c068002 	lui	a2,0x8002
800069e8:	8c420018 	lw	v0,24(v0)
800069ec:	1040002e 	beqz	v0,80006aa8 <sfs_sync+0x148>
800069f0:	3c078002 	lui	a3,0x8002
800069f4:	02802021 	move	a0,s4
800069f8:	0c0010f2 	jal	800043c8 <inode_check>
800069fc:	02402821 	move	a1,s2
80006a00:	8e020020 	lw	v0,32(s0)
80006a04:	8c420018 	lw	v0,24(v0)
80006a08:	0040f809 	jalr	v0
80006a0c:	02802021 	move	a0,s4
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80006a10:	8e100004 	lw	s0,4(s0)
sfs_sync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:57
 * similar things all over the place in ucore, so taking the
 * time to straighten it out in your mind is worthwhile.
 */
	{
		list_entry_t *list = &(sfs->inode_list), *le = list;
		while ((le = list_next(le)) != list) {
80006a14:	5630ffef 	bnel	s1,s0,800069d4 <sfs_sync+0x74>
80006a18:	2614ffd8 	addiu	s4,s0,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:62
			struct sfs_inode *sin = le2sin(le, inode_link);
			vop_fsync(info2node(sin, sfs_inode));
		}
	}
	unlock_sfs_fs(sfs);
80006a1c:	0c002c50 	jal	8000b140 <unlock_sfs_fs>
80006a20:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:65

	int ret;
	if (sfs->super_dirty) {
80006a24:	8e630034 	lw	v1,52(s3)
80006a28:	14600009 	bnez	v1,80006a50 <sfs_sync+0xf0>
80006a2c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:79
			sfs->super_dirty = 1;
			return ret;
		}
	}
	return 0;
}
80006a30:	8fbf0024 	lw	ra,36(sp)
80006a34:	8fb40020 	lw	s4,32(sp)
80006a38:	8fb3001c 	lw	s3,28(sp)
80006a3c:	8fb20018 	lw	s2,24(sp)
80006a40:	8fb10014 	lw	s1,20(sp)
80006a44:	8fb00010 	lw	s0,16(sp)
80006a48:	03e00008 	jr	ra
80006a4c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:66
	}
	unlock_sfs_fs(sfs);

	int ret;
	if (sfs->super_dirty) {
		sfs->super_dirty = 0;
80006a50:	ae600034 	sw	zero,52(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:68
		/* If the superblock needs to be written, write it. */
		if ((ret = sfs_sync_super(sfs)) != 0) {
80006a54:	0c002bf3 	jal	8000afcc <sfs_sync_super>
80006a58:	02602021 	move	a0,s3
80006a5c:	1040000a 	beqz	v0,80006a88 <sfs_sync+0x128>
80006a60:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:74
			sfs->super_dirty = 1;
			return ret;
		}
		/* If the free block map needs to be written, write it. */
		if ((ret = sfs_sync_freemap(sfs)) != 0) {
			sfs->super_dirty = 1;
80006a64:	ae630034 	sw	v1,52(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:79
			return ret;
		}
	}
	return 0;
}
80006a68:	8fbf0024 	lw	ra,36(sp)
80006a6c:	8fb40020 	lw	s4,32(sp)
80006a70:	8fb3001c 	lw	s3,28(sp)
80006a74:	8fb20018 	lw	s2,24(sp)
80006a78:	8fb10014 	lw	s1,20(sp)
80006a7c:	8fb00010 	lw	s0,16(sp)
80006a80:	03e00008 	jr	ra
80006a84:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:73
		if ((ret = sfs_sync_super(sfs)) != 0) {
			sfs->super_dirty = 1;
			return ret;
		}
		/* If the free block map needs to be written, write it. */
		if ((ret = sfs_sync_freemap(sfs)) != 0) {
80006a88:	0c002c0e 	jal	8000b038 <sfs_sync_freemap>
80006a8c:	02602021 	move	a0,s3
80006a90:	1040ffe7 	beqz	v0,80006a30 <sfs_sync+0xd0>
80006a94:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:74
			sfs->super_dirty = 1;
80006a98:	08001a9a 	j	80006a68 <sfs_sync+0x108>
80006a9c:	ae630034 	sw	v1,52(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:59
 */
	{
		list_entry_t *list = &(sfs->inode_list), *le = list;
		while ((le = list_next(le)) != list) {
			struct sfs_inode *sin = le2sin(le, inode_link);
			vop_fsync(info2node(sin, sfs_inode));
80006aa0:	3c068002 	lui	a2,0x8002
80006aa4:	3c078002 	lui	a3,0x8002
80006aa8:	24841e80 	addiu	a0,a0,7808
80006aac:	2405003b 	li	a1,59
80006ab0:	24c60e48 	addiu	a2,a2,3656
80006ab4:	0c006b13 	jal	8001ac4c <__panic>
80006ab8:	24e71f6c 	addiu	a3,a3,8044
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:24
 * sfs filesystem structure.
 */

static int sfs_sync(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006abc:	3c048002 	lui	a0,0x8002
80006ac0:	3c068002 	lui	a2,0x8002
80006ac4:	3c078002 	lui	a3,0x8002
80006ac8:	24841e80 	addiu	a0,a0,7808
80006acc:	24050018 	li	a1,24
80006ad0:	24c60e48 	addiu	a2,a2,3656
80006ad4:	0c006b13 	jal	8001ac4c <__panic>
80006ad8:	24e71e8c 	addiu	a3,a3,7820

80006adc <sfs_cleanup>:
sfs_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:104
 *
 * VFS calls FS_SYNC on the filesystem prior to unmounting it.
 */

static int sfs_cleanup(struct fs *fs)
{
80006adc:	27bdffe8 	addiu	sp,sp,-24
80006ae0:	afb00010 	sw	s0,16(sp)
80006ae4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:105
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006ae8:	1080001c 	beqz	a0,80006b5c <sfs_cleanup+0x80>
80006aec:	00808021 	move	s0,a0
80006af0:	8c830084 	lw	v1,132(a0)
80006af4:	24025679 	li	v0,22137
80006af8:	14620018 	bne	v1,v0,80006b5c <sfs_cleanup+0x80>
80006afc:	24820078 	addiu	v0,a0,120
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:106
	if (!list_empty(&(sfs->inode_list))) {
80006b00:	8c83007c 	lw	v1,124(a0)
80006b04:	14620011 	bne	v1,v0,80006b4c <sfs_cleanup+0x70>
80006b08:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:109
		return -E_BUSY;
	}
	assert(!sfs->super_dirty);
80006b0c:	8c820034 	lw	v0,52(a0)
80006b10:	5440001a 	bnezl	v0,80006b7c <sfs_cleanup+0xa0>
80006b14:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:110
	bitmap_destroy(sfs->freemap);
80006b18:	0c001933 	jal	800064cc <bitmap_destroy>
80006b1c:	8c840030 	lw	a0,48(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:111
	kfree(sfs->sfs_buffer);
80006b20:	0c0054b9 	jal	800152e4 <kfree>
80006b24:	8e040038 	lw	a0,56(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:112
	kfree(sfs->hash_list);
80006b28:	0c0054b9 	jal	800152e4 <kfree>
80006b2c:	8e040080 	lw	a0,128(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:113
	kfree(sfs);
80006b30:	0c0054b9 	jal	800152e4 <kfree>
80006b34:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:115
	return 0;
}
80006b38:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:114
	assert(!sfs->super_dirty);
	bitmap_destroy(sfs->freemap);
	kfree(sfs->sfs_buffer);
	kfree(sfs->hash_list);
	kfree(sfs);
	return 0;
80006b3c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:115
}
80006b40:	8fb00010 	lw	s0,16(sp)
80006b44:	03e00008 	jr	ra
80006b48:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:107

static int sfs_cleanup(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
	if (!list_empty(&(sfs->inode_list))) {
		return -E_BUSY;
80006b4c:	2402fff0 	li	v0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:115
	bitmap_destroy(sfs->freemap);
	kfree(sfs->sfs_buffer);
	kfree(sfs->hash_list);
	kfree(sfs);
	return 0;
}
80006b50:	8fb00010 	lw	s0,16(sp)
80006b54:	03e00008 	jr	ra
80006b58:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:105
 * VFS calls FS_SYNC on the filesystem prior to unmounting it.
 */

static int sfs_cleanup(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006b5c:	3c048002 	lui	a0,0x8002
80006b60:	3c068002 	lui	a2,0x8002
80006b64:	3c078002 	lui	a3,0x8002
80006b68:	24841e80 	addiu	a0,a0,7808
80006b6c:	24050069 	li	a1,105
80006b70:	24c60e48 	addiu	a2,a2,3656
80006b74:	0c006b13 	jal	8001ac4c <__panic>
80006b78:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:109
	if (!list_empty(&(sfs->inode_list))) {
		return -E_BUSY;
	}
	assert(!sfs->super_dirty);
80006b7c:	3c068002 	lui	a2,0x8002
80006b80:	3c078002 	lui	a3,0x8002
80006b84:	24841e80 	addiu	a0,a0,7808
80006b88:	2405006d 	li	a1,109
80006b8c:	24c60e48 	addiu	a2,a2,3656
80006b90:	0c006b13 	jal	8001ac4c <__panic>
80006b94:	24e71fc4 	addiu	a3,a3,8132

80006b98 <sfs_unmount>:
sfs_unmount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:118
	kfree(sfs);
	return 0;
}

static int sfs_unmount(struct fs *fs)
{
80006b98:	27bdffd0 	addiu	sp,sp,-48
80006b9c:	afb10024 	sw	s1,36(sp)
80006ba0:	afbf002c 	sw	ra,44(sp)
80006ba4:	afb20028 	sw	s2,40(sp)
80006ba8:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:119
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006bac:	1080002c 	beqz	a0,80006c60 <sfs_unmount+0xc8>
80006bb0:	00808821 	move	s1,a0
80006bb4:	8c830084 	lw	v1,132(a0)
80006bb8:	24025679 	li	v0,22137
80006bbc:	14620028 	bne	v1,v0,80006c60 <sfs_unmount+0xc8>
80006bc0:	2492000c 	addiu	s2,a0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:120
	uint32_t blocks = sfs->super.blocks, unused_blocks =
80006bc4:	8c870008 	lw	a3,8(a0)
80006bc8:	8c820004 	lw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:122
	    sfs->super.unused_blocks;
	kprintf("sfs: unmount: '%s' (%d/%d/%d)\n", sfs->super.info,
80006bcc:	3c048002 	lui	a0,0x8002
80006bd0:	24841fd8 	addiu	a0,a0,8152
80006bd4:	02402821 	move	a1,s2
80006bd8:	00473023 	subu	a2,v0,a3
80006bdc:	afa20010 	sw	v0,16(sp)
80006be0:	0c007aa6 	jal	8001ea98 <kprintf>
80006be4:	24100020 	li	s0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:126
		blocks - unused_blocks, unused_blocks, blocks);
	int i, ret;
	for (i = 0; i < 32; i++) {
		if ((ret = fsop_sync(fs)) == 0) {
80006be8:	08001aff 	j	80006bfc <sfs_unmount+0x64>
80006bec:	8e220088 	lw	v0,136(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:125
	uint32_t blocks = sfs->super.blocks, unused_blocks =
	    sfs->super.unused_blocks;
	kprintf("sfs: unmount: '%s' (%d/%d/%d)\n", sfs->super.info,
		blocks - unused_blocks, unused_blocks, blocks);
	int i, ret;
	for (i = 0; i < 32; i++) {
80006bf0:	1200000c 	beqz	s0,80006c24 <sfs_unmount+0x8c>
80006bf4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:126
		if ((ret = fsop_sync(fs)) == 0) {
80006bf8:	8e220088 	lw	v0,136(s1)
80006bfc:	0040f809 	jalr	v0
80006c00:	02202021 	move	a0,s1
80006c04:	1440fffa 	bnez	v0,80006bf0 <sfs_unmount+0x58>
80006c08:	2610ffff 	addiu	s0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:134
	}
	if (ret != 0) {
		warn("sfs: sync error: '%s': %e.\n", sfs->super.info, ret);
	}
	return ret;
}
80006c0c:	8fbf002c 	lw	ra,44(sp)
80006c10:	8fb20028 	lw	s2,40(sp)
80006c14:	8fb10024 	lw	s1,36(sp)
80006c18:	8fb00020 	lw	s0,32(sp)
80006c1c:	03e00008 	jr	ra
80006c20:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:131
		if ((ret = fsop_sync(fs)) == 0) {
			break;
		}
	}
	if (ret != 0) {
		warn("sfs: sync error: '%s': %e.\n", sfs->super.info, ret);
80006c24:	3c068002 	lui	a2,0x8002
80006c28:	02403821 	move	a3,s2
80006c2c:	24841e80 	addiu	a0,a0,7808
80006c30:	24050083 	li	a1,131
80006c34:	24c61ff8 	addiu	a2,a2,8184
80006c38:	afa20010 	sw	v0,16(sp)
80006c3c:	0c006b33 	jal	8001accc <__warn>
80006c40:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:134
	}
	return ret;
}
80006c44:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:131
		if ((ret = fsop_sync(fs)) == 0) {
			break;
		}
	}
	if (ret != 0) {
		warn("sfs: sync error: '%s': %e.\n", sfs->super.info, ret);
80006c48:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:134
	}
	return ret;
}
80006c4c:	8fb20028 	lw	s2,40(sp)
80006c50:	8fb10024 	lw	s1,36(sp)
80006c54:	8fb00020 	lw	s0,32(sp)
80006c58:	03e00008 	jr	ra
80006c5c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:119
	return 0;
}

static int sfs_unmount(struct fs *fs)
{
	struct sfs_fs *sfs = fsop_info(fs, sfs);
80006c60:	3c048002 	lui	a0,0x8002
80006c64:	3c068002 	lui	a2,0x8002
80006c68:	3c078002 	lui	a3,0x8002
80006c6c:	24841e80 	addiu	a0,a0,7808
80006c70:	24050077 	li	a1,119
80006c74:	24c60e48 	addiu	a2,a2,3656
80006c78:	0c006b13 	jal	8001ac4c <__panic>
80006c7c:	24e71e8c 	addiu	a3,a3,7820

80006c80 <sfs_get_root>:
sfs_get_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:87
 * Get inode for the root of the filesystem.
 * The root inode is always found in block 1 (SFS_ROOT_LOCATION).
 */

static struct inode *sfs_get_root(struct fs *fs)
{
80006c80:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:91
	struct inode *node;
	int ret;
	if ((ret =
	     sfs_load_inode(fsop_info(fs, sfs), &node, SFS_BLKN_ROOT)) != 0) {
80006c84:	1080000c 	beqz	a0,80006cb8 <sfs_get_root+0x38>
80006c88:	afbf001c 	sw	ra,28(sp)
80006c8c:	8c830084 	lw	v1,132(a0)
80006c90:	24025679 	li	v0,22137
80006c94:	14620008 	bne	v1,v0,80006cb8 <sfs_get_root+0x38>
80006c98:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:90

static struct inode *sfs_get_root(struct fs *fs)
{
	struct inode *node;
	int ret;
	if ((ret =
80006c9c:	0c00250f 	jal	8000943c <sfs_load_inode>
80006ca0:	24060001 	li	a2,1
80006ca4:	1440000c 	bnez	v0,80006cd8 <sfs_get_root+0x58>
80006ca8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:95
	     sfs_load_inode(fsop_info(fs, sfs), &node, SFS_BLKN_ROOT)) != 0) {
		panic("load sfs root failed: %e", ret);
	}
	return node;
}
80006cac:	8fa20010 	lw	v0,16(sp)
80006cb0:	03e00008 	jr	ra
80006cb4:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:91
static struct inode *sfs_get_root(struct fs *fs)
{
	struct inode *node;
	int ret;
	if ((ret =
	     sfs_load_inode(fsop_info(fs, sfs), &node, SFS_BLKN_ROOT)) != 0) {
80006cb8:	3c048002 	lui	a0,0x8002
80006cbc:	3c068002 	lui	a2,0x8002
80006cc0:	3c078002 	lui	a3,0x8002
80006cc4:	24841e80 	addiu	a0,a0,7808
80006cc8:	2405005b 	li	a1,91
80006ccc:	24c60e48 	addiu	a2,a2,3656
80006cd0:	0c006b13 	jal	8001ac4c <__panic>
80006cd4:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:92
		panic("load sfs root failed: %e", ret);
80006cd8:	3c048002 	lui	a0,0x8002
80006cdc:	3c068002 	lui	a2,0x8002
80006ce0:	24841e80 	addiu	a0,a0,7808
80006ce4:	2405005c 	li	a1,92
80006ce8:	24c62014 	addiu	a2,a2,8212
80006cec:	0c006b13 	jal	8001ac4c <__panic>
80006cf0:	00403821 	move	a3,v0

80006cf4 <sfs_mount>:
sfs_mount():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_fs.c:309
 * Actual function called from high-level code to mount an sfs.
 */

int sfs_mount(const char *devname)
{
	return vfs_mount(devname, sfs_do_mount);
80006cf4:	3c058000 	lui	a1,0x8000
80006cf8:	08001446 	j	80005118 <vfs_mount>
80006cfc:	24a56594 	addiu	a1,a1,26004

80006d00 <sfs_opendir>:
sfs_opendir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:581
	return sfs_load_inode(sfs, node_store, ino);
}

static int sfs_opendir(struct inode *node, uint32_t open_flags)
{
	switch (open_flags & O_ACCMODE) {
80006d00:	30a20003 	andi	v0,a1,0x3
80006d04:	10400003 	beqz	v0,80006d14 <sfs_opendir+0x14>
80006d08:	30a50400 	andi	a1,a1,0x400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:593
	}
	if (open_flags & O_APPEND) {
		return -E_ISDIR;
	}
	return 0;
}
80006d0c:	03e00008 	jr	ra
80006d10:	2402ffeb 	li	v0,-21
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:590
	case O_RDWR:
	default:
		return -E_ISDIR;
	}
	if (open_flags & O_APPEND) {
		return -E_ISDIR;
80006d14:	2402ffeb 	li	v0,-21
80006d18:	03e00008 	jr	ra
80006d1c:	0005100a 	movz	v0,zero,a1

80006d20 <sfs_openfile>:
sfs_openfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:598
}

static int sfs_openfile(struct inode *node, uint32_t open_flags)
{
	return 0;
}
80006d20:	03e00008 	jr	ra
80006d24:	00001021 	move	v0,zero

80006d28 <sfs_set_links>:
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80006d28:	8c83007c 	lw	v1,124(a0)
sfs_set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:53
{
	return sfs->hash_list + sin_hashfn(ino);
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d2c:	27bdffe0 	addiu	sp,sp,-32
80006d30:	00801021 	move	v0,a0
sfs_hash_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:49
	panic("invalid file type %d.\n", type);
}

static list_entry_t *sfs_hash_list(struct sfs_fs *sfs, uint32_t ino)
{
	return sfs->hash_list + sin_hashfn(ino);
80006d34:	8ca40004 	lw	a0,4(a1)
sfs_set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:53
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d38:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:54
	list_add(&(sfs->inode_list), &(sin->inode_link));
80006d3c:	24460078 	addiu	a2,v0,120
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:53
{
	return sfs->hash_list + sin_hashfn(ino);
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d40:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:54
	list_add(&(sfs->inode_list), &(sin->inode_link));
80006d44:	24a50028 	addiu	a1,a1,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:53
{
	return sfs->hash_list + sin_hashfn(ino);
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80006d48:	afbf001c 	sw	ra,28(sp)
80006d4c:	afb10018 	sw	s1,24(sp)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80006d50:	ac650000 	sw	a1,0(v1)
sfs_hash_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:49
	panic("invalid file type %d.\n", type);
}

static list_entry_t *sfs_hash_list(struct sfs_fs *sfs, uint32_t ino)
{
	return sfs->hash_list + sin_hashfn(ino);
80006d54:	8c510080 	lw	s1,128(v0)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
80006d58:	ac45007c 	sw	a1,124(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80006d5c:	ae060028 	sw	a2,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80006d60:	ae03002c 	sw	v1,44(s0)
sfs_hash_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:49
80006d64:	0c00595b 	jal	8001656c <hash32>
80006d68:	2405000a 	li	a1,10
80006d6c:	000210c0 	sll	v0,v0,0x3
80006d70:	02228821 	addu	s1,s1,v0
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80006d74:	8e220004 	lw	v0,4(s1)
sfs_set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:56

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
	list_add(&(sfs->inode_list), &(sin->inode_link));
	list_add(sfs_hash_list(sfs, sin->ino), &(sin->hash_link));
}
80006d78:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:55
}

static void sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin)
{
	list_add(&(sfs->inode_list), &(sin->inode_link));
	list_add(sfs_hash_list(sfs, sin->ino), &(sin->hash_link));
80006d7c:	26030030 	addiu	v1,s0,48
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80006d80:	ae230004 	sw	v1,4(s1)
80006d84:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80006d88:	ae020034 	sw	v0,52(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80006d8c:	ae110030 	sw	s1,48(s0)
sfs_set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:56
}
80006d90:	8fb10018 	lw	s1,24(sp)
80006d94:	8fb00014 	lw	s0,20(sp)
80006d98:	03e00008 	jr	ra
80006d9c:	27bd0020 	addiu	sp,sp,32

80006da0 <sfs_lookup_subpath>:
sfs_lookup_subpath():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1367
	unlock_sfs_mutex(sfs);
	return ret;
}

static char *sfs_lookup_subpath(char *path)
{
80006da0:	27bdffe8 	addiu	sp,sp,-24
80006da4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1368
	if ((path = strchr(path, '/')) != NULL) {
80006da8:	0c005be7 	jal	80016f9c <strchr>
80006dac:	2405002f 	li	a1,47
80006db0:	1040000c 	beqz	v0,80006de4 <sfs_lookup_subpath+0x44>
80006db4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1369
		while (*path == '/') {
80006db8:	90430000 	lbu	v1,0(v0)
80006dbc:	2404002f 	li	a0,47
80006dc0:	54640008 	bnel	v1,a0,80006de4 <sfs_lookup_subpath+0x44>
80006dc4:	0003100a 	movz	v0,zero,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1370
			*path++ = '\0';
80006dc8:	a0400000 	sb	zero,0(v0)
80006dcc:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1369
}

static char *sfs_lookup_subpath(char *path)
{
	if ((path = strchr(path, '/')) != NULL) {
		while (*path == '/') {
80006dd0:	90430000 	lbu	v1,0(v0)
80006dd4:	5064fffd 	beql	v1,a0,80006dcc <sfs_lookup_subpath+0x2c>
80006dd8:	a0400000 	sb	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1373
			*path++ = '\0';
		}
		if (*path == '\0') {
			return NULL;
80006ddc:	0003100a 	movz	v0,zero,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1377
		}
	}
	return path;
}
80006de0:	8fbf0014 	lw	ra,20(sp)
80006de4:	03e00008 	jr	ra
80006de8:	27bd0018 	addiu	sp,sp,24

80006dec <sfs_gettype>:
sfs_gettype():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1164
	unlock_sfs_fs(sfs);
	return ret;
}

static int sfs_gettype(struct inode *node, uint32_t * type_store)
{
80006dec:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1165
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80006df0:	10800023 	beqz	a0,80006e80 <sfs_gettype+0x94>
80006df4:	afbf0014 	sw	ra,20(sp)
80006df8:	8c830038 	lw	v1,56(a0)
80006dfc:	24021237 	li	v0,4663
80006e00:	54620020 	bnel	v1,v0,80006e84 <sfs_gettype+0x98>
80006e04:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1166
	switch (din->type) {
80006e08:	8c820000 	lw	v0,0(a0)
80006e0c:	94470008 	lhu	a3,8(v0)
80006e10:	24020002 	li	v0,2
80006e14:	10e20015 	beq	a3,v0,80006e6c <sfs_gettype+0x80>
80006e18:	8fbf0014 	lw	ra,20(sp)
80006e1c:	24020003 	li	v0,3
80006e20:	10e2000e 	beq	a3,v0,80006e5c <sfs_gettype+0x70>
80006e24:	3402a000 	li	v0,0xa000
80006e28:	24020001 	li	v0,1
80006e2c:	10e20006 	beq	a3,v0,80006e48 <sfs_gettype+0x5c>
80006e30:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1177
		return 0;
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
80006e34:	3c068002 	lui	a2,0x8002
80006e38:	24842030 	addiu	a0,a0,8240
80006e3c:	24050499 	li	a1,1177
80006e40:	0c006b13 	jal	8001ac4c <__panic>
80006e44:	24c62074 	addiu	a2,a2,8308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1171
	switch (din->type) {
	case SFS_TYPE_DIR:
		*type_store = S_IFDIR;
		return 0;
	case SFS_TYPE_FILE:
		*type_store = S_IFREG;
80006e48:	34028000 	li	v0,0x8000
80006e4c:	aca20000 	sw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1178
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
}
80006e50:	27bd0018 	addiu	sp,sp,24
80006e54:	03e00008 	jr	ra
80006e58:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1174
		return 0;
	case SFS_TYPE_FILE:
		*type_store = S_IFREG;
		return 0;
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
80006e5c:	aca20000 	sw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1178
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
}
80006e60:	27bd0018 	addiu	sp,sp,24
80006e64:	03e00008 	jr	ra
80006e68:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1168
static int sfs_gettype(struct inode *node, uint32_t * type_store)
{
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	switch (din->type) {
	case SFS_TYPE_DIR:
		*type_store = S_IFDIR;
80006e6c:	24024000 	li	v0,16384
80006e70:	aca20000 	sw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1178
	case SFS_TYPE_LINK:
		*type_store = S_IFLNK;
		return 0;
	}
	panic("invalid file type %d.\n", din->type);
}
80006e74:	27bd0018 	addiu	sp,sp,24
80006e78:	03e00008 	jr	ra
80006e7c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1165
	return ret;
}

static int sfs_gettype(struct inode *node, uint32_t * type_store)
{
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80006e80:	3c048002 	lui	a0,0x8002
80006e84:	3c068002 	lui	a2,0x8002
80006e88:	3c078002 	lui	a3,0x8002
80006e8c:	24842030 	addiu	a0,a0,8240
80006e90:	2405048d 	li	a1,1165
80006e94:	24c60e48 	addiu	a2,a2,3656
80006e98:	0c006b13 	jal	8001ac4c <__panic>
80006e9c:	24e7203c 	addiu	a3,a3,8252

80006ea0 <sfs_block_inuse>:
sfs_block_inuse():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:65
	list_del(&(sin->inode_link));
	list_del(&(sin->hash_link));
}

static bool sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino)
{
80006ea0:	27bdffe0 	addiu	sp,sp,-32
80006ea4:	afbf001c 	sw	ra,28(sp)
80006ea8:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:66
	if (ino != 0 && ino < sfs->super.blocks) {
80006eac:	10a0000a 	beqz	a1,80006ed8 <sfs_block_inuse+0x38>
80006eb0:	8c870004 	lw	a3,4(a0)
80006eb4:	00a7182b 	sltu	v1,a1,a3
80006eb8:	50600008 	beqzl	v1,80006edc <sfs_block_inuse+0x3c>
80006ebc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:67
		return !bitmap_test(sfs->freemap, ino);
80006ec0:	0c001904 	jal	80006410 <bitmap_test>
80006ec4:	8c840030 	lw	a0,48(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:71
	}
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
	      sfs->super.blocks, ino);
}
80006ec8:	8fbf001c 	lw	ra,28(sp)
80006ecc:	2c420001 	sltiu	v0,v0,1
80006ed0:	03e00008 	jr	ra
80006ed4:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:69
static bool sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino)
{
	if (ino != 0 && ino < sfs->super.blocks) {
		return !bitmap_test(sfs->freemap, ino);
	}
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
80006ed8:	3c048002 	lui	a0,0x8002
80006edc:	3c068002 	lui	a2,0x8002
80006ee0:	24842030 	addiu	a0,a0,8240
80006ee4:	24050046 	li	a1,70
80006ee8:	24c6208c 	addiu	a2,a2,8332
80006eec:	0c006b13 	jal	8001ac4c <__panic>
80006ef0:	afa20010 	sw	v0,16(sp)

80006ef4 <sfs_create_inode>:
sfs_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:95
}

static int
sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino,
		 struct inode **node_store)
{
80006ef4:	27bdffd0 	addiu	sp,sp,-48
80006ef8:	afb20024 	sw	s2,36(sp)
80006efc:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:97
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
80006f00:	24041237 	li	a0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:95
}

static int
sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino,
		 struct inode **node_store)
{
80006f04:	afb30028 	sw	s3,40(sp)
80006f08:	afb10020 	sw	s1,32(sp)
80006f0c:	afb0001c 	sw	s0,28(sp)
80006f10:	afbf002c 	sw	ra,44(sp)
80006f14:	00a08021 	move	s0,a1
80006f18:	00c08821 	move	s1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:97
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
80006f1c:	0c001090 	jal	80004240 <__alloc_inode>
80006f20:	00e09821 	move	s3,a3
80006f24:	1040002c 	beqz	v0,80006fd8 <sfs_create_inode+0xe4>
80006f28:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:98
		vop_init(node, sfs_get_ops(din->type), info2fs(sfs, sfs));
80006f2c:	96070008 	lhu	a3,8(s0)
sfs_get_ops():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:38
	up(&(sin->sem));
}

static const struct inode_ops *sfs_get_ops(uint16_t type)
{
	switch (type) {
80006f30:	10e30008 	beq	a3,v1,80006f54 <sfs_create_inode+0x60>
80006f34:	24030002 	li	v1,2
80006f38:	10e30024 	beq	a3,v1,80006fcc <sfs_create_inode+0xd8>
80006f3c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:44
	case SFS_TYPE_DIR:
		return &sfs_node_dirops;
	case SFS_TYPE_FILE:
		return &sfs_node_fileops;
	}
	panic("invalid file type %d.\n", type);
80006f40:	3c068002 	lui	a2,0x8002
80006f44:	24842030 	addiu	a0,a0,8240
80006f48:	2405002c 	li	a1,44
80006f4c:	0c006b13 	jal	8001ac4c <__panic>
80006f50:	24c62074 	addiu	a2,a2,8308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:42
{
	switch (type) {
	case SFS_TYPE_DIR:
		return &sfs_node_dirops;
	case SFS_TYPE_FILE:
		return &sfs_node_fileops;
80006f54:	3c058002 	lui	a1,0x8002
80006f58:	24a5ff90 	addiu	a1,a1,-112
sfs_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:98
sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino,
		 struct inode **node_store)
{
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
		vop_init(node, sfs_get_ops(din->type), info2fs(sfs, sfs));
80006f5c:	00402021 	move	a0,v0
80006f60:	02403021 	move	a2,s2
80006f64:	0c0010d1 	jal	80004344 <inode_init>
80006f68:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:99
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80006f6c:	8fa20010 	lw	v0,16(sp)
80006f70:	24031237 	li	v1,4663
80006f74:	8c440038 	lw	a0,56(v0)
80006f78:	14830019 	bne	a0,v1,80006fe0 <sfs_create_inode+0xec>
80006f7c:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:100
		sin->din = din, sin->ino = ino, sin->dirty = 0, sin->flags =
80006f80:	ac500000 	sw	s0,0(v0)
80006f84:	ac510004 	sw	s1,4(v0)
80006f88:	ac40000c 	sw	zero,12(v0)
80006f8c:	ac400008 	sw	zero,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:101
		    0, sin->reclaim_count = 1;
80006f90:	ac430010 	sw	v1,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:102
		sem_init(&(sin->sem), 1);
80006f94:	24440014 	addiu	a0,v0,20
80006f98:	24050001 	li	a1,1
80006f9c:	0c00671f 	jal	80019c7c <sem_init>
80006fa0:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:103
		*node_store = node;
80006fa4:	8fa20010 	lw	v0,16(sp)
80006fa8:	ae620000 	sw	v0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:104
		return 0;
80006fac:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:107
	}
	return -E_NO_MEM;
}
80006fb0:	8fbf002c 	lw	ra,44(sp)
80006fb4:	8fb30028 	lw	s3,40(sp)
80006fb8:	8fb20024 	lw	s2,36(sp)
80006fbc:	8fb10020 	lw	s1,32(sp)
80006fc0:	8fb0001c 	lw	s0,28(sp)
80006fc4:	03e00008 	jr	ra
80006fc8:	27bd0030 	addiu	sp,sp,48
sfs_get_ops():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:40

static const struct inode_ops *sfs_get_ops(uint16_t type)
{
	switch (type) {
	case SFS_TYPE_DIR:
		return &sfs_node_dirops;
80006fcc:	3c058002 	lui	a1,0x8002
80006fd0:	08001bd7 	j	80006f5c <sfs_create_inode+0x68>
80006fd4:	24a5ff34 	addiu	a1,a1,-204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:106
		    0, sin->reclaim_count = 1;
		sem_init(&(sin->sem), 1);
		*node_store = node;
		return 0;
	}
	return -E_NO_MEM;
80006fd8:	08001bec 	j	80006fb0 <sfs_create_inode+0xbc>
80006fdc:	2402fff4 	li	v0,-12
sfs_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:99
		 struct inode **node_store)
{
	struct inode *node;
	if ((node = alloc_inode(sfs_inode)) != NULL) {
		vop_init(node, sfs_get_ops(din->type), info2fs(sfs, sfs));
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80006fe0:	3c048002 	lui	a0,0x8002
80006fe4:	3c068002 	lui	a2,0x8002
80006fe8:	3c078002 	lui	a3,0x8002
80006fec:	24842030 	addiu	a0,a0,8240
80006ff0:	24050063 	li	a1,99
80006ff4:	24c60e48 	addiu	a2,a2,3656
80006ff8:	0c006b13 	jal	8001ac4c <__panic>
80006ffc:	24e7203c 	addiu	a3,a3,8252

80007000 <sfs_block_alloc>:
sfs_block_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:74
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
	      sfs->super.blocks, ino);
}

static int sfs_block_alloc(struct sfs_fs *sfs, uint32_t * ino_store)
{
80007000:	27bdffe0 	addiu	sp,sp,-32
80007004:	afb00014 	sw	s0,20(sp)
80007008:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:76
	int ret;
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
8000700c:	8c840030 	lw	a0,48(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:74
	panic("sfs_block_inuse: called out of range (0, %u) %u.\n",
	      sfs->super.blocks, ino);
}

static int sfs_block_alloc(struct sfs_fs *sfs, uint32_t * ino_store)
{
80007010:	afb10018 	sw	s1,24(sp)
80007014:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:76
	int ret;
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
80007018:	0c0018d4 	jal	80006350 <bitmap_alloc>
8000701c:	00a08821 	move	s1,a1
80007020:	14400013 	bnez	v0,80007070 <sfs_block_alloc+0x70>
80007024:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:79
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
80007028:	8e020008 	lw	v0,8(s0)
8000702c:	1040001c 	beqz	v0,800070a0 <sfs_block_alloc+0xa0>
80007030:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:80
	sfs->super.unused_blocks--, sfs->super_dirty = 1;
80007034:	ae020008 	sw	v0,8(s0)
80007038:	24020001 	li	v0,1
8000703c:	ae020034 	sw	v0,52(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:81
	assert(sfs_block_inuse(sfs, *ino_store));
80007040:	8e250000 	lw	a1,0(s1)
80007044:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
80007048:	02002021 	move	a0,s0
8000704c:	1040000c 	beqz	v0,80007080 <sfs_block_alloc+0x80>
80007050:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:82
	return sfs_clear_block(sfs, *ino_store, 1);
80007054:	8e250000 	lw	a1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:83
}
80007058:	8fbf001c 	lw	ra,28(sp)
8000705c:	8fb10018 	lw	s1,24(sp)
80007060:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:82
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
	sfs->super.unused_blocks--, sfs->super_dirty = 1;
	assert(sfs_block_inuse(sfs, *ino_store));
	return sfs_clear_block(sfs, *ino_store, 1);
80007064:	24060001 	li	a2,1
80007068:	08002c21 	j	8000b084 <sfs_clear_block>
8000706c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:83
}
80007070:	8fb10018 	lw	s1,24(sp)
80007074:	8fb00014 	lw	s0,20(sp)
80007078:	03e00008 	jr	ra
8000707c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:81
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
	sfs->super.unused_blocks--, sfs->super_dirty = 1;
	assert(sfs_block_inuse(sfs, *ino_store));
80007080:	3c048002 	lui	a0,0x8002
80007084:	3c068002 	lui	a2,0x8002
80007088:	3c078002 	lui	a3,0x8002
8000708c:	24842030 	addiu	a0,a0,8240
80007090:	24050051 	li	a1,81
80007094:	24c60e48 	addiu	a2,a2,3656
80007098:	0c006b13 	jal	8001ac4c <__panic>
8000709c:	24e720e0 	addiu	a3,a3,8416
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:79
{
	int ret;
	if ((ret = bitmap_alloc(sfs->freemap, ino_store)) != 0) {
		return ret;
	}
	assert(sfs->super.unused_blocks > 0);
800070a0:	3c048002 	lui	a0,0x8002
800070a4:	3c068002 	lui	a2,0x8002
800070a8:	3c078002 	lui	a3,0x8002
800070ac:	24842030 	addiu	a0,a0,8240
800070b0:	2405004f 	li	a1,79
800070b4:	24c60e48 	addiu	a2,a2,3656
800070b8:	0c006b13 	jal	8001ac4c <__panic>
800070bc:	24e720c0 	addiu	a3,a3,8384

800070c0 <sfs_block_free>:
sfs_block_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:86
	assert(sfs_block_inuse(sfs, *ino_store));
	return sfs_clear_block(sfs, *ino_store, 1);
}

static void sfs_block_free(struct sfs_fs *sfs, uint32_t ino)
{
800070c0:	27bdffe0 	addiu	sp,sp,-32
800070c4:	afb10018 	sw	s1,24(sp)
800070c8:	afb00014 	sw	s0,20(sp)
800070cc:	afbf001c 	sw	ra,28(sp)
800070d0:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:87
	assert(sfs_block_inuse(sfs, ino));
800070d4:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
800070d8:	00a08821 	move	s1,a1
800070dc:	1040000e 	beqz	v0,80007118 <sfs_block_free+0x58>
800070e0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:88
	bitmap_free(sfs->freemap, ino);
800070e4:	8e040030 	lw	a0,48(s0)
800070e8:	0c001916 	jal	80006458 <bitmap_free>
800070ec:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:89
	sfs->super.unused_blocks++, sfs->super_dirty = 1;
800070f0:	8e020008 	lw	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:90
}
800070f4:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:89

static void sfs_block_free(struct sfs_fs *sfs, uint32_t ino)
{
	assert(sfs_block_inuse(sfs, ino));
	bitmap_free(sfs->freemap, ino);
	sfs->super.unused_blocks++, sfs->super_dirty = 1;
800070f8:	24030001 	li	v1,1
800070fc:	24420001 	addiu	v0,v0,1
80007100:	ae030034 	sw	v1,52(s0)
80007104:	ae020008 	sw	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:90
}
80007108:	8fb10018 	lw	s1,24(sp)
8000710c:	8fb00014 	lw	s0,20(sp)
80007110:	03e00008 	jr	ra
80007114:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:87
	return sfs_clear_block(sfs, *ino_store, 1);
}

static void sfs_block_free(struct sfs_fs *sfs, uint32_t ino)
{
	assert(sfs_block_inuse(sfs, ino));
80007118:	3c068002 	lui	a2,0x8002
8000711c:	3c078002 	lui	a3,0x8002
80007120:	24842030 	addiu	a0,a0,8240
80007124:	24050057 	li	a1,87
80007128:	24c60e48 	addiu	a2,a2,3656
8000712c:	0c006b13 	jal	8001ac4c <__panic>
80007130:	24e7216c 	addiu	a3,a3,8556

80007134 <sfs_bmap_get_sub_nolock>:
sfs_bmap_get_sub_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:167
}

static int
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
80007134:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:168
	assert(index < SFS_BLK_NENTRY);
80007138:	2cc20400 	sltiu	v0,a2,1024
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:167
}

static int
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
8000713c:	afb30034 	sw	s3,52(sp)
80007140:	afb1002c 	sw	s1,44(sp)
80007144:	afb00028 	sw	s0,40(sp)
80007148:	afbf003c 	sw	ra,60(sp)
8000714c:	afb40038 	sw	s4,56(sp)
80007150:	afb20030 	sw	s2,48(sp)
80007154:	00809821 	move	s3,a0
80007158:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:168
	assert(index < SFS_BLK_NENTRY);
8000715c:	10400047 	beqz	v0,8000727c <sfs_bmap_get_sub_nolock+0x148>
80007160:	00e08821 	move	s1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:172
	int ret;
	uint32_t ent, ino = 0;
	off_t offset = index * sizeof(uint32_t);
	if ((ent = *entp) != 0) {
80007164:	8ca70000 	lw	a3,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:170
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
	assert(index < SFS_BLK_NENTRY);
	int ret;
	uint32_t ent, ino = 0;
80007168:	afa00018 	sw	zero,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:171
	off_t offset = index * sizeof(uint32_t);
8000716c:	00069080 	sll	s2,a2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:172
	if ((ent = *entp) != 0) {
80007170:	14e0000e 	bnez	a3,800071ac <sfs_bmap_get_sub_nolock+0x78>
80007174:	afa7001c 	sw	a3,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:181
		}
		if (ino != 0 || !create) {
			goto out;
		}
	} else {
		if (!create) {
80007178:	1620001e 	bnez	s1,800071f4 <sfs_bmap_get_sub_nolock+0xc0>
8000717c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:201

out:
	if (ent != *entp) {
		*entp = ent;
	}
	*ino_store = ino;
80007180:	8fa30050 	lw	v1,80(sp)
80007184:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:202
	return 0;
80007188:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:209
failed_cleanup:
	if (ent != *entp) {
		sfs_block_free(sfs, ent);
	}
	return ret;
}
8000718c:	8fbf003c 	lw	ra,60(sp)
80007190:	8fb40038 	lw	s4,56(sp)
80007194:	8fb30034 	lw	s3,52(sp)
80007198:	8fb20030 	lw	s2,48(sp)
8000719c:	8fb1002c 	lw	s1,44(sp)
800071a0:	8fb00028 	lw	s0,40(sp)
800071a4:	03e00008 	jr	ra
800071a8:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:173
	assert(index < SFS_BLK_NENTRY);
	int ret;
	uint32_t ent, ino = 0;
	off_t offset = index * sizeof(uint32_t);
	if ((ent = *entp) != 0) {
		if ((ret =
800071ac:	27b40018 	addiu	s4,sp,24
800071b0:	02802821 	move	a1,s4
800071b4:	24060004 	li	a2,4
800071b8:	0c002b81 	jal	8000ae04 <sfs_rbuf>
800071bc:	afb20010 	sw	s2,16(sp)
800071c0:	1440fff3 	bnez	v0,80007190 <sfs_bmap_get_sub_nolock+0x5c>
800071c4:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:177
		     sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
			return ret;
		}
		if (ino != 0 || !create) {
800071c8:	8fa20018 	lw	v0,24(sp)
800071cc:	54400004 	bnezl	v0,800071e0 <sfs_bmap_get_sub_nolock+0xac>
800071d0:	8e040000 	lw	a0,0(s0)
800071d4:	1620000c 	bnez	s1,80007208 <sfs_bmap_get_sub_nolock+0xd4>
800071d8:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:194
	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
		goto failed_cleanup;
	}
	if ((ret = sfs_wbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
		sfs_block_free(sfs, ino);
		goto failed_cleanup;
800071dc:	8e040000 	lw	a0,0(s0)
800071e0:	8fa3001c 	lw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:198
	}

out:
	if (ent != *entp) {
800071e4:	5464ffe6 	bnel	v1,a0,80007180 <sfs_bmap_get_sub_nolock+0x4c>
800071e8:	ae030000 	sw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:201
		*entp = ent;
	}
	*ino_store = ino;
800071ec:	08001c61 	j	80007184 <sfs_bmap_get_sub_nolock+0x50>
800071f0:	8fa30050 	lw	v1,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:184
		}
	} else {
		if (!create) {
			goto out;
		}
		if ((ret = sfs_block_alloc(sfs, &ent)) != 0) {
800071f4:	0c001c00 	jal	80007000 <sfs_block_alloc>
800071f8:	27a5001c 	addiu	a1,sp,28
800071fc:	1440ffe3 	bnez	v0,8000718c <sfs_bmap_get_sub_nolock+0x58>
80007200:	27b40018 	addiu	s4,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:189
			return ret;
		}
	}

	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
80007204:	02602021 	move	a0,s3
80007208:	0c001c00 	jal	80007000 <sfs_block_alloc>
8000720c:	02802821 	move	a1,s4
80007210:	1040000a 	beqz	v0,8000723c <sfs_bmap_get_sub_nolock+0x108>
80007214:	8fa7001c 	lw	a3,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:205
	}
	*ino_store = ino;
	return 0;

failed_cleanup:
	if (ent != *entp) {
80007218:	8fa5001c 	lw	a1,28(sp)
8000721c:	8e030000 	lw	v1,0(s0)
80007220:	1065ffdb 	beq	v1,a1,80007190 <sfs_bmap_get_sub_nolock+0x5c>
80007224:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:206
		sfs_block_free(sfs, ent);
80007228:	02602021 	move	a0,s3
8000722c:	0c001c30 	jal	800070c0 <sfs_block_free>
80007230:	afa20020 	sw	v0,32(sp)
80007234:	08001c63 	j	8000718c <sfs_bmap_get_sub_nolock+0x58>
80007238:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:192
	}

	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
		goto failed_cleanup;
	}
	if ((ret = sfs_wbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
8000723c:	02602021 	move	a0,s3
80007240:	02802821 	move	a1,s4
80007244:	24060004 	li	a2,4
80007248:	0c002bb6 	jal	8000aed8 <sfs_wbuf>
8000724c:	afb20010 	sw	s2,16(sp)
80007250:	14400004 	bnez	v0,80007264 <sfs_bmap_get_sub_nolock+0x130>
80007254:	8fa3001c 	lw	v1,28(sp)
80007258:	8e040000 	lw	a0,0(s0)
8000725c:	08001c79 	j	800071e4 <sfs_bmap_get_sub_nolock+0xb0>
80007260:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:193
		sfs_block_free(sfs, ino);
80007264:	8fa50018 	lw	a1,24(sp)
80007268:	02602021 	move	a0,s3
8000726c:	0c001c30 	jal	800070c0 <sfs_block_free>
80007270:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:194
		goto failed_cleanup;
80007274:	08001c86 	j	80007218 <sfs_bmap_get_sub_nolock+0xe4>
80007278:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:168

static int
sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t * entp, uint32_t index,
			bool create, uint32_t * ino_store)
{
	assert(index < SFS_BLK_NENTRY);
8000727c:	3c048002 	lui	a0,0x8002
80007280:	3c068002 	lui	a2,0x8002
80007284:	3c078002 	lui	a3,0x8002
80007288:	24842030 	addiu	a0,a0,8240
8000728c:	240500a8 	li	a1,168
80007290:	24c60e48 	addiu	a2,a2,3656
80007294:	0c006b13 	jal	8001ac4c <__panic>
80007298:	24e72104 	addiu	a3,a3,8452

8000729c <sfs_dirent_create_inode>:
sfs_dirent_create_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:523
}

static int
sfs_dirent_create_inode(struct sfs_fs *sfs, uint16_t type,
			struct inode **node_store)
{
8000729c:	27bdffc8 	addiu	sp,sp,-56
800072a0:	afb10028 	sw	s1,40(sp)
800072a4:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:525
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
800072a8:	24040048 	li	a0,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:523
}

static int
sfs_dirent_create_inode(struct sfs_fs *sfs, uint16_t type,
			struct inode **node_store)
{
800072ac:	afb30030 	sw	s3,48(sp)
800072b0:	afb2002c 	sw	s2,44(sp)
800072b4:	afb00024 	sw	s0,36(sp)
800072b8:	afbf0034 	sw	ra,52(sp)
800072bc:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:525
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
800072c0:	0c00548e 	jal	80015238 <kmalloc>
800072c4:	00a09821 	move	s3,a1
800072c8:	10400039 	beqz	v0,800073b0 <sfs_dirent_create_inode+0x114>
800072cc:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:528
		return -E_NO_MEM;
	}
	memset(din, 0, sizeof(struct sfs_disk_inode));
800072d0:	00402021 	move	a0,v0
800072d4:	00002821 	move	a1,zero
800072d8:	0c005c5a 	jal	80017168 <memset>
800072dc:	24060048 	li	a2,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:529
	din->type = type;
800072e0:	a6130008 	sh	s3,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:533

	int ret;
	uint32_t ino;
	if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
800072e4:	02202021 	move	a0,s1
800072e8:	0c001c00 	jal	80007000 <sfs_block_alloc>
800072ec:	27a50014 	addiu	a1,sp,20
800072f0:	14400025 	bnez	v0,80007388 <sfs_dirent_create_inode+0xec>
800072f4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:537
		goto failed_cleanup_din;
	}
	struct inode *node;
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
800072f8:	8fa60014 	lw	a2,20(sp)
800072fc:	02202021 	move	a0,s1
80007300:	02002821 	move	a1,s0
80007304:	0c001bbd 	jal	80006ef4 <sfs_create_inode>
80007308:	27a70010 	addiu	a3,sp,16
8000730c:	14400019 	bnez	v0,80007374 <sfs_dirent_create_inode+0xd8>
80007310:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:540
		goto failed_cleanup_ino;
	}
	lock_sfs_fs(sfs);
80007314:	02202021 	move	a0,s1
80007318:	0c002c4a 	jal	8000b128 <lock_sfs_fs>
8000731c:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:542
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
80007320:	8fa50010 	lw	a1,16(sp)
80007324:	10a00024 	beqz	a1,800073b8 <sfs_dirent_create_inode+0x11c>
80007328:	8fa20018 	lw	v0,24(sp)
8000732c:	8ca40038 	lw	a0,56(a1)
80007330:	24031237 	li	v1,4663
80007334:	14830020 	bne	a0,v1,800073b8 <sfs_dirent_create_inode+0x11c>
80007338:	02202021 	move	a0,s1
8000733c:	0c001b4a 	jal	80006d28 <sfs_set_links>
80007340:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:544
	}
	unlock_sfs_fs(sfs);
80007344:	0c002c50 	jal	8000b140 <unlock_sfs_fs>
80007348:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:545
	*node_store = node;
8000734c:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:553
failed_cleanup_ino:
	sfs_block_free(sfs, ino);
failed_cleanup_din:
	kfree(din);
	return ret;
}
80007350:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:546
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
	}
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;
80007354:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:545
	lock_sfs_fs(sfs);
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
	}
	unlock_sfs_fs(sfs);
	*node_store = node;
80007358:	ae430000 	sw	v1,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:553
failed_cleanup_ino:
	sfs_block_free(sfs, ino);
failed_cleanup_din:
	kfree(din);
	return ret;
}
8000735c:	8fb30030 	lw	s3,48(sp)
80007360:	8fb2002c 	lw	s2,44(sp)
80007364:	8fb10028 	lw	s1,40(sp)
80007368:	8fb00024 	lw	s0,36(sp)
8000736c:	03e00008 	jr	ra
80007370:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:549
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;

failed_cleanup_ino:
	sfs_block_free(sfs, ino);
80007374:	02202021 	move	a0,s1
80007378:	0c001c30 	jal	800070c0 <sfs_block_free>
8000737c:	afa20018 	sw	v0,24(sp)
80007380:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:551
failed_cleanup_din:
	kfree(din);
80007384:	02002021 	move	a0,s0
80007388:	0c0054b9 	jal	800152e4 <kfree>
8000738c:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:552
	return ret;
80007390:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:553
}
80007394:	8fbf0034 	lw	ra,52(sp)
80007398:	8fb30030 	lw	s3,48(sp)
8000739c:	8fb2002c 	lw	s2,44(sp)
800073a0:	8fb10028 	lw	s1,40(sp)
800073a4:	8fb00024 	lw	s0,36(sp)
800073a8:	03e00008 	jr	ra
800073ac:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:526
sfs_dirent_create_inode(struct sfs_fs *sfs, uint16_t type,
			struct inode **node_store)
{
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
		return -E_NO_MEM;
800073b0:	08001ce5 	j	80007394 <sfs_dirent_create_inode+0xf8>
800073b4:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:542
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
		goto failed_cleanup_ino;
	}
	lock_sfs_fs(sfs);
	{
		sfs_set_links(sfs, vop_info(node, sfs_inode));
800073b8:	3c048002 	lui	a0,0x8002
800073bc:	3c068002 	lui	a2,0x8002
800073c0:	3c078002 	lui	a3,0x8002
800073c4:	24842030 	addiu	a0,a0,8240
800073c8:	2405021e 	li	a1,542
800073cc:	24c60e48 	addiu	a2,a2,3656
800073d0:	0c006b13 	jal	8001ac4c <__panic>
800073d4:	24e7203c 	addiu	a3,a3,8252

800073d8 <sfs_bmap_load_nolock>:
sfs_bmap_load_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073d8:	27bdffc0 	addiu	sp,sp,-64
800073dc:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:341
	struct sfs_disk_inode *din = sin->din;
800073e0:	8cb00000 	lw	s0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073e4:	afb20028 	sw	s2,40(sp)
800073e8:	afb40030 	sw	s4,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:342
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800073ec:	8e12000c 	lw	s2,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073f0:	afb3002c 	sw	s3,44(sp)
800073f4:	afb10024 	sw	s1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:342
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800073f8:	0246102b 	sltu	v0,s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:340
}

static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
800073fc:	afbf003c 	sw	ra,60(sp)
80007400:	afb60038 	sw	s6,56(sp)
80007404:	afb50034 	sw	s5,52(sp)
80007408:	00a08821 	move	s1,a1
8000740c:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:342
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
80007410:	14400071 	bnez	v0,800075d8 <sfs_bmap_load_nolock+0x200>
80007414:	00e0a021 	move	s4,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:345
	int ret;
	uint32_t ino;
	bool create = (index == din->blocks);
80007418:	02469026 	xor	s2,s2,a2
sfs_bmap_get_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:218
		    bool create, uint32_t * ino_store)
{
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
8000741c:	2cc2000c 	sltiu	v0,a2,12
80007420:	10400020 	beqz	v0,800074a4 <sfs_bmap_load_nolock+0xcc>
80007424:	2e520001 	sltiu	s2,s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:219
		if ((ino = din->direct[index]) == 0 && create) {
80007428:	24d50004 	addiu	s5,a2,4
8000742c:	0015a880 	sll	s5,s5,0x2
80007430:	0215a821 	addu	s5,s0,s5
80007434:	8eb60000 	lw	s6,0(s5)
80007438:	12c00058 	beqz	s6,8000759c <sfs_bmap_load_nolock+0x1c4>
8000743c:	afb60018 	sw	s6,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
80007440:	02602021 	move	a0,s3
80007444:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
80007448:	02c02821 	move	a1,s6
8000744c:	10400071 	beqz	v0,80007614 <sfs_bmap_load_nolock+0x23c>
80007450:	8fb60018 	lw	s6,24(sp)
sfs_bmap_load_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:349
	uint32_t ino;
	bool create = (index == din->blocks);
	if ((ret = sfs_bmap_get_nolock(sfs, sin, index, create, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
80007454:	02602021 	move	a0,s3
80007458:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
8000745c:	02c02821 	move	a1,s6
80007460:	10400065 	beqz	v0,800075f8 <sfs_bmap_load_nolock+0x220>
80007464:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:350
	if (create) {
80007468:	56400058 	bnezl	s2,800075cc <sfs_bmap_load_nolock+0x1f4>
8000746c:	8e02000c 	lw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:353
		din->blocks++;
	}
	if (ino_store != NULL) {
80007470:	12800002 	beqz	s4,8000747c <sfs_bmap_load_nolock+0xa4>
80007474:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:354
		*ino_store = ino;
80007478:	ae960000 	sw	s6,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:357
	}
	return 0;
}
8000747c:	8fbf003c 	lw	ra,60(sp)
80007480:	8fb60038 	lw	s6,56(sp)
80007484:	8fb50034 	lw	s5,52(sp)
80007488:	8fb40030 	lw	s4,48(sp)
8000748c:	8fb3002c 	lw	s3,44(sp)
80007490:	8fb20028 	lw	s2,40(sp)
80007494:	8fb10024 	lw	s1,36(sp)
80007498:	8fb00020 	lw	s0,32(sp)
8000749c:	03e00008 	jr	ra
800074a0:	27bd0040 	addiu	sp,sp,64
sfs_bmap_get_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:229
			sin->dirty = 1;
		}
		goto out;
	}

	index -= SFS_NDIRECT;
800074a4:	24c3fff4 	addiu	v1,a2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:230
	if (index < SFS_BLK_NENTRY) {
800074a8:	2c620400 	sltiu	v0,v1,1024
800074ac:	50400017 	beqzl	v0,8000750c <sfs_bmap_load_nolock+0x134>
800074b0:	8e020044 	lw	v0,68(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:231
		ent = din->indirect;
800074b4:	8e020040 	lw	v0,64(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:232
		if ((ret =
800074b8:	27a5001c 	addiu	a1,sp,28
800074bc:	00603021 	move	a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:231
		goto out;
	}

	index -= SFS_NDIRECT;
	if (index < SFS_BLK_NENTRY) {
		ent = din->indirect;
800074c0:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:232
		if ((ret =
800074c4:	02403821 	move	a3,s2
800074c8:	27a20018 	addiu	v0,sp,24
800074cc:	0c001c4d 	jal	80007134 <sfs_bmap_get_sub_nolock>
800074d0:	afa20010 	sw	v0,16(sp)
800074d4:	1440ffea 	bnez	v0,80007480 <sfs_bmap_load_nolock+0xa8>
800074d8:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:237
		     sfs_bmap_get_sub_nolock(sfs, &ent, index, create,
					     &ino)) != 0) {
			return ret;
		}
		if (ent != din->indirect) {
800074dc:	8e030040 	lw	v1,64(s0)
800074e0:	8fa2001c 	lw	v0,28(sp)
800074e4:	10620029 	beq	v1,v0,8000758c <sfs_bmap_load_nolock+0x1b4>
800074e8:	8fb60018 	lw	s6,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:238
			assert(din->indirect == 0);
800074ec:	14600058 	bnez	v1,80007650 <sfs_bmap_load_nolock+0x278>
800074f0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:239
			din->indirect = ent;
800074f4:	ae020040 	sw	v0,64(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:240
			sin->dirty = 1;
800074f8:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
800074fc:	12c0ffd5 	beqz	s6,80007454 <sfs_bmap_load_nolock+0x7c>
80007500:	ae22000c 	sw	v0,12(s1)
80007504:	08001d11 	j	80007444 <sfs_bmap_load_nolock+0x6c>
80007508:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:245
			sin->dirty = 1;
		}
		goto out;
	}

	index -= SFS_BLK_NENTRY;
8000750c:	24d5fbf4 	addiu	s5,a2,-1036
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:247
	ent = din->db_indirect;
	if ((ret =
80007510:	27a5001c 	addiu	a1,sp,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:246
		}
		goto out;
	}

	index -= SFS_BLK_NENTRY;
	ent = din->db_indirect;
80007514:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:247
	if ((ret =
80007518:	00153282 	srl	a2,s5,0xa
8000751c:	27a20018 	addiu	v0,sp,24
80007520:	02403821 	move	a3,s2
80007524:	0c001c4d 	jal	80007134 <sfs_bmap_get_sub_nolock>
80007528:	afa20010 	sw	v0,16(sp)
8000752c:	1440ffd4 	bnez	v0,80007480 <sfs_bmap_load_nolock+0xa8>
80007530:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:252
	     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY, create,
				     &ino)) != 0) {
		return ret;
	}
	if (ent != din->db_indirect) {
80007534:	8e030044 	lw	v1,68(s0)
80007538:	8fa2001c 	lw	v0,28(sp)
8000753c:	50620007 	beql	v1,v0,8000755c <sfs_bmap_load_nolock+0x184>
80007540:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:253
		assert(din->db_indirect == 0);
80007544:	1460003b 	bnez	v1,80007634 <sfs_bmap_load_nolock+0x25c>
80007548:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:254
		din->db_indirect = ent;
8000754c:	ae020044 	sw	v0,68(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:255
		sin->dirty = 1;
80007550:	24020001 	li	v0,1
80007554:	ae22000c 	sw	v0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:257
	}
	if ((ent = ino) != 0) {
80007558:	8fa20018 	lw	v0,24(sp)
8000755c:	0000b021 	move	s6,zero
80007560:	1040ffbc 	beqz	v0,80007454 <sfs_bmap_load_nolock+0x7c>
80007564:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:258
		if ((ret =
80007568:	27a20018 	addiu	v0,sp,24
8000756c:	02602021 	move	a0,s3
80007570:	27a5001c 	addiu	a1,sp,28
80007574:	32a603ff 	andi	a2,s5,0x3ff
80007578:	02403821 	move	a3,s2
8000757c:	0c001c4d 	jal	80007134 <sfs_bmap_get_sub_nolock>
80007580:	afa20010 	sw	v0,16(sp)
80007584:	1440ffbd 	bnez	v0,8000747c <sfs_bmap_load_nolock+0xa4>
80007588:	8fb60018 	lw	s6,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
8000758c:	12c0ffb2 	beqz	s6,80007458 <sfs_bmap_load_nolock+0x80>
80007590:	02602021 	move	a0,s3
80007594:	08001d11 	j	80007444 <sfs_bmap_load_nolock+0x6c>
80007598:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:219
{
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
		if ((ino = din->direct[index]) == 0 && create) {
8000759c:	5240ffae 	beqzl	s2,80007458 <sfs_bmap_load_nolock+0x80>
800075a0:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:220
			if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
800075a4:	0c001c00 	jal	80007000 <sfs_block_alloc>
800075a8:	27a50018 	addiu	a1,sp,24
800075ac:	1440ffb3 	bnez	v0,8000747c <sfs_bmap_load_nolock+0xa4>
800075b0:	8fb60018 	lw	s6,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:224
				return ret;
			}
			din->direct[index] = ino;
			sin->dirty = 1;
800075b4:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:223
	if (index < SFS_NDIRECT) {
		if ((ino = din->direct[index]) == 0 && create) {
			if ((ret = sfs_block_alloc(sfs, &ino)) != 0) {
				return ret;
			}
			din->direct[index] = ino;
800075b8:	aeb60000 	sw	s6,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
800075bc:	12c0ffa5 	beqz	s6,80007454 <sfs_bmap_load_nolock+0x7c>
800075c0:	ae22000c 	sw	v0,12(s1)
800075c4:	08001d11 	j	80007444 <sfs_bmap_load_nolock+0x6c>
800075c8:	02602021 	move	a0,s3
sfs_bmap_load_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:351
	if ((ret = sfs_bmap_get_nolock(sfs, sin, index, create, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
	if (create) {
		din->blocks++;
800075cc:	24420001 	addiu	v0,v0,1
800075d0:	08001d1c 	j	80007470 <sfs_bmap_load_nolock+0x98>
800075d4:	ae02000c 	sw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:342
static int
sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index,
		     uint32_t * ino_store)
{
	struct sfs_disk_inode *din = sin->din;
	assert(index <= din->blocks);
800075d8:	3c048002 	lui	a0,0x8002
800075dc:	3c068002 	lui	a2,0x8002
800075e0:	3c078002 	lui	a3,0x8002
800075e4:	24842030 	addiu	a0,a0,8240
800075e8:	24050156 	li	a1,342
800075ec:	24c60e48 	addiu	a2,a2,3656
800075f0:	0c006b13 	jal	8001ac4c <__panic>
800075f4:	24e7211c 	addiu	a3,a3,8476
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:349
	uint32_t ino;
	bool create = (index == din->blocks);
	if ((ret = sfs_bmap_get_nolock(sfs, sin, index, create, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
800075f8:	3c068002 	lui	a2,0x8002
800075fc:	3c078002 	lui	a3,0x8002
80007600:	24842030 	addiu	a0,a0,8240
80007604:	2405015d 	li	a1,349
80007608:	24c60e48 	addiu	a2,a2,3656
8000760c:	0c006b13 	jal	8001ac4c <__panic>
80007610:	24e7216c 	addiu	a3,a3,8556
sfs_bmap_get_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:266
			return ret;
		}
	}

out:
	assert(ino == 0 || sfs_block_inuse(sfs, ino));
80007614:	3c048002 	lui	a0,0x8002
80007618:	3c068002 	lui	a2,0x8002
8000761c:	3c078002 	lui	a3,0x8002
80007620:	24842030 	addiu	a0,a0,8240
80007624:	2405010a 	li	a1,266
80007628:	24c60e48 	addiu	a2,a2,3656
8000762c:	0c006b13 	jal	8001ac4c <__panic>
80007630:	24e72160 	addiu	a3,a3,8544
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:253
	     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY, create,
				     &ino)) != 0) {
		return ret;
	}
	if (ent != din->db_indirect) {
		assert(din->db_indirect == 0);
80007634:	3c068002 	lui	a2,0x8002
80007638:	3c078002 	lui	a3,0x8002
8000763c:	24842030 	addiu	a0,a0,8240
80007640:	240500fd 	li	a1,253
80007644:	24c60e48 	addiu	a2,a2,3656
80007648:	0c006b13 	jal	8001ac4c <__panic>
8000764c:	24e72148 	addiu	a3,a3,8520
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:238
		     sfs_bmap_get_sub_nolock(sfs, &ent, index, create,
					     &ino)) != 0) {
			return ret;
		}
		if (ent != din->indirect) {
			assert(din->indirect == 0);
80007650:	3c068002 	lui	a2,0x8002
80007654:	3c078002 	lui	a3,0x8002
80007658:	24842030 	addiu	a0,a0,8240
8000765c:	240500ee 	li	a1,238
80007660:	24c60e48 	addiu	a2,a2,3656
80007664:	0c006b13 	jal	8001ac4c <__panic>
80007668:	24e72134 	addiu	a3,a3,8500

8000766c <sfs_io_nolock>:
sfs_io_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:609

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
8000766c:	8ca30000 	lw	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:608
}

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
80007670:	27bdffa8 	addiu	sp,sp,-88
80007674:	afb7004c 	sw	s7,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:610
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
80007678:	94620008 	lhu	v0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:609

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
8000767c:	afa30020 	sw	v1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:610
	assert(din->type != SFS_TYPE_DIR);
80007680:	24030002 	li	v1,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:608
}

static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
80007684:	afb50044 	sw	s5,68(sp)
80007688:	afb3003c 	sw	s3,60(sp)
8000768c:	afb20038 	sw	s2,56(sp)
80007690:	0080a821 	move	s5,a0
80007694:	afbf0054 	sw	ra,84(sp)
80007698:	afbe0050 	sw	s8,80(sp)
8000769c:	afb60048 	sw	s6,72(sp)
800076a0:	afb40040 	sw	s4,64(sp)
800076a4:	afb10034 	sw	s1,52(sp)
800076a8:	afb00030 	sw	s0,48(sp)
800076ac:	00a0b821 	move	s7,a1
800076b0:	00c09021 	move	s2,a2
800076b4:	00e09821 	move	s3,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:610
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
800076b8:	10430093 	beq	v0,v1,80007908 <sfs_io_nolock+0x29c>
800076bc:	8fa4006c 	lw	a0,108(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:611
	off_t endpos = offset + *alenp, blkoff;
800076c0:	8fa60068 	lw	a2,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:613
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
800076c4:	3c030800 	lui	v1,0x800
800076c8:	00e3282b 	sltu	a1,a3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:611
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
	off_t endpos = offset + *alenp, blkoff;
800076cc:	8cd60000 	lw	s6,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:614
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
		return -E_INVAL;
800076d0:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:613
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
	off_t endpos = offset + *alenp, blkoff;
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
800076d4:	10a00036 	beqz	a1,800077b0 <sfs_io_nolock+0x144>
800076d8:	acc00000 	sw	zero,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:611
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
	off_t endpos = offset + *alenp, blkoff;
800076dc:	02c7b021 	addu	s6,s6,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:613
	*alenp = 0;
	if (offset < 0 || offset >= SFS_MAX_FILE_SIZE || offset > endpos) {
800076e0:	02c7282a 	slt	a1,s6,a3
800076e4:	54a00033 	bnezl	a1,800077b4 <sfs_io_nolock+0x148>
800076e8:	8fbf0054 	lw	ra,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:616
		return -E_INVAL;
	}
	if (offset == endpos) {
800076ec:	10f60030 	beq	a3,s6,800077b0 <sfs_io_nolock+0x144>
800076f0:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:619
		return 0;
	}
	if (endpos > SFS_MAX_FILE_SIZE) {
800076f4:	24620001 	addiu	v0,v1,1
800076f8:	02c2102b 	sltu	v0,s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:622
		endpos = SFS_MAX_FILE_SIZE;
	}
	if (!write) {
800076fc:	10800071 	beqz	a0,800078c4 <sfs_io_nolock+0x258>
80007700:	0062b00a 	movz	s6,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:636
	int (*sfs_buf_op) (struct sfs_fs * sfs, void *buf, size_t len,
			   uint32_t blkno, off_t offset);
	int (*sfs_block_op) (struct sfs_fs * sfs, void *buf, uint32_t blkno,
			     uint32_t nblks);
	if (write) {
		sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;
80007704:	3c028001 	lui	v0,0x8001
80007708:	3c1e8001 	lui	s8,0x8001
8000770c:	2442aed8 	addiu	v0,v0,-20776
80007710:	27deade4 	addiu	s8,s8,-21020
80007714:	afa20024 	sw	v0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:647
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
80007718:	001317c3 	sra	v0,s3,0x1f
8000771c:	00021502 	srl	v0,v0,0x14
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
80007720:	2a700000 	slti	s0,s3,0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
80007724:	2ad10000 	slti	s1,s6,0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
80007728:	26650fff 	addiu	a1,s3,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
8000772c:	26c40fff 	addiu	a0,s6,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
80007730:	02621821 	addu	v1,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
80007734:	0270280a 	movz	a1,s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
80007738:	02d1200a 	movz	a0,s6,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
8000773c:	30630fff 	andi	v1,v1,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:644
	}

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
80007740:	00058303 	sra	s0,a1,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:645
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
80007744:	00048b03 	sra	s1,a0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
80007748:	00621823 	subu	v1,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:645

	int ret = 0;
	size_t size, alen = 0;
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;
8000774c:	02308823 	subu	s1,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:647

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
80007750:	10600031 	beqz	v1,80007818 <sfs_io_nolock+0x1ac>
80007754:	0000a021 	move	s4,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:649
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
80007758:	02d32023 	subu	a0,s6,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:648
	uint32_t ino;
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
		size =
8000775c:	16200066 	bnez	s1,800078f8 <sfs_io_nolock+0x28c>
80007760:	afa40028 	sw	a0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:650
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
80007764:	02a02021 	move	a0,s5
80007768:	02e02821 	move	a1,s7
8000776c:	02003021 	move	a2,s0
80007770:	27a70018 	addiu	a3,sp,24
80007774:	0c001cf6 	jal	800073d8 <sfs_bmap_load_nolock>
80007778:	afa3002c 	sw	v1,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:642
	} else {
		sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;
	}

	int ret = 0;
	size_t size, alen = 0;
8000777c:	0000a021 	move	s4,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:650
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
80007780:	10400017 	beqz	v0,800077e0 <sfs_io_nolock+0x174>
80007784:	8fa3002c 	lw	v1,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:685
		}
		alen += size;
	}

out:
	*alenp = alen;
80007788:	8fa30068 	lw	v1,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:686
	if (offset + alen > din->fileinfo.size) {
8000778c:	8fa40020 	lw	a0,32(sp)
80007790:	02939821 	addu	s3,s4,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:685
		}
		alen += size;
	}

out:
	*alenp = alen;
80007794:	ac740000 	sw	s4,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:686
	if (offset + alen > din->fileinfo.size) {
80007798:	8c830000 	lw	v1,0(a0)
8000779c:	0073182b 	sltu	v1,v1,s3
800077a0:	10600003 	beqz	v1,800077b0 <sfs_io_nolock+0x144>
800077a4:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:687
		din->fileinfo.size = offset + alen;
800077a8:	ac930000 	sw	s3,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:688
		sin->dirty = 1;
800077ac:	aee3000c 	sw	v1,12(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:691
	}
	return ret;
}
800077b0:	8fbf0054 	lw	ra,84(sp)
800077b4:	8fbe0050 	lw	s8,80(sp)
800077b8:	8fb7004c 	lw	s7,76(sp)
800077bc:	8fb60048 	lw	s6,72(sp)
800077c0:	8fb50044 	lw	s5,68(sp)
800077c4:	8fb40040 	lw	s4,64(sp)
800077c8:	8fb3003c 	lw	s3,60(sp)
800077cc:	8fb20038 	lw	s2,56(sp)
800077d0:	8fb10034 	lw	s1,52(sp)
800077d4:	8fb00030 	lw	s0,48(sp)
800077d8:	03e00008 	jr	ra
800077dc:	27bd0058 	addiu	sp,sp,88
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:653
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
			goto out;
		}
		if ((ret = sfs_buf_op(sfs, buf, size, ino, blkoff)) != 0) {
800077e0:	afa30010 	sw	v1,16(sp)
800077e4:	8fa60028 	lw	a2,40(sp)
800077e8:	8fa70018 	lw	a3,24(sp)
800077ec:	8fa30024 	lw	v1,36(sp)
800077f0:	02a02021 	move	a0,s5
800077f4:	0060f809 	jalr	v1
800077f8:	02402821 	move	a1,s2
800077fc:	1440ffe3 	bnez	v0,8000778c <sfs_io_nolock+0x120>
80007800:	8fa30068 	lw	v1,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:657
			goto out;
		}
		alen += size;
		if (nblks == 0) {
80007804:	1220ffe1 	beqz	s1,8000778c <sfs_io_nolock+0x120>
80007808:	8fb40028 	lw	s4,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:660
			goto out;
		}
		buf += size, blkno++, nblks--;
8000780c:	02549021 	addu	s2,s2,s4
80007810:	26100001 	addiu	s0,s0,1
80007814:	2631ffff 	addiu	s1,s1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:664
	}

	size = SFS_BLKSIZE;
	while (nblks != 0) {
80007818:	12200013 	beqz	s1,80007868 <sfs_io_nolock+0x1fc>
8000781c:	001617c3 	sra	v0,s6,0x1f
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:665
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
80007820:	02a02021 	move	a0,s5
80007824:	02e02821 	move	a1,s7
80007828:	02003021 	move	a2,s0
8000782c:	0c001cf6 	jal	800073d8 <sfs_bmap_load_nolock>
80007830:	27a70018 	addiu	a3,sp,24
80007834:	1440ffd4 	bnez	v0,80007788 <sfs_io_nolock+0x11c>
80007838:	8fa60018 	lw	a2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:668
			goto out;
		}
		if ((ret = sfs_block_op(sfs, buf, ino, 1)) != 0) {
8000783c:	02a02021 	move	a0,s5
80007840:	02402821 	move	a1,s2
80007844:	03c0f809 	jalr	s8
80007848:	24070001 	li	a3,1
8000784c:	1440ffce 	bnez	v0,80007788 <sfs_io_nolock+0x11c>
80007850:	2631ffff 	addiu	s1,s1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:671
			goto out;
		}
		alen += size, buf += size, blkno++, nblks--;
80007854:	26941000 	addiu	s4,s4,4096
80007858:	26521000 	addiu	s2,s2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:664
		}
		buf += size, blkno++, nblks--;
	}

	size = SFS_BLKSIZE;
	while (nblks != 0) {
8000785c:	1620fff0 	bnez	s1,80007820 <sfs_io_nolock+0x1b4>
80007860:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:674
			goto out;
		}
		alen += size, buf += size, blkno++, nblks--;
	}

	if ((size = endpos % SFS_BLKSIZE) != 0) {
80007864:	001617c3 	sra	v0,s6,0x1f
80007868:	00021502 	srl	v0,v0,0x14
8000786c:	02c2b021 	addu	s6,s6,v0
80007870:	32d60fff 	andi	s6,s6,0xfff
80007874:	02c2b023 	subu	s6,s6,v0
80007878:	12c0ffc3 	beqz	s6,80007788 <sfs_io_nolock+0x11c>
8000787c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:675
		if ((ret = sfs_bmap_load_nolock(sfs, sin, blkno, &ino)) != 0) {
80007880:	02a02021 	move	a0,s5
80007884:	02e02821 	move	a1,s7
80007888:	02003021 	move	a2,s0
8000788c:	0c001cf6 	jal	800073d8 <sfs_bmap_load_nolock>
80007890:	27a70018 	addiu	a3,sp,24
80007894:	1440ffbd 	bnez	v0,8000778c <sfs_io_nolock+0x120>
80007898:	8fa30068 	lw	v1,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:678
			goto out;
		}
		if ((ret = sfs_buf_op(sfs, buf, size, ino, 0)) != 0) {
8000789c:	8fa70018 	lw	a3,24(sp)
800078a0:	8fa30024 	lw	v1,36(sp)
800078a4:	02c03021 	move	a2,s6
800078a8:	afa00010 	sw	zero,16(sp)
800078ac:	02a02021 	move	a0,s5
800078b0:	0060f809 	jalr	v1
800078b4:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:681
			goto out;
		}
		alen += size;
800078b8:	0296b021 	addu	s6,s4,s6
800078bc:	08001de2 	j	80007788 <sfs_io_nolock+0x11c>
800078c0:	02c2a00a 	movz	s4,s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:623
	}
	if (endpos > SFS_MAX_FILE_SIZE) {
		endpos = SFS_MAX_FILE_SIZE;
	}
	if (!write) {
		if (offset >= din->fileinfo.size) {
800078c4:	8fa20020 	lw	v0,32(sp)
800078c8:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:624
			return 0;
800078cc:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:623
	}
	if (endpos > SFS_MAX_FILE_SIZE) {
		endpos = SFS_MAX_FILE_SIZE;
	}
	if (!write) {
		if (offset >= din->fileinfo.size) {
800078d0:	00e3202b 	sltu	a0,a3,v1
800078d4:	1080ffb6 	beqz	a0,800077b0 <sfs_io_nolock+0x144>
800078d8:	3c1e8001 	lui	s8,0x8001
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:626
			return 0;
		}
		if (endpos > din->fileinfo.size) {
800078dc:	0076102b 	sltu	v0,v1,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:627
			endpos = din->fileinfo.size;
800078e0:	0062b00b 	movn	s6,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:638
	int (*sfs_block_op) (struct sfs_fs * sfs, void *buf, uint32_t blkno,
			     uint32_t nblks);
	if (write) {
		sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;
	} else {
		sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;
800078e4:	3c028001 	lui	v0,0x8001
800078e8:	2442ae04 	addiu	v0,v0,-20988
800078ec:	27deadc8 	addiu	s8,s8,-21048
800078f0:	08001dc6 	j	80007718 <sfs_io_nolock+0xac>
800078f4:	afa20024 	sw	v0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:649
	uint32_t blkno = offset / SFS_BLKSIZE;
	uint32_t nblks = endpos / SFS_BLKSIZE - blkno;

	if ((blkoff = offset % SFS_BLKSIZE) != 0) {
		size =
		    (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);
800078f8:	24021000 	li	v0,4096
800078fc:	00431023 	subu	v0,v0,v1
80007900:	08001dd9 	j	80007764 <sfs_io_nolock+0xf8>
80007904:	afa20028 	sw	v0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:610
static int
sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf,
	      off_t offset, size_t * alenp, bool write)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
80007908:	3c048002 	lui	a0,0x8002
8000790c:	3c068002 	lui	a2,0x8002
80007910:	3c078002 	lui	a3,0x8002
80007914:	24842030 	addiu	a0,a0,8240
80007918:	24050262 	li	a1,610
8000791c:	24c60e48 	addiu	a2,a2,3656
80007920:	0c006b13 	jal	8001ac4c <__panic>
80007924:	24e72188 	addiu	a3,a3,8584

80007928 <sfs_dirent_read_nolock>:
sfs_dirent_read_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:376

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
	assert(sin->din->type == SFS_TYPE_DIR
80007928:	8ca20000 	lw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:375
}

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
8000792c:	27bdffd0 	addiu	sp,sp,-48
80007930:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:376
	assert(sin->din->type == SFS_TYPE_DIR
80007934:	94480008 	lhu	t0,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:375
}

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
80007938:	00e08821 	move	s1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:376
	assert(sin->din->type == SFS_TYPE_DIR
8000793c:	24070002 	li	a3,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:375
}

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
80007940:	afb00024 	sw	s0,36(sp)
80007944:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:376
	assert(sin->din->type == SFS_TYPE_DIR
80007948:	15070021 	bne	t0,a3,800079d0 <sfs_dirent_read_nolock+0xa8>
8000794c:	00808021 	move	s0,a0
80007950:	04c20020 	bltzl	a2,800079d4 <sfs_dirent_read_nolock+0xac>
80007954:	3c048002 	lui	a0,0x8002
80007958:	8c42000c 	lw	v0,12(v0)
8000795c:	00c2182b 	sltu	v1,a2,v0
80007960:	5060001c 	beqzl	v1,800079d4 <sfs_dirent_read_nolock+0xac>
80007964:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:380
	       && (slot >= 0 && slot < sin->din->blocks));
	int ret;
	uint32_t ino;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
80007968:	0c001cf6 	jal	800073d8 <sfs_bmap_load_nolock>
8000796c:	27a70018 	addiu	a3,sp,24
80007970:	10400006 	beqz	v0,8000798c <sfs_dirent_read_nolock+0x64>
80007974:	8fa50018 	lw	a1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:391
		      0)) != 0) {
		return ret;
	}
	entry->name[SFS_MAX_FNAME_LEN] = '\0';
	return 0;
}
80007978:	8fbf002c 	lw	ra,44(sp)
8000797c:	8fb10028 	lw	s1,40(sp)
80007980:	8fb00024 	lw	s0,36(sp)
80007984:	03e00008 	jr	ra
80007988:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:383
	int ret;
	uint32_t ino;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
8000798c:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
80007990:	02002021 	move	a0,s0
80007994:	10400016 	beqz	v0,800079f0 <sfs_dirent_read_nolock+0xc8>
80007998:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:384
	if ((ret =
8000799c:	8fa70018 	lw	a3,24(sp)
800079a0:	02202821 	move	a1,s1
800079a4:	24060104 	li	a2,260
800079a8:	0c002b81 	jal	8000ae04 <sfs_rbuf>
800079ac:	afa00010 	sw	zero,16(sp)
800079b0:	1440fff2 	bnez	v0,8000797c <sfs_dirent_read_nolock+0x54>
800079b4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:389
	     sfs_rbuf(sfs, entry, sizeof(struct sfs_disk_entry), ino,
		      0)) != 0) {
		return ret;
	}
	entry->name[SFS_MAX_FNAME_LEN] = '\0';
800079b8:	a2200103 	sb	zero,259(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:391
	return 0;
}
800079bc:	8fbf002c 	lw	ra,44(sp)
800079c0:	8fb10028 	lw	s1,40(sp)
800079c4:	8fb00024 	lw	s0,36(sp)
800079c8:	03e00008 	jr	ra
800079cc:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:376

static int
sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_disk_entry *entry)
{
	assert(sin->din->type == SFS_TYPE_DIR
800079d0:	3c048002 	lui	a0,0x8002
800079d4:	3c068002 	lui	a2,0x8002
800079d8:	3c078002 	lui	a3,0x8002
800079dc:	24842030 	addiu	a0,a0,8240
800079e0:	24050179 	li	a1,377
800079e4:	24c60e48 	addiu	a2,a2,3656
800079e8:	0c006b13 	jal	8001ac4c <__panic>
800079ec:	24e721a4 	addiu	a3,a3,8612
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:383
	int ret;
	uint32_t ino;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		return ret;
	}
	assert(sfs_block_inuse(sfs, ino));
800079f0:	3c048002 	lui	a0,0x8002
800079f4:	3c068002 	lui	a2,0x8002
800079f8:	3c078002 	lui	a3,0x8002
800079fc:	24842030 	addiu	a0,a0,8240
80007a00:	2405017f 	li	a1,383
80007a04:	24c60e48 	addiu	a2,a2,3656
80007a08:	0c006b13 	jal	8001ac4c <__panic>
80007a0c:	24e7216c 	addiu	a3,a3,8556

80007a10 <sfs_dirent_search_nolock>:
sfs_dirent_search_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:474

static int
sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			 const char *name, uint32_t * ino_store, int *slot,
			 int *empty_slot)
{
80007a10:	27bdffc0 	addiu	sp,sp,-64
80007a14:	afb5002c 	sw	s5,44(sp)
80007a18:	0080a821 	move	s5,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:475
	assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007a1c:	00c02021 	move	a0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:474

static int
sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			 const char *name, uint32_t * ino_store, int *slot,
			 int *empty_slot)
{
80007a20:	afbe0038 	sw	s8,56(sp)
80007a24:	afb60030 	sw	s6,48(sp)
80007a28:	afb40028 	sw	s4,40(sp)
80007a2c:	afb20020 	sw	s2,32(sp)
80007a30:	afbf003c 	sw	ra,60(sp)
80007a34:	afb70034 	sw	s7,52(sp)
80007a38:	afb30024 	sw	s3,36(sp)
80007a3c:	afb1001c 	sw	s1,28(sp)
80007a40:	afb00018 	sw	s0,24(sp)
80007a44:	00c0b021 	move	s6,a2
80007a48:	00a0a021 	move	s4,a1
80007a4c:	00e0f021 	move	s8,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:475
	assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007a50:	0c005b81 	jal	80016e04 <strlen>
80007a54:	8fb20054 	lw	s2,84(sp)
80007a58:	2c420100 	sltiu	v0,v0,256
80007a5c:	10400040 	beqz	v0,80007b60 <sfs_dirent_search_nolock+0x150>
80007a60:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:477
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80007a64:	0c00548e 	jal	80015238 <kmalloc>
80007a68:	24040104 	li	a0,260
80007a6c:	00408821 	move	s1,v0
80007a70:	10400029 	beqz	v0,80007b18 <sfs_dirent_search_nolock+0x108>
80007a74:	2403fff4 	li	v1,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:481
		return -E_NO_MEM;
	}
#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)
	int ret, i, nslots = sin->din->blocks;
80007a78:	8e820000 	lw	v0,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:482
	set_pvalue(empty_slot, nslots);
80007a7c:	12400002 	beqz	s2,80007a88 <sfs_dirent_search_nolock+0x78>
80007a80:	8c53000c 	lw	s3,12(v0)
80007a84:	ae530000 	sw	s3,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:483
	for (i = 0; i < nslots; i++) {
80007a88:	1a60001f 	blez	s3,80007b08 <sfs_dirent_search_nolock+0xf8>
80007a8c:	2403fffe 	li	v1,-2
80007a90:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:491
		}
		if (entry->ino == 0) {
			set_pvalue(empty_slot, i);
			continue;
		}
		if (strcmp(name, entry->name) == 0) {
80007a94:	08001eac 	j	80007ab0 <sfs_dirent_search_nolock+0xa0>
80007a98:	26370004 	addiu	s7,s1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:488
	for (i = 0; i < nslots; i++) {
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
			goto out;
		}
		if (entry->ino == 0) {
			set_pvalue(empty_slot, i);
80007a9c:	56400001 	bnezl	s2,80007aa4 <sfs_dirent_search_nolock+0x94>
80007aa0:	ae500000 	sw	s0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:483
		return -E_NO_MEM;
	}
#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)
	int ret, i, nslots = sin->din->blocks;
	set_pvalue(empty_slot, nslots);
	for (i = 0; i < nslots; i++) {
80007aa4:	26100001 	addiu	s0,s0,1
80007aa8:	12700028 	beq	s3,s0,80007b4c <sfs_dirent_search_nolock+0x13c>
80007aac:	2403fffe 	li	v1,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:484
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
80007ab0:	02a02021 	move	a0,s5
80007ab4:	02802821 	move	a1,s4
80007ab8:	02003021 	move	a2,s0
80007abc:	0c001e4a 	jal	80007928 <sfs_dirent_read_nolock>
80007ac0:	02203821 	move	a3,s1
80007ac4:	14400010 	bnez	v0,80007b08 <sfs_dirent_search_nolock+0xf8>
80007ac8:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:487
			goto out;
		}
		if (entry->ino == 0) {
80007acc:	8e220000 	lw	v0,0(s1)
80007ad0:	1040fff2 	beqz	v0,80007a9c <sfs_dirent_search_nolock+0x8c>
80007ad4:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:491
			set_pvalue(empty_slot, i);
			continue;
		}
		if (strcmp(name, entry->name) == 0) {
80007ad8:	02e02821 	move	a1,s7
80007adc:	0c005bc0 	jal	80016f00 <strcmp>
80007ae0:	afa30010 	sw	v1,16(sp)
80007ae4:	1440ffef 	bnez	v0,80007aa4 <sfs_dirent_search_nolock+0x94>
80007ae8:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:492
			set_pvalue(slot, i);
80007aec:	8fa20050 	lw	v0,80(sp)
80007af0:	54400001 	bnezl	v0,80007af8 <sfs_dirent_search_nolock+0xe8>
80007af4:	ac500000 	sw	s0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:493
			set_pvalue(ino_store, entry->ino);
80007af8:	13c00004 	beqz	s8,80007b0c <sfs_dirent_search_nolock+0xfc>
80007afc:	02202021 	move	a0,s1
80007b00:	8e220000 	lw	v0,0(s1)
80007b04:	afc20000 	sw	v0,0(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:500
		}
	}
#undef set_pvalue
	ret = -E_NOENT;
out:
	kfree(entry);
80007b08:	02202021 	move	a0,s1
80007b0c:	0c0054b9 	jal	800152e4 <kfree>
80007b10:	afa30010 	sw	v1,16(sp)
80007b14:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:502
	return ret;
}
80007b18:	8fbf003c 	lw	ra,60(sp)
80007b1c:	00601021 	move	v0,v1
80007b20:	8fbe0038 	lw	s8,56(sp)
80007b24:	8fb70034 	lw	s7,52(sp)
80007b28:	8fb60030 	lw	s6,48(sp)
80007b2c:	8fb5002c 	lw	s5,44(sp)
80007b30:	8fb40028 	lw	s4,40(sp)
80007b34:	8fb30024 	lw	s3,36(sp)
80007b38:	8fb20020 	lw	s2,32(sp)
80007b3c:	8fb1001c 	lw	s1,28(sp)
80007b40:	8fb00018 	lw	s0,24(sp)
80007b44:	03e00008 	jr	ra
80007b48:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:500
		}
	}
#undef set_pvalue
	ret = -E_NOENT;
out:
	kfree(entry);
80007b4c:	02202021 	move	a0,s1
80007b50:	0c0054b9 	jal	800152e4 <kfree>
80007b54:	afa30010 	sw	v1,16(sp)
80007b58:	08001ec6 	j	80007b18 <sfs_dirent_search_nolock+0x108>
80007b5c:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:475
static int
sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			 const char *name, uint32_t * ino_store, int *slot,
			 int *empty_slot)
{
	assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007b60:	3c068002 	lui	a2,0x8002
80007b64:	3c078002 	lui	a3,0x8002
80007b68:	24842030 	addiu	a0,a0,8240
80007b6c:	240501db 	li	a1,475
80007b70:	24c60e48 	addiu	a2,a2,3656
80007b74:	0c006b13 	jal	8001ac4c <__panic>
80007b78:	24e721f0 	addiu	a3,a3,8688

80007b7c <sfs_dirent_write_nolock>:
sfs_dirent_write_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:397

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
	assert(sin->din->type == SFS_TYPE_DIR
80007b7c:	8ca20000 	lw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:396
}

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
80007b80:	27bdffc8 	addiu	sp,sp,-56
80007b84:	afb3002c 	sw	s3,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:397
	assert(sin->din->type == SFS_TYPE_DIR
80007b88:	94430008 	lhu	v1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:396
}

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
80007b8c:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:397
	assert(sin->din->type == SFS_TYPE_DIR
80007b90:	24040002 	li	a0,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:396
}

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
80007b94:	afb40030 	sw	s4,48(sp)
80007b98:	afb20028 	sw	s2,40(sp)
80007b9c:	afb10024 	sw	s1,36(sp)
80007ba0:	afbf0034 	sw	ra,52(sp)
80007ba4:	afb00020 	sw	s0,32(sp)
80007ba8:	00a09021 	move	s2,a1
80007bac:	00c08821 	move	s1,a2
80007bb0:	afa70044 	sw	a3,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:397
	assert(sin->din->type == SFS_TYPE_DIR
80007bb4:	1464003b 	bne	v1,a0,80007ca4 <sfs_dirent_write_nolock+0x128>
80007bb8:	8fb40048 	lw	s4,72(sp)
80007bbc:	04c0003a 	bltz	a2,80007ca8 <sfs_dirent_write_nolock+0x12c>
80007bc0:	3c048002 	lui	a0,0x8002
80007bc4:	8c42000c 	lw	v0,12(v0)
80007bc8:	0046102b 	sltu	v0,v0,a2
80007bcc:	14400037 	bnez	v0,80007cac <sfs_dirent_write_nolock+0x130>
80007bd0:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:400
	       && (slot >= 0 && slot <= sin->din->blocks));
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80007bd4:	0c00548e 	jal	80015238 <kmalloc>
80007bd8:	24040104 	li	a0,260
80007bdc:	1040002f 	beqz	v0,80007c9c <sfs_dirent_write_nolock+0x120>
80007be0:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:403
		return -E_NO_MEM;
	}
	memset(entry, 0, sizeof(struct sfs_disk_entry));
80007be4:	00402021 	move	a0,v0
80007be8:	00002821 	move	a1,zero
80007bec:	0c005c5a 	jal	80017168 <memset>
80007bf0:	24060104 	li	a2,260
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:405

	if (ino != 0) {
80007bf4:	8fa20044 	lw	v0,68(sp)
80007bf8:	1040000b 	beqz	v0,80007c28 <sfs_dirent_write_nolock+0xac>
80007bfc:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:406
		assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007c00:	0c005b81 	jal	80016e04 <strlen>
80007c04:	02802021 	move	a0,s4
80007c08:	2c420100 	sltiu	v0,v0,256
80007c0c:	1040002d 	beqz	v0,80007cc4 <sfs_dirent_write_nolock+0x148>
80007c10:	8fa20044 	lw	v0,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:407
		entry->ino = ino, strcpy(entry->name, name);
80007c14:	26040004 	addiu	a0,s0,4
80007c18:	02802821 	move	a1,s4
80007c1c:	0c005b9a 	jal	80016e68 <strcpy>
80007c20:	ae020000 	sw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:410
	}
	int ret;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
80007c24:	02602021 	move	a0,s3
80007c28:	02402821 	move	a1,s2
80007c2c:	02203021 	move	a2,s1
80007c30:	0c001cf6 	jal	800073d8 <sfs_bmap_load_nolock>
80007c34:	27a70044 	addiu	a3,sp,68
80007c38:	1040000d 	beqz	v0,80007c70 <sfs_dirent_write_nolock+0xf4>
80007c3c:	8fa50044 	lw	a1,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:416
		goto out;
	}
	assert(sfs_block_inuse(sfs, ino));
	ret = sfs_wbuf(sfs, entry, sizeof(struct sfs_disk_entry), ino, 0);
out:
	kfree(entry);
80007c40:	02002021 	move	a0,s0
80007c44:	0c0054b9 	jal	800152e4 <kfree>
80007c48:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:417
	return ret;
80007c4c:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:418
}
80007c50:	8fbf0034 	lw	ra,52(sp)
80007c54:	8fb40030 	lw	s4,48(sp)
80007c58:	8fb3002c 	lw	s3,44(sp)
80007c5c:	8fb20028 	lw	s2,40(sp)
80007c60:	8fb10024 	lw	s1,36(sp)
80007c64:	8fb00020 	lw	s0,32(sp)
80007c68:	03e00008 	jr	ra
80007c6c:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:413
	}
	int ret;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		goto out;
	}
	assert(sfs_block_inuse(sfs, ino));
80007c70:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
80007c74:	02602021 	move	a0,s3
80007c78:	1040001a 	beqz	v0,80007ce4 <sfs_dirent_write_nolock+0x168>
80007c7c:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:414
	ret = sfs_wbuf(sfs, entry, sizeof(struct sfs_disk_entry), ino, 0);
80007c80:	8fa70044 	lw	a3,68(sp)
80007c84:	02002821 	move	a1,s0
80007c88:	24060104 	li	a2,260
80007c8c:	0c002bb6 	jal	8000aed8 <sfs_wbuf>
80007c90:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:416
out:
	kfree(entry);
80007c94:	08001f11 	j	80007c44 <sfs_dirent_write_nolock+0xc8>
80007c98:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:401
{
	assert(sin->din->type == SFS_TYPE_DIR
	       && (slot >= 0 && slot <= sin->din->blocks));
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
80007c9c:	08001f14 	j	80007c50 <sfs_dirent_write_nolock+0xd4>
80007ca0:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:397

static int
sfs_dirent_write_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			uint32_t ino, const char *name)
{
	assert(sin->din->type == SFS_TYPE_DIR
80007ca4:	3c048002 	lui	a0,0x8002
80007ca8:	3c068002 	lui	a2,0x8002
80007cac:	3c078002 	lui	a3,0x8002
80007cb0:	24842030 	addiu	a0,a0,8240
80007cb4:	2405018e 	li	a1,398
80007cb8:	24c60e48 	addiu	a2,a2,3656
80007cbc:	0c006b13 	jal	8001ac4c <__panic>
80007cc0:	24e72214 	addiu	a3,a3,8724
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:406
		return -E_NO_MEM;
	}
	memset(entry, 0, sizeof(struct sfs_disk_entry));

	if (ino != 0) {
		assert(strlen(name) <= SFS_MAX_FNAME_LEN);
80007cc4:	3c048002 	lui	a0,0x8002
80007cc8:	3c068002 	lui	a2,0x8002
80007ccc:	3c078002 	lui	a3,0x8002
80007cd0:	24842030 	addiu	a0,a0,8240
80007cd4:	24050196 	li	a1,406
80007cd8:	24c60e48 	addiu	a2,a2,3656
80007cdc:	0c006b13 	jal	8001ac4c <__panic>
80007ce0:	24e721f0 	addiu	a3,a3,8688
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:413
	}
	int ret;
	if ((ret = sfs_bmap_load_nolock(sfs, sin, slot, &ino)) != 0) {
		goto out;
	}
	assert(sfs_block_inuse(sfs, ino));
80007ce4:	3c048002 	lui	a0,0x8002
80007ce8:	3c068002 	lui	a2,0x8002
80007cec:	3c078002 	lui	a3,0x8002
80007cf0:	24842030 	addiu	a0,a0,8240
80007cf4:	2405019d 	li	a1,413
80007cf8:	24c60e48 	addiu	a2,a2,3656
80007cfc:	0c006b13 	jal	8001ac4c <__panic>
80007d00:	24e7216c 	addiu	a3,a3,8556

80007d04 <sfs_bmap_free_sub_nolock>:
sfs_bmap_free_sub_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:273
	return 0;
}

static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
80007d04:	27bdffc8 	addiu	sp,sp,-56
80007d08:	afb1002c 	sw	s1,44(sp)
80007d0c:	afb00028 	sw	s0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:274
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
80007d10:	afa60020 	sw	a2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:273
	return 0;
}

static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
80007d14:	afbf0034 	sw	ra,52(sp)
80007d18:	afb20030 	sw	s2,48(sp)
80007d1c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:274
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
80007d20:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
80007d24:	00a08821 	move	s1,a1
80007d28:	10400022 	beqz	v0,80007db4 <sfs_bmap_free_sub_nolock+0xb0>
80007d2c:	8fa60020 	lw	a2,32(sp)
80007d30:	2cc20400 	sltiu	v0,a2,1024
80007d34:	1040001f 	beqz	v0,80007db4 <sfs_bmap_free_sub_nolock+0xb0>
80007d38:	00069080 	sll	s2,a2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:278
	int ret;
	uint32_t ino, zero = 0;
	off_t offset = index * sizeof(uint32_t);
	if ((ret = sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
80007d3c:	02002021 	move	a0,s0
80007d40:	27a5001c 	addiu	a1,sp,28
80007d44:	24060004 	li	a2,4
80007d48:	02203821 	move	a3,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:276
static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
	int ret;
	uint32_t ino, zero = 0;
80007d4c:	afa00018 	sw	zero,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:278
	off_t offset = index * sizeof(uint32_t);
	if ((ret = sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
80007d50:	0c002b81 	jal	8000ae04 <sfs_rbuf>
80007d54:	afb20010 	sw	s2,16(sp)
80007d58:	14400003 	bnez	v0,80007d68 <sfs_bmap_free_sub_nolock+0x64>
80007d5c:	8fa3001c 	lw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:281
		return ret;
	}
	if (ino != 0) {
80007d60:	14600007 	bnez	v1,80007d80 <sfs_bmap_free_sub_nolock+0x7c>
80007d64:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:290
			return ret;
		}
		sfs_block_free(sfs, ino);
	}
	return 0;
}
80007d68:	8fbf0034 	lw	ra,52(sp)
80007d6c:	8fb20030 	lw	s2,48(sp)
80007d70:	8fb1002c 	lw	s1,44(sp)
80007d74:	8fb00028 	lw	s0,40(sp)
80007d78:	03e00008 	jr	ra
80007d7c:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:282
	off_t offset = index * sizeof(uint32_t);
	if ((ret = sfs_rbuf(sfs, &ino, sizeof(uint32_t), ent, offset)) != 0) {
		return ret;
	}
	if (ino != 0) {
		if ((ret =
80007d80:	27a50018 	addiu	a1,sp,24
80007d84:	24060004 	li	a2,4
80007d88:	02203821 	move	a3,s1
80007d8c:	0c002bb6 	jal	8000aed8 <sfs_wbuf>
80007d90:	afb20010 	sw	s2,16(sp)
80007d94:	1440fff5 	bnez	v0,80007d6c <sfs_bmap_free_sub_nolock+0x68>
80007d98:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:287
		     sfs_wbuf(sfs, &zero, sizeof(uint32_t), ent,
			      offset)) != 0) {
			return ret;
		}
		sfs_block_free(sfs, ino);
80007d9c:	8fa5001c 	lw	a1,28(sp)
80007da0:	02002021 	move	a0,s0
80007da4:	0c001c30 	jal	800070c0 <sfs_block_free>
80007da8:	afa20020 	sw	v0,32(sp)
80007dac:	08001f5a 	j	80007d68 <sfs_bmap_free_sub_nolock+0x64>
80007db0:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:274
}

static int
sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index)
{
	assert(sfs_block_inuse(sfs, ent) && index < SFS_BLK_NENTRY);
80007db4:	3c048002 	lui	a0,0x8002
80007db8:	3c068002 	lui	a2,0x8002
80007dbc:	3c078002 	lui	a3,0x8002
80007dc0:	24842030 	addiu	a0,a0,8240
80007dc4:	24050112 	li	a1,274
80007dc8:	24c60e48 	addiu	a2,a2,3656
80007dcc:	0c006b13 	jal	8001ac4c <__panic>
80007dd0:	24e72260 	addiu	a3,a3,8800

80007dd4 <sfs_bmap_truncate_nolock>:
sfs_bmap_truncate_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:360
	}
	return 0;
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80007dd4:	27bdffc8 	addiu	sp,sp,-56
80007dd8:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:361
	struct sfs_disk_inode *din = sin->din;
80007ddc:	8cb00000 	lw	s0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:360
	}
	return 0;
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80007de0:	afb30030 	sw	s3,48(sp)
80007de4:	afb2002c 	sw	s2,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:362
	struct sfs_disk_inode *din = sin->din;
	assert(din->blocks != 0);
80007de8:	8e13000c 	lw	s3,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:360
	}
	return 0;
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
80007dec:	afb10028 	sw	s1,40(sp)
80007df0:	afbf0034 	sw	ra,52(sp)
80007df4:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:362
	struct sfs_disk_inode *din = sin->din;
	assert(din->blocks != 0);
80007df8:	1260003a 	beqz	s3,80007ee4 <sfs_bmap_truncate_nolock+0x110>
80007dfc:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:364
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
80007e00:	2662ffff 	addiu	v0,s3,-1
sfs_bmap_free_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:298
sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index)
{
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
80007e04:	2c43000c 	sltiu	v1,v0,12
80007e08:	10600012 	beqz	v1,80007e54 <sfs_bmap_truncate_nolock+0x80>
80007e0c:	2666fff3 	addiu	a2,s3,-13
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:299
		if ((ino = din->direct[index]) != 0) {
80007e10:	26730003 	addiu	s3,s3,3
80007e14:	00139080 	sll	s2,s3,0x2
80007e18:	02129021 	addu	s2,s0,s2
80007e1c:	8e450000 	lw	a1,0(s2)
80007e20:	14a0002a 	bnez	a1,80007ecc <sfs_bmap_truncate_nolock+0xf8>
80007e24:	afa50018 	sw	a1,24(sp)
sfs_bmap_truncate_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:368
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
		return ret;
	}
	din->blocks--;
	sin->dirty = 1;
80007e28:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:367
	assert(din->blocks != 0);
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
		return ret;
	}
	din->blocks--;
80007e2c:	ae02000c 	sw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:369
	sin->dirty = 1;
	return 0;
80007e30:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:368
	int ret;
	if ((ret = sfs_bmap_free_nolock(sfs, sin, din->blocks - 1)) != 0) {
		return ret;
	}
	din->blocks--;
	sin->dirty = 1;
80007e34:	ae23000c 	sw	v1,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:370
	return 0;
}
80007e38:	8fbf0034 	lw	ra,52(sp)
80007e3c:	8fb30030 	lw	s3,48(sp)
80007e40:	8fb2002c 	lw	s2,44(sp)
80007e44:	8fb10028 	lw	s1,40(sp)
80007e48:	8fb00024 	lw	s0,36(sp)
80007e4c:	03e00008 	jr	ra
80007e50:	27bd0038 	addiu	sp,sp,56
sfs_bmap_free_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:308
		}
		return 0;
	}

	index -= SFS_NDIRECT;
	if (index < SFS_BLK_NENTRY) {
80007e54:	2cc30400 	sltiu	v1,a2,1024
80007e58:	5060000b 	beqzl	v1,80007e88 <sfs_bmap_truncate_nolock+0xb4>
80007e5c:	8e030044 	lw	v1,68(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:309
		if ((ent = din->indirect) != 0) {
80007e60:	8e050040 	lw	a1,64(s0)
80007e64:	10a0fff0 	beqz	a1,80007e28 <sfs_bmap_truncate_nolock+0x54>
80007e68:	afa5001c 	sw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:326
		     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY,
					     0, &ino)) != 0) {
			return ret;
		}
		if ((ent = ino) != 0) {
			if ((ret =
80007e6c:	0c001f41 	jal	80007d04 <sfs_bmap_free_sub_nolock>
80007e70:	00000000 	nop
80007e74:	1440fff1 	bnez	v0,80007e3c <sfs_bmap_truncate_nolock+0x68>
80007e78:	8fbf0034 	lw	ra,52(sp)
80007e7c:	8e13000c 	lw	s3,12(s0)
80007e80:	08001f8a 	j	80007e28 <sfs_bmap_truncate_nolock+0x54>
80007e84:	2662ffff 	addiu	v0,s3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:319
		}
		return 0;
	}

	index -= SFS_BLK_NENTRY;
	if ((ent = din->db_indirect) != 0) {
80007e88:	1060ffe7 	beqz	v1,80007e28 <sfs_bmap_truncate_nolock+0x54>
80007e8c:	afa3001c 	sw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:318
			}
		}
		return 0;
	}

	index -= SFS_BLK_NENTRY;
80007e90:	2673fbf3 	addiu	s3,s3,-1037
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:320
	if ((ent = din->db_indirect) != 0) {
		if ((ret =
80007e94:	27a20018 	addiu	v0,sp,24
80007e98:	27a5001c 	addiu	a1,sp,28
80007e9c:	00133282 	srl	a2,s3,0xa
80007ea0:	00003821 	move	a3,zero
80007ea4:	0c001c4d 	jal	80007134 <sfs_bmap_get_sub_nolock>
80007ea8:	afa20010 	sw	v0,16(sp)
80007eac:	1440ffe3 	bnez	v0,80007e3c <sfs_bmap_truncate_nolock+0x68>
80007eb0:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:325
		     sfs_bmap_get_sub_nolock(sfs, &ent, index / SFS_BLK_NENTRY,
					     0, &ino)) != 0) {
			return ret;
		}
		if ((ent = ino) != 0) {
80007eb4:	8fa50018 	lw	a1,24(sp)
80007eb8:	10a0fff0 	beqz	a1,80007e7c <sfs_bmap_truncate_nolock+0xa8>
80007ebc:	afa5001c 	sw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:326
			if ((ret =
80007ec0:	02402021 	move	a0,s2
80007ec4:	08001f9b 	j	80007e6c <sfs_bmap_truncate_nolock+0x98>
80007ec8:	326603ff 	andi	a2,s3,0x3ff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:300
	struct sfs_disk_inode *din = sin->din;
	int ret;
	uint32_t ent, ino;
	if (index < SFS_NDIRECT) {
		if ((ino = din->direct[index]) != 0) {
			sfs_block_free(sfs, ino);
80007ecc:	0c001c30 	jal	800070c0 <sfs_block_free>
80007ed0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:301
			din->direct[index] = 0;
80007ed4:	8e13000c 	lw	s3,12(s0)
80007ed8:	ae400000 	sw	zero,0(s2)
80007edc:	08001f8a 	j	80007e28 <sfs_bmap_truncate_nolock+0x54>
80007ee0:	2662ffff 	addiu	v0,s3,-1
sfs_bmap_truncate_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:362
}

static int sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin)
{
	struct sfs_disk_inode *din = sin->din;
	assert(din->blocks != 0);
80007ee4:	3c048002 	lui	a0,0x8002
80007ee8:	3c068002 	lui	a2,0x8002
80007eec:	3c078002 	lui	a3,0x8002
80007ef0:	24842030 	addiu	a0,a0,8240
80007ef4:	2405016a 	li	a1,362
80007ef8:	24c60e48 	addiu	a2,a2,3656
80007efc:	0c006b13 	jal	8001ac4c <__panic>
80007f00:	24e72294 	addiu	a3,a3,8852

80007f04 <sfs_reclaim>:
sfs_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1113
	kfree(entry);
	return ret;
}

static int sfs_reclaim(struct inode *node)
{
80007f04:	27bdffd0 	addiu	sp,sp,-48
80007f08:	afb1001c 	sw	s1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1114
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80007f0c:	8c910044 	lw	s1,68(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1113
	kfree(entry);
	return ret;
}

static int sfs_reclaim(struct inode *node)
{
80007f10:	afb20020 	sw	s2,32(sp)
80007f14:	afbf002c 	sw	ra,44(sp)
80007f18:	afb40028 	sw	s4,40(sp)
80007f1c:	afb30024 	sw	s3,36(sp)
80007f20:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1114
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80007f24:	12200077 	beqz	s1,80008104 <sfs_reclaim+0x200>
80007f28:	00809021 	move	s2,a0
80007f2c:	8e230084 	lw	v1,132(s1)
80007f30:	24025679 	li	v0,22137
80007f34:	14620073 	bne	v1,v0,80008104 <sfs_reclaim+0x200>
80007f38:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1115
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80007f3c:	8c830038 	lw	v1,56(a0)
80007f40:	14620078 	bne	v1,v0,80008124 <sfs_reclaim+0x220>
80007f44:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1117

	lock_sfs_fs(sfs);
80007f48:	0c002c4a 	jal	8000b128 <lock_sfs_fs>
80007f4c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1120

	int ret = -E_BUSY;
	assert(sin->reclaim_count > 0);
80007f50:	8e420010 	lw	v0,16(s2)
80007f54:	1840007a 	blez	v0,80008140 <sfs_reclaim+0x23c>
80007f58:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1121
	if ((--sin->reclaim_count) != 0) {
80007f5c:	14400042 	bnez	v0,80008068 <sfs_reclaim+0x164>
80007f60:	ae420010 	sw	v0,16(s2)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80007f64:	8e42003c 	lw	v0,60(s2)
sfs_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1124
		goto failed_unlock;
	}
	assert(inode_ref_count(node) == 0 && inode_open_count(node) == 0);
80007f68:	54400084 	bnezl	v0,8000817c <sfs_reclaim+0x278>
80007f6c:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
80007f70:	8e420040 	lw	v0,64(s2)
sfs_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1124
80007f74:	54400081 	bnezl	v0,8000817c <sfs_reclaim+0x278>
80007f78:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1126

	if (sin->din->nlinks == 0) {
80007f7c:	8e420000 	lw	v0,0(s2)
80007f80:	9443000a 	lhu	v1,10(v0)
80007f84:	54600025 	bnezl	v1,8000801c <sfs_reclaim+0x118>
80007f88:	8e42000c 	lw	v0,12(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1128
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
80007f8c:	8c50000c 	lw	s0,12(v0)
80007f90:	52000008 	beqzl	s0,80007fb4 <sfs_reclaim+0xb0>
80007f94:	8e430028 	lw	v1,40(s2)
80007f98:	2610ffff 	addiu	s0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1129
			sfs_bmap_truncate_nolock(sfs, sin);
80007f9c:	02202021 	move	a0,s1
80007fa0:	0c001f75 	jal	80007dd4 <sfs_bmap_truncate_nolock>
80007fa4:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1128
	}
	assert(inode_ref_count(node) == 0 && inode_open_count(node) == 0);

	if (sin->din->nlinks == 0) {
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
80007fa8:	5600fffc 	bnezl	s0,80007f9c <sfs_reclaim+0x98>
80007fac:	2610ffff 	addiu	s0,s0,-1
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80007fb0:	8e430028 	lw	v1,40(s2)
80007fb4:	8e42002c 	lw	v0,44(s2)
sfs_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1138
			goto failed_unlock;
		}
	}

	sfs_remove_links(sin);
	unlock_sfs_fs(sfs);
80007fb8:	02202021 	move	a0,s1
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80007fbc:	ac620004 	sw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80007fc0:	ac430000 	sw	v1,0(v0)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80007fc4:	8e430030 	lw	v1,48(s2)
80007fc8:	8e420034 	lw	v0,52(s2)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80007fcc:	ac620004 	sw	v0,4(v1)
sfs_reclaim():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1138
80007fd0:	0c002c50 	jal	8000b140 <unlock_sfs_fs>
80007fd4:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1140

	if (sin->din->nlinks == 0) {
80007fd8:	8e440000 	lw	a0,0(s2)
80007fdc:	9482000a 	lhu	v0,10(a0)
80007fe0:	5040002e 	beqzl	v0,8000809c <sfs_reclaim+0x198>
80007fe4:	8e450004 	lw	a1,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1154
				sfs_bmap_free_sub_nolock(sfs, ent, i);
			}
			sfs_block_free(sfs, ent);
		}
	}
	kfree(sin->din);
80007fe8:	0c0054b9 	jal	800152e4 <kfree>
80007fec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1155
	vop_kill(node);
80007ff0:	0c00109c 	jal	80004270 <inode_kill>
80007ff4:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1161
	return 0;

failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
80007ff8:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1156
			sfs_block_free(sfs, ent);
		}
	}
	kfree(sin->din);
	vop_kill(node);
	return 0;
80007ffc:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1161

failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
80008000:	8fb40028 	lw	s4,40(sp)
80008004:	8fb30024 	lw	s3,36(sp)
80008008:	8fb20020 	lw	s2,32(sp)
8000800c:	8fb1001c 	lw	s1,28(sp)
80008010:	8fb00018 	lw	s0,24(sp)
80008014:	03e00008 	jr	ra
80008018:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1131
	if (sin->din->nlinks == 0) {
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
			sfs_bmap_truncate_nolock(sfs, sin);
		}
	} else if (sin->dirty) {
8000801c:	5040ffe5 	beqzl	v0,80007fb4 <sfs_reclaim+0xb0>
80008020:	8e430028 	lw	v1,40(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1132
		if ((ret = vop_fsync(node)) != 0) {
80008024:	8e420048 	lw	v0,72(s2)
80008028:	1040004d 	beqz	v0,80008160 <sfs_reclaim+0x25c>
8000802c:	3c048002 	lui	a0,0x8002
80008030:	8c420018 	lw	v0,24(v0)
80008034:	1040004a 	beqz	v0,80008160 <sfs_reclaim+0x25c>
80008038:	3c058002 	lui	a1,0x8002
8000803c:	02402021 	move	a0,s2
80008040:	0c0010f2 	jal	800043c8 <inode_check>
80008044:	24a51fbc 	addiu	a1,a1,8124
80008048:	8e420048 	lw	v0,72(s2)
8000804c:	8c420018 	lw	v0,24(v0)
80008050:	0040f809 	jalr	v0
80008054:	02402021 	move	a0,s2
80008058:	14400005 	bnez	v0,80008070 <sfs_reclaim+0x16c>
8000805c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80008060:	08001fed 	j	80007fb4 <sfs_reclaim+0xb0>
80008064:	8e430028 	lw	v1,40(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1119
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);

	lock_sfs_fs(sfs);

	int ret = -E_BUSY;
80008068:	2402fff0 	li	v0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1159
	kfree(sin->din);
	vop_kill(node);
	return 0;

failed_unlock:
	unlock_sfs_fs(sfs);
8000806c:	02202021 	move	a0,s1
80008070:	0c002c50 	jal	8000b140 <unlock_sfs_fs>
80008074:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1161
	return ret;
}
80008078:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1159
	kfree(sin->din);
	vop_kill(node);
	return 0;

failed_unlock:
	unlock_sfs_fs(sfs);
8000807c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1161
	return ret;
}
80008080:	8fb40028 	lw	s4,40(sp)
80008084:	8fb30024 	lw	s3,36(sp)
80008088:	8fb20020 	lw	s2,32(sp)
8000808c:	8fb1001c 	lw	s1,28(sp)
80008090:	8fb00018 	lw	s0,24(sp)
80008094:	03e00008 	jr	ra
80008098:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1141

	sfs_remove_links(sin);
	unlock_sfs_fs(sfs);

	if (sin->din->nlinks == 0) {
		sfs_block_free(sfs, sin->ino);
8000809c:	0c001c30 	jal	800070c0 <sfs_block_free>
800080a0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1143
		uint32_t ent;
		if ((ent = sin->din->indirect) != 0) {
800080a4:	8e440000 	lw	a0,0(s2)
800080a8:	8c850040 	lw	a1,64(a0)
800080ac:	14a00011 	bnez	a1,800080f4 <sfs_reclaim+0x1f0>
800080b0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1146
			sfs_block_free(sfs, ent);
		}
		if ((ent = sin->din->db_indirect) != 0) {
800080b4:	8c930044 	lw	s3,68(a0)
800080b8:	1260ffcb 	beqz	s3,80007fe8 <sfs_reclaim+0xe4>
800080bc:	00003021 	move	a2,zero
800080c0:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1148
			int i;
			for (i = 0; i < SFS_BLK_NENTRY; i++) {
800080c4:	24140400 	li	s4,1024
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1149
				sfs_bmap_free_sub_nolock(sfs, ent, i);
800080c8:	02202021 	move	a0,s1
800080cc:	02602821 	move	a1,s3
800080d0:	0c001f41 	jal	80007d04 <sfs_bmap_free_sub_nolock>
800080d4:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1148
		if ((ent = sin->din->indirect) != 0) {
			sfs_block_free(sfs, ent);
		}
		if ((ent = sin->din->db_indirect) != 0) {
			int i;
			for (i = 0; i < SFS_BLK_NENTRY; i++) {
800080d8:	1614fffb 	bne	s0,s4,800080c8 <sfs_reclaim+0x1c4>
800080dc:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1151
				sfs_bmap_free_sub_nolock(sfs, ent, i);
			}
			sfs_block_free(sfs, ent);
800080e0:	02202021 	move	a0,s1
800080e4:	0c001c30 	jal	800070c0 <sfs_block_free>
800080e8:	02602821 	move	a1,s3
800080ec:	08001ffa 	j	80007fe8 <sfs_reclaim+0xe4>
800080f0:	8e440000 	lw	a0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1144

	if (sin->din->nlinks == 0) {
		sfs_block_free(sfs, sin->ino);
		uint32_t ent;
		if ((ent = sin->din->indirect) != 0) {
			sfs_block_free(sfs, ent);
800080f4:	0c001c30 	jal	800070c0 <sfs_block_free>
800080f8:	02202021 	move	a0,s1
800080fc:	0800202d 	j	800080b4 <sfs_reclaim+0x1b0>
80008100:	8e440000 	lw	a0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1114
	return ret;
}

static int sfs_reclaim(struct inode *node)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008104:	3c048002 	lui	a0,0x8002
80008108:	3c068002 	lui	a2,0x8002
8000810c:	3c078002 	lui	a3,0x8002
80008110:	24842030 	addiu	a0,a0,8240
80008114:	2405045a 	li	a1,1114
80008118:	24c60e48 	addiu	a2,a2,3656
8000811c:	0c006b13 	jal	8001ac4c <__panic>
80008120:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1115
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008124:	3c068002 	lui	a2,0x8002
80008128:	3c078002 	lui	a3,0x8002
8000812c:	24842030 	addiu	a0,a0,8240
80008130:	2405045b 	li	a1,1115
80008134:	24c60e48 	addiu	a2,a2,3656
80008138:	0c006b13 	jal	8001ac4c <__panic>
8000813c:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1120

	lock_sfs_fs(sfs);

	int ret = -E_BUSY;
	assert(sin->reclaim_count > 0);
80008140:	3c048002 	lui	a0,0x8002
80008144:	3c068002 	lui	a2,0x8002
80008148:	3c078002 	lui	a3,0x8002
8000814c:	24842030 	addiu	a0,a0,8240
80008150:	24050460 	li	a1,1120
80008154:	24c60e48 	addiu	a2,a2,3656
80008158:	0c006b13 	jal	8001ac4c <__panic>
8000815c:	24e722a8 	addiu	a3,a3,8872
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1132
		uint32_t nblks;
		for (nblks = sin->din->blocks; nblks != 0; nblks--) {
			sfs_bmap_truncate_nolock(sfs, sin);
		}
	} else if (sin->dirty) {
		if ((ret = vop_fsync(node)) != 0) {
80008160:	3c068002 	lui	a2,0x8002
80008164:	3c078002 	lui	a3,0x8002
80008168:	24842030 	addiu	a0,a0,8240
8000816c:	2405046c 	li	a1,1132
80008170:	24c60e48 	addiu	a2,a2,3656
80008174:	0c006b13 	jal	8001ac4c <__panic>
80008178:	24e71f6c 	addiu	a3,a3,8044
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1124
	int ret = -E_BUSY;
	assert(sin->reclaim_count > 0);
	if ((--sin->reclaim_count) != 0) {
		goto failed_unlock;
	}
	assert(inode_ref_count(node) == 0 && inode_open_count(node) == 0);
8000817c:	3c068002 	lui	a2,0x8002
80008180:	3c078002 	lui	a3,0x8002
80008184:	24842030 	addiu	a0,a0,8240
80008188:	24050464 	li	a1,1124
8000818c:	24c60e48 	addiu	a2,a2,3656
80008190:	0c006b13 	jal	8001ac4c <__panic>
80008194:	24e722c0 	addiu	a3,a3,8896

80008198 <sfs_tryseek>:
sfs_tryseek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1182
	panic("invalid file type %d.\n", din->type);
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
80008198:	3c020800 	lui	v0,0x800
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1181
	}
	panic("invalid file type %d.\n", din->type);
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
8000819c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1182
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
800081a0:	00a2102b 	sltu	v0,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1181
	}
	panic("invalid file type %d.\n", din->type);
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
800081a4:	afb10018 	sw	s1,24(sp)
800081a8:	afb00014 	sw	s0,20(sp)
800081ac:	afbf001c 	sw	ra,28(sp)
800081b0:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1182
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
800081b4:	10400021 	beqz	v0,8000823c <sfs_tryseek+0xa4>
800081b8:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1185
		return -E_INVAL;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
800081bc:	10800021 	beqz	a0,80008244 <sfs_tryseek+0xac>
800081c0:	24021237 	li	v0,4663
800081c4:	8c830038 	lw	v1,56(a0)
800081c8:	5462001f 	bnel	v1,v0,80008248 <sfs_tryseek+0xb0>
800081cc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1186
	if (pos > din->fileinfo.size) {
800081d0:	8c820000 	lw	v0,0(a0)
800081d4:	8c420000 	lw	v0,0(v0)
800081d8:	0045102b 	sltu	v0,v0,a1
800081dc:	10400012 	beqz	v0,80008228 <sfs_tryseek+0x90>
800081e0:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1187
		return vop_truncate(node, pos);
800081e4:	8c820048 	lw	v0,72(a0)
800081e8:	5040001f 	beqzl	v0,80008268 <sfs_tryseek+0xd0>
800081ec:	3c048002 	lui	a0,0x8002
800081f0:	8c420048 	lw	v0,72(v0)
800081f4:	1040001b 	beqz	v0,80008264 <sfs_tryseek+0xcc>
800081f8:	3c058002 	lui	a1,0x8002
800081fc:	0c0010f2 	jal	800043c8 <inode_check>
80008200:	24a51a28 	addiu	a1,a1,6696
80008204:	8e020048 	lw	v0,72(s0)
80008208:	02002021 	move	a0,s0
8000820c:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1190
	}
	return 0;
}
80008210:	8fbf001c 	lw	ra,28(sp)
80008214:	8fb10018 	lw	s1,24(sp)
80008218:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1187
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	if (pos > din->fileinfo.size) {
		return vop_truncate(node, pos);
8000821c:	8c590048 	lw	t9,72(v0)
80008220:	03200008 	jr	t9
80008224:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1190
	}
	return 0;
}
80008228:	8fbf001c 	lw	ra,28(sp)
8000822c:	8fb10018 	lw	s1,24(sp)
80008230:	8fb00014 	lw	s0,20(sp)
80008234:	03e00008 	jr	ra
80008238:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1183
}

static int sfs_tryseek(struct inode *node, off_t pos)
{
	if (pos < 0 || pos >= SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
8000823c:	0800208a 	j	80008228 <sfs_tryseek+0x90>
80008240:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1185
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80008244:	3c048002 	lui	a0,0x8002
80008248:	3c068002 	lui	a2,0x8002
8000824c:	3c078002 	lui	a3,0x8002
80008250:	24842030 	addiu	a0,a0,8240
80008254:	240504a1 	li	a1,1185
80008258:	24c60e48 	addiu	a2,a2,3656
8000825c:	0c006b13 	jal	8001ac4c <__panic>
80008260:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1187
	if (pos > din->fileinfo.size) {
		return vop_truncate(node, pos);
80008264:	3c048002 	lui	a0,0x8002
80008268:	3c068002 	lui	a2,0x8002
8000826c:	3c078002 	lui	a3,0x8002
80008270:	24842030 	addiu	a0,a0,8240
80008274:	240504a3 	li	a1,1187
80008278:	24c60e48 	addiu	a2,a2,3656
8000827c:	0c006b13 	jal	8001ac4c <__panic>
80008280:	24e719d4 	addiu	a3,a3,6612

80008284 <sfs_close>:
sfs_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:601
{
	return 0;
}

static int sfs_close(struct inode *node)
{
80008284:	27bdffe8 	addiu	sp,sp,-24
80008288:	afb00010 	sw	s0,16(sp)
8000828c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:602
	return vop_fsync(node);
80008290:	10800010 	beqz	a0,800082d4 <sfs_close+0x50>
80008294:	00808021 	move	s0,a0
80008298:	8c820048 	lw	v0,72(a0)
8000829c:	5040000e 	beqzl	v0,800082d8 <sfs_close+0x54>
800082a0:	3c048002 	lui	a0,0x8002
800082a4:	8c420018 	lw	v0,24(v0)
800082a8:	1040000a 	beqz	v0,800082d4 <sfs_close+0x50>
800082ac:	3c058002 	lui	a1,0x8002
800082b0:	0c0010f2 	jal	800043c8 <inode_check>
800082b4:	24a51fbc 	addiu	a1,a1,8124
800082b8:	8e020048 	lw	v0,72(s0)
800082bc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:603
}
800082c0:	8fbf0014 	lw	ra,20(sp)
800082c4:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:602
	return 0;
}

static int sfs_close(struct inode *node)
{
	return vop_fsync(node);
800082c8:	8c590018 	lw	t9,24(v0)
800082cc:	03200008 	jr	t9
800082d0:	27bd0018 	addiu	sp,sp,24
800082d4:	3c048002 	lui	a0,0x8002
800082d8:	3c068002 	lui	a2,0x8002
800082dc:	3c078002 	lui	a3,0x8002
800082e0:	24842030 	addiu	a0,a0,8240
800082e4:	2405025a 	li	a1,602
800082e8:	24c60e48 	addiu	a2,a2,3656
800082ec:	0c006b13 	jal	8001ac4c <__panic>
800082f0:	24e71f6c 	addiu	a3,a3,8044

800082f4 <sfs_fstat>:
sfs_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:722
{
	return sfs_io(node, iob, 1);
}

static int sfs_fstat(struct inode *node, struct stat *stat)
{
800082f4:	27bdffe0 	addiu	sp,sp,-32
800082f8:	afb10018 	sw	s1,24(sp)
800082fc:	00a08821 	move	s1,a1
80008300:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:724
	int ret;
	memset(stat, 0, sizeof(struct stat));
80008304:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:722
{
	return sfs_io(node, iob, 1);
}

static int sfs_fstat(struct inode *node, struct stat *stat)
{
80008308:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:724
	int ret;
	memset(stat, 0, sizeof(struct stat));
8000830c:	24060010 	li	a2,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:722
{
	return sfs_io(node, iob, 1);
}

static int sfs_fstat(struct inode *node, struct stat *stat)
{
80008310:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:724
	int ret;
	memset(stat, 0, sizeof(struct stat));
80008314:	0c005c5a 	jal	80017168 <memset>
80008318:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:725
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
8000831c:	12000026 	beqz	s0,800083b8 <sfs_fstat+0xc4>
80008320:	3c048002 	lui	a0,0x8002
80008324:	8e020048 	lw	v0,72(s0)
80008328:	10400024 	beqz	v0,800083bc <sfs_fstat+0xc8>
8000832c:	3c068002 	lui	a2,0x8002
80008330:	8c420040 	lw	v0,64(v0)
80008334:	10400020 	beqz	v0,800083b8 <sfs_fstat+0xc4>
80008338:	3c058002 	lui	a1,0x8002
8000833c:	02002021 	move	a0,s0
80008340:	0c0010f2 	jal	800043c8 <inode_check>
80008344:	24a51060 	addiu	a1,a1,4192
80008348:	8e020048 	lw	v0,72(s0)
8000834c:	02002021 	move	a0,s0
80008350:	8c420040 	lw	v0,64(v0)
80008354:	0040f809 	jalr	v0
80008358:	02202821 	move	a1,s1
8000835c:	1440000e 	bnez	v0,80008398 <sfs_fstat+0xa4>
80008360:	24031237 	li	v1,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:728
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
80008364:	8e040038 	lw	a0,56(s0)
80008368:	1483001a 	bne	a0,v1,800083d4 <sfs_fstat+0xe0>
8000836c:	3c048002 	lui	a0,0x8002
80008370:	8e030000 	lw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:730
	stat->st_nlinks = din->nlinks;
	stat->st_blocks = din->blocks;
80008374:	8c64000c 	lw	a0,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:729
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	stat->st_nlinks = din->nlinks;
80008378:	9466000a 	lhu	a2,10(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:731
	stat->st_blocks = din->blocks;
	if (din->type != SFS_TYPE_DIR) {
8000837c:	94650008 	lhu	a1,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:730
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	stat->st_nlinks = din->nlinks;
	stat->st_blocks = din->blocks;
80008380:	ae240008 	sw	a0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:729
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
	stat->st_nlinks = din->nlinks;
80008384:	ae260004 	sw	a2,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:731
	stat->st_blocks = din->blocks;
	if (din->type != SFS_TYPE_DIR) {
80008388:	24040002 	li	a0,2
8000838c:	10a40007 	beq	a1,a0,800083ac <sfs_fstat+0xb8>
80008390:	8c630000 	lw	v1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:734
		stat->st_size = din->fileinfo.size;
	} else {
		stat->st_size = (din->dirinfo.slots + 2) * sfs_dentry_size;
80008394:	ae23000c 	sw	v1,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:737
	}
	return 0;
}
80008398:	8fbf001c 	lw	ra,28(sp)
8000839c:	8fb10018 	lw	s1,24(sp)
800083a0:	8fb00014 	lw	s0,20(sp)
800083a4:	03e00008 	jr	ra
800083a8:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:734
	stat->st_nlinks = din->nlinks;
	stat->st_blocks = din->blocks;
	if (din->type != SFS_TYPE_DIR) {
		stat->st_size = din->fileinfo.size;
	} else {
		stat->st_size = (din->dirinfo.slots + 2) * sfs_dentry_size;
800083ac:	24630002 	addiu	v1,v1,2
800083b0:	080020e5 	j	80008394 <sfs_fstat+0xa0>
800083b4:	00031a00 	sll	v1,v1,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:725

static int sfs_fstat(struct inode *node, struct stat *stat)
{
	int ret;
	memset(stat, 0, sizeof(struct stat));
	if ((ret = vop_gettype(node, &(stat->st_mode))) != 0) {
800083b8:	3c068002 	lui	a2,0x8002
800083bc:	3c078002 	lui	a3,0x8002
800083c0:	24842030 	addiu	a0,a0,8240
800083c4:	240502d5 	li	a1,725
800083c8:	24c60e48 	addiu	a2,a2,3656
800083cc:	0c006b13 	jal	8001ac4c <__panic>
800083d0:	24e71010 	addiu	a3,a3,4112
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:728
		return ret;
	}
	struct sfs_disk_inode *din = vop_info(node, sfs_inode)->din;
800083d4:	3c068002 	lui	a2,0x8002
800083d8:	3c078002 	lui	a3,0x8002
800083dc:	24842030 	addiu	a0,a0,8240
800083e0:	240502d8 	li	a1,728
800083e4:	24c60e48 	addiu	a2,a2,3656
800083e8:	0c006b13 	jal	8001ac4c <__panic>
800083ec:	24e7203c 	addiu	a3,a3,8252

800083f0 <sfs_dirent_unlink_nolock>:
sfs_dirent_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:439
}

static int
sfs_dirent_unlink_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			 struct sfs_inode *lnksin)
{
800083f0:	27bdffd8 	addiu	sp,sp,-40
800083f4:	afb10020 	sw	s1,32(sp)
800083f8:	00e08821 	move	s1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:441
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
800083fc:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:439
}

static int
sfs_dirent_unlink_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			 struct sfs_inode *lnksin)
{
80008400:	afb0001c 	sw	s0,28(sp)
80008404:	afbf0024 	sw	ra,36(sp)
80008408:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:441
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
8000840c:	0c001edf 	jal	80007b7c <sfs_dirent_write_nolock>
80008410:	afa00010 	sw	zero,16(sp)
80008414:	14400010 	bnez	v0,80008458 <sfs_dirent_unlink_nolock+0x68>
80008418:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:444
		return ret;
	}
	assert(sin->din->dirinfo.slots != 0 && lnksin->din->nlinks != 0);
8000841c:	8e030000 	lw	v1,0(s0)
80008420:	8c640000 	lw	a0,0(v1)
80008424:	50800011 	beqzl	a0,8000846c <sfs_dirent_unlink_nolock+0x7c>
80008428:	3c048002 	lui	a0,0x8002
8000842c:	8e250000 	lw	a1,0(s1)
80008430:	94a7000a 	lhu	a3,10(a1)
80008434:	10e0000c 	beqz	a3,80008468 <sfs_dirent_unlink_nolock+0x78>
80008438:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:446
	sin->dirty = 1;
	sin->din->dirinfo.slots--;
8000843c:	2484ffff 	addiu	a0,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:448
	lnksin->dirty = 1;
	lnksin->din->nlinks--;
80008440:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:445
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
		return ret;
	}
	assert(sin->din->dirinfo.slots != 0 && lnksin->din->nlinks != 0);
	sin->dirty = 1;
80008444:	ae06000c 	sw	a2,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:446
	sin->din->dirinfo.slots--;
80008448:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:447
	lnksin->dirty = 1;
8000844c:	ae26000c 	sw	a2,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:448
	lnksin->din->nlinks--;
80008450:	a4a7000a 	sh	a3,10(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:450
	return 0;
}
80008454:	8fbf0024 	lw	ra,36(sp)
80008458:	8fb10020 	lw	s1,32(sp)
8000845c:	8fb0001c 	lw	s0,28(sp)
80008460:	03e00008 	jr	ra
80008464:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:444
{
	int ret;
	if ((ret = sfs_dirent_write_nolock(sfs, sin, slot, 0, NULL)) != 0) {
		return ret;
	}
	assert(sin->din->dirinfo.slots != 0 && lnksin->din->nlinks != 0);
80008468:	3c048002 	lui	a0,0x8002
8000846c:	3c068002 	lui	a2,0x8002
80008470:	3c078002 	lui	a3,0x8002
80008474:	24842030 	addiu	a0,a0,8240
80008478:	240501bc 	li	a1,444
8000847c:	24c60e48 	addiu	a2,a2,3656
80008480:	0c006b13 	jal	8001ac4c <__panic>
80008484:	24e722fc 	addiu	a3,a3,8956

80008488 <sfs_dirent_link_nolock>:
sfs_dirent_link_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:423
}

static int
sfs_dirent_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_inode *lnksin, const char *name)
{
80008488:	27bdffd8 	addiu	sp,sp,-40
8000848c:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:425
	int ret;
	if ((ret =
80008490:	8fa20038 	lw	v0,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:423
}

static int
sfs_dirent_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_inode *lnksin, const char *name)
{
80008494:	00e08021 	move	s0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:425
	int ret;
	if ((ret =
80008498:	8ce70004 	lw	a3,4(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:423
}

static int
sfs_dirent_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
		       struct sfs_inode *lnksin, const char *name)
{
8000849c:	afb10020 	sw	s1,32(sp)
800084a0:	afbf0024 	sw	ra,36(sp)
800084a4:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:425
	int ret;
	if ((ret =
800084a8:	0c001edf 	jal	80007b7c <sfs_dirent_write_nolock>
800084ac:	afa20010 	sw	v0,16(sp)
800084b0:	1440000b 	bnez	v0,800084e0 <sfs_dirent_link_nolock+0x58>
800084b4:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:430
	     sfs_dirent_write_nolock(sfs, sin, slot, lnksin->ino, name)) != 0) {
		return ret;
	}
	sin->dirty = 1;
	sin->din->dirinfo.slots++;
800084b8:	8e230000 	lw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:429
	int ret;
	if ((ret =
	     sfs_dirent_write_nolock(sfs, sin, slot, lnksin->ino, name)) != 0) {
		return ret;
	}
	sin->dirty = 1;
800084bc:	ae24000c 	sw	a0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:430
	sin->din->dirinfo.slots++;
800084c0:	8c650000 	lw	a1,0(v1)
800084c4:	24a50001 	addiu	a1,a1,1
800084c8:	ac650000 	sw	a1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:432
	lnksin->dirty = 1;
	lnksin->din->nlinks++;
800084cc:	8e030000 	lw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:431
	     sfs_dirent_write_nolock(sfs, sin, slot, lnksin->ino, name)) != 0) {
		return ret;
	}
	sin->dirty = 1;
	sin->din->dirinfo.slots++;
	lnksin->dirty = 1;
800084d0:	ae04000c 	sw	a0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:432
	lnksin->din->nlinks++;
800084d4:	9464000a 	lhu	a0,10(v1)
800084d8:	24840001 	addiu	a0,a0,1
800084dc:	a464000a 	sh	a0,10(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:434
	return 0;
}
800084e0:	8fbf0024 	lw	ra,36(sp)
800084e4:	8fb10020 	lw	s1,32(sp)
800084e8:	8fb0001c 	lw	s0,28(sp)
800084ec:	03e00008 	jr	ra
800084f0:	27bd0028 	addiu	sp,sp,40

800084f4 <sfs_write>:
sfs_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:717
{
	return sfs_io(node, iob, 0);
}

static int sfs_write(struct inode *node, struct iobuf *iob)
{
800084f4:	27bdffc0 	addiu	sp,sp,-64
800084f8:	afb30034 	sw	s3,52(sp)
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800084fc:	8c930044 	lw	s3,68(a0)
sfs_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:717
{
	return sfs_io(node, iob, 0);
}

static int sfs_write(struct inode *node, struct iobuf *iob)
{
80008500:	afb20030 	sw	s2,48(sp)
80008504:	afb00028 	sw	s0,40(sp)
80008508:	afbf003c 	sw	ra,60(sp)
8000850c:	afb40038 	sw	s4,56(sp)
80008510:	afb1002c 	sw	s1,44(sp)
80008514:	00809021 	move	s2,a0
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008518:	1260004a 	beqz	s3,80008644 <sfs_write+0x150>
8000851c:	00a08021 	move	s0,a1
80008520:	8e630084 	lw	v1,132(s3)
80008524:	24025679 	li	v0,22137
80008528:	14620046 	bne	v1,v0,80008644 <sfs_write+0x150>
8000852c:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008530:	8c830038 	lw	v1,56(a0)
80008534:	5462004b 	bnel	v1,v0,80008664 <sfs_write+0x170>
80008538:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000853c:	40026000 	mfc0	v0,c0_status
80008540:	30420001 	andi	v0,v0,0x1
80008544:	14400029 	bnez	v0,800085ec <sfs_write+0xf8>
80008548:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000854c:	8c910008 	lw	s1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008550:	32310001 	andi	s1,s1,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008554:	1620001d 	bnez	s1,800085cc <sfs_write+0xd8>
80008558:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000855c:	26510014 	addiu	s1,s2,20
80008560:	0c006727 	jal	80019c9c <down>
80008564:	02202021 	move	a0,s1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80008568:	40026000 	mfc0	v0,c0_status
8000856c:	30420001 	andi	v0,v0,0x1
80008570:	14400025 	bnez	v0,80008608 <sfs_write+0x114>
80008574:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008578:	8e540008 	lw	s4,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000857c:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80008580:	1680002c 	bnez	s4,80008634 <sfs_write+0x140>
80008584:	02402821 	move	a1,s2
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
80008588:	8e02000c 	lw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
8000858c:	8e060000 	lw	a2,0(s0)
80008590:	8e070004 	lw	a3,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
80008594:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
80008598:	27a20018 	addiu	v0,sp,24
8000859c:	afa20010 	sw	v0,16(sp)
800085a0:	02602021 	move	a0,s3
800085a4:	24020001 	li	v0,1
800085a8:	0c001d9b 	jal	8000766c <sfs_io_nolock>
800085ac:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:704
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
800085b0:	8fa50018 	lw	a1,24(sp)
800085b4:	14a0001b 	bnez	a1,80008624 <sfs_write+0x130>
800085b8:	02002021 	move	a0,s0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
800085bc:	02202021 	move	a0,s1
800085c0:	0c006725 	jal	80019c94 <up>
800085c4:	afa20020 	sw	v0,32(sp)
800085c8:	8fa20020 	lw	v0,32(sp)
sfs_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:719
}

static int sfs_write(struct inode *node, struct iobuf *iob)
{
	return sfs_io(node, iob, 1);
}
800085cc:	8fbf003c 	lw	ra,60(sp)
800085d0:	8fb40038 	lw	s4,56(sp)
800085d4:	8fb30034 	lw	s3,52(sp)
800085d8:	8fb20030 	lw	s2,48(sp)
800085dc:	8fb1002c 	lw	s1,44(sp)
800085e0:	8fb00028 	lw	s0,40(sp)
800085e4:	03e00008 	jr	ra
800085e8:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800085ec:	0c006d0c 	jal	8001b430 <intr_disable>
800085f0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800085f4:	8e510008 	lw	s1,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800085f8:	0c006d08 	jal	8001b420 <intr_enable>
800085fc:	32310001 	andi	s1,s1,0x1
80008600:	08002155 	j	80008554 <sfs_write+0x60>
80008604:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008608:	0c006d0c 	jal	8001b430 <intr_disable>
8000860c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008610:	8e540008 	lw	s4,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008614:	0c006d08 	jal	8001b420 <intr_enable>
80008618:	32940001 	andi	s4,s4,0x1
8000861c:	08002160 	j	80008580 <sfs_write+0x8c>
80008620:	00000000 	nop
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:705
	}
	size_t alen = iob->io_resid;
	ret =
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
		iobuf_skip(iob, alen);
80008624:	0c00334d 	jal	8000cd34 <iobuf_skip>
80008628:	afa20020 	sw	v0,32(sp)
8000862c:	0800216f 	j	800085bc <sfs_write+0xc8>
80008630:	8fa20020 	lw	v0,32(sp)
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008634:	0c006725 	jal	80019c94 <up>
80008638:	02202021 	move	a0,s1
8000863c:	08002173 	j	800085cc <sfs_write+0xd8>
80008640:	2402fffe 	li	v0,-2
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008644:	3c048002 	lui	a0,0x8002
80008648:	3c068002 	lui	a2,0x8002
8000864c:	3c078002 	lui	a3,0x8002
80008650:	24842030 	addiu	a0,a0,8240
80008654:	240502b7 	li	a1,695
80008658:	24c60e48 	addiu	a2,a2,3656
8000865c:	0c006b13 	jal	8001ac4c <__panic>
80008660:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008664:	3c068002 	lui	a2,0x8002
80008668:	3c078002 	lui	a3,0x8002
8000866c:	24842030 	addiu	a0,a0,8240
80008670:	240502b8 	li	a1,696
80008674:	24c60e48 	addiu	a2,a2,3656
80008678:	0c006b13 	jal	8001ac4c <__panic>
8000867c:	24e7203c 	addiu	a3,a3,8252

80008680 <sfs_read>:
sfs_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:712
	unlock_sin(sin);
	return ret;
}

static int sfs_read(struct inode *node, struct iobuf *iob)
{
80008680:	27bdffc0 	addiu	sp,sp,-64
80008684:	afb30034 	sw	s3,52(sp)
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008688:	8c930044 	lw	s3,68(a0)
sfs_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:712
	unlock_sin(sin);
	return ret;
}

static int sfs_read(struct inode *node, struct iobuf *iob)
{
8000868c:	afb20030 	sw	s2,48(sp)
80008690:	afb00028 	sw	s0,40(sp)
80008694:	afbf003c 	sw	ra,60(sp)
80008698:	afb40038 	sw	s4,56(sp)
8000869c:	afb1002c 	sw	s1,44(sp)
800086a0:	00809021 	move	s2,a0
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800086a4:	12600049 	beqz	s3,800087cc <sfs_read+0x14c>
800086a8:	00a08021 	move	s0,a1
800086ac:	8e630084 	lw	v1,132(s3)
800086b0:	24025679 	li	v0,22137
800086b4:	14620045 	bne	v1,v0,800087cc <sfs_read+0x14c>
800086b8:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800086bc:	8c830038 	lw	v1,56(a0)
800086c0:	5462004a 	bnel	v1,v0,800087ec <sfs_read+0x16c>
800086c4:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800086c8:	40026000 	mfc0	v0,c0_status
800086cc:	30420001 	andi	v0,v0,0x1
800086d0:	14400028 	bnez	v0,80008774 <sfs_read+0xf4>
800086d4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800086d8:	8c910008 	lw	s1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800086dc:	32310001 	andi	s1,s1,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800086e0:	1620001c 	bnez	s1,80008754 <sfs_read+0xd4>
800086e4:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
800086e8:	26510014 	addiu	s1,s2,20
800086ec:	0c006727 	jal	80019c9c <down>
800086f0:	02202021 	move	a0,s1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
800086f4:	40026000 	mfc0	v0,c0_status
800086f8:	30420001 	andi	v0,v0,0x1
800086fc:	14400024 	bnez	v0,80008790 <sfs_read+0x110>
80008700:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008704:	8e540008 	lw	s4,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008708:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000870c:	1680002b 	bnez	s4,800087bc <sfs_read+0x13c>
80008710:	02402821 	move	a1,s2
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
80008714:	8e02000c 	lw	v0,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
80008718:	8e060000 	lw	a2,0(s0)
8000871c:	8e070004 	lw	a3,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:701
	struct sfs_inode *sin = vop_info(node, sfs_inode);
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	size_t alen = iob->io_resid;
80008720:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:702
	ret =
80008724:	02602021 	move	a0,s3
80008728:	27a20018 	addiu	v0,sp,24
8000872c:	afa20010 	sw	v0,16(sp)
80008730:	0c001d9b 	jal	8000766c <sfs_io_nolock>
80008734:	afa00014 	sw	zero,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:704
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
80008738:	8fa50018 	lw	a1,24(sp)
8000873c:	14a0001b 	bnez	a1,800087ac <sfs_read+0x12c>
80008740:	02002021 	move	a0,s0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008744:	02202021 	move	a0,s1
80008748:	0c006725 	jal	80019c94 <up>
8000874c:	afa20020 	sw	v0,32(sp)
80008750:	8fa20020 	lw	v0,32(sp)
sfs_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:714
}

static int sfs_read(struct inode *node, struct iobuf *iob)
{
	return sfs_io(node, iob, 0);
}
80008754:	8fbf003c 	lw	ra,60(sp)
80008758:	8fb40038 	lw	s4,56(sp)
8000875c:	8fb30034 	lw	s3,52(sp)
80008760:	8fb20030 	lw	s2,48(sp)
80008764:	8fb1002c 	lw	s1,44(sp)
80008768:	8fb00028 	lw	s0,40(sp)
8000876c:	03e00008 	jr	ra
80008770:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008774:	0c006d0c 	jal	8001b430 <intr_disable>
80008778:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000877c:	8e510008 	lw	s1,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008780:	0c006d08 	jal	8001b420 <intr_enable>
80008784:	32310001 	andi	s1,s1,0x1
80008788:	080021b8 	j	800086e0 <sfs_read+0x60>
8000878c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008790:	0c006d0c 	jal	8001b430 <intr_disable>
80008794:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008798:	8e540008 	lw	s4,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000879c:	0c006d08 	jal	8001b420 <intr_enable>
800087a0:	32940001 	andi	s4,s4,0x1
800087a4:	080021c3 	j	8000870c <sfs_read+0x8c>
800087a8:	00000000 	nop
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:705
	}
	size_t alen = iob->io_resid;
	ret =
	    sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);
	if (alen != 0) {
		iobuf_skip(iob, alen);
800087ac:	0c00334d 	jal	8000cd34 <iobuf_skip>
800087b0:	afa20020 	sw	v0,32(sp)
800087b4:	080021d1 	j	80008744 <sfs_read+0xc4>
800087b8:	8fa20020 	lw	v0,32(sp)
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
800087bc:	0c006725 	jal	80019c94 <up>
800087c0:	02202021 	move	a0,s1
800087c4:	080021d5 	j	80008754 <sfs_read+0xd4>
800087c8:	2402fffe 	li	v0,-2
sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:695
	return ret;
}

static inline int sfs_io(struct inode *node, struct iobuf *iob, bool write)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800087cc:	3c048002 	lui	a0,0x8002
800087d0:	3c068002 	lui	a2,0x8002
800087d4:	3c078002 	lui	a3,0x8002
800087d8:	24842030 	addiu	a0,a0,8240
800087dc:	240502b7 	li	a1,695
800087e0:	24c60e48 	addiu	a2,a2,3656
800087e4:	0c006b13 	jal	8001ac4c <__panic>
800087e8:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:696
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800087ec:	3c068002 	lui	a2,0x8002
800087f0:	3c078002 	lui	a3,0x8002
800087f4:	24842030 	addiu	a0,a0,8240
800087f8:	240502b8 	li	a1,696
800087fc:	24c60e48 	addiu	a2,a2,3656
80008800:	0c006b13 	jal	8001ac4c <__panic>
80008804:	24e7203c 	addiu	a3,a3,8252

80008808 <sfs_mkdir>:
sfs_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:816
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_mkdir(struct inode *node, const char *name)
{
80008808:	27bdffc0 	addiu	sp,sp,-64
8000880c:	afb00024 	sw	s0,36(sp)
80008810:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:817
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
80008814:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:816
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_mkdir(struct inode *node, const char *name)
{
80008818:	afb10028 	sw	s1,40(sp)
8000881c:	afbf003c 	sw	ra,60(sp)
80008820:	afb50038 	sw	s5,56(sp)
80008824:	afb40034 	sw	s4,52(sp)
80008828:	afb30030 	sw	s3,48(sp)
8000882c:	afb2002c 	sw	s2,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:817
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
80008830:	0c005b81 	jal	80016e04 <strlen>
80008834:	00a08821 	move	s1,a1
80008838:	2c420100 	sltiu	v0,v0,256
8000883c:	10400057 	beqz	v0,8000899c <sfs_mkdir+0x194>
80008840:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:820
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
80008844:	02202021 	move	a0,s1
80008848:	0c005bc0 	jal	80016f00 <strcmp>
8000884c:	24a53e48 	addiu	a1,a1,15944
80008850:	10400047 	beqz	v0,80008970 <sfs_mkdir+0x168>
80008854:	3c058002 	lui	a1,0x8002
80008858:	02202021 	move	a0,s1
8000885c:	0c005bc0 	jal	80016f00 <strcmp>
80008860:	24a52338 	addiu	a1,a1,9016
80008864:	10400043 	beqz	v0,80008974 <sfs_mkdir+0x16c>
80008868:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:823
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000886c:	8e120044 	lw	s2,68(s0)
80008870:	12400085 	beqz	s2,80008a88 <sfs_mkdir+0x280>
80008874:	24025679 	li	v0,22137
80008878:	8e430084 	lw	v1,132(s2)
8000887c:	14620082 	bne	v1,v0,80008a88 <sfs_mkdir+0x280>
80008880:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:824
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008884:	8e030038 	lw	v1,56(s0)
80008888:	14620087 	bne	v1,v0,80008aa8 <sfs_mkdir+0x2a0>
8000888c:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008890:	40026000 	mfc0	v0,c0_status
80008894:	30420001 	andi	v0,v0,0x1
80008898:	14400027 	bnez	v0,80008938 <sfs_mkdir+0x130>
8000889c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800088a0:	8e130008 	lw	s3,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800088a4:	32730001 	andi	s3,s3,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800088a8:	1660003e 	bnez	s3,800089a4 <sfs_mkdir+0x19c>
800088ac:	26130014 	addiu	s3,s0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
800088b0:	0c006727 	jal	80019c9c <down>
800088b4:	02602021 	move	a0,s3
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
800088b8:	40026000 	mfc0	v0,c0_status
800088bc:	30420001 	andi	v0,v0,0x1
800088c0:	14400024 	bnez	v0,80008954 <sfs_mkdir+0x14c>
800088c4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800088c8:	8e140008 	lw	s4,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800088cc:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
800088d0:	16800058 	bnez	s4,80008a34 <sfs_mkdir+0x22c>
800088d4:	27a2001c 	addiu	v0,sp,28
sfs_mkdir_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:784

static int
sfs_mkdir_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name)
{
	int ret, slot;
	if ((ret =
800088d8:	02402021 	move	a0,s2
800088dc:	02002821 	move	a1,s0
800088e0:	02203021 	move	a2,s1
800088e4:	00003821 	move	a3,zero
800088e8:	afa00010 	sw	zero,16(sp)
800088ec:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
800088f0:	afa20014 	sw	v0,20(sp)
800088f4:	0040a821 	move	s5,v0
800088f8:	2402fffe 	li	v0,-2
800088fc:	12a2002b 	beq	s5,v0,800089ac <sfs_mkdir+0x1a4>
80008900:	2402ffef 	li	v0,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:787
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
80008904:	0055a80a 	movz	s5,v0,s5
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008908:	0c006725 	jal	80019c94 <up>
8000890c:	02602021 	move	a0,s3
sfs_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:831
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_mkdir_nolock(sfs, sin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008910:	8fbf003c 	lw	ra,60(sp)
80008914:	02a01021 	move	v0,s5
80008918:	8fb40034 	lw	s4,52(sp)
8000891c:	8fb50038 	lw	s5,56(sp)
80008920:	8fb30030 	lw	s3,48(sp)
80008924:	8fb2002c 	lw	s2,44(sp)
80008928:	8fb10028 	lw	s1,40(sp)
8000892c:	8fb00024 	lw	s0,36(sp)
80008930:	03e00008 	jr	ra
80008934:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008938:	0c006d0c 	jal	8001b430 <intr_disable>
8000893c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008940:	8e130008 	lw	s3,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008944:	0c006d08 	jal	8001b420 <intr_enable>
80008948:	32730001 	andi	s3,s3,0x1
8000894c:	0800222a 	j	800088a8 <sfs_mkdir+0xa0>
80008950:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008954:	0c006d0c 	jal	8001b430 <intr_disable>
80008958:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000895c:	8e140008 	lw	s4,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008960:	0c006d08 	jal	8001b420 <intr_enable>
80008964:	32940001 	andi	s4,s4,0x1
80008968:	08002234 	j	800088d0 <sfs_mkdir+0xc8>
8000896c:	00000000 	nop
sfs_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:831
80008970:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:821
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
80008974:	2415ffef 	li	s5,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:831
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_mkdir_nolock(sfs, sin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008978:	02a01021 	move	v0,s5
8000897c:	8fb40034 	lw	s4,52(sp)
80008980:	8fb50038 	lw	s5,56(sp)
80008984:	8fb30030 	lw	s3,48(sp)
80008988:	8fb2002c 	lw	s2,44(sp)
8000898c:	8fb10028 	lw	s1,40(sp)
80008990:	8fb00024 	lw	s0,36(sp)
80008994:	03e00008 	jr	ra
80008998:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:818
}

static int sfs_mkdir(struct inode *node, const char *name)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000899c:	08002244 	j	80008910 <sfs_mkdir+0x108>
800089a0:	2415ffe5 	li	s5,-27
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
800089a4:	08002244 	j	80008910 <sfs_mkdir+0x108>
800089a8:	2415fffe 	li	s5,-2
sfs_mkdir_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:790
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
	}
	struct inode *link_node;
	if ((ret = sfs_dirent_create_inode(sfs, SFS_TYPE_DIR, &link_node)) != 0) {
800089ac:	02402021 	move	a0,s2
800089b0:	24050002 	li	a1,2
800089b4:	0c001ca7 	jal	8000729c <sfs_dirent_create_inode>
800089b8:	27a60018 	addiu	a2,sp,24
800089bc:	1440ffd2 	bnez	v0,80008908 <sfs_mkdir+0x100>
800089c0:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:793
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
800089c4:	8fb40018 	lw	s4,24(sp)
800089c8:	1280003e 	beqz	s4,80008ac4 <sfs_mkdir+0x2bc>
800089cc:	24021237 	li	v0,4663
800089d0:	8e830038 	lw	v1,56(s4)
800089d4:	1462003b 	bne	v1,v0,80008ac4 <sfs_mkdir+0x2bc>
800089d8:	8fa6001c 	lw	a2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:794
	if ((ret = sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name)) != 0) {
800089dc:	02402021 	move	a0,s2
800089e0:	02002821 	move	a1,s0
800089e4:	02803821 	move	a3,s4
800089e8:	0c002122 	jal	80008488 <sfs_dirent_link_nolock>
800089ec:	afb10010 	sw	s1,16(sp)
800089f0:	10400014 	beqz	v0,80008a44 <sfs_mkdir+0x23c>
800089f4:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:795
		assert(lnksin->din->nlinks == 0);
800089f8:	8e820000 	lw	v0,0(s4)
800089fc:	9442000a 	lhu	v0,10(v0)
80008a00:	14400034 	bnez	v0,80008ad4 <sfs_mkdir+0x2cc>
80008a04:	8fa40018 	lw	a0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:796
		assert(inode_ref_count(link_node) == 1
80008a08:	24020001 	li	v0,1
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80008a0c:	8c83003c 	lw	v1,60(a0)
sfs_mkdir_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:796
80008a10:	54620038 	bnel	v1,v0,80008af4 <sfs_mkdir+0x2ec>
80008a14:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
80008a18:	8c820040 	lw	v0,64(a0)
sfs_mkdir_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:796
80008a1c:	54400035 	bnezl	v0,80008af4 <sfs_mkdir+0x2ec>
80008a20:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:811

	/* add '..' link to parent */
	sfs_nlinks_inc_nolock(sin);

out:
	vop_ref_dec(link_node);
80008a24:	0c001171 	jal	800045c4 <inode_ref_dec>
80008a28:	00000000 	nop
80008a2c:	08002242 	j	80008908 <sfs_mkdir+0x100>
80008a30:	00000000 	nop
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008a34:	0c006725 	jal	80019c94 <up>
80008a38:	02602021 	move	a0,s3
80008a3c:	08002244 	j	80008910 <sfs_mkdir+0x108>
80008a40:	2415fffe 	li	s5,-2
sfs_dirinfo_set_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:754

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
80008a44:	8e820000 	lw	v0,0(s4)
80008a48:	8e030004 	lw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:753
}

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
80008a4c:	24050001 	li	a1,1
sfs_nlinks_inc_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
80008a50:	9444000a 	lhu	a0,10(v0)
sfs_dirinfo_set_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:753
}

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
80008a54:	ae85000c 	sw	a1,12(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:754
	sin->din->dirinfo.parent = parent->ino;
80008a58:	ac430004 	sw	v1,4(v0)
sfs_nlinks_inc_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
80008a5c:	8e030000 	lw	v1,0(s0)
80008a60:	24840001 	addiu	a0,a0,1
80008a64:	a444000a 	sh	a0,10(v0)
80008a68:	9462000a 	lhu	v0,10(v1)
80008a6c:	8fa40018 	lw	a0,24(sp)
80008a70:	ae05000c 	sw	a1,12(s0)
80008a74:	24420001 	addiu	v0,v0,1
sfs_mkdir_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:811

	/* add '..' link to parent */
	sfs_nlinks_inc_nolock(sin);

out:
	vop_ref_dec(link_node);
80008a78:	0c001171 	jal	800045c4 <inode_ref_dec>
80008a7c:	a462000a 	sh	v0,10(v1)
80008a80:	08002242 	j	80008908 <sfs_mkdir+0x100>
80008a84:	00000000 	nop
sfs_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:823
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008a88:	3c048002 	lui	a0,0x8002
80008a8c:	3c068002 	lui	a2,0x8002
80008a90:	3c078002 	lui	a3,0x8002
80008a94:	24842030 	addiu	a0,a0,8240
80008a98:	24050337 	li	a1,823
80008a9c:	24c60e48 	addiu	a2,a2,3656
80008aa0:	0c006b13 	jal	8001ac4c <__panic>
80008aa4:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:824
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008aa8:	24842030 	addiu	a0,a0,8240
80008aac:	24050338 	li	a1,824
sfs_mkdir_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:793
	}
	struct inode *link_node;
	if ((ret = sfs_dirent_create_inode(sfs, SFS_TYPE_DIR, &link_node)) != 0) {
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008ab0:	3c068002 	lui	a2,0x8002
80008ab4:	3c078002 	lui	a3,0x8002
80008ab8:	24c60e48 	addiu	a2,a2,3656
80008abc:	0c006b13 	jal	8001ac4c <__panic>
80008ac0:	24e7203c 	addiu	a3,a3,8252
80008ac4:	3c048002 	lui	a0,0x8002
80008ac8:	24842030 	addiu	a0,a0,8240
80008acc:	080022ac 	j	80008ab0 <sfs_mkdir+0x2a8>
80008ad0:	24050319 	li	a1,793
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:795
	if ((ret = sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name)) != 0) {
		assert(lnksin->din->nlinks == 0);
80008ad4:	3c048002 	lui	a0,0x8002
80008ad8:	3c068002 	lui	a2,0x8002
80008adc:	3c078002 	lui	a3,0x8002
80008ae0:	24842030 	addiu	a0,a0,8240
80008ae4:	2405031b 	li	a1,795
80008ae8:	24c60e48 	addiu	a2,a2,3656
80008aec:	0c006b13 	jal	8001ac4c <__panic>
80008af0:	24e7233c 	addiu	a3,a3,9020
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:796
		assert(inode_ref_count(link_node) == 1
80008af4:	3c068002 	lui	a2,0x8002
80008af8:	3c078002 	lui	a3,0x8002
80008afc:	24842030 	addiu	a0,a0,8240
80008b00:	2405031d 	li	a1,797
80008b04:	24c60e48 	addiu	a2,a2,3656
80008b08:	0c006b13 	jal	8001ac4c <__panic>
80008b0c:	24e72358 	addiu	a3,a3,9048

80008b10 <sfs_link>:
sfs_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:848
	return sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name);
}

static int
sfs_link(struct inode *node, const char *name, struct inode *link_node)
{
80008b10:	27bdffb8 	addiu	sp,sp,-72
80008b14:	afb0002c 	sw	s0,44(sp)
80008b18:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:849
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
80008b1c:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:848
	return sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name);
}

static int
sfs_link(struct inode *node, const char *name, struct inode *link_node)
{
80008b20:	afb20034 	sw	s2,52(sp)
80008b24:	afb10030 	sw	s1,48(sp)
80008b28:	afbf0044 	sw	ra,68(sp)
80008b2c:	afb50040 	sw	s5,64(sp)
80008b30:	afb4003c 	sw	s4,60(sp)
80008b34:	afb30038 	sw	s3,56(sp)
80008b38:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:849
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
80008b3c:	0c005b81 	jal	80016e04 <strlen>
80008b40:	00c09021 	move	s2,a2
80008b44:	2c420100 	sltiu	v0,v0,256
80008b48:	10400061 	beqz	v0,80008cd0 <sfs_link+0x1c0>
80008b4c:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:852
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
80008b50:	02202021 	move	a0,s1
80008b54:	0c005bc0 	jal	80016f00 <strcmp>
80008b58:	24a53e48 	addiu	a1,a1,15944
80008b5c:	10400052 	beqz	v0,80008ca8 <sfs_link+0x198>
80008b60:	3c058002 	lui	a1,0x8002
80008b64:	02202021 	move	a0,s1
80008b68:	0c005bc0 	jal	80016f00 <strcmp>
80008b6c:	24a52338 	addiu	a1,a1,9016
80008b70:	1040004e 	beqz	v0,80008cac <sfs_link+0x19c>
80008b74:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:855
		return -E_EXISTS;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008b78:	1240006b 	beqz	s2,80008d28 <sfs_link+0x218>
80008b7c:	24031237 	li	v1,4663
80008b80:	8e420038 	lw	v0,56(s2)
80008b84:	14430069 	bne	v0,v1,80008d2c <sfs_link+0x21c>
80008b88:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:856
	if (lnksin->din->type == SFS_TYPE_DIR) {
80008b8c:	8e430000 	lw	v1,0(s2)
80008b90:	94640008 	lhu	a0,8(v1)
80008b94:	24030002 	li	v1,2
80008b98:	5083002d 	beql	a0,v1,80008c50 <sfs_link+0x140>
80008b9c:	2402ffeb 	li	v0,-21
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:859
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008ba0:	8e130044 	lw	s3,68(s0)
80008ba4:	12600058 	beqz	s3,80008d08 <sfs_link+0x1f8>
80008ba8:	24035679 	li	v1,22137
80008bac:	8e640084 	lw	a0,132(s3)
80008bb0:	54830056 	bnel	a0,v1,80008d0c <sfs_link+0x1fc>
80008bb4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:860
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008bb8:	8e030038 	lw	v1,56(s0)
80008bbc:	54620062 	bnel	v1,v0,80008d48 <sfs_link+0x238>
80008bc0:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008bc4:	40026000 	mfc0	v0,c0_status
80008bc8:	30420001 	andi	v0,v0,0x1
80008bcc:	14400028 	bnez	v0,80008c70 <sfs_link+0x160>
80008bd0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008bd4:	8e140008 	lw	s4,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008bd8:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008bdc:	1680001b 	bnez	s4,80008c4c <sfs_link+0x13c>
80008be0:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80008be4:	26140014 	addiu	s4,s0,20
80008be8:	0c006727 	jal	80019c9c <down>
80008bec:	02802021 	move	a0,s4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80008bf0:	40026000 	mfc0	v0,c0_status
80008bf4:	30420001 	andi	v0,v0,0x1
80008bf8:	14400024 	bnez	v0,80008c8c <sfs_link+0x17c>
80008bfc:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008c00:	8e150008 	lw	s5,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008c04:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80008c08:	16a0003b 	bnez	s5,80008cf8 <sfs_link+0x1e8>
80008c0c:	02602021 	move	a0,s3
sfs_link_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:838
static int
sfs_link_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct sfs_inode *lnksin, const char *name)
{
	int ret, slot;
	if ((ret =
80008c10:	27a20018 	addiu	v0,sp,24
80008c14:	02002821 	move	a1,s0
80008c18:	02203021 	move	a2,s1
80008c1c:	00003821 	move	a3,zero
80008c20:	afa00010 	sw	zero,16(sp)
80008c24:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
80008c28:	afa20014 	sw	v0,20(sp)
80008c2c:	2403fffe 	li	v1,-2
80008c30:	10430029 	beq	v0,v1,80008cd8 <sfs_link+0x1c8>
80008c34:	2403ffef 	li	v1,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:841
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
80008c38:	0062100a 	movz	v0,v1,v0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008c3c:	02802021 	move	a0,s4
80008c40:	0c006725 	jal	80019c94 <up>
80008c44:	afa20020 	sw	v0,32(sp)
80008c48:	8fa20020 	lw	v0,32(sp)
sfs_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:867
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_link_nolock(sfs, sin, lnksin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008c4c:	8fbf0044 	lw	ra,68(sp)
80008c50:	8fb50040 	lw	s5,64(sp)
80008c54:	8fb4003c 	lw	s4,60(sp)
80008c58:	8fb30038 	lw	s3,56(sp)
80008c5c:	8fb20034 	lw	s2,52(sp)
80008c60:	8fb10030 	lw	s1,48(sp)
80008c64:	8fb0002c 	lw	s0,44(sp)
80008c68:	03e00008 	jr	ra
80008c6c:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008c70:	0c006d0c 	jal	8001b430 <intr_disable>
80008c74:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008c78:	8e140008 	lw	s4,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008c7c:	0c006d08 	jal	8001b420 <intr_enable>
80008c80:	32940001 	andi	s4,s4,0x1
80008c84:	080022f7 	j	80008bdc <sfs_link+0xcc>
80008c88:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008c8c:	0c006d0c 	jal	8001b430 <intr_disable>
80008c90:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008c94:	8e150008 	lw	s5,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008c98:	0c006d08 	jal	8001b420 <intr_enable>
80008c9c:	32b50001 	andi	s5,s5,0x1
80008ca0:	08002302 	j	80008c08 <sfs_link+0xf8>
80008ca4:	00000000 	nop
sfs_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:867
80008ca8:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:853
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
80008cac:	2402ffef 	li	v0,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:867
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_link_nolock(sfs, sin, lnksin, name);
		unlock_sin(sin);
	}
	return ret;
}
80008cb0:	8fb50040 	lw	s5,64(sp)
80008cb4:	8fb4003c 	lw	s4,60(sp)
80008cb8:	8fb30038 	lw	s3,56(sp)
80008cbc:	8fb20034 	lw	s2,52(sp)
80008cc0:	8fb10030 	lw	s1,48(sp)
80008cc4:	8fb0002c 	lw	s0,44(sp)
80008cc8:	03e00008 	jr	ra
80008ccc:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:850

static int
sfs_link(struct inode *node, const char *name, struct inode *link_node)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
80008cd0:	08002313 	j	80008c4c <sfs_link+0x13c>
80008cd4:	2402ffe5 	li	v0,-27
sfs_link_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:843
	if ((ret =
	     sfs_dirent_search_nolock(sfs, sin, name, NULL, NULL,
				      &slot)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
	}
	return sfs_dirent_link_nolock(sfs, sin, slot, lnksin, name);
80008cd8:	8fa60018 	lw	a2,24(sp)
80008cdc:	02602021 	move	a0,s3
80008ce0:	02002821 	move	a1,s0
80008ce4:	02403821 	move	a3,s2
80008ce8:	0c002122 	jal	80008488 <sfs_dirent_link_nolock>
80008cec:	afb10010 	sw	s1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008cf0:	08002310 	j	80008c40 <sfs_link+0x130>
80008cf4:	02802021 	move	a0,s4
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008cf8:	0c006725 	jal	80019c94 <up>
80008cfc:	02802021 	move	a0,s4
80008d00:	08002313 	j	80008c4c <sfs_link+0x13c>
80008d04:	2402fffe 	li	v0,-2
sfs_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:859
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
	if (lnksin->din->type == SFS_TYPE_DIR) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008d08:	3c048002 	lui	a0,0x8002
80008d0c:	3c068002 	lui	a2,0x8002
80008d10:	3c078002 	lui	a3,0x8002
80008d14:	24842030 	addiu	a0,a0,8240
80008d18:	2405035b 	li	a1,859
80008d1c:	24c60e48 	addiu	a2,a2,3656
80008d20:	0c006b13 	jal	8001ac4c <__panic>
80008d24:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:855
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
80008d28:	3c048002 	lui	a0,0x8002
80008d2c:	24842030 	addiu	a0,a0,8240
80008d30:	24050357 	li	a1,855
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:860
	if (lnksin->din->type == SFS_TYPE_DIR) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008d34:	3c068002 	lui	a2,0x8002
80008d38:	3c078002 	lui	a3,0x8002
80008d3c:	24c60e48 	addiu	a2,a2,3656
80008d40:	0c006b13 	jal	8001ac4c <__panic>
80008d44:	24e7203c 	addiu	a3,a3,8252
80008d48:	24842030 	addiu	a0,a0,8240
80008d4c:	0800234d 	j	80008d34 <sfs_link+0x224>
80008d50:	2405035c 	li	a1,860

80008d54 <sfs_truncfile>:
sfs_truncfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1194
	return 0;
}

static int sfs_truncfile(struct inode *node, off_t len)
{
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
80008d54:	3c020800 	lui	v0,0x800
80008d58:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1193
	}
	return 0;
}

static int sfs_truncfile(struct inode *node, off_t len)
{
80008d5c:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1194
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
80008d60:	00a2102b 	sltu	v0,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1193
	}
	return 0;
}

static int sfs_truncfile(struct inode *node, off_t len)
{
80008d64:	afb40028 	sw	s4,40(sp)
80008d68:	afb1001c 	sw	s1,28(sp)
80008d6c:	afbf0034 	sw	ra,52(sp)
80008d70:	afb60030 	sw	s6,48(sp)
80008d74:	afb5002c 	sw	s5,44(sp)
80008d78:	afb30024 	sw	s3,36(sp)
80008d7c:	afb20020 	sw	s2,32(sp)
80008d80:	afb00018 	sw	s0,24(sp)
80008d84:	00a0a021 	move	s4,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1194
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
80008d88:	1040006e 	beqz	v0,80008f44 <sfs_truncfile+0x1f0>
80008d8c:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1197
		return -E_INVAL;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008d90:	8c920044 	lw	s2,68(a0)
80008d94:	12400071 	beqz	s2,80008f5c <sfs_truncfile+0x208>
80008d98:	24025679 	li	v0,22137
80008d9c:	8e430084 	lw	v1,132(s2)
80008da0:	1462006e 	bne	v1,v0,80008f5c <sfs_truncfile+0x208>
80008da4:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1198
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008da8:	8c830038 	lw	v1,56(a0)
80008dac:	14620073 	bne	v1,v0,80008f7c <sfs_truncfile+0x228>
80008db0:	24020002 	li	v0,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1199
	struct sfs_disk_inode *din = sin->din;
80008db4:	8c950000 	lw	s5,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1200
	assert(din->type != SFS_TYPE_DIR);
80008db8:	96a30008 	lhu	v1,8(s5)
80008dbc:	10620077 	beq	v1,v0,80008f9c <sfs_truncfile+0x248>
80008dc0:	24b30fff 	addiu	s3,a1,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1204

	int ret = 0;
	uint32_t nblks, tblks = ROUNDUP_DIV(len, SFS_BLKSIZE);
	if (din->fileinfo.size == len) {
80008dc4:	8ea20000 	lw	v0,0(s5)
80008dc8:	10a2002d 	beq	a1,v0,80008e80 <sfs_truncfile+0x12c>
80008dcc:	00139b02 	srl	s3,s3,0xc
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80008dd0:	40026000 	mfc0	v0,c0_status
80008dd4:	30420001 	andi	v0,v0,0x1
80008dd8:	14400048 	bnez	v0,80008efc <sfs_truncfile+0x1a8>
80008ddc:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008de0:	8c900008 	lw	s0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008de4:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008de8:	16000054 	bnez	s0,80008f3c <sfs_truncfile+0x1e8>
80008dec:	26360014 	addiu	s6,s1,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80008df0:	0c006727 	jal	80019c9c <down>
80008df4:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80008df8:	40026000 	mfc0	v0,c0_status
80008dfc:	30420001 	andi	v0,v0,0x1
80008e00:	14400045 	bnez	v0,80008f18 <sfs_truncfile+0x1c4>
80008e04:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008e08:	8e300008 	lw	s0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80008e0c:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80008e10:	1600004e 	bnez	s0,80008f4c <sfs_truncfile+0x1f8>
80008e14:	00000000 	nop
sfs_truncfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1212
	}

	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	nblks = din->blocks;
80008e18:	8eb0000c 	lw	s0,12(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1213
	if (nblks < tblks) {
80008e1c:	0213102b 	sltu	v0,s0,s3
80008e20:	14400026 	bnez	v0,80008ebc <sfs_truncfile+0x168>
80008e24:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1222
						  NULL)) != 0) {
				goto out_unlock;
			}
			nblks++;
		}
	} else if (tblks < nblks) {
80008e28:	0270102b 	sltu	v0,s3,s0
80008e2c:	1440002d 	bnez	v0,80008ee4 <sfs_truncfile+0x190>
80008e30:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1230
				goto out_unlock;
			}
			nblks--;
		}
	}
	assert(din->blocks == tblks);
80008e34:	16700069 	bne	s3,s0,80008fdc <sfs_truncfile+0x288>
80008e38:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1231
	din->fileinfo.size = len;
80008e3c:	aeb40000 	sw	s4,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1232
	sin->dirty = 1;
80008e40:	00001021 	move	v0,zero
80008e44:	ae23000c 	sw	v1,12(s1)
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008e48:	02c02021 	move	a0,s6
80008e4c:	0c006725 	jal	80019c94 <up>
80008e50:	afa20010 	sw	v0,16(sp)
sfs_truncfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1237
	sin->dirty = 1;

out_unlock:
	unlock_sin(sin);
	return ret;
}
80008e54:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1236
	din->fileinfo.size = len;
	sin->dirty = 1;

out_unlock:
	unlock_sin(sin);
	return ret;
80008e58:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1237
}
80008e5c:	8fb60030 	lw	s6,48(sp)
80008e60:	8fb5002c 	lw	s5,44(sp)
80008e64:	8fb40028 	lw	s4,40(sp)
80008e68:	8fb30024 	lw	s3,36(sp)
80008e6c:	8fb20020 	lw	s2,32(sp)
80008e70:	8fb1001c 	lw	s1,28(sp)
80008e74:	8fb00018 	lw	s0,24(sp)
80008e78:	03e00008 	jr	ra
80008e7c:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1205
	assert(din->type != SFS_TYPE_DIR);

	int ret = 0;
	uint32_t nblks, tblks = ROUNDUP_DIV(len, SFS_BLKSIZE);
	if (din->fileinfo.size == len) {
		assert(tblks == din->blocks);
80008e80:	8ea3000c 	lw	v1,12(s5)
80008e84:	1663004d 	bne	s3,v1,80008fbc <sfs_truncfile+0x268>
80008e88:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1237
	sin->dirty = 1;

out_unlock:
	unlock_sin(sin);
	return ret;
}
80008e8c:	8fbf0034 	lw	ra,52(sp)
80008e90:	8fb60030 	lw	s6,48(sp)
80008e94:	8fb5002c 	lw	s5,44(sp)
80008e98:	8fb40028 	lw	s4,40(sp)
80008e9c:	8fb30024 	lw	s3,36(sp)
80008ea0:	8fb20020 	lw	s2,32(sp)
80008ea4:	8fb1001c 	lw	s1,28(sp)
80008ea8:	8fb00018 	lw	s0,24(sp)
80008eac:	03e00008 	jr	ra
80008eb0:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1214
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	nblks = din->blocks;
	if (nblks < tblks) {
		while (nblks != tblks) {
80008eb4:	1213001f 	beq	s0,s3,80008f34 <sfs_truncfile+0x1e0>
80008eb8:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1215
			if ((ret =
80008ebc:	02202821 	move	a1,s1
80008ec0:	02003021 	move	a2,s0
80008ec4:	0c001cf6 	jal	800073d8 <sfs_bmap_load_nolock>
80008ec8:	00003821 	move	a3,zero
80008ecc:	1040fff9 	beqz	v0,80008eb4 <sfs_truncfile+0x160>
80008ed0:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008ed4:	08002393 	j	80008e4c <sfs_truncfile+0xf8>
80008ed8:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1223
				goto out_unlock;
			}
			nblks++;
		}
	} else if (tblks < nblks) {
		while (tblks != nblks) {
80008edc:	12130015 	beq	s0,s3,80008f34 <sfs_truncfile+0x1e0>
80008ee0:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1224
			if ((ret = sfs_bmap_truncate_nolock(sfs, sin)) != 0) {
80008ee4:	0c001f75 	jal	80007dd4 <sfs_bmap_truncate_nolock>
80008ee8:	02202821 	move	a1,s1
80008eec:	1040fffb 	beqz	v0,80008edc <sfs_truncfile+0x188>
80008ef0:	2610ffff 	addiu	s0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80008ef4:	08002393 	j	80008e4c <sfs_truncfile+0xf8>
80008ef8:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80008efc:	0c006d0c 	jal	8001b430 <intr_disable>
80008f00:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80008f04:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008f08:	0c006d08 	jal	8001b420 <intr_enable>
80008f0c:	32100001 	andi	s0,s0,0x1
80008f10:	0800237a 	j	80008de8 <sfs_truncfile+0x94>
80008f14:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80008f18:	0c006d0c 	jal	8001b430 <intr_disable>
80008f1c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80008f20:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80008f24:	0c006d08 	jal	8001b420 <intr_enable>
80008f28:	32100001 	andi	s0,s0,0x1
80008f2c:	08002384 	j	80008e10 <sfs_truncfile+0xbc>
80008f30:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1223
				goto out_unlock;
			}
			nblks++;
		}
	} else if (tblks < nblks) {
		while (tblks != nblks) {
80008f34:	0800238d 	j	80008e34 <sfs_truncfile+0xe0>
80008f38:	8eb0000c 	lw	s0,12(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80008f3c:	080023a3 	j	80008e8c <sfs_truncfile+0x138>
80008f40:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1195
}

static int sfs_truncfile(struct inode *node, off_t len)
{
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
80008f44:	080023a3 	j	80008e8c <sfs_truncfile+0x138>
80008f48:	2402ffea 	li	v0,-22
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80008f4c:	0c006725 	jal	80019c94 <up>
80008f50:	02c02021 	move	a0,s6
80008f54:	080023a3 	j	80008e8c <sfs_truncfile+0x138>
80008f58:	2402fffe 	li	v0,-2
sfs_truncfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1197
static int sfs_truncfile(struct inode *node, off_t len)
{
	if (len < 0 || len > SFS_MAX_FILE_SIZE) {
		return -E_INVAL;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80008f5c:	3c048002 	lui	a0,0x8002
80008f60:	3c068002 	lui	a2,0x8002
80008f64:	3c078002 	lui	a3,0x8002
80008f68:	24842030 	addiu	a0,a0,8240
80008f6c:	240504ad 	li	a1,1197
80008f70:	24c60e48 	addiu	a2,a2,3656
80008f74:	0c006b13 	jal	8001ac4c <__panic>
80008f78:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1198
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80008f7c:	3c048002 	lui	a0,0x8002
80008f80:	3c068002 	lui	a2,0x8002
80008f84:	3c078002 	lui	a3,0x8002
80008f88:	24842030 	addiu	a0,a0,8240
80008f8c:	240504ae 	li	a1,1198
80008f90:	24c60e48 	addiu	a2,a2,3656
80008f94:	0c006b13 	jal	8001ac4c <__panic>
80008f98:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1200
	struct sfs_disk_inode *din = sin->din;
	assert(din->type != SFS_TYPE_DIR);
80008f9c:	3c048002 	lui	a0,0x8002
80008fa0:	3c068002 	lui	a2,0x8002
80008fa4:	3c078002 	lui	a3,0x8002
80008fa8:	24842030 	addiu	a0,a0,8240
80008fac:	240504b0 	li	a1,1200
80008fb0:	24c60e48 	addiu	a2,a2,3656
80008fb4:	0c006b13 	jal	8001ac4c <__panic>
80008fb8:	24e72188 	addiu	a3,a3,8584
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1205

	int ret = 0;
	uint32_t nblks, tblks = ROUNDUP_DIV(len, SFS_BLKSIZE);
	if (din->fileinfo.size == len) {
		assert(tblks == din->blocks);
80008fbc:	3c048002 	lui	a0,0x8002
80008fc0:	3c068002 	lui	a2,0x8002
80008fc4:	3c078002 	lui	a3,0x8002
80008fc8:	24842030 	addiu	a0,a0,8240
80008fcc:	240504b5 	li	a1,1205
80008fd0:	24c60e48 	addiu	a2,a2,3656
80008fd4:	0c006b13 	jal	8001ac4c <__panic>
80008fd8:	24e7239c 	addiu	a3,a3,9116
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1230
				goto out_unlock;
			}
			nblks--;
		}
	}
	assert(din->blocks == tblks);
80008fdc:	3c048002 	lui	a0,0x8002
80008fe0:	3c068002 	lui	a2,0x8002
80008fe4:	3c078002 	lui	a3,0x8002
80008fe8:	24842030 	addiu	a0,a0,8240
80008fec:	240504ce 	li	a1,1230
80008ff0:	24c60e48 	addiu	a2,a2,3656
80008ff4:	0c006b13 	jal	8001ac4c <__panic>
80008ff8:	24e723b4 	addiu	a3,a3,9140

80008ffc <sfs_getdirentry>:
sfs_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1069
	}
	return -E_NOENT;
}

static int sfs_getdirentry(struct inode *node, struct iobuf *iob)
{
80008ffc:	27bdffb8 	addiu	sp,sp,-72
80009000:	afb2002c 	sw	s2,44(sp)
80009004:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1071
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
80009008:	24040104 	li	a0,260
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1069
	}
	return -E_NOENT;
}

static int sfs_getdirentry(struct inode *node, struct iobuf *iob)
{
8000900c:	afb50038 	sw	s5,56(sp)
80009010:	afb10028 	sw	s1,40(sp)
80009014:	afbf0044 	sw	ra,68(sp)
80009018:	afb70040 	sw	s7,64(sp)
8000901c:	afb6003c 	sw	s6,60(sp)
80009020:	afb40034 	sw	s4,52(sp)
80009024:	afb30030 	sw	s3,48(sp)
80009028:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1071
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
8000902c:	0c00548e 	jal	80015238 <kmalloc>
80009030:	00a0a821 	move	s5,a1
80009034:	10400085 	beqz	v0,8000924c <sfs_getdirentry+0x250>
80009038:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1075
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000903c:	8e530044 	lw	s3,68(s2)
80009040:	1260008b 	beqz	s3,80009270 <sfs_getdirentry+0x274>
80009044:	24025679 	li	v0,22137
80009048:	8e630084 	lw	v1,132(s3)
8000904c:	14620088 	bne	v1,v0,80009270 <sfs_getdirentry+0x274>
80009050:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1076
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009054:	8e430038 	lw	v1,56(s2)
80009058:	1462007e 	bne	v1,v0,80009254 <sfs_getdirentry+0x258>
8000905c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1078

	off_t offset = iob->io_offset;
80009060:	8eb40004 	lw	s4,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1079
	if (offset < 0 || offset % sfs_dentry_size != 0) {
80009064:	06800069 	bltz	s4,8000920c <sfs_getdirentry+0x210>
80009068:	00000000 	nop
8000906c:	328200ff 	andi	v0,s4,0xff
80009070:	14400066 	bnez	v0,8000920c <sfs_getdirentry+0x210>
80009074:	0014a202 	srl	s4,s4,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1085
		kfree(entry);
		return -E_INVAL;
	}

	int ret, slot = offset / sfs_dentry_size;
	if (slot >= sin->din->dirinfo.slots + 2) {
80009078:	8e420000 	lw	v0,0(s2)
8000907c:	8c420000 	lw	v0,0(v0)
80009080:	24420002 	addiu	v0,v0,2
80009084:	0282102b 	sltu	v0,s4,v0
80009088:	1040006c 	beqz	v0,8000923c <sfs_getdirentry+0x240>
8000908c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1089
		kfree(entry);
		return -E_NOENT;
	}
	switch (slot) {
80009090:	1680001b 	bnez	s4,80009100 <sfs_getdirentry+0x104>
80009094:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1091
	case 0:
		strcpy(entry->name, ".");
80009098:	26300004 	addiu	s0,s1,4
8000909c:	3c058002 	lui	a1,0x8002
800090a0:	02002021 	move	a0,s0
800090a4:	0c005b9a 	jal	80016e68 <strcpy>
800090a8:	24a53e48 	addiu	a1,a1,15944
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1106
		unlock_sin(sin);
		if (ret != 0) {
			goto out;
		}
	}
	ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);
800090ac:	02a02021 	move	a0,s5
800090b0:	02002821 	move	a1,s0
800090b4:	24060100 	li	a2,256
800090b8:	24070001 	li	a3,1
800090bc:	0c003387 	jal	8000ce1c <iobuf_move>
800090c0:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1108
out:
	kfree(entry);
800090c4:	02202021 	move	a0,s1
800090c8:	0c0054b9 	jal	800152e4 <kfree>
800090cc:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1109
	return ret;
800090d0:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1110
}
800090d4:	8fbf0044 	lw	ra,68(sp)
800090d8:	8fb70040 	lw	s7,64(sp)
800090dc:	8fb6003c 	lw	s6,60(sp)
800090e0:	8fb50038 	lw	s5,56(sp)
800090e4:	8fb40034 	lw	s4,52(sp)
800090e8:	8fb30030 	lw	s3,48(sp)
800090ec:	8fb2002c 	lw	s2,44(sp)
800090f0:	8fb10028 	lw	s1,40(sp)
800090f4:	8fb00024 	lw	s0,36(sp)
800090f8:	03e00008 	jr	ra
800090fc:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1089
	int ret, slot = offset / sfs_dentry_size;
	if (slot >= sin->din->dirinfo.slots + 2) {
		kfree(entry);
		return -E_NOENT;
	}
	switch (slot) {
80009100:	1282002c 	beq	s4,v0,800091b4 <sfs_getdirentry+0x1b8>
80009104:	26300004 	addiu	s0,s1,4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009108:	40026000 	mfc0	v0,c0_status
8000910c:	30420001 	andi	v0,v0,0x1
80009110:	1440002e 	bnez	v0,800091cc <sfs_getdirentry+0x1d0>
80009114:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009118:	8e500008 	lw	s0,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000911c:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009120:	16000044 	bnez	s0,80009234 <sfs_getdirentry+0x238>
80009124:	26570014 	addiu	s7,s2,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009128:	0c006727 	jal	80019c9c <down>
8000912c:	02e02021 	move	a0,s7
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80009130:	40026000 	mfc0	v0,c0_status
80009134:	30420001 	andi	v0,v0,0x1
80009138:	1440002b 	bnez	v0,800091e8 <sfs_getdirentry+0x1ec>
8000913c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009140:	8e500008 	lw	s0,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009144:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009148:	16000038 	bnez	s0,8000922c <sfs_getdirentry+0x230>
8000914c:	00000000 	nop
sfs_getdirentry_sub_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1053

static int
sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			   struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
80009150:	8e420000 	lw	v0,0(s2)
80009154:	8c56000c 	lw	s6,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1054
	for (i = 0; i < nslots; i++) {
80009158:	1ac0002a 	blez	s6,80009204 <sfs_getdirentry+0x208>
8000915c:	2694fffe 	addiu	s4,s4,-2
80009160:	08002461 	j	80009184 <sfs_getdirentry+0x188>
80009164:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1058
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
			return ret;
		}
		if (entry->ino != 0) {
80009168:	50400004 	beqzl	v0,8000917c <sfs_getdirentry+0x180>
8000916c:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1059
			if (slot == 0) {
80009170:	1280002a 	beqz	s4,8000921c <sfs_getdirentry+0x220>
80009174:	2694ffff 	addiu	s4,s4,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1054
static int
sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot,
			   struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
	for (i = 0; i < nslots; i++) {
80009178:	26100001 	addiu	s0,s0,1
8000917c:	12d00008 	beq	s6,s0,800091a0 <sfs_getdirentry+0x1a4>
80009180:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1055
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
80009184:	02602021 	move	a0,s3
80009188:	02402821 	move	a1,s2
8000918c:	02003021 	move	a2,s0
80009190:	0c001e4a 	jal	80007928 <sfs_dirent_read_nolock>
80009194:	02203821 	move	a3,s1
80009198:	5040fff3 	beqzl	v0,80009168 <sfs_getdirentry+0x16c>
8000919c:	8e220000 	lw	v0,0(s1)
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
800091a0:	02e02021 	move	a0,s7
800091a4:	0c006725 	jal	80019c94 <up>
800091a8:	afa20018 	sw	v0,24(sp)
800091ac:	08002431 	j	800090c4 <sfs_getdirentry+0xc8>
800091b0:	8fa20018 	lw	v0,24(sp)
sfs_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1094
	switch (slot) {
	case 0:
		strcpy(entry->name, ".");
		break;
	case 1:
		strcpy(entry->name, "..");
800091b4:	3c058002 	lui	a1,0x8002
800091b8:	02002021 	move	a0,s0
800091bc:	0c005b9a 	jal	80016e68 <strcpy>
800091c0:	24a52338 	addiu	a1,a1,9016
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1095
		break;
800091c4:	0800242c 	j	800090b0 <sfs_getdirentry+0xb4>
800091c8:	02a02021 	move	a0,s5
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800091cc:	0c006d0c 	jal	8001b430 <intr_disable>
800091d0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800091d4:	8e500008 	lw	s0,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800091d8:	0c006d08 	jal	8001b420 <intr_enable>
800091dc:	32100001 	andi	s0,s0,0x1
800091e0:	08002448 	j	80009120 <sfs_getdirentry+0x124>
800091e4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800091e8:	0c006d0c 	jal	8001b430 <intr_disable>
800091ec:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800091f0:	8e500008 	lw	s0,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800091f4:	0c006d08 	jal	8001b420 <intr_enable>
800091f8:	32100001 	andi	s0,s0,0x1
800091fc:	08002452 	j	80009148 <sfs_getdirentry+0x14c>
80009200:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1065
				return 0;
			}
			slot--;
		}
	}
	return -E_NOENT;
80009204:	08002468 	j	800091a0 <sfs_getdirentry+0x1a4>
80009208:	2402fffe 	li	v0,-2
sfs_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1080
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);

	off_t offset = iob->io_offset;
	if (offset < 0 || offset % sfs_dentry_size != 0) {
		kfree(entry);
8000920c:	0c0054b9 	jal	800152e4 <kfree>
80009210:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1081
		return -E_INVAL;
80009214:	08002435 	j	800090d4 <sfs_getdirentry+0xd8>
80009218:	2402ffea 	li	v0,-22
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000921c:	0c006725 	jal	80019c94 <up>
80009220:	02e02021 	move	a0,s7
80009224:	0800242b 	j	800090ac <sfs_getdirentry+0xb0>
80009228:	26300004 	addiu	s0,s1,4
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000922c:	0c006725 	jal	80019c94 <up>
80009230:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1065
				return 0;
			}
			slot--;
		}
	}
	return -E_NOENT;
80009234:	08002431 	j	800090c4 <sfs_getdirentry+0xc8>
80009238:	2402fffe 	li	v0,-2
sfs_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1086
		return -E_INVAL;
	}

	int ret, slot = offset / sfs_dentry_size;
	if (slot >= sin->din->dirinfo.slots + 2) {
		kfree(entry);
8000923c:	0c0054b9 	jal	800152e4 <kfree>
80009240:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1087
		return -E_NOENT;
80009244:	08002435 	j	800090d4 <sfs_getdirentry+0xd8>
80009248:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1072

static int sfs_getdirentry(struct inode *node, struct iobuf *iob)
{
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
8000924c:	08002435 	j	800090d4 <sfs_getdirentry+0xd8>
80009250:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1076
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009254:	3c068002 	lui	a2,0x8002
80009258:	3c078002 	lui	a3,0x8002
8000925c:	24842030 	addiu	a0,a0,8240
80009260:	24050434 	li	a1,1076
80009264:	24c60e48 	addiu	a2,a2,3656
80009268:	0c006b13 	jal	8001ac4c <__panic>
8000926c:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1075
	struct sfs_disk_entry *entry;
	if ((entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009270:	3c048002 	lui	a0,0x8002
80009274:	3c068002 	lui	a2,0x8002
80009278:	3c078002 	lui	a3,0x8002
8000927c:	24842030 	addiu	a0,a0,8240
80009280:	24050433 	li	a1,1075
80009284:	24c60e48 	addiu	a2,a2,3656
80009288:	0c006b13 	jal	8001ac4c <__panic>
8000928c:	24e71e8c 	addiu	a3,a3,7820

80009290 <sfs_fsync>:
sfs_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:758
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
}

static int sfs_fsync(struct inode *node)
{
80009290:	27bdffc8 	addiu	sp,sp,-56
80009294:	afb2002c 	sw	s2,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:759
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009298:	8c920044 	lw	s2,68(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:758
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
}

static int sfs_fsync(struct inode *node)
{
8000929c:	afb00024 	sw	s0,36(sp)
800092a0:	afbf0034 	sw	ra,52(sp)
800092a4:	afb30030 	sw	s3,48(sp)
800092a8:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:759
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800092ac:	1240005b 	beqz	s2,8000941c <sfs_fsync+0x18c>
800092b0:	00808021 	move	s0,a0
800092b4:	8e430084 	lw	v1,132(s2)
800092b8:	24025679 	li	v0,22137
800092bc:	14620057 	bne	v1,v0,8000941c <sfs_fsync+0x18c>
800092c0:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:760
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800092c4:	8c830038 	lw	v1,56(a0)
800092c8:	5462004d 	bnel	v1,v0,80009400 <sfs_fsync+0x170>
800092cc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:761
	if (sin->din->nlinks == 0 || !sin->dirty) {
800092d0:	8c830000 	lw	v1,0(a0)
800092d4:	9463000a 	lhu	v1,10(v1)
800092d8:	10600004 	beqz	v1,800092ec <sfs_fsync+0x5c>
800092dc:	00001021 	move	v0,zero
800092e0:	8c83000c 	lw	v1,12(a0)
800092e4:	14600008 	bnez	v1,80009308 <sfs_fsync+0x78>
800092e8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:778
			sin->dirty = 1;
		}
	}
	unlock_sin(sin);
	return ret;
}
800092ec:	8fbf0034 	lw	ra,52(sp)
800092f0:	8fb30030 	lw	s3,48(sp)
800092f4:	8fb2002c 	lw	s2,44(sp)
800092f8:	8fb10028 	lw	s1,40(sp)
800092fc:	8fb00024 	lw	s0,36(sp)
80009300:	03e00008 	jr	ra
80009304:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009308:	40026000 	mfc0	v0,c0_status
8000930c:	30420001 	andi	v0,v0,0x1
80009310:	1440001e 	bnez	v0,8000938c <sfs_fsync+0xfc>
80009314:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009318:	8c910008 	lw	s1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000931c:	32310001 	andi	s1,s1,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009320:	1620fff2 	bnez	s1,800092ec <sfs_fsync+0x5c>
80009324:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009328:	26110014 	addiu	s1,s0,20
8000932c:	0c006727 	jal	80019c9c <down>
80009330:	02202021 	move	a0,s1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80009334:	40026000 	mfc0	v0,c0_status
80009338:	30420001 	andi	v0,v0,0x1
8000933c:	1440001a 	bnez	v0,800093a8 <sfs_fsync+0x118>
80009340:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009344:	8e130008 	lw	s3,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009348:	32730001 	andi	s3,s3,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000934c:	16600028 	bnez	s3,800093f0 <sfs_fsync+0x160>
80009350:	00000000 	nop
sfs_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:768
	}
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	if (sin->dirty) {
80009354:	8e02000c 	lw	v0,12(s0)
80009358:	5440001a 	bnezl	v0,800093c4 <sfs_fsync+0x134>
8000935c:	8e050000 	lw	a1,0(s0)
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009360:	02202021 	move	a0,s1
80009364:	0c006725 	jal	80019c94 <up>
80009368:	afa20018 	sw	v0,24(sp)
sfs_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:778
			sin->dirty = 1;
		}
	}
	unlock_sin(sin);
	return ret;
}
8000936c:	8fbf0034 	lw	ra,52(sp)
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009370:	8fa20018 	lw	v0,24(sp)
sfs_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:778
			sin->dirty = 1;
		}
	}
	unlock_sin(sin);
	return ret;
}
80009374:	8fb30030 	lw	s3,48(sp)
80009378:	8fb2002c 	lw	s2,44(sp)
8000937c:	8fb10028 	lw	s1,40(sp)
80009380:	8fb00024 	lw	s0,36(sp)
80009384:	03e00008 	jr	ra
80009388:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000938c:	0c006d0c 	jal	8001b430 <intr_disable>
80009390:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009394:	8e110008 	lw	s1,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009398:	0c006d08 	jal	8001b420 <intr_enable>
8000939c:	32310001 	andi	s1,s1,0x1
800093a0:	080024c8 	j	80009320 <sfs_fsync+0x90>
800093a4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800093a8:	0c006d0c 	jal	8001b430 <intr_disable>
800093ac:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
800093b0:	8e130008 	lw	s3,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800093b4:	0c006d08 	jal	8001b420 <intr_enable>
800093b8:	32730001 	andi	s3,s3,0x1
800093bc:	080024d3 	j	8000934c <sfs_fsync+0xbc>
800093c0:	00000000 	nop
sfs_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:770
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	if (sin->dirty) {
		sin->dirty = 0;
		if ((ret =
800093c4:	8e070004 	lw	a3,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:769
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	if (sin->dirty) {
		sin->dirty = 0;
800093c8:	ae00000c 	sw	zero,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:770
		if ((ret =
800093cc:	02402021 	move	a0,s2
800093d0:	24060048 	li	a2,72
800093d4:	0c002bb6 	jal	8000aed8 <sfs_wbuf>
800093d8:	afa00010 	sw	zero,16(sp)
800093dc:	1040ffe1 	beqz	v0,80009364 <sfs_fsync+0xd4>
800093e0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:773
		     sfs_wbuf(sfs, sin->din, sizeof(struct sfs_disk_inode),
			      sin->ino, 0)) != 0) {
			sin->dirty = 1;
800093e4:	24030001 	li	v1,1
800093e8:	080024d9 	j	80009364 <sfs_fsync+0xd4>
800093ec:	ae03000c 	sw	v1,12(s0)
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
800093f0:	0c006725 	jal	80019c94 <up>
800093f4:	02202021 	move	a0,s1
800093f8:	080024bb 	j	800092ec <sfs_fsync+0x5c>
800093fc:	2402fffe 	li	v0,-2
sfs_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:760
}

static int sfs_fsync(struct inode *node)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009400:	3c068002 	lui	a2,0x8002
80009404:	3c078002 	lui	a3,0x8002
80009408:	24842030 	addiu	a0,a0,8240
8000940c:	240502f8 	li	a1,760
80009410:	24c60e48 	addiu	a2,a2,3656
80009414:	0c006b13 	jal	8001ac4c <__panic>
80009418:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:759
	sin->din->dirinfo.parent = parent->ino;
}

static int sfs_fsync(struct inode *node)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000941c:	3c048002 	lui	a0,0x8002
80009420:	3c068002 	lui	a2,0x8002
80009424:	3c078002 	lui	a3,0x8002
80009428:	24842030 	addiu	a0,a0,8240
8000942c:	240502f7 	li	a1,759
80009430:	24c60e48 	addiu	a2,a2,3656
80009434:	0c006b13 	jal	8001ac4c <__panic>
80009438:	24e71e8c 	addiu	a3,a3,7820

8000943c <sfs_load_inode>:
sfs_load_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:127
	}
	return NULL;
}

int sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino)
{
8000943c:	27bdffc0 	addiu	sp,sp,-64
80009440:	afb1002c 	sw	s1,44(sp)
80009444:	afb00028 	sw	s0,40(sp)
80009448:	00808821 	move	s1,a0
8000944c:	00c08021 	move	s0,a2
80009450:	afbf003c 	sw	ra,60(sp)
80009454:	afb40038 	sw	s4,56(sp)
80009458:	afb30034 	sw	s3,52(sp)
8000945c:	afb20030 	sw	s2,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:128
	lock_sfs_fs(sfs);
80009460:	0c002c4a 	jal	8000b128 <lock_sfs_fs>
80009464:	00a09021 	move	s2,a1
sfs_hash_list():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:49
	panic("invalid file type %d.\n", type);
}

static list_entry_t *sfs_hash_list(struct sfs_fs *sfs, uint32_t ino)
{
	return sfs->hash_list + sin_hashfn(ino);
80009468:	8e330080 	lw	s3,128(s1)
8000946c:	02002021 	move	a0,s0
80009470:	0c00595b 	jal	8001656c <hash32>
80009474:	2405000a 	li	a1,10
80009478:	000210c0 	sll	v0,v0,0x3
8000947c:	02629821 	addu	s3,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:112
}

static struct inode *lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino)
{
	struct inode *node;
	list_entry_t *list = sfs_hash_list(sfs, ino), *le = list;
80009480:	0260a021 	move	s4,s3
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80009484:	8e940004 	lw	s4,4(s4)
lookup_sfs_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:113
	while ((le = list_next(le)) != list) {
80009488:	52740019 	beql	s3,s4,800094f0 <sfs_load_inode+0xb4>
8000948c:	afa00018 	sw	zero,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:115
		struct sfs_inode *sin = le2sin(le, hash_link);
		if (sin->ino == ino) {
80009490:	8e83ffd4 	lw	v1,-44(s4)
80009494:	5603fffc 	bnel	s0,v1,80009488 <sfs_load_inode+0x4c>
80009498:	8e940004 	lw	s4,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:114
static struct inode *lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino)
{
	struct inode *node;
	list_entry_t *list = sfs_hash_list(sfs, ino), *le = list;
	while ((le = list_next(le)) != list) {
		struct sfs_inode *sin = le2sin(le, hash_link);
8000949c:	2693ffd0 	addiu	s3,s4,-48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:117
		if (sin->ino == ino) {
			node = info2node(sin, sfs_inode);
			if (vop_ref_inc(node) == 1) {
800094a0:	0c0010b5 	jal	800042d4 <inode_ref_inc>
800094a4:	02602021 	move	a0,s3
800094a8:	24030001 	li	v1,1
800094ac:	50430033 	beql	v0,v1,8000957c <sfs_load_inode+0x140>
800094b0:	8e82ffe0 	lw	v0,-32(s4)
sfs_load_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:130

int sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino)
{
	lock_sfs_fs(sfs);
	struct inode *node;
	if ((node = lookup_sfs_nolock(sfs, ino)) != NULL) {
800094b4:	1260000e 	beqz	s3,800094f0 <sfs_load_inode+0xb4>
800094b8:	afb30018 	sw	s3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:153
		goto failed_cleanup_din;
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));

out_unlock:
	unlock_sfs_fs(sfs);
800094bc:	0c002c50 	jal	8000b140 <unlock_sfs_fs>
800094c0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:154
	*node_store = node;
800094c4:	8fa30018 	lw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:162
failed_cleanup_din:
	kfree(din);
failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
800094c8:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:155
	sfs_set_links(sfs, vop_info(node, sfs_inode));

out_unlock:
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;
800094cc:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:154
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));

out_unlock:
	unlock_sfs_fs(sfs);
	*node_store = node;
800094d0:	ae430000 	sw	v1,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:162
failed_cleanup_din:
	kfree(din);
failed_unlock:
	unlock_sfs_fs(sfs);
	return ret;
}
800094d4:	8fb40038 	lw	s4,56(sp)
800094d8:	8fb30034 	lw	s3,52(sp)
800094dc:	8fb20030 	lw	s2,48(sp)
800094e0:	8fb1002c 	lw	s1,44(sp)
800094e4:	8fb00028 	lw	s0,40(sp)
800094e8:	03e00008 	jr	ra
800094ec:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:136
		goto out_unlock;
	}

	int ret = -E_NO_MEM;
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
800094f0:	0c00548e 	jal	80015238 <kmalloc>
800094f4:	24040048 	li	a0,72
800094f8:	10400032 	beqz	v0,800095c4 <sfs_load_inode+0x188>
800094fc:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:140
		goto failed_unlock;
	}

	assert(sfs_block_inuse(sfs, ino));
80009500:	02202021 	move	a0,s1
80009504:	0c001ba8 	jal	80006ea0 <sfs_block_inuse>
80009508:	02002821 	move	a1,s0
8000950c:	1040003f 	beqz	v0,8000960c <sfs_load_inode+0x1d0>
80009510:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:141
	if ((ret =
80009514:	02602821 	move	a1,s3
80009518:	24060048 	li	a2,72
8000951c:	02003821 	move	a3,s0
80009520:	0c002b81 	jal	8000ae04 <sfs_rbuf>
80009524:	afa00010 	sw	zero,16(sp)
80009528:	14400017 	bnez	v0,80009588 <sfs_load_inode+0x14c>
8000952c:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:146
	     sfs_rbuf(sfs, din, sizeof(struct sfs_disk_inode), ino, 0)) != 0) {
		goto failed_cleanup_din;
	}

	assert(din->nlinks != 0);
80009530:	9662000a 	lhu	v0,10(s3)
80009534:	1040002d 	beqz	v0,800095ec <sfs_load_inode+0x1b0>
80009538:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:147
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
8000953c:	02602821 	move	a1,s3
80009540:	02003021 	move	a2,s0
80009544:	0c001bbd 	jal	80006ef4 <sfs_create_inode>
80009548:	27a70018 	addiu	a3,sp,24
8000954c:	1440000e 	bnez	v0,80009588 <sfs_load_inode+0x14c>
80009550:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:150
		goto failed_cleanup_din;
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));
80009554:	8fa50018 	lw	a1,24(sp)
80009558:	10a0001c 	beqz	a1,800095cc <sfs_load_inode+0x190>
8000955c:	24021237 	li	v0,4663
80009560:	8ca30038 	lw	v1,56(a1)
80009564:	1462001a 	bne	v1,v0,800095d0 <sfs_load_inode+0x194>
80009568:	3c048002 	lui	a0,0x8002
8000956c:	0c001b4a 	jal	80006d28 <sfs_set_links>
80009570:	02202021 	move	a0,s1
80009574:	0800252f 	j	800094bc <sfs_load_inode+0x80>
80009578:	00000000 	nop
lookup_sfs_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:118
	while ((le = list_next(le)) != list) {
		struct sfs_inode *sin = le2sin(le, hash_link);
		if (sin->ino == ino) {
			node = info2node(sin, sfs_inode);
			if (vop_ref_inc(node) == 1) {
				sin->reclaim_count++;
8000957c:	24420001 	addiu	v0,v0,1
80009580:	0800252d 	j	800094b4 <sfs_load_inode+0x78>
80009584:	ae82ffe0 	sw	v0,-32(s4)
sfs_load_inode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:158
	unlock_sfs_fs(sfs);
	*node_store = node;
	return 0;

failed_cleanup_din:
	kfree(din);
80009588:	0c0054b9 	jal	800152e4 <kfree>
8000958c:	afa20020 	sw	v0,32(sp)
80009590:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:160
failed_unlock:
	unlock_sfs_fs(sfs);
80009594:	02202021 	move	a0,s1
80009598:	0c002c50 	jal	8000b140 <unlock_sfs_fs>
8000959c:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:162
	return ret;
}
800095a0:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:160
	return 0;

failed_cleanup_din:
	kfree(din);
failed_unlock:
	unlock_sfs_fs(sfs);
800095a4:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:162
	return ret;
}
800095a8:	8fb40038 	lw	s4,56(sp)
800095ac:	8fb30034 	lw	s3,52(sp)
800095b0:	8fb20030 	lw	s2,48(sp)
800095b4:	8fb1002c 	lw	s1,44(sp)
800095b8:	8fb00028 	lw	s0,40(sp)
800095bc:	03e00008 	jr	ra
800095c0:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:134
	struct inode *node;
	if ((node = lookup_sfs_nolock(sfs, ino)) != NULL) {
		goto out_unlock;
	}

	int ret = -E_NO_MEM;
800095c4:	08002565 	j	80009594 <sfs_load_inode+0x158>
800095c8:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:150

	assert(din->nlinks != 0);
	if ((ret = sfs_create_inode(sfs, din, ino, &node)) != 0) {
		goto failed_cleanup_din;
	}
	sfs_set_links(sfs, vop_info(node, sfs_inode));
800095cc:	3c048002 	lui	a0,0x8002
800095d0:	3c068002 	lui	a2,0x8002
800095d4:	3c078002 	lui	a3,0x8002
800095d8:	24842030 	addiu	a0,a0,8240
800095dc:	24050096 	li	a1,150
800095e0:	24c60e48 	addiu	a2,a2,3656
800095e4:	0c006b13 	jal	8001ac4c <__panic>
800095e8:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:146
	if ((ret =
	     sfs_rbuf(sfs, din, sizeof(struct sfs_disk_inode), ino, 0)) != 0) {
		goto failed_cleanup_din;
	}

	assert(din->nlinks != 0);
800095ec:	3c048002 	lui	a0,0x8002
800095f0:	3c068002 	lui	a2,0x8002
800095f4:	3c078002 	lui	a3,0x8002
800095f8:	24842030 	addiu	a0,a0,8240
800095fc:	24050092 	li	a1,146
80009600:	24c60e48 	addiu	a2,a2,3656
80009604:	0c006b13 	jal	8001ac4c <__panic>
80009608:	24e72324 	addiu	a3,a3,8996
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:140
	struct sfs_disk_inode *din;
	if ((din = kmalloc(sizeof(struct sfs_disk_inode))) == NULL) {
		goto failed_unlock;
	}

	assert(sfs_block_inuse(sfs, ino));
8000960c:	3c048002 	lui	a0,0x8002
80009610:	3c068002 	lui	a2,0x8002
80009614:	3c078002 	lui	a3,0x8002
80009618:	24842030 	addiu	a0,a0,8240
8000961c:	2405008c 	li	a1,140
80009620:	24c60e48 	addiu	a2,a2,3656
80009624:	0c006b13 	jal	8001ac4c <__panic>
80009628:	24e7216c 	addiu	a3,a3,8556

8000962c <sfs_namefile>:
sfs_namefile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:992
}

static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
8000962c:	8ca2000c 	lw	v0,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:990
	unlock_sfs_mutex(sfs);
	return ret;
}

static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
80009630:	27bdffb8 	addiu	sp,sp,-72
80009634:	afb10024 	sw	s1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:992
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
80009638:	2c420003 	sltiu	v0,v0,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:990
	unlock_sfs_mutex(sfs);
	return ret;
}

static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
8000963c:	afbf0044 	sw	ra,68(sp)
80009640:	afbe0040 	sw	s8,64(sp)
80009644:	afb7003c 	sw	s7,60(sp)
80009648:	afb60038 	sw	s6,56(sp)
8000964c:	afb50034 	sw	s5,52(sp)
80009650:	afb40030 	sw	s4,48(sp)
80009654:	afb3002c 	sw	s3,44(sp)
80009658:	afb20028 	sw	s2,40(sp)
8000965c:	afb00020 	sw	s0,32(sp)
80009660:	afa5004c 	sw	a1,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:992
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
80009664:	144000b8 	bnez	v0,80009948 <sfs_namefile+0x31c>
80009668:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:993
	    || (entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
8000966c:	0c00548e 	jal	80015238 <kmalloc>
80009670:	24040104 	li	a0,260
80009674:	104000b4 	beqz	v0,80009948 <sfs_namefile+0x31c>
80009678:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:997
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000967c:	8e340044 	lw	s4,68(s1)
80009680:	128000d1 	beqz	s4,800099c8 <sfs_namefile+0x39c>
80009684:	24025679 	li	v0,22137
80009688:	8e830084 	lw	v1,132(s4)
8000968c:	146200ce 	bne	v1,v0,800099c8 <sfs_namefile+0x39c>
80009690:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:998
	struct sfs_inode *sin = vop_info(node, sfs_inode);
80009694:	8e230038 	lw	v1,56(s1)
80009698:	146200d3 	bne	v1,v0,800099e8 <sfs_namefile+0x3bc>
8000969c:	8fa3004c 	lw	v1,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1005
	int ret;
	uint32_t ino;
	char *ptr = iob->io_base + iob->io_resid;
	size_t alen, resid = iob->io_resid - 2;

	vop_ref_inc(node);
800096a0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1002
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);

	int ret;
	uint32_t ino;
	char *ptr = iob->io_base + iob->io_resid;
800096a4:	8c62000c 	lw	v0,12(v1)
800096a8:	8c760000 	lw	s6,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1003
	size_t alen, resid = iob->io_resid - 2;
800096ac:	245efffe 	addiu	s8,v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1005

	vop_ref_inc(node);
800096b0:	0c0010b5 	jal	800042d4 <inode_ref_inc>
800096b4:	02c2b021 	addu	s6,s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1006
	while ((ino = sin->ino) != SFS_BLKN_ROOT) {
800096b8:	8e330004 	lw	s3,4(s1)
800096bc:	24020001 	li	v0,1
800096c0:	1262007f 	beq	s3,v0,800098c0 <sfs_namefile+0x294>
800096c4:	26430004 	addiu	v1,s2,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1026

		if (ret != 0) {
			goto failed;
		}

		if ((alen = strlen(entry->name) + 1) > resid) {
800096c8:	afa30018 	sw	v1,24(sp)
sfs_load_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:559

static int
sfs_load_parent(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct inode **parent_store)
{
	return sfs_load_inode(sfs, parent_store, sin->din->dirinfo.parent);
800096cc:	8e220000 	lw	v0,0(s1)
800096d0:	02802021 	move	a0,s4
800096d4:	27a50010 	addiu	a1,sp,16
800096d8:	0c00250f 	jal	8000943c <sfs_load_inode>
800096dc:	8c460004 	lw	a2,4(v0)
sfs_namefile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1008
	size_t alen, resid = iob->io_resid - 2;

	vop_ref_inc(node);
	while ((ino = sin->ino) != SFS_BLKN_ROOT) {
		struct inode *parent;
		if ((ret = sfs_load_parent(sfs, sin, &parent)) != 0) {
800096e0:	14400039 	bnez	v0,800097c8 <sfs_namefile+0x19c>
800096e4:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1011
			goto failed;
		}
		vop_ref_dec(node);
800096e8:	0c001171 	jal	800045c4 <inode_ref_dec>
800096ec:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1013

		node = parent, sin = vop_info(node, sfs_inode);
800096f0:	8fb10010 	lw	s1,16(sp)
800096f4:	122000ac 	beqz	s1,800099a8 <sfs_namefile+0x37c>
800096f8:	24031237 	li	v1,4663
800096fc:	8e220038 	lw	v0,56(s1)
80009700:	544300aa 	bnel	v0,v1,800099ac <sfs_namefile+0x380>
80009704:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1014
		assert(ino != sin->ino && sin->din->type == SFS_TYPE_DIR);
80009708:	8e220004 	lw	v0,4(s1)
8000970c:	1053009e 	beq	v0,s3,80009988 <sfs_namefile+0x35c>
80009710:	24030002 	li	v1,2
80009714:	8e220000 	lw	v0,0(s1)
80009718:	94420008 	lhu	v0,8(v0)
8000971c:	5443009b 	bnel	v0,v1,8000998c <sfs_namefile+0x360>
80009720:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009724:	40026000 	mfc0	v0,c0_status
80009728:	30420001 	andi	v0,v0,0x1
8000972c:	14400039 	bnez	v0,80009814 <sfs_namefile+0x1e8>
80009730:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009734:	8e300008 	lw	s0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009738:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000973c:	16000022 	bnez	s0,800097c8 <sfs_namefile+0x19c>
80009740:	2403fffe 	li	v1,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009744:	26370014 	addiu	s7,s1,20
80009748:	0c006727 	jal	80019c9c <down>
8000974c:	02e02021 	move	a0,s7
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80009750:	40026000 	mfc0	v0,c0_status
80009754:	30420001 	andi	v0,v0,0x1
80009758:	14400037 	bnez	v0,80009838 <sfs_namefile+0x20c>
8000975c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009760:	8e300008 	lw	s0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009764:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009768:	1600003a 	bnez	s0,80009854 <sfs_namefile+0x228>
8000976c:	00000000 	nop
sfs_dirent_findino_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:508

static int
sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			  uint32_t ino, struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
80009770:	8e220000 	lw	v0,0(s1)
80009774:	8c55000c 	lw	s5,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:509
	for (i = 0; i < nslots; i++) {
80009778:	1aa0003a 	blez	s5,80009864 <sfs_namefile+0x238>
8000977c:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:510
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
80009780:	080025e8 	j	800097a0 <sfs_namefile+0x174>
80009784:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:513
			return ret;
		}
		if (entry->ino == ino) {
80009788:	8e420000 	lw	v0,0(s2)
8000978c:	12620037 	beq	s3,v0,8000986c <sfs_namefile+0x240>
80009790:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:509
static int
sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin,
			  uint32_t ino, struct sfs_disk_entry *entry)
{
	int ret, i, nslots = sin->din->blocks;
	for (i = 0; i < nslots; i++) {
80009794:	12b00008 	beq	s5,s0,800097b8 <sfs_namefile+0x18c>
80009798:	2403fffe 	li	v1,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:510
		if ((ret = sfs_dirent_read_nolock(sfs, sin, i, entry)) != 0) {
8000979c:	02802021 	move	a0,s4
800097a0:	02202821 	move	a1,s1
800097a4:	02003021 	move	a2,s0
800097a8:	0c001e4a 	jal	80007928 <sfs_dirent_read_nolock>
800097ac:	02403821 	move	a3,s2
800097b0:	1040fff5 	beqz	v0,80009788 <sfs_namefile+0x15c>
800097b4:	00401821 	move	v1,v0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
800097b8:	02e02021 	move	a0,s7
800097bc:	0c006725 	jal	80019c94 <up>
800097c0:	afa3001c 	sw	v1,28(sp)
800097c4:	8fa3001c 	lw	v1,28(sp)
sfs_namefile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1044
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
800097c8:	02202021 	move	a0,s1
800097cc:	0c001171 	jal	800045c4 <inode_ref_dec>
800097d0:	afa3001c 	sw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1045
	kfree(entry);
800097d4:	0c0054b9 	jal	800152e4 <kfree>
800097d8:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1046
	return ret;
800097dc:	8fa3001c 	lw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1047
}
800097e0:	8fbf0044 	lw	ra,68(sp)
800097e4:	8fbe0040 	lw	s8,64(sp)
800097e8:	00601021 	move	v0,v1
800097ec:	8fb7003c 	lw	s7,60(sp)
800097f0:	8fb60038 	lw	s6,56(sp)
800097f4:	8fb50034 	lw	s5,52(sp)
800097f8:	8fb40030 	lw	s4,48(sp)
800097fc:	8fb3002c 	lw	s3,44(sp)
80009800:	8fb20028 	lw	s2,40(sp)
80009804:	8fb10024 	lw	s1,36(sp)
80009808:	8fb00020 	lw	s0,32(sp)
8000980c:	03e00008 	jr	ra
80009810:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009814:	0c006d0c 	jal	8001b430 <intr_disable>
80009818:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000981c:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009820:	0c006d08 	jal	8001b420 <intr_enable>
80009824:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009828:	1200ffc7 	beqz	s0,80009748 <sfs_namefile+0x11c>
8000982c:	26370014 	addiu	s7,s1,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:517
		}
		if (entry->ino == ino) {
			return 0;
		}
	}
	return -E_NOENT;
80009830:	080025f2 	j	800097c8 <sfs_namefile+0x19c>
80009834:	2403fffe 	li	v1,-2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009838:	0c006d0c 	jal	8001b430 <intr_disable>
8000983c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009840:	8e300008 	lw	s0,8(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009844:	0c006d08 	jal	8001b420 <intr_enable>
80009848:	32100001 	andi	s0,s0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
8000984c:	5200ffc9 	beqzl	s0,80009774 <sfs_namefile+0x148>
80009850:	8e220000 	lw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
			return 0;
		}
		up(&(sin->sem));
80009854:	0c006725 	jal	80019c94 <up>
80009858:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:517
		}
		if (entry->ino == ino) {
			return 0;
		}
	}
	return -E_NOENT;
8000985c:	080025f2 	j	800097c8 <sfs_namefile+0x19c>
80009860:	2403fffe 	li	v1,-2
80009864:	080025ee 	j	800097b8 <sfs_namefile+0x18c>
80009868:	2403fffe 	li	v1,-2
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000986c:	0c006725 	jal	80019c94 <up>
80009870:	02e02021 	move	a0,s7
sfs_namefile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1026

		if (ret != 0) {
			goto failed;
		}

		if ((alen = strlen(entry->name) + 1) > resid) {
80009874:	0c005b81 	jal	80016e04 <strlen>
80009878:	8fa40018 	lw	a0,24(sp)
8000987c:	00408021 	move	s0,v0
80009880:	24420001 	addiu	v0,v0,1
80009884:	03c2182b 	sltu	v1,s8,v0
80009888:	1460003d 	bnez	v1,80009980 <sfs_namefile+0x354>
8000988c:	8fa50018 	lw	a1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1029
			goto failed_nomem;
		}
		resid -= alen, ptr -= alen;
80009890:	02c2b023 	subu	s6,s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1030
		memcpy(ptr, entry->name, alen - 1);
80009894:	02003021 	move	a2,s0
80009898:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1029
		}

		if ((alen = strlen(entry->name) + 1) > resid) {
			goto failed_nomem;
		}
		resid -= alen, ptr -= alen;
8000989c:	03c2f023 	subu	s8,s8,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1030
		memcpy(ptr, entry->name, alen - 1);
800098a0:	0c005c84 	jal	80017210 <memcpy>
800098a4:	02d08021 	addu	s0,s6,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1031
		ptr[alen - 1] = '/';
800098a8:	2402002f 	li	v0,47
800098ac:	a2020000 	sb	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1006
	uint32_t ino;
	char *ptr = iob->io_base + iob->io_resid;
	size_t alen, resid = iob->io_resid - 2;

	vop_ref_inc(node);
	while ((ino = sin->ino) != SFS_BLKN_ROOT) {
800098b0:	8e330004 	lw	s3,4(s1)
800098b4:	24030001 	li	v1,1
800098b8:	5663ff85 	bnel	s3,v1,800096d0 <sfs_namefile+0xa4>
800098bc:	8e220000 	lw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1033
		}
		resid -= alen, ptr -= alen;
		memcpy(ptr, entry->name, alen - 1);
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
800098c0:	0c001171 	jal	800045c4 <inode_ref_dec>
800098c4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1034
	alen = iob->io_resid - resid - 2;
800098c8:	8fa3004c 	lw	v1,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1035
	ptr = memmove(iob->io_base + 1, ptr, alen);
800098cc:	02c02821 	move	a1,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1034
		resid -= alen, ptr -= alen;
		memcpy(ptr, entry->name, alen - 1);
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
	alen = iob->io_resid - resid - 2;
800098d0:	8c62000c 	lw	v0,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1035
	ptr = memmove(iob->io_base + 1, ptr, alen);
800098d4:	8c640000 	lw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1034
		resid -= alen, ptr -= alen;
		memcpy(ptr, entry->name, alen - 1);
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
	alen = iob->io_resid - resid - 2;
800098d8:	2442fffe 	addiu	v0,v0,-2
800098dc:	005ef023 	subu	s8,v0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1035
	ptr = memmove(iob->io_base + 1, ptr, alen);
800098e0:	03c03021 	move	a2,s8
800098e4:	0c005c64 	jal	80017190 <memmove>
800098e8:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1036
	ptr[-1] = '/', ptr[alen] = '\0';
800098ec:	2404002f 	li	a0,47
800098f0:	a044ffff 	sb	a0,-1(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1037
	iobuf_skip(iob, alen);
800098f4:	8fa4004c 	lw	a0,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1036
		ptr[alen - 1] = '/';
	}
	vop_ref_dec(node);
	alen = iob->io_resid - resid - 2;
	ptr = memmove(iob->io_base + 1, ptr, alen);
	ptr[-1] = '/', ptr[alen] = '\0';
800098f8:	005e1821 	addu	v1,v0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1037
	iobuf_skip(iob, alen);
800098fc:	03c02821 	move	a1,s8
80009900:	0c00334d 	jal	8000cd34 <iobuf_skip>
80009904:	a0600000 	sb	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1038
	kfree(entry);
80009908:	0c0054b9 	jal	800152e4 <kfree>
8000990c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1047
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
	kfree(entry);
	return ret;
}
80009910:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1039
	alen = iob->io_resid - resid - 2;
	ptr = memmove(iob->io_base + 1, ptr, alen);
	ptr[-1] = '/', ptr[alen] = '\0';
	iobuf_skip(iob, alen);
	kfree(entry);
	return 0;
80009914:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1047
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
	kfree(entry);
	return ret;
}
80009918:	00601021 	move	v0,v1
8000991c:	8fbe0040 	lw	s8,64(sp)
80009920:	8fb7003c 	lw	s7,60(sp)
80009924:	8fb60038 	lw	s6,56(sp)
80009928:	8fb50034 	lw	s5,52(sp)
8000992c:	8fb40030 	lw	s4,48(sp)
80009930:	8fb3002c 	lw	s3,44(sp)
80009934:	8fb20028 	lw	s2,40(sp)
80009938:	8fb10024 	lw	s1,36(sp)
8000993c:	8fb00020 	lw	s0,32(sp)
80009940:	03e00008 	jr	ra
80009944:	27bd0048 	addiu	sp,sp,72
80009948:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:994
static int sfs_namefile(struct inode *node, struct iobuf *iob)
{
	struct sfs_disk_entry *entry;
	if (iob->io_resid <= 2
	    || (entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
8000994c:	2403fff4 	li	v1,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1047
	ret = -E_NO_MEM;
failed:
	vop_ref_dec(node);
	kfree(entry);
	return ret;
}
80009950:	00601021 	move	v0,v1
80009954:	8fbe0040 	lw	s8,64(sp)
80009958:	8fb7003c 	lw	s7,60(sp)
8000995c:	8fb60038 	lw	s6,56(sp)
80009960:	8fb50034 	lw	s5,52(sp)
80009964:	8fb40030 	lw	s4,48(sp)
80009968:	8fb3002c 	lw	s3,44(sp)
8000996c:	8fb20028 	lw	s2,40(sp)
80009970:	8fb10024 	lw	s1,36(sp)
80009974:	8fb00020 	lw	s0,32(sp)
80009978:	03e00008 	jr	ra
8000997c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1042
	iobuf_skip(iob, alen);
	kfree(entry);
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
80009980:	080025f2 	j	800097c8 <sfs_namefile+0x19c>
80009984:	2403fff4 	li	v1,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1014
			goto failed;
		}
		vop_ref_dec(node);

		node = parent, sin = vop_info(node, sfs_inode);
		assert(ino != sin->ino && sin->din->type == SFS_TYPE_DIR);
80009988:	3c048002 	lui	a0,0x8002
8000998c:	3c068002 	lui	a2,0x8002
80009990:	3c078002 	lui	a3,0x8002
80009994:	24842030 	addiu	a0,a0,8240
80009998:	240503f6 	li	a1,1014
8000999c:	24c60e48 	addiu	a2,a2,3656
800099a0:	0c006b13 	jal	8001ac4c <__panic>
800099a4:	24e723cc 	addiu	a3,a3,9164
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1013
		if ((ret = sfs_load_parent(sfs, sin, &parent)) != 0) {
			goto failed;
		}
		vop_ref_dec(node);

		node = parent, sin = vop_info(node, sfs_inode);
800099a8:	3c048002 	lui	a0,0x8002
800099ac:	24842030 	addiu	a0,a0,8240
800099b0:	240503f5 	li	a1,1013
800099b4:	3c068002 	lui	a2,0x8002
800099b8:	3c078002 	lui	a3,0x8002
800099bc:	24c60e48 	addiu	a2,a2,3656
800099c0:	0c006b13 	jal	8001ac4c <__panic>
800099c4:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:997
	if (iob->io_resid <= 2
	    || (entry = kmalloc(sizeof(struct sfs_disk_entry))) == NULL) {
		return -E_NO_MEM;
	}

	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
800099c8:	3c048002 	lui	a0,0x8002
800099cc:	3c068002 	lui	a2,0x8002
800099d0:	3c078002 	lui	a3,0x8002
800099d4:	24842030 	addiu	a0,a0,8240
800099d8:	240503e5 	li	a1,997
800099dc:	24c60e48 	addiu	a2,a2,3656
800099e0:	0c006b13 	jal	8001ac4c <__panic>
800099e4:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:998
	struct sfs_inode *sin = vop_info(node, sfs_inode);
800099e8:	3c048002 	lui	a0,0x8002
800099ec:	24842030 	addiu	a0,a0,8240
800099f0:	0800266d 	j	800099b4 <sfs_namefile+0x388>
800099f4:	240503e6 	li	a1,998

800099f8 <sfs_lookup_parent>:
sfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1426
}

static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
800099f8:	27bdffb0 	addiu	sp,sp,-80
800099fc:	afb40038 	sw	s4,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1427
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009a00:	8c940044 	lw	s4,68(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1426
}

static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
80009a04:	afbe0048 	sw	s8,72(sp)
80009a08:	afb70044 	sw	s7,68(sp)
80009a0c:	afb20030 	sw	s2,48(sp)
80009a10:	afb00028 	sw	s0,40(sp)
80009a14:	afbf004c 	sw	ra,76(sp)
80009a18:	afb60040 	sw	s6,64(sp)
80009a1c:	afb5003c 	sw	s5,60(sp)
80009a20:	afb30034 	sw	s3,52(sp)
80009a24:	afb1002c 	sw	s1,44(sp)
80009a28:	00809021 	move	s2,a0
80009a2c:	00a08021 	move	s0,a1
80009a30:	00c0f021 	move	s8,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1427
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009a34:	128000b7 	beqz	s4,80009d14 <sfs_lookup_parent+0x31c>
80009a38:	00e0b821 	move	s7,a3
80009a3c:	8e830084 	lw	v1,132(s4)
80009a40:	24025679 	li	v0,22137
80009a44:	546200b4 	bnel	v1,v0,80009d18 <sfs_lookup_parent+0x320>
80009a48:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1428
	assert(*path != '\0' && *path != '/');
80009a4c:	90a20000 	lbu	v0,0(a1)
80009a50:	104000a8 	beqz	v0,80009cf4 <sfs_lookup_parent+0x2fc>
80009a54:	2403002f 	li	v1,47
80009a58:	504300a7 	beql	v0,v1,80009cf8 <sfs_lookup_parent+0x300>
80009a5c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1429
	vop_ref_inc(node);
80009a60:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80009a64:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1431
	while (1) {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009a68:	8e430038 	lw	v1,56(s2)
80009a6c:	24021237 	li	v0,4663
80009a70:	14620099 	bne	v1,v0,80009cd8 <sfs_lookup_parent+0x2e0>
80009a74:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1432
		if (sin->din->type != SFS_TYPE_DIR) {
80009a78:	8e420000 	lw	v0,0(s2)
80009a7c:	94430008 	lhu	v1,8(v0)
80009a80:	24020002 	li	v0,2
80009a84:	1462003a 	bne	v1,v0,80009b70 <sfs_lookup_parent+0x178>
80009a88:	3c138002 	lui	s3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1439
			return -E_NOTDIR;
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
80009a8c:	02002021 	move	a0,s0
80009a90:	0c001b68 	jal	80006da0 <sfs_lookup_subpath>
80009a94:	3c158002 	lui	s5,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1443
			*node_store = node, *endp = path;
			return 0;
		}
		if (strcmp(path, ".") == 0) {
80009a98:	26733e48 	addiu	s3,s3,15944
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1450
			goto next;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009a9c:	26b52338 	addiu	s5,s5,9016
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1439
			return -E_NOTDIR;
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
80009aa0:	1040000b 	beqz	v0,80009ad0 <sfs_lookup_parent+0xd8>
80009aa4:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1443
			*node_store = node, *endp = path;
			return 0;
		}
		if (strcmp(path, ".") == 0) {
80009aa8:	02002021 	move	a0,s0
80009aac:	0c005bc0 	jal	80016f00 <strcmp>
80009ab0:	02602821 	move	a1,s3
80009ab4:	14400016 	bnez	v0,80009b10 <sfs_lookup_parent+0x118>
80009ab8:	02002021 	move	a0,s0
80009abc:	02208021 	move	s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1439
			return -E_NOTDIR;
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
80009ac0:	0c001b68 	jal	80006da0 <sfs_lookup_subpath>
80009ac4:	02002021 	move	a0,s0
80009ac8:	1440fff7 	bnez	v0,80009aa8 <sfs_lookup_parent+0xb0>
80009acc:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009ad0:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1441

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
			*node_store = node, *endp = path;
			return 0;
80009ad4:	afa00020 	sw	zero,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1440
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
			*node_store = node, *endp = path;
80009ad8:	afd20000 	sw	s2,0(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009adc:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1440
		}

		char *subpath;
next:
		if ((subpath = sfs_lookup_subpath(path)) == NULL) {
			*node_store = node, *endp = path;
80009ae0:	aef00000 	sw	s0,0(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009ae4:	8fbe0048 	lw	s8,72(sp)
80009ae8:	8fb70044 	lw	s7,68(sp)
80009aec:	8fb60040 	lw	s6,64(sp)
80009af0:	8fb5003c 	lw	s5,60(sp)
80009af4:	8fb40038 	lw	s4,56(sp)
80009af8:	8fb30034 	lw	s3,52(sp)
80009afc:	8fb20030 	lw	s2,48(sp)
80009b00:	8fb1002c 	lw	s1,44(sp)
80009b04:	8fb00028 	lw	s0,40(sp)
80009b08:	03e00008 	jr	ra
80009b0c:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1450
			goto next;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009b10:	0c005bc0 	jal	80016f00 <strcmp>
80009b14:	02a02821 	move	a1,s5
80009b18:	1440001a 	bnez	v0,80009b84 <sfs_lookup_parent+0x18c>
80009b1c:	02802021 	move	a0,s4
sfs_load_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:559

static int
sfs_load_parent(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct inode **parent_store)
{
	return sfs_load_inode(sfs, parent_store, sin->din->dirinfo.parent);
80009b20:	8e420000 	lw	v0,0(s2)
80009b24:	27a5001c 	addiu	a1,sp,28
80009b28:	0c00250f 	jal	8000943c <sfs_load_inode>
80009b2c:	8c460004 	lw	a2,4(v0)
80009b30:	afa20020 	sw	v0,32(sp)
sfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1460
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009b34:	0c001171 	jal	800045c4 <inode_ref_dec>
80009b38:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1461
		if (ret != 0) {
80009b3c:	8fa20020 	lw	v0,32(sp)
80009b40:	14400036 	bnez	v0,80009c1c <sfs_lookup_parent+0x224>
80009b44:	8fb2001c 	lw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1431
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	while (1) {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009b48:	12400062 	beqz	s2,80009cd4 <sfs_lookup_parent+0x2dc>
80009b4c:	24021237 	li	v0,4663
80009b50:	8e430038 	lw	v1,56(s2)
80009b54:	14620060 	bne	v1,v0,80009cd8 <sfs_lookup_parent+0x2e0>
80009b58:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1432
		if (sin->din->type != SFS_TYPE_DIR) {
80009b5c:	8e420000 	lw	v0,0(s2)
80009b60:	94430008 	lhu	v1,8(v0)
80009b64:	24020002 	li	v0,2
80009b68:	1062ffd5 	beq	v1,v0,80009ac0 <sfs_lookup_parent+0xc8>
80009b6c:	02208021 	move	s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1433
			vop_ref_dec(node);
80009b70:	0c001171 	jal	800045c4 <inode_ref_dec>
80009b74:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1434
			return -E_NOTDIR;
80009b78:	2402ffec 	li	v0,-20
80009b7c:	08002707 	j	80009c1c <sfs_lookup_parent+0x224>
80009b80:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1453
		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
80009b84:	0c005b81 	jal	80016e04 <strlen>
80009b88:	02002021 	move	a0,s0
80009b8c:	2c420100 	sltiu	v0,v0,256
80009b90:	10400046 	beqz	v0,80009cac <sfs_lookup_parent+0x2b4>
80009b94:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009b98:	40026000 	mfc0	v0,c0_status
80009b9c:	30420001 	andi	v0,v0,0x1
80009ba0:	1440002b 	bnez	v0,80009c50 <sfs_lookup_parent+0x258>
80009ba4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009ba8:	8e560008 	lw	s6,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009bac:	32d60001 	andi	s6,s6,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009bb0:	16c0002f 	bnez	s6,80009c70 <sfs_lookup_parent+0x278>
80009bb4:	2402fffe 	li	v0,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009bb8:	26560014 	addiu	s6,s2,20
80009bbc:	0c006727 	jal	80019c9c <down>
80009bc0:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80009bc4:	40026000 	mfc0	v0,c0_status
80009bc8:	30420001 	andi	v0,v0,0x1
80009bcc:	1440002a 	bnez	v0,80009c78 <sfs_lookup_parent+0x280>
80009bd0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009bd4:	8e420008 	lw	v0,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009bd8:	30420001 	andi	v0,v0,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009bdc:	14400038 	bnez	v0,80009cc0 <sfs_lookup_parent+0x2c8>
80009be0:	02802021 	move	a0,s4
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:571
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
80009be4:	02402821 	move	a1,s2
80009be8:	02003021 	move	a2,s0
80009bec:	27a70018 	addiu	a3,sp,24
80009bf0:	afa00010 	sw	zero,16(sp)
80009bf4:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
80009bf8:	afa00014 	sw	zero,20(sp)
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009bfc:	02c02021 	move	a0,s6
80009c00:	0c006725 	jal	80019c94 <up>
80009c04:	afa20020 	sw	v0,32(sp)
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:573
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
80009c08:	8fa20020 	lw	v0,32(sp)
80009c0c:	10400022 	beqz	v0,80009c98 <sfs_lookup_parent+0x2a0>
80009c10:	8fa60018 	lw	a2,24(sp)
sfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1460
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009c14:	0c001171 	jal	800045c4 <inode_ref_dec>
80009c18:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1466
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	}
}
80009c1c:	8fbf004c 	lw	ra,76(sp)
80009c20:	8fa20020 	lw	v0,32(sp)
80009c24:	8fbe0048 	lw	s8,72(sp)
80009c28:	8fb70044 	lw	s7,68(sp)
80009c2c:	8fb60040 	lw	s6,64(sp)
80009c30:	8fb5003c 	lw	s5,60(sp)
80009c34:	8fb40038 	lw	s4,56(sp)
80009c38:	8fb30034 	lw	s3,52(sp)
80009c3c:	8fb20030 	lw	s2,48(sp)
80009c40:	8fb1002c 	lw	s1,44(sp)
80009c44:	8fb00028 	lw	s0,40(sp)
80009c48:	03e00008 	jr	ra
80009c4c:	27bd0050 	addiu	sp,sp,80
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009c50:	0c006d0c 	jal	8001b430 <intr_disable>
80009c54:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009c58:	8e560008 	lw	s6,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009c5c:	0c006d08 	jal	8001b420 <intr_enable>
80009c60:	32d60001 	andi	s6,s6,0x1
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009c64:	12c0ffd5 	beqz	s6,80009bbc <sfs_lookup_parent+0x1c4>
80009c68:	26560014 	addiu	s6,s2,20
sfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1455
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
				return -E_TOO_BIG;
80009c6c:	2402fffe 	li	v0,-2
80009c70:	08002705 	j	80009c14 <sfs_lookup_parent+0x21c>
80009c74:	afa20020 	sw	v0,32(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009c78:	0c006d0c 	jal	8001b430 <intr_disable>
80009c7c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009c80:	8e420008 	lw	v0,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009c84:	30420001 	andi	v0,v0,0x1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009c88:	0c006d08 	jal	8001b420 <intr_enable>
80009c8c:	afa20024 	sw	v0,36(sp)
80009c90:	080026f7 	j	80009bdc <sfs_lookup_parent+0x1e4>
80009c94:	8fa20024 	lw	v0,36(sp)
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:576
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
		return ret;
	}
	return sfs_load_inode(sfs, node_store, ino);
80009c98:	02802021 	move	a0,s4
80009c9c:	0c00250f 	jal	8000943c <sfs_load_inode>
80009ca0:	27a5001c 	addiu	a1,sp,28
80009ca4:	080026cd 	j	80009b34 <sfs_lookup_parent+0x13c>
80009ca8:	afa20020 	sw	v0,32(sp)
sfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1454
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
80009cac:	0c001171 	jal	800045c4 <inode_ref_dec>
80009cb0:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1455
				return -E_TOO_BIG;
80009cb4:	2402ffe5 	li	v0,-27
80009cb8:	08002707 	j	80009c1c <sfs_lookup_parent+0x224>
80009cbc:	afa20020 	sw	v0,32(sp)
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80009cc0:	0c006725 	jal	80019c94 <up>
80009cc4:	02c02021 	move	a0,s6
sfs_lookup_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1455
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
				return -E_TOO_BIG;
80009cc8:	2402fffe 	li	v0,-2
80009ccc:	08002705 	j	80009c14 <sfs_lookup_parent+0x21c>
80009cd0:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1431
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	while (1) {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009cd4:	3c048002 	lui	a0,0x8002
80009cd8:	3c068002 	lui	a2,0x8002
80009cdc:	3c078002 	lui	a3,0x8002
80009ce0:	24842030 	addiu	a0,a0,8240
80009ce4:	24050597 	li	a1,1431
80009ce8:	24c60e48 	addiu	a2,a2,3656
80009cec:	0c006b13 	jal	8001ac4c <__panic>
80009cf0:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1428
static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
80009cf4:	3c048002 	lui	a0,0x8002
80009cf8:	3c068002 	lui	a2,0x8002
80009cfc:	3c078002 	lui	a3,0x8002
80009d00:	24842030 	addiu	a0,a0,8240
80009d04:	24050594 	li	a1,1428
80009d08:	24c60e48 	addiu	a2,a2,3656
80009d0c:	0c006b13 	jal	8001ac4c <__panic>
80009d10:	24e72400 	addiu	a3,a3,9216
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1427

static int
sfs_lookup_parent(struct inode *node, char *path, struct inode **node_store,
		  char **endp)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009d14:	3c048002 	lui	a0,0x8002
80009d18:	3c068002 	lui	a2,0x8002
80009d1c:	3c078002 	lui	a3,0x8002
80009d20:	24842030 	addiu	a0,a0,8240
80009d24:	24050593 	li	a1,1427
80009d28:	24c60e48 	addiu	a2,a2,3656
80009d2c:	0c006b13 	jal	8001ac4c <__panic>
80009d30:	24e71e8c 	addiu	a3,a3,7820

80009d34 <sfs_lookup>:
sfs_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1380
	}
	return path;
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
80009d34:	27bdffb8 	addiu	sp,sp,-72
80009d38:	afb3002c 	sw	s3,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1381
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009d3c:	8c930044 	lw	s3,68(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1380
	}
	return path;
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
80009d40:	afb7003c 	sw	s7,60(sp)
80009d44:	afb40030 	sw	s4,48(sp)
80009d48:	afb20028 	sw	s2,40(sp)
80009d4c:	afbf0044 	sw	ra,68(sp)
80009d50:	afbe0040 	sw	s8,64(sp)
80009d54:	afb60038 	sw	s6,56(sp)
80009d58:	afb50034 	sw	s5,52(sp)
80009d5c:	afb10024 	sw	s1,36(sp)
80009d60:	afb00020 	sw	s0,32(sp)
80009d64:	00809021 	move	s2,a0
80009d68:	00a0b821 	move	s7,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1381
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
80009d6c:	126000ab 	beqz	s3,8000a01c <sfs_lookup+0x2e8>
80009d70:	00c0a021 	move	s4,a2
80009d74:	8e630084 	lw	v1,132(s3)
80009d78:	24025679 	li	v0,22137
80009d7c:	546200a8 	bnel	v1,v0,8000a020 <sfs_lookup+0x2ec>
80009d80:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1382
	assert(*path != '\0' && *path != '/');
80009d84:	90a20000 	lbu	v0,0(a1)
80009d88:	1040009c 	beqz	v0,80009ffc <sfs_lookup+0x2c8>
80009d8c:	2403002f 	li	v1,47
80009d90:	5043009b 	beql	v0,v1,8000a000 <sfs_lookup+0x2cc>
80009d94:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1383
	vop_ref_inc(node);
80009d98:	0c0010b5 	jal	800042d4 <inode_ref_inc>
80009d9c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1385
	do {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009da0:	8e430038 	lw	v1,56(s2)
80009da4:	24021237 	li	v0,4663
80009da8:	146200a5 	bne	v1,v0,8000a040 <sfs_lookup+0x30c>
80009dac:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1386
		if (sin->din->type != SFS_TYPE_DIR) {
80009db0:	8e420000 	lw	v0,0(s2)
80009db4:	94430008 	lhu	v1,8(v0)
80009db8:	24020002 	li	v0,2
80009dbc:	14620030 	bne	v1,v0,80009e80 <sfs_lookup+0x14c>
80009dc0:	3c118002 	lui	s1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1393
			return -E_NOTDIR;
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
80009dc4:	02e02021 	move	a0,s7
80009dc8:	0c001b68 	jal	80006da0 <sfs_lookup_subpath>
80009dcc:	26313e48 	addiu	s1,s1,15944
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1403
			break;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009dd0:	3c158002 	lui	s5,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1394
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
		if (strcmp(path, ".") == 0) {
80009dd4:	02e02021 	move	a0,s7
80009dd8:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1403
			break;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009ddc:	26b52338 	addiu	s5,s5,9016
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1394
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
		if (strcmp(path, ".") == 0) {
80009de0:	0c005bc0 	jal	80016f00 <strcmp>
80009de4:	00408021 	move	s0,v0
80009de8:	1440000c 	bnez	v0,80009e1c <sfs_lookup+0xe8>
80009dec:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1395
			if ((path = subpath) != NULL) {
80009df0:	52000028 	beqzl	s0,80009e94 <sfs_lookup+0x160>
80009df4:	ae920000 	sw	s2,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1393
			return -E_NOTDIR;
		}

		char *subpath;
next:
		subpath = sfs_lookup_subpath(path);
80009df8:	0200b821 	move	s7,s0
80009dfc:	0c001b68 	jal	80006da0 <sfs_lookup_subpath>
80009e00:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1394
		if (strcmp(path, ".") == 0) {
80009e04:	02e02021 	move	a0,s7
80009e08:	02202821 	move	a1,s1
80009e0c:	0c005bc0 	jal	80016f00 <strcmp>
80009e10:	00408021 	move	s0,v0
80009e14:	1040fff6 	beqz	v0,80009df0 <sfs_lookup+0xbc>
80009e18:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1403
			break;
		}

		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
80009e1c:	0c005bc0 	jal	80016f00 <strcmp>
80009e20:	02a02821 	move	a1,s5
80009e24:	14400029 	bnez	v0,80009ecc <sfs_lookup+0x198>
80009e28:	02602021 	move	a0,s3
sfs_load_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:559

static int
sfs_load_parent(struct sfs_fs *sfs, struct sfs_inode *sin,
		struct inode **parent_store)
{
	return sfs_load_inode(sfs, parent_store, sin->din->dirinfo.parent);
80009e2c:	8e420000 	lw	v0,0(s2)
80009e30:	27a5001c 	addiu	a1,sp,28
80009e34:	0c00250f 	jal	8000943c <sfs_load_inode>
80009e38:	8c460004 	lw	a2,4(v0)
80009e3c:	0040b821 	move	s7,v0
sfs_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1413
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009e40:	0c001171 	jal	800045c4 <inode_ref_dec>
80009e44:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1414
		if (ret != 0) {
80009e48:	16e00014 	bnez	s7,80009e9c <sfs_lookup+0x168>
80009e4c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1418
			return ret;
		}
		node = subnode, path = subpath;
	} while (path != NULL);
80009e50:	1200000f 	beqz	s0,80009e90 <sfs_lookup+0x15c>
80009e54:	8fb2001c 	lw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1385
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	do {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
80009e58:	12400078 	beqz	s2,8000a03c <sfs_lookup+0x308>
80009e5c:	24021237 	li	v0,4663
80009e60:	8e430038 	lw	v1,56(s2)
80009e64:	14620076 	bne	v1,v0,8000a040 <sfs_lookup+0x30c>
80009e68:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1386
		if (sin->din->type != SFS_TYPE_DIR) {
80009e6c:	8e420000 	lw	v0,0(s2)
80009e70:	94430008 	lhu	v1,8(v0)
80009e74:	24020002 	li	v0,2
80009e78:	5062ffe0 	beql	v1,v0,80009dfc <sfs_lookup+0xc8>
80009e7c:	0200b821 	move	s7,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1387
			vop_ref_dec(node);
80009e80:	0c001171 	jal	800045c4 <inode_ref_dec>
80009e84:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1388
			return -E_NOTDIR;
80009e88:	080027a6 	j	80009e98 <sfs_lookup+0x164>
80009e8c:	2417ffec 	li	s7,-20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1419
		if (ret != 0) {
			return ret;
		}
		node = subnode, path = subpath;
	} while (path != NULL);
	*node_store = node;
80009e90:	ae920000 	sw	s2,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1420
	return 0;
80009e94:	0000b821 	move	s7,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1421
}
80009e98:	8fbf0044 	lw	ra,68(sp)
80009e9c:	02e01021 	move	v0,s7
80009ea0:	8fbe0040 	lw	s8,64(sp)
80009ea4:	8fb7003c 	lw	s7,60(sp)
80009ea8:	8fb60038 	lw	s6,56(sp)
80009eac:	8fb50034 	lw	s5,52(sp)
80009eb0:	8fb40030 	lw	s4,48(sp)
80009eb4:	8fb3002c 	lw	s3,44(sp)
80009eb8:	8fb20028 	lw	s2,40(sp)
80009ebc:	8fb10024 	lw	s1,36(sp)
80009ec0:	8fb00020 	lw	s0,32(sp)
80009ec4:	03e00008 	jr	ra
80009ec8:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1406
		int ret;
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
80009ecc:	0c005b81 	jal	80016e04 <strlen>
80009ed0:	02e02021 	move	a0,s7
80009ed4:	2c420100 	sltiu	v0,v0,256
80009ed8:	10400044 	beqz	v0,80009fec <sfs_lookup+0x2b8>
80009edc:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80009ee0:	40026000 	mfc0	v0,c0_status
80009ee4:	30420001 	andi	v0,v0,0x1
80009ee8:	14400029 	bnez	v0,80009f90 <sfs_lookup+0x25c>
80009eec:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009ef0:	8e560008 	lw	s6,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009ef4:	32d60001 	andi	s6,s6,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
80009ef8:	16c00035 	bnez	s6,80009fd0 <sfs_lookup+0x29c>
80009efc:	26560014 	addiu	s6,s2,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
80009f00:	0c006727 	jal	80019c9c <down>
80009f04:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80009f08:	40026000 	mfc0	v0,c0_status
80009f0c:	30420001 	andi	v0,v0,0x1
80009f10:	14400026 	bnez	v0,80009fac <sfs_lookup+0x278>
80009f14:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009f18:	8e5e0008 	lw	s8,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80009f1c:	33de0001 	andi	s8,s8,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
80009f20:	17c00029 	bnez	s8,80009fc8 <sfs_lookup+0x294>
80009f24:	02602021 	move	a0,s3
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:571
	int ret;
	if ((ret = trylock_sin(sin)) != 0) {
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
80009f28:	02e03021 	move	a2,s7
80009f2c:	02402821 	move	a1,s2
80009f30:	27a70018 	addiu	a3,sp,24
80009f34:	afa00010 	sw	zero,16(sp)
80009f38:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
80009f3c:	afa00014 	sw	zero,20(sp)
80009f40:	0040b821 	move	s7,v0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
80009f44:	0c006725 	jal	80019c94 <up>
80009f48:	02c02021 	move	a0,s6
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:573
		return ret;
	}
	uint32_t ino;
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
80009f4c:	12e00022 	beqz	s7,80009fd8 <sfs_lookup+0x2a4>
80009f50:	8fa60018 	lw	a2,24(sp)
sfs_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1413
				return -E_TOO_BIG;
			}
			ret = sfs_lookup_once(sfs, sin, path, &subnode, NULL);
		}

		vop_ref_dec(node);
80009f54:	0c001171 	jal	800045c4 <inode_ref_dec>
80009f58:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1421
		}
		node = subnode, path = subpath;
	} while (path != NULL);
	*node_store = node;
	return 0;
}
80009f5c:	8fbf0044 	lw	ra,68(sp)
80009f60:	02e01021 	move	v0,s7
80009f64:	8fbe0040 	lw	s8,64(sp)
80009f68:	8fb7003c 	lw	s7,60(sp)
80009f6c:	8fb60038 	lw	s6,56(sp)
80009f70:	8fb50034 	lw	s5,52(sp)
80009f74:	8fb40030 	lw	s4,48(sp)
80009f78:	8fb3002c 	lw	s3,44(sp)
80009f7c:	8fb20028 	lw	s2,40(sp)
80009f80:	8fb10024 	lw	s1,36(sp)
80009f84:	8fb00020 	lw	s0,32(sp)
80009f88:	03e00008 	jr	ra
80009f8c:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80009f90:	0c006d0c 	jal	8001b430 <intr_disable>
80009f94:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80009f98:	8e560008 	lw	s6,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009f9c:	0c006d08 	jal	8001b420 <intr_enable>
80009fa0:	32d60001 	andi	s6,s6,0x1
80009fa4:	080027be 	j	80009ef8 <sfs_lookup+0x1c4>
80009fa8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80009fac:	0c006d0c 	jal	8001b430 <intr_disable>
80009fb0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
80009fb4:	8e5e0008 	lw	s8,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80009fb8:	0c006d08 	jal	8001b420 <intr_enable>
80009fbc:	33de0001 	andi	s8,s8,0x1
80009fc0:	080027c8 	j	80009f20 <sfs_lookup+0x1ec>
80009fc4:	00000000 	nop
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
80009fc8:	0c006725 	jal	80019c94 <up>
80009fcc:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1420
			return ret;
		}
		node = subnode, path = subpath;
	} while (path != NULL);
	*node_store = node;
	return 0;
80009fd0:	080027d5 	j	80009f54 <sfs_lookup+0x220>
80009fd4:	2417fffe 	li	s7,-2
sfs_lookup_once():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:576
	ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);
	unlock_sin(sin);
	if (ret != 0) {
		return ret;
	}
	return sfs_load_inode(sfs, node_store, ino);
80009fd8:	02602021 	move	a0,s3
80009fdc:	0c00250f 	jal	8000943c <sfs_load_inode>
80009fe0:	27a5001c 	addiu	a1,sp,28
80009fe4:	08002790 	j	80009e40 <sfs_lookup+0x10c>
80009fe8:	0040b821 	move	s7,v0
sfs_lookup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1407
		struct inode *subnode;
		if (strcmp(path, "..") == 0) {
			ret = sfs_load_parent(sfs, sin, &subnode);
		} else {
			if (strlen(path) > SFS_MAX_FNAME_LEN) {
				vop_ref_dec(node);
80009fec:	0c001171 	jal	800045c4 <inode_ref_dec>
80009ff0:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1408
				return -E_TOO_BIG;
80009ff4:	080027a6 	j	80009e98 <sfs_lookup+0x164>
80009ff8:	2417ffe5 	li	s7,-27
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1382
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	assert(*path != '\0' && *path != '/');
80009ffc:	3c048002 	lui	a0,0x8002
8000a000:	3c068002 	lui	a2,0x8002
8000a004:	3c078002 	lui	a3,0x8002
8000a008:	24842030 	addiu	a0,a0,8240
8000a00c:	24050566 	li	a1,1382
8000a010:	24c60e48 	addiu	a2,a2,3656
8000a014:	0c006b13 	jal	8001ac4c <__panic>
8000a018:	24e72400 	addiu	a3,a3,9216
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1381
	return path;
}

static int sfs_lookup(struct inode *node, char *path, struct inode **node_store)
{
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a01c:	3c048002 	lui	a0,0x8002
8000a020:	3c068002 	lui	a2,0x8002
8000a024:	3c078002 	lui	a3,0x8002
8000a028:	24842030 	addiu	a0,a0,8240
8000a02c:	24050565 	li	a1,1381
8000a030:	24c60e48 	addiu	a2,a2,3656
8000a034:	0c006b13 	jal	8001ac4c <__panic>
8000a038:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1385
	assert(*path != '\0' && *path != '/');
	vop_ref_inc(node);
	do {
		struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a03c:	3c048002 	lui	a0,0x8002
8000a040:	3c068002 	lui	a2,0x8002
8000a044:	3c078002 	lui	a3,0x8002
8000a048:	24842030 	addiu	a0,a0,8240
8000a04c:	24050569 	li	a1,1385
8000a050:	24c60e48 	addiu	a2,a2,3656
8000a054:	0c006b13 	jal	8001ac4c <__panic>
8000a058:	24e7203c 	addiu	a3,a3,8252

8000a05c <sfs_unlink>:
sfs_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1345
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_unlink(struct inode *node, const char *name)
{
8000a05c:	27bdffb8 	addiu	sp,sp,-72
8000a060:	afb0002c 	sw	s0,44(sp)
8000a064:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1346
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a068:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1345
	vop_ref_dec(link_node);
	return ret;
}

static int sfs_unlink(struct inode *node, const char *name)
{
8000a06c:	afb30038 	sw	s3,56(sp)
8000a070:	afbf0044 	sw	ra,68(sp)
8000a074:	afb50040 	sw	s5,64(sp)
8000a078:	afb4003c 	sw	s4,60(sp)
8000a07c:	afb20034 	sw	s2,52(sp)
8000a080:	afb10030 	sw	s1,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1346
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a084:	0c005b81 	jal	80016e04 <strlen>
8000a088:	00a09821 	move	s3,a1
8000a08c:	2c420100 	sltiu	v0,v0,256
8000a090:	10400058 	beqz	v0,8000a1f4 <sfs_unlink+0x198>
8000a094:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1349
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
8000a098:	02602021 	move	a0,s3
8000a09c:	0c005bc0 	jal	80016f00 <strcmp>
8000a0a0:	24a53e48 	addiu	a1,a1,15944
8000a0a4:	10400048 	beqz	v0,8000a1c8 <sfs_unlink+0x16c>
8000a0a8:	3c058002 	lui	a1,0x8002
8000a0ac:	02602021 	move	a0,s3
8000a0b0:	0c005bc0 	jal	80016f00 <strcmp>
8000a0b4:	24a52338 	addiu	a1,a1,9016
8000a0b8:	10400044 	beqz	v0,8000a1cc <sfs_unlink+0x170>
8000a0bc:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1352
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a0c0:	8e110044 	lw	s1,68(s0)
8000a0c4:	122000ba 	beqz	s1,8000a3b0 <sfs_unlink+0x354>
8000a0c8:	24025679 	li	v0,22137
8000a0cc:	8e230084 	lw	v1,132(s1)
8000a0d0:	146200b7 	bne	v1,v0,8000a3b0 <sfs_unlink+0x354>
8000a0d4:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1353
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a0d8:	8e030038 	lw	v1,56(s0)
8000a0dc:	146200ad 	bne	v1,v0,8000a394 <sfs_unlink+0x338>
8000a0e0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1355
	int ret;
	lock_sfs_mutex(sfs);
8000a0e4:	0c002c4e 	jal	8000b138 <lock_sfs_mutex>
8000a0e8:	02202021 	move	a0,s1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a0ec:	40026000 	mfc0	v0,c0_status
8000a0f0:	30420001 	andi	v0,v0,0x1
8000a0f4:	14400026 	bnez	v0,8000a190 <sfs_unlink+0x134>
8000a0f8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a0fc:	8e120008 	lw	s2,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a100:	32520001 	andi	s2,s2,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a104:	16400059 	bnez	s2,8000a26c <sfs_unlink+0x210>
8000a108:	26120014 	addiu	s2,s0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a10c:	0c006727 	jal	80019c9c <down>
8000a110:	02402021 	move	a0,s2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000a114:	40026000 	mfc0	v0,c0_status
8000a118:	30420001 	andi	v0,v0,0x1
8000a11c:	14400023 	bnez	v0,8000a1ac <sfs_unlink+0x150>
8000a120:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a124:	8e140008 	lw	s4,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a128:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a12c:	1680004d 	bnez	s4,8000a264 <sfs_unlink+0x208>
8000a130:	27a20020 	addiu	v0,sp,32
sfs_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1308
static int
sfs_unlink_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name)
{
	int ret, slot;
	uint32_t ino;
	if ((ret =
8000a134:	02202021 	move	a0,s1
8000a138:	02002821 	move	a1,s0
8000a13c:	02603021 	move	a2,s3
8000a140:	27a7001c 	addiu	a3,sp,28
8000a144:	afa20010 	sw	v0,16(sp)
8000a148:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
8000a14c:	afa00014 	sw	zero,20(sp)
8000a150:	1040002a 	beqz	v0,8000a1fc <sfs_unlink+0x1a0>
8000a154:	0040a821 	move	s5,v0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a158:	0c006725 	jal	80019c94 <up>
8000a15c:	02402021 	move	a0,s2
sfs_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1362
		if ((ret = trylock_sin(sin)) == 0) {
			ret = sfs_unlink_nolock(sfs, sin, name);
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
8000a160:	0c002c54 	jal	8000b150 <unlock_sfs_mutex>
8000a164:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1364
	return ret;
}
8000a168:	8fbf0044 	lw	ra,68(sp)
8000a16c:	02a01021 	move	v0,s5
8000a170:	8fb4003c 	lw	s4,60(sp)
8000a174:	8fb50040 	lw	s5,64(sp)
8000a178:	8fb30038 	lw	s3,56(sp)
8000a17c:	8fb20034 	lw	s2,52(sp)
8000a180:	8fb10030 	lw	s1,48(sp)
8000a184:	8fb0002c 	lw	s0,44(sp)
8000a188:	03e00008 	jr	ra
8000a18c:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a190:	0c006d0c 	jal	8001b430 <intr_disable>
8000a194:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a198:	8e120008 	lw	s2,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a19c:	0c006d08 	jal	8001b420 <intr_enable>
8000a1a0:	32520001 	andi	s2,s2,0x1
8000a1a4:	08002841 	j	8000a104 <sfs_unlink+0xa8>
8000a1a8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a1ac:	0c006d0c 	jal	8001b430 <intr_disable>
8000a1b0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a1b4:	8e140008 	lw	s4,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a1b8:	0c006d08 	jal	8001b420 <intr_enable>
8000a1bc:	32940001 	andi	s4,s4,0x1
8000a1c0:	0800284b 	j	8000a12c <sfs_unlink+0xd0>
8000a1c4:	00000000 	nop
sfs_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1364
8000a1c8:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1350
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_ISDIR;
8000a1cc:	2415ffeb 	li	s5,-21
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1364
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
	return ret;
}
8000a1d0:	02a01021 	move	v0,s5
8000a1d4:	8fb4003c 	lw	s4,60(sp)
8000a1d8:	8fb50040 	lw	s5,64(sp)
8000a1dc:	8fb30038 	lw	s3,56(sp)
8000a1e0:	8fb20034 	lw	s2,52(sp)
8000a1e4:	8fb10030 	lw	s1,48(sp)
8000a1e8:	8fb0002c 	lw	s0,44(sp)
8000a1ec:	03e00008 	jr	ra
8000a1f0:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1347
}

static int sfs_unlink(struct inode *node, const char *name)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000a1f4:	0800285a 	j	8000a168 <sfs_unlink+0x10c>
8000a1f8:	2415ffe5 	li	s5,-27
sfs_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1314
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, &slot,
				      NULL)) != 0) {
		return ret;
	}
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
8000a1fc:	8fa6001c 	lw	a2,28(sp)
8000a200:	02202021 	move	a0,s1
8000a204:	0c00250f 	jal	8000943c <sfs_load_inode>
8000a208:	27a50018 	addiu	a1,sp,24
8000a20c:	1440ffd2 	bnez	v0,8000a158 <sfs_unlink+0xfc>
8000a210:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1317
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000a214:	8fb30018 	lw	s3,24(sp)
8000a218:	12600076 	beqz	s3,8000a3f4 <sfs_unlink+0x398>
8000a21c:	24021237 	li	v0,4663
8000a220:	8e630038 	lw	v1,56(s3)
8000a224:	14620074 	bne	v1,v0,8000a3f8 <sfs_unlink+0x39c>
8000a228:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1318
	if (lnksin->din->type != SFS_TYPE_DIR) {
8000a22c:	8e620000 	lw	v0,0(s3)
8000a230:	94430008 	lhu	v1,8(v0)
8000a234:	24020002 	li	v0,2
8000a238:	1062000e 	beq	v1,v0,8000a274 <sfs_unlink+0x218>
8000a23c:	8fa60020 	lw	a2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1319
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
8000a240:	02202021 	move	a0,s1
8000a244:	02002821 	move	a1,s0
8000a248:	0c0020fc 	jal	800083f0 <sfs_dirent_unlink_nolock>
8000a24c:	02603821 	move	a3,s3
8000a250:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1340
				sfs_nlinks_dec_nolock(sin);
			}
			unlock_sin(lnksin);
		}
	}
	vop_ref_dec(link_node);
8000a254:	0c001171 	jal	800045c4 <inode_ref_dec>
8000a258:	8fa40018 	lw	a0,24(sp)
8000a25c:	08002856 	j	8000a158 <sfs_unlink+0xfc>
8000a260:	00000000 	nop
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a264:	0c006725 	jal	80019c94 <up>
8000a268:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1323
	if (lnksin->din->type != SFS_TYPE_DIR) {
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
				ret = -E_NOTEMPTY;
8000a26c:	08002858 	j	8000a160 <sfs_unlink+0x104>
8000a270:	2415fffe 	li	s5,-2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a274:	40026000 	mfc0	v0,c0_status
8000a278:	30420001 	andi	v0,v0,0x1
8000a27c:	14400017 	bnez	v0,8000a2dc <sfs_unlink+0x280>
8000a280:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a284:	8e740008 	lw	s4,8(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a288:	32940001 	andi	s4,s4,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a28c:	1680003f 	bnez	s4,8000a38c <sfs_unlink+0x330>
8000a290:	26740014 	addiu	s4,s3,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a294:	0c006727 	jal	80019c9c <down>
8000a298:	02802021 	move	a0,s4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000a29c:	40026000 	mfc0	v0,c0_status
8000a2a0:	30420001 	andi	v0,v0,0x1
8000a2a4:	14400014 	bnez	v0,8000a2f8 <sfs_unlink+0x29c>
8000a2a8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a2ac:	8e750008 	lw	s5,8(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a2b0:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a2b4:	16a00033 	bnez	s5,8000a384 <sfs_unlink+0x328>
8000a2b8:	00000000 	nop
sfs_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1322
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
	if (lnksin->din->type != SFS_TYPE_DIR) {
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
8000a2bc:	8e620000 	lw	v0,0(s3)
8000a2c0:	8c420000 	lw	v0,0(v0)
8000a2c4:	10400013 	beqz	v0,8000a314 <sfs_unlink+0x2b8>
8000a2c8:	2415ffeb 	li	s5,-21
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a2cc:	0c006725 	jal	80019c94 <up>
8000a2d0:	02802021 	move	a0,s4
8000a2d4:	08002895 	j	8000a254 <sfs_unlink+0x1f8>
8000a2d8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a2dc:	0c006d0c 	jal	8001b430 <intr_disable>
8000a2e0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a2e4:	8e740008 	lw	s4,8(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a2e8:	0c006d08 	jal	8001b420 <intr_enable>
8000a2ec:	32940001 	andi	s4,s4,0x1
8000a2f0:	080028a3 	j	8000a28c <sfs_unlink+0x230>
8000a2f4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a2f8:	0c006d0c 	jal	8001b430 <intr_disable>
8000a2fc:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a300:	8e750008 	lw	s5,8(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a304:	0c006d08 	jal	8001b420 <intr_enable>
8000a308:	32b50001 	andi	s5,s5,0x1
8000a30c:	080028ad 	j	8000a2b4 <sfs_unlink+0x258>
8000a310:	00000000 	nop
sfs_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1325
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
				ret = -E_NOTEMPTY;
			} else
			    if ((ret =
8000a314:	8fa60020 	lw	a2,32(sp)
8000a318:	02202021 	move	a0,s1
8000a31c:	02002821 	move	a1,s0
8000a320:	0c0020fc 	jal	800083f0 <sfs_dirent_unlink_nolock>
8000a324:	02603821 	move	a3,s3
8000a328:	1440ffe8 	bnez	v0,8000a2cc <sfs_unlink+0x270>
8000a32c:	0040a821 	move	s5,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a330:	40026000 	mfc0	v0,c0_status
8000a334:	30420001 	andi	v0,v0,0x1
8000a338:	14400025 	bnez	v0,8000a3d0 <sfs_unlink+0x374>
8000a33c:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8000a340:	8e620008 	lw	v0,8(s3)
8000a344:	34420001 	ori	v0,v0,0x1
8000a348:	ae620008 	sw	v0,8(s3)
sfs_nlinks_dec_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a34c:	8e640000 	lw	a0,0(s3)
8000a350:	9485000a 	lhu	a1,10(a0)
8000a354:	10a0002b 	beqz	a1,8000a404 <sfs_unlink+0x3a8>
8000a358:	24030001 	li	v1,1
8000a35c:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:747
	sin->dirty = 1, --sin->din->nlinks;
8000a360:	24a5ffff 	addiu	a1,a1,-1
8000a364:	ae63000c 	sw	v1,12(s3)
8000a368:	a485000a 	sh	a1,10(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a36c:	9444000a 	lhu	a0,10(v0)
8000a370:	10800024 	beqz	a0,8000a404 <sfs_unlink+0x3a8>
8000a374:	2484ffff 	addiu	a0,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:747
	sin->dirty = 1, --sin->din->nlinks;
8000a378:	ae03000c 	sw	v1,12(s0)
8000a37c:	080028b3 	j	8000a2cc <sfs_unlink+0x270>
8000a380:	a444000a 	sh	a0,10(v0)
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a384:	0c006725 	jal	80019c94 <up>
8000a388:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1323
	if (lnksin->din->type != SFS_TYPE_DIR) {
		ret = sfs_dirent_unlink_nolock(sfs, sin, slot, lnksin);
	} else {
		if ((ret = trylock_sin(lnksin)) == 0) {
			if (lnksin->din->dirinfo.slots != 0) {
				ret = -E_NOTEMPTY;
8000a38c:	08002895 	j	8000a254 <sfs_unlink+0x1f8>
8000a390:	2415fffe 	li	s5,-2
sfs_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1353
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a394:	24842030 	addiu	a0,a0,8240
8000a398:	24050549 	li	a1,1353
sfs_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1317
	}
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000a39c:	3c068002 	lui	a2,0x8002
8000a3a0:	3c078002 	lui	a3,0x8002
8000a3a4:	24c60e48 	addiu	a2,a2,3656
8000a3a8:	0c006b13 	jal	8001ac4c <__panic>
8000a3ac:	24e7203c 	addiu	a3,a3,8252
sfs_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1352
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_ISDIR;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a3b0:	3c048002 	lui	a0,0x8002
8000a3b4:	3c068002 	lui	a2,0x8002
8000a3b8:	3c078002 	lui	a3,0x8002
8000a3bc:	24842030 	addiu	a0,a0,8240
8000a3c0:	24050548 	li	a1,1352
8000a3c4:	24c60e48 	addiu	a2,a2,3656
8000a3c8:	0c006b13 	jal	8001ac4c <__panic>
8000a3cc:	24e71e8c 	addiu	a3,a3,7820
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a3d0:	0c006d0c 	jal	8001b430 <intr_disable>
8000a3d4:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8000a3d8:	8e620008 	lw	v0,8(s3)
8000a3dc:	34420001 	ori	v0,v0,0x1
8000a3e0:	ae620008 	sw	v0,8(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a3e4:	0c006d08 	jal	8001b420 <intr_enable>
8000a3e8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a3ec:	080028d4 	j	8000a350 <sfs_unlink+0x2f4>
8000a3f0:	8e640000 	lw	a0,0(s3)
sfs_unlink_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1317
	}
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
		return ret;
	}
	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000a3f4:	3c048002 	lui	a0,0x8002
8000a3f8:	24842030 	addiu	a0,a0,8240
8000a3fc:	080028e7 	j	8000a39c <sfs_unlink+0x340>
8000a400:	24050525 	li	a1,1317
sfs_nlinks_dec_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000a404:	3c048002 	lui	a0,0x8002
8000a408:	3c068002 	lui	a2,0x8002
8000a40c:	3c078002 	lui	a3,0x8002
8000a410:	24842030 	addiu	a0,a0,8240
8000a414:	240502ea 	li	a1,746
8000a418:	24c60e48 	addiu	a2,a2,3656
8000a41c:	0c006b13 	jal	8001ac4c <__panic>
8000a420:	24e72420 	addiu	a3,a3,9248

8000a424 <sfs_create>:
sfs_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1286
}

static int
sfs_create(struct inode *node, const char *name, bool excl,
	   struct inode **node_store)
{
8000a424:	27bdffb8 	addiu	sp,sp,-72
8000a428:	afb00028 	sw	s0,40(sp)
8000a42c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1287
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a430:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1286
}

static int
sfs_create(struct inode *node, const char *name, bool excl,
	   struct inode **node_store)
{
8000a434:	afb5003c 	sw	s5,60(sp)
8000a438:	afb40038 	sw	s4,56(sp)
8000a43c:	afb1002c 	sw	s1,44(sp)
8000a440:	afbf0044 	sw	ra,68(sp)
8000a444:	afb60040 	sw	s6,64(sp)
8000a448:	afb30034 	sw	s3,52(sp)
8000a44c:	afb20030 	sw	s2,48(sp)
8000a450:	00a08821 	move	s1,a1
8000a454:	00c0a021 	move	s4,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1287
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
8000a458:	0c005b81 	jal	80016e04 <strlen>
8000a45c:	00e0a821 	move	s5,a3
8000a460:	2c420100 	sltiu	v0,v0,256
8000a464:	1040006e 	beqz	v0,8000a620 <sfs_create+0x1fc>
8000a468:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1290
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
8000a46c:	02202021 	move	a0,s1
8000a470:	0c005bc0 	jal	80016f00 <strcmp>
8000a474:	24a53e48 	addiu	a1,a1,15944
8000a478:	1040005d 	beqz	v0,8000a5f0 <sfs_create+0x1cc>
8000a47c:	3c058002 	lui	a1,0x8002
8000a480:	02202021 	move	a0,s1
8000a484:	0c005bc0 	jal	80016f00 <strcmp>
8000a488:	24a52338 	addiu	a1,a1,9016
8000a48c:	10400059 	beqz	v0,8000a5f4 <sfs_create+0x1d0>
8000a490:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1293
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a494:	8e120044 	lw	s2,68(s0)
8000a498:	12400085 	beqz	s2,8000a6b0 <sfs_create+0x28c>
8000a49c:	24025679 	li	v0,22137
8000a4a0:	8e430084 	lw	v1,132(s2)
8000a4a4:	14620082 	bne	v1,v0,8000a6b0 <sfs_create+0x28c>
8000a4a8:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1294
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a4ac:	8e030038 	lw	v1,56(s0)
8000a4b0:	14620087 	bne	v1,v0,8000a6d0 <sfs_create+0x2ac>
8000a4b4:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a4b8:	40026000 	mfc0	v0,c0_status
8000a4bc:	30420001 	andi	v0,v0,0x1
8000a4c0:	1440003d 	bnez	v0,8000a5b8 <sfs_create+0x194>
8000a4c4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a4c8:	8e130008 	lw	s3,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a4cc:	32730001 	andi	s3,s3,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a4d0:	16600055 	bnez	s3,8000a628 <sfs_create+0x204>
8000a4d4:	26130014 	addiu	s3,s0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a4d8:	0c006727 	jal	80019c9c <down>
8000a4dc:	02602021 	move	a0,s3
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000a4e0:	40026000 	mfc0	v0,c0_status
8000a4e4:	30420001 	andi	v0,v0,0x1
8000a4e8:	1440003a 	bnez	v0,8000a5d4 <sfs_create+0x1b0>
8000a4ec:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a4f0:	8e160008 	lw	s6,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a4f4:	32d60001 	andi	s6,s6,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a4f8:	16c00067 	bnez	s6,8000a698 <sfs_create+0x274>
8000a4fc:	27a20020 	addiu	v0,sp,32
sfs_create_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1246
		  bool excl, struct inode **node_store)
{
	int ret, slot;
	uint32_t ino;
	struct inode *link_node;
	if ((ret =
8000a500:	02402021 	move	a0,s2
8000a504:	02002821 	move	a1,s0
8000a508:	02203021 	move	a2,s1
8000a50c:	27a7001c 	addiu	a3,sp,28
8000a510:	afa00010 	sw	zero,16(sp)
8000a514:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
8000a518:	afa20014 	sw	v0,20(sp)
8000a51c:	0040b021 	move	s6,v0
8000a520:	2402fffe 	li	v0,-2
8000a524:	12c20046 	beq	s6,v0,8000a640 <sfs_create+0x21c>
8000a528:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1249
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, NULL,
				      &slot)) != -E_NOENT) {
		if (ret != 0) {
8000a52c:	16c00015 	bnez	s6,8000a584 <sfs_create+0x160>
8000a530:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1252
			return ret;
		}
		if (!excl) {
8000a534:	1680005c 	bnez	s4,8000a6a8 <sfs_create+0x284>
8000a538:	8fa6001c 	lw	a2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1253
			if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
8000a53c:	02402021 	move	a0,s2
8000a540:	0c00250f 	jal	8000943c <sfs_load_inode>
8000a544:	27a50018 	addiu	a1,sp,24
8000a548:	1440000e 	bnez	v0,8000a584 <sfs_create+0x160>
8000a54c:	0040b021 	move	s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1256
				return ret;
			}
			if (vop_info(link_node, sfs_inode)->din->type ==
8000a550:	8fa40018 	lw	a0,24(sp)
8000a554:	10800065 	beqz	a0,8000a6ec <sfs_create+0x2c8>
8000a558:	24021237 	li	v0,4663
8000a55c:	8c830038 	lw	v1,56(a0)
8000a560:	54620063 	bnel	v1,v0,8000a6f0 <sfs_create+0x2cc>
8000a564:	3c048002 	lui	a0,0x8002
8000a568:	8c820000 	lw	v0,0(a0)
8000a56c:	94430008 	lhu	v1,8(v0)
8000a570:	24020001 	li	v0,1
8000a574:	1462002e 	bne	v1,v0,8000a630 <sfs_create+0x20c>
8000a578:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1279
			return ret;
		}
	}

out:
	*node_store = link_node;
8000a57c:	aea40000 	sw	a0,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1280
	return 0;
8000a580:	0000b021 	move	s6,zero
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a584:	0c006725 	jal	80019c94 <up>
8000a588:	02602021 	move	a0,s3
sfs_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1301
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_create_nolock(sfs, sin, name, excl, node_store);
		unlock_sin(sin);
	}
	return ret;
}
8000a58c:	8fbf0044 	lw	ra,68(sp)
8000a590:	02c01021 	move	v0,s6
8000a594:	8fb5003c 	lw	s5,60(sp)
8000a598:	8fb60040 	lw	s6,64(sp)
8000a59c:	8fb40038 	lw	s4,56(sp)
8000a5a0:	8fb30034 	lw	s3,52(sp)
8000a5a4:	8fb20030 	lw	s2,48(sp)
8000a5a8:	8fb1002c 	lw	s1,44(sp)
8000a5ac:	8fb00028 	lw	s0,40(sp)
8000a5b0:	03e00008 	jr	ra
8000a5b4:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a5b8:	0c006d0c 	jal	8001b430 <intr_disable>
8000a5bc:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a5c0:	8e130008 	lw	s3,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a5c4:	0c006d08 	jal	8001b420 <intr_enable>
8000a5c8:	32730001 	andi	s3,s3,0x1
8000a5cc:	08002934 	j	8000a4d0 <sfs_create+0xac>
8000a5d0:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a5d4:	0c006d0c 	jal	8001b430 <intr_disable>
8000a5d8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a5dc:	8e160008 	lw	s6,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a5e0:	0c006d08 	jal	8001b420 <intr_enable>
8000a5e4:	32d60001 	andi	s6,s6,0x1
8000a5e8:	0800293e 	j	8000a4f8 <sfs_create+0xd4>
8000a5ec:	00000000 	nop
sfs_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1301
8000a5f0:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1291
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
8000a5f4:	2416ffef 	li	s6,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1301
	if ((ret = trylock_sin(sin)) == 0) {
		ret = sfs_create_nolock(sfs, sin, name, excl, node_store);
		unlock_sin(sin);
	}
	return ret;
}
8000a5f8:	02c01021 	move	v0,s6
8000a5fc:	8fb5003c 	lw	s5,60(sp)
8000a600:	8fb60040 	lw	s6,64(sp)
8000a604:	8fb40038 	lw	s4,56(sp)
8000a608:	8fb30034 	lw	s3,52(sp)
8000a60c:	8fb20030 	lw	s2,48(sp)
8000a610:	8fb1002c 	lw	s1,44(sp)
8000a614:	8fb00028 	lw	s0,40(sp)
8000a618:	03e00008 	jr	ra
8000a61c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1288
static int
sfs_create(struct inode *node, const char *name, bool excl,
	   struct inode **node_store)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000a620:	08002963 	j	8000a58c <sfs_create+0x168>
8000a624:	2416ffe5 	li	s6,-27
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a628:	08002963 	j	8000a58c <sfs_create+0x168>
8000a62c:	2416fffe 	li	s6,-2
sfs_create_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1260
			}
			if (vop_info(link_node, sfs_inode)->din->type ==
			    SFS_TYPE_FILE) {
				goto out;
			}
			vop_ref_dec(link_node);
8000a630:	0c001171 	jal	800045c4 <inode_ref_dec>
8000a634:	2416ffef 	li	s6,-17
8000a638:	08002961 	j	8000a584 <sfs_create+0x160>
8000a63c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1264
		}
		return -E_EXISTS;
	} else {
		if ((ret =
8000a640:	24050001 	li	a1,1
8000a644:	0c001ca7 	jal	8000729c <sfs_dirent_create_inode>
8000a648:	27a60018 	addiu	a2,sp,24
8000a64c:	1440ffcd 	bnez	v0,8000a584 <sfs_create+0x160>
8000a650:	0040b021 	move	s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1271
					     &link_node)) != 0) {
			return ret;
		}
		if ((ret =
		     sfs_dirent_link_nolock(sfs, sin, slot,
					    vop_info(link_node, sfs_inode),
8000a654:	8fa70018 	lw	a3,24(sp)
8000a658:	10e00028 	beqz	a3,8000a6fc <sfs_create+0x2d8>
8000a65c:	8fa60020 	lw	a2,32(sp)
8000a660:	8ce30038 	lw	v1,56(a3)
8000a664:	24021237 	li	v0,4663
8000a668:	14620024 	bne	v1,v0,8000a6fc <sfs_create+0x2d8>
8000a66c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1269
		if ((ret =
		     sfs_dirent_create_inode(sfs, SFS_TYPE_FILE,
					     &link_node)) != 0) {
			return ret;
		}
		if ((ret =
8000a670:	02002821 	move	a1,s0
8000a674:	0c002122 	jal	80008488 <sfs_dirent_link_nolock>
8000a678:	afb10010 	sw	s1,16(sp)
8000a67c:	0040b021 	move	s6,v0
8000a680:	1040ffbe 	beqz	v0,8000a57c <sfs_create+0x158>
8000a684:	8fa40018 	lw	a0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1273
		     sfs_dirent_link_nolock(sfs, sin, slot,
					    vop_info(link_node, sfs_inode),
					    name)) != 0) {
			vop_ref_dec(link_node);
8000a688:	0c001171 	jal	800045c4 <inode_ref_dec>
8000a68c:	00000000 	nop
8000a690:	08002961 	j	8000a584 <sfs_create+0x160>
8000a694:	00000000 	nop
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a698:	0c006725 	jal	80019c94 <up>
8000a69c:	02602021 	move	a0,s3
8000a6a0:	08002963 	j	8000a58c <sfs_create+0x168>
8000a6a4:	2416fffe 	li	s6,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1262
			    SFS_TYPE_FILE) {
				goto out;
			}
			vop_ref_dec(link_node);
		}
		return -E_EXISTS;
8000a6a8:	08002961 	j	8000a584 <sfs_create+0x160>
8000a6ac:	2416ffef 	li	s6,-17
sfs_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1293
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a6b0:	3c048002 	lui	a0,0x8002
8000a6b4:	3c068002 	lui	a2,0x8002
8000a6b8:	3c078002 	lui	a3,0x8002
8000a6bc:	24842030 	addiu	a0,a0,8240
8000a6c0:	2405050d 	li	a1,1293
8000a6c4:	24c60e48 	addiu	a2,a2,3656
8000a6c8:	0c006b13 	jal	8001ac4c <__panic>
8000a6cc:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1294
	struct sfs_inode *sin = vop_info(node, sfs_inode);
8000a6d0:	24842030 	addiu	a0,a0,8240
8000a6d4:	2405050e 	li	a1,1294
sfs_create_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1256
		}
		if (!excl) {
			if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
				return ret;
			}
			if (vop_info(link_node, sfs_inode)->din->type ==
8000a6d8:	3c068002 	lui	a2,0x8002
8000a6dc:	3c078002 	lui	a3,0x8002
8000a6e0:	24c60e48 	addiu	a2,a2,3656
8000a6e4:	0c006b13 	jal	8001ac4c <__panic>
8000a6e8:	24e7203c 	addiu	a3,a3,8252
8000a6ec:	3c048002 	lui	a0,0x8002
8000a6f0:	24842030 	addiu	a0,a0,8240
8000a6f4:	080029b6 	j	8000a6d8 <sfs_create+0x2b4>
8000a6f8:	240504e8 	li	a1,1256
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:1271
					     &link_node)) != 0) {
			return ret;
		}
		if ((ret =
		     sfs_dirent_link_nolock(sfs, sin, slot,
					    vop_info(link_node, sfs_inode),
8000a6fc:	3c048002 	lui	a0,0x8002
8000a700:	24842030 	addiu	a0,a0,8240
8000a704:	080029b6 	j	8000a6d8 <sfs_create+0x2b4>
8000a708:	240504f7 	li	a1,1271

8000a70c <sfs_rename>:
sfs_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:954
}

static int
sfs_rename(struct inode *node, const char *name, struct inode *new_node,
	   const char *new_name)
{
8000a70c:	27bdffa8 	addiu	sp,sp,-88
8000a710:	afb00030 	sw	s0,48(sp)
8000a714:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:955
	if (strlen(name) > SFS_MAX_FNAME_LEN
8000a718:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:954
}

static int
sfs_rename(struct inode *node, const char *name, struct inode *new_node,
	   const char *new_name)
{
8000a71c:	afb3003c 	sw	s3,60(sp)
8000a720:	afb20038 	sw	s2,56(sp)
8000a724:	afb10034 	sw	s1,52(sp)
8000a728:	afbf0054 	sw	ra,84(sp)
8000a72c:	afbe0050 	sw	s8,80(sp)
8000a730:	afb7004c 	sw	s7,76(sp)
8000a734:	afb60048 	sw	s6,72(sp)
8000a738:	afb50044 	sw	s5,68(sp)
8000a73c:	afb40040 	sw	s4,64(sp)
8000a740:	00a08821 	move	s1,a1
8000a744:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:955
	if (strlen(name) > SFS_MAX_FNAME_LEN
8000a748:	0c005b81 	jal	80016e04 <strlen>
8000a74c:	00e09821 	move	s3,a3
8000a750:	2c420100 	sltiu	v0,v0,256
8000a754:	10400081 	beqz	v0,8000a95c <sfs_rename+0x250>
8000a758:	8fbf0054 	lw	ra,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:956
	    || strlen(new_name) > SFS_MAX_FNAME_LEN) {
8000a75c:	0c005b81 	jal	80016e04 <strlen>
8000a760:	02602021 	move	a0,s3
8000a764:	2c420100 	sltiu	v0,v0,256
8000a768:	1040007b 	beqz	v0,8000a958 <sfs_rename+0x24c>
8000a76c:	3c148002 	lui	s4,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:959
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
8000a770:	02202021 	move	a0,s1
8000a774:	0c005bc0 	jal	80016f00 <strcmp>
8000a778:	26853e48 	addiu	a1,s4,15944
8000a77c:	10400084 	beqz	v0,8000a990 <sfs_rename+0x284>
8000a780:	3c158002 	lui	s5,0x8002
8000a784:	02202021 	move	a0,s1
8000a788:	0c005bc0 	jal	80016f00 <strcmp>
8000a78c:	26a52338 	addiu	a1,s5,9016
8000a790:	1040007f 	beqz	v0,8000a990 <sfs_rename+0x284>
8000a794:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:962
		return -E_INVAL;
	}
	if (strcmp(new_name, ".") == 0 || strcmp(new_name, "..") == 0) {
8000a798:	0c005bc0 	jal	80016f00 <strcmp>
8000a79c:	26853e48 	addiu	a1,s4,15944
8000a7a0:	5040004b 	beqzl	v0,8000a8d0 <sfs_rename+0x1c4>
8000a7a4:	2415ffef 	li	s5,-17
8000a7a8:	02602021 	move	a0,s3
8000a7ac:	0c005bc0 	jal	80016f00 <strcmp>
8000a7b0:	26a52338 	addiu	a1,s5,9016
8000a7b4:	50400046 	beqzl	v0,8000a8d0 <sfs_rename+0x1c4>
8000a7b8:	2415ffef 	li	s5,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:965
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000a7bc:	8e140044 	lw	s4,68(s0)
8000a7c0:	128000f9 	beqz	s4,8000aba8 <sfs_rename+0x49c>
8000a7c4:	24025679 	li	v0,22137
8000a7c8:	8e830084 	lw	v1,132(s4)
8000a7cc:	146200f6 	bne	v1,v0,8000aba8 <sfs_rename+0x49c>
8000a7d0:	24021237 	li	v0,4663
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:966
	struct sfs_inode *sin = vop_info(node, sfs_inode), *newsin =
8000a7d4:	8e030038 	lw	v1,56(s0)
8000a7d8:	146200ec 	bne	v1,v0,8000ab8c <sfs_rename+0x480>
8000a7dc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:967
	    vop_info(new_node, sfs_inode);
8000a7e0:	124000fa 	beqz	s2,8000abcc <sfs_rename+0x4c0>
8000a7e4:	24842030 	addiu	a0,a0,8240
8000a7e8:	8e430038 	lw	v1,56(s2)
8000a7ec:	146200f6 	bne	v1,v0,8000abc8 <sfs_rename+0x4bc>
8000a7f0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:969
	int ret;
	lock_sfs_mutex(sfs);
8000a7f4:	0c002c4e 	jal	8000b138 <lock_sfs_mutex>
8000a7f8:	02802021 	move	a0,s4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000a7fc:	40026000 	mfc0	v0,c0_status
8000a800:	30420001 	andi	v0,v0,0x1
8000a804:	1440003f 	bnez	v0,8000a904 <sfs_rename+0x1f8>
8000a808:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a80c:	8e150008 	lw	s5,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a810:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a814:	16a00075 	bnez	s5,8000a9ec <sfs_rename+0x2e0>
8000a818:	26160014 	addiu	s6,s0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a81c:	0c006727 	jal	80019c9c <down>
8000a820:	02c02021 	move	a0,s6
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000a824:	40026000 	mfc0	v0,c0_status
8000a828:	30420001 	andi	v0,v0,0x1
8000a82c:	1440003c 	bnez	v0,8000a920 <sfs_rename+0x214>
8000a830:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a834:	8e150008 	lw	s5,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a838:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a83c:	16a00069 	bnez	s5,8000a9e4 <sfs_rename+0x2d8>
8000a840:	00000000 	nop
sfs_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:972
	    vop_info(new_node, sfs_inode);
	int ret;
	lock_sfs_mutex(sfs);
	{
		if ((ret = trylock_sin(sin)) == 0) {
			if (sin == newsin) {
8000a844:	5212006b 	beql	s0,s2,8000a9f4 <sfs_rename+0x2e8>
8000a848:	02202021 	move	a0,s1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000a84c:	40026000 	mfc0	v0,c0_status
8000a850:	30420001 	andi	v0,v0,0x1
8000a854:	14400039 	bnez	v0,8000a93c <sfs_rename+0x230>
8000a858:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a85c:	8e550008 	lw	s5,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a860:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:21
static const struct inode_ops sfs_node_dirops;
static const struct inode_ops sfs_node_fileops;

static inline int trylock_sin(struct sfs_inode *sin)
{
	if (!SFSInodeRemoved(sin)) {
8000a864:	16a0008e 	bnez	s5,8000aaa0 <sfs_rename+0x394>
8000a868:	26570014 	addiu	s7,s2,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:22
		down(&(sin->sem));
8000a86c:	0c006727 	jal	80019c9c <down>
8000a870:	02e02021 	move	a0,s7
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000a874:	40026000 	mfc0	v0,c0_status
8000a878:	30420001 	andi	v0,v0,0x1
8000a87c:	14400052 	bnez	v0,8000a9c8 <sfs_rename+0x2bc>
8000a880:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a884:	8e550008 	lw	s5,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8000a888:	32b50001 	andi	s5,s5,0x1
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:23
		if (!SFSInodeRemoved(sin)) {
8000a88c:	16a00082 	bnez	s5,8000aa98 <sfs_rename+0x38c>
8000a890:	27a20024 	addiu	v0,sp,36
sfs_rename2_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:897
sfs_rename2_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name,
		   struct sfs_inode *newsin, const char *new_name)
{
	uint32_t ino;
	int ret, slot1, slot2;
	if ((ret =
8000a894:	02802021 	move	a0,s4
8000a898:	02002821 	move	a1,s0
8000a89c:	02203021 	move	a2,s1
8000a8a0:	27a70020 	addiu	a3,sp,32
8000a8a4:	afa20010 	sw	v0,16(sp)
8000a8a8:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
8000a8ac:	afa00014 	sw	zero,20(sp)
8000a8b0:	1040006b 	beqz	v0,8000aa60 <sfs_rename+0x354>
8000a8b4:	0040a821 	move	s5,v0
unlock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:33
	return -E_NOENT;
}

static inline void unlock_sin(struct sfs_inode *sin)
{
	up(&(sin->sem));
8000a8b8:	0c006725 	jal	80019c94 <up>
8000a8bc:	02e02021 	move	a0,s7
8000a8c0:	0c006725 	jal	80019c94 <up>
8000a8c4:	02c02021 	move	a0,s6
sfs_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:985
				unlock_sin(newsin);
			}
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
8000a8c8:	0c002c54 	jal	8000b150 <unlock_sfs_mutex>
8000a8cc:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:987
	return ret;
}
8000a8d0:	8fbf0054 	lw	ra,84(sp)
8000a8d4:	02a01021 	move	v0,s5
8000a8d8:	8fbe0050 	lw	s8,80(sp)
8000a8dc:	8fb7004c 	lw	s7,76(sp)
8000a8e0:	8fb60048 	lw	s6,72(sp)
8000a8e4:	8fb50044 	lw	s5,68(sp)
8000a8e8:	8fb40040 	lw	s4,64(sp)
8000a8ec:	8fb3003c 	lw	s3,60(sp)
8000a8f0:	8fb20038 	lw	s2,56(sp)
8000a8f4:	8fb10034 	lw	s1,52(sp)
8000a8f8:	8fb00030 	lw	s0,48(sp)
8000a8fc:	03e00008 	jr	ra
8000a900:	27bd0058 	addiu	sp,sp,88
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000a904:	0c006d0c 	jal	8001b430 <intr_disable>
8000a908:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8000a90c:	8e150008 	lw	s5,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a910:	0c006d08 	jal	8001b420 <intr_enable>
8000a914:	32b50001 	andi	s5,s5,0x1
8000a918:	08002a05 	j	8000a814 <sfs_rename+0x108>
8000a91c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a920:	0c006d0c 	jal	8001b430 <intr_disable>
8000a924:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a928:	8e150008 	lw	s5,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a92c:	0c006d08 	jal	8001b420 <intr_enable>
8000a930:	32b50001 	andi	s5,s5,0x1
8000a934:	08002a0f 	j	8000a83c <sfs_rename+0x130>
8000a938:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a93c:	0c006d0c 	jal	8001b430 <intr_disable>
8000a940:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a944:	8e550008 	lw	s5,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a948:	0c006d08 	jal	8001b420 <intr_enable>
8000a94c:	32b50001 	andi	s5,s5,0x1
8000a950:	08002a19 	j	8000a864 <sfs_rename+0x158>
8000a954:	00000000 	nop
sfs_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:987
8000a958:	8fbf0054 	lw	ra,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:957
sfs_rename(struct inode *node, const char *name, struct inode *new_node,
	   const char *new_name)
{
	if (strlen(name) > SFS_MAX_FNAME_LEN
	    || strlen(new_name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
8000a95c:	2415ffe5 	li	s5,-27
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:987
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
	return ret;
}
8000a960:	02a01021 	move	v0,s5
8000a964:	8fbe0050 	lw	s8,80(sp)
8000a968:	8fb7004c 	lw	s7,76(sp)
8000a96c:	8fb60048 	lw	s6,72(sp)
8000a970:	8fb50044 	lw	s5,68(sp)
8000a974:	8fb40040 	lw	s4,64(sp)
8000a978:	8fb3003c 	lw	s3,60(sp)
8000a97c:	8fb20038 	lw	s2,56(sp)
8000a980:	8fb10034 	lw	s1,52(sp)
8000a984:	8fb00030 	lw	s0,48(sp)
8000a988:	03e00008 	jr	ra
8000a98c:	27bd0058 	addiu	sp,sp,88
8000a990:	8fbf0054 	lw	ra,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:960
	if (strlen(name) > SFS_MAX_FNAME_LEN
	    || strlen(new_name) > SFS_MAX_FNAME_LEN) {
		return -E_TOO_BIG;
	}
	if (strcmp(name, ".") == 0 || strcmp(name, "..") == 0) {
		return -E_INVAL;
8000a994:	2415ffea 	li	s5,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:987
			unlock_sin(sin);
		}
	}
	unlock_sfs_mutex(sfs);
	return ret;
}
8000a998:	02a01021 	move	v0,s5
8000a99c:	8fbe0050 	lw	s8,80(sp)
8000a9a0:	8fb7004c 	lw	s7,76(sp)
8000a9a4:	8fb60048 	lw	s6,72(sp)
8000a9a8:	8fb50044 	lw	s5,68(sp)
8000a9ac:	8fb40040 	lw	s4,64(sp)
8000a9b0:	8fb3003c 	lw	s3,60(sp)
8000a9b4:	8fb20038 	lw	s2,56(sp)
8000a9b8:	8fb10034 	lw	s1,52(sp)
8000a9bc:	8fb00030 	lw	s0,48(sp)
8000a9c0:	03e00008 	jr	ra
8000a9c4:	27bd0058 	addiu	sp,sp,88
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000a9c8:	0c006d0c 	jal	8001b430 <intr_disable>
8000a9cc:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8000a9d0:	8e550008 	lw	s5,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000a9d4:	0c006d08 	jal	8001b420 <intr_enable>
8000a9d8:	32b50001 	andi	s5,s5,0x1
8000a9dc:	08002a23 	j	8000a88c <sfs_rename+0x180>
8000a9e0:	00000000 	nop
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000a9e4:	0c006725 	jal	80019c94 <up>
8000a9e8:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:905
		return ret;
	}
	if ((ret =
	     sfs_dirent_search_nolock(sfs, newsin, new_name, NULL, NULL,
				      &slot2)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000a9ec:	08002a32 	j	8000a8c8 <sfs_rename+0x1bc>
8000a9f0:	2415fffe 	li	s5,-2
sfs_rename1_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:873

static int
sfs_rename1_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name,
		   const char *new_name)
{
	if (strcmp(name, new_name) == 0) {
8000a9f4:	0c005bc0 	jal	80016f00 <strcmp>
8000a9f8:	02602821 	move	a1,s3
8000a9fc:	1040ffb0 	beqz	v0,8000a8c0 <sfs_rename+0x1b4>
8000aa00:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:878
		return 0;
	}
	int ret, slot;
	uint32_t ino;
	if ((ret =
8000aa04:	27a20024 	addiu	v0,sp,36
8000aa08:	02802021 	move	a0,s4
8000aa0c:	02002821 	move	a1,s0
8000aa10:	02203021 	move	a2,s1
8000aa14:	27a70020 	addiu	a3,sp,32
8000aa18:	afa20010 	sw	v0,16(sp)
8000aa1c:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
8000aa20:	afa00014 	sw	zero,20(sp)
8000aa24:	1440ffa6 	bnez	v0,8000a8c0 <sfs_rename+0x1b4>
8000aa28:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:883
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, &slot,
				      NULL)) != 0) {
		return ret;
	}
	if ((ret =
8000aa2c:	02802021 	move	a0,s4
8000aa30:	02002821 	move	a1,s0
8000aa34:	02603021 	move	a2,s3
8000aa38:	00003821 	move	a3,zero
8000aa3c:	afa00010 	sw	zero,16(sp)
8000aa40:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
8000aa44:	afa00014 	sw	zero,20(sp)
8000aa48:	0040a821 	move	s5,v0
8000aa4c:	2402fffe 	li	v0,-2
8000aa50:	12a20046 	beq	s5,v0,8000ab6c <sfs_rename+0x460>
8000aa54:	2402ffef 	li	v0,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:886
	     sfs_dirent_search_nolock(sfs, sin, new_name, NULL, NULL,
				      NULL)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000aa58:	08002a30 	j	8000a8c0 <sfs_rename+0x1b4>
8000aa5c:	0055a80a 	movz	s5,v0,s5
sfs_rename2_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:902
	if ((ret =
	     sfs_dirent_search_nolock(sfs, sin, name, &ino, &slot1,
				      NULL)) != 0) {
		return ret;
	}
	if ((ret =
8000aa60:	27a2001c 	addiu	v0,sp,28
8000aa64:	02802021 	move	a0,s4
8000aa68:	02402821 	move	a1,s2
8000aa6c:	02603021 	move	a2,s3
8000aa70:	00003821 	move	a3,zero
8000aa74:	afa00010 	sw	zero,16(sp)
8000aa78:	0c001e84 	jal	80007a10 <sfs_dirent_search_nolock>
8000aa7c:	afa20014 	sw	v0,20(sp)
8000aa80:	0040a821 	move	s5,v0
8000aa84:	2402fffe 	li	v0,-2
8000aa88:	12a20007 	beq	s5,v0,8000aaa8 <sfs_rename+0x39c>
8000aa8c:	2402ffef 	li	v0,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:905
	     sfs_dirent_search_nolock(sfs, newsin, new_name, NULL, NULL,
				      &slot2)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000aa90:	08002a2e 	j	8000a8b8 <sfs_rename+0x1ac>
8000aa94:	0055a80a 	movz	s5,v0,s5
trylock_sin():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:26
	if (!SFSInodeRemoved(sin)) {
		down(&(sin->sem));
		if (!SFSInodeRemoved(sin)) {
			return 0;
		}
		up(&(sin->sem));
8000aa98:	0c006725 	jal	80019c94 <up>
8000aa9c:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:905
		return ret;
	}
	if ((ret =
	     sfs_dirent_search_nolock(sfs, newsin, new_name, NULL, NULL,
				      &slot2)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
8000aaa0:	08002a30 	j	8000a8c0 <sfs_rename+0x1b4>
8000aaa4:	2415fffe 	li	s5,-2
sfs_rename2_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:909
	}

	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
8000aaa8:	8fa60020 	lw	a2,32(sp)
8000aaac:	02802021 	move	a0,s4
8000aab0:	0c00250f 	jal	8000943c <sfs_load_inode>
8000aab4:	27a50018 	addiu	a1,sp,24
8000aab8:	1440ff7f 	bnez	v0,8000a8b8 <sfs_rename+0x1ac>
8000aabc:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:913
		return ret;
	}

	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000aac0:	8fbe0018 	lw	s8,24(sp)
8000aac4:	13c00063 	beqz	s8,8000ac54 <sfs_rename+0x548>
8000aac8:	24021237 	li	v0,4663
8000aacc:	8fc30038 	lw	v1,56(s8)
8000aad0:	14620060 	bne	v1,v0,8000ac54 <sfs_rename+0x548>
8000aad4:	8fa60024 	lw	a2,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:914
	if ((ret = sfs_dirent_unlink_nolock(sfs, sin, slot1, lnksin)) != 0) {
8000aad8:	02802021 	move	a0,s4
8000aadc:	02002821 	move	a1,s0
8000aae0:	0c0020fc 	jal	800083f0 <sfs_dirent_unlink_nolock>
8000aae4:	03c03821 	move	a3,s8
8000aae8:	1440001c 	bnez	v0,8000ab5c <sfs_rename+0x450>
8000aaec:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:918
		goto out;
	}

	int isdir = (lnksin->din->type == SFS_TYPE_DIR);
8000aaf0:	8fc20000 	lw	v0,0(s8)
8000aaf4:	94430008 	lhu	v1,8(v0)
8000aaf8:	38630002 	xori	v1,v1,0x2
8000aafc:	2c630001 	sltiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:921

	/* remove '..' link from old parent */
	if (isdir) {
8000ab00:	54600044 	bnezl	v1,8000ac14 <sfs_rename+0x508>
8000ab04:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:926
		sfs_nlinks_dec_nolock(sin);
	}

	/* if link fails try to recover its old link */
	if ((ret =
8000ab08:	8fa6001c 	lw	a2,28(sp)
8000ab0c:	02802021 	move	a0,s4
8000ab10:	02402821 	move	a1,s2
8000ab14:	03c03821 	move	a3,s8
8000ab18:	afa30028 	sw	v1,40(sp)
8000ab1c:	0c002122 	jal	80008488 <sfs_dirent_link_nolock>
8000ab20:	afb30010 	sw	s3,16(sp)
8000ab24:	0040a821 	move	s5,v0
8000ab28:	1440002a 	bnez	v0,8000abd4 <sfs_rename+0x4c8>
8000ab2c:	8fa30028 	lw	v1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:938
			}
		}
		goto out;
	}

	if (isdir) {
8000ab30:	1060000a 	beqz	v1,8000ab5c <sfs_rename+0x450>
8000ab34:	24020001 	li	v0,1
sfs_nlinks_inc_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
8000ab38:	8e430000 	lw	v1,0(s2)
sfs_dirinfo_set_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:754

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
	sin->din->dirinfo.parent = parent->ino;
8000ab3c:	8fc40000 	lw	a0,0(s8)
8000ab40:	8e450004 	lw	a1,4(s2)
sfs_nlinks_inc_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
8000ab44:	9466000a 	lhu	a2,10(v1)
8000ab48:	ae42000c 	sw	v0,12(s2)
8000ab4c:	24c60001 	addiu	a2,a2,1
8000ab50:	a466000a 	sh	a2,10(v1)
sfs_dirinfo_set_parent():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:753
}

static inline void
sfs_dirinfo_set_parent(struct sfs_inode *sin, struct sfs_inode *parent)
{
	sin->dirty = 1;
8000ab54:	afc2000c 	sw	v0,12(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:754
	sin->din->dirinfo.parent = parent->ino;
8000ab58:	ac850004 	sw	a1,4(a0)
sfs_rename2_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:947
		/* update parent relationship */
		sfs_dirinfo_set_parent(lnksin, newsin);
	}

out:
	vop_ref_dec(link_node);
8000ab5c:	0c001171 	jal	800045c4 <inode_ref_dec>
8000ab60:	8fa40018 	lw	a0,24(sp)
8000ab64:	08002a2e 	j	8000a8b8 <sfs_rename+0x1ac>
8000ab68:	00000000 	nop
sfs_rename1_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:888
	if ((ret =
	     sfs_dirent_search_nolock(sfs, sin, new_name, NULL, NULL,
				      NULL)) != -E_NOENT) {
		return (ret != 0) ? ret : -E_EXISTS;
	}
	return sfs_dirent_write_nolock(sfs, sin, slot, ino, new_name);
8000ab6c:	8fa60024 	lw	a2,36(sp)
8000ab70:	8fa70020 	lw	a3,32(sp)
8000ab74:	02802021 	move	a0,s4
8000ab78:	02002821 	move	a1,s0
8000ab7c:	0c001edf 	jal	80007b7c <sfs_dirent_write_nolock>
8000ab80:	afb30010 	sw	s3,16(sp)
8000ab84:	08002a30 	j	8000a8c0 <sfs_rename+0x1b4>
8000ab88:	0040a821 	move	s5,v0
sfs_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:966
	}
	if (strcmp(new_name, ".") == 0 || strcmp(new_name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
	struct sfs_inode *sin = vop_info(node, sfs_inode), *newsin =
8000ab8c:	24842030 	addiu	a0,a0,8240
8000ab90:	240503c6 	li	a1,966
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:967
	    vop_info(new_node, sfs_inode);
8000ab94:	3c068002 	lui	a2,0x8002
8000ab98:	3c078002 	lui	a3,0x8002
8000ab9c:	24c60e48 	addiu	a2,a2,3656
8000aba0:	0c006b13 	jal	8001ac4c <__panic>
8000aba4:	24e7203c 	addiu	a3,a3,8252
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:965
		return -E_INVAL;
	}
	if (strcmp(new_name, ".") == 0 || strcmp(new_name, "..") == 0) {
		return -E_EXISTS;
	}
	struct sfs_fs *sfs = fsop_info(vop_fs(node), sfs);
8000aba8:	3c048002 	lui	a0,0x8002
8000abac:	3c068002 	lui	a2,0x8002
8000abb0:	3c078002 	lui	a3,0x8002
8000abb4:	24842030 	addiu	a0,a0,8240
8000abb8:	240503c5 	li	a1,965
8000abbc:	24c60e48 	addiu	a2,a2,3656
8000abc0:	0c006b13 	jal	8001ac4c <__panic>
8000abc4:	24e71e8c 	addiu	a3,a3,7820
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:967
	struct sfs_inode *sin = vop_info(node, sfs_inode), *newsin =
	    vop_info(new_node, sfs_inode);
8000abc8:	24842030 	addiu	a0,a0,8240
8000abcc:	08002ae5 	j	8000ab94 <sfs_rename+0x488>
8000abd0:	240503c7 	li	a1,967
sfs_rename2_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:929

	/* if link fails try to recover its old link */
	if ((ret =
	     sfs_dirent_link_nolock(sfs, newsin, slot2, lnksin,
				    new_name)) != 0) {
		if (sfs_dirent_link_nolock_check(sfs, sin, slot1, lnksin, name)
8000abd4:	8fa60024 	lw	a2,36(sp)
8000abd8:	02802021 	move	a0,s4
8000abdc:	02002821 	move	a1,s0
8000abe0:	03c03821 	move	a3,s8
8000abe4:	0c002122 	jal	80008488 <sfs_dirent_link_nolock>
8000abe8:	afb10010 	sw	s1,16(sp)
8000abec:	14400010 	bnez	v0,8000ac30 <sfs_rename+0x524>
8000abf0:	8fa30028 	lw	v1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:931
		    == 0) {
			if (isdir) {
8000abf4:	1060ffd9 	beqz	v1,8000ab5c <sfs_rename+0x450>
8000abf8:	24030001 	li	v1,1
sfs_nlinks_inc_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:741
	return 0;
}

static inline void sfs_nlinks_inc_nolock(struct sfs_inode *sin)
{
	sin->dirty = 1, ++sin->din->nlinks;
8000abfc:	8e020000 	lw	v0,0(s0)
8000ac00:	ae03000c 	sw	v1,12(s0)
8000ac04:	9443000a 	lhu	v1,10(v0)
8000ac08:	24630001 	addiu	v1,v1,1
8000ac0c:	08002ad7 	j	8000ab5c <sfs_rename+0x450>
8000ac10:	a443000a 	sh	v1,10(v0)
sfs_nlinks_dec_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:746
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000ac14:	9444000a 	lhu	a0,10(v0)
8000ac18:	10800012 	beqz	a0,8000ac64 <sfs_rename+0x558>
8000ac1c:	2484ffff 	addiu	a0,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:747
	sin->dirty = 1, --sin->din->nlinks;
8000ac20:	24050001 	li	a1,1
8000ac24:	ae05000c 	sw	a1,12(s0)
8000ac28:	08002ac2 	j	8000ab08 <sfs_rename+0x3fc>
8000ac2c:	a444000a 	sh	a0,10(v0)
sfs_rename2_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:929

	/* if link fails try to recover its old link */
	if ((ret =
	     sfs_dirent_link_nolock(sfs, newsin, slot2, lnksin,
				    new_name)) != 0) {
		if (sfs_dirent_link_nolock_check(sfs, sin, slot1, lnksin, name)
8000ac30:	3c048002 	lui	a0,0x8002
8000ac34:	3c068002 	lui	a2,0x8002
8000ac38:	24842030 	addiu	a0,a0,8240
8000ac3c:	240503a1 	li	a1,929
8000ac40:	24c62438 	addiu	a2,a2,9272
8000ac44:	0c006b33 	jal	8001accc <__warn>
8000ac48:	00403821 	move	a3,v0
8000ac4c:	08002ad7 	j	8000ab5c <sfs_rename+0x450>
8000ac50:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:913
	struct inode *link_node;
	if ((ret = sfs_load_inode(sfs, &link_node, ino)) != 0) {
		return ret;
	}

	struct sfs_inode *lnksin = vop_info(link_node, sfs_inode);
8000ac54:	3c048002 	lui	a0,0x8002
8000ac58:	24842030 	addiu	a0,a0,8240
8000ac5c:	08002ae5 	j	8000ab94 <sfs_rename+0x488>
8000ac60:	24050391 	li	a1,913
sfs_nlinks_dec_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_inode.c:746
	sin->dirty = 1, ++sin->din->nlinks;
}

static inline void sfs_nlinks_dec_nolock(struct sfs_inode *sin)
{
	assert(sin->din->nlinks != 0);
8000ac64:	3c048002 	lui	a0,0x8002
8000ac68:	3c068002 	lui	a2,0x8002
8000ac6c:	3c078002 	lui	a3,0x8002
8000ac70:	24842030 	addiu	a0,a0,8240
8000ac74:	240502ea 	li	a1,746
8000ac78:	24c60e48 	addiu	a2,a2,3656
8000ac7c:	0c006b13 	jal	8001ac4c <__panic>
8000ac80:	24e72420 	addiu	a3,a3,9248

8000ac84 <sfs_rwblock_nolock>:
sfs_rwblock_nolock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:12
#include <assert.h>

static int
sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write,
		   bool check)
{
8000ac84:	27bdffd0 	addiu	sp,sp,-48
8000ac88:	afb10028 	sw	s1,40(sp)
8000ac8c:	afb00024 	sw	s0,36(sp)
8000ac90:	afbf002c 	sw	ra,44(sp)
8000ac94:	00c01021 	move	v0,a2
8000ac98:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:13
	assert((blkno != 0 || !check) && blkno < sfs->super.blocks);
8000ac9c:	14c00004 	bnez	a2,8000acb0 <sfs_rwblock_nolock+0x2c>
8000aca0:	00e08821 	move	s1,a3
8000aca4:	8fa30040 	lw	v1,64(sp)
8000aca8:	14600013 	bnez	v1,8000acf8 <sfs_rwblock_nolock+0x74>
8000acac:	3c048002 	lui	a0,0x8002
8000acb0:	8e030004 	lw	v1,4(s0)
8000acb4:	0043182b 	sltu	v1,v0,v1
8000acb8:	1060000e 	beqz	v1,8000acf4 <sfs_rwblock_nolock+0x70>
8000acbc:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:14
	struct iobuf __iob, *iob =
8000acc0:	24061000 	li	a2,4096
8000acc4:	0c003347 	jal	8000cd1c <iobuf_init>
8000acc8:	00023b00 	sll	a3,v0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:16
	    iobuf_init(&__iob, buf, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(sfs->dev, iob, write);
8000accc:	8e04002c 	lw	a0,44(s0)
8000acd0:	00402821 	move	a1,v0
8000acd4:	8c820028 	lw	v0,40(a0)
8000acd8:	0040f809 	jalr	v0
8000acdc:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:17
}
8000ace0:	8fbf002c 	lw	ra,44(sp)
8000ace4:	8fb10028 	lw	s1,40(sp)
8000ace8:	8fb00024 	lw	s0,36(sp)
8000acec:	03e00008 	jr	ra
8000acf0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:13

static int
sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write,
		   bool check)
{
	assert((blkno != 0 || !check) && blkno < sfs->super.blocks);
8000acf4:	3c048002 	lui	a0,0x8002
8000acf8:	3c068002 	lui	a2,0x8002
8000acfc:	3c078002 	lui	a3,0x8002
8000ad00:	24842454 	addiu	a0,a0,9300
8000ad04:	2405000d 	li	a1,13
8000ad08:	24c60e48 	addiu	a2,a2,3656
8000ad0c:	0c006b13 	jal	8001ac4c <__panic>
8000ad10:	24e72460 	addiu	a3,a3,9312

8000ad14 <sfs_rwblock>:
sfs_rwblock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:22
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
	    bool write)
{
8000ad14:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:23
	int ret = 0;
8000ad18:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:22
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
	    bool write)
{
8000ad1c:	afb30030 	sw	s3,48(sp)
8000ad20:	afb2002c 	sw	s2,44(sp)
8000ad24:	afb10028 	sw	s1,40(sp)
8000ad28:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:24
	int ret = 0;
	lock_sfs_io(sfs);
8000ad2c:	afa2001c 	sw	v0,28(sp)
8000ad30:	afa70018 	sw	a3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:22
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
	    bool write)
{
8000ad34:	afbf003c 	sw	ra,60(sp)
8000ad38:	afb50038 	sw	s5,56(sp)
8000ad3c:	afb40034 	sw	s4,52(sp)
8000ad40:	00809021 	move	s2,a0
8000ad44:	00a08821 	move	s1,a1
8000ad48:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:24
	int ret = 0;
	lock_sfs_io(sfs);
8000ad4c:	0c002c4c 	jal	8000b130 <lock_sfs_io>
8000ad50:	8fb30050 	lw	s3,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:26
	{
		while (nblks != 0) {
8000ad54:	8fa70018 	lw	a3,24(sp)
8000ad58:	10e0000e 	beqz	a3,8000ad94 <sfs_rwblock+0x80>
8000ad5c:	8fa2001c 	lw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:20
	    iobuf_init(&__iob, buf, SFS_BLKSIZE, blkno * SFS_BLKSIZE);
	return dop_io(sfs->dev, iob, write);
}

static int
sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks,
8000ad60:	00f0a821 	addu	s5,a3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:27
{
	int ret = 0;
	lock_sfs_io(sfs);
	{
		while (nblks != 0) {
			if ((ret =
8000ad64:	08002b5d 	j	8000ad74 <sfs_rwblock+0x60>
8000ad68:	24140001 	li	s4,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:26
	    bool write)
{
	int ret = 0;
	lock_sfs_io(sfs);
	{
		while (nblks != 0) {
8000ad6c:	12150009 	beq	s0,s5,8000ad94 <sfs_rwblock+0x80>
8000ad70:	26311000 	addiu	s1,s1,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:27
			if ((ret =
8000ad74:	02003021 	move	a2,s0
8000ad78:	02202821 	move	a1,s1
8000ad7c:	02402021 	move	a0,s2
8000ad80:	02603821 	move	a3,s3
8000ad84:	0c002b21 	jal	8000ac84 <sfs_rwblock_nolock>
8000ad88:	afb40010 	sw	s4,16(sp)
8000ad8c:	1040fff7 	beqz	v0,8000ad6c <sfs_rwblock+0x58>
8000ad90:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:36
			}
			blkno++, nblks--;
			buf += SFS_BLKSIZE;
		}
	}
	unlock_sfs_io(sfs);
8000ad94:	02402021 	move	a0,s2
8000ad98:	0c002c52 	jal	8000b148 <unlock_sfs_io>
8000ad9c:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:38
	return ret;
}
8000ada0:	8fbf003c 	lw	ra,60(sp)
8000ada4:	8fa2001c 	lw	v0,28(sp)
8000ada8:	8fb50038 	lw	s5,56(sp)
8000adac:	8fb40034 	lw	s4,52(sp)
8000adb0:	8fb30030 	lw	s3,48(sp)
8000adb4:	8fb2002c 	lw	s2,44(sp)
8000adb8:	8fb10028 	lw	s1,40(sp)
8000adbc:	8fb00024 	lw	s0,36(sp)
8000adc0:	03e00008 	jr	ra
8000adc4:	27bd0040 	addiu	sp,sp,64

8000adc8 <sfs_rblock>:
sfs_rblock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:41

int sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks)
{
8000adc8:	27bdffe0 	addiu	sp,sp,-32
8000adcc:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:42
	return sfs_rwblock(sfs, buf, blkno, nblks, 0);
8000add0:	0c002b45 	jal	8000ad14 <sfs_rwblock>
8000add4:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:43
}
8000add8:	8fbf001c 	lw	ra,28(sp)
8000addc:	03e00008 	jr	ra
8000ade0:	27bd0020 	addiu	sp,sp,32

8000ade4 <sfs_wblock>:
sfs_wblock():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:46

int sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks)
{
8000ade4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:47
	return sfs_rwblock(sfs, buf, blkno, nblks, 1);
8000ade8:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:46
{
	return sfs_rwblock(sfs, buf, blkno, nblks, 0);
}

int sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks)
{
8000adec:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:47
	return sfs_rwblock(sfs, buf, blkno, nblks, 1);
8000adf0:	0c002b45 	jal	8000ad14 <sfs_rwblock>
8000adf4:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:48
}
8000adf8:	8fbf001c 	lw	ra,28(sp)
8000adfc:	03e00008 	jr	ra
8000ae00:	27bd0020 	addiu	sp,sp,32

8000ae04 <sfs_rbuf>:
sfs_rbuf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:53

int
sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000ae04:	27bdffc8 	addiu	sp,sp,-56
8000ae08:	afb10024 	sw	s1,36(sp)
8000ae0c:	8fb10048 	lw	s1,72(sp)
8000ae10:	afb3002c 	sw	s3,44(sp)
8000ae14:	afb20028 	sw	s2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:54
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000ae18:	2e221000 	sltiu	v0,s1,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:53
}

int
sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000ae1c:	afb00020 	sw	s0,32(sp)
8000ae20:	afbf0034 	sw	ra,52(sp)
8000ae24:	afb40030 	sw	s4,48(sp)
8000ae28:	00808021 	move	s0,a0
8000ae2c:	00a09821 	move	s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:54
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000ae30:	10400021 	beqz	v0,8000aeb8 <sfs_rbuf+0xb4>
8000ae34:	00c09021 	move	s2,a2
8000ae38:	02261021 	addu	v0,s1,a2
8000ae3c:	2c421001 	sltiu	v0,v0,4097
8000ae40:	5040001e 	beqzl	v0,8000aebc <sfs_rbuf+0xb8>
8000ae44:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:57
	       && offset + len <= SFS_BLKSIZE);
	int ret;
	lock_sfs_io(sfs);
8000ae48:	0c002c4c 	jal	8000b130 <lock_sfs_io>
8000ae4c:	afa70018 	sw	a3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:59
	{
		if ((ret =
8000ae50:	8fa70018 	lw	a3,24(sp)
8000ae54:	8e050038 	lw	a1,56(s0)
8000ae58:	24020001 	li	v0,1
8000ae5c:	00e03021 	move	a2,a3
8000ae60:	02002021 	move	a0,s0
8000ae64:	00003821 	move	a3,zero
8000ae68:	0c002b21 	jal	8000ac84 <sfs_rwblock_nolock>
8000ae6c:	afa20010 	sw	v0,16(sp)
8000ae70:	14400006 	bnez	v0,8000ae8c <sfs_rbuf+0x88>
8000ae74:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:62
		     sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 0,
					1)) == 0) {
			memcpy(buf, sfs->sfs_buffer + offset, len);
8000ae78:	8e050038 	lw	a1,56(s0)
8000ae7c:	02602021 	move	a0,s3
8000ae80:	02403021 	move	a2,s2
8000ae84:	0c005c84 	jal	80017210 <memcpy>
8000ae88:	00b12821 	addu	a1,a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:65
		}
	}
	unlock_sfs_io(sfs);
8000ae8c:	0c002c52 	jal	8000b148 <unlock_sfs_io>
8000ae90:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:67
	return ret;
}
8000ae94:	8fbf0034 	lw	ra,52(sp)
8000ae98:	02801021 	move	v0,s4
8000ae9c:	8fb3002c 	lw	s3,44(sp)
8000aea0:	8fb40030 	lw	s4,48(sp)
8000aea4:	8fb20028 	lw	s2,40(sp)
8000aea8:	8fb10024 	lw	s1,36(sp)
8000aeac:	8fb00020 	lw	s0,32(sp)
8000aeb0:	03e00008 	jr	ra
8000aeb4:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:54

int
sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000aeb8:	3c048002 	lui	a0,0x8002
8000aebc:	3c068002 	lui	a2,0x8002
8000aec0:	3c078002 	lui	a3,0x8002
8000aec4:	24842454 	addiu	a0,a0,9300
8000aec8:	24050037 	li	a1,55
8000aecc:	24c60e48 	addiu	a2,a2,3656
8000aed0:	0c006b13 	jal	8001ac4c <__panic>
8000aed4:	24e72494 	addiu	a3,a3,9364

8000aed8 <sfs_wbuf>:
sfs_wbuf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:72
}

int
sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000aed8:	27bdffc0 	addiu	sp,sp,-64
8000aedc:	afb10028 	sw	s1,40(sp)
8000aee0:	8fb10050 	lw	s1,80(sp)
8000aee4:	afb50038 	sw	s5,56(sp)
8000aee8:	afb30030 	sw	s3,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:73
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000aeec:	2e221000 	sltiu	v0,s1,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:72
}

int
sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
8000aef0:	afb2002c 	sw	s2,44(sp)
8000aef4:	afb00024 	sw	s0,36(sp)
8000aef8:	afbf003c 	sw	ra,60(sp)
8000aefc:	afb40034 	sw	s4,52(sp)
8000af00:	00808021 	move	s0,a0
8000af04:	00a0a821 	move	s5,a1
8000af08:	00c09821 	move	s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:73
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000af0c:	10400027 	beqz	v0,8000afac <sfs_wbuf+0xd4>
8000af10:	00e09021 	move	s2,a3
8000af14:	02261021 	addu	v0,s1,a2
8000af18:	2c421001 	sltiu	v0,v0,4097
8000af1c:	50400024 	beqzl	v0,8000afb0 <sfs_wbuf+0xd8>
8000af20:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:76
	       && offset + len <= SFS_BLKSIZE);
	int ret;
	lock_sfs_io(sfs);
8000af24:	0c002c4c 	jal	8000b130 <lock_sfs_io>
8000af28:	24140001 	li	s4,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:78
	{
		if ((ret =
8000af2c:	8e050038 	lw	a1,56(s0)
8000af30:	02002021 	move	a0,s0
8000af34:	02403021 	move	a2,s2
8000af38:	00003821 	move	a3,zero
8000af3c:	0c002b21 	jal	8000ac84 <sfs_rwblock_nolock>
8000af40:	afb40010 	sw	s4,16(sp)
8000af44:	5440000d 	bnezl	v0,8000af7c <sfs_wbuf+0xa4>
8000af48:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:81
		     sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 0,
					1)) == 0) {
			memcpy(sfs->sfs_buffer + offset, buf, len);
8000af4c:	8e040038 	lw	a0,56(s0)
8000af50:	02a02821 	move	a1,s5
8000af54:	02603021 	move	a2,s3
8000af58:	0c005c84 	jal	80017210 <memcpy>
8000af5c:	00912021 	addu	a0,a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:82
			ret =
8000af60:	8e050038 	lw	a1,56(s0)
8000af64:	02002021 	move	a0,s0
8000af68:	02403021 	move	a2,s2
8000af6c:	24070001 	li	a3,1
8000af70:	0c002b21 	jal	8000ac84 <sfs_rwblock_nolock>
8000af74:	afb40010 	sw	s4,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:87
			    sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1,
					       1);
		}
	}
	unlock_sfs_io(sfs);
8000af78:	02002021 	move	a0,s0
8000af7c:	0c002c52 	jal	8000b148 <unlock_sfs_io>
8000af80:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:89
	return ret;
}
8000af84:	8fbf003c 	lw	ra,60(sp)
8000af88:	8fa20018 	lw	v0,24(sp)
8000af8c:	8fb50038 	lw	s5,56(sp)
8000af90:	8fb40034 	lw	s4,52(sp)
8000af94:	8fb30030 	lw	s3,48(sp)
8000af98:	8fb2002c 	lw	s2,44(sp)
8000af9c:	8fb10028 	lw	s1,40(sp)
8000afa0:	8fb00024 	lw	s0,36(sp)
8000afa4:	03e00008 	jr	ra
8000afa8:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:73

int
sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno,
	 off_t offset)
{
	assert(offset >= 0 && offset < SFS_BLKSIZE
8000afac:	3c048002 	lui	a0,0x8002
8000afb0:	3c068002 	lui	a2,0x8002
8000afb4:	3c078002 	lui	a3,0x8002
8000afb8:	24842454 	addiu	a0,a0,9300
8000afbc:	2405004a 	li	a1,74
8000afc0:	24c60e48 	addiu	a2,a2,3656
8000afc4:	0c006b13 	jal	8001ac4c <__panic>
8000afc8:	24e72494 	addiu	a3,a3,9364

8000afcc <sfs_sync_super>:
sfs_sync_super():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:92
	unlock_sfs_io(sfs);
	return ret;
}

int sfs_sync_super(struct sfs_fs *sfs)
{
8000afcc:	27bdffd8 	addiu	sp,sp,-40
8000afd0:	afb00020 	sw	s0,32(sp)
8000afd4:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:94
	int ret;
	lock_sfs_io(sfs);
8000afd8:	0c002c4c 	jal	8000b130 <lock_sfs_io>
8000afdc:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:96
	{
		memset(sfs->sfs_buffer, 0, SFS_BLKSIZE);
8000afe0:	8e040038 	lw	a0,56(s0)
8000afe4:	00002821 	move	a1,zero
8000afe8:	0c005c5a 	jal	80017168 <memset>
8000afec:	24061000 	li	a2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:97
		memcpy(sfs->sfs_buffer, &(sfs->super), sizeof(sfs->super));
8000aff0:	8e040038 	lw	a0,56(s0)
8000aff4:	02002821 	move	a1,s0
8000aff8:	0c005c84 	jal	80017210 <memcpy>
8000affc:	2406002c 	li	a2,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:98
		ret =
8000b000:	8e050038 	lw	a1,56(s0)
8000b004:	02002021 	move	a0,s0
8000b008:	00003021 	move	a2,zero
8000b00c:	24070001 	li	a3,1
8000b010:	0c002b21 	jal	8000ac84 <sfs_rwblock_nolock>
8000b014:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:102
		    sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1,
				       0);
	}
	unlock_sfs_io(sfs);
8000b018:	02002021 	move	a0,s0
8000b01c:	0c002c52 	jal	8000b148 <unlock_sfs_io>
8000b020:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:104
	return ret;
}
8000b024:	8fbf0024 	lw	ra,36(sp)
8000b028:	8fa20018 	lw	v0,24(sp)
8000b02c:	8fb00020 	lw	s0,32(sp)
8000b030:	03e00008 	jr	ra
8000b034:	27bd0028 	addiu	sp,sp,40

8000b038 <sfs_sync_freemap>:
sfs_sync_freemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:108

int sfs_sync_freemap(struct sfs_fs *sfs)
{
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
8000b038:	8c870004 	lw	a3,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:107
	unlock_sfs_io(sfs);
	return ret;
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
8000b03c:	27bdffe0 	addiu	sp,sp,-32
8000b040:	afb00018 	sw	s0,24(sp)
8000b044:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:109
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b048:	8c840030 	lw	a0,48(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:108
	return ret;
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
8000b04c:	24e77fff 	addiu	a3,a3,32767
8000b050:	00073bc2 	srl	a3,a3,0xf
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:109
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b054:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:107
	unlock_sfs_io(sfs);
	return ret;
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
8000b058:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:109
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b05c:	0c00193f 	jal	800064fc <bitmap_getdata>
8000b060:	afa70010 	sw	a3,16(sp)
8000b064:	02002021 	move	a0,s0
8000b068:	8fa70010 	lw	a3,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:111
			  SFS_BLKN_FREEMAP, nblks);
}
8000b06c:	8fbf001c 	lw	ra,28(sp)
8000b070:	8fb00018 	lw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:109
}

int sfs_sync_freemap(struct sfs_fs *sfs)
{
	uint32_t nblks = sfs_freemap_blocks(&(sfs->super));
	return sfs_wblock(sfs, bitmap_getdata(sfs->freemap, NULL),
8000b074:	00402821 	move	a1,v0
8000b078:	24060002 	li	a2,2
8000b07c:	08002b79 	j	8000ade4 <sfs_wblock>
8000b080:	27bd0020 	addiu	sp,sp,32

8000b084 <sfs_clear_block>:
sfs_clear_block():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:114
			  SFS_BLKN_FREEMAP, nblks);
}

int sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks)
{
8000b084:	27bdffd0 	addiu	sp,sp,-48
8000b088:	afb1001c 	sw	s1,28(sp)
8000b08c:	00808821 	move	s1,a0
8000b090:	afb30024 	sw	s3,36(sp)
8000b094:	afb00018 	sw	s0,24(sp)
8000b098:	00c09821 	move	s3,a2
8000b09c:	afbf002c 	sw	ra,44(sp)
8000b0a0:	afb40028 	sw	s4,40(sp)
8000b0a4:	afb20020 	sw	s2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:116
	int ret;
	lock_sfs_io(sfs);
8000b0a8:	0c002c4c 	jal	8000b130 <lock_sfs_io>
8000b0ac:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:118
	{
		memset(sfs->sfs_buffer, 0, SFS_BLKSIZE);
8000b0b0:	8e240038 	lw	a0,56(s1)
8000b0b4:	00002821 	move	a1,zero
8000b0b8:	0c005c5a 	jal	80017168 <memset>
8000b0bc:	24061000 	li	a2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:119
		while (nblks != 0) {
8000b0c0:	1260000e 	beqz	s3,8000b0fc <sfs_clear_block+0x78>
8000b0c4:	02709821 	addu	s3,s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:120
			if ((ret =
8000b0c8:	08002c36 	j	8000b0d8 <sfs_clear_block+0x54>
8000b0cc:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:119
{
	int ret;
	lock_sfs_io(sfs);
	{
		memset(sfs->sfs_buffer, 0, SFS_BLKSIZE);
		while (nblks != 0) {
8000b0d0:	1213000a 	beq	s0,s3,8000b0fc <sfs_clear_block+0x78>
8000b0d4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:120
			if ((ret =
8000b0d8:	8e250038 	lw	a1,56(s1)
8000b0dc:	02003021 	move	a2,s0
8000b0e0:	02202021 	move	a0,s1
8000b0e4:	24070001 	li	a3,1
8000b0e8:	0c002b21 	jal	8000ac84 <sfs_rwblock_nolock>
8000b0ec:	afb20010 	sw	s2,16(sp)
8000b0f0:	0040a021 	move	s4,v0
8000b0f4:	1040fff6 	beqz	v0,8000b0d0 <sfs_clear_block+0x4c>
8000b0f8:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:128
				break;
			}
			blkno++, nblks--;
		}
	}
	unlock_sfs_io(sfs);
8000b0fc:	0c002c52 	jal	8000b148 <unlock_sfs_io>
8000b100:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_io.c:130
	return ret;
}
8000b104:	8fbf002c 	lw	ra,44(sp)
8000b108:	02801021 	move	v0,s4
8000b10c:	8fb30024 	lw	s3,36(sp)
8000b110:	8fb40028 	lw	s4,40(sp)
8000b114:	8fb20020 	lw	s2,32(sp)
8000b118:	8fb1001c 	lw	s1,28(sp)
8000b11c:	8fb00018 	lw	s0,24(sp)
8000b120:	03e00008 	jr	ra
8000b124:	27bd0030 	addiu	sp,sp,48

8000b128 <lock_sfs_fs>:
lock_sfs_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_lock.c:7
#include <sem.h>
#include <sfs.h>

void lock_sfs_fs(struct sfs_fs *sfs)
{
	down(&(sfs->fs_sem));
8000b128:	08006727 	j	80019c9c <down>
8000b12c:	2484003c 	addiu	a0,a0,60

8000b130 <lock_sfs_io>:
lock_sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_lock.c:12
}

void lock_sfs_io(struct sfs_fs *sfs)
{
	down(&(sfs->io_sem));
8000b130:	08006727 	j	80019c9c <down>
8000b134:	24840050 	addiu	a0,a0,80

8000b138 <lock_sfs_mutex>:
lock_sfs_mutex():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_lock.c:17
}

void lock_sfs_mutex(struct sfs_fs *sfs)
{
	down(&(sfs->mutex_sem));
8000b138:	08006727 	j	80019c9c <down>
8000b13c:	24840064 	addiu	a0,a0,100

8000b140 <unlock_sfs_fs>:
unlock_sfs_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_lock.c:22
}

void unlock_sfs_fs(struct sfs_fs *sfs)
{
	up(&(sfs->fs_sem));
8000b140:	08006725 	j	80019c94 <up>
8000b144:	2484003c 	addiu	a0,a0,60

8000b148 <unlock_sfs_io>:
unlock_sfs_io():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_lock.c:27
}

void unlock_sfs_io(struct sfs_fs *sfs)
{
	up(&(sfs->io_sem));
8000b148:	08006725 	j	80019c94 <up>
8000b14c:	24840050 	addiu	a0,a0,80

8000b150 <unlock_sfs_mutex>:
unlock_sfs_mutex():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/sfs_lock.c:32
}

void unlock_sfs_mutex(struct sfs_fs *sfs)
{
	up(&(sfs->mutex_sem));
8000b150:	08006725 	j	80019c94 <up>
8000b154:	24840064 	addiu	a0,a0,100

8000b158 <get_filemap>:
get_filemap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:21

#define testfd(fd)                          ((fd) >= 0 && (fd) < FS_STRUCT_NENTRY)

static struct file *get_filemap(void)
{
	struct fs_struct *fs_struct = pls_read(current)->fs_struct;
8000b158:	3c028015 	lui	v0,0x8015
8000b15c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:20
#include <vmm.h>

#define testfd(fd)                          ((fd) >= 0 && (fd) < FS_STRUCT_NENTRY)

static struct file *get_filemap(void)
{
8000b160:	27bdffe8 	addiu	sp,sp,-24
8000b164:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:21
	struct fs_struct *fs_struct = pls_read(current)->fs_struct;
8000b168:	8c4200bc 	lw	v0,188(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:22
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000b16c:	10400007 	beqz	v0,8000b18c <get_filemap+0x34>
8000b170:	3c048002 	lui	a0,0x8002
atomic_read():
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000b174:	8c430008 	lw	v1,8(v0)
get_filemap():
8000b178:	18600004 	blez	v1,8000b18c <get_filemap+0x34>
8000b17c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:24
	return fs_struct->filemap;
}
8000b180:	8c420004 	lw	v0,4(v0)
8000b184:	03e00008 	jr	ra
8000b188:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:22
#define testfd(fd)                          ((fd) >= 0 && (fd) < FS_STRUCT_NENTRY)

static struct file *get_filemap(void)
{
	struct fs_struct *fs_struct = pls_read(current)->fs_struct;
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000b18c:	3c068002 	lui	a2,0x8002
8000b190:	3c078002 	lui	a3,0x8002
8000b194:	248424d8 	addiu	a0,a0,9432
8000b198:	24050016 	li	a1,22
8000b19c:	24c60e48 	addiu	a2,a2,3656
8000b1a0:	0c006b13 	jal	8001ac4c <__panic>
8000b1a4:	24e724e0 	addiu	a3,a3,9440

8000b1a8 <filemap_alloc>:
filemap_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:37
		file->status = FD_NONE, file->fd = fd;
	}
}

static int filemap_alloc(int fd, struct file **file_store)
{
8000b1a8:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:38
	struct file *file = get_filemap();
8000b1ac:	afa40010 	sw	a0,16(sp)
8000b1b0:	afa50014 	sw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:37
		file->status = FD_NONE, file->fd = fd;
	}
}

static int filemap_alloc(int fd, struct file **file_store)
{
8000b1b4:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:38
	struct file *file = get_filemap();
8000b1b8:	0c002c56 	jal	8000b158 <get_filemap>
8000b1bc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:39
	if (fd == NO_FD) {
8000b1c0:	8fa40010 	lw	a0,16(sp)
8000b1c4:	3c03ffff 	lui	v1,0xffff
8000b1c8:	24636ad9 	addiu	v1,v1,27353
8000b1cc:	10830014 	beq	a0,v1,8000b220 <filemap_alloc+0x78>
8000b1d0:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:47
				goto found;
			}
		}
		return -E_MAX_OPEN;
	} else {
		if (testfd(fd)) {
8000b1d4:	2c830123 	sltiu	v1,a0,291
8000b1d8:	1060001e 	beqz	v1,8000b254 <filemap_alloc+0xac>
8000b1dc:	00041880 	sll	v1,a0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:48
			file += fd;
8000b1e0:	00042140 	sll	a0,a0,0x5
8000b1e4:	00832023 	subu	a0,a0,v1
8000b1e8:	00442021 	addu	a0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:49
			if (file->status == FD_NONE) {
8000b1ec:	8c820000 	lw	v0,0(a0)
8000b1f0:	14400008 	bnez	v0,8000b214 <filemap_alloc+0x6c>
8000b1f4:	2402fff0 	li	v0,-16
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000b1f8:	8c820018 	lw	v0,24(a0)
filemap_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:57
			return -E_BUSY;
		}
		return -E_INVAL;
	}
found:
	assert(fopen_count(file) == 0);
8000b1fc:	14400017 	bnez	v0,8000b25c <filemap_alloc+0xb4>
8000b200:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:58
	file->status = FD_INIT, file->node = NULL;
8000b204:	ac820000 	sw	v0,0(a0)
8000b208:	ac800014 	sw	zero,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:60
	*file_store = file;
	return 0;
8000b20c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:59
		return -E_INVAL;
	}
found:
	assert(fopen_count(file) == 0);
	file->status = FD_INIT, file->node = NULL;
	*file_store = file;
8000b210:	aca40000 	sw	a0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:61
	return 0;
}
8000b214:	8fbf001c 	lw	ra,28(sp)
8000b218:	03e00008 	jr	ra
8000b21c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:41
static int filemap_alloc(int fd, struct file **file_store)
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
			if (file->status == FD_NONE) {
8000b220:	8c430000 	lw	v1,0(v0)
8000b224:	1060fff4 	beqz	v1,8000b1f8 <filemap_alloc+0x50>
8000b228:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:40

static int filemap_alloc(int fd, struct file **file_store)
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b22c:	2444001c 	addiu	a0,v0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:36
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
	}
}

static int filemap_alloc(int fd, struct file **file_store)
8000b230:	24421fd4 	addiu	v0,v0,8148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:41
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
			if (file->status == FD_NONE) {
8000b234:	8c830000 	lw	v1,0(a0)
8000b238:	1060ffef 	beqz	v1,8000b1f8 <filemap_alloc+0x50>
8000b23c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:40

static int filemap_alloc(int fd, struct file **file_store)
{
	struct file *file = get_filemap();
	if (fd == NO_FD) {
		for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b240:	2484001c 	addiu	a0,a0,28
8000b244:	5482fffc 	bnel	a0,v0,8000b238 <filemap_alloc+0x90>
8000b248:	8c830000 	lw	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:45
			if (file->status == FD_NONE) {
				goto found;
			}
		}
		return -E_MAX_OPEN;
8000b24c:	08002c85 	j	8000b214 <filemap_alloc+0x6c>
8000b250:	2402ffe8 	li	v0,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:54
			if (file->status == FD_NONE) {
				goto found;
			}
			return -E_BUSY;
		}
		return -E_INVAL;
8000b254:	08002c85 	j	8000b214 <filemap_alloc+0x6c>
8000b258:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:57
	}
found:
	assert(fopen_count(file) == 0);
8000b25c:	3c048002 	lui	a0,0x8002
8000b260:	3c068002 	lui	a2,0x8002
8000b264:	3c078002 	lui	a3,0x8002
8000b268:	248424d8 	addiu	a0,a0,9432
8000b26c:	24050039 	li	a1,57
8000b270:	24c60e48 	addiu	a2,a2,3656
8000b274:	0c006b13 	jal	8001ac4c <__panic>
8000b278:	24e72510 	addiu	a3,a3,9488

8000b27c <filemap_free>:
filemap_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:65
	return 0;
}

static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b27c:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:64
	*file_store = file;
	return 0;
}

static void filemap_free(struct file *file)
{
8000b280:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:65
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b284:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:64
	*file_store = file;
	return 0;
}

static void filemap_free(struct file *file)
{
8000b288:	afb00010 	sw	s0,16(sp)
8000b28c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:65
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b290:	10430004 	beq	v0,v1,8000b2a4 <filemap_free+0x28>
8000b294:	00808021 	move	s0,a0
8000b298:	24030003 	li	v1,3
8000b29c:	54430019 	bnel	v0,v1,8000b304 <filemap_free+0x88>
8000b2a0:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000b2a4:	8e030018 	lw	v1,24(s0)
filemap_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:66
	assert(fopen_count(file) == 0);
8000b2a8:	1460000e 	bnez	v1,8000b2e4 <filemap_free+0x68>
8000b2ac:	24030003 	li	v1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:67
	if (file->status == FD_CLOSED) {
8000b2b0:	10430005 	beq	v0,v1,8000b2c8 <filemap_free+0x4c>
8000b2b4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:70
		vfs_close(file->node);
	}
	file->status = FD_NONE;
8000b2b8:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:71
}
8000b2bc:	8fb00010 	lw	s0,16(sp)
8000b2c0:	03e00008 	jr	ra
8000b2c4:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:68
static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
	assert(fopen_count(file) == 0);
	if (file->status == FD_CLOSED) {
		vfs_close(file->node);
8000b2c8:	0c0015ad 	jal	800056b4 <vfs_close>
8000b2cc:	8e040014 	lw	a0,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:71
	}
	file->status = FD_NONE;
}
8000b2d0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:70
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
	assert(fopen_count(file) == 0);
	if (file->status == FD_CLOSED) {
		vfs_close(file->node);
	}
	file->status = FD_NONE;
8000b2d4:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:71
}
8000b2d8:	8fb00010 	lw	s0,16(sp)
8000b2dc:	03e00008 	jr	ra
8000b2e0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:66
}

static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
	assert(fopen_count(file) == 0);
8000b2e4:	3c048002 	lui	a0,0x8002
8000b2e8:	3c068002 	lui	a2,0x8002
8000b2ec:	3c078002 	lui	a3,0x8002
8000b2f0:	248424d8 	addiu	a0,a0,9432
8000b2f4:	24050042 	li	a1,66
8000b2f8:	24c60e48 	addiu	a2,a2,3656
8000b2fc:	0c006b13 	jal	8001ac4c <__panic>
8000b300:	24e72510 	addiu	a3,a3,9488
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:65
	return 0;
}

static void filemap_free(struct file *file)
{
	assert(file->status == FD_INIT || file->status == FD_CLOSED);
8000b304:	3c068002 	lui	a2,0x8002
8000b308:	3c078002 	lui	a3,0x8002
8000b30c:	248424d8 	addiu	a0,a0,9432
8000b310:	24050041 	li	a1,65
8000b314:	24c60e48 	addiu	a2,a2,3656
8000b318:	0c006b13 	jal	8001ac4c <__panic>
8000b31c:	24e72528 	addiu	a3,a3,9512

8000b320 <filemap_init>:
filemap_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:30

void filemap_init(struct file *filemap)
{
	int fd;
	struct file *file = filemap;
	for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b320:	00001021 	move	v0,zero
8000b324:	24030123 	li	v1,291
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:32
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
8000b328:	ac82000c 	sw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:30

void filemap_init(struct file *filemap)
{
	int fd;
	struct file *file = filemap;
	for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b32c:	24420001 	addiu	v0,v0,1
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8000b330:	ac800018 	sw	zero,24(a0)
filemap_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:32
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
8000b334:	ac800000 	sw	zero,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:30

void filemap_init(struct file *filemap)
{
	int fd;
	struct file *file = filemap;
	for (fd = 0; fd < FS_STRUCT_NENTRY; fd++, file++) {
8000b338:	1443fffb 	bne	v0,v1,8000b328 <filemap_init+0x8>
8000b33c:	2484001c 	addiu	a0,a0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:34
		atomic_set(&(file->open_count), 0);
		file->status = FD_NONE, file->fd = fd;
	}
}
8000b340:	03e00008 	jr	ra
8000b344:	00000000 	nop

8000b348 <filemap_acquire>:
filemap_acquire():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:75
	file->status = FD_NONE;
}

void filemap_acquire(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b348:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:74
	}
	file->status = FD_NONE;
}

void filemap_acquire(struct file *file)
{
8000b34c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:75
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b350:	2442fffe 	addiu	v0,v0,-2
8000b354:	2c420002 	sltiu	v0,v0,2
8000b358:	1040001b 	beqz	v0,8000b3c8 <filemap_acquire+0x80>
8000b35c:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b360:	40026000 	mfc0	v0,c0_status
8000b364:	30420001 	andi	v0,v0,0x1
8000b368:	14400009 	bnez	v0,8000b390 <filemap_acquire+0x48>
8000b36c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b370:	8c820018 	lw	v0,24(a0)
filemap_acquire():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:77
	fopen_count_inc(file);
}
8000b374:	8fbf001c 	lw	ra,28(sp)
8000b378:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000b37c:	24420001 	addiu	v0,v0,1
8000b380:	ac820018 	sw	v0,24(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b384:	8c820018 	lw	v0,24(a0)
filemap_acquire():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:77
8000b388:	03e00008 	jr	ra
8000b38c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b390:	0c006d0c 	jal	8001b430 <intr_disable>
8000b394:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b398:	8fa40010 	lw	a0,16(sp)
8000b39c:	8c820018 	lw	v0,24(a0)
8000b3a0:	24420001 	addiu	v0,v0,1
8000b3a4:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b3a8:	0c006d08 	jal	8001b420 <intr_enable>
8000b3ac:	00000000 	nop
8000b3b0:	8fa40010 	lw	a0,16(sp)
filemap_acquire():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:77
8000b3b4:	8fbf001c 	lw	ra,28(sp)
8000b3b8:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b3bc:	8c820018 	lw	v0,24(a0)
filemap_acquire():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:77
8000b3c0:	03e00008 	jr	ra
8000b3c4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:75
	file->status = FD_NONE;
}

void filemap_acquire(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b3c8:	3c048002 	lui	a0,0x8002
8000b3cc:	3c068002 	lui	a2,0x8002
8000b3d0:	3c078002 	lui	a3,0x8002
8000b3d4:	248424d8 	addiu	a0,a0,9432
8000b3d8:	2405004b 	li	a1,75
8000b3dc:	24c60e48 	addiu	a2,a2,3656
8000b3e0:	0c006b13 	jal	8001ac4c <__panic>
8000b3e4:	24e72560 	addiu	a3,a3,9568

8000b3e8 <filemap_release>:
filemap_release():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:81
	fopen_count_inc(file);
}

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b3e8:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:80
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
	fopen_count_inc(file);
}

void filemap_release(struct file *file)
{
8000b3ec:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:81
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b3f0:	2442fffe 	addiu	v0,v0,-2
8000b3f4:	2c420002 	sltiu	v0,v0,2
8000b3f8:	10400025 	beqz	v0,8000b490 <filemap_release+0xa8>
8000b3fc:	afbf001c 	sw	ra,28(sp)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000b400:	8c820018 	lw	v0,24(a0)
filemap_release():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:82
	assert(fopen_count(file) > 0);
8000b404:	5840001b 	blezl	v0,8000b474 <filemap_release+0x8c>
8000b408:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b40c:	40026000 	mfc0	v0,c0_status
8000b410:	30420001 	andi	v0,v0,0x1
8000b414:	14400009 	bnez	v0,8000b43c <filemap_release+0x54>
8000b418:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b41c:	8c820018 	lw	v0,24(a0)
8000b420:	2442ffff 	addiu	v0,v0,-1
8000b424:	ac820018 	sw	v0,24(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b428:	8c820018 	lw	v0,24(a0)
filemap_release():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:83
	if (fopen_count_dec(file) == 0) {
8000b42c:	1040000f 	beqz	v0,8000b46c <filemap_release+0x84>
8000b430:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:86
		filemap_free(file);
	}
}
8000b434:	03e00008 	jr	ra
8000b438:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b43c:	0c006d0c 	jal	8001b430 <intr_disable>
8000b440:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b444:	8fa40010 	lw	a0,16(sp)
8000b448:	8c820018 	lw	v0,24(a0)
8000b44c:	2442ffff 	addiu	v0,v0,-1
8000b450:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b454:	0c006d08 	jal	8001b420 <intr_enable>
8000b458:	00000000 	nop
8000b45c:	8fa40010 	lw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b460:	8c820018 	lw	v0,24(a0)
filemap_release():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:83

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
	assert(fopen_count(file) > 0);
	if (fopen_count_dec(file) == 0) {
8000b464:	1440fff3 	bnez	v0,8000b434 <filemap_release+0x4c>
8000b468:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:84
		filemap_free(file);
8000b46c:	08002c9f 	j	8000b27c <filemap_free>
8000b470:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:82
}

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
	assert(fopen_count(file) > 0);
8000b474:	3c068002 	lui	a2,0x8002
8000b478:	3c078002 	lui	a3,0x8002
8000b47c:	248424d8 	addiu	a0,a0,9432
8000b480:	24050052 	li	a1,82
8000b484:	24c60e48 	addiu	a2,a2,3656
8000b488:	0c006b13 	jal	8001ac4c <__panic>
8000b48c:	24e72598 	addiu	a3,a3,9624
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:81
	fopen_count_inc(file);
}

void filemap_release(struct file *file)
{
	assert(file->status == FD_OPENED || file->status == FD_CLOSED);
8000b490:	3c048002 	lui	a0,0x8002
8000b494:	3c068002 	lui	a2,0x8002
8000b498:	3c078002 	lui	a3,0x8002
8000b49c:	248424d8 	addiu	a0,a0,9432
8000b4a0:	24050051 	li	a1,81
8000b4a4:	24c60e48 	addiu	a2,a2,3656
8000b4a8:	0c006b13 	jal	8001ac4c <__panic>
8000b4ac:	24e72560 	addiu	a3,a3,9568

8000b4b0 <filemap_open>:
filemap_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:90
	}
}

void filemap_open(struct file *file)
{
	assert((file->status == FD_INIT || file->status == FD_OPENED)
8000b4b0:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:89
		filemap_free(file);
	}
}

void filemap_open(struct file *file)
{
8000b4b4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:90
	assert((file->status == FD_INIT || file->status == FD_OPENED)
8000b4b8:	2442ffff 	addiu	v0,v0,-1
8000b4bc:	2c420002 	sltiu	v0,v0,2
8000b4c0:	1040001f 	beqz	v0,8000b540 <filemap_open+0x90>
8000b4c4:	afbf001c 	sw	ra,28(sp)
8000b4c8:	8c820014 	lw	v0,20(a0)
8000b4cc:	1040001c 	beqz	v0,8000b540 <filemap_open+0x90>
8000b4d0:	24020002 	li	v0,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:92
	       && file->node != NULL);
	file->status = FD_OPENED;
8000b4d4:	ac820000 	sw	v0,0(a0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b4d8:	40026000 	mfc0	v0,c0_status
8000b4dc:	30420001 	andi	v0,v0,0x1
8000b4e0:	14400009 	bnez	v0,8000b508 <filemap_open+0x58>
8000b4e4:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b4e8:	8c820018 	lw	v0,24(a0)
filemap_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:94
	fopen_count_inc(file);
}
8000b4ec:	8fbf001c 	lw	ra,28(sp)
8000b4f0:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000b4f4:	24420001 	addiu	v0,v0,1
8000b4f8:	ac820018 	sw	v0,24(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b4fc:	8c820018 	lw	v0,24(a0)
filemap_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:94
8000b500:	03e00008 	jr	ra
8000b504:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b508:	0c006d0c 	jal	8001b430 <intr_disable>
8000b50c:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b510:	8fa40010 	lw	a0,16(sp)
8000b514:	8c820018 	lw	v0,24(a0)
8000b518:	24420001 	addiu	v0,v0,1
8000b51c:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b520:	0c006d08 	jal	8001b420 <intr_enable>
8000b524:	00000000 	nop
8000b528:	8fa40010 	lw	a0,16(sp)
filemap_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:94
8000b52c:	8fbf001c 	lw	ra,28(sp)
8000b530:	27bd0020 	addiu	sp,sp,32
fopen_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b534:	8c820018 	lw	v0,24(a0)
filemap_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:94
8000b538:	03e00008 	jr	ra
8000b53c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:90
	}
}

void filemap_open(struct file *file)
{
	assert((file->status == FD_INIT || file->status == FD_OPENED)
8000b540:	3c048002 	lui	a0,0x8002
8000b544:	3c068002 	lui	a2,0x8002
8000b548:	3c078002 	lui	a3,0x8002
8000b54c:	248424d8 	addiu	a0,a0,9432
8000b550:	2405005b 	li	a1,91
8000b554:	24c60e48 	addiu	a2,a2,3656
8000b558:	0c006b13 	jal	8001ac4c <__panic>
8000b55c:	24e725b0 	addiu	a3,a3,9648

8000b560 <filemap_close>:
filemap_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:98
	fopen_count_inc(file);
}

void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
8000b560:	8c830000 	lw	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:97
	file->status = FD_OPENED;
	fopen_count_inc(file);
}

void filemap_close(struct file *file)
{
8000b564:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:98
	assert(file->status == FD_OPENED);
8000b568:	24020002 	li	v0,2
8000b56c:	14620027 	bne	v1,v0,8000b60c <filemap_close+0xac>
8000b570:	afbf001c 	sw	ra,28(sp)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000b574:	8c820018 	lw	v0,24(a0)
filemap_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:99
	assert(fopen_count(file) > 0);
8000b578:	1840001c 	blez	v0,8000b5ec <filemap_close+0x8c>
8000b57c:	24020003 	li	v0,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:100
	file->status = FD_CLOSED;
8000b580:	ac820000 	sw	v0,0(a0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000b584:	40026000 	mfc0	v0,c0_status
8000b588:	30420001 	andi	v0,v0,0x1
8000b58c:	14400009 	bnez	v0,8000b5b4 <filemap_close+0x54>
8000b590:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b594:	8c820018 	lw	v0,24(a0)
8000b598:	2442ffff 	addiu	v0,v0,-1
8000b59c:	ac820018 	sw	v0,24(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b5a0:	8c820018 	lw	v0,24(a0)
filemap_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:101
	if (fopen_count_dec(file) == 0) {
8000b5a4:	1040000f 	beqz	v0,8000b5e4 <filemap_close+0x84>
8000b5a8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:104
		filemap_free(file);
	}
}
8000b5ac:	03e00008 	jr	ra
8000b5b0:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000b5b4:	0c006d0c 	jal	8001b430 <intr_disable>
8000b5b8:	afa40010 	sw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000b5bc:	8fa40010 	lw	a0,16(sp)
8000b5c0:	8c820018 	lw	v0,24(a0)
8000b5c4:	2442ffff 	addiu	v0,v0,-1
8000b5c8:	ac820018 	sw	v0,24(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000b5cc:	0c006d08 	jal	8001b420 <intr_enable>
8000b5d0:	00000000 	nop
8000b5d4:	8fa40010 	lw	a0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000b5d8:	8c820018 	lw	v0,24(a0)
filemap_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:101
void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
	assert(fopen_count(file) > 0);
	file->status = FD_CLOSED;
	if (fopen_count_dec(file) == 0) {
8000b5dc:	1440fff3 	bnez	v0,8000b5ac <filemap_close+0x4c>
8000b5e0:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:102
		filemap_free(file);
8000b5e4:	08002c9f 	j	8000b27c <filemap_free>
8000b5e8:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:99
}

void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
	assert(fopen_count(file) > 0);
8000b5ec:	3c048002 	lui	a0,0x8002
8000b5f0:	3c068002 	lui	a2,0x8002
8000b5f4:	3c078002 	lui	a3,0x8002
8000b5f8:	248424d8 	addiu	a0,a0,9432
8000b5fc:	24050063 	li	a1,99
8000b600:	24c60e48 	addiu	a2,a2,3656
8000b604:	0c006b13 	jal	8001ac4c <__panic>
8000b608:	24e72598 	addiu	a3,a3,9624
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:98
	fopen_count_inc(file);
}

void filemap_close(struct file *file)
{
	assert(file->status == FD_OPENED);
8000b60c:	3c048002 	lui	a0,0x8002
8000b610:	3c068002 	lui	a2,0x8002
8000b614:	3c078002 	lui	a3,0x8002
8000b618:	248424d8 	addiu	a0,a0,9432
8000b61c:	24050062 	li	a1,98
8000b620:	24c60e48 	addiu	a2,a2,3656
8000b624:	0c006b13 	jal	8001ac4c <__panic>
8000b628:	24e72600 	addiu	a3,a3,9728

8000b62c <filemap_dup>:
filemap_dup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:108
	}
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b62c:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:107
		filemap_free(file);
	}
}

void filemap_dup(struct file *to, struct file *from)
{
8000b630:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:108
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b634:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:107
		filemap_free(file);
	}
}

void filemap_dup(struct file *to, struct file *from)
{
8000b638:	afb00014 	sw	s0,20(sp)
8000b63c:	afbf001c 	sw	ra,28(sp)
8000b640:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:108
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b644:	14430017 	bne	v0,v1,8000b6a4 <filemap_dup+0x78>
8000b648:	00808021 	move	s0,a0
8000b64c:	8ca30000 	lw	v1,0(a1)
8000b650:	24020002 	li	v0,2
8000b654:	54620014 	bnel	v1,v0,8000b6a8 <filemap_dup+0x7c>
8000b658:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:112
	to->pos = from->pos;
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
8000b65c:	8cb10014 	lw	s1,20(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:109
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
	to->pos = from->pos;
8000b660:	8ca40010 	lw	a0,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:110
	to->readable = from->readable;
8000b664:	8ca30004 	lw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:111
	to->writable = from->writable;
8000b668:	8ca20008 	lw	v0,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:109
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
	to->pos = from->pos;
8000b66c:	ae040010 	sw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:110
	to->readable = from->readable;
8000b670:	ae030004 	sw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:113
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
8000b674:	02202021 	move	a0,s1
8000b678:	0c0010b5 	jal	800042d4 <inode_ref_inc>
8000b67c:	ae020008 	sw	v0,8(s0)
8000b680:	0c0010d6 	jal	80004358 <inode_open_inc>
8000b684:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:114
	to->node = node;
8000b688:	ae110014 	sw	s1,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:115
	filemap_open(to);
8000b68c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:116
}
8000b690:	8fbf001c 	lw	ra,28(sp)
8000b694:	8fb10018 	lw	s1,24(sp)
8000b698:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:115
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
	to->node = node;
	filemap_open(to);
8000b69c:	08002d2c 	j	8000b4b0 <filemap_open>
8000b6a0:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:108
	}
}

void filemap_dup(struct file *to, struct file *from)
{
	assert(to->status == FD_INIT && from->status == FD_OPENED);
8000b6a4:	3c048002 	lui	a0,0x8002
8000b6a8:	3c068002 	lui	a2,0x8002
8000b6ac:	3c078002 	lui	a3,0x8002
8000b6b0:	248424d8 	addiu	a0,a0,9432
8000b6b4:	2405006c 	li	a1,108
8000b6b8:	24c60e48 	addiu	a2,a2,3656
8000b6bc:	0c006b13 	jal	8001ac4c <__panic>
8000b6c0:	24e7261c 	addiu	a3,a3,9756

8000b6c4 <filemap_dup_close>:
filemap_dup_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:120
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b6c4:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:119
	to->node = node;
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
8000b6c8:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:120
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b6cc:	24030003 	li	v1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:119
	to->node = node;
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
8000b6d0:	afb00014 	sw	s0,20(sp)
8000b6d4:	afbf001c 	sw	ra,28(sp)
8000b6d8:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:120
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b6dc:	14430015 	bne	v0,v1,8000b734 <filemap_dup_close+0x70>
8000b6e0:	00808021 	move	s0,a0
8000b6e4:	8ca30000 	lw	v1,0(a1)
8000b6e8:	54620013 	bnel	v1,v0,8000b738 <filemap_dup_close+0x74>
8000b6ec:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:124
	to->pos = from->pos;
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
8000b6f0:	8cb10014 	lw	s1,20(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:121
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
	to->pos = from->pos;
8000b6f4:	8ca40010 	lw	a0,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:122
	to->readable = from->readable;
8000b6f8:	8ca30004 	lw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:123
	to->writable = from->writable;
8000b6fc:	8ca20008 	lw	v0,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:121
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
	to->pos = from->pos;
8000b700:	ae040010 	sw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:122
	to->readable = from->readable;
8000b704:	ae030004 	sw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:125
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
8000b708:	02202021 	move	a0,s1
8000b70c:	0c0010b5 	jal	800042d4 <inode_ref_inc>
8000b710:	ae020008 	sw	v0,8(s0)
8000b714:	0c0010d6 	jal	80004358 <inode_open_inc>
8000b718:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:127
	to->node = node;
}
8000b71c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:126
	to->pos = from->pos;
	to->readable = from->readable;
	to->writable = from->writable;
	struct inode *node = from->node;
	vop_ref_inc(node), vop_open_inc(node);
	to->node = node;
8000b720:	ae110014 	sw	s1,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:127
}
8000b724:	8fb10018 	lw	s1,24(sp)
8000b728:	8fb00014 	lw	s0,20(sp)
8000b72c:	03e00008 	jr	ra
8000b730:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:120
	filemap_open(to);
}

void filemap_dup_close(struct file *to, struct file *from)
{
	assert(to->status == FD_CLOSED && from->status == FD_CLOSED);
8000b734:	3c048002 	lui	a0,0x8002
8000b738:	3c068002 	lui	a2,0x8002
8000b73c:	3c078002 	lui	a3,0x8002
8000b740:	248424d8 	addiu	a0,a0,9432
8000b744:	24050078 	li	a1,120
8000b748:	24c60e48 	addiu	a2,a2,3656
8000b74c:	0c006b13 	jal	8001ac4c <__panic>
8000b750:	24e72650 	addiu	a3,a3,9808

8000b754 <file_testfd>:
file_testfd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:158
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

bool file_testfd(int fd, bool readable, bool writable)
{
8000b754:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b758:	2c820123 	sltiu	v0,a0,291
file_testfd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:158
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

bool file_testfd(int fd, bool readable, bool writable)
{
8000b75c:	afb00020 	sw	s0,32(sp)
8000b760:	afbf0024 	sw	ra,36(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b764:	10400018 	beqz	v0,8000b7c8 <file_testfd+0x74>
8000b768:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000b76c:	afa40010 	sw	a0,16(sp)
8000b770:	afa50014 	sw	a1,20(sp)
8000b774:	0c002c56 	jal	8000b158 <get_filemap>
8000b778:	afa60018 	sw	a2,24(sp)
8000b77c:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000b780:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000b784:	00043940 	sll	a3,a0,0x5
8000b788:	00041880 	sll	v1,a0,0x2
8000b78c:	00e31823 	subu	v1,a3,v1
8000b790:	00431021 	addu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000b794:	8c470000 	lw	a3,0(v0)
8000b798:	24030002 	li	v1,2
8000b79c:	14e3000a 	bne	a3,v1,8000b7c8 <file_testfd+0x74>
8000b7a0:	8fa60018 	lw	a2,24(sp)
8000b7a4:	8c43000c 	lw	v1,12(v0)
8000b7a8:	14830008 	bne	a0,v1,8000b7cc <file_testfd+0x78>
8000b7ac:	8fbf0024 	lw	ra,36(sp)
file_testfd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:164
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	if (readable && !file->readable) {
8000b7b0:	54a0000a 	bnezl	a1,8000b7dc <file_testfd+0x88>
8000b7b4:	8c430004 	lw	v1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:167
		return 0;
	}
	if (writable && !file->writable) {
8000b7b8:	10c00003 	beqz	a2,8000b7c8 <file_testfd+0x74>
8000b7bc:	24100001 	li	s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:157
	}
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

bool file_testfd(int fd, bool readable, bool writable)
8000b7c0:	8c500008 	lw	s0,8(v0)
8000b7c4:	0010802b 	sltu	s0,zero,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:171
	}
	if (writable && !file->writable) {
		return 0;
	}
	return 1;
}
8000b7c8:	8fbf0024 	lw	ra,36(sp)
8000b7cc:	02001021 	move	v0,s0
8000b7d0:	8fb00020 	lw	s0,32(sp)
8000b7d4:	03e00008 	jr	ra
8000b7d8:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:164
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	if (readable && !file->readable) {
8000b7dc:	1460fff6 	bnez	v1,8000b7b8 <file_testfd+0x64>
8000b7e0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:171
	}
	if (writable && !file->writable) {
		return 0;
	}
	return 1;
}
8000b7e4:	02001021 	move	v0,s0
8000b7e8:	8fb00020 	lw	s0,32(sp)
8000b7ec:	03e00008 	jr	ra
8000b7f0:	27bd0028 	addiu	sp,sp,40

8000b7f4 <file_open>:
file_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:174

int file_open(char *path, uint32_t open_flags)
{
8000b7f4:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:176
	bool readable = 0, writable = 0;
	switch (open_flags & O_ACCMODE) {
8000b7f8:	30a20003 	andi	v0,a1,0x3
8000b7fc:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:174
	}
	return 1;
}

int file_open(char *path, uint32_t open_flags)
{
8000b800:	afb30034 	sw	s3,52(sp)
8000b804:	afb00028 	sw	s0,40(sp)
8000b808:	afbf003c 	sw	ra,60(sp)
8000b80c:	afb40038 	sw	s4,56(sp)
8000b810:	afb20030 	sw	s2,48(sp)
8000b814:	afb1002c 	sw	s1,44(sp)
8000b818:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:176
	bool readable = 0, writable = 0;
	switch (open_flags & O_ACCMODE) {
8000b81c:	10430046 	beq	v0,v1,8000b938 <file_open+0x144>
8000b820:	00809821 	move	s3,a0
8000b824:	14400039 	bnez	v0,8000b90c <file_open+0x118>
8000b828:	24030002 	li	v1,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:175
	return 1;
}

int file_open(char *path, uint32_t open_flags)
{
	bool readable = 0, writable = 0;
8000b82c:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:178
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		readable = 1;
8000b830:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:192
		return -E_INVAL;
	}

	int ret;
	struct file *file;
	if ((ret = filemap_alloc(NO_FD, &file)) != 0) {
8000b834:	3c04ffff 	lui	a0,0xffff
8000b838:	24846ad9 	addiu	a0,a0,27353
8000b83c:	0c002c6a 	jal	8000b1a8 <filemap_alloc>
8000b840:	27a50014 	addiu	a1,sp,20
8000b844:	14400033 	bnez	v0,8000b914 <file_open+0x120>
8000b848:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:197
		return ret;
	}

	struct inode *node;
	if ((ret = vfs_open(path, open_flags, &node)) != 0) {
8000b84c:	02602021 	move	a0,s3
8000b850:	02002821 	move	a1,s0
8000b854:	0c001511 	jal	80005444 <vfs_open>
8000b858:	27a60010 	addiu	a2,sp,16
8000b85c:	0040a021 	move	s4,v0
8000b860:	1440003e 	bnez	v0,8000b95c <file_open+0x168>
8000b864:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:203
		filemap_free(file);
		return ret;
	}

	file->pos = 0;
	if (open_flags & O_APPEND) {
8000b868:	32100400 	andi	s0,s0,0x400
8000b86c:	12000017 	beqz	s0,8000b8cc <file_open+0xd8>
8000b870:	ac800010 	sw	zero,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:205
		struct stat __stat, *stat = &__stat;
		if ((ret = vop_fstat(node, stat)) != 0) {
8000b874:	8fb00010 	lw	s0,16(sp)
8000b878:	1200003c 	beqz	s0,8000b96c <file_open+0x178>
8000b87c:	3c048002 	lui	a0,0x8002
8000b880:	8e020048 	lw	v0,72(s0)
8000b884:	1040003a 	beqz	v0,8000b970 <file_open+0x17c>
8000b888:	3c068002 	lui	a2,0x8002
8000b88c:	8c420014 	lw	v0,20(v0)
8000b890:	10400036 	beqz	v0,8000b96c <file_open+0x178>
8000b894:	3c058002 	lui	a1,0x8002
8000b898:	02002021 	move	a0,s0
8000b89c:	0c0010f2 	jal	800043c8 <inode_check>
8000b8a0:	24a526d8 	addiu	a1,a1,9944
8000b8a4:	8e020048 	lw	v0,72(s0)
8000b8a8:	8fa40010 	lw	a0,16(sp)
8000b8ac:	8c420014 	lw	v0,20(v0)
8000b8b0:	0040f809 	jalr	v0
8000b8b4:	27a50018 	addiu	a1,sp,24
8000b8b8:	14400025 	bnez	v0,8000b950 <file_open+0x15c>
8000b8bc:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:210
			vfs_close(node);
			filemap_free(file);
			return ret;
		}
		file->pos = stat->st_size;
8000b8c0:	8fa40014 	lw	a0,20(sp)
8000b8c4:	8fa20024 	lw	v0,36(sp)
8000b8c8:	ac820010 	sw	v0,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:213
	}

	file->node = node;
8000b8cc:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:214
	file->readable = readable;
8000b8d0:	ac920004 	sw	s2,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:215
	file->writable = writable;
8000b8d4:	ac910008 	sw	s1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:216
	filemap_open(file);
8000b8d8:	0c002d2c 	jal	8000b4b0 <filemap_open>
8000b8dc:	ac820014 	sw	v0,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:217
	return file->fd;
8000b8e0:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:218
}
8000b8e4:	8fbf003c 	lw	ra,60(sp)
8000b8e8:	8fb30034 	lw	s3,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:217

	file->node = node;
	file->readable = readable;
	file->writable = writable;
	filemap_open(file);
	return file->fd;
8000b8ec:	8c54000c 	lw	s4,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:218
}
8000b8f0:	8fb20030 	lw	s2,48(sp)
8000b8f4:	8fb1002c 	lw	s1,44(sp)
8000b8f8:	02801021 	move	v0,s4
8000b8fc:	8fb00028 	lw	s0,40(sp)
8000b900:	8fb40038 	lw	s4,56(sp)
8000b904:	03e00008 	jr	ra
8000b908:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:176
}

int file_open(char *path, uint32_t open_flags)
{
	bool readable = 0, writable = 0;
	switch (open_flags & O_ACCMODE) {
8000b90c:	1043000d 	beq	v0,v1,8000b944 <file_open+0x150>
8000b910:	2414ffea 	li	s4,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:218
	file->node = node;
	file->readable = readable;
	file->writable = writable;
	filemap_open(file);
	return file->fd;
}
8000b914:	8fbf003c 	lw	ra,60(sp)
8000b918:	02801021 	move	v0,s4
8000b91c:	8fb30034 	lw	s3,52(sp)
8000b920:	8fb40038 	lw	s4,56(sp)
8000b924:	8fb20030 	lw	s2,48(sp)
8000b928:	8fb1002c 	lw	s1,44(sp)
8000b92c:	8fb00028 	lw	s0,40(sp)
8000b930:	03e00008 	jr	ra
8000b934:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:181
	switch (open_flags & O_ACCMODE) {
	case O_RDONLY:
		readable = 1;
		break;
	case O_WRONLY:
		writable = 1;
8000b938:	24110001 	li	s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:175
	return 1;
}

int file_open(char *path, uint32_t open_flags)
{
	bool readable = 0, writable = 0;
8000b93c:	08002e0d 	j	8000b834 <file_open+0x40>
8000b940:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:184
		break;
	case O_WRONLY:
		writable = 1;
		break;
	case O_RDWR:
		readable = writable = 1;
8000b944:	24110001 	li	s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:185
		break;
8000b948:	08002e0d 	j	8000b834 <file_open+0x40>
8000b94c:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:206

	file->pos = 0;
	if (open_flags & O_APPEND) {
		struct stat __stat, *stat = &__stat;
		if ((ret = vop_fstat(node, stat)) != 0) {
			vfs_close(node);
8000b950:	0c0015ad 	jal	800056b4 <vfs_close>
8000b954:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:207
			filemap_free(file);
8000b958:	8fa40014 	lw	a0,20(sp)
8000b95c:	0c002c9f 	jal	8000b27c <filemap_free>
8000b960:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:208
			return ret;
8000b964:	08002e46 	j	8000b918 <file_open+0x124>
8000b968:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:205
	}

	file->pos = 0;
	if (open_flags & O_APPEND) {
		struct stat __stat, *stat = &__stat;
		if ((ret = vop_fstat(node, stat)) != 0) {
8000b96c:	3c068002 	lui	a2,0x8002
8000b970:	3c078002 	lui	a3,0x8002
8000b974:	248424d8 	addiu	a0,a0,9432
8000b978:	240500cd 	li	a1,205
8000b97c:	24c60e48 	addiu	a2,a2,3656
8000b980:	0c006b13 	jal	8001ac4c <__panic>
8000b984:	24e72688 	addiu	a3,a3,9864

8000b988 <file_close>:
file_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:221
	filemap_open(file);
	return file->fd;
}

int file_close(int fd)
{
8000b988:	27bdffe0 	addiu	sp,sp,-32
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b98c:	2c820123 	sltiu	v0,a0,291
file_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:221
	filemap_open(file);
	return file->fd;
}

int file_close(int fd)
{
8000b990:	afb10018 	sw	s1,24(sp)
8000b994:	afb00014 	sw	s0,20(sp)
8000b998:	afbf001c 	sw	ra,28(sp)
8000b99c:	00808021 	move	s0,a0
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000b9a0:	10400010 	beqz	v0,8000b9e4 <file_close+0x5c>
8000b9a4:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000b9a8:	0c002c56 	jal	8000b158 <get_filemap>
8000b9ac:	00000000 	nop
8000b9b0:	00101940 	sll	v1,s0,0x5
8000b9b4:	00102080 	sll	a0,s0,0x2
8000b9b8:	00642023 	subu	a0,v1,a0
8000b9bc:	00442021 	addu	a0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000b9c0:	8c830000 	lw	v1,0(a0)
8000b9c4:	24020002 	li	v0,2
8000b9c8:	14620007 	bne	v1,v0,8000b9e8 <file_close+0x60>
8000b9cc:	8fbf001c 	lw	ra,28(sp)
8000b9d0:	8c82000c 	lw	v0,12(a0)
8000b9d4:	16020005 	bne	s0,v0,8000b9ec <file_close+0x64>
8000b9d8:	02201021 	move	v0,s1
file_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:227
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_close(file);
8000b9dc:	0c002d58 	jal	8000b560 <filemap_close>
8000b9e0:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:229
	return 0;
}
8000b9e4:	8fbf001c 	lw	ra,28(sp)
8000b9e8:	02201021 	move	v0,s1
8000b9ec:	8fb00014 	lw	s0,20(sp)
8000b9f0:	8fb10018 	lw	s1,24(sp)
8000b9f4:	03e00008 	jr	ra
8000b9f8:	27bd0020 	addiu	sp,sp,32

8000b9fc <file_read>:
file_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:232

int file_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000b9fc:	27bdffb8 	addiu	sp,sp,-72
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000ba00:	2c820123 	sltiu	v0,a0,291
file_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:232
	filemap_close(file);
	return 0;
}

int file_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000ba04:	afb10034 	sw	s1,52(sp)
8000ba08:	afbf0044 	sw	ra,68(sp)
8000ba0c:	afb40040 	sw	s4,64(sp)
8000ba10:	afb3003c 	sw	s3,60(sp)
8000ba14:	afb20038 	sw	s2,56(sp)
8000ba18:	afb00030 	sw	s0,48(sp)
8000ba1c:	00e08821 	move	s1,a3
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000ba20:	10400040 	beqz	v0,8000bb24 <file_read+0x128>
8000ba24:	ace00000 	sw	zero,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000ba28:	afa40020 	sw	a0,32(sp)
8000ba2c:	afa50024 	sw	a1,36(sp)
8000ba30:	0c002c56 	jal	8000b158 <get_filemap>
8000ba34:	afa60028 	sw	a2,40(sp)
8000ba38:	8fa40020 	lw	a0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000ba3c:	8fa50024 	lw	a1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000ba40:	00048080 	sll	s0,a0,0x2
8000ba44:	00041940 	sll	v1,a0,0x5
8000ba48:	00708023 	subu	s0,v1,s0
8000ba4c:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000ba50:	8e120000 	lw	s2,0(s0)
8000ba54:	24020002 	li	v0,2
8000ba58:	16420032 	bne	s2,v0,8000bb24 <file_read+0x128>
8000ba5c:	8fa60028 	lw	a2,40(sp)
8000ba60:	8e02000c 	lw	v0,12(s0)
8000ba64:	14820030 	bne	a0,v0,8000bb28 <file_read+0x12c>
8000ba68:	8fbf0044 	lw	ra,68(sp)
file_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:239
	struct file *file;
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->readable) {
8000ba6c:	8e020004 	lw	v0,4(s0)
8000ba70:	1040002d 	beqz	v0,8000bb28 <file_read+0x12c>
8000ba74:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:242
		return -E_INVAL;
	}
	filemap_acquire(file);
8000ba78:	afa50024 	sw	a1,36(sp)
8000ba7c:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000ba80:	afa60028 	sw	a2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:244

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
8000ba84:	8e070010 	lw	a3,16(s0)
8000ba88:	8fa50024 	lw	a1,36(sp)
8000ba8c:	8fa60028 	lw	a2,40(sp)
8000ba90:	0c003347 	jal	8000cd1c <iobuf_init>
8000ba94:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:245
	ret = vop_read(file->node, iob);
8000ba98:	8e140014 	lw	s4,20(s0)
8000ba9c:	1280002e 	beqz	s4,8000bb58 <file_read+0x15c>
8000baa0:	00409821 	move	s3,v0
8000baa4:	8e820048 	lw	v0,72(s4)
8000baa8:	1040002c 	beqz	v0,8000bb5c <file_read+0x160>
8000baac:	3c048002 	lui	a0,0x8002
8000bab0:	8c42000c 	lw	v0,12(v0)
8000bab4:	10400029 	beqz	v0,8000bb5c <file_read+0x160>
8000bab8:	3c058002 	lui	a1,0x8002
8000babc:	02802021 	move	a0,s4
8000bac0:	0c0010f2 	jal	800043c8 <inode_check>
8000bac4:	24a52730 	addiu	a1,a1,10032
8000bac8:	8e820048 	lw	v0,72(s4)
8000bacc:	8e040014 	lw	a0,20(s0)
8000bad0:	8c42000c 	lw	v0,12(v0)
8000bad4:	0040f809 	jalr	v0
8000bad8:	02602821 	move	a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:247

	size_t copied = iobuf_used(iob);
8000badc:	8e650008 	lw	a1,8(s3)
8000bae0:	8e63000c 	lw	v1,12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:248
	if (file->status == FD_OPENED) {
8000bae4:	8e040000 	lw	a0,0(s0)
8000bae8:	10920017 	beq	a0,s2,8000bb48 <file_read+0x14c>
8000baec:	00a31823 	subu	v1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:251
		file->pos += copied;
	}
	*copied_store = copied;
8000baf0:	ae230000 	sw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:252
	filemap_release(file);
8000baf4:	02002021 	move	a0,s0
8000baf8:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000bafc:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:254
	return ret;
}
8000bb00:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:253
	if (file->status == FD_OPENED) {
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
8000bb04:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:254
}
8000bb08:	8fb40040 	lw	s4,64(sp)
8000bb0c:	8fb3003c 	lw	s3,60(sp)
8000bb10:	8fb20038 	lw	s2,56(sp)
8000bb14:	8fb10034 	lw	s1,52(sp)
8000bb18:	8fb00030 	lw	s0,48(sp)
8000bb1c:	03e00008 	jr	ra
8000bb20:	27bd0048 	addiu	sp,sp,72
8000bb24:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:240
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->readable) {
		return -E_INVAL;
8000bb28:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:254
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
}
8000bb2c:	8fb40040 	lw	s4,64(sp)
8000bb30:	8fb3003c 	lw	s3,60(sp)
8000bb34:	8fb20038 	lw	s2,56(sp)
8000bb38:	8fb10034 	lw	s1,52(sp)
8000bb3c:	8fb00030 	lw	s0,48(sp)
8000bb40:	03e00008 	jr	ra
8000bb44:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:249
	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_read(file->node, iob);

	size_t copied = iobuf_used(iob);
	if (file->status == FD_OPENED) {
		file->pos += copied;
8000bb48:	8e040010 	lw	a0,16(s0)
8000bb4c:	00832021 	addu	a0,a0,v1
8000bb50:	08002ebc 	j	8000baf0 <file_read+0xf4>
8000bb54:	ae040010 	sw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:245
		return -E_INVAL;
	}
	filemap_acquire(file);

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_read(file->node, iob);
8000bb58:	3c048002 	lui	a0,0x8002
8000bb5c:	3c068002 	lui	a2,0x8002
8000bb60:	3c078002 	lui	a3,0x8002
8000bb64:	248424d8 	addiu	a0,a0,9432
8000bb68:	240500f5 	li	a1,245
8000bb6c:	24c60e48 	addiu	a2,a2,3656
8000bb70:	0c006b13 	jal	8001ac4c <__panic>
8000bb74:	24e726e0 	addiu	a3,a3,9952

8000bb78 <file_write>:
file_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:257
	filemap_release(file);
	return ret;
}

int file_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000bb78:	27bdffb8 	addiu	sp,sp,-72
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bb7c:	2c820123 	sltiu	v0,a0,291
file_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:257
	filemap_release(file);
	return ret;
}

int file_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000bb80:	afb10034 	sw	s1,52(sp)
8000bb84:	afbf0044 	sw	ra,68(sp)
8000bb88:	afb40040 	sw	s4,64(sp)
8000bb8c:	afb3003c 	sw	s3,60(sp)
8000bb90:	afb20038 	sw	s2,56(sp)
8000bb94:	afb00030 	sw	s0,48(sp)
8000bb98:	00e08821 	move	s1,a3
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bb9c:	10400040 	beqz	v0,8000bca0 <file_write+0x128>
8000bba0:	ace00000 	sw	zero,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000bba4:	afa40020 	sw	a0,32(sp)
8000bba8:	afa50024 	sw	a1,36(sp)
8000bbac:	0c002c56 	jal	8000b158 <get_filemap>
8000bbb0:	afa60028 	sw	a2,40(sp)
8000bbb4:	8fa40020 	lw	a0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bbb8:	8fa50024 	lw	a1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000bbbc:	00048080 	sll	s0,a0,0x2
8000bbc0:	00041940 	sll	v1,a0,0x5
8000bbc4:	00708023 	subu	s0,v1,s0
8000bbc8:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bbcc:	8e120000 	lw	s2,0(s0)
8000bbd0:	24020002 	li	v0,2
8000bbd4:	16420032 	bne	s2,v0,8000bca0 <file_write+0x128>
8000bbd8:	8fa60028 	lw	a2,40(sp)
8000bbdc:	8e02000c 	lw	v0,12(s0)
8000bbe0:	14820030 	bne	a0,v0,8000bca4 <file_write+0x12c>
8000bbe4:	8fbf0044 	lw	ra,68(sp)
file_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:264
	struct file *file;
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->writable) {
8000bbe8:	8e020008 	lw	v0,8(s0)
8000bbec:	1040002d 	beqz	v0,8000bca4 <file_write+0x12c>
8000bbf0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:267
		return -E_INVAL;
	}
	filemap_acquire(file);
8000bbf4:	afa50024 	sw	a1,36(sp)
8000bbf8:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000bbfc:	afa60028 	sw	a2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:269

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
8000bc00:	8e070010 	lw	a3,16(s0)
8000bc04:	8fa50024 	lw	a1,36(sp)
8000bc08:	8fa60028 	lw	a2,40(sp)
8000bc0c:	0c003347 	jal	8000cd1c <iobuf_init>
8000bc10:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:270
	ret = vop_write(file->node, iob);
8000bc14:	8e140014 	lw	s4,20(s0)
8000bc18:	1280002e 	beqz	s4,8000bcd4 <file_write+0x15c>
8000bc1c:	00409821 	move	s3,v0
8000bc20:	8e820048 	lw	v0,72(s4)
8000bc24:	1040002c 	beqz	v0,8000bcd8 <file_write+0x160>
8000bc28:	3c048002 	lui	a0,0x8002
8000bc2c:	8c420010 	lw	v0,16(v0)
8000bc30:	10400029 	beqz	v0,8000bcd8 <file_write+0x160>
8000bc34:	3c058002 	lui	a1,0x8002
8000bc38:	02802021 	move	a0,s4
8000bc3c:	0c0010f2 	jal	800043c8 <inode_check>
8000bc40:	24a52788 	addiu	a1,a1,10120
8000bc44:	8e820048 	lw	v0,72(s4)
8000bc48:	8e040014 	lw	a0,20(s0)
8000bc4c:	8c420010 	lw	v0,16(v0)
8000bc50:	0040f809 	jalr	v0
8000bc54:	02602821 	move	a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:272

	size_t copied = iobuf_used(iob);
8000bc58:	8e650008 	lw	a1,8(s3)
8000bc5c:	8e63000c 	lw	v1,12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:273
	if (file->status == FD_OPENED) {
8000bc60:	8e040000 	lw	a0,0(s0)
8000bc64:	10920017 	beq	a0,s2,8000bcc4 <file_write+0x14c>
8000bc68:	00a31823 	subu	v1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:276
		file->pos += copied;
	}
	*copied_store = copied;
8000bc6c:	ae230000 	sw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:277
	filemap_release(file);
8000bc70:	02002021 	move	a0,s0
8000bc74:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000bc78:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:279
	return ret;
}
8000bc7c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:278
	if (file->status == FD_OPENED) {
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
8000bc80:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:279
}
8000bc84:	8fb40040 	lw	s4,64(sp)
8000bc88:	8fb3003c 	lw	s3,60(sp)
8000bc8c:	8fb20038 	lw	s2,56(sp)
8000bc90:	8fb10034 	lw	s1,52(sp)
8000bc94:	8fb00030 	lw	s0,48(sp)
8000bc98:	03e00008 	jr	ra
8000bc9c:	27bd0048 	addiu	sp,sp,72
8000bca0:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:265
	*copied_store = 0;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	if (!file->writable) {
		return -E_INVAL;
8000bca4:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:279
		file->pos += copied;
	}
	*copied_store = copied;
	filemap_release(file);
	return ret;
}
8000bca8:	8fb40040 	lw	s4,64(sp)
8000bcac:	8fb3003c 	lw	s3,60(sp)
8000bcb0:	8fb20038 	lw	s2,56(sp)
8000bcb4:	8fb10034 	lw	s1,52(sp)
8000bcb8:	8fb00030 	lw	s0,48(sp)
8000bcbc:	03e00008 	jr	ra
8000bcc0:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:274
	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_write(file->node, iob);

	size_t copied = iobuf_used(iob);
	if (file->status == FD_OPENED) {
		file->pos += copied;
8000bcc4:	8e040010 	lw	a0,16(s0)
8000bcc8:	00832021 	addu	a0,a0,v1
8000bccc:	08002f1b 	j	8000bc6c <file_write+0xf4>
8000bcd0:	ae040010 	sw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:270
		return -E_INVAL;
	}
	filemap_acquire(file);

	struct iobuf __iob, *iob = iobuf_init(&__iob, base, len, file->pos);
	ret = vop_write(file->node, iob);
8000bcd4:	3c048002 	lui	a0,0x8002
8000bcd8:	3c068002 	lui	a2,0x8002
8000bcdc:	3c078002 	lui	a3,0x8002
8000bce0:	248424d8 	addiu	a0,a0,9432
8000bce4:	2405010e 	li	a1,270
8000bce8:	24c60e48 	addiu	a2,a2,3656
8000bcec:	0c006b13 	jal	8001ac4c <__panic>
8000bcf0:	24e72738 	addiu	a3,a3,10040

8000bcf4 <file_seek>:
file_seek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:282
	filemap_release(file);
	return ret;
}

int file_seek(int fd, off_t pos, int whence)
{
8000bcf4:	27bdffc0 	addiu	sp,sp,-64
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bcf8:	2c820123 	sltiu	v0,a0,291
file_seek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:282
	filemap_release(file);
	return ret;
}

int file_seek(int fd, off_t pos, int whence)
{
8000bcfc:	afb30034 	sw	s3,52(sp)
8000bd00:	afb1002c 	sw	s1,44(sp)
8000bd04:	afb00028 	sw	s0,40(sp)
8000bd08:	afbf003c 	sw	ra,60(sp)
8000bd0c:	afb40038 	sw	s4,56(sp)
8000bd10:	afb20030 	sw	s2,48(sp)
8000bd14:	00808821 	move	s1,a0
8000bd18:	00a08021 	move	s0,a1
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bd1c:	10400035 	beqz	v0,8000bdf4 <file_seek+0x100>
8000bd20:	00c09821 	move	s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000bd24:	0c002c56 	jal	8000b158 <get_filemap>
8000bd28:	00119080 	sll	s2,s1,0x2
8000bd2c:	00111940 	sll	v1,s1,0x5
8000bd30:	00729023 	subu	s2,v1,s2
8000bd34:	00529021 	addu	s2,v0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bd38:	8e540000 	lw	s4,0(s2)
8000bd3c:	24020002 	li	v0,2
8000bd40:	1682002d 	bne	s4,v0,8000bdf8 <file_seek+0x104>
8000bd44:	8fbf003c 	lw	ra,60(sp)
8000bd48:	8e42000c 	lw	v0,12(s2)
8000bd4c:	1622002b 	bne	s1,v0,8000bdfc <file_seek+0x108>
8000bd50:	2402ffea 	li	v0,-22
file_seek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:289
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000bd54:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000bd58:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:291

	switch (whence) {
8000bd5c:	24020001 	li	v0,1
8000bd60:	52620042 	beql	s3,v0,8000be6c <file_seek+0x178>
8000bd64:	8e420010 	lw	v0,16(s2)
8000bd68:	5274002b 	beql	s3,s4,8000be18 <file_seek+0x124>
8000bd6c:	8e510014 	lw	s1,20(s2)
8000bd70:	16600014 	bnez	s3,8000bdc4 <file_seek+0xd0>
8000bd74:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:307
	default:
		ret = -E_INVAL;
	}

	if (ret == 0) {
		if ((ret = vop_tryseek(file->node, pos)) == 0) {
8000bd78:	8e510014 	lw	s1,20(s2)
8000bd7c:	1220003d 	beqz	s1,8000be74 <file_seek+0x180>
8000bd80:	3c048002 	lui	a0,0x8002
8000bd84:	8e220048 	lw	v0,72(s1)
8000bd88:	1040003b 	beqz	v0,8000be78 <file_seek+0x184>
8000bd8c:	3c068002 	lui	a2,0x8002
8000bd90:	8c420044 	lw	v0,68(v0)
8000bd94:	10400037 	beqz	v0,8000be74 <file_seek+0x180>
8000bd98:	3c058002 	lui	a1,0x8002
8000bd9c:	02202021 	move	a0,s1
8000bda0:	0c0010f2 	jal	800043c8 <inode_check>
8000bda4:	24a527e0 	addiu	a1,a1,10208
8000bda8:	8e220048 	lw	v0,72(s1)
8000bdac:	8e440014 	lw	a0,20(s2)
8000bdb0:	8c420044 	lw	v0,68(v0)
8000bdb4:	0040f809 	jalr	v0
8000bdb8:	02002821 	move	a1,s0
8000bdbc:	50400001 	beqzl	v0,8000bdc4 <file_seek+0xd0>
8000bdc0:	ae500010 	sw	s0,16(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:311
			file->pos = pos;
		}
	}
	filemap_release(file);
8000bdc4:	02402021 	move	a0,s2
8000bdc8:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000bdcc:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:313
	return ret;
}
8000bdd0:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:312
		if ((ret = vop_tryseek(file->node, pos)) == 0) {
			file->pos = pos;
		}
	}
	filemap_release(file);
	return ret;
8000bdd4:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:313
}
8000bdd8:	8fb40038 	lw	s4,56(sp)
8000bddc:	8fb30034 	lw	s3,52(sp)
8000bde0:	8fb20030 	lw	s2,48(sp)
8000bde4:	8fb1002c 	lw	s1,44(sp)
8000bde8:	8fb00028 	lw	s0,40(sp)
8000bdec:	03e00008 	jr	ra
8000bdf0:	27bd0040 	addiu	sp,sp,64
8000bdf4:	8fbf003c 	lw	ra,60(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000bdf8:	2402ffea 	li	v0,-22
file_seek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:313
			file->pos = pos;
		}
	}
	filemap_release(file);
	return ret;
}
8000bdfc:	8fb40038 	lw	s4,56(sp)
8000be00:	8fb30034 	lw	s3,52(sp)
8000be04:	8fb20030 	lw	s2,48(sp)
8000be08:	8fb1002c 	lw	s1,44(sp)
8000be0c:	8fb00028 	lw	s0,40(sp)
8000be10:	03e00008 	jr	ra
8000be14:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:298
		break;
	case LSEEK_CUR:
		pos += file->pos;
		break;
	case LSEEK_END:
		if ((ret = vop_fstat(file->node, stat)) == 0) {
8000be18:	1220001d 	beqz	s1,8000be90 <file_seek+0x19c>
8000be1c:	3c048002 	lui	a0,0x8002
8000be20:	8e220048 	lw	v0,72(s1)
8000be24:	1040001b 	beqz	v0,8000be94 <file_seek+0x1a0>
8000be28:	3c068002 	lui	a2,0x8002
8000be2c:	8c420014 	lw	v0,20(v0)
8000be30:	10400017 	beqz	v0,8000be90 <file_seek+0x19c>
8000be34:	3c058002 	lui	a1,0x8002
8000be38:	02202021 	move	a0,s1
8000be3c:	0c0010f2 	jal	800043c8 <inode_check>
8000be40:	24a526d8 	addiu	a1,a1,9944
8000be44:	8e220048 	lw	v0,72(s1)
8000be48:	8e440014 	lw	a0,20(s2)
8000be4c:	8c420014 	lw	v0,20(v0)
8000be50:	0040f809 	jalr	v0
8000be54:	27a50010 	addiu	a1,sp,16
8000be58:	5440ffdb 	bnezl	v0,8000bdc8 <file_seek+0xd4>
8000be5c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:299
			pos += stat->st_size;
8000be60:	8fa2001c 	lw	v0,28(sp)
8000be64:	08002f5e 	j	8000bd78 <file_seek+0x84>
8000be68:	02028021 	addu	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:296
	switch (whence) {
	case LSEEK_SET:
		break;
	case LSEEK_CUR:
		pos += file->pos;
		break;
8000be6c:	08002f5e 	j	8000bd78 <file_seek+0x84>
8000be70:	02028021 	addu	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:307
	default:
		ret = -E_INVAL;
	}

	if (ret == 0) {
		if ((ret = vop_tryseek(file->node, pos)) == 0) {
8000be74:	3c068002 	lui	a2,0x8002
8000be78:	3c078002 	lui	a3,0x8002
8000be7c:	248424d8 	addiu	a0,a0,9432
8000be80:	24050133 	li	a1,307
8000be84:	24c60e48 	addiu	a2,a2,3656
8000be88:	0c006b13 	jal	8001ac4c <__panic>
8000be8c:	24e72790 	addiu	a3,a3,10128
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:298
		break;
	case LSEEK_CUR:
		pos += file->pos;
		break;
	case LSEEK_END:
		if ((ret = vop_fstat(file->node, stat)) == 0) {
8000be90:	3c068002 	lui	a2,0x8002
8000be94:	3c078002 	lui	a3,0x8002
8000be98:	248424d8 	addiu	a0,a0,9432
8000be9c:	2405012a 	li	a1,298
8000bea0:	24c60e48 	addiu	a2,a2,3656
8000bea4:	0c006b13 	jal	8001ac4c <__panic>
8000bea8:	24e72688 	addiu	a3,a3,9864

8000beac <file_fstat>:
file_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:316
	filemap_release(file);
	return ret;
}

int file_fstat(int fd, struct stat *stat)
{
8000beac:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000beb0:	2c820123 	sltiu	v0,a0,291
file_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:316
	filemap_release(file);
	return ret;
}

int file_fstat(int fd, struct stat *stat)
{
8000beb4:	afb1001c 	sw	s1,28(sp)
8000beb8:	afbf0024 	sw	ra,36(sp)
8000bebc:	afb20020 	sw	s2,32(sp)
8000bec0:	afb00018 	sw	s0,24(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bec4:	1040002c 	beqz	v0,8000bf78 <file_fstat+0xcc>
8000bec8:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000becc:	0c002c56 	jal	8000b158 <get_filemap>
8000bed0:	afa40010 	sw	a0,16(sp)
8000bed4:	8fa40010 	lw	a0,16(sp)
8000bed8:	00041940 	sll	v1,a0,0x5
8000bedc:	00048080 	sll	s0,a0,0x2
8000bee0:	00708023 	subu	s0,v1,s0
8000bee4:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bee8:	8e030000 	lw	v1,0(s0)
8000beec:	24020002 	li	v0,2
8000bef0:	14620022 	bne	v1,v0,8000bf7c <file_fstat+0xd0>
8000bef4:	8fbf0024 	lw	ra,36(sp)
8000bef8:	8e02000c 	lw	v0,12(s0)
8000befc:	14820020 	bne	a0,v0,8000bf80 <file_fstat+0xd4>
8000bf00:	2402ffea 	li	v0,-22
file_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:322
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000bf04:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000bf08:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:323
	ret = vop_fstat(file->node, stat);
8000bf0c:	8e120014 	lw	s2,20(s0)
8000bf10:	12400020 	beqz	s2,8000bf94 <file_fstat+0xe8>
8000bf14:	3c048002 	lui	a0,0x8002
8000bf18:	8e420048 	lw	v0,72(s2)
8000bf1c:	1040001e 	beqz	v0,8000bf98 <file_fstat+0xec>
8000bf20:	3c068002 	lui	a2,0x8002
8000bf24:	8c420014 	lw	v0,20(v0)
8000bf28:	1040001a 	beqz	v0,8000bf94 <file_fstat+0xe8>
8000bf2c:	3c058002 	lui	a1,0x8002
8000bf30:	02402021 	move	a0,s2
8000bf34:	0c0010f2 	jal	800043c8 <inode_check>
8000bf38:	24a526d8 	addiu	a1,a1,9944
8000bf3c:	8e420048 	lw	v0,72(s2)
8000bf40:	8e040014 	lw	a0,20(s0)
8000bf44:	8c420014 	lw	v0,20(v0)
8000bf48:	0040f809 	jalr	v0
8000bf4c:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:324
	filemap_release(file);
8000bf50:	02002021 	move	a0,s0
8000bf54:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000bf58:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:326
	return ret;
}
8000bf5c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:325
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fstat(file->node, stat);
	filemap_release(file);
	return ret;
8000bf60:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:326
}
8000bf64:	8fb20020 	lw	s2,32(sp)
8000bf68:	8fb1001c 	lw	s1,28(sp)
8000bf6c:	8fb00018 	lw	s0,24(sp)
8000bf70:	03e00008 	jr	ra
8000bf74:	27bd0028 	addiu	sp,sp,40
8000bf78:	8fbf0024 	lw	ra,36(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000bf7c:	2402ffea 	li	v0,-22
file_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:326
	}
	filemap_acquire(file);
	ret = vop_fstat(file->node, stat);
	filemap_release(file);
	return ret;
}
8000bf80:	8fb20020 	lw	s2,32(sp)
8000bf84:	8fb1001c 	lw	s1,28(sp)
8000bf88:	8fb00018 	lw	s0,24(sp)
8000bf8c:	03e00008 	jr	ra
8000bf90:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:323
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fstat(file->node, stat);
8000bf94:	3c068002 	lui	a2,0x8002
8000bf98:	3c078002 	lui	a3,0x8002
8000bf9c:	248424d8 	addiu	a0,a0,9432
8000bfa0:	24050143 	li	a1,323
8000bfa4:	24c60e48 	addiu	a2,a2,3656
8000bfa8:	0c006b13 	jal	8001ac4c <__panic>
8000bfac:	24e72688 	addiu	a3,a3,9864

8000bfb0 <file_fsync>:
file_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:329
	filemap_release(file);
	return ret;
}

int file_fsync(int fd)
{
8000bfb0:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bfb4:	2c820123 	sltiu	v0,a0,291
file_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:329
	filemap_release(file);
	return ret;
}

int file_fsync(int fd)
{
8000bfb8:	afbf0024 	sw	ra,36(sp)
8000bfbc:	afb10020 	sw	s1,32(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000bfc0:	1040002a 	beqz	v0,8000c06c <file_fsync+0xbc>
8000bfc4:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000bfc8:	0c002c56 	jal	8000b158 <get_filemap>
8000bfcc:	afa40010 	sw	a0,16(sp)
8000bfd0:	8fa40010 	lw	a0,16(sp)
8000bfd4:	00041940 	sll	v1,a0,0x5
8000bfd8:	00048080 	sll	s0,a0,0x2
8000bfdc:	00708023 	subu	s0,v1,s0
8000bfe0:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000bfe4:	8e030000 	lw	v1,0(s0)
8000bfe8:	24020002 	li	v0,2
8000bfec:	14620020 	bne	v1,v0,8000c070 <file_fsync+0xc0>
8000bff0:	8fbf0024 	lw	ra,36(sp)
8000bff4:	8e02000c 	lw	v0,12(s0)
8000bff8:	1482001e 	bne	a0,v0,8000c074 <file_fsync+0xc4>
8000bffc:	2402ffea 	li	v0,-22
file_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:335
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000c000:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000c004:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:336
	ret = vop_fsync(file->node);
8000c008:	8e110014 	lw	s1,20(s0)
8000c00c:	5220001e 	beqzl	s1,8000c088 <file_fsync+0xd8>
8000c010:	3c048002 	lui	a0,0x8002
8000c014:	8e220048 	lw	v0,72(s1)
8000c018:	5040001b 	beqzl	v0,8000c088 <file_fsync+0xd8>
8000c01c:	3c048002 	lui	a0,0x8002
8000c020:	8c420018 	lw	v0,24(v0)
8000c024:	10400017 	beqz	v0,8000c084 <file_fsync+0xd4>
8000c028:	3c058002 	lui	a1,0x8002
8000c02c:	02202021 	move	a0,s1
8000c030:	0c0010f2 	jal	800043c8 <inode_check>
8000c034:	24a51fbc 	addiu	a1,a1,8124
8000c038:	8e220048 	lw	v0,72(s1)
8000c03c:	8c420018 	lw	v0,24(v0)
8000c040:	0040f809 	jalr	v0
8000c044:	8e040014 	lw	a0,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:337
	filemap_release(file);
8000c048:	02002021 	move	a0,s0
8000c04c:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000c050:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:339
	return ret;
}
8000c054:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:338
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fsync(file->node);
	filemap_release(file);
	return ret;
8000c058:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:339
}
8000c05c:	8fb10020 	lw	s1,32(sp)
8000c060:	8fb0001c 	lw	s0,28(sp)
8000c064:	03e00008 	jr	ra
8000c068:	27bd0028 	addiu	sp,sp,40
8000c06c:	8fbf0024 	lw	ra,36(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000c070:	2402ffea 	li	v0,-22
file_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:339
	}
	filemap_acquire(file);
	ret = vop_fsync(file->node);
	filemap_release(file);
	return ret;
}
8000c074:	8fb10020 	lw	s1,32(sp)
8000c078:	8fb0001c 	lw	s0,28(sp)
8000c07c:	03e00008 	jr	ra
8000c080:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:336
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
	ret = vop_fsync(file->node);
8000c084:	3c048002 	lui	a0,0x8002
8000c088:	3c068002 	lui	a2,0x8002
8000c08c:	3c078002 	lui	a3,0x8002
8000c090:	248424d8 	addiu	a0,a0,9432
8000c094:	24050150 	li	a1,336
8000c098:	24c60e48 	addiu	a2,a2,3656
8000c09c:	0c006b13 	jal	8001ac4c <__panic>
8000c0a0:	24e71f6c 	addiu	a3,a3,8044

8000c0a4 <file_getdirentry>:
file_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:342
	filemap_release(file);
	return ret;
}

int file_getdirentry(int fd, struct dirent *direntp)
{
8000c0a4:	27bdffc0 	addiu	sp,sp,-64
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c0a8:	2c820123 	sltiu	v0,a0,291
file_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:342
	filemap_release(file);
	return ret;
}

int file_getdirentry(int fd, struct dirent *direntp)
{
8000c0ac:	afb10030 	sw	s1,48(sp)
8000c0b0:	afbf003c 	sw	ra,60(sp)
8000c0b4:	afb30038 	sw	s3,56(sp)
8000c0b8:	afb20034 	sw	s2,52(sp)
8000c0bc:	afb0002c 	sw	s0,44(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c0c0:	10400034 	beqz	v0,8000c194 <file_getdirentry+0xf0>
8000c0c4:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c0c8:	0c002c56 	jal	8000b158 <get_filemap>
8000c0cc:	afa40020 	sw	a0,32(sp)
8000c0d0:	8fa40020 	lw	a0,32(sp)
8000c0d4:	00041940 	sll	v1,a0,0x5
8000c0d8:	00048080 	sll	s0,a0,0x2
8000c0dc:	00708023 	subu	s0,v1,s0
8000c0e0:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c0e4:	8e030000 	lw	v1,0(s0)
8000c0e8:	24020002 	li	v0,2
8000c0ec:	1462002a 	bne	v1,v0,8000c198 <file_getdirentry+0xf4>
8000c0f0:	8fbf003c 	lw	ra,60(sp)
8000c0f4:	8e02000c 	lw	v0,12(s0)
8000c0f8:	14820028 	bne	a0,v0,8000c19c <file_getdirentry+0xf8>
8000c0fc:	2402ffea 	li	v0,-22
file_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:348
	int ret;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return ret;
	}
	filemap_acquire(file);
8000c100:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000c104:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:350

	struct iobuf __iob, *iob =
8000c108:	8e270004 	lw	a3,4(s1)
8000c10c:	27a40010 	addiu	a0,sp,16
8000c110:	2625000a 	addiu	a1,s1,10
8000c114:	0c003347 	jal	8000cd1c <iobuf_init>
8000c118:	24060100 	li	a2,256
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:353
	    iobuf_init(&__iob, direntp->d_name, sizeof(direntp->d_name),
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
8000c11c:	8e130014 	lw	s3,20(s0)
8000c120:	1260002a 	beqz	s3,8000c1cc <file_getdirentry+0x128>
8000c124:	00409021 	move	s2,v0
8000c128:	8e620048 	lw	v0,72(s3)
8000c12c:	10400028 	beqz	v0,8000c1d0 <file_getdirentry+0x12c>
8000c130:	3c048002 	lui	a0,0x8002
8000c134:	8c420034 	lw	v0,52(v0)
8000c138:	10400025 	beqz	v0,8000c1d0 <file_getdirentry+0x12c>
8000c13c:	3c058002 	lui	a1,0x8002
8000c140:	02602021 	move	a0,s3
8000c144:	0c0010f2 	jal	800043c8 <inode_check>
8000c148:	24a5283c 	addiu	a1,a1,10300
8000c14c:	8e620048 	lw	v0,72(s3)
8000c150:	8e040014 	lw	a0,20(s0)
8000c154:	8c420034 	lw	v0,52(v0)
8000c158:	0040f809 	jalr	v0
8000c15c:	02402821 	move	a1,s2
8000c160:	50400014 	beqzl	v0,8000c1b4 <file_getdirentry+0x110>
8000c164:	8e450008 	lw	a1,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:356
		direntp->d_off += iobuf_used(iob);
	}
	filemap_release(file);
8000c168:	02002021 	move	a0,s0
8000c16c:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000c170:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:358
	return ret;
}
8000c174:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:357
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
		direntp->d_off += iobuf_used(iob);
	}
	filemap_release(file);
	return ret;
8000c178:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:358
}
8000c17c:	8fb30038 	lw	s3,56(sp)
8000c180:	8fb20034 	lw	s2,52(sp)
8000c184:	8fb10030 	lw	s1,48(sp)
8000c188:	8fb0002c 	lw	s0,44(sp)
8000c18c:	03e00008 	jr	ra
8000c190:	27bd0040 	addiu	sp,sp,64
8000c194:	8fbf003c 	lw	ra,60(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
		if (file->status == FD_OPENED && file->fd == fd) {
8000c198:	2402ffea 	li	v0,-22
file_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:358
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
		direntp->d_off += iobuf_used(iob);
	}
	filemap_release(file);
	return ret;
}
8000c19c:	8fb30038 	lw	s3,56(sp)
8000c1a0:	8fb20034 	lw	s2,52(sp)
8000c1a4:	8fb10030 	lw	s1,48(sp)
8000c1a8:	8fb0002c 	lw	s0,44(sp)
8000c1ac:	03e00008 	jr	ra
8000c1b0:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:354

	struct iobuf __iob, *iob =
	    iobuf_init(&__iob, direntp->d_name, sizeof(direntp->d_name),
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
		direntp->d_off += iobuf_used(iob);
8000c1b4:	8e230004 	lw	v1,4(s1)
8000c1b8:	8e44000c 	lw	a0,12(s2)
8000c1bc:	00a31821 	addu	v1,a1,v1
8000c1c0:	00641823 	subu	v1,v1,a0
8000c1c4:	0800305a 	j	8000c168 <file_getdirentry+0xc4>
8000c1c8:	ae230004 	sw	v1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:353
	filemap_acquire(file);

	struct iobuf __iob, *iob =
	    iobuf_init(&__iob, direntp->d_name, sizeof(direntp->d_name),
		       direntp->d_off);
	if ((ret = vop_getdirentry(file->node, iob)) == 0) {
8000c1cc:	3c048002 	lui	a0,0x8002
8000c1d0:	3c068002 	lui	a2,0x8002
8000c1d4:	3c078002 	lui	a3,0x8002
8000c1d8:	248424d8 	addiu	a0,a0,9432
8000c1dc:	24050161 	li	a1,353
8000c1e0:	24c60e48 	addiu	a2,a2,3656
8000c1e4:	0c006b13 	jal	8001ac4c <__panic>
8000c1e8:	24e727e8 	addiu	a3,a3,10216

8000c1ec <file_dup>:
file_dup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:361
	filemap_release(file);
	return ret;
}

int file_dup(int fd1, int fd2)
{
8000c1ec:	27bdffd0 	addiu	sp,sp,-48
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c1f0:	2c820123 	sltiu	v0,a0,291
file_dup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:361
	filemap_release(file);
	return ret;
}

int file_dup(int fd1, int fd2)
{
8000c1f4:	afb20028 	sw	s2,40(sp)
8000c1f8:	afb10024 	sw	s1,36(sp)
8000c1fc:	afbf002c 	sw	ra,44(sp)
8000c200:	afb00020 	sw	s0,32(sp)
8000c204:	00808821 	move	s1,a0
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c208:	10400012 	beqz	v0,8000c254 <file_dup+0x68>
8000c20c:	2412ffea 	li	s2,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c210:	afa50018 	sw	a1,24(sp)
8000c214:	0c002c56 	jal	8000b158 <get_filemap>
8000c218:	00118080 	sll	s0,s1,0x2
8000c21c:	00111940 	sll	v1,s1,0x5
8000c220:	00708023 	subu	s0,v1,s0
8000c224:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c228:	8e030000 	lw	v1,0(s0)
8000c22c:	24020002 	li	v0,2
8000c230:	14620008 	bne	v1,v0,8000c254 <file_dup+0x68>
8000c234:	8fa50018 	lw	a1,24(sp)
8000c238:	8e02000c 	lw	v0,12(s0)
8000c23c:	16220005 	bne	s1,v0,8000c254 <file_dup+0x68>
8000c240:	00a02021 	move	a0,a1
file_dup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:367
	int ret;
	struct file *file1, *file2;
	if ((ret = fd2file(fd1, &file1)) != 0) {
		return ret;
	}
	if ((ret = filemap_alloc(fd2, &file2)) != 0) {
8000c244:	0c002c6a 	jal	8000b1a8 <filemap_alloc>
8000c248:	27a50010 	addiu	a1,sp,16
8000c24c:	10400008 	beqz	v0,8000c270 <file_dup+0x84>
8000c250:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:372
		return ret;
	}
	filemap_dup(file2, file1);
	return file2->fd;
}
8000c254:	8fbf002c 	lw	ra,44(sp)
8000c258:	02401021 	move	v0,s2
8000c25c:	8fb10024 	lw	s1,36(sp)
8000c260:	8fb20028 	lw	s2,40(sp)
8000c264:	8fb00020 	lw	s0,32(sp)
8000c268:	03e00008 	jr	ra
8000c26c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:370
		return ret;
	}
	if ((ret = filemap_alloc(fd2, &file2)) != 0) {
		return ret;
	}
	filemap_dup(file2, file1);
8000c270:	8fa40010 	lw	a0,16(sp)
8000c274:	0c002d8b 	jal	8000b62c <filemap_dup>
8000c278:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:371
	return file2->fd;
8000c27c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:372
}
8000c280:	8fbf002c 	lw	ra,44(sp)
8000c284:	8fb10024 	lw	s1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:371
	}
	if ((ret = filemap_alloc(fd2, &file2)) != 0) {
		return ret;
	}
	filemap_dup(file2, file1);
	return file2->fd;
8000c288:	8c52000c 	lw	s2,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:372
}
8000c28c:	8fb00020 	lw	s0,32(sp)
8000c290:	02401021 	move	v0,s2
8000c294:	8fb20028 	lw	s2,40(sp)
8000c298:	03e00008 	jr	ra
8000c29c:	27bd0030 	addiu	sp,sp,48

8000c2a0 <file_pipe>:
file_pipe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:375

int file_pipe(int fd[])
{
8000c2a0:	27bdffd0 	addiu	sp,sp,-48
8000c2a4:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:378
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c2a8:	3c10ffff 	lui	s0,0xffff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:375
	filemap_dup(file2, file1);
	return file2->fd;
}

int file_pipe(int fd[])
{
8000c2ac:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:378
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c2b0:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:375
	filemap_dup(file2, file1);
	return file2->fd;
}

int file_pipe(int fd[])
{
8000c2b4:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:378
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c2b8:	26046ad9 	addiu	a0,s0,27353
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:375
	filemap_dup(file2, file1);
	return file2->fd;
}

int file_pipe(int fd[])
{
8000c2bc:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:377
	int ret;
	struct file *file[2] = { NULL, NULL };
8000c2c0:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:378
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
8000c2c4:	0c002c6a 	jal	8000b1a8 <filemap_alloc>
8000c2c8:	afa00014 	sw	zero,20(sp)
8000c2cc:	10400012 	beqz	v0,8000c318 <file_pipe+0x78>
8000c2d0:	36046ad9 	ori	a0,s0,0x6ad9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:400

	fd[0] = file[0]->fd, fd[1] = file[1]->fd;
	return 0;

failed_cleanup:
	if (file[0] != NULL) {
8000c2d4:	8fa40010 	lw	a0,16(sp)
8000c2d8:	50800005 	beqzl	a0,8000c2f0 <file_pipe+0x50>
8000c2dc:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:401
		filemap_free(file[0]);
8000c2e0:	0c002c9f 	jal	8000b27c <filemap_free>
8000c2e4:	afa20018 	sw	v0,24(sp)
8000c2e8:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:403
	}
	if (file[1] != NULL) {
8000c2ec:	8fa40014 	lw	a0,20(sp)
8000c2f0:	10800005 	beqz	a0,8000c308 <file_pipe+0x68>
8000c2f4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:404
		filemap_free(file[1]);
8000c2f8:	0c002c9f 	jal	8000b27c <filemap_free>
8000c2fc:	afa20018 	sw	v0,24(sp)
8000c300:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:407
	}
	return ret;
}
8000c304:	8fbf002c 	lw	ra,44(sp)
8000c308:	8fb10028 	lw	s1,40(sp)
8000c30c:	8fb00024 	lw	s0,36(sp)
8000c310:	03e00008 	jr	ra
8000c314:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:381
	int ret;
	struct file *file[2] = { NULL, NULL };
	if ((ret = filemap_alloc(NO_FD, &file[0])) != 0) {
		goto failed_cleanup;
	}
	if ((ret = filemap_alloc(NO_FD, &file[1])) != 0) {
8000c318:	0c002c6a 	jal	8000b1a8 <filemap_alloc>
8000c31c:	27a50014 	addiu	a1,sp,20
8000c320:	1440ffed 	bnez	v0,8000c2d8 <file_pipe+0x38>
8000c324:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:385
		goto failed_cleanup;
	}

	if ((ret = pipe_open(&(file[0]->node), &(file[1]->node))) != 0) {
8000c328:	8fa50014 	lw	a1,20(sp)
8000c32c:	24840014 	addiu	a0,a0,20
8000c330:	0c000d71 	jal	800035c4 <pipe_open>
8000c334:	24a50014 	addiu	a1,a1,20
8000c338:	1440ffe7 	bnez	v0,8000c2d8 <file_pipe+0x38>
8000c33c:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:388
		goto failed_cleanup;
	}
	file[0]->pos = 0;
8000c340:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:389
	file[0]->readable = 1, file[0]->writable = 0;
8000c344:	24100001 	li	s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:390
	filemap_open(file[0]);
8000c348:	00602021 	move	a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:388
	}

	if ((ret = pipe_open(&(file[0]->node), &(file[1]->node))) != 0) {
		goto failed_cleanup;
	}
	file[0]->pos = 0;
8000c34c:	ac600010 	sw	zero,16(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:389
	file[0]->readable = 1, file[0]->writable = 0;
8000c350:	ac700004 	sw	s0,4(v1)
8000c354:	ac600008 	sw	zero,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:390
	filemap_open(file[0]);
8000c358:	0c002d2c 	jal	8000b4b0 <filemap_open>
8000c35c:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:392

	file[1]->pos = 0;
8000c360:	8fa40014 	lw	a0,20(sp)
8000c364:	ac800010 	sw	zero,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:393
	file[1]->readable = 0, file[1]->writable = 1;
8000c368:	ac800004 	sw	zero,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:394
	filemap_open(file[1]);
8000c36c:	0c002d2c 	jal	8000b4b0 <filemap_open>
8000c370:	ac900008 	sw	s0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:396

	fd[0] = file[0]->fd, fd[1] = file[1]->fd;
8000c374:	8fa30010 	lw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:397
	return 0;
8000c378:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:396

	file[1]->pos = 0;
	file[1]->readable = 0, file[1]->writable = 1;
	filemap_open(file[1]);

	fd[0] = file[0]->fd, fd[1] = file[1]->fd;
8000c37c:	8c63000c 	lw	v1,12(v1)
8000c380:	ae230000 	sw	v1,0(s1)
8000c384:	8fa30014 	lw	v1,20(sp)
8000c388:	8c63000c 	lw	v1,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:397
	return 0;
8000c38c:	080030c1 	j	8000c304 <file_pipe+0x64>
8000c390:	ae230004 	sw	v1,4(s1)

8000c394 <file_mkfifo>:
file_mkfifo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:410
	}
	return ret;
}

int file_mkfifo(const char *__name, uint32_t open_flags)
{
8000c394:	27bdffd0 	addiu	sp,sp,-48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:412
	bool readonly = 0;
	switch (open_flags & O_ACCMODE) {
8000c398:	30a20003 	andi	v0,a1,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:410
	}
	return ret;
}

int file_mkfifo(const char *__name, uint32_t open_flags)
{
8000c39c:	afb20028 	sw	s2,40(sp)
8000c3a0:	afb10024 	sw	s1,36(sp)
8000c3a4:	afb00020 	sw	s0,32(sp)
8000c3a8:	afbf002c 	sw	ra,44(sp)
8000c3ac:	00a09021 	move	s2,a1
8000c3b0:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:412
	bool readonly = 0;
	switch (open_flags & O_ACCMODE) {
8000c3b4:	1040000a 	beqz	v0,8000c3e0 <file_mkfifo+0x4c>
8000c3b8:	24100001 	li	s0,1
8000c3bc:	10500007 	beq	v0,s0,8000c3dc <file_mkfifo+0x48>
8000c3c0:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:449
failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
}
8000c3c4:	8fbf002c 	lw	ra,44(sp)
8000c3c8:	8fb20028 	lw	s2,40(sp)
8000c3cc:	8fb10024 	lw	s1,36(sp)
8000c3d0:	8fb00020 	lw	s0,32(sp)
8000c3d4:	03e00008 	jr	ra
8000c3d8:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:411
	return ret;
}

int file_mkfifo(const char *__name, uint32_t open_flags)
{
	bool readonly = 0;
8000c3dc:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:423
		return -E_INVAL;
	}

	int ret;
	struct file *file;
	if ((ret = filemap_alloc(NO_FD, &file)) != 0) {
8000c3e0:	3c04ffff 	lui	a0,0xffff
8000c3e4:	24846ad9 	addiu	a0,a0,27353
8000c3e8:	0c002c6a 	jal	8000b1a8 <filemap_alloc>
8000c3ec:	27a50010 	addiu	a1,sp,16
8000c3f0:	1440fff5 	bnez	v0,8000c3c8 <file_mkfifo+0x34>
8000c3f4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:428
		return ret;
	}

	char *name;
	const char *device = readonly ? "pipe:r_" : "pipe:w_";
8000c3f8:	1200001c 	beqz	s0,8000c46c <file_mkfifo+0xd8>
8000c3fc:	3c048002 	lui	a0,0x8002
8000c400:	3c048002 	lui	a0,0x8002
8000c404:	24842848 	addiu	a0,a0,10312
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:430

	if ((name = stradd(device, __name)) == NULL) {
8000c408:	0c005936 	jal	800164d8 <stradd>
8000c40c:	02202821 	move	a1,s1
8000c410:	10400027 	beqz	v0,8000c4b0 <file_mkfifo+0x11c>
8000c414:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:435
		ret = -E_NO_MEM;
		goto failed_cleanup_file;
	}

	if ((ret = vfs_open(name, open_flags, &(file->node))) != 0) {
8000c418:	8fa60010 	lw	a2,16(sp)
8000c41c:	00402021 	move	a0,v0
8000c420:	02402821 	move	a1,s2
8000c424:	0c001511 	jal	80005444 <vfs_open>
8000c428:	24c60014 	addiu	a2,a2,20
8000c42c:	10400011 	beqz	v0,8000c474 <file_mkfifo+0xe0>
8000c430:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:445
	filemap_open(file);
	kfree(name);
	return file->fd;

failed_cleanup_name:
	kfree(name);
8000c434:	02202021 	move	a0,s1
8000c438:	0c0054b9 	jal	800152e4 <kfree>
8000c43c:	afa20018 	sw	v0,24(sp)
8000c440:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:447
failed_cleanup_file:
	filemap_free(file);
8000c444:	8fa40010 	lw	a0,16(sp)
8000c448:	0c002c9f 	jal	8000b27c <filemap_free>
8000c44c:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:449
	return ret;
}
8000c450:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:448

failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
8000c454:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:449
}
8000c458:	8fb20028 	lw	s2,40(sp)
8000c45c:	8fb10024 	lw	s1,36(sp)
8000c460:	8fb00020 	lw	s0,32(sp)
8000c464:	03e00008 	jr	ra
8000c468:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:428
	if ((ret = filemap_alloc(NO_FD, &file)) != 0) {
		return ret;
	}

	char *name;
	const char *device = readonly ? "pipe:r_" : "pipe:w_";
8000c46c:	08003102 	j	8000c408 <file_mkfifo+0x74>
8000c470:	24842850 	addiu	a0,a0,10320
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:439

	if ((ret = vfs_open(name, open_flags, &(file->node))) != 0) {
		goto failed_cleanup_name;
	}
	file->pos = 0;
	file->readable = readonly, file->writable = !readonly;
8000c474:	3a020001 	xori	v0,s0,0x1
8000c478:	ac820008 	sw	v0,8(a0)
8000c47c:	ac900004 	sw	s0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:440
	filemap_open(file);
8000c480:	0c002d2c 	jal	8000b4b0 <filemap_open>
8000c484:	ac800010 	sw	zero,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:441
	kfree(name);
8000c488:	0c0054b9 	jal	800152e4 <kfree>
8000c48c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:442
	return file->fd;
8000c490:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:449
failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
}
8000c494:	8fbf002c 	lw	ra,44(sp)
8000c498:	8fb20028 	lw	s2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:442
	}
	file->pos = 0;
	file->readable = readonly, file->writable = !readonly;
	filemap_open(file);
	kfree(name);
	return file->fd;
8000c49c:	8c42000c 	lw	v0,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:449
failed_cleanup_name:
	kfree(name);
failed_cleanup_file:
	filemap_free(file);
	return ret;
}
8000c4a0:	8fb10024 	lw	s1,36(sp)
8000c4a4:	8fb00020 	lw	s0,32(sp)
8000c4a8:	03e00008 	jr	ra
8000c4ac:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:431

	char *name;
	const char *device = readonly ? "pipe:r_" : "pipe:w_";

	if ((name = stradd(device, __name)) == NULL) {
		ret = -E_NO_MEM;
8000c4b0:	08003111 	j	8000c444 <file_mkfifo+0xb0>
8000c4b4:	2402fff4 	li	v0,-12

8000c4b8 <__is_linux_devfile>:
__is_linux_devfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:453
	return ret;
}

/* linux devfile adaptor */
bool __is_linux_devfile(int fd)
{
8000c4b8:	27bdffe0 	addiu	sp,sp,-32
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c4bc:	2c820123 	sltiu	v0,a0,291
__is_linux_devfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:453
	return ret;
}

/* linux devfile adaptor */
bool __is_linux_devfile(int fd)
{
8000c4c0:	afb00018 	sw	s0,24(sp)
8000c4c4:	afbf001c 	sw	ra,28(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c4c8:	10400015 	beqz	v0,8000c520 <__is_linux_devfile+0x68>
8000c4cc:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c4d0:	0c002c56 	jal	8000b158 <get_filemap>
8000c4d4:	afa40010 	sw	a0,16(sp)
8000c4d8:	8fa40010 	lw	a0,16(sp)
8000c4dc:	00042940 	sll	a1,a0,0x5
8000c4e0:	00041880 	sll	v1,a0,0x2
8000c4e4:	00a31823 	subu	v1,a1,v1
8000c4e8:	00431021 	addu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c4ec:	8c450000 	lw	a1,0(v0)
8000c4f0:	24030002 	li	v1,2
8000c4f4:	14a3000b 	bne	a1,v1,8000c524 <__is_linux_devfile+0x6c>
8000c4f8:	8fbf001c 	lw	ra,28(sp)
8000c4fc:	8c43000c 	lw	v1,12(v0)
8000c500:	54830009 	bnel	a0,v1,8000c528 <__is_linux_devfile+0x70>
8000c504:	02001021 	move	v0,s0
__is_linux_devfile():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:459
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	if (file->node && check_inode_type(file->node, device)
8000c508:	8c420014 	lw	v0,20(v0)
8000c50c:	10400005 	beqz	v0,8000c524 <__is_linux_devfile+0x6c>
8000c510:	24031234 	li	v1,4660
8000c514:	8c440038 	lw	a0,56(v0)
8000c518:	50830006 	beql	a0,v1,8000c534 <__is_linux_devfile+0x7c>
8000c51c:	8c50000c 	lw	s0,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:463
	    && dev_is_linux_dev(vop_info(file->node, device)))
		return 1;
	return 0;
}
8000c520:	8fbf001c 	lw	ra,28(sp)
8000c524:	02001021 	move	v0,s0
8000c528:	8fb00018 	lw	s0,24(sp)
8000c52c:	03e00008 	jr	ra
8000c530:	27bd0020 	addiu	sp,sp,32
8000c534:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:452
	filemap_free(file);
	return ret;
}

/* linux devfile adaptor */
bool __is_linux_devfile(int fd)
8000c538:	0010802b 	sltu	s0,zero,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:463
	}
	if (file->node && check_inode_type(file->node, device)
	    && dev_is_linux_dev(vop_info(file->node, device)))
		return 1;
	return 0;
}
8000c53c:	02001021 	move	v0,s0
8000c540:	8fb00018 	lw	s0,24(sp)
8000c544:	03e00008 	jr	ra
8000c548:	27bd0020 	addiu	sp,sp,32

8000c54c <linux_devfile_read>:
linux_devfile_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:466

int linux_devfile_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000c54c:	27bdffc8 	addiu	sp,sp,-56
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c550:	2c820123 	sltiu	v0,a0,291
linux_devfile_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:466
		return 1;
	return 0;
}

int linux_devfile_read(int fd, void *base, size_t len, size_t * copied_store)
{
8000c554:	afb10030 	sw	s1,48(sp)
8000c558:	afbf0034 	sw	ra,52(sp)
8000c55c:	afb0002c 	sw	s0,44(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c560:	10400036 	beqz	v0,8000c63c <linux_devfile_read+0xf0>
8000c564:	00e08821 	move	s1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c568:	afa40018 	sw	a0,24(sp)
8000c56c:	afa5001c 	sw	a1,28(sp)
8000c570:	0c002c56 	jal	8000b158 <get_filemap>
8000c574:	afa60020 	sw	a2,32(sp)
8000c578:	8fa40018 	lw	a0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c57c:	8fa5001c 	lw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000c580:	00041940 	sll	v1,a0,0x5
8000c584:	00048080 	sll	s0,a0,0x2
8000c588:	00708023 	subu	s0,v1,s0
8000c58c:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c590:	8e030000 	lw	v1,0(s0)
8000c594:	24020002 	li	v0,2
8000c598:	14620028 	bne	v1,v0,8000c63c <linux_devfile_read+0xf0>
8000c59c:	8fa60020 	lw	a2,32(sp)
8000c5a0:	8e02000c 	lw	v0,12(s0)
8000c5a4:	14820026 	bne	a0,v0,8000c640 <linux_devfile_read+0xf4>
8000c5a8:	8fbf0034 	lw	ra,52(sp)
linux_devfile_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:476
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->readable) {
8000c5ac:	8e020004 	lw	v0,4(s0)
8000c5b0:	10400028 	beqz	v0,8000c654 <linux_devfile_read+0x108>
8000c5b4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:479
		return -E_INVAL;
	}
	filemap_acquire(file);
8000c5b8:	afa5001c 	sw	a1,28(sp)
8000c5bc:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000c5c0:	afa60020 	sw	a2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:480
	offset = file->pos;
8000c5c4:	8e020010 	lw	v0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:481
	struct device *dev = vop_info(file->node, device);
8000c5c8:	8e040014 	lw	a0,20(s0)
8000c5cc:	8fa5001c 	lw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:480

	if (!file->readable) {
		return -E_INVAL;
	}
	filemap_acquire(file);
	offset = file->pos;
8000c5d0:	00021fc3 	sra	v1,v0,0x1f
8000c5d4:	afa20010 	sw	v0,16(sp)
8000c5d8:	afa30014 	sw	v1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:481
	struct device *dev = vop_info(file->node, device);
8000c5dc:	1080001f 	beqz	a0,8000c65c <linux_devfile_read+0x110>
8000c5e0:	8fa60020 	lw	a2,32(sp)
8000c5e4:	8c830038 	lw	v1,56(a0)
8000c5e8:	24021234 	li	v0,4660
8000c5ec:	5462001c 	bnel	v1,v0,8000c660 <linux_devfile_read+0x114>
8000c5f0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:483
	assert(dev);
	ret = dev->d_linux_read(dev, base, len, (size_t *) & offset);
8000c5f4:	8c820010 	lw	v0,16(a0)
8000c5f8:	0040f809 	jalr	v0
8000c5fc:	27a70010 	addiu	a3,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:484
	if (ret >= 0) {
8000c600:	04400006 	bltz	v0,8000c61c <linux_devfile_read+0xd0>
8000c604:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:485
		*copied_store = (size_t) ret;
8000c608:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:486
		file->pos += ret;
8000c60c:	8e030010 	lw	v1,16(s0)
8000c610:	00621021 	addu	v0,v1,v0
8000c614:	ae020010 	sw	v0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:487
		ret = 0;
8000c618:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:489
	}
	filemap_release(file);
8000c61c:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000c620:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:490
	return ret;
8000c624:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:491
}
8000c628:	8fbf0034 	lw	ra,52(sp)
8000c62c:	8fb10030 	lw	s1,48(sp)
8000c630:	8fb0002c 	lw	s0,44(sp)
8000c634:	03e00008 	jr	ra
8000c638:	27bd0038 	addiu	sp,sp,56
8000c63c:	8fbf0034 	lw	ra,52(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:473
	struct file *file;
	/* use 8byte int, in case of 64bit off_t
	 * config in linux kernel */
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
8000c640:	00001021 	move	v0,zero
linux_devfile_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:491
		file->pos += ret;
		ret = 0;
	}
	filemap_release(file);
	return ret;
}
8000c644:	8fb10030 	lw	s1,48(sp)
8000c648:	8fb0002c 	lw	s0,44(sp)
8000c64c:	03e00008 	jr	ra
8000c650:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:477
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->readable) {
		return -E_INVAL;
8000c654:	0800318a 	j	8000c628 <linux_devfile_read+0xdc>
8000c658:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:481
	}
	filemap_acquire(file);
	offset = file->pos;
	struct device *dev = vop_info(file->node, device);
8000c65c:	3c048002 	lui	a0,0x8002
8000c660:	3c068002 	lui	a2,0x8002
8000c664:	3c078002 	lui	a3,0x8002
8000c668:	248424d8 	addiu	a0,a0,9432
8000c66c:	240501e1 	li	a1,481
8000c670:	24c60e48 	addiu	a2,a2,3656
8000c674:	0c006b13 	jal	8001ac4c <__panic>
8000c678:	24e70fdc 	addiu	a3,a3,4060

8000c67c <linux_devfile_write>:
linux_devfile_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:494
	filemap_release(file);
	return ret;
}

int linux_devfile_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000c67c:	27bdffc8 	addiu	sp,sp,-56
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c680:	2c820123 	sltiu	v0,a0,291
linux_devfile_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:494
	filemap_release(file);
	return ret;
}

int linux_devfile_write(int fd, void *base, size_t len, size_t * copied_store)
{
8000c684:	afb10030 	sw	s1,48(sp)
8000c688:	afbf0034 	sw	ra,52(sp)
8000c68c:	afb0002c 	sw	s0,44(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c690:	10400036 	beqz	v0,8000c76c <linux_devfile_write+0xf0>
8000c694:	00e08821 	move	s1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c698:	afa40018 	sw	a0,24(sp)
8000c69c:	afa5001c 	sw	a1,28(sp)
8000c6a0:	0c002c56 	jal	8000b158 <get_filemap>
8000c6a4:	afa60020 	sw	a2,32(sp)
8000c6a8:	8fa40018 	lw	a0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c6ac:	8fa5001c 	lw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000c6b0:	00041940 	sll	v1,a0,0x5
8000c6b4:	00048080 	sll	s0,a0,0x2
8000c6b8:	00708023 	subu	s0,v1,s0
8000c6bc:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c6c0:	8e030000 	lw	v1,0(s0)
8000c6c4:	24020002 	li	v0,2
8000c6c8:	14620028 	bne	v1,v0,8000c76c <linux_devfile_write+0xf0>
8000c6cc:	8fa60020 	lw	a2,32(sp)
8000c6d0:	8e02000c 	lw	v0,12(s0)
8000c6d4:	14820026 	bne	a0,v0,8000c770 <linux_devfile_write+0xf4>
8000c6d8:	8fbf0034 	lw	ra,52(sp)
linux_devfile_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:504
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->writable) {
8000c6dc:	8e020008 	lw	v0,8(s0)
8000c6e0:	10400028 	beqz	v0,8000c784 <linux_devfile_write+0x108>
8000c6e4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:507
		return -E_INVAL;
	}
	filemap_acquire(file);
8000c6e8:	afa5001c 	sw	a1,28(sp)
8000c6ec:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000c6f0:	afa60020 	sw	a2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:508
	offset = file->pos;
8000c6f4:	8e020010 	lw	v0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:509
	struct device *dev = vop_info(file->node, device);
8000c6f8:	8e040014 	lw	a0,20(s0)
8000c6fc:	8fa5001c 	lw	a1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:508

	if (!file->writable) {
		return -E_INVAL;
	}
	filemap_acquire(file);
	offset = file->pos;
8000c700:	00021fc3 	sra	v1,v0,0x1f
8000c704:	afa20010 	sw	v0,16(sp)
8000c708:	afa30014 	sw	v1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:509
	struct device *dev = vop_info(file->node, device);
8000c70c:	1080001f 	beqz	a0,8000c78c <linux_devfile_write+0x110>
8000c710:	8fa60020 	lw	a2,32(sp)
8000c714:	8c830038 	lw	v1,56(a0)
8000c718:	24021234 	li	v0,4660
8000c71c:	5462001c 	bnel	v1,v0,8000c790 <linux_devfile_write+0x114>
8000c720:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:511
	assert(dev);
	ret = dev->d_linux_write(dev, base, len, (size_t *) & offset);
8000c724:	8c820014 	lw	v0,20(a0)
8000c728:	0040f809 	jalr	v0
8000c72c:	27a70010 	addiu	a3,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:512
	if (ret >= 0) {
8000c730:	04400006 	bltz	v0,8000c74c <linux_devfile_write+0xd0>
8000c734:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:513
		*copied_store = (size_t) ret;
8000c738:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:514
		file->pos += ret;
8000c73c:	8e030010 	lw	v1,16(s0)
8000c740:	00621021 	addu	v0,v1,v0
8000c744:	ae020010 	sw	v0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:515
		ret = 0;
8000c748:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:517
	}
	filemap_release(file);
8000c74c:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000c750:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:518
	return ret;
8000c754:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:519
}
8000c758:	8fbf0034 	lw	ra,52(sp)
8000c75c:	8fb10030 	lw	s1,48(sp)
8000c760:	8fb0002c 	lw	s0,44(sp)
8000c764:	03e00008 	jr	ra
8000c768:	27bd0038 	addiu	sp,sp,56
8000c76c:	8fbf0034 	lw	ra,52(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:501
	struct file *file;
	/* use 8byte int, in case of 64bit off_t
	 * config in linux kernel */
	int64_t offset;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
8000c770:	00001021 	move	v0,zero
linux_devfile_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:519
		file->pos += ret;
		ret = 0;
	}
	filemap_release(file);
	return ret;
}
8000c774:	8fb10030 	lw	s1,48(sp)
8000c778:	8fb0002c 	lw	s0,44(sp)
8000c77c:	03e00008 	jr	ra
8000c780:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:505
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}

	if (!file->writable) {
		return -E_INVAL;
8000c784:	080031d6 	j	8000c758 <linux_devfile_write+0xdc>
8000c788:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:509
	}
	filemap_acquire(file);
	offset = file->pos;
	struct device *dev = vop_info(file->node, device);
8000c78c:	3c048002 	lui	a0,0x8002
8000c790:	3c068002 	lui	a2,0x8002
8000c794:	3c078002 	lui	a3,0x8002
8000c798:	248424d8 	addiu	a0,a0,9432
8000c79c:	240501fd 	li	a1,509
8000c7a0:	24c60e48 	addiu	a2,a2,3656
8000c7a4:	0c006b13 	jal	8001ac4c <__panic>
8000c7a8:	24e70fdc 	addiu	a3,a3,4060

8000c7ac <linux_devfile_ioctl>:
linux_devfile_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:522
	filemap_release(file);
	return ret;
}

int linux_devfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000c7ac:	27bdffd8 	addiu	sp,sp,-40
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c7b0:	2c820123 	sltiu	v0,a0,291
linux_devfile_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:522
	filemap_release(file);
	return ret;
}

int linux_devfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000c7b4:	afbf0024 	sw	ra,36(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c7b8:	10400028 	beqz	v0,8000c85c <linux_devfile_ioctl+0xb0>
8000c7bc:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c7c0:	afa40010 	sw	a0,16(sp)
8000c7c4:	afa50014 	sw	a1,20(sp)
8000c7c8:	0c002c56 	jal	8000b158 <get_filemap>
8000c7cc:	afa60018 	sw	a2,24(sp)
8000c7d0:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c7d4:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
		struct file *file = get_filemap() + fd;
8000c7d8:	00041940 	sll	v1,a0,0x5
8000c7dc:	00048080 	sll	s0,a0,0x2
8000c7e0:	00708023 	subu	s0,v1,s0
8000c7e4:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c7e8:	8e030000 	lw	v1,0(s0)
8000c7ec:	24020002 	li	v0,2
8000c7f0:	1462001a 	bne	v1,v0,8000c85c <linux_devfile_ioctl+0xb0>
8000c7f4:	8fa60018 	lw	a2,24(sp)
8000c7f8:	8e02000c 	lw	v0,12(s0)
8000c7fc:	14820017 	bne	a0,v0,8000c85c <linux_devfile_ioctl+0xb0>
8000c800:	02002021 	move	a0,s0
linux_devfile_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:528
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	filemap_acquire(file);
8000c804:	afa50014 	sw	a1,20(sp)
8000c808:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000c80c:	afa60018 	sw	a2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:529
	struct device *dev = vop_info(file->node, device);
8000c810:	8e040014 	lw	a0,20(s0)
8000c814:	8fa50014 	lw	a1,20(sp)
8000c818:	10800015 	beqz	a0,8000c870 <linux_devfile_ioctl+0xc4>
8000c81c:	8fa60018 	lw	a2,24(sp)
8000c820:	8c830038 	lw	v1,56(a0)
8000c824:	24021234 	li	v0,4660
8000c828:	54620012 	bnel	v1,v0,8000c874 <linux_devfile_ioctl+0xc8>
8000c82c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:531
	assert(dev);
	ret = dev->d_linux_ioctl(dev, cmd, arg);
8000c830:	8c820018 	lw	v0,24(a0)
8000c834:	0040f809 	jalr	v0
8000c838:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:532
	filemap_release(file);
8000c83c:	02002021 	move	a0,s0
8000c840:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000c844:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:534
	return ret;
}
8000c848:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:533
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	ret = dev->d_linux_ioctl(dev, cmd, arg);
	filemap_release(file);
	return ret;
8000c84c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:534
}
8000c850:	8fb00020 	lw	s0,32(sp)
8000c854:	03e00008 	jr	ra
8000c858:	27bd0028 	addiu	sp,sp,40
8000c85c:	8fbf0024 	lw	ra,36(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:526
int linux_devfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
8000c860:	00001021 	move	v0,zero
linux_devfile_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:534
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	ret = dev->d_linux_ioctl(dev, cmd, arg);
	filemap_release(file);
	return ret;
}
8000c864:	8fb00020 	lw	s0,32(sp)
8000c868:	03e00008 	jr	ra
8000c86c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:529
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return 0;
	}
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
8000c870:	3c048002 	lui	a0,0x8002
8000c874:	3c068002 	lui	a2,0x8002
8000c878:	3c078002 	lui	a3,0x8002
8000c87c:	248424d8 	addiu	a0,a0,9432
8000c880:	24050211 	li	a1,529
8000c884:	24c60e48 	addiu	a2,a2,3656
8000c888:	0c006b13 	jal	8001ac4c <__panic>
8000c88c:	24e70fdc 	addiu	a3,a3,4060

8000c890 <linux_devfile_mmap2>:
linux_devfile_mmap2():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:538
	return ret;
}

void *linux_devfile_mmap2(void *addr, size_t len, int prot, int flags, int fd,
			  size_t pgoff)
{
8000c890:	27bdffc0 	addiu	sp,sp,-64
8000c894:	afb10028 	sw	s1,40(sp)
8000c898:	8fb10050 	lw	s1,80(sp)
8000c89c:	afb50038 	sw	s5,56(sp)
8000c8a0:	afb40034 	sw	s4,52(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c8a4:	2e220123 	sltiu	v0,s1,291
linux_devfile_mmap2():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:538
	return ret;
}

void *linux_devfile_mmap2(void *addr, size_t len, int prot, int flags, int fd,
			  size_t pgoff)
{
8000c8a8:	afb30030 	sw	s3,48(sp)
8000c8ac:	afb2002c 	sw	s2,44(sp)
8000c8b0:	afbf003c 	sw	ra,60(sp)
8000c8b4:	afb00024 	sw	s0,36(sp)
8000c8b8:	00809021 	move	s2,a0
8000c8bc:	00a09821 	move	s3,a1
8000c8c0:	00c0a021 	move	s4,a2
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:131
	to->node = node;
}

static inline int fd2file(int fd, struct file **file_store)
{
	if (testfd(fd)) {
8000c8c4:	10400029 	beqz	v0,8000c96c <linux_devfile_mmap2+0xdc>
8000c8c8:	00e0a821 	move	s5,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:132
		struct file *file = get_filemap() + fd;
8000c8cc:	0c002c56 	jal	8000b158 <get_filemap>
8000c8d0:	00118080 	sll	s0,s1,0x2
8000c8d4:	00111940 	sll	v1,s1,0x5
8000c8d8:	00708023 	subu	s0,v1,s0
8000c8dc:	00508021 	addu	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:133
		if (file->status == FD_OPENED && file->fd == fd) {
8000c8e0:	8e030000 	lw	v1,0(s0)
8000c8e4:	24020002 	li	v0,2
8000c8e8:	14620021 	bne	v1,v0,8000c970 <linux_devfile_mmap2+0xe0>
8000c8ec:	8fbf003c 	lw	ra,60(sp)
8000c8f0:	8e02000c 	lw	v0,12(s0)
8000c8f4:	1622001f 	bne	s1,v0,8000c974 <linux_devfile_mmap2+0xe4>
8000c8f8:	00001021 	move	v0,zero
linux_devfile_mmap2():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:544
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return NULL;
	}
	filemap_acquire(file);
8000c8fc:	0c002cd2 	jal	8000b348 <filemap_acquire>
8000c900:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:545
	struct device *dev = vop_info(file->node, device);
8000c904:	8e040014 	lw	a0,20(s0)
8000c908:	10800022 	beqz	a0,8000c994 <linux_devfile_mmap2+0x104>
8000c90c:	24021234 	li	v0,4660
8000c910:	8c830038 	lw	v1,56(a0)
8000c914:	1462001f 	bne	v1,v0,8000c994 <linux_devfile_mmap2+0x104>
8000c918:	8fa20054 	lw	v0,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:547
	assert(dev);
	void *r = dev->d_linux_mmap(dev, addr, len, prot, flags, pgoff);
8000c91c:	afb50010 	sw	s5,16(sp)
8000c920:	02402821 	move	a1,s2
8000c924:	afa20014 	sw	v0,20(sp)
8000c928:	8c82001c 	lw	v0,28(a0)
8000c92c:	02603021 	move	a2,s3
8000c930:	0040f809 	jalr	v0
8000c934:	02803821 	move	a3,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:548
	filemap_release(file);
8000c938:	02002021 	move	a0,s0
8000c93c:	0c002cfa 	jal	8000b3e8 <filemap_release>
8000c940:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:550
	return r;
}
8000c944:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:549
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	void *r = dev->d_linux_mmap(dev, addr, len, prot, flags, pgoff);
	filemap_release(file);
	return r;
8000c948:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:550
}
8000c94c:	8fb50038 	lw	s5,56(sp)
8000c950:	8fb40034 	lw	s4,52(sp)
8000c954:	8fb30030 	lw	s3,48(sp)
8000c958:	8fb2002c 	lw	s2,44(sp)
8000c95c:	8fb10028 	lw	s1,40(sp)
8000c960:	8fb00024 	lw	s0,36(sp)
8000c964:	03e00008 	jr	ra
8000c968:	27bd0040 	addiu	sp,sp,64
8000c96c:	8fbf003c 	lw	ra,60(sp)
fd2file():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:542
			  size_t pgoff)
{
	int ret = -E_INVAL;
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return NULL;
8000c970:	00001021 	move	v0,zero
linux_devfile_mmap2():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:550
	struct device *dev = vop_info(file->node, device);
	assert(dev);
	void *r = dev->d_linux_mmap(dev, addr, len, prot, flags, pgoff);
	filemap_release(file);
	return r;
}
8000c974:	8fb50038 	lw	s5,56(sp)
8000c978:	8fb40034 	lw	s4,52(sp)
8000c97c:	8fb30030 	lw	s3,48(sp)
8000c980:	8fb2002c 	lw	s2,44(sp)
8000c984:	8fb10028 	lw	s1,40(sp)
8000c988:	8fb00024 	lw	s0,36(sp)
8000c98c:	03e00008 	jr	ra
8000c990:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/file.c:545
	struct file *file;
	if ((ret = fd2file(fd, &file)) != 0) {
		return NULL;
	}
	filemap_acquire(file);
	struct device *dev = vop_info(file->node, device);
8000c994:	3c048002 	lui	a0,0x8002
8000c998:	3c068002 	lui	a2,0x8002
8000c99c:	3c078002 	lui	a3,0x8002
8000c9a0:	248424d8 	addiu	a0,a0,9432
8000c9a4:	24050221 	li	a1,545
8000c9a8:	24c60e48 	addiu	a2,a2,3656
8000c9ac:	0c006b13 	jal	8001ac4c <__panic>
8000c9b0:	24e70fdc 	addiu	a3,a3,4060

8000c9b4 <fs_init>:
fs_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:13
#include <sfs.h>
#include <inode.h>
#include <assert.h>

void fs_init(void)
{
8000c9b4:	27bdffe8 	addiu	sp,sp,-24
8000c9b8:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:14
	vfs_init();
8000c9bc:	0c00122e 	jal	800048b8 <vfs_init>
8000c9c0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:15
	dev_init();
8000c9c4:	0c000877 	jal	800021dc <dev_init>
8000c9c8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:16
	pipe_init();
8000c9cc:	0c000b91 	jal	80002e44 <pipe_init>
8000c9d0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:18
	sfs_init();
}
8000c9d4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:17
void fs_init(void)
{
	vfs_init();
	dev_init();
	pipe_init();
	sfs_init();
8000c9d8:	08001948 	j	80006520 <sfs_init>
8000c9dc:	27bd0018 	addiu	sp,sp,24

8000c9e0 <fs_cleanup>:
fs_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:21
}

void fs_cleanup(void)
{
8000c9e0:	27bdffe8 	addiu	sp,sp,-24
8000c9e4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:22
	vfs_unmount_all();
8000c9e8:	0c0014cf 	jal	8000533c <vfs_unmount_all>
8000c9ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:24
	vfs_cleanup();
}
8000c9f0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:23
}

void fs_cleanup(void)
{
	vfs_unmount_all();
	vfs_cleanup();
8000c9f4:	080013a9 	j	80004ea4 <vfs_cleanup>
8000c9f8:	27bd0018 	addiu	sp,sp,24

8000c9fc <lock_fs>:
lock_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:28
}

void lock_fs(struct fs_struct *fs_struct)
{
	down(&(fs_struct->fs_sem));
8000c9fc:	08006727 	j	80019c9c <down>
8000ca00:	2484000c 	addiu	a0,a0,12

8000ca04 <unlock_fs>:
unlock_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:33
}

void unlock_fs(struct fs_struct *fs_struct)
{
	up(&(fs_struct->fs_sem));
8000ca04:	08006725 	j	80019c94 <up>
8000ca08:	2484000c 	addiu	a0,a0,12

8000ca0c <fs_create>:
fs_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:37
}

struct fs_struct *fs_create(void)
{
8000ca0c:	27bdffe0 	addiu	sp,sp,-32
8000ca10:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:40
	static_assert((int)FS_STRUCT_NENTRY > 128);
	struct fs_struct *fs_struct;
	if ((fs_struct =
8000ca14:	0c00548e 	jal	80015238 <kmalloc>
8000ca18:	24042000 	li	a0,8192
8000ca1c:	1040000c 	beqz	v0,8000ca50 <fs_create+0x44>
8000ca20:	24430020 	addiu	v1,v0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:43
	     kmalloc(sizeof(struct fs_struct) + FS_STRUCT_BUFSIZE)) != NULL) {
		fs_struct->pwd = NULL;
		fs_struct->filemap = (void *)(fs_struct + 1);
8000ca24:	ac430004 	sw	v1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:45
		atomic_set(&(fs_struct->fs_count), 0);
		sem_init(&(fs_struct->fs_sem), 1);
8000ca28:	2444000c 	addiu	a0,v0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:42
{
	static_assert((int)FS_STRUCT_NENTRY > 128);
	struct fs_struct *fs_struct;
	if ((fs_struct =
	     kmalloc(sizeof(struct fs_struct) + FS_STRUCT_BUFSIZE)) != NULL) {
		fs_struct->pwd = NULL;
8000ca2c:	ac400000 	sw	zero,0(v0)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8000ca30:	ac400008 	sw	zero,8(v0)
fs_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:45
		fs_struct->filemap = (void *)(fs_struct + 1);
		atomic_set(&(fs_struct->fs_count), 0);
		sem_init(&(fs_struct->fs_sem), 1);
8000ca34:	24050001 	li	a1,1
8000ca38:	0c00671f 	jal	80019c7c <sem_init>
8000ca3c:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:46
		filemap_init(fs_struct->filemap);
8000ca40:	8fa20010 	lw	v0,16(sp)
8000ca44:	0c002cc8 	jal	8000b320 <filemap_init>
8000ca48:	8c440004 	lw	a0,4(v0)
8000ca4c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:49
	}
	return fs_struct;
}
8000ca50:	8fbf001c 	lw	ra,28(sp)
8000ca54:	03e00008 	jr	ra
8000ca58:	27bd0020 	addiu	sp,sp,32

8000ca5c <fs_destroy>:
fs_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:52

void fs_destroy(struct fs_struct *fs_struct)
{
8000ca5c:	27bdffd8 	addiu	sp,sp,-40
8000ca60:	afb40020 	sw	s4,32(sp)
8000ca64:	afbf0024 	sw	ra,36(sp)
8000ca68:	afb3001c 	sw	s3,28(sp)
8000ca6c:	afb20018 	sw	s2,24(sp)
8000ca70:	afb10014 	sw	s1,20(sp)
8000ca74:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:53
	assert(fs_struct != NULL && fs_count(fs_struct) == 0);
8000ca78:	10800032 	beqz	a0,8000cb44 <fs_destroy+0xe8>
8000ca7c:	0080a021 	move	s4,a0
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8000ca80:	8c820008 	lw	v0,8(a0)
fs_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:53
8000ca84:	54400030 	bnezl	v0,8000cb48 <fs_destroy+0xec>
8000ca88:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:54
	if (fs_struct->pwd != NULL) {
8000ca8c:	8c840000 	lw	a0,0(a0)
8000ca90:	50800004 	beqzl	a0,8000caa4 <fs_destroy+0x48>
8000ca94:	8e900004 	lw	s0,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:55
		vop_ref_dec(fs_struct->pwd);
8000ca98:	0c001171 	jal	800045c4 <inode_ref_dec>
8000ca9c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:58
	}
	int i;
	struct file *file = fs_struct->filemap;
8000caa0:	8e900004 	lw	s0,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:64
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
			filemap_close(file);
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
8000caa4:	3c138002 	lui	s3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:60
		vop_ref_dec(fs_struct->pwd);
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
8000caa8:	24110002 	li	s1,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:51
		filemap_init(fs_struct->filemap);
	}
	return fs_struct;
}

void fs_destroy(struct fs_struct *fs_struct)
8000caac:	26121fd4 	addiu	s2,s0,8148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:64
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
			filemap_close(file);
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
8000cab0:	26732888 	addiu	s3,s3,10376
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:60
		vop_ref_dec(fs_struct->pwd);
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
8000cab4:	8e020000 	lw	v0,0(s0)
8000cab8:	1051000f 	beq	v0,s1,8000caf8 <fs_destroy+0x9c>
8000cabc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:63
			filemap_close(file);
		}
		if (file->status != FD_NONE)
8000cac0:	54400013 	bnezl	v0,8000cb10 <fs_destroy+0xb4>
8000cac4:	8e05000c 	lw	a1,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:59
	if (fs_struct->pwd != NULL) {
		vop_ref_dec(fs_struct->pwd);
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
8000cac8:	2610001c 	addiu	s0,s0,28
8000cacc:	5612fffa 	bnel	s0,s2,8000cab8 <fs_destroy+0x5c>
8000cad0:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:67
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
		assert(file->status == FD_NONE);
	}
	kfree(fs_struct);
8000cad4:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:68
}
8000cad8:	8fbf0024 	lw	ra,36(sp)
8000cadc:	8fb40020 	lw	s4,32(sp)
8000cae0:	8fb3001c 	lw	s3,28(sp)
8000cae4:	8fb20018 	lw	s2,24(sp)
8000cae8:	8fb10014 	lw	s1,20(sp)
8000caec:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:67
		}
		if (file->status != FD_NONE)
			kprintf("file->fd:%d\n", file->fd);
		assert(file->status == FD_NONE);
	}
	kfree(fs_struct);
8000caf0:	080054b9 	j	800152e4 <kfree>
8000caf4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:61
	}
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, file++) {
		if (file->status == FD_OPENED) {
			filemap_close(file);
8000caf8:	0c002d58 	jal	8000b560 <filemap_close>
8000cafc:	02002021 	move	a0,s0
8000cb00:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:63
		}
		if (file->status != FD_NONE)
8000cb04:	5040fff1 	beqzl	v0,8000cacc <fs_destroy+0x70>
8000cb08:	2610001c 	addiu	s0,s0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:64
			kprintf("file->fd:%d\n", file->fd);
8000cb0c:	8e05000c 	lw	a1,12(s0)
8000cb10:	0c007aa6 	jal	8001ea98 <kprintf>
8000cb14:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:65
		assert(file->status == FD_NONE);
8000cb18:	8e020000 	lw	v0,0(s0)
8000cb1c:	5040ffeb 	beqzl	v0,8000cacc <fs_destroy+0x70>
8000cb20:	2610001c 	addiu	s0,s0,28
8000cb24:	3c048002 	lui	a0,0x8002
8000cb28:	3c068002 	lui	a2,0x8002
8000cb2c:	3c078002 	lui	a3,0x8002
8000cb30:	24841e84 	addiu	a0,a0,7812
8000cb34:	24050041 	li	a1,65
8000cb38:	24c60e48 	addiu	a2,a2,3656
8000cb3c:	0c006b13 	jal	8001ac4c <__panic>
8000cb40:	24e72898 	addiu	a3,a3,10392
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:53
	return fs_struct;
}

void fs_destroy(struct fs_struct *fs_struct)
{
	assert(fs_struct != NULL && fs_count(fs_struct) == 0);
8000cb44:	3c048002 	lui	a0,0x8002
8000cb48:	3c068002 	lui	a2,0x8002
8000cb4c:	3c078002 	lui	a3,0x8002
8000cb50:	24841e84 	addiu	a0,a0,7812
8000cb54:	24050035 	li	a1,53
8000cb58:	24c60e48 	addiu	a2,a2,3656
8000cb5c:	0c006b13 	jal	8001ac4c <__panic>
8000cb60:	24e72858 	addiu	a3,a3,10328

8000cb64 <fs_closeall>:
fs_closeall():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:71
	}
	kfree(fs_struct);
}

void fs_closeall(struct fs_struct *fs_struct)
{
8000cb64:	27bdffe0 	addiu	sp,sp,-32
8000cb68:	afbf001c 	sw	ra,28(sp)
8000cb6c:	afb20018 	sw	s2,24(sp)
8000cb70:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:72
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000cb74:	10800018 	beqz	a0,8000cbd8 <fs_closeall+0x74>
8000cb78:	afb00010 	sw	s0,16(sp)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000cb7c:	8c820008 	lw	v0,8(a0)
fs_closeall():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:72
8000cb80:	18400015 	blez	v0,8000cbd8 <fs_closeall+0x74>
8000cb84:	24120002 	li	s2,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:74
	int i;
	struct file *file = fs_struct->filemap;
8000cb88:	8c910004 	lw	s1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:75
	for (i = 3, file += 2; i < FS_STRUCT_NENTRY; i++, file++) {
8000cb8c:	26300038 	addiu	s0,s1,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:70
		assert(file->status == FD_NONE);
	}
	kfree(fs_struct);
}

void fs_closeall(struct fs_struct *fs_struct)
8000cb90:	080032e8 	j	8000cba0 <fs_closeall+0x3c>
8000cb94:	26311fb8 	addiu	s1,s1,8120
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:75
{
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 3, file += 2; i < FS_STRUCT_NENTRY; i++, file++) {
8000cb98:	1211000a 	beq	s0,s1,8000cbc4 <fs_closeall+0x60>
8000cb9c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:76
		if (file->status == FD_OPENED) {
8000cba0:	8e020000 	lw	v0,0(s0)
8000cba4:	5452fffc 	bnel	v0,s2,8000cb98 <fs_closeall+0x34>
8000cba8:	2610001c 	addiu	s0,s0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:77
			filemap_close(file);
8000cbac:	02002021 	move	a0,s0
8000cbb0:	0c002d58 	jal	8000b560 <filemap_close>
8000cbb4:	2610001c 	addiu	s0,s0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:75
void fs_closeall(struct fs_struct *fs_struct)
{
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
	int i;
	struct file *file = fs_struct->filemap;
	for (i = 3, file += 2; i < FS_STRUCT_NENTRY; i++, file++) {
8000cbb8:	5611fffa 	bnel	s0,s1,8000cba4 <fs_closeall+0x40>
8000cbbc:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:80
		if (file->status == FD_OPENED) {
			filemap_close(file);
		}
	}
}
8000cbc0:	8fbf001c 	lw	ra,28(sp)
8000cbc4:	8fb20018 	lw	s2,24(sp)
8000cbc8:	8fb10014 	lw	s1,20(sp)
8000cbcc:	8fb00010 	lw	s0,16(sp)
8000cbd0:	03e00008 	jr	ra
8000cbd4:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:72
	kfree(fs_struct);
}

void fs_closeall(struct fs_struct *fs_struct)
{
	assert(fs_struct != NULL && fs_count(fs_struct) > 0);
8000cbd8:	3c048002 	lui	a0,0x8002
8000cbdc:	3c068002 	lui	a2,0x8002
8000cbe0:	3c078002 	lui	a3,0x8002
8000cbe4:	24841e84 	addiu	a0,a0,7812
8000cbe8:	24050048 	li	a1,72
8000cbec:	24c60e48 	addiu	a2,a2,3656
8000cbf0:	0c006b13 	jal	8001ac4c <__panic>
8000cbf4:	24e724e0 	addiu	a3,a3,9440

8000cbf8 <dup_fs>:
dup_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:83
		}
	}
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
{
8000cbf8:	27bdffd0 	addiu	sp,sp,-48
8000cbfc:	afb1001c 	sw	s1,28(sp)
8000cc00:	afbf002c 	sw	ra,44(sp)
8000cc04:	afb40028 	sw	s4,40(sp)
8000cc08:	afb30024 	sw	s3,36(sp)
8000cc0c:	afb20020 	sw	s2,32(sp)
8000cc10:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:84
	assert(to != NULL && from != NULL);
8000cc14:	10800039 	beqz	a0,8000ccfc <dup_fs+0x104>
8000cc18:	00808821 	move	s1,a0
8000cc1c:	50a00038 	beqzl	a1,8000cd00 <dup_fs+0x108>
8000cc20:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000cc24:	8c820008 	lw	v0,8(a0)
dup_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:85
	assert(fs_count(to) == 0 && fs_count(from) > 0);
8000cc28:	1440002d 	bnez	v0,8000cce0 <dup_fs+0xe8>
8000cc2c:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8000cc30:	8ca20008 	lw	v0,8(a1)
dup_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:85
8000cc34:	1840002b 	blez	v0,8000cce4 <dup_fs+0xec>
8000cc38:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:86
	if ((to->pwd = from->pwd) != NULL) {
8000cc3c:	8ca40000 	lw	a0,0(a1)
8000cc40:	10800004 	beqz	a0,8000cc54 <dup_fs+0x5c>
8000cc44:	ae240000 	sw	a0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:87
		vop_ref_inc(to->pwd);
8000cc48:	0c0010b5 	jal	800042d4 <inode_ref_inc>
8000cc4c:	afa50010 	sw	a1,16(sp)
8000cc50:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:90
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
8000cc54:	8cb00004 	lw	s0,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:92
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
		if (from_file->status == FD_OPENED) {
8000cc58:	24130002 	li	s3,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:90
	assert(fs_count(to) == 0 && fs_count(from) > 0);
	if ((to->pwd = from->pwd) != NULL) {
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
8000cc5c:	8e310004 	lw	s1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:92
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
		if (from_file->status == FD_OPENED) {
8000cc60:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:82
			filemap_close(file);
		}
	}
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
8000cc64:	26121fd4 	addiu	s2,s0,8148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:92
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
		if (from_file->status == FD_OPENED) {
8000cc68:	1453000b 	bne	v0,s3,8000cc98 <dup_fs+0xa0>
8000cc6c:	24140001 	li	s4,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:94
			/* alloc_fd first */
			to_file->status = FD_INIT;
8000cc70:	ae340000 	sw	s4,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:95
			filemap_dup(to_file, from_file);
8000cc74:	02202021 	move	a0,s1
8000cc78:	0c002d8b 	jal	8000b62c <filemap_dup>
8000cc7c:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:91
	if ((to->pwd = from->pwd) != NULL) {
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
8000cc80:	2610001c 	addiu	s0,s0,28
8000cc84:	1212000d 	beq	s0,s2,8000ccbc <dup_fs+0xc4>
8000cc88:	2631001c 	addiu	s1,s1,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:92
		if (from_file->status == FD_OPENED) {
8000cc8c:	8e020000 	lw	v0,0(s0)
8000cc90:	5053fff8 	beql	v0,s3,8000cc74 <dup_fs+0x7c>
8000cc94:	ae340000 	sw	s4,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:97
			/* alloc_fd first */
			to_file->status = FD_INIT;
			filemap_dup(to_file, from_file);
		}
		else if(from_file->status != FD_NONE) {
8000cc98:	5040fffa 	beqzl	v0,8000cc84 <dup_fs+0x8c>
8000cc9c:	2610001c 	addiu	s0,s0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:98
			to_file->status = from_file->status;
8000cca0:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:99
			filemap_dup_close(to_file, from_file);
8000cca4:	02202021 	move	a0,s1
8000cca8:	02002821 	move	a1,s0
8000ccac:	0c002db1 	jal	8000b6c4 <filemap_dup_close>
8000ccb0:	2610001c 	addiu	s0,s0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:91
	if ((to->pwd = from->pwd) != NULL) {
		vop_ref_inc(to->pwd);
	}
	int i;
	struct file *to_file = to->filemap, *from_file = from->filemap;
	for (i = 0; i < FS_STRUCT_NENTRY; i++, to_file++, from_file++) {
8000ccb4:	1612fff5 	bne	s0,s2,8000cc8c <dup_fs+0x94>
8000ccb8:	2631001c 	addiu	s1,s1,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:103
			to_file->status = from_file->status;
			filemap_dup_close(to_file, from_file);
		}
	}
	return 0;
}
8000ccbc:	8fbf002c 	lw	ra,44(sp)
8000ccc0:	00001021 	move	v0,zero
8000ccc4:	8fb40028 	lw	s4,40(sp)
8000ccc8:	8fb30024 	lw	s3,36(sp)
8000cccc:	8fb20020 	lw	s2,32(sp)
8000ccd0:	8fb1001c 	lw	s1,28(sp)
8000ccd4:	8fb00018 	lw	s0,24(sp)
8000ccd8:	03e00008 	jr	ra
8000ccdc:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:85
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
{
	assert(to != NULL && from != NULL);
	assert(fs_count(to) == 0 && fs_count(from) > 0);
8000cce0:	3c068002 	lui	a2,0x8002
8000cce4:	3c078002 	lui	a3,0x8002
8000cce8:	24841e84 	addiu	a0,a0,7812
8000ccec:	24050055 	li	a1,85
8000ccf0:	24c60e48 	addiu	a2,a2,3656
8000ccf4:	0c006b13 	jal	8001ac4c <__panic>
8000ccf8:	24e728cc 	addiu	a3,a3,10444
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/fs.c:84
	}
}

int dup_fs(struct fs_struct *to, struct fs_struct *from)
{
	assert(to != NULL && from != NULL);
8000ccfc:	3c048002 	lui	a0,0x8002
8000cd00:	3c068002 	lui	a2,0x8002
8000cd04:	3c078002 	lui	a3,0x8002
8000cd08:	24841e84 	addiu	a0,a0,7812
8000cd0c:	24050054 	li	a1,84
8000cd10:	24c60e48 	addiu	a2,a2,3656
8000cd14:	0c006b13 	jal	8001ac4c <__panic>
8000cd18:	24e728b0 	addiu	a3,a3,10416

8000cd1c <iobuf_init>:
iobuf_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:9
#include <error.h>
#include <assert.h>

struct iobuf *iobuf_init(struct iobuf *iob, void *base, size_t len,
			 off_t offset)
{
8000cd1c:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:10
	iob->io_base = base;
8000cd20:	ac850000 	sw	a1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:11
	iob->io_offset = offset;
8000cd24:	ac870004 	sw	a3,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:12
	iob->io_len = iob->io_resid = len;
8000cd28:	ac86000c 	sw	a2,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:14
	return iob;
}
8000cd2c:	03e00008 	jr	ra
8000cd30:	ac860008 	sw	a2,8(a0)

8000cd34 <iobuf_skip>:
iobuf_skip():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:57
	return (len == 0) ? 0 : -E_NO_MEM;
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
	assert(iob->io_resid >= n);
8000cd34:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:56
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
8000cd38:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:57
	assert(iob->io_resid >= n);
8000cd3c:	0045182b 	sltu	v1,v0,a1
8000cd40:	1460000c 	bnez	v1,8000cd74 <iobuf_skip+0x40>
8000cd44:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:58
	iob->io_base += n, iob->io_offset += n, iob->io_resid -= n;
8000cd48:	8c830000 	lw	v1,0(a0)
8000cd4c:	8c860004 	lw	a2,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:59
}
8000cd50:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:58
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
	assert(iob->io_resid >= n);
	iob->io_base += n, iob->io_offset += n, iob->io_resid -= n;
8000cd54:	00451023 	subu	v0,v0,a1
8000cd58:	00651821 	addu	v1,v1,a1
8000cd5c:	00c52821 	addu	a1,a2,a1
8000cd60:	ac830000 	sw	v1,0(a0)
8000cd64:	ac850004 	sw	a1,4(a0)
8000cd68:	ac82000c 	sw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:59
}
8000cd6c:	03e00008 	jr	ra
8000cd70:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:57
	return (len == 0) ? 0 : -E_NO_MEM;
}

void iobuf_skip(struct iobuf *iob, size_t n)
{
	assert(iob->io_resid >= n);
8000cd74:	3c048002 	lui	a0,0x8002
8000cd78:	3c068002 	lui	a2,0x8002
8000cd7c:	3c078002 	lui	a3,0x8002
8000cd80:	248428f4 	addiu	a0,a0,10484
8000cd84:	24050039 	li	a1,57
8000cd88:	24c60e48 	addiu	a2,a2,3656
8000cd8c:	0c006b13 	jal	8001ac4c <__panic>
8000cd90:	24e728fc 	addiu	a3,a3,10492

8000cd94 <iobuf_move_zeros>:
iobuf_move_zeros():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:42
}

int iobuf_move_zeros(struct iobuf *iob, size_t len, size_t * copiedp)
{
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000cd94:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:40
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}

int iobuf_move_zeros(struct iobuf *iob, size_t len, size_t * copiedp)
{
8000cd98:	27bdffd8 	addiu	sp,sp,-40
8000cd9c:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:42
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000cda0:	0045882b 	sltu	s1,v0,a1
8000cda4:	00b1100a 	movz	v0,a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:40
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}

int iobuf_move_zeros(struct iobuf *iob, size_t len, size_t * copiedp)
{
8000cda8:	afb30020 	sw	s3,32(sp)
8000cdac:	afb2001c 	sw	s2,28(sp)
8000cdb0:	afb00014 	sw	s0,20(sp)
8000cdb4:	afbf0024 	sw	ra,36(sp)
8000cdb8:	00809821 	move	s3,a0
8000cdbc:	00a08021 	move	s0,a1
8000cdc0:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:45
	size_t alen;
	if ((alen = iob->io_resid) > len) {
		alen = len;
	}
	if (alen > 0) {
8000cdc4:	1440000c 	bnez	v0,8000cdf8 <iobuf_move_zeros+0x64>
8000cdc8:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:49
		memset(iob->io_base, 0, alen);
		iobuf_skip(iob, alen), len -= alen;
	}
	if (copiedp != NULL) {
8000cdcc:	56400001 	bnezl	s2,8000cdd4 <iobuf_move_zeros+0x40>
8000cdd0:	ae510000 	sw	s1,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:53
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}
8000cdd4:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:52
		iobuf_skip(iob, alen), len -= alen;
	}
	if (copiedp != NULL) {
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
8000cdd8:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:53
}
8000cddc:	0010100a 	movz	v0,zero,s0
8000cde0:	8fb30020 	lw	s3,32(sp)
8000cde4:	8fb2001c 	lw	s2,28(sp)
8000cde8:	8fb10018 	lw	s1,24(sp)
8000cdec:	8fb00014 	lw	s0,20(sp)
8000cdf0:	03e00008 	jr	ra
8000cdf4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:46
	size_t alen;
	if ((alen = iob->io_resid) > len) {
		alen = len;
	}
	if (alen > 0) {
		memset(iob->io_base, 0, alen);
8000cdf8:	8c840000 	lw	a0,0(a0)
8000cdfc:	00403021 	move	a2,v0
8000ce00:	0c005c5a 	jal	80017168 <memset>
8000ce04:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:47
		iobuf_skip(iob, alen), len -= alen;
8000ce08:	02602021 	move	a0,s3
8000ce0c:	0c00334d 	jal	8000cd34 <iobuf_skip>
8000ce10:	02202821 	move	a1,s1
8000ce14:	08003373 	j	8000cdcc <iobuf_move_zeros+0x38>
8000ce18:	02118023 	subu	s0,s0,s1

8000ce1c <iobuf_move>:
iobuf_move():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:21
int
iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b,
	   size_t * copiedp)
{
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000ce1c:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:19
}

int
iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b,
	   size_t * copiedp)
{
8000ce20:	27bdffd8 	addiu	sp,sp,-40
8000ce24:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:21
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000ce28:	0046882b 	sltu	s1,v0,a2
8000ce2c:	00d1100a 	movz	v0,a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:19
}

int
iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b,
	   size_t * copiedp)
{
8000ce30:	afb30020 	sw	s3,32(sp)
8000ce34:	afb2001c 	sw	s2,28(sp)
8000ce38:	afb00014 	sw	s0,20(sp)
8000ce3c:	afbf0024 	sw	ra,36(sp)
8000ce40:	00809021 	move	s2,a0
8000ce44:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:21
	size_t alen;
	if ((alen = iob->io_resid) > len) {
8000ce48:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:24
		alen = len;
	}
	if (alen > 0) {
8000ce4c:	1040000b 	beqz	v0,8000ce7c <iobuf_move+0x60>
8000ce50:	8fb30038 	lw	s3,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:25
		void *src = iob->io_base, *dst = data;
8000ce54:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:26
		if (m2b) {
8000ce58:	14e00013 	bnez	a3,8000cea8 <iobuf_move+0x8c>
8000ce5c:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:30
			void *tmp = src;
			src = dst, dst = tmp;
		}
		memmove(dst, src, alen);
8000ce60:	02203021 	move	a2,s1
8000ce64:	0c005c64 	jal	80017190 <memmove>
8000ce68:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:31
		iobuf_skip(iob, alen), len -= alen;
8000ce6c:	02402021 	move	a0,s2
8000ce70:	0c00334d 	jal	8000cd34 <iobuf_skip>
8000ce74:	02202821 	move	a1,s1
8000ce78:	02118023 	subu	s0,s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:33
	}
	if (copiedp != NULL) {
8000ce7c:	56600001 	bnezl	s3,8000ce84 <iobuf_move+0x68>
8000ce80:	ae710000 	sw	s1,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:37
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
}
8000ce84:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:36
		iobuf_skip(iob, alen), len -= alen;
	}
	if (copiedp != NULL) {
		*copiedp = alen;
	}
	return (len == 0) ? 0 : -E_NO_MEM;
8000ce88:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:37
}
8000ce8c:	0010100a 	movz	v0,zero,s0
8000ce90:	8fb30020 	lw	s3,32(sp)
8000ce94:	8fb2001c 	lw	s2,28(sp)
8000ce98:	8fb10018 	lw	s1,24(sp)
8000ce9c:	8fb00014 	lw	s0,20(sp)
8000cea0:	03e00008 	jr	ra
8000cea4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:28
	}
	if (alen > 0) {
		void *src = iob->io_base, *dst = data;
		if (m2b) {
			void *tmp = src;
			src = dst, dst = tmp;
8000cea8:	00402021 	move	a0,v0
8000ceac:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:30
		}
		memmove(dst, src, alen);
8000ceb0:	02203021 	move	a2,s1
8000ceb4:	0c005c64 	jal	80017190 <memmove>
8000ceb8:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/iobuf.c:31
		iobuf_skip(iob, alen), len -= alen;
8000cebc:	02402021 	move	a0,s2
8000cec0:	0c00334d 	jal	8000cd34 <iobuf_skip>
8000cec4:	02202821 	move	a1,s1
8000cec8:	0800339f 	j	8000ce7c <iobuf_move+0x60>
8000cecc:	02118023 	subu	s0,s0,s1

8000ced0 <copy_path>:
copy_path():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:21

#define IOBUF_SIZE                          4096

static int copy_path(char **to, const char *from)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000ced0:	3c028015 	lui	v0,0x8015
8000ced4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:20
#include <mips_io.h>

#define IOBUF_SIZE                          4096

static int copy_path(char **to, const char *from)
{
8000ced8:	27bdffd8 	addiu	sp,sp,-40
8000cedc:	afb2001c 	sw	s2,28(sp)
8000cee0:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:23
	struct mm_struct *mm = pls_read(current)->mm;
	char *buffer;
	if ((buffer = kmalloc(FS_MAX_FPATH_LEN + 1)) == NULL) {
8000cee4:	24041000 	li	a0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:20
#include <mips_io.h>

#define IOBUF_SIZE                          4096

static int copy_path(char **to, const char *from)
{
8000cee8:	afb30020 	sw	s3,32(sp)
8000ceec:	afb10018 	sw	s1,24(sp)
8000cef0:	afb00014 	sw	s0,20(sp)
8000cef4:	afbf0024 	sw	ra,36(sp)
8000cef8:	00a09821 	move	s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:23
	struct mm_struct *mm = pls_read(current)->mm;
	char *buffer;
	if ((buffer = kmalloc(FS_MAX_FPATH_LEN + 1)) == NULL) {
8000cefc:	0c00548e 	jal	80015238 <kmalloc>
8000cf00:	8c510020 	lw	s1,32(v0)
8000cf04:	00408021 	move	s0,v0
8000cf08:	1200000e 	beqz	s0,8000cf44 <copy_path+0x74>
8000cf0c:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:26
		return -E_NO_MEM;
	}
	lock_mm(mm);
8000cf10:	0c004c2e 	jal	800130b8 <lock_mm>
8000cf14:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:27
	if (!copy_string(mm, buffer, from, FS_MAX_FPATH_LEN + 1)) {
8000cf18:	02202021 	move	a0,s1
8000cf1c:	02002821 	move	a1,s0
8000cf20:	02603021 	move	a2,s3
8000cf24:	0c007969 	jal	8001e5a4 <copy_string>
8000cf28:	24071000 	li	a3,4096
8000cf2c:	1040000c 	beqz	v0,8000cf60 <copy_path+0x90>
8000cf30:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:31
		unlock_mm(mm);
		goto failed_cleanup;
	}
	unlock_mm(mm);
8000cf34:	0c004c3f 	jal	800130fc <unlock_mm>
8000cf38:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:32
	*to = buffer;
8000cf3c:	ae500000 	sw	s0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:33
	return 0;
8000cf40:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:38

failed_cleanup:
	kfree(buffer);
	return -E_INVAL;
}
8000cf44:	8fbf0024 	lw	ra,36(sp)
8000cf48:	8fb30020 	lw	s3,32(sp)
8000cf4c:	8fb2001c 	lw	s2,28(sp)
8000cf50:	8fb10018 	lw	s1,24(sp)
8000cf54:	8fb00014 	lw	s0,20(sp)
8000cf58:	03e00008 	jr	ra
8000cf5c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:28
	if ((buffer = kmalloc(FS_MAX_FPATH_LEN + 1)) == NULL) {
		return -E_NO_MEM;
	}
	lock_mm(mm);
	if (!copy_string(mm, buffer, from, FS_MAX_FPATH_LEN + 1)) {
		unlock_mm(mm);
8000cf60:	0c004c3f 	jal	800130fc <unlock_mm>
8000cf64:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:36
	unlock_mm(mm);
	*to = buffer;
	return 0;

failed_cleanup:
	kfree(buffer);
8000cf68:	0c0054b9 	jal	800152e4 <kfree>
8000cf6c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:37
	return -E_INVAL;
8000cf70:	080033d1 	j	8000cf44 <copy_path+0x74>
8000cf74:	2402ffea 	li	v0,-22

8000cf78 <sysfile_open>:
sysfile_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:41
}

int sysfile_open(const char *__path, uint32_t open_flags)
{
8000cf78:	27bdffd8 	addiu	sp,sp,-40
8000cf7c:	00801021 	move	v0,a0
8000cf80:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:44
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000cf84:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:41
	kfree(buffer);
	return -E_INVAL;
}

int sysfile_open(const char *__path, uint32_t open_flags)
{
8000cf88:	00a08021 	move	s0,a1
8000cf8c:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:44
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000cf90:	0c0033b4 	jal	8000ced0 <copy_path>
8000cf94:	00402821 	move	a1,v0
8000cf98:	14400009 	bnez	v0,8000cfc0 <sysfile_open+0x48>
8000cf9c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:47
		return ret;
	}
	ret = file_open(path, open_flags);
8000cfa0:	8fa40010 	lw	a0,16(sp)
8000cfa4:	0c002dfd 	jal	8000b7f4 <file_open>
8000cfa8:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:48
	kfree(path);
8000cfac:	8fa40010 	lw	a0,16(sp)
8000cfb0:	0c0054b9 	jal	800152e4 <kfree>
8000cfb4:	afa20018 	sw	v0,24(sp)
8000cfb8:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:50
	return ret;
}
8000cfbc:	8fbf0024 	lw	ra,36(sp)
8000cfc0:	8fb00020 	lw	s0,32(sp)
8000cfc4:	03e00008 	jr	ra
8000cfc8:	27bd0028 	addiu	sp,sp,40

8000cfcc <sysfile_close>:
sysfile_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:54

int sysfile_close(int fd)
{
	return file_close(fd);
8000cfcc:	08002e62 	j	8000b988 <file_close>
8000cfd0:	00000000 	nop

8000cfd4 <sysfile_read>:
sysfile_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:58
}

int sysfile_read(int fd, void *base, size_t len)
{
8000cfd4:	27bdffc0 	addiu	sp,sp,-64
8000cfd8:	afb30024 	sw	s3,36(sp)
8000cfdc:	00a09821 	move	s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:60
	int ret = 0;
	kprintf("*base=%d\n\r",*(int*)base);
8000cfe0:	8ca50000 	lw	a1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:58
{
	return file_close(fd);
}

int sysfile_read(int fd, void *base, size_t len)
{
8000cfe4:	afb20020 	sw	s2,32(sp)
8000cfe8:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:60
	int ret = 0;
	kprintf("*base=%d\n\r",*(int*)base);
8000cfec:	3c048002 	lui	a0,0x8002
8000cff0:	24842910 	addiu	a0,a0,10512
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:58
{
	return file_close(fd);
}

int sysfile_read(int fd, void *base, size_t len)
{
8000cff4:	afbf003c 	sw	ra,60(sp)
8000cff8:	afb40028 	sw	s4,40(sp)
8000cffc:	afb1001c 	sw	s1,28(sp)
8000d000:	afb00018 	sw	s0,24(sp)
8000d004:	afbe0038 	sw	s8,56(sp)
8000d008:	00c08021 	move	s0,a2
8000d00c:	afb70034 	sw	s7,52(sp)
8000d010:	afb60030 	sw	s6,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:60
	int ret = 0;
	kprintf("*base=%d\n\r",*(int*)base);
8000d014:	0c007aa6 	jal	8001ea98 <kprintf>
8000d018:	afb5002c 	sw	s5,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:61
	kprintf("len=%d\n\r",len);
8000d01c:	3c048002 	lui	a0,0x8002
8000d020:	2484291c 	addiu	a0,a0,10524
8000d024:	0c007aa6 	jal	8001ea98 <kprintf>
8000d028:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:62
	struct mm_struct *mm = pls_read(current)->mm;
8000d02c:	3c028015 	lui	v0,0x8015
8000d030:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:64
	if (len == 0) {
		return 0;
8000d034:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:63
{
	int ret = 0;
	kprintf("*base=%d\n\r",*(int*)base);
	kprintf("len=%d\n\r",len);
	struct mm_struct *mm = pls_read(current)->mm;
	if (len == 0) {
8000d038:	1600000e 	bnez	s0,8000d074 <sysfile_read+0xa0>
8000d03c:	8c540020 	lw	s4,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:112
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d040:	8fbf003c 	lw	ra,60(sp)
8000d044:	02201021 	move	v0,s1
8000d048:	8fbe0038 	lw	s8,56(sp)
8000d04c:	8fb70034 	lw	s7,52(sp)
8000d050:	8fb60030 	lw	s6,48(sp)
8000d054:	8fb5002c 	lw	s5,44(sp)
8000d058:	8fb40028 	lw	s4,40(sp)
8000d05c:	8fb30024 	lw	s3,36(sp)
8000d060:	8fb20020 	lw	s2,32(sp)
8000d064:	8fb1001c 	lw	s1,28(sp)
8000d068:	8fb00018 	lw	s0,24(sp)
8000d06c:	03e00008 	jr	ra
8000d070:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:66
	kprintf("len=%d\n\r",len);
	struct mm_struct *mm = pls_read(current)->mm;
	if (len == 0) {
		return 0;
	}
	if (!file_testfd(fd, 1, 0)) {
8000d074:	02402021 	move	a0,s2
8000d078:	24050001 	li	a1,1
8000d07c:	0c002dd5 	jal	8000b754 <file_testfd>
8000d080:	00003021 	move	a2,zero
8000d084:	1040ffee 	beqz	v0,8000d040 <sysfile_read+0x6c>
8000d088:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:70
		return -E_INVAL;
	}
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
8000d08c:	0c00312e 	jal	8000c4b8 <__is_linux_devfile>
8000d090:	02402021 	move	a0,s2
8000d094:	1440003f 	bnez	v0,8000d194 <sysfile_read+0x1c0>
8000d098:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:78
		if (ret)
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
8000d09c:	0c00548e 	jal	80015238 <kmalloc>
8000d0a0:	24041000 	li	a0,4096
8000d0a4:	1040004f 	beqz	v0,8000d1e4 <sysfile_read+0x210>
8000d0a8:	0040a821 	move	s5,v0
8000d0ac:	0000b821 	move	s7,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:84
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
		if ((alen = IOBUF_SIZE) > len) {
8000d0b0:	24161000 	li	s6,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:96
				if (copy_to_user(mm, base, buffer, alen)) {
					assert(len >= alen);
					base += alen, len -= alen, copied +=
					    alen;
				} else if (ret == 0) {
					ret = -E_INVAL;
8000d0b4:	241effea 	li	s8,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:84
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
		if ((alen = IOBUF_SIZE) > len) {
8000d0b8:	2e021000 	sltiu	v0,s0,4096
8000d0bc:	afb60010 	sw	s6,16(sp)
8000d0c0:	10400003 	beqz	v0,8000d0d0 <sysfile_read+0xfc>
8000d0c4:	24061000 	li	a2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:85
			alen = len;
8000d0c8:	afb00010 	sw	s0,16(sp)
8000d0cc:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:87
		}
		ret = file_read(fd, buffer, alen, &alen);
8000d0d0:	02402021 	move	a0,s2
8000d0d4:	02a02821 	move	a1,s5
8000d0d8:	0c002e7f 	jal	8000b9fc <file_read>
8000d0dc:	27a70010 	addiu	a3,sp,16
8000d0e0:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:88
		if (alen != 0) {
8000d0e4:	8fa20010 	lw	v0,16(sp)
8000d0e8:	14400017 	bnez	v0,8000d148 <sysfile_read+0x174>
8000d0ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:101
					ret = -E_INVAL;
				}
			}
			unlock_mm(mm);
		}
		if (ret != 0 || alen == 0) {
8000d0f0:	16200005 	bnez	s1,8000d108 <sysfile_read+0x134>
8000d0f4:	8fa20010 	lw	v0,16(sp)
8000d0f8:	10400003 	beqz	v0,8000d108 <sysfile_read+0x134>
8000d0fc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:83
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
8000d100:	1600ffee 	bnez	s0,8000d0bc <sysfile_read+0xe8>
8000d104:	2e021000 	sltiu	v0,s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:107
			goto out;
		}
	}

out:
	kfree(buffer);
8000d108:	0c0054b9 	jal	800152e4 <kfree>
8000d10c:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:112
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d110:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:109
	}

out:
	kfree(buffer);
	if (copied != 0) {
		return copied;
8000d114:	02f7880b 	movn	s1,s7,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:112
	}
	return ret;
}
8000d118:	02201021 	move	v0,s1
8000d11c:	8fbe0038 	lw	s8,56(sp)
8000d120:	8fb70034 	lw	s7,52(sp)
8000d124:	8fb60030 	lw	s6,48(sp)
8000d128:	8fb5002c 	lw	s5,44(sp)
8000d12c:	8fb40028 	lw	s4,40(sp)
8000d130:	8fb30024 	lw	s3,36(sp)
8000d134:	8fb20020 	lw	s2,32(sp)
8000d138:	8fb1001c 	lw	s1,28(sp)
8000d13c:	8fb00018 	lw	s0,24(sp)
8000d140:	03e00008 	jr	ra
8000d144:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:89
		if ((alen = IOBUF_SIZE) > len) {
			alen = len;
		}
		ret = file_read(fd, buffer, alen, &alen);
		if (alen != 0) {
			lock_mm(mm);
8000d148:	0c004c2e 	jal	800130b8 <lock_mm>
8000d14c:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:91
			{
				if (copy_to_user(mm, base, buffer, alen)) {
8000d150:	8fa70010 	lw	a3,16(sp)
8000d154:	02802021 	move	a0,s4
8000d158:	02602821 	move	a1,s3
8000d15c:	0c007950 	jal	8001e540 <copy_to_user>
8000d160:	02a03021 	move	a2,s5
8000d164:	50400007 	beqzl	v0,8000d184 <sysfile_read+0x1b0>
8000d168:	03d1880a 	movz	s1,s8,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:92
					assert(len >= alen);
8000d16c:	8fa20010 	lw	v0,16(sp)
8000d170:	0202182b 	sltu	v1,s0,v0
8000d174:	1460001d 	bnez	v1,8000d1ec <sysfile_read+0x218>
8000d178:	02629821 	addu	s3,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:93
					base += alen, len -= alen, copied +=
8000d17c:	02028023 	subu	s0,s0,v0
8000d180:	02e2b821 	addu	s7,s7,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:99
					    alen;
				} else if (ret == 0) {
					ret = -E_INVAL;
				}
			}
			unlock_mm(mm);
8000d184:	0c004c3f 	jal	800130fc <unlock_mm>
8000d188:	02802021 	move	a0,s4
8000d18c:	0800343c 	j	8000d0f0 <sysfile_read+0x11c>
8000d190:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:72
		return -E_INVAL;
	}
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
		size_t alen = 0;
		ret = linux_devfile_read(fd, base, len, &alen);
8000d194:	02602821 	move	a1,s3
8000d198:	02003021 	move	a2,s0
8000d19c:	27a70014 	addiu	a3,sp,20
8000d1a0:	0c003153 	jal	8000c54c <linux_devfile_read>
8000d1a4:	afa00014 	sw	zero,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:75
		if (ret)
			return ret;
		return alen;
8000d1a8:	8fb10014 	lw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:112
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d1ac:	8fbf003c 	lw	ra,60(sp)
8000d1b0:	8fbe0038 	lw	s8,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:75
	if (__is_linux_devfile(fd)) {
		size_t alen = 0;
		ret = linux_devfile_read(fd, base, len, &alen);
		if (ret)
			return ret;
		return alen;
8000d1b4:	0042880b 	movn	s1,v0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:112
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d1b8:	02201021 	move	v0,s1
8000d1bc:	8fb70034 	lw	s7,52(sp)
8000d1c0:	8fb60030 	lw	s6,48(sp)
8000d1c4:	8fb5002c 	lw	s5,44(sp)
8000d1c8:	8fb40028 	lw	s4,40(sp)
8000d1cc:	8fb30024 	lw	s3,36(sp)
8000d1d0:	8fb20020 	lw	s2,32(sp)
8000d1d4:	8fb1001c 	lw	s1,28(sp)
8000d1d8:	8fb00018 	lw	s0,24(sp)
8000d1dc:	03e00008 	jr	ra
8000d1e0:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:79
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
8000d1e4:	08003410 	j	8000d040 <sysfile_read+0x6c>
8000d1e8:	2411fff4 	li	s1,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:92
		ret = file_read(fd, buffer, alen, &alen);
		if (alen != 0) {
			lock_mm(mm);
			{
				if (copy_to_user(mm, base, buffer, alen)) {
					assert(len >= alen);
8000d1ec:	3c048002 	lui	a0,0x8002
8000d1f0:	3c068002 	lui	a2,0x8002
8000d1f4:	3c078002 	lui	a3,0x8002
8000d1f8:	24842928 	addiu	a0,a0,10536
8000d1fc:	2405005c 	li	a1,92
8000d200:	24c60e48 	addiu	a2,a2,3656
8000d204:	0c006b13 	jal	8001ac4c <__panic>
8000d208:	24e72934 	addiu	a3,a3,10548

8000d20c <sysfile_write>:
sysfile_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:117
}

int sysfile_write(int fd, void *base, size_t len)
{
	int ret = 0;
	struct mm_struct *mm = pls_read(current)->mm;
8000d20c:	3c028015 	lui	v0,0x8015
8000d210:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:115
	}
	return ret;
}

int sysfile_write(int fd, void *base, size_t len)
{
8000d214:	27bdffb8 	addiu	sp,sp,-72
8000d218:	afb70040 	sw	s7,64(sp)
8000d21c:	afb30030 	sw	s3,48(sp)
8000d220:	afb2002c 	sw	s2,44(sp)
8000d224:	afb10028 	sw	s1,40(sp)
8000d228:	afb00024 	sw	s0,36(sp)
8000d22c:	afbf0044 	sw	ra,68(sp)
8000d230:	afb6003c 	sw	s6,60(sp)
8000d234:	afb50038 	sw	s5,56(sp)
8000d238:	afb40034 	sw	s4,52(sp)
8000d23c:	00c08021 	move	s0,a2
8000d240:	00809821 	move	s3,a0
8000d244:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:117
	int ret = 0;
	struct mm_struct *mm = pls_read(current)->mm;
8000d248:	8c510020 	lw	s1,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:118
	if (len == 0) {
8000d24c:	14c0000d 	bnez	a2,8000d284 <sysfile_write+0x78>
8000d250:	0000b821 	move	s7,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:169
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d254:	8fbf0044 	lw	ra,68(sp)
8000d258:	02e01021 	move	v0,s7
8000d25c:	8fb6003c 	lw	s6,60(sp)
8000d260:	8fb70040 	lw	s7,64(sp)
8000d264:	8fb50038 	lw	s5,56(sp)
8000d268:	8fb40034 	lw	s4,52(sp)
8000d26c:	8fb30030 	lw	s3,48(sp)
8000d270:	8fb2002c 	lw	s2,44(sp)
8000d274:	8fb10028 	lw	s1,40(sp)
8000d278:	8fb00024 	lw	s0,36(sp)
8000d27c:	03e00008 	jr	ra
8000d280:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:121
	int ret = 0;
	struct mm_struct *mm = pls_read(current)->mm;
	if (len == 0) {
		return 0;
	}
	if (!file_testfd(fd, 0, 1)) {
8000d284:	00002821 	move	a1,zero
8000d288:	0c002dd5 	jal	8000b754 <file_testfd>
8000d28c:	24060001 	li	a2,1
8000d290:	1040fff0 	beqz	v0,8000d254 <sysfile_write+0x48>
8000d294:	2417ffea 	li	s7,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:125
		return -E_INVAL;
	}
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
8000d298:	0c00312e 	jal	8000c4b8 <__is_linux_devfile>
8000d29c:	02602021 	move	a0,s3
8000d2a0:	14400039 	bnez	v0,8000d388 <sysfile_write+0x17c>
8000d2a4:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:135
		if (ret)
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
8000d2a8:	0c00548e 	jal	80015238 <kmalloc>
8000d2ac:	24041000 	li	a0,4096
8000d2b0:	1040004e 	beqz	v0,8000d3ec <sysfile_write+0x1e0>
8000d2b4:	0040a021 	move	s4,v0
8000d2b8:	0000b021 	move	s6,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:141
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
		if ((alen = IOBUF_SIZE) > len) {
8000d2bc:	24151000 	li	s5,4096
8000d2c0:	2e021000 	sltiu	v0,s0,4096
8000d2c4:	10400002 	beqz	v0,8000d2d0 <sysfile_write+0xc4>
8000d2c8:	afb50018 	sw	s5,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:142
			alen = len;
8000d2cc:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:144
		}
		lock_mm(mm);
8000d2d0:	0c004c2e 	jal	800130b8 <lock_mm>
8000d2d4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:146
		{
			if (!copy_from_user(mm, buffer, base, alen, 0)) {
8000d2d8:	8fa70018 	lw	a3,24(sp)
8000d2dc:	02202021 	move	a0,s1
8000d2e0:	02802821 	move	a1,s4
8000d2e4:	02403021 	move	a2,s2
8000d2e8:	0c007936 	jal	8001e4d8 <copy_from_user>
8000d2ec:	afa00010 	sw	zero,16(sp)
8000d2f0:	10400038 	beqz	v0,8000d3d4 <sysfile_write+0x1c8>
8000d2f4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:150
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000d2f8:	0c004c3f 	jal	800130fc <unlock_mm>
8000d2fc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:152
		if (ret == 0) {
			ret = file_write(fd, buffer, alen, &alen);
8000d300:	8fa60018 	lw	a2,24(sp)
8000d304:	02602021 	move	a0,s3
8000d308:	02802821 	move	a1,s4
8000d30c:	0c002ede 	jal	8000bb78 <file_write>
8000d310:	27a70018 	addiu	a3,sp,24
8000d314:	0040b821 	move	s7,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:153
			if (alen != 0) {
8000d318:	8fa20018 	lw	v0,24(sp)
8000d31c:	10400005 	beqz	v0,8000d334 <sysfile_write+0x128>
8000d320:	0202182b 	sltu	v1,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:154
				assert(len >= alen);
8000d324:	14600033 	bnez	v1,8000d3f4 <sysfile_write+0x1e8>
8000d328:	02429021 	addu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:155
				base += alen, len -= alen, copied += alen;
8000d32c:	02028023 	subu	s0,s0,v0
8000d330:	02c2b021 	addu	s6,s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:158
			}
		}
		if (ret != 0 || alen == 0) {
8000d334:	16e00005 	bnez	s7,8000d34c <sysfile_write+0x140>
8000d338:	00000000 	nop
8000d33c:	10400003 	beqz	v0,8000d34c <sysfile_write+0x140>
8000d340:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:140
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
	}

	size_t copied = 0, alen;
	while (len != 0) {
8000d344:	1600ffdf 	bnez	s0,8000d2c4 <sysfile_write+0xb8>
8000d348:	2e021000 	sltiu	v0,s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:164
			goto out;
		}
	}

out:
	kfree(buffer);
8000d34c:	0c0054b9 	jal	800152e4 <kfree>
8000d350:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:166
	if (copied != 0) {
		return copied;
8000d354:	02d6b80b 	movn	s7,s6,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:169
	}
	return ret;
}
8000d358:	8fbf0044 	lw	ra,68(sp)
8000d35c:	02e01021 	move	v0,s7
8000d360:	8fb6003c 	lw	s6,60(sp)
8000d364:	8fb70040 	lw	s7,64(sp)
8000d368:	8fb50038 	lw	s5,56(sp)
8000d36c:	8fb40034 	lw	s4,52(sp)
8000d370:	8fb30030 	lw	s3,48(sp)
8000d374:	8fb2002c 	lw	s2,44(sp)
8000d378:	8fb10028 	lw	s1,40(sp)
8000d37c:	8fb00024 	lw	s0,36(sp)
8000d380:	03e00008 	jr	ra
8000d384:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:129
	/* for linux inode */
	if (__is_linux_devfile(fd)) {
		/* use 8byte int, in case of 64bit off_t
		 * config in linux kernel */
		size_t alen = 0;
		ret = linux_devfile_write(fd, base, len, &alen);
8000d388:	02402821 	move	a1,s2
8000d38c:	02003021 	move	a2,s0
8000d390:	27a7001c 	addiu	a3,sp,28
8000d394:	0c00319f 	jal	8000c67c <linux_devfile_write>
8000d398:	afa0001c 	sw	zero,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:132
		if (ret)
			return ret;
		return alen;
8000d39c:	8fb7001c 	lw	s7,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:169
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d3a0:	8fbf0044 	lw	ra,68(sp)
8000d3a4:	8fb6003c 	lw	s6,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:132
		 * config in linux kernel */
		size_t alen = 0;
		ret = linux_devfile_write(fd, base, len, &alen);
		if (ret)
			return ret;
		return alen;
8000d3a8:	0042b80b 	movn	s7,v0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:169
	kfree(buffer);
	if (copied != 0) {
		return copied;
	}
	return ret;
}
8000d3ac:	02e01021 	move	v0,s7
8000d3b0:	8fb50038 	lw	s5,56(sp)
8000d3b4:	8fb70040 	lw	s7,64(sp)
8000d3b8:	8fb40034 	lw	s4,52(sp)
8000d3bc:	8fb30030 	lw	s3,48(sp)
8000d3c0:	8fb2002c 	lw	s2,44(sp)
8000d3c4:	8fb10028 	lw	s1,40(sp)
8000d3c8:	8fb00024 	lw	s0,36(sp)
8000d3cc:	03e00008 	jr	ra
8000d3d0:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:150
		{
			if (!copy_from_user(mm, buffer, base, alen, 0)) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000d3d4:	0c004c3f 	jal	800130fc <unlock_mm>
8000d3d8:	2417ffea 	li	s7,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:164
			goto out;
		}
	}

out:
	kfree(buffer);
8000d3dc:	0c0054b9 	jal	800152e4 <kfree>
8000d3e0:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:166
	if (copied != 0) {
		return copied;
8000d3e4:	080034d6 	j	8000d358 <sysfile_write+0x14c>
8000d3e8:	02d6b80b 	movn	s7,s6,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:136
			return ret;
		return alen;
	}
	void *buffer;
	if ((buffer = kmalloc(IOBUF_SIZE)) == NULL) {
		return -E_NO_MEM;
8000d3ec:	08003495 	j	8000d254 <sysfile_write+0x48>
8000d3f0:	2417fff4 	li	s7,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:154
		}
		unlock_mm(mm);
		if (ret == 0) {
			ret = file_write(fd, buffer, alen, &alen);
			if (alen != 0) {
				assert(len >= alen);
8000d3f4:	3c048002 	lui	a0,0x8002
8000d3f8:	3c068002 	lui	a2,0x8002
8000d3fc:	3c078002 	lui	a3,0x8002
8000d400:	24842928 	addiu	a0,a0,10536
8000d404:	2405009a 	li	a1,154
8000d408:	24c60e48 	addiu	a2,a2,3656
8000d40c:	0c006b13 	jal	8001ac4c <__panic>
8000d410:	24e72934 	addiu	a3,a3,10548

8000d414 <sysfile_writev>:
sysfile_writev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:172
	}
	return ret;
}

int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
8000d414:	27bdffc0 	addiu	sp,sp,-64
8000d418:	afb50038 	sw	s5,56(sp)
8000d41c:	afb40034 	sw	s4,52(sp)
8000d420:	afb00024 	sw	s0,36(sp)
8000d424:	0080a821 	move	s5,a0
8000d428:	00a08021 	move	s0,a1
8000d42c:	00c0a021 	move	s4,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:174
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
8000d430:	3c048002 	lui	a0,0x8002
8000d434:	24842940 	addiu	a0,a0,10560
8000d438:	02a02821 	move	a1,s5
8000d43c:	02003021 	move	a2,s0
8000d440:	02803821 	move	a3,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:172
	}
	return ret;
}

int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
8000d444:	afb30030 	sw	s3,48(sp)
8000d448:	afbf003c 	sw	ra,60(sp)
8000d44c:	afb2002c 	sw	s2,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:174
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
8000d450:	0c007aa6 	jal	8001ea98 <kprintf>
8000d454:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:177
	struct iovec *tv;
	int rcode = 0, count = 0, i;
	struct mm_struct *mm = pls_read(current)->mm;
8000d458:	3c028015 	lui	v0,0x8015
8000d45c:	8c4377a4 	lw	v1,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:176
int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
	struct iovec *tv;
	int rcode = 0, count = 0, i;
8000d460:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:178
	struct mm_struct *mm = pls_read(current)->mm;
	for (i = 0; i < iovcnt; ++i) {
8000d464:	1a80001b 	blez	s4,8000d4d4 <sysfile_writev+0xc0>
8000d468:	8c730020 	lw	s3,32(v1)
8000d46c:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:176
int sysfile_writev(int fd, struct iovec __user * iov, int iovcnt)
{
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
	struct iovec *tv;
	int rcode = 0, count = 0, i;
8000d470:	08003520 	j	8000d480 <sysfile_writev+0x6c>
8000d474:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:178
	struct mm_struct *mm = pls_read(current)->mm;
	for (i = 0; i < iovcnt; ++i) {
8000d478:	12340015 	beq	s1,s4,8000d4d0 <sysfile_writev+0xbc>
8000d47c:	02429021 	addu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:182
		char *pbase;
		size_t plen;

		copy_from_user(mm, &pbase, &(iov[i].iov_base), sizeof(char *),
8000d480:	02003021 	move	a2,s0
8000d484:	02602021 	move	a0,s3
8000d488:	27a5001c 	addiu	a1,sp,28
8000d48c:	24070004 	li	a3,4
8000d490:	0c007936 	jal	8001e4d8 <copy_from_user>
8000d494:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:184
			       0);
		copy_from_user(mm, &plen, &(iov[i].iov_len), sizeof(size_t), 0);
8000d498:	26060004 	addiu	a2,s0,4
8000d49c:	27a50018 	addiu	a1,sp,24
8000d4a0:	02602021 	move	a0,s3
8000d4a4:	24070004 	li	a3,4
8000d4a8:	0c007936 	jal	8001e4d8 <copy_from_user>
8000d4ac:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:186

		rcode = sysfile_write(fd, pbase, plen);
8000d4b0:	8fa5001c 	lw	a1,28(sp)
8000d4b4:	8fa60018 	lw	a2,24(sp)
8000d4b8:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:178
	/* do nothing but return 0 */
	kprintf("writev: fd=%08x iov=%08x iovcnt=%d\n", fd, iov, iovcnt);
	struct iovec *tv;
	int rcode = 0, count = 0, i;
	struct mm_struct *mm = pls_read(current)->mm;
	for (i = 0; i < iovcnt; ++i) {
8000d4bc:	26310001 	addiu	s1,s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:186

		copy_from_user(mm, &pbase, &(iov[i].iov_base), sizeof(char *),
			       0);
		copy_from_user(mm, &plen, &(iov[i].iov_len), sizeof(size_t), 0);

		rcode = sysfile_write(fd, pbase, plen);
8000d4c0:	0c003483 	jal	8000d20c <sysfile_write>
8000d4c4:	26100008 	addiu	s0,s0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:187
		if (rcode < 0)
8000d4c8:	0441ffeb 	bgez	v0,8000d478 <sysfile_writev+0x64>
8000d4cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:191
			break;
		count += rcode;
	}
	if (count == 0)
8000d4d0:	0252100b 	movn	v0,s2,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:195
		return (rcode);
	else
		return (count);
}
8000d4d4:	8fbf003c 	lw	ra,60(sp)
8000d4d8:	8fb50038 	lw	s5,56(sp)
8000d4dc:	8fb40034 	lw	s4,52(sp)
8000d4e0:	8fb30030 	lw	s3,48(sp)
8000d4e4:	8fb2002c 	lw	s2,44(sp)
8000d4e8:	8fb10028 	lw	s1,40(sp)
8000d4ec:	8fb00024 	lw	s0,36(sp)
8000d4f0:	03e00008 	jr	ra
8000d4f4:	27bd0040 	addiu	sp,sp,64

8000d4f8 <sysfile_seek>:
sysfile_seek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:199

int sysfile_seek(int fd, off_t pos, int whence)
{
	return file_seek(fd, pos, whence);
8000d4f8:	08002f3d 	j	8000bcf4 <file_seek>
8000d4fc:	00000000 	nop

8000d500 <sysfile_fstat>:
sysfile_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:204
}

int sysfile_fstat(int fd, struct stat *__stat)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d500:	3c028015 	lui	v0,0x8015
8000d504:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:203
{
	return file_seek(fd, pos, whence);
}

int sysfile_fstat(int fd, struct stat *__stat)
{
8000d508:	27bdffd0 	addiu	sp,sp,-48
8000d50c:	afb20028 	sw	s2,40(sp)
8000d510:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:207
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *stat = &__local_stat;
	if ((ret = file_fstat(fd, stat)) != 0) {
8000d514:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:203
{
	return file_seek(fd, pos, whence);
}

int sysfile_fstat(int fd, struct stat *__stat)
{
8000d518:	afb10024 	sw	s1,36(sp)
8000d51c:	afb00020 	sw	s0,32(sp)
8000d520:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:207
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *stat = &__local_stat;
	if ((ret = file_fstat(fd, stat)) != 0) {
8000d524:	0c002fab 	jal	8000beac <file_fstat>
8000d528:	8c510020 	lw	s1,32(v0)
8000d52c:	1440000c 	bnez	v0,8000d560 <sysfile_fstat+0x60>
8000d530:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:211
		return ret;
	}

	lock_mm(mm);
8000d534:	0c004c2e 	jal	800130b8 <lock_mm>
8000d538:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:213
	{
		if (!copy_to_user(mm, __stat, stat, sizeof(struct stat))) {
8000d53c:	02202021 	move	a0,s1
8000d540:	02402821 	move	a1,s2
8000d544:	27a60010 	addiu	a2,sp,16
8000d548:	0c007950 	jal	8001e540 <copy_to_user>
8000d54c:	24070010 	li	a3,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:214
			ret = -E_INVAL;
8000d550:	2403ffea 	li	v1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:217
		}
	}
	unlock_mm(mm);
8000d554:	02202021 	move	a0,s1
8000d558:	0c004c3f 	jal	800130fc <unlock_mm>
8000d55c:	0062800a 	movz	s0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:219
	return ret;
}
8000d560:	8fbf002c 	lw	ra,44(sp)
8000d564:	02001021 	move	v0,s0
8000d568:	8fb20028 	lw	s2,40(sp)
8000d56c:	8fb10024 	lw	s1,36(sp)
8000d570:	8fb00020 	lw	s0,32(sp)
8000d574:	03e00008 	jr	ra
8000d578:	27bd0030 	addiu	sp,sp,48

8000d57c <sysfile_linux_fstat>:
sysfile_linux_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:223

int sysfile_linux_fstat(int fd, struct linux_stat __user * buf)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d57c:	3c028015 	lui	v0,0x8015
8000d580:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:222
	unlock_mm(mm);
	return ret;
}

int sysfile_linux_fstat(int fd, struct linux_stat __user * buf)
{
8000d584:	27bdffc8 	addiu	sp,sp,-56
8000d588:	afb2002c 	sw	s2,44(sp)
8000d58c:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:226
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d590:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:222
	unlock_mm(mm);
	return ret;
}

int sysfile_linux_fstat(int fd, struct linux_stat __user * buf)
{
8000d594:	afb30030 	sw	s3,48(sp)
8000d598:	afb10028 	sw	s1,40(sp)
8000d59c:	afbf0034 	sw	ra,52(sp)
8000d5a0:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:226
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d5a4:	0c002fab 	jal	8000beac <file_fstat>
8000d5a8:	8c510020 	lw	s1,32(v0)
8000d5ac:	14400022 	bnez	v0,8000d638 <sysfile_linux_fstat+0xbc>
8000d5b0:	2413ffff 	li	s3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:229
		return -1;
	}
	struct linux_stat *kls = kmalloc(sizeof(struct linux_stat));
8000d5b4:	0c00548e 	jal	80015238 <kmalloc>
8000d5b8:	24040040 	li	a0,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:230
	if (!kls) {
8000d5bc:	1040001e 	beqz	v0,8000d638 <sysfile_linux_fstat+0xbc>
8000d5c0:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:233
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat));
8000d5c4:	00002821 	move	a1,zero
8000d5c8:	24060040 	li	a2,64
8000d5cc:	0c005c5a 	jal	80017168 <memset>
8000d5d0:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:236
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d5d4:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:234
	struct linux_stat *kls = kmalloc(sizeof(struct linux_stat));
	if (!kls) {
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat));
	kls->st_ino = 1;
8000d5d8:	24030001 	li	v1,1
8000d5dc:	ae030004 	sw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:236
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d5e0:	344201ff 	ori	v0,v0,0x1ff
8000d5e4:	a6020008 	sh	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:237
	kls->st_nlink = kstat->st_nlinks;
8000d5e8:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:243
	kls->st_blksize = 512;
	kls->st_blocks = kstat->st_blocks;
	kls->st_size = kstat->st_size;

	ret = 0;
	lock_mm(mm);
8000d5ec:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:237
	}
	memset(kls, 0, sizeof(struct linux_stat));
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
	kls->st_nlink = kstat->st_nlinks;
8000d5f0:	a602000a 	sh	v0,10(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:238
	kls->st_blksize = 512;
8000d5f4:	24020200 	li	v0,512
8000d5f8:	ae020018 	sw	v0,24(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:239
	kls->st_blocks = kstat->st_blocks;
8000d5fc:	8fa20018 	lw	v0,24(sp)
8000d600:	ae02001c 	sw	v0,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:240
	kls->st_size = kstat->st_size;
8000d604:	8fa2001c 	lw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:243

	ret = 0;
	lock_mm(mm);
8000d608:	0c004c2e 	jal	800130b8 <lock_mm>
8000d60c:	ae020014 	sw	v0,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:245
	{
		if (!copy_to_user(mm, buf, kls, sizeof(struct linux_stat))) {
8000d610:	02202021 	move	a0,s1
8000d614:	02402821 	move	a1,s2
8000d618:	02003021 	move	a2,s0
8000d61c:	0c007950 	jal	8001e540 <copy_to_user>
8000d620:	24070040 	li	a3,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:249
			ret = -1;
		}
	}
	unlock_mm(mm);
8000d624:	02202021 	move	a0,s1
8000d628:	0c004c3f 	jal	800130fc <unlock_mm>
8000d62c:	0002980b 	movn	s3,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:250
	kfree(kls);
8000d630:	0c0054b9 	jal	800152e4 <kfree>
8000d634:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:252
	return ret;
}
8000d638:	8fbf0034 	lw	ra,52(sp)
8000d63c:	02601021 	move	v0,s3
8000d640:	8fb2002c 	lw	s2,44(sp)
8000d644:	8fb30030 	lw	s3,48(sp)
8000d648:	8fb10028 	lw	s1,40(sp)
8000d64c:	8fb00024 	lw	s0,36(sp)
8000d650:	03e00008 	jr	ra
8000d654:	27bd0038 	addiu	sp,sp,56

8000d658 <sysfile_linux_fstat64>:
sysfile_linux_fstat64():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:256

int sysfile_linux_fstat64(int fd, struct linux_stat64 __user * buf)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000d658:	3c028015 	lui	v0,0x8015
8000d65c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:255
	kfree(kls);
	return ret;
}

int sysfile_linux_fstat64(int fd, struct linux_stat64 __user * buf)
{
8000d660:	27bdffc8 	addiu	sp,sp,-56
8000d664:	afb2002c 	sw	s2,44(sp)
8000d668:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:259
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d66c:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:255
	kfree(kls);
	return ret;
}

int sysfile_linux_fstat64(int fd, struct linux_stat64 __user * buf)
{
8000d670:	afb30030 	sw	s3,48(sp)
8000d674:	afb10028 	sw	s1,40(sp)
8000d678:	afbf0034 	sw	ra,52(sp)
8000d67c:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:259
	struct mm_struct *mm = pls_read(current)->mm;
	int ret;
	struct stat __local_stat, *kstat = &__local_stat;
	if ((ret = file_fstat(fd, kstat)) != 0) {
8000d680:	0c002fab 	jal	8000beac <file_fstat>
8000d684:	8c510020 	lw	s1,32(v0)
8000d688:	14400026 	bnez	v0,8000d724 <sysfile_linux_fstat64+0xcc>
8000d68c:	2413ffff 	li	s3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:262
		return -1;
	}
	struct linux_stat64 *kls = kmalloc(sizeof(struct linux_stat64));
8000d690:	0c00548e 	jal	80015238 <kmalloc>
8000d694:	24040068 	li	a0,104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:263
	if (!kls) {
8000d698:	10400022 	beqz	v0,8000d724 <sysfile_linux_fstat64+0xcc>
8000d69c:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:266
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat64));
8000d6a0:	00002821 	move	a1,zero
8000d6a4:	24060068 	li	a2,104
8000d6a8:	0c005c5a 	jal	80017168 <memset>
8000d6ac:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:269
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d6b0:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:267
	struct linux_stat64 *kls = kmalloc(sizeof(struct linux_stat64));
	if (!kls) {
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat64));
	kls->st_ino = 1;
8000d6b4:	24080001 	li	t0,1
8000d6b8:	00004821 	move	t1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:269
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
8000d6bc:	344201ff 	ori	v0,v0,0x1ff
8000d6c0:	ae020010 	sw	v0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:270
	kls->st_nlink = kstat->st_nlinks;
8000d6c4:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:267
	struct linux_stat64 *kls = kmalloc(sizeof(struct linux_stat64));
	if (!kls) {
		return -1;
	}
	memset(kls, 0, sizeof(struct linux_stat64));
	kls->st_ino = 1;
8000d6c8:	ae080060 	sw	t0,96(s0)
8000d6cc:	ae090064 	sw	t1,100(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:270
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
	kls->st_nlink = kstat->st_nlinks;
8000d6d0:	ae020014 	sw	v0,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:271
	kls->st_blksize = 512;
8000d6d4:	24020200 	li	v0,512
8000d6d8:	ae020038 	sw	v0,56(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:272
	kls->st_blocks = kstat->st_blocks;
8000d6dc:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:276
	kls->st_size = kstat->st_size;

	ret = 0;
	lock_mm(mm);
8000d6e0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:272
	kls->st_ino = 1;
	/* ucore never check access permision */
	kls->st_mode = kstat->st_mode | 0777;
	kls->st_nlink = kstat->st_nlinks;
	kls->st_blksize = 512;
	kls->st_blocks = kstat->st_blocks;
8000d6e4:	ae000044 	sw	zero,68(s0)
8000d6e8:	ae020040 	sw	v0,64(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:273
	kls->st_size = kstat->st_size;
8000d6ec:	8fa2001c 	lw	v0,28(sp)
8000d6f0:	ae000034 	sw	zero,52(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:276

	ret = 0;
	lock_mm(mm);
8000d6f4:	0c004c2e 	jal	800130b8 <lock_mm>
8000d6f8:	ae020030 	sw	v0,48(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:278
	{
		if (!copy_to_user(mm, buf, kls, sizeof(struct linux_stat64))) {
8000d6fc:	02202021 	move	a0,s1
8000d700:	02402821 	move	a1,s2
8000d704:	02003021 	move	a2,s0
8000d708:	0c007950 	jal	8001e540 <copy_to_user>
8000d70c:	24070068 	li	a3,104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:282
			ret = -1;
		}
	}
	unlock_mm(mm);
8000d710:	02202021 	move	a0,s1
8000d714:	0c004c3f 	jal	800130fc <unlock_mm>
8000d718:	0002980b 	movn	s3,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:283
	kfree(kls);
8000d71c:	0c0054b9 	jal	800152e4 <kfree>
8000d720:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:285
	return ret;
}
8000d724:	8fbf0034 	lw	ra,52(sp)
8000d728:	02601021 	move	v0,s3
8000d72c:	8fb2002c 	lw	s2,44(sp)
8000d730:	8fb30030 	lw	s3,48(sp)
8000d734:	8fb10028 	lw	s1,40(sp)
8000d738:	8fb00024 	lw	s0,36(sp)
8000d73c:	03e00008 	jr	ra
8000d740:	27bd0038 	addiu	sp,sp,56

8000d744 <sysfile_linux_fcntl64>:
sysfile_linux_fcntl64():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:288

int sysfile_linux_fcntl64(int fd, int cmd, int arg)
{
8000d744:	00801821 	move	v1,a0
8000d748:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:289
	kprintf("sysfile_linux_fcntl64:fd=%08x cmd=%08x arg=%08x\n", fd, cmd,
8000d74c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:288
	kfree(kls);
	return ret;
}

int sysfile_linux_fcntl64(int fd, int cmd, int arg)
{
8000d750:	27bdffe8 	addiu	sp,sp,-24
8000d754:	00c03821 	move	a3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:289
	kprintf("sysfile_linux_fcntl64:fd=%08x cmd=%08x arg=%08x\n", fd, cmd,
8000d758:	24842964 	addiu	a0,a0,10596
8000d75c:	00602821 	move	a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:288
	kfree(kls);
	return ret;
}

int sysfile_linux_fcntl64(int fd, int cmd, int arg)
{
8000d760:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:289
	kprintf("sysfile_linux_fcntl64:fd=%08x cmd=%08x arg=%08x\n", fd, cmd,
8000d764:	0c007aa6 	jal	8001ea98 <kprintf>
8000d768:	00403021 	move	a2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:292
		arg);
	return 0;
}
8000d76c:	8fbf0014 	lw	ra,20(sp)
8000d770:	00001021 	move	v0,zero
8000d774:	03e00008 	jr	ra
8000d778:	27bd0018 	addiu	sp,sp,24

8000d77c <sysfile_linux_stat>:
sysfile_linux_stat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:295

int sysfile_linux_stat(const char __user * fn, struct linux_stat *__user buf)
{
8000d77c:	27bdffe0 	addiu	sp,sp,-32
8000d780:	afb10014 	sw	s1,20(sp)
8000d784:	00a08821 	move	s1,a1
8000d788:	afb20018 	sw	s2,24(sp)
8000d78c:	afb00010 	sw	s0,16(sp)
8000d790:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:296
	int fd = sysfile_open(fn, O_RDONLY);
8000d794:	0c0033de 	jal	8000cf78 <sysfile_open>
8000d798:	00002821 	move	a1,zero
8000d79c:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:297
	if (fd < 0)
8000d7a0:	04400007 	bltz	v0,8000d7c0 <sysfile_linux_stat+0x44>
8000d7a4:	2412ffff 	li	s2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:299
		return -1;
	int ret = sysfile_linux_fstat(fd, buf);
8000d7a8:	00402021 	move	a0,v0
8000d7ac:	0c00355f 	jal	8000d57c <sysfile_linux_fstat>
8000d7b0:	02202821 	move	a1,s1
sysfile_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:54
	return ret;
}

int sysfile_close(int fd)
{
	return file_close(fd);
8000d7b4:	02002021 	move	a0,s0
8000d7b8:	0c002e62 	jal	8000b988 <file_close>
8000d7bc:	00409021 	move	s2,v0
sysfile_linux_stat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:303
		return -1;
	int ret = sysfile_linux_fstat(fd, buf);
	sysfile_close(fd);

	return ret;
}
8000d7c0:	8fbf001c 	lw	ra,28(sp)
8000d7c4:	02401021 	move	v0,s2
8000d7c8:	8fb10014 	lw	s1,20(sp)
8000d7cc:	8fb20018 	lw	s2,24(sp)
8000d7d0:	8fb00010 	lw	s0,16(sp)
8000d7d4:	03e00008 	jr	ra
8000d7d8:	27bd0020 	addiu	sp,sp,32

8000d7dc <sysfile_linux_stat64>:
sysfile_linux_stat64():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:307

int
sysfile_linux_stat64(const char __user * fn, struct linux_stat64 *__user buf)
{
8000d7dc:	27bdffe0 	addiu	sp,sp,-32
8000d7e0:	afb10014 	sw	s1,20(sp)
8000d7e4:	00a08821 	move	s1,a1
8000d7e8:	afb20018 	sw	s2,24(sp)
8000d7ec:	afb00010 	sw	s0,16(sp)
8000d7f0:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:308
	int fd = sysfile_open(fn, O_RDONLY);
8000d7f4:	0c0033de 	jal	8000cf78 <sysfile_open>
8000d7f8:	00002821 	move	a1,zero
8000d7fc:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:309
	if (fd < 0)
8000d800:	04400007 	bltz	v0,8000d820 <sysfile_linux_stat64+0x44>
8000d804:	2412ffff 	li	s2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:311
		return -1;
	int ret = sysfile_linux_fstat64(fd, buf);
8000d808:	00402021 	move	a0,v0
8000d80c:	0c003596 	jal	8000d658 <sysfile_linux_fstat64>
8000d810:	02202821 	move	a1,s1
sysfile_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:54
	return ret;
}

int sysfile_close(int fd)
{
	return file_close(fd);
8000d814:	02002021 	move	a0,s0
8000d818:	0c002e62 	jal	8000b988 <file_close>
8000d81c:	00409021 	move	s2,v0
sysfile_linux_stat64():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:315
		return -1;
	int ret = sysfile_linux_fstat64(fd, buf);
	sysfile_close(fd);

	return ret;
}
8000d820:	8fbf001c 	lw	ra,28(sp)
8000d824:	02401021 	move	v0,s2
8000d828:	8fb10014 	lw	s1,20(sp)
8000d82c:	8fb20018 	lw	s2,24(sp)
8000d830:	8fb00010 	lw	s0,16(sp)
8000d834:	03e00008 	jr	ra
8000d838:	27bd0020 	addiu	sp,sp,32

8000d83c <sysfile_fsync>:
sysfile_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:319

int sysfile_fsync(int fd)
{
	return file_fsync(fd);
8000d83c:	08002fec 	j	8000bfb0 <file_fsync>
8000d840:	00000000 	nop

8000d844 <sysfile_chdir>:
sysfile_chdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:323
}

int sysfile_chdir(const char *__path)
{
8000d844:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:326
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d848:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:323
{
	return file_fsync(fd);
}

int sysfile_chdir(const char *__path)
{
8000d84c:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:326
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d850:	0c0033b4 	jal	8000ced0 <copy_path>
8000d854:	27a40010 	addiu	a0,sp,16
8000d858:	14400008 	bnez	v0,8000d87c <sysfile_chdir+0x38>
8000d85c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:329
		return ret;
	}
	ret = vfs_chdir(path);
8000d860:	0c001822 	jal	80006088 <vfs_chdir>
8000d864:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:330
	kfree(path);
8000d868:	8fa40010 	lw	a0,16(sp)
8000d86c:	0c0054b9 	jal	800152e4 <kfree>
8000d870:	afa20018 	sw	v0,24(sp)
8000d874:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:332
	return ret;
}
8000d878:	8fbf0024 	lw	ra,36(sp)
8000d87c:	03e00008 	jr	ra
8000d880:	27bd0028 	addiu	sp,sp,40

8000d884 <sysfile_mkdir>:
sysfile_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:335

int sysfile_mkdir(const char *__path)
{
8000d884:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:338
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d888:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:335
	kfree(path);
	return ret;
}

int sysfile_mkdir(const char *__path)
{
8000d88c:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:338
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d890:	0c0033b4 	jal	8000ced0 <copy_path>
8000d894:	27a40010 	addiu	a0,sp,16
8000d898:	14400008 	bnez	v0,8000d8bc <sysfile_mkdir+0x38>
8000d89c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:341
		return ret;
	}
	ret = vfs_mkdir(path);
8000d8a0:	0c0016bf 	jal	80005afc <vfs_mkdir>
8000d8a4:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:342
	kfree(path);
8000d8a8:	8fa40010 	lw	a0,16(sp)
8000d8ac:	0c0054b9 	jal	800152e4 <kfree>
8000d8b0:	afa20018 	sw	v0,24(sp)
8000d8b4:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:344
	return ret;
}
8000d8b8:	8fbf0024 	lw	ra,36(sp)
8000d8bc:	03e00008 	jr	ra
8000d8c0:	27bd0028 	addiu	sp,sp,40

8000d8c4 <sysfile_link>:
sysfile_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:347

int sysfile_link(const char *__path1, const char *__path2)
{
8000d8c4:	27bdffd8 	addiu	sp,sp,-40
8000d8c8:	00801021 	move	v0,a0
8000d8cc:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:350
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d8d0:	27a40014 	addiu	a0,sp,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:347
	kfree(path);
	return ret;
}

int sysfile_link(const char *__path1, const char *__path2)
{
8000d8d4:	00a08021 	move	s0,a1
8000d8d8:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:350
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d8dc:	0c0033b4 	jal	8000ced0 <copy_path>
8000d8e0:	00402821 	move	a1,v0
8000d8e4:	10400004 	beqz	v0,8000d8f8 <sysfile_link+0x34>
8000d8e8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:360
		return ret;
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d8ec:	8fb00020 	lw	s0,32(sp)
8000d8f0:	03e00008 	jr	ra
8000d8f4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:353
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
8000d8f8:	27a40010 	addiu	a0,sp,16
8000d8fc:	0c0033b4 	jal	8000ced0 <copy_path>
8000d900:	02002821 	move	a1,s0
8000d904:	1440000d 	bnez	v0,8000d93c <sysfile_link+0x78>
8000d908:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:357
		kfree(old_path);
		return ret;
	}
	ret = vfs_link(old_path, new_path);
8000d90c:	0c001626 	jal	80005898 <vfs_link>
8000d910:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:358
	kfree(old_path), kfree(new_path);
8000d914:	8fa40014 	lw	a0,20(sp)
8000d918:	0c0054b9 	jal	800152e4 <kfree>
8000d91c:	afa20018 	sw	v0,24(sp)
8000d920:	0c0054b9 	jal	800152e4 <kfree>
8000d924:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:360
	return ret;
}
8000d928:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:358
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
8000d92c:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:360
	return ret;
}
8000d930:	8fb00020 	lw	s0,32(sp)
8000d934:	03e00008 	jr	ra
8000d938:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:354
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
8000d93c:	0c0054b9 	jal	800152e4 <kfree>
8000d940:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:360
		return ret;
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d944:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:355
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
8000d948:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:360
	}
	ret = vfs_link(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d94c:	8fb00020 	lw	s0,32(sp)
8000d950:	03e00008 	jr	ra
8000d954:	27bd0028 	addiu	sp,sp,40

8000d958 <sysfile_rename>:
sysfile_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:363

int sysfile_rename(const char *__path1, const char *__path2)
{
8000d958:	27bdffd8 	addiu	sp,sp,-40
8000d95c:	00801021 	move	v0,a0
8000d960:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:366
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d964:	27a40014 	addiu	a0,sp,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:363
	kfree(old_path), kfree(new_path);
	return ret;
}

int sysfile_rename(const char *__path1, const char *__path2)
{
8000d968:	00a08021 	move	s0,a1
8000d96c:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:366
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
8000d970:	0c0033b4 	jal	8000ced0 <copy_path>
8000d974:	00402821 	move	a1,v0
8000d978:	10400004 	beqz	v0,8000d98c <sysfile_rename+0x34>
8000d97c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:376
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d980:	8fb00020 	lw	s0,32(sp)
8000d984:	03e00008 	jr	ra
8000d988:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:369
	int ret;
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
8000d98c:	27a40010 	addiu	a0,sp,16
8000d990:	0c0033b4 	jal	8000ced0 <copy_path>
8000d994:	02002821 	move	a1,s0
8000d998:	1440000d 	bnez	v0,8000d9d0 <sysfile_rename+0x78>
8000d99c:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:373
		kfree(old_path);
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
8000d9a0:	0c0015e1 	jal	80005784 <vfs_rename>
8000d9a4:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:374
	kfree(old_path), kfree(new_path);
8000d9a8:	8fa40014 	lw	a0,20(sp)
8000d9ac:	0c0054b9 	jal	800152e4 <kfree>
8000d9b0:	afa20018 	sw	v0,24(sp)
8000d9b4:	0c0054b9 	jal	800152e4 <kfree>
8000d9b8:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:376
	return ret;
}
8000d9bc:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:374
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
8000d9c0:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:376
	return ret;
}
8000d9c4:	8fb00020 	lw	s0,32(sp)
8000d9c8:	03e00008 	jr	ra
8000d9cc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:370
	char *old_path, *new_path;
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
8000d9d0:	0c0054b9 	jal	800152e4 <kfree>
8000d9d4:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:376
		return ret;
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d9d8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:371
	if ((ret = copy_path(&old_path, __path1)) != 0) {
		return ret;
	}
	if ((ret = copy_path(&new_path, __path2)) != 0) {
		kfree(old_path);
		return ret;
8000d9dc:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:376
	}
	ret = vfs_rename(old_path, new_path);
	kfree(old_path), kfree(new_path);
	return ret;
}
8000d9e0:	8fb00020 	lw	s0,32(sp)
8000d9e4:	03e00008 	jr	ra
8000d9e8:	27bd0028 	addiu	sp,sp,40

8000d9ec <sysfile_unlink>:
sysfile_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:379

int sysfile_unlink(const char *__path)
{
8000d9ec:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:382
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d9f0:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:379
	kfree(old_path), kfree(new_path);
	return ret;
}

int sysfile_unlink(const char *__path)
{
8000d9f4:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:382
	int ret;
	char *path;
	if ((ret = copy_path(&path, __path)) != 0) {
8000d9f8:	0c0033b4 	jal	8000ced0 <copy_path>
8000d9fc:	27a40010 	addiu	a0,sp,16
8000da00:	14400008 	bnez	v0,8000da24 <sysfile_unlink+0x38>
8000da04:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:385
		return ret;
	}
	ret = vfs_unlink(path);
8000da08:	0c0015b9 	jal	800056e4 <vfs_unlink>
8000da0c:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:386
	kfree(path);
8000da10:	8fa40010 	lw	a0,16(sp)
8000da14:	0c0054b9 	jal	800152e4 <kfree>
8000da18:	afa20018 	sw	v0,24(sp)
8000da1c:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:388
	return ret;
}
8000da20:	8fbf0024 	lw	ra,36(sp)
8000da24:	03e00008 	jr	ra
8000da28:	27bd0028 	addiu	sp,sp,40

8000da2c <sysfile_getcwd>:
sysfile_getcwd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:392

int sysfile_getcwd(char *buf, size_t len)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000da2c:	3c028015 	lui	v0,0x8015
8000da30:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:391
	kfree(path);
	return ret;
}

int sysfile_getcwd(char *buf, size_t len)
{
8000da34:	27bdffd0 	addiu	sp,sp,-48
8000da38:	afb20028 	sw	s2,40(sp)
8000da3c:	afb10024 	sw	s1,36(sp)
8000da40:	afb00020 	sw	s0,32(sp)
8000da44:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:392
	struct mm_struct *mm = pls_read(current)->mm;
8000da48:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:391
	kfree(path);
	return ret;
}

int sysfile_getcwd(char *buf, size_t len)
{
8000da4c:	00a08821 	move	s1,a1
8000da50:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:393
	struct mm_struct *mm = pls_read(current)->mm;
	if (len == 0) {
8000da54:	10a0000d 	beqz	a1,8000da8c <sysfile_getcwd+0x60>
8000da58:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:397
		return -E_INVAL;
	}

	lock_mm(mm);
8000da5c:	0c004c2e 	jal	800130b8 <lock_mm>
8000da60:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:399
	{
		if (user_mem_check(mm, (uintptr_t) buf, len, 1)) {
8000da64:	02002021 	move	a0,s0
8000da68:	02402821 	move	a1,s2
8000da6c:	02203021 	move	a2,s1
8000da70:	0c00507f 	jal	800141fc <user_mem_check>
8000da74:	24070001 	li	a3,1
8000da78:	1440000a 	bnez	v0,8000daa4 <sysfile_getcwd+0x78>
8000da7c:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:405
			struct iobuf __iob, *iob =
			    iobuf_init(&__iob, buf, len, 0);
			vfs_getcwd(iob);
		}
	}
	unlock_mm(mm);
8000da80:	0c004c3f 	jal	800130fc <unlock_mm>
8000da84:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:406
	return 0;
8000da88:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:407
}
8000da8c:	8fbf002c 	lw	ra,44(sp)
8000da90:	8fb20028 	lw	s2,40(sp)
8000da94:	8fb10024 	lw	s1,36(sp)
8000da98:	8fb00020 	lw	s0,32(sp)
8000da9c:	03e00008 	jr	ra
8000daa0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:400
	}

	lock_mm(mm);
	{
		if (user_mem_check(mm, (uintptr_t) buf, len, 1)) {
			struct iobuf __iob, *iob =
8000daa4:	02402821 	move	a1,s2
8000daa8:	02203021 	move	a2,s1
8000daac:	0c003347 	jal	8000cd1c <iobuf_init>
8000dab0:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:402
			    iobuf_init(&__iob, buf, len, 0);
			vfs_getcwd(iob);
8000dab4:	0c001833 	jal	800060cc <vfs_getcwd>
8000dab8:	00402021 	move	a0,v0
8000dabc:	080036a0 	j	8000da80 <sysfile_getcwd+0x54>
8000dac0:	00000000 	nop

8000dac4 <sysfile_getdirentry>:
sysfile_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:411
	return 0;
}

int sysfile_getdirentry(int fd, struct dirent *__direntp, uint32_t * len_store)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000dac4:	3c028015 	lui	v0,0x8015
8000dac8:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:410
	unlock_mm(mm);
	return 0;
}

int sysfile_getdirentry(int fd, struct dirent *__direntp, uint32_t * len_store)
{
8000dacc:	27bdffc8 	addiu	sp,sp,-56
8000dad0:	afb4002c 	sw	s4,44(sp)
8000dad4:	0080a021 	move	s4,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:413
	struct mm_struct *mm = pls_read(current)->mm;
	struct dirent *direntp;
	if ((direntp = kmalloc(sizeof(struct dirent))) == NULL) {
8000dad8:	2404010c 	li	a0,268
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:410
	unlock_mm(mm);
	return 0;
}

int sysfile_getdirentry(int fd, struct dirent *__direntp, uint32_t * len_store)
{
8000dadc:	afb50030 	sw	s5,48(sp)
8000dae0:	afb30028 	sw	s3,40(sp)
8000dae4:	afb20024 	sw	s2,36(sp)
8000dae8:	afb10020 	sw	s1,32(sp)
8000daec:	afb0001c 	sw	s0,28(sp)
8000daf0:	afbf0034 	sw	ra,52(sp)
8000daf4:	00a09821 	move	s3,a1
8000daf8:	00c0a821 	move	s5,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:413
	struct mm_struct *mm = pls_read(current)->mm;
	struct dirent *direntp;
	if ((direntp = kmalloc(sizeof(struct dirent))) == NULL) {
8000dafc:	0c00548e 	jal	80015238 <kmalloc>
8000db00:	8c510020 	lw	s1,32(v0)
8000db04:	00408021 	move	s0,v0
8000db08:	10400015 	beqz	v0,8000db60 <sysfile_getdirentry+0x9c>
8000db0c:	2412fff4 	li	s2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:422
	//direntp->d_reclen = sizeof(struct dirent);
	/* libc will ignore entries with d_ino==0 */
	//direntp->d_ino = 1;

	int ret = 0;
	lock_mm(mm);
8000db10:	0c004c2e 	jal	800130b8 <lock_mm>
8000db14:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:425
	{
		if (!copy_from_user
		    (mm, &(direntp->d_off), &(__direntp->d_off),
8000db18:	02202021 	move	a0,s1
8000db1c:	24020001 	li	v0,1
8000db20:	26050004 	addiu	a1,s0,4
8000db24:	26660004 	addiu	a2,s3,4
8000db28:	24070004 	li	a3,4
8000db2c:	0c007936 	jal	8001e4d8 <copy_from_user>
8000db30:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:424
	//direntp->d_ino = 1;

	int ret = 0;
	lock_mm(mm);
	{
		if (!copy_from_user
8000db34:	10400014 	beqz	v0,8000db88 <sysfile_getdirentry+0xc4>
8000db38:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:430
		    (mm, &(direntp->d_off), &(__direntp->d_off),
		     sizeof(direntp->d_off), 1)) {
			ret = -E_INVAL;
		}
	}
	unlock_mm(mm);
8000db3c:	0c004c3f 	jal	800130fc <unlock_mm>
8000db40:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:432

	if (ret != 0 || (ret = file_getdirentry(fd, direntp)) != 0) {
8000db44:	02802021 	move	a0,s4
8000db48:	0c003029 	jal	8000c0a4 <file_getdirentry>
8000db4c:	02002821 	move	a1,s0
8000db50:	10400011 	beqz	v0,8000db98 <sysfile_getdirentry+0xd4>
8000db54:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:448
	unlock_mm(mm);
	if (len_store) {
		*len_store = (direntp->d_name[0]) ? direntp->d_reclen : 0;
	}
out:
	kfree(direntp);
8000db58:	0c0054b9 	jal	800152e4 <kfree>
8000db5c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:450
	return ret;
}
8000db60:	8fbf0034 	lw	ra,52(sp)
8000db64:	02401021 	move	v0,s2
8000db68:	8fb50030 	lw	s5,48(sp)
8000db6c:	8fb4002c 	lw	s4,44(sp)
8000db70:	8fb30028 	lw	s3,40(sp)
8000db74:	8fb20024 	lw	s2,36(sp)
8000db78:	8fb10020 	lw	s1,32(sp)
8000db7c:	8fb0001c 	lw	s0,28(sp)
8000db80:	03e00008 	jr	ra
8000db84:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:430
		    (mm, &(direntp->d_off), &(__direntp->d_off),
		     sizeof(direntp->d_off), 1)) {
			ret = -E_INVAL;
		}
	}
	unlock_mm(mm);
8000db88:	0c004c3f 	jal	800130fc <unlock_mm>
8000db8c:	2412ffea 	li	s2,-22
8000db90:	080036d6 	j	8000db58 <sysfile_getdirentry+0x94>
8000db94:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:436

	if (ret != 0 || (ret = file_getdirentry(fd, direntp)) != 0) {
		goto out;
	}

	lock_mm(mm);
8000db98:	0c004c2e 	jal	800130b8 <lock_mm>
8000db9c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:439
	{
		if (!copy_to_user
		    (mm, __direntp, direntp, sizeof(struct dirent))) {
8000dba0:	02202021 	move	a0,s1
8000dba4:	02602821 	move	a1,s3
8000dba8:	02003021 	move	a2,s0
8000dbac:	0c007950 	jal	8001e540 <copy_to_user>
8000dbb0:	2407010c 	li	a3,268
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:440
			ret = -E_INVAL;
8000dbb4:	2403ffea 	li	v1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:443
		}
	}
	unlock_mm(mm);
8000dbb8:	02202021 	move	a0,s1
8000dbbc:	0c004c3f 	jal	800130fc <unlock_mm>
8000dbc0:	0062900a 	movz	s2,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:444
	if (len_store) {
8000dbc4:	12a0ffe4 	beqz	s5,8000db58 <sysfile_getdirentry+0x94>
8000dbc8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:445
		*len_store = (direntp->d_name[0]) ? direntp->d_reclen : 0;
8000dbcc:	9203000a 	lbu	v1,10(s0)
8000dbd0:	10600002 	beqz	v1,8000dbdc <sysfile_getdirentry+0x118>
8000dbd4:	00001021 	move	v0,zero
8000dbd8:	96020008 	lhu	v0,8(s0)
8000dbdc:	080036d6 	j	8000db58 <sysfile_getdirentry+0x94>
8000dbe0:	aea20000 	sw	v0,0(s5)

8000dbe4 <sysfile_dup>:
sysfile_dup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:507
}
#endif

int sysfile_dup(int fd1, int fd2)
{
	return file_dup(fd1, fd2);
8000dbe4:	0800307b 	j	8000c1ec <file_dup>
8000dbe8:	00000000 	nop

8000dbec <sysfile_pipe>:
sysfile_pipe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:512
}

int sysfile_pipe(int *fd_store)
{
	struct mm_struct *mm = pls_read(current)->mm;
8000dbec:	3c028015 	lui	v0,0x8015
8000dbf0:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:511
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dbf4:	27bdffd8 	addiu	sp,sp,-40
8000dbf8:	afb1001c 	sw	s1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:512
	struct mm_struct *mm = pls_read(current)->mm;
8000dbfc:	8c510020 	lw	s1,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:511
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dc00:	afb20020 	sw	s2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:514
	struct mm_struct *mm = pls_read(current)->mm;
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
8000dc04:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:511
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dc08:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:514
	struct mm_struct *mm = pls_read(current)->mm;
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
8000dc0c:	24060008 	li	a2,8
8000dc10:	24070001 	li	a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:511
{
	return file_dup(fd1, fd2);
}

int sysfile_pipe(int *fd_store)
{
8000dc14:	afb00018 	sw	s0,24(sp)
8000dc18:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:514
	struct mm_struct *mm = pls_read(current)->mm;
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
8000dc1c:	0c00507f 	jal	800141fc <user_mem_check>
8000dc20:	02202021 	move	a0,s1
8000dc24:	10400005 	beqz	v0,8000dc3c <sysfile_pipe+0x50>
8000dc28:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:517
		return -E_INVAL;
	}
	if ((ret = file_pipe(fd)) == 0) {
8000dc2c:	0c0030a8 	jal	8000c2a0 <file_pipe>
8000dc30:	27a40010 	addiu	a0,sp,16
8000dc34:	10400008 	beqz	v0,8000dc58 <sysfile_pipe+0x6c>
8000dc38:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:530
		if (ret != 0) {
			file_close(fd[0]), file_close(fd[1]);
		}
	}
	return ret;
}
8000dc3c:	8fbf0024 	lw	ra,36(sp)
8000dc40:	02001021 	move	v0,s0
8000dc44:	8fb20020 	lw	s2,32(sp)
8000dc48:	8fb1001c 	lw	s1,28(sp)
8000dc4c:	8fb00018 	lw	s0,24(sp)
8000dc50:	03e00008 	jr	ra
8000dc54:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:518
	int ret, fd[2];
	if (!user_mem_check(mm, (uintptr_t) fd_store, sizeof(fd), 1)) {
		return -E_INVAL;
	}
	if ((ret = file_pipe(fd)) == 0) {
		lock_mm(mm);
8000dc58:	0c004c2e 	jal	800130b8 <lock_mm>
8000dc5c:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:520
		{
			if (!copy_to_user(mm, fd_store, fd, sizeof(fd))) {
8000dc60:	02202021 	move	a0,s1
8000dc64:	02402821 	move	a1,s2
8000dc68:	27a60010 	addiu	a2,sp,16
8000dc6c:	0c007950 	jal	8001e540 <copy_to_user>
8000dc70:	24070008 	li	a3,8
8000dc74:	1440000e 	bnez	v0,8000dcb0 <sysfile_pipe+0xc4>
8000dc78:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:524
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000dc7c:	0c004c3f 	jal	800130fc <unlock_mm>
8000dc80:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:526
		if (ret != 0) {
			file_close(fd[0]), file_close(fd[1]);
8000dc84:	0c002e62 	jal	8000b988 <file_close>
8000dc88:	8fa40010 	lw	a0,16(sp)
8000dc8c:	0c002e62 	jal	8000b988 <file_close>
8000dc90:	8fa40014 	lw	a0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:530
		}
	}
	return ret;
}
8000dc94:	8fbf0024 	lw	ra,36(sp)
8000dc98:	02001021 	move	v0,s0
8000dc9c:	8fb20020 	lw	s2,32(sp)
8000dca0:	8fb1001c 	lw	s1,28(sp)
8000dca4:	8fb00018 	lw	s0,24(sp)
8000dca8:	03e00008 	jr	ra
8000dcac:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:524
		{
			if (!copy_to_user(mm, fd_store, fd, sizeof(fd))) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8000dcb0:	0c004c3f 	jal	800130fc <unlock_mm>
8000dcb4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:530
		if (ret != 0) {
			file_close(fd[0]), file_close(fd[1]);
		}
	}
	return ret;
}
8000dcb8:	8fbf0024 	lw	ra,36(sp)
8000dcbc:	02001021 	move	v0,s0
8000dcc0:	8fb20020 	lw	s2,32(sp)
8000dcc4:	8fb1001c 	lw	s1,28(sp)
8000dcc8:	8fb00018 	lw	s0,24(sp)
8000dccc:	03e00008 	jr	ra
8000dcd0:	27bd0028 	addiu	sp,sp,40

8000dcd4 <sysfile_mkfifo>:
sysfile_mkfifo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:533

int sysfile_mkfifo(const char *__name, uint32_t open_flags)
{
8000dcd4:	27bdffd8 	addiu	sp,sp,-40
8000dcd8:	00801021 	move	v0,a0
8000dcdc:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:536
	int ret;
	char *name;
	if ((ret = copy_path(&name, __name)) != 0) {
8000dce0:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:533
	}
	return ret;
}

int sysfile_mkfifo(const char *__name, uint32_t open_flags)
{
8000dce4:	00a08021 	move	s0,a1
8000dce8:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:536
	int ret;
	char *name;
	if ((ret = copy_path(&name, __name)) != 0) {
8000dcec:	0c0033b4 	jal	8000ced0 <copy_path>
8000dcf0:	00402821 	move	a1,v0
8000dcf4:	14400009 	bnez	v0,8000dd1c <sysfile_mkfifo+0x48>
8000dcf8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:539
		return ret;
	}
	ret = file_mkfifo(name, open_flags);
8000dcfc:	8fa40010 	lw	a0,16(sp)
8000dd00:	0c0030e5 	jal	8000c394 <file_mkfifo>
8000dd04:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:540
	kfree(name);
8000dd08:	8fa40010 	lw	a0,16(sp)
8000dd0c:	0c0054b9 	jal	800152e4 <kfree>
8000dd10:	afa20018 	sw	v0,24(sp)
8000dd14:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:542
	return ret;
}
8000dd18:	8fbf0024 	lw	ra,36(sp)
8000dd1c:	8fb00020 	lw	s0,32(sp)
8000dd20:	03e00008 	jr	ra
8000dd24:	27bd0028 	addiu	sp,sp,40

8000dd28 <sysfile_ioctl>:
sysfile_ioctl():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:545

int sysfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000dd28:	27bdffe0 	addiu	sp,sp,-32
8000dd2c:	afb20018 	sw	s2,24(sp)
8000dd30:	afb10014 	sw	s1,20(sp)
8000dd34:	00a09021 	move	s2,a1
8000dd38:	00c08821 	move	s1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:546
	if (!file_testfd(fd, 1, 0)) {
8000dd3c:	24050001 	li	a1,1
8000dd40:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:545
	kfree(name);
	return ret;
}

int sysfile_ioctl(int fd, unsigned int cmd, unsigned long arg)
{
8000dd44:	afb00010 	sw	s0,16(sp)
8000dd48:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:546
	if (!file_testfd(fd, 1, 0)) {
8000dd4c:	0c002dd5 	jal	8000b754 <file_testfd>
8000dd50:	00808021 	move	s0,a0
8000dd54:	1040000e 	beqz	v0,8000dd90 <sysfile_ioctl+0x68>
8000dd58:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:549
		return -E_INVAL;
	}
	if (!__is_linux_devfile(fd)) {
8000dd5c:	0c00312e 	jal	8000c4b8 <__is_linux_devfile>
8000dd60:	02002021 	move	a0,s0
8000dd64:	10400009 	beqz	v0,8000dd8c <sysfile_ioctl+0x64>
8000dd68:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:552
		return -E_INVAL;
	}
	return linux_devfile_ioctl(fd, cmd, arg);
8000dd6c:	02402821 	move	a1,s2
8000dd70:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:553
}
8000dd74:	8fbf001c 	lw	ra,28(sp)
8000dd78:	8fb20018 	lw	s2,24(sp)
8000dd7c:	8fb10014 	lw	s1,20(sp)
8000dd80:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:552
		return -E_INVAL;
	}
	if (!__is_linux_devfile(fd)) {
		return -E_INVAL;
	}
	return linux_devfile_ioctl(fd, cmd, arg);
8000dd84:	080031eb 	j	8000c7ac <linux_devfile_ioctl>
8000dd88:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:553
}
8000dd8c:	8fbf001c 	lw	ra,28(sp)
8000dd90:	2402ffea 	li	v0,-22
8000dd94:	8fb20018 	lw	s2,24(sp)
8000dd98:	8fb10014 	lw	s1,20(sp)
8000dd9c:	8fb00010 	lw	s0,16(sp)
8000dda0:	03e00008 	jr	ra
8000dda4:	27bd0020 	addiu	sp,sp,32

8000dda8 <sysfile_linux_mmap2>:
sysfile_linux_mmap2():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:557

void *sysfile_linux_mmap2(void *addr, size_t len, int prot, int flags,
			  int fd, size_t pgoff)
{
8000dda8:	27bdffd0 	addiu	sp,sp,-48
8000ddac:	afb00018 	sw	s0,24(sp)
8000ddb0:	8fb00040 	lw	s0,64(sp)
8000ddb4:	afb40028 	sw	s4,40(sp)
8000ddb8:	afb30024 	sw	s3,36(sp)
8000ddbc:	afb20020 	sw	s2,32(sp)
8000ddc0:	0080a021 	move	s4,a0
8000ddc4:	00a09821 	move	s3,a1
8000ddc8:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:558
	if (!file_testfd(fd, 1, 0)) {
8000ddcc:	02002021 	move	a0,s0
8000ddd0:	24050001 	li	a1,1
8000ddd4:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:557
	return linux_devfile_ioctl(fd, cmd, arg);
}

void *sysfile_linux_mmap2(void *addr, size_t len, int prot, int flags,
			  int fd, size_t pgoff)
{
8000ddd8:	afb1001c 	sw	s1,28(sp)
8000dddc:	afbf002c 	sw	ra,44(sp)
8000dde0:	8fb10044 	lw	s1,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:558
	if (!file_testfd(fd, 1, 0)) {
8000dde4:	0c002dd5 	jal	8000b754 <file_testfd>
8000dde8:	afa70010 	sw	a3,16(sp)
8000ddec:	1440000a 	bnez	v0,8000de18 <sysfile_linux_mmap2+0x70>
8000ddf0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:570
	else {
		return linux_regfile_mmap2(addr, len, prot, flags, fd, pgoff);
	}
#endif //UCONFIG_BIONIC_LIBC
	return MAP_FAILED;
}
8000ddf4:	8fbf002c 	lw	ra,44(sp)
8000ddf8:	2402ffff 	li	v0,-1
8000ddfc:	8fb40028 	lw	s4,40(sp)
8000de00:	8fb30024 	lw	s3,36(sp)
8000de04:	8fb20020 	lw	s2,32(sp)
8000de08:	8fb1001c 	lw	s1,28(sp)
8000de0c:	8fb00018 	lw	s0,24(sp)
8000de10:	03e00008 	jr	ra
8000de14:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:561
			  int fd, size_t pgoff)
{
	if (!file_testfd(fd, 1, 0)) {
		return MAP_FAILED;
	}
	if (__is_linux_devfile(fd)) {
8000de18:	0c00312e 	jal	8000c4b8 <__is_linux_devfile>
8000de1c:	02002021 	move	a0,s0
8000de20:	1040fff4 	beqz	v0,8000ddf4 <sysfile_linux_mmap2+0x4c>
8000de24:	8fa70010 	lw	a3,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:562
		return linux_devfile_mmap2(addr, len, prot, flags, fd, pgoff);
8000de28:	afb00040 	sw	s0,64(sp)
8000de2c:	afb10044 	sw	s1,68(sp)
8000de30:	02802021 	move	a0,s4
8000de34:	02602821 	move	a1,s3
8000de38:	02403021 	move	a2,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:570
	else {
		return linux_regfile_mmap2(addr, len, prot, flags, fd, pgoff);
	}
#endif //UCONFIG_BIONIC_LIBC
	return MAP_FAILED;
}
8000de3c:	8fbf002c 	lw	ra,44(sp)
8000de40:	8fb40028 	lw	s4,40(sp)
8000de44:	8fb30024 	lw	s3,36(sp)
8000de48:	8fb20020 	lw	s2,32(sp)
8000de4c:	8fb1001c 	lw	s1,28(sp)
8000de50:	8fb00018 	lw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sysfile.c:562
{
	if (!file_testfd(fd, 1, 0)) {
		return MAP_FAILED;
	}
	if (__is_linux_devfile(fd)) {
		return linux_devfile_mmap2(addr, len, prot, flags, fd, pgoff);
8000de54:	08003224 	j	8000c890 <linux_devfile_mmap2>
8000de58:	27bd0030 	addiu	sp,sp,48

8000de5c <__intr_save>:
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:11

void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
8000de5c:	27bdffe8 	addiu	sp,sp,-24
8000de60:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
	if (!(read_c0_status() & ST0_IE)) {
8000de64:	40036000 	mfc0	v1,c0_status
8000de68:	30630001 	andi	v1,v1,0x1
8000de6c:	10600004 	beqz	v1,8000de80 <__intr_save+0x24>
8000de70:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000de74:	0c006d0c 	jal	8001b430 <intr_disable>
8000de78:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8000de7c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:17
}
8000de80:	8fbf0014 	lw	ra,20(sp)
8000de84:	03e00008 	jr	ra
8000de88:	27bd0018 	addiu	sp,sp,24

8000de8c <user_main>:
user_main():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1961

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// user_main - kernel thread used to exec a user program
static int user_main(void *arg)
{
8000de8c:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1962
	sysfile_open("stdin:", O_RDONLY);
8000de90:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1961

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// user_main - kernel thread used to exec a user program
static int user_main(void *arg)
{
8000de94:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1962
	sysfile_open("stdin:", O_RDONLY);
8000de98:	24842998 	addiu	a0,a0,10648
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1963
	sysfile_open("stdout:", O_WRONLY);
8000de9c:	3c108002 	lui	s0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1961

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// user_main - kernel thread used to exec a user program
static int user_main(void *arg)
{
8000dea0:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1962
	sysfile_open("stdin:", O_RDONLY);
8000dea4:	0c0033de 	jal	8000cf78 <sysfile_open>
8000dea8:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1963
	sysfile_open("stdout:", O_WRONLY);
8000deac:	260429a0 	addiu	a0,s0,10656
8000deb0:	0c0033de 	jal	8000cf78 <sysfile_open>
8000deb4:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1964
	sysfile_open("stdout:", O_WRONLY);
8000deb8:	260429a0 	addiu	a0,s0,10656
8000debc:	0c0033de 	jal	8000cf78 <sysfile_open>
8000dec0:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1972
	KERNEL_EXECVE3(UNITTEST, TESTSCRIPT);
#else
	KERNEL_EXECVE2(UNITTEST);
#endif
#else
	__KERNEL_EXECVE("/bin/sh", "/bin/sh");
8000dec4:	3c028015 	lui	v0,0x8015
8000dec8:	8c4277a4 	lw	v0,30628(v0)
8000decc:	3c108002 	lui	s0,0x8002
8000ded0:	261029a8 	addiu	s0,s0,10664
8000ded4:	8c450004 	lw	a1,4(v0)
8000ded8:	3c048002 	lui	a0,0x8002
8000dedc:	3c028002 	lui	v0,0x8002
8000dee0:	02003021 	move	a2,s0
8000dee4:	248429bc 	addiu	a0,a0,10684
8000dee8:	244229b0 	addiu	v0,v0,10672
8000deec:	afb00018 	sw	s0,24(sp)
8000def0:	afa0001c 	sw	zero,28(sp)
8000def4:	afa20010 	sw	v0,16(sp)
8000def8:	0c007aa6 	jal	8001ea98 <kprintf>
8000defc:	afa00014 	sw	zero,20(sp)
8000df00:	02002021 	move	a0,s0
8000df04:	27a50018 	addiu	a1,sp,24
8000df08:	0c007a1c 	jal	8001e870 <kernel_execve>
8000df0c:	27a60010 	addiu	a2,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1974
#endif
	kprintf("user_main execve failed, no /bin/sh?.\n");
8000df10:	3c048002 	lui	a0,0x8002
8000df14:	0c007aa6 	jal	8001ea98 <kprintf>
8000df18:	248429e4 	addiu	a0,a0,10724
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1975
}
8000df1c:	8fbf0024 	lw	ra,36(sp)
8000df20:	8fb00020 	lw	s0,32(sp)
8000df24:	03e00008 	jr	ra
8000df28:	27bd0028 	addiu	sp,sp,40

8000df2c <put_kargv>:
put_kargv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1134
bad_mm:
	goto out;
}

static void put_kargv(int argc, char **kargv)
{
8000df2c:	27bdffe0 	addiu	sp,sp,-32
8000df30:	afb00014 	sw	s0,20(sp)
8000df34:	afbf001c 	sw	ra,28(sp)
8000df38:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1135
	while (argc > 0) {
8000df3c:	18800009 	blez	a0,8000df64 <put_kargv+0x38>
8000df40:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1133
	mm_destroy(mm);
bad_mm:
	goto out;
}

static void put_kargv(int argc, char **kargv)
8000df44:	00048880 	sll	s1,a0,0x2
8000df48:	00b18821 	addu	s1,a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1136
{
	while (argc > 0) {
		kfree(kargv[--argc]);
8000df4c:	8e24fffc 	lw	a0,-4(s1)
8000df50:	2610ffff 	addiu	s0,s0,-1
8000df54:	0c0054b9 	jal	800152e4 <kfree>
8000df58:	2631fffc 	addiu	s1,s1,-4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1135
	goto out;
}

static void put_kargv(int argc, char **kargv)
{
	while (argc > 0) {
8000df5c:	5600fffc 	bnezl	s0,8000df50 <put_kargv+0x24>
8000df60:	8e24fffc 	lw	a0,-4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1138
		kfree(kargv[--argc]);
	}
}
8000df64:	8fbf001c 	lw	ra,28(sp)
8000df68:	8fb10018 	lw	s1,24(sp)
8000df6c:	8fb00014 	lw	s0,20(sp)
8000df70:	03e00008 	jr	ra
8000df74:	27bd0020 	addiu	sp,sp,32

8000df78 <put_pgdir>:
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000df78:	8c870010 	lw	a3,16(a0)
8000df7c:	3c028000 	lui	v0,0x8000
8000df80:	24421000 	addiu	v0,v0,4096
put_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:262
	return 0;
}

// put_pgdir - free the memory space of PDT
static void put_pgdir(struct mm_struct *mm)
{
8000df84:	27bdffe8 	addiu	sp,sp,-24
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
8000df88:	00e2102b 	sltu	v0,a3,v0
8000df8c:	14400011 	bnez	v0,8000dfd4 <put_pgdir+0x5c>
8000df90:	afbf0014 	sw	ra,20(sp)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8000df94:	3c028015 	lui	v0,0x8015
8000df98:	3c037fff 	lui	v1,0x7fff
8000df9c:	8c427770 	lw	v0,30576(v0)
8000dfa0:	3463f000 	ori	v1,v1,0xf000
8000dfa4:	00e33821 	addu	a3,a3,v1
8000dfa8:	00073b02 	srl	a3,a3,0xc
8000dfac:	00e2102b 	sltu	v0,a3,v0
8000dfb0:	1040000e 	beqz	v0,8000dfec <put_pgdir+0x74>
8000dfb4:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8000dfb8:	8c4477bc 	lw	a0,30652(v0)
put_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:264
	free_page(kva2page(mm->pgdir));
}
8000dfbc:	8fbf0014 	lw	ra,20(sp)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
8000dfc0:	00073940 	sll	a3,a3,0x5
put_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:263
}

// put_pgdir - free the memory space of PDT
static void put_pgdir(struct mm_struct *mm)
{
	free_page(kva2page(mm->pgdir));
8000dfc4:	24050001 	li	a1,1
8000dfc8:	00872021 	addu	a0,a0,a3
8000dfcc:	08007449 	j	8001d124 <free_pages>
8000dfd0:	27bd0018 	addiu	sp,sp,24
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000dfd4:	3c048002 	lui	a0,0x8002
8000dfd8:	3c068002 	lui	a2,0x8002
8000dfdc:	24842a0c 	addiu	a0,a0,10764
8000dfe0:	2405006f 	li	a1,111
8000dfe4:	0c006b13 	jal	8001ac4c <__panic>
8000dfe8:	24c62a50 	addiu	a2,a2,10832
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8000dfec:	3c048002 	lui	a0,0x8002
8000dff0:	3c068002 	lui	a2,0x8002
8000dff4:	24842a0c 	addiu	a0,a0,10764
8000dff8:	24050063 	li	a1,99
8000dffc:	0c006b13 	jal	8001ac4c <__panic>
8000e000:	24c62a74 	addiu	a2,a2,10868

8000e004 <load_icode_read>:
load_icode_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:748
	current->exit_code = error_code;
	return __do_exit();
}

static int load_icode_read(int fd, void *buf, size_t len, off_t offset)
{
8000e004:	27bdffd8 	addiu	sp,sp,-40
8000e008:	afb10018 	sw	s1,24(sp)
8000e00c:	afb00014 	sw	s0,20(sp)
8000e010:	00a08821 	move	s1,a1
8000e014:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:750
	int ret;
	if ((ret = sysfile_seek(fd, offset, LSEEK_SET)) != 0) {
8000e018:	00e02821 	move	a1,a3
8000e01c:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:748
	current->exit_code = error_code;
	return __do_exit();
}

static int load_icode_read(int fd, void *buf, size_t len, off_t offset)
{
8000e020:	afb30020 	sw	s3,32(sp)
8000e024:	afb2001c 	sw	s2,28(sp)
8000e028:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:750
	int ret;
	if ((ret = sysfile_seek(fd, offset, LSEEK_SET)) != 0) {
8000e02c:	0c00353e 	jal	8000d4f8 <sysfile_seek>
8000e030:	00809821 	move	s3,a0
8000e034:	10400009 	beqz	v0,8000e05c <load_icode_read+0x58>
8000e038:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:757
	}
	if ((ret = sysfile_read(fd, buf, len)) != len) {
		return (ret < 0) ? ret : -1;
	}
	return 0;
}
8000e03c:	8fbf0024 	lw	ra,36(sp)
8000e040:	02401021 	move	v0,s2
8000e044:	8fb30020 	lw	s3,32(sp)
8000e048:	8fb2001c 	lw	s2,28(sp)
8000e04c:	8fb10018 	lw	s1,24(sp)
8000e050:	8fb00014 	lw	s0,20(sp)
8000e054:	03e00008 	jr	ra
8000e058:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:753
{
	int ret;
	if ((ret = sysfile_seek(fd, offset, LSEEK_SET)) != 0) {
		return ret;
	}
	if ((ret = sysfile_read(fd, buf, len)) != len) {
8000e05c:	02602021 	move	a0,s3
8000e060:	02202821 	move	a1,s1
8000e064:	0c0033f5 	jal	8000cfd4 <sysfile_read>
8000e068:	02003021 	move	a2,s0
8000e06c:	1202fff3 	beq	s0,v0,8000e03c <load_icode_read+0x38>
8000e070:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:754
		return (ret < 0) ? ret : -1;
8000e074:	28430000 	slti	v1,v0,0
8000e078:	2412ffff 	li	s2,-1
8000e07c:	0043900b 	movn	s2,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:757
	}
	return 0;
}
8000e080:	02401021 	move	v0,s2
8000e084:	8fb30020 	lw	s3,32(sp)
8000e088:	8fb2001c 	lw	s2,28(sp)
8000e08c:	8fb10018 	lw	s1,24(sp)
8000e090:	8fb00014 	lw	s0,20(sp)
8000e094:	03e00008 	jr	ra
8000e098:	27bd0028 	addiu	sp,sp,40

8000e09c <copy_kargv.constprop.3>:
copy_kargv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1141
		kfree(kargv[--argc]);
	}
}

static int
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
8000e09c:	27bdffb0 	addiu	sp,sp,-80
8000e0a0:	afb70048 	sw	s7,72(sp)
8000e0a4:	afb60044 	sw	s6,68(sp)
8000e0a8:	afb30038 	sw	s3,56(sp)
8000e0ac:	afbf004c 	sw	ra,76(sp)
8000e0b0:	afb50040 	sw	s5,64(sp)
8000e0b4:	afb4003c 	sw	s4,60(sp)
8000e0b8:	afb20034 	sw	s2,52(sp)
8000e0bc:	afb10030 	sw	s1,48(sp)
8000e0c0:	afb0002c 	sw	s0,44(sp)
8000e0c4:	00809821 	move	s3,a0
8000e0c8:	00a0b021 	move	s6,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1145
	   int *argc_store)
{
	int i, ret = -E_INVAL;
	if (!argv) {
8000e0cc:	10c00043 	beqz	a2,8000e1dc <copy_kargv.constprop.3+0x140>
8000e0d0:	00e0b821 	move	s7,a3
8000e0d4:	00a08021 	move	s0,a1
8000e0d8:	00009021 	move	s2,zero
8000e0dc:	00c5a023 	subu	s4,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1150
		*argc_store = 0;
		return 0;
	}
	char *argv_k;
	for (i = 0; i < max_argc; i++) {
8000e0e0:	24150020 	li	s5,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1151
		if (!copy_from_user(mm, &argv_k, argv + i, sizeof(char *), 0))
8000e0e4:	02602021 	move	a0,s3
8000e0e8:	02903021 	addu	a2,s4,s0
8000e0ec:	27a50018 	addiu	a1,sp,24
8000e0f0:	24070004 	li	a3,4
8000e0f4:	0c007936 	jal	8001e4d8 <copy_from_user>
8000e0f8:	afa00010 	sw	zero,16(sp)
8000e0fc:	10400020 	beqz	v0,8000e180 <copy_kargv.constprop.3+0xe4>
8000e100:	24041000 	li	a0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1153
			goto failed_cleanup;
		if (!argv_k)
8000e104:	8fa20018 	lw	v0,24(sp)
8000e108:	10400011 	beqz	v0,8000e150 <copy_kargv.constprop.3+0xb4>
8000e10c:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1156
			break;
		char *buffer;
		if ((buffer = kmalloc(EXEC_MAX_ARG_LEN + 1)) == NULL) {
8000e110:	0c00548e 	jal	80015238 <kmalloc>
8000e114:	00000000 	nop
8000e118:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1166
		    !copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
			goto failed_cleanup;
		}
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
8000e11c:	02602021 	move	a0,s3
8000e120:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1156
		if (!copy_from_user(mm, &argv_k, argv + i, sizeof(char *), 0))
			goto failed_cleanup;
		if (!argv_k)
			break;
		char *buffer;
		if ((buffer = kmalloc(EXEC_MAX_ARG_LEN + 1)) == NULL) {
8000e124:	10400027 	beqz	v0,8000e1c4 <copy_kargv.constprop.3+0x128>
8000e128:	24071000 	li	a3,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1166
		    !copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
			goto failed_cleanup;
		}
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
8000e12c:	0c007969 	jal	8001e5a4 <copy_string>
8000e130:	8fa60018 	lw	a2,24(sp)
8000e134:	10400025 	beqz	v0,8000e1cc <copy_kargv.constprop.3+0x130>
8000e138:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1150
	if (!argv) {
		*argc_store = 0;
		return 0;
	}
	char *argv_k;
	for (i = 0; i < max_argc; i++) {
8000e13c:	26520001 	addiu	s2,s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1170
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
			goto failed_cleanup;
		}
		kargv[i] = buffer;
8000e140:	ae110000 	sw	s1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1150
	if (!argv) {
		*argc_store = 0;
		return 0;
	}
	char *argv_k;
	for (i = 0; i < max_argc; i++) {
8000e144:	1655ffe7 	bne	s2,s5,8000e0e4 <copy_kargv.constprop.3+0x48>
8000e148:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e14c:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1172
			kfree(buffer);
			goto failed_cleanup;
		}
		kargv[i] = buffer;
	}
	*argc_store = i;
8000e150:	aef20000 	sw	s2,0(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1173
	return 0;
8000e154:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e158:	8fb70048 	lw	s7,72(sp)
8000e15c:	8fb60044 	lw	s6,68(sp)
8000e160:	8fb50040 	lw	s5,64(sp)
8000e164:	8fb4003c 	lw	s4,60(sp)
8000e168:	8fb30038 	lw	s3,56(sp)
8000e16c:	8fb20034 	lw	s2,52(sp)
8000e170:	8fb10030 	lw	s1,48(sp)
8000e174:	8fb0002c 	lw	s0,44(sp)
8000e178:	03e00008 	jr	ra
8000e17c:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1144

static int
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
	   int *argc_store)
{
	int i, ret = -E_INVAL;
8000e180:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1178
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
8000e184:	02402021 	move	a0,s2
8000e188:	02c02821 	move	a1,s6
8000e18c:	0c0037cb 	jal	8000df2c <put_kargv>
8000e190:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
	return ret;
}
8000e194:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1178
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
8000e198:	8fa20020 	lw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
	return ret;
}
8000e19c:	8fb70048 	lw	s7,72(sp)
8000e1a0:	8fb60044 	lw	s6,68(sp)
8000e1a4:	8fb50040 	lw	s5,64(sp)
8000e1a8:	8fb4003c 	lw	s4,60(sp)
8000e1ac:	8fb30038 	lw	s3,56(sp)
8000e1b0:	8fb20034 	lw	s2,52(sp)
8000e1b4:	8fb10030 	lw	s1,48(sp)
8000e1b8:	8fb0002c 	lw	s0,44(sp)
8000e1bc:	03e00008 	jr	ra
8000e1c0:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1176
	}
	*argc_store = i;
	return 0;

failed_nomem:
	ret = -E_NO_MEM;
8000e1c4:	08003861 	j	8000e184 <copy_kargv.constprop.3+0xe8>
8000e1c8:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1167
			kfree(buffer);
			goto failed_cleanup;
		}
#endif
		if (!copy_string(mm, buffer, argv_k, EXEC_MAX_ARG_LEN + 1)) {
			kfree(buffer);
8000e1cc:	0c0054b9 	jal	800152e4 <kfree>
8000e1d0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1144

static int
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
	   int *argc_store)
{
	int i, ret = -E_INVAL;
8000e1d4:	08003861 	j	8000e184 <copy_kargv.constprop.3+0xe8>
8000e1d8:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e1dc:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1147
	   int *argc_store)
{
	int i, ret = -E_INVAL;
	if (!argv) {
		*argc_store = 0;
		return 0;
8000e1e0:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e1e4:	8fb70048 	lw	s7,72(sp)
8000e1e8:	8fb60044 	lw	s6,68(sp)
8000e1ec:	8fb50040 	lw	s5,64(sp)
8000e1f0:	8fb4003c 	lw	s4,60(sp)
8000e1f4:	8fb30038 	lw	s3,56(sp)
8000e1f8:	8fb20034 	lw	s2,52(sp)
8000e1fc:	8fb10030 	lw	s1,48(sp)
8000e200:	8fb0002c 	lw	s0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1146
copy_kargv(struct mm_struct *mm, char **kargv, const char **argv, int max_argc,
	   int *argc_store)
{
	int i, ret = -E_INVAL;
	if (!argv) {
		*argc_store = 0;
8000e204:	ace00000 	sw	zero,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1180
failed_nomem:
	ret = -E_NO_MEM;
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}
8000e208:	03e00008 	jr	ra
8000e20c:	27bd0050 	addiu	sp,sp,80

8000e210 <map_ph>:
map_ph():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:771
	uint32_t vm_flags = 0;
	uint32_t bias = 0;
	pte_perm_t perm = 0;
	ptep_set_u_read(&perm);

	if (ph->p_flags & ELF_PF_X)
8000e210:	8ca20018 	lw	v0,24(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e214:	27bdffb0 	addiu	sp,sp,-80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:772
	uint32_t bias = 0;
	pte_perm_t perm = 0;
	ptep_set_u_read(&perm);

	if (ph->p_flags & ELF_PF_X)
		vm_flags |= VM_EXEC;
8000e218:	24030004 	li	v1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e21c:	afb00028 	sw	s0,40(sp)
8000e220:	afa50054 	sw	a1,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:771
	uint32_t vm_flags = 0;
	uint32_t bias = 0;
	pte_perm_t perm = 0;
	ptep_set_u_read(&perm);

	if (ph->p_flags & ELF_PF_X)
8000e224:	30500001 	andi	s0,v0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:772
		vm_flags |= VM_EXEC;
8000e228:	00602821 	move	a1,v1
8000e22c:	0010280a 	movz	a1,zero,s0
8000e230:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:773
	if (ph->p_flags & ELF_PF_W)
8000e234:	30450002 	andi	a1,v0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:774
		vm_flags |= VM_WRITE;
8000e238:	02058025 	or	s0,s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:776
	if (ph->p_flags & ELF_PF_R)
		vm_flags |= VM_READ;
8000e23c:	7c420080 	ext	v0,v0,0x2,0x1
8000e240:	00508025 	or	s0,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e244:	afb60040 	sw	s6,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:778
	if (ph->p_flags & ELF_PF_W)
		vm_flags |= VM_WRITE;
	if (ph->p_flags & ELF_PF_R)
		vm_flags |= VM_READ;

	if (vm_flags & VM_WRITE)
8000e248:	32020002 	andi	v0,s0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:65
	*ptep |= PTE_U;
}

static inline void ptep_set_u_write(pte_t * ptep)
{
	*ptep |= PTE_W | PTE_U;
8000e24c:	24160006 	li	s6,6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:763

//#ifdef UCONFIG_BIONIC_LIBC
static int
map_ph(int fd, struct proghdr *ph, struct mm_struct *mm, uint32_t * pbias,
       uint32_t linker)
{
8000e250:	afbe0048 	sw	s8,72(sp)
8000e254:	afb70044 	sw	s7,68(sp)
8000e258:	afbf004c 	sw	ra,76(sp)
8000e25c:	afb5003c 	sw	s5,60(sp)
8000e260:	afb40038 	sw	s4,56(sp)
8000e264:	afb30034 	sw	s3,52(sp)
8000e268:	afb20030 	sw	s2,48(sp)
8000e26c:	afb1002c 	sw	s1,44(sp)
8000e270:	0080f021 	move	s8,a0
8000e274:	00c0b821 	move	s7,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:781
		vm_flags |= VM_READ;

	if (vm_flags & VM_WRITE)
		ptep_set_u_write(&perm);

	if (pbias) {
8000e278:	10e00055 	beqz	a3,8000e3d0 <map_ph+0x1c0>
8000e27c:	0062b00a 	movz	s6,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:782
		bias = *pbias;
8000e280:	8ce30000 	lw	v1,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:784
	}
	if (!bias && !ph->p_va) {
8000e284:	10600052 	beqz	v1,8000e3d0 <map_ph+0x1c0>
8000e288:	afa30018 	sw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:788
		bias = get_unmapped_area(mm, ph->p_memsz + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);
		if (pbias)
			*pbias = bias;
8000e28c:	8fa30054 	lw	v1,84(sp)
8000e290:	8c650008 	lw	a1,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:791
	}

	if ((ret =
8000e294:	8fa30054 	lw	v1,84(sp)
8000e298:	02e02021 	move	a0,s7
8000e29c:	02003821 	move	a3,s0
8000e2a0:	8c660014 	lw	a2,20(v1)
8000e2a4:	8fa30018 	lw	v1,24(sp)
8000e2a8:	afa00010 	sw	zero,16(sp)
8000e2ac:	0c004e52 	jal	80013948 <mm_map>
8000e2b0:	00a32821 	addu	a1,a1,v1
8000e2b4:	14400039 	bnez	v0,8000e39c <map_ph+0x18c>
8000e2b8:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:796
	     mm_map(mm, ph->p_va + bias, ph->p_memsz, vm_flags, NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
8000e2bc:	8fa20060 	lw	v0,96(sp)
8000e2c0:	10400056 	beqz	v0,8000e41c <map_ph+0x20c>
8000e2c4:	8fa30054 	lw	v1,84(sp)
8000e2c8:	8c620008 	lw	v0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:804

	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);

	end = ph->p_va + bias + ph->p_filesz;
8000e2cc:	8fa30054 	lw	v1,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:800

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
		mm->brk_start = ph->p_va + bias + ph->p_memsz;
	}

	off_t offset = ph->p_offset;
8000e2d0:	8fa40054 	lw	a0,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:802
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);
8000e2d4:	2410f000 	li	s0,-4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:804

	end = ph->p_va + bias + ph->p_filesz;
8000e2d8:	8c750010 	lw	s5,16(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:802
		mm->brk_start = ph->p_va + bias + ph->p_memsz;
	}

	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);
8000e2dc:	8fa30018 	lw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:800

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
		mm->brk_start = ph->p_va + bias + ph->p_memsz;
	}

	off_t offset = ph->p_offset;
8000e2e0:	8c940004 	lw	s4,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:802
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);
8000e2e4:	00438821 	addu	s1,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:804

	end = ph->p_va + bias + ph->p_filesz;
8000e2e8:	0235a821 	addu	s5,s1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:805
	while (start < end) {
8000e2ec:	0235182b 	sltu	v1,s1,s5
8000e2f0:	14600022 	bnez	v1,8000e37c <map_ph+0x16c>
8000e2f4:	02308024 	and	s0,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:822
			goto bad_cleanup_mmap;
		}
		start += size, offset += size;
	}

	end = ph->p_va + bias + ph->p_memsz;
8000e2f8:	08003915 	j	8000e454 <map_ph+0x244>
8000e2fc:	8fa30054 	lw	v1,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:810
	while (start < end) {
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
			ret = -E_NO_MEM;
			goto bad_cleanup_mmap;
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
8000e300:	02302823 	subu	a1,s1,s0
8000e304:	26101000 	addiu	s0,s0,4096
8000e308:	24031000 	li	v1,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:811
		if (end < la) {
8000e30c:	02b0102b 	sltu	v0,s5,s0
8000e310:	10400003 	beqz	v0,8000e320 <map_ph+0x110>
8000e314:	00659023 	subu	s2,v1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:812
			size -= la - end;
8000e318:	02509023 	subu	s2,s2,s0
8000e31c:	02559021 	addu	s2,s2,s5
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e320:	3c048015 	lui	a0,0x8015
8000e324:	8c8777bc 	lw	a3,30652(a0)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e328:	3c038015 	lui	v1,0x8015
8000e32c:	8c627770 	lw	v0,30576(v1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e330:	02673823 	subu	a3,s3,a3
8000e334:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e338:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e33c:	00071b02 	srl	v1,a3,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e340:	3c048000 	lui	a0,0x8000
8000e344:	34841000 	ori	a0,a0,0x1000
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e348:	0062102b 	sltu	v0,v1,v0
8000e34c:	104000a4 	beqz	v0,8000e5e0 <map_ph+0x3d0>
8000e350:	00e43821 	addu	a3,a3,a0
map_ph():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:814
		}
		if ((ret =
8000e354:	00e52821 	addu	a1,a3,a1
8000e358:	03c02021 	move	a0,s8
8000e35c:	02403021 	move	a2,s2
8000e360:	0c003801 	jal	8000e004 <load_icode_read>
8000e364:	02803821 	move	a3,s4
8000e368:	14400083 	bnez	v0,8000e578 <map_ph+0x368>
8000e36c:	02328821 	addu	s1,s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:805
	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);

	end = ph->p_va + bias + ph->p_filesz;
	while (start < end) {
8000e370:	0235102b 	sltu	v0,s1,s5
8000e374:	10400034 	beqz	v0,8000e448 <map_ph+0x238>
8000e378:	0254a021 	addu	s4,s2,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:806
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
8000e37c:	8ee40010 	lw	a0,16(s7)
8000e380:	02002821 	move	a1,s0
8000e384:	0c005e55 	jal	80017954 <pgdir_alloc_page>
8000e388:	02c03021 	move	a2,s6
8000e38c:	1440ffdc 	bnez	v0,8000e300 <map_ph+0xf0>
8000e390:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:840
		       || (end >= la && start == la));
	}

	while (start < end) {
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
			ret = -E_NO_MEM;
8000e394:	2403fff4 	li	v1,-12
8000e398:	afa3001c 	sw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:854
	}
normal_exit:
	return 0;
bad_cleanup_mmap:
	return ret;
}
8000e39c:	8fbf004c 	lw	ra,76(sp)
8000e3a0:	8fa2001c 	lw	v0,28(sp)
8000e3a4:	8fbe0048 	lw	s8,72(sp)
8000e3a8:	8fb70044 	lw	s7,68(sp)
8000e3ac:	8fb60040 	lw	s6,64(sp)
8000e3b0:	8fb5003c 	lw	s5,60(sp)
8000e3b4:	8fb40038 	lw	s4,56(sp)
8000e3b8:	8fb30034 	lw	s3,52(sp)
8000e3bc:	8fb20030 	lw	s2,48(sp)
8000e3c0:	8fb1002c 	lw	s1,44(sp)
8000e3c4:	8fb00028 	lw	s0,40(sp)
8000e3c8:	03e00008 	jr	ra
8000e3cc:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:784
		ptep_set_u_write(&perm);

	if (pbias) {
		bias = *pbias;
	}
	if (!bias && !ph->p_va) {
8000e3d0:	8fa30054 	lw	v1,84(sp)
8000e3d4:	afa00018 	sw	zero,24(sp)
8000e3d8:	8c650008 	lw	a1,8(v1)
8000e3dc:	54a0ffae 	bnezl	a1,8000e298 <map_ph+0x88>
8000e3e0:	8fa30054 	lw	v1,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:785
		bias = get_unmapped_area(mm, ph->p_memsz + PGSIZE);
8000e3e4:	8c650014 	lw	a1,20(v1)
8000e3e8:	02e02021 	move	a0,s7
8000e3ec:	afa70020 	sw	a3,32(sp)
8000e3f0:	0c005024 	jal	80014090 <get_unmapped_area>
8000e3f4:	24a51000 	addiu	a1,a1,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:786
		bias = ROUNDUP(bias, PGSIZE);
8000e3f8:	24420fff 	addiu	v0,v0,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:787
		if (pbias)
8000e3fc:	8fa70020 	lw	a3,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:786
	if (pbias) {
		bias = *pbias;
	}
	if (!bias && !ph->p_va) {
		bias = get_unmapped_area(mm, ph->p_memsz + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);
8000e400:	30430fff 	andi	v1,v0,0xfff
8000e404:	00431823 	subu	v1,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:787
		if (pbias)
8000e408:	10e0ffa0 	beqz	a3,8000e28c <map_ph+0x7c>
8000e40c:	afa30018 	sw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:788
			*pbias = bias;
8000e410:	8fa30018 	lw	v1,24(sp)
8000e414:	080038a3 	j	8000e28c <map_ph+0x7c>
8000e418:	ace30000 	sw	v1,0(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:796
	if ((ret =
	     mm_map(mm, ph->p_va + bias, ph->p_memsz, vm_flags, NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (!linker && mm->brk_start < ph->p_va + bias + ph->p_memsz) {
8000e41c:	8c620008 	lw	v0,8(v1)
8000e420:	8c630014 	lw	v1,20(v1)
8000e424:	8fa50018 	lw	a1,24(sp)
8000e428:	8ee40024 	lw	a0,36(s7)
8000e42c:	00431821 	addu	v1,v0,v1
8000e430:	00651821 	addu	v1,v1,a1
8000e434:	0083202b 	sltu	a0,a0,v1
8000e438:	5480ffa4 	bnezl	a0,8000e2cc <map_ph+0xbc>
8000e43c:	aee30024 	sw	v1,36(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:804

	off_t offset = ph->p_offset;
	size_t off, size;
	uintptr_t start = ph->p_va + bias, end, la = ROUNDDOWN(start, PGSIZE);

	end = ph->p_va + bias + ph->p_filesz;
8000e440:	080038b4 	j	8000e2d0 <map_ph+0xc0>
8000e444:	8fa30054 	lw	v1,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:805
	while (start < end) {
8000e448:	8fa30054 	lw	v1,84(sp)
8000e44c:	8c620008 	lw	v0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:822
			goto bad_cleanup_mmap;
		}
		start += size, offset += size;
	}

	end = ph->p_va + bias + ph->p_memsz;
8000e450:	8fa30054 	lw	v1,84(sp)
8000e454:	8fa40018 	lw	a0,24(sp)
8000e458:	8c720014 	lw	s2,20(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:824

	if (start < la) {
8000e45c:	0230182b 	sltu	v1,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:822
			goto bad_cleanup_mmap;
		}
		start += size, offset += size;
	}

	end = ph->p_va + bias + ph->p_memsz;
8000e460:	00929021 	addu	s2,a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:824

	if (start < la) {
8000e464:	1060001c 	beqz	v1,8000e4d8 <map_ph+0x2c8>
8000e468:	02429021 	addu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:825
		if (start == end) {
8000e46c:	1232ffcb 	beq	s1,s2,8000e39c <map_ph+0x18c>
8000e470:	02301023 	subu	v0,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:829
			goto normal_exit;
		}
		off = start + PGSIZE - la, size = PGSIZE - off;
		if (end < la) {
8000e474:	0250a02b 	sltu	s4,s2,s0
8000e478:	16800056 	bnez	s4,8000e5d4 <map_ph+0x3c4>
8000e47c:	0002a823 	negu	s5,v0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e480:	3c038015 	lui	v1,0x8015
8000e484:	8c6377bc 	lw	v1,30652(v1)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e488:	3c048015 	lui	a0,0x8015
8000e48c:	8c847770 	lw	a0,30576(a0)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e490:	02631823 	subu	v1,s3,v1
8000e494:	00031943 	sra	v1,v1,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e498:	00031b00 	sll	v1,v1,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e49c:	00032b02 	srl	a1,v1,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e4a0:	3c078000 	lui	a3,0x8000
8000e4a4:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e4a8:	00a4202b 	sltu	a0,a1,a0
8000e4ac:	1080004c 	beqz	a0,8000e5e0 <map_ph+0x3d0>
8000e4b0:	00673821 	addu	a3,v1,a3
map_ph():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:828

	if (start < la) {
		if (start == end) {
			goto normal_exit;
		}
		off = start + PGSIZE - la, size = PGSIZE - off;
8000e4b4:	24421000 	addiu	v0,v0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:832
		if (end < la) {
			size -= la - end;
		}
		memset(page2kva(page) + off, 0, size);
8000e4b8:	00e22021 	addu	a0,a3,v0
8000e4bc:	00002821 	move	a1,zero
8000e4c0:	0c005c5a 	jal	80017168 <memset>
8000e4c4:	02a03021 	move	a2,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:834
		start += size;
		assert((end < la && start == end)
8000e4c8:	16800039 	bnez	s4,8000e5b0 <map_ph+0x3a0>
8000e4cc:	02358821 	addu	s1,s1,s5
8000e4d0:	16300039 	bne	s1,s0,8000e5b8 <map_ph+0x3a8>
8000e4d4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:838
		       || (end >= la && start == la));
	}

	while (start < end) {
8000e4d8:	0232102b 	sltu	v0,s1,s2
8000e4dc:	1040ffaf 	beqz	v0,8000e39c <map_ph+0x18c>
8000e4e0:	3c148000 	lui	s4,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:843
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
			ret = -E_NO_MEM;
			goto bad_cleanup_mmap;
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
8000e4e4:	241e1000 	li	s8,4096
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e4e8:	3c158015 	lui	s5,0x8015
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e4ec:	26941000 	addiu	s4,s4,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e4f0:	08003955 	j	8000e554 <map_ph+0x344>
8000e4f4:	3c138015 	lui	s3,0x8015
map_ph():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:843
8000e4f8:	26101000 	addiu	s0,s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:844
		if (end < la) {
8000e4fc:	0250282b 	sltu	a1,s2,s0
8000e500:	10a00003 	beqz	a1,8000e510 <map_ph+0x300>
8000e504:	03c41823 	subu	v1,s8,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:845
			size -= la - end;
8000e508:	00701823 	subu	v1,v1,s0
8000e50c:	00721821 	addu	v1,v1,s2
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e510:	8ea777bc 	lw	a3,30652(s5)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e514:	8e657770 	lw	a1,30576(s3)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e518:	00473823 	subu	a3,v0,a3
8000e51c:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e520:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e524:	00071302 	srl	v0,a3,0xc
8000e528:	0045102b 	sltu	v0,v0,a1
8000e52c:	1040002c 	beqz	v0,8000e5e0 <map_ph+0x3d0>
8000e530:	00f43821 	addu	a3,a3,s4
map_ph():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:848
		}
		memset(page2kva(page) + off, 0, size);
		start += size;
8000e534:	02238821 	addu	s1,s1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:847
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
		if (end < la) {
			size -= la - end;
		}
		memset(page2kva(page) + off, 0, size);
8000e538:	00e42021 	addu	a0,a3,a0
8000e53c:	00002821 	move	a1,zero
8000e540:	0c005c5a 	jal	80017168 <memset>
8000e544:	00603021 	move	a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:838
		start += size;
		assert((end < la && start == end)
		       || (end >= la && start == la));
	}

	while (start < end) {
8000e548:	0232102b 	sltu	v0,s1,s2
8000e54c:	1040ff94 	beqz	v0,8000e3a0 <map_ph+0x190>
8000e550:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:839
		if ((page = pgdir_alloc_page(mm->pgdir, la, perm)) == NULL) {
8000e554:	8ee40010 	lw	a0,16(s7)
8000e558:	02002821 	move	a1,s0
8000e55c:	0c005e55 	jal	80017954 <pgdir_alloc_page>
8000e560:	02c03021 	move	a2,s6
8000e564:	1440ffe4 	bnez	v0,8000e4f8 <map_ph+0x2e8>
8000e568:	02302023 	subu	a0,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:840
			ret = -E_NO_MEM;
8000e56c:	2403fff4 	li	v1,-12
8000e570:	080038e7 	j	8000e39c <map_ph+0x18c>
8000e574:	afa3001c 	sw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:854
	}
normal_exit:
	return 0;
bad_cleanup_mmap:
	return ret;
}
8000e578:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:814
		}
		off = start - la, size = PGSIZE - off, la += PGSIZE;
		if (end < la) {
			size -= la - end;
		}
		if ((ret =
8000e57c:	afa2001c 	sw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:854
	}
normal_exit:
	return 0;
bad_cleanup_mmap:
	return ret;
}
8000e580:	8fa2001c 	lw	v0,28(sp)
8000e584:	8fbe0048 	lw	s8,72(sp)
8000e588:	8fb70044 	lw	s7,68(sp)
8000e58c:	8fb60040 	lw	s6,64(sp)
8000e590:	8fb5003c 	lw	s5,60(sp)
8000e594:	8fb40038 	lw	s4,56(sp)
8000e598:	8fb30034 	lw	s3,52(sp)
8000e59c:	8fb20030 	lw	s2,48(sp)
8000e5a0:	8fb1002c 	lw	s1,44(sp)
8000e5a4:	8fb00028 	lw	s0,40(sp)
8000e5a8:	03e00008 	jr	ra
8000e5ac:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:834
		if (end < la) {
			size -= la - end;
		}
		memset(page2kva(page) + off, 0, size);
		start += size;
		assert((end < la && start == end)
8000e5b0:	1232ff7a 	beq	s1,s2,8000e39c <map_ph+0x18c>
8000e5b4:	3c048002 	lui	a0,0x8002
8000e5b8:	3c068002 	lui	a2,0x8002
8000e5bc:	3c078002 	lui	a3,0x8002
8000e5c0:	24842ab8 	addiu	a0,a0,10936
8000e5c4:	24050343 	li	a1,835
8000e5c8:	24c60e48 	addiu	a2,a2,3656
8000e5cc:	0c006b13 	jal	8001ac4c <__panic>
8000e5d0:	24e72ac0 	addiu	a3,a3,10944
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:830
		if (start == end) {
			goto normal_exit;
		}
		off = start + PGSIZE - la, size = PGSIZE - off;
		if (end < la) {
			size -= la - end;
8000e5d4:	0250a823 	subu	s5,s2,s0
8000e5d8:	08003920 	j	8000e480 <map_ph+0x270>
8000e5dc:	02a2a823 	subu	s5,s5,v0
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
8000e5e0:	3c048002 	lui	a0,0x8002
8000e5e4:	3c068002 	lui	a2,0x8002
8000e5e8:	24842a0c 	addiu	a0,a0,10764
8000e5ec:	2405006a 	li	a1,106
8000e5f0:	0c006b13 	jal	8001ac4c <__panic>
8000e5f4:	24c62a94 	addiu	a2,a2,10900

8000e5f8 <setup_pgdir>:
setup_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:248

// setup_pgdir - alloc one page as PDT
// XXX, PDT size != PGSIZE!!!
#ifndef ARCH_ARM
static int setup_pgdir(struct mm_struct *mm)
{
8000e5f8:	27bdffe0 	addiu	sp,sp,-32
8000e5fc:	afb10018 	sw	s1,24(sp)
8000e600:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:250
	struct Page *page;
	if ((page = alloc_page()) == NULL) {
8000e604:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:248

// setup_pgdir - alloc one page as PDT
// XXX, PDT size != PGSIZE!!!
#ifndef ARCH_ARM
static int setup_pgdir(struct mm_struct *mm)
{
8000e608:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:250
	struct Page *page;
	if ((page = alloc_page()) == NULL) {
8000e60c:	0c00742d 	jal	8001d0b4 <alloc_pages>
8000e610:	afb00014 	sw	s0,20(sp)
8000e614:	1040001b 	beqz	v0,8000e684 <setup_pgdir+0x8c>
8000e618:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e61c:	8c7077bc 	lw	s0,30652(v1)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e620:	3c038015 	lui	v1,0x8015
8000e624:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000e628:	00501023 	subu	v0,v0,s0
8000e62c:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e630:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e634:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000e638:	3c108000 	lui	s0,0x8000
8000e63c:	26101000 	addiu	s0,s0,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000e640:	0083182b 	sltu	v1,a0,v1
8000e644:	10600011 	beqz	v1,8000e68c <setup_pgdir+0x94>
8000e648:	00508021 	addu	s0,v0,s0
setup_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:254
		return -E_NO_MEM;
	}
	pgd_t *pgdir = page2kva(page);
	memcpy(pgdir, init_pgdir_get(), PGSIZE);
8000e64c:	3c028015 	lui	v0,0x8015
8000e650:	8c45776c 	lw	a1,30572(v0)
8000e654:	24061000 	li	a2,4096
8000e658:	0c005c84 	jal	80017210 <memcpy>
8000e65c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:255
	map_pgdir(pgdir);
8000e660:	0c0078f6 	jal	8001e3d8 <map_pgdir>
8000e664:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:256
	mm->pgdir = pgdir;
8000e668:	ae300010 	sw	s0,16(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:257
	return 0;
8000e66c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:258
}
8000e670:	8fbf001c 	lw	ra,28(sp)
8000e674:	8fb10018 	lw	s1,24(sp)
8000e678:	8fb00014 	lw	s0,20(sp)
8000e67c:	03e00008 	jr	ra
8000e680:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:251
#ifndef ARCH_ARM
static int setup_pgdir(struct mm_struct *mm)
{
	struct Page *page;
	if ((page = alloc_page()) == NULL) {
		return -E_NO_MEM;
8000e684:	0800399c 	j	8000e670 <setup_pgdir+0x78>
8000e688:	2402fff4 	li	v0,-12
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
8000e68c:	3c048002 	lui	a0,0x8002
8000e690:	3c068002 	lui	a2,0x8002
8000e694:	24842a0c 	addiu	a0,a0,10764
8000e698:	2405006a 	li	a1,106
8000e69c:	24c62a94 	addiu	a2,a2,10900
8000e6a0:	0c006b13 	jal	8001ac4c <__panic>
8000e6a4:	02003821 	move	a3,s0

8000e6a8 <put_sighand>:
put_sighand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:498
bad_sighand:
	return ret;
}

static void put_sighand(struct proc_struct *proc)
{
8000e6a8:	27bdffe0 	addiu	sp,sp,-32
8000e6ac:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:499
	struct sighand_struct *sh = proc->signal_info.sighand;
8000e6b0:	8c9100c4 	lw	s1,196(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:498
bad_sighand:
	return ret;
}

static void put_sighand(struct proc_struct *proc)
{
8000e6b4:	afb00014 	sw	s0,20(sp)
8000e6b8:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:500
	struct sighand_struct *sh = proc->signal_info.sighand;
	if (sh != NULL) {
8000e6bc:	1220000d 	beqz	s1,8000e6f4 <put_sighand+0x4c>
8000e6c0:	00808021 	move	s0,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e6c4:	40026000 	mfc0	v0,c0_status
8000e6c8:	30420001 	andi	v0,v0,0x1
8000e6cc:	1440000f 	bnez	v0,8000e70c <put_sighand+0x64>
8000e6d0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e6d4:	8e220000 	lw	v0,0(s1)
8000e6d8:	2442ffff 	addiu	v0,v0,-1
8000e6dc:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e6e0:	8e220000 	lw	v0,0(s1)
put_sighand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:501
		if (sighand_count_dec(sh) == 0) {
8000e6e4:	14400004 	bnez	v0,8000e6f8 <put_sighand+0x50>
8000e6e8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:502
			sighand_destroy(sh);
8000e6ec:	0c004594 	jal	80011650 <sighand_destroy>
8000e6f0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:506
		}
	}
	proc->signal_info.sighand = NULL;
}
8000e6f4:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:505
	if (sh != NULL) {
		if (sighand_count_dec(sh) == 0) {
			sighand_destroy(sh);
		}
	}
	proc->signal_info.sighand = NULL;
8000e6f8:	ae0000c4 	sw	zero,196(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:506
}
8000e6fc:	8fb10018 	lw	s1,24(sp)
8000e700:	8fb00014 	lw	s0,20(sp)
8000e704:	03e00008 	jr	ra
8000e708:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e70c:	0c006d0c 	jal	8001b430 <intr_disable>
8000e710:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e714:	8e220000 	lw	v0,0(s1)
8000e718:	2442ffff 	addiu	v0,v0,-1
8000e71c:	ae220000 	sw	v0,0(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e720:	0c006d08 	jal	8001b420 <intr_enable>
8000e724:	00000000 	nop
8000e728:	080039b8 	j	8000e6e0 <put_sighand+0x38>
8000e72c:	00000000 	nop

8000e730 <put_sem_queue>:
put_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:419
bad_sem_queue:
	return ret;
}

static void put_sem_queue(struct proc_struct *proc)
{
8000e730:	27bdffe8 	addiu	sp,sp,-24
8000e734:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:420
	sem_queue_t *sem_queue = proc->sem_queue;
8000e738:	8c9000ac 	lw	s0,172(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:421
	if (sem_queue != NULL) {
8000e73c:	12000012 	beqz	s0,8000e788 <put_sem_queue+0x58>
8000e740:	afbf0014 	sw	ra,20(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e744:	40026000 	mfc0	v0,c0_status
8000e748:	30420001 	andi	v0,v0,0x1
8000e74c:	14400012 	bnez	v0,8000e798 <put_sem_queue+0x68>
8000e750:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000e754:	8e020014 	lw	v0,20(s0)
8000e758:	2442ffff 	addiu	v0,v0,-1
8000e75c:	ae020014 	sw	v0,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e760:	8e020014 	lw	v0,20(s0)
put_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:422
		if (sem_queue_count_dec(sem_queue) == 0) {
8000e764:	14400009 	bnez	v0,8000e78c <put_sem_queue+0x5c>
8000e768:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:423
			exit_sem_queue(sem_queue);
8000e76c:	0c006810 	jal	8001a040 <exit_sem_queue>
8000e770:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:424
			sem_queue_destroy(sem_queue);
8000e774:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:427
		}
	}
}
8000e778:	8fbf0014 	lw	ra,20(sp)
8000e77c:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:424
{
	sem_queue_t *sem_queue = proc->sem_queue;
	if (sem_queue != NULL) {
		if (sem_queue_count_dec(sem_queue) == 0) {
			exit_sem_queue(sem_queue);
			sem_queue_destroy(sem_queue);
8000e780:	08006761 	j	80019d84 <sem_queue_destroy>
8000e784:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:427
		}
	}
}
8000e788:	8fbf0014 	lw	ra,20(sp)
8000e78c:	8fb00010 	lw	s0,16(sp)
8000e790:	03e00008 	jr	ra
8000e794:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e798:	0c006d0c 	jal	8001b430 <intr_disable>
8000e79c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e7a0:	8e020014 	lw	v0,20(s0)
8000e7a4:	2442ffff 	addiu	v0,v0,-1
8000e7a8:	ae020014 	sw	v0,20(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e7ac:	0c006d08 	jal	8001b420 <intr_enable>
8000e7b0:	00000000 	nop
8000e7b4:	080039d8 	j	8000e760 <put_sem_queue+0x30>
8000e7b8:	00000000 	nop

8000e7bc <put_signal>:
put_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:460
}

// copy_thread - setup the trapframe on the  process's kernel stack top and
//             - setup the kernel entry point and stack of process
static void put_signal(struct proc_struct *proc)
{
8000e7bc:	27bdffe0 	addiu	sp,sp,-32
8000e7c0:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:461
	struct signal_struct *sig = proc->signal_info.signal;
8000e7c4:	8c9100c0 	lw	s1,192(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:460
}

// copy_thread - setup the trapframe on the  process's kernel stack top and
//             - setup the kernel entry point and stack of process
static void put_signal(struct proc_struct *proc)
{
8000e7c8:	afb00014 	sw	s0,20(sp)
8000e7cc:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:462
	struct signal_struct *sig = proc->signal_info.signal;
	if (sig != NULL) {
8000e7d0:	1220000d 	beqz	s1,8000e808 <put_signal+0x4c>
8000e7d4:	00808021 	move	s0,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e7d8:	40026000 	mfc0	v0,c0_status
8000e7dc:	30420001 	andi	v0,v0,0x1
8000e7e0:	1440000f 	bnez	v0,8000e820 <put_signal+0x64>
8000e7e4:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000e7e8:	8e220000 	lw	v0,0(s1)
8000e7ec:	2442ffff 	addiu	v0,v0,-1
8000e7f0:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e7f4:	8e220000 	lw	v0,0(s1)
put_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:463
		if (signal_count_dec(sig) == 0) {
8000e7f8:	14400004 	bnez	v0,8000e80c <put_signal+0x50>
8000e7fc:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:464
			signal_destroy(sig);
8000e800:	0c004566 	jal	80011598 <signal_destroy>
8000e804:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:468
		}
	}
	proc->signal_info.signal = NULL;
}
8000e808:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:467
	if (sig != NULL) {
		if (signal_count_dec(sig) == 0) {
			signal_destroy(sig);
		}
	}
	proc->signal_info.signal = NULL;
8000e80c:	ae0000c0 	sw	zero,192(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:468
}
8000e810:	8fb10018 	lw	s1,24(sp)
8000e814:	8fb00014 	lw	s0,20(sp)
8000e818:	03e00008 	jr	ra
8000e81c:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e820:	0c006d0c 	jal	8001b430 <intr_disable>
8000e824:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e828:	8e220000 	lw	v0,0(s1)
8000e82c:	2442ffff 	addiu	v0,v0,-1
8000e830:	ae220000 	sw	v0,0(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e834:	0c006d08 	jal	8001b420 <intr_enable>
8000e838:	00000000 	nop
8000e83c:	080039fd 	j	8000e7f4 <put_signal+0x38>
8000e840:	00000000 	nop

8000e844 <put_fs>:
put_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:539
bad_fs_struct:
	return ret;
}

static void put_fs(struct proc_struct *proc)
{
8000e844:	27bdffe8 	addiu	sp,sp,-24
8000e848:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:540
	struct fs_struct *fs_struct = proc->fs_struct;
8000e84c:	8c9000bc 	lw	s0,188(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:541
	if (fs_struct != NULL) {
8000e850:	1200000f 	beqz	s0,8000e890 <put_fs+0x4c>
8000e854:	afbf0014 	sw	ra,20(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000e858:	40026000 	mfc0	v0,c0_status
8000e85c:	30420001 	andi	v0,v0,0x1
8000e860:	1440000f 	bnez	v0,8000e8a0 <put_fs+0x5c>
8000e864:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000e868:	8e020008 	lw	v0,8(s0)
8000e86c:	2442ffff 	addiu	v0,v0,-1
8000e870:	ae020008 	sw	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e874:	8e020008 	lw	v0,8(s0)
put_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:542
		if (fs_count_dec(fs_struct) == 0) {
8000e878:	14400006 	bnez	v0,8000e894 <put_fs+0x50>
8000e87c:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:543
			fs_destroy(fs_struct);
8000e880:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:546
		}
	}
}
8000e884:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:543
static void put_fs(struct proc_struct *proc)
{
	struct fs_struct *fs_struct = proc->fs_struct;
	if (fs_struct != NULL) {
		if (fs_count_dec(fs_struct) == 0) {
			fs_destroy(fs_struct);
8000e888:	08003297 	j	8000ca5c <fs_destroy>
8000e88c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:546
		}
	}
}
8000e890:	8fbf0014 	lw	ra,20(sp)
8000e894:	8fb00010 	lw	s0,16(sp)
8000e898:	03e00008 	jr	ra
8000e89c:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000e8a0:	0c006d0c 	jal	8001b430 <intr_disable>
8000e8a4:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000e8a8:	8e020008 	lw	v0,8(s0)
8000e8ac:	2442ffff 	addiu	v0,v0,-1
8000e8b0:	ae020008 	sw	v0,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000e8b4:	0c006d08 	jal	8001b420 <intr_enable>
8000e8b8:	00000000 	nop
8000e8bc:	08003a1d 	j	8000e874 <put_fs+0x30>
8000e8c0:	00000000 	nop

8000e8c4 <__do_exit>:
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:650
// __do_exit - cause a thread exit (use do_exit, do_exit_thread instead)
//   1. call exit_mmap & put_pgdir & mm_destroy to free the almost all memory space of process
//   2. set process' state as PROC_ZOMBIE, then call wakeup_proc(parent) to ask parent reclaim itself.
//   3. call scheduler to switch to other process
static int __do_exit(void)
{
8000e8c4:	27bdffc0 	addiu	sp,sp,-64
8000e8c8:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:651
	if (current == idleproc) {
8000e8cc:	3c038015 	lui	v1,0x8015
8000e8d0:	3c108015 	lui	s0,0x8015
8000e8d4:	8e0277a4 	lw	v0,30628(s0)
8000e8d8:	8c6377a8 	lw	v1,30632(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:650
// __do_exit - cause a thread exit (use do_exit, do_exit_thread instead)
//   1. call exit_mmap & put_pgdir & mm_destroy to free the almost all memory space of process
//   2. set process' state as PROC_ZOMBIE, then call wakeup_proc(parent) to ask parent reclaim itself.
//   3. call scheduler to switch to other process
static int __do_exit(void)
{
8000e8dc:	afbf003c 	sw	ra,60(sp)
8000e8e0:	afb50038 	sw	s5,56(sp)
8000e8e4:	afb40034 	sw	s4,52(sp)
8000e8e8:	afb30030 	sw	s3,48(sp)
8000e8ec:	afb2002c 	sw	s2,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:651
	if (current == idleproc) {
8000e8f0:	1043008b 	beq	v0,v1,8000eb20 <__do_exit+0x25c>
8000e8f4:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:654
		panic("idleproc exit.\n");
	}
	if (current == initproc) {
8000e8f8:	3c128015 	lui	s2,0x8015
8000e8fc:	8e437798 	lw	v1,30616(s2)
8000e900:	1043008d 	beq	v0,v1,8000eb38 <__do_exit+0x274>
8000e904:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:658
		panic("initproc exit.\n");
	}

	struct mm_struct *mm = current->mm;
8000e908:	8c510020 	lw	s1,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:659
	if (mm != NULL) {
8000e90c:	1220000f 	beqz	s1,8000e94c <__do_exit+0x88>
8000e910:	2402ffff 	li	v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:661
		mm->lapic = -1;
		mp_set_mm_pagetable(NULL);
8000e914:	00002021 	move	a0,zero
8000e918:	0c007c69 	jal	8001f1a4 <mp_set_mm_pagetable>
8000e91c:	ae220048 	sw	v0,72(s1)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:154
 * Requires Modern 486+ processor
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
8000e920:	0c003797 	jal	8000de5c <__intr_save>
8000e924:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
	v->counter += i;
8000e928:	8e23001c 	lw	v1,28(s1)
8000e92c:	2463ffff 	addiu	v1,v1,-1
8000e930:	ae23001c 	sw	v1,28(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000e934:	14400065 	bnez	v0,8000eacc <__do_exit+0x208>
8000e938:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000e93c:	8e22001c 	lw	v0,28(s1)
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:662
		if (mm_count_dec(mm) == 0) {
8000e940:	10400066 	beqz	v0,8000eadc <__do_exit+0x218>
8000e944:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:673
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
		}
		current->mm = NULL;
8000e948:	ac400020 	sw	zero,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:675
	}
	put_sighand(current);
8000e94c:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:687
	struct proc_struct *proc, *parent;
	local_intr_save(intr_flag);
	{
		proc = parent = current->parent;
		do {
			if (proc->wait_state == WT_CHILD) {
8000e950:	3c158000 	lui	s5,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:675
			local_intr_restore(intr_flag);
			mm_destroy(mm);
		}
		current->mm = NULL;
	}
	put_sighand(current);
8000e954:	0c0039aa 	jal	8000e6a8 <put_sighand>
8000e958:	26b50001 	addiu	s5,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:676
	put_signal(current);
8000e95c:	0c0039ef 	jal	8000e7bc <put_signal>
8000e960:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:677
	put_fs(current);
8000e964:	0c003a11 	jal	8000e844 <put_fs>
8000e968:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:678
	put_sem_queue(current);
8000e96c:	0c0039cc 	jal	8000e730 <put_sem_queue>
8000e970:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:679
	current->state = PROC_ZOMBIE;
8000e974:	8e0277a4 	lw	v0,30628(s0)
8000e978:	24030003 	li	v1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:683

	bool intr_flag;
	struct proc_struct *proc, *parent;
	local_intr_save(intr_flag);
8000e97c:	0c003797 	jal	8000de5c <__intr_save>
8000e980:	ac430000 	sw	v1,0(v0)
8000e984:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:685
	{
		proc = parent = current->parent;
8000e988:	8e0277a4 	lw	v0,30628(s0)
8000e98c:	8c54001c 	lw	s4,28(v0)
8000e990:	02809821 	move	s3,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:687
		do {
			if (proc->wait_state == WT_CHILD) {
8000e994:	8e620084 	lw	v0,132(s3)
8000e998:	10550044 	beq	v0,s5,8000eaac <__do_exit+0x1e8>
8000e99c:	00000000 	nop
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8000e9a0:	8e730098 	lw	s3,152(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:690
				wakeup_proc(proc);
			}
			proc = next_thread(proc);
8000e9a4:	2673ff6c 	addiu	s3,s3,-148
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:691
		} while (proc != parent);
8000e9a8:	5674fffb 	bnel	s3,s4,8000e998 <__do_exit+0xd4>
8000e9ac:	8e620084 	lw	v0,132(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:693

		if ((parent = next_thread(current)) == current) {
8000e9b0:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:694
			parent = initproc;
8000e9b4:	8e437798 	lw	v1,30616(s2)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8000e9b8:	8c820098 	lw	v0,152(a0)
de_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:296
#endif

// de_thread - delete this thread "proc" from thread_group list
static void de_thread(struct proc_struct *proc)
{
	if (!list_empty(&(proc->thread_group))) {
8000e9bc:	24930094 	addiu	s3,a0,148
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:693
				wakeup_proc(proc);
			}
			proc = next_thread(proc);
		} while (proc != parent);

		if ((parent = next_thread(current)) == current) {
8000e9c0:	2452ff6c 	addiu	s2,v0,-148
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:694
			parent = initproc;
8000e9c4:	00922826 	xor	a1,a0,s2
de_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:296
#endif

// de_thread - delete this thread "proc" from thread_group list
static void de_thread(struct proc_struct *proc)
{
	if (!list_empty(&(proc->thread_group))) {
8000e9c8:	1053000b 	beq	v0,s3,8000e9f8 <__do_exit+0x134>
8000e9cc:	0065900a 	movz	s2,v1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:298
		bool intr_flag;
		local_intr_save(intr_flag);
8000e9d0:	0c003797 	jal	8000de5c <__intr_save>
8000e9d4:	afa40018 	sw	a0,24(sp)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000e9d8:	8fa40018 	lw	a0,24(sp)
8000e9dc:	8c850094 	lw	a1,148(a0)
8000e9e0:	8c830098 	lw	v1,152(a0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000e9e4:	aca30004 	sw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8000e9e8:	ac650000 	sw	a1,0(v1)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8000e9ec:	ac930098 	sw	s3,152(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
8000e9f0:	14400032 	bnez	v0,8000eabc <__do_exit+0x1f8>
8000e9f4:	ac930094 	sw	s3,148(a0)
de_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:305
			list_del_init(&(proc->thread_group));
		}
		local_intr_restore(intr_flag);
	}

	de_thread_arch_hook(proc);
8000e9f8:	0c007a3f 	jal	8001e8fc <de_thread_arch_hook>
8000e9fc:	3c148000 	lui	s4,0x8000
8000ea00:	8e0477a4 	lw	a0,30628(s0)
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:707
			if ((proc->optr = parent->cptr) != NULL) {
				parent->cptr->yptr = proc;
			}
			proc->parent = parent;
			parent->cptr = proc;
			if (proc->state == PROC_ZOMBIE) {
8000ea04:	24130003 	li	s3,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:708
				if (parent->wait_state == WT_CHILD) {
8000ea08:	26940001 	addiu	s4,s4,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:697

		if ((parent = next_thread(current)) == current) {
			parent = initproc;
		}
		de_thread(current);
		while (current->cptr != NULL) {
8000ea0c:	8c820088 	lw	v0,136(a0)
8000ea10:	50400013 	beqzl	v0,8000ea60 <__do_exit+0x19c>
8000ea14:	248400b4 	addiu	a0,a0,180
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:699
			proc = current->cptr;
			current->cptr = proc->optr;
8000ea18:	8c430090 	lw	v1,144(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:701

			proc->yptr = NULL;
8000ea1c:	ac40008c 	sw	zero,140(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:699
			parent = initproc;
		}
		de_thread(current);
		while (current->cptr != NULL) {
			proc = current->cptr;
			current->cptr = proc->optr;
8000ea20:	ac830088 	sw	v1,136(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:702

			proc->yptr = NULL;
			if ((proc->optr = parent->cptr) != NULL) {
8000ea24:	8e430088 	lw	v1,136(s2)
8000ea28:	10600002 	beqz	v1,8000ea34 <__do_exit+0x170>
8000ea2c:	ac430090 	sw	v1,144(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:703
				parent->cptr->yptr = proc;
8000ea30:	ac62008c 	sw	v0,140(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:707
			}
			proc->parent = parent;
			parent->cptr = proc;
			if (proc->state == PROC_ZOMBIE) {
8000ea34:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:705

			proc->yptr = NULL;
			if ((proc->optr = parent->cptr) != NULL) {
				parent->cptr->yptr = proc;
			}
			proc->parent = parent;
8000ea38:	ac52001c 	sw	s2,28(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:707
			parent->cptr = proc;
			if (proc->state == PROC_ZOMBIE) {
8000ea3c:	1473fff3 	bne	v1,s3,8000ea0c <__do_exit+0x148>
8000ea40:	ae420088 	sw	v0,136(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:708
				if (parent->wait_state == WT_CHILD) {
8000ea44:	8e420084 	lw	v0,132(s2)
8000ea48:	5454fff1 	bnel	v0,s4,8000ea10 <__do_exit+0x14c>
8000ea4c:	8c820088 	lw	v0,136(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:709
					wakeup_proc(parent);
8000ea50:	0c0004f8 	jal	800013e0 <wakeup_proc>
8000ea54:	02402021 	move	a0,s2
8000ea58:	08003a83 	j	8000ea0c <__do_exit+0x148>
8000ea5c:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:715
				}
			}
		}
	}

	wakeup_queue(&(current->event_box.wait_queue), WT_INTERRUPTED, 1);
8000ea60:	3c058000 	lui	a1,0x8000
8000ea64:	0c0069dc 	jal	8001a770 <wakeup_queue>
8000ea68:	24060001 	li	a2,1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
8000ea6c:	12200003 	beqz	s1,8000ea7c <__do_exit+0x1b8>
8000ea70:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000ea74:	0c006d08 	jal	8001b420 <intr_enable>
8000ea78:	00000000 	nop
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:719

	local_intr_restore(intr_flag);

	schedule();
8000ea7c:	0c00059f 	jal	8000167c <schedule>
8000ea80:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:720
	panic("__do_exit will not return!! %d %d.\n", current->pid,
8000ea84:	8e0277a4 	lw	v0,30628(s0)
8000ea88:	3c048002 	lui	a0,0x8002
8000ea8c:	3c068002 	lui	a2,0x8002
8000ea90:	8c470004 	lw	a3,4(v0)
8000ea94:	8c420080 	lw	v0,128(v0)
8000ea98:	24842ab8 	addiu	a0,a0,10936
8000ea9c:	240502d1 	li	a1,721
8000eaa0:	24c62b1c 	addiu	a2,a2,11036
8000eaa4:	0c006b13 	jal	8001ac4c <__panic>
8000eaa8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:688
	local_intr_save(intr_flag);
	{
		proc = parent = current->parent;
		do {
			if (proc->wait_state == WT_CHILD) {
				wakeup_proc(proc);
8000eaac:	0c0004f8 	jal	800013e0 <wakeup_proc>
8000eab0:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000eab4:	08003a69 	j	8000e9a4 <__do_exit+0xe0>
8000eab8:	8e730098 	lw	s3,152(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
8000eabc:	0c006d08 	jal	8001b420 <intr_enable>
8000eac0:	00000000 	nop
8000eac4:	08003a7e 	j	8000e9f8 <__do_exit+0x134>
8000eac8:	8fa40018 	lw	a0,24(sp)
8000eacc:	0c006d08 	jal	8001b420 <intr_enable>
8000ead0:	00000000 	nop
8000ead4:	08003a4f 	j	8000e93c <__do_exit+0x78>
8000ead8:	00000000 	nop
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:663
	struct mm_struct *mm = current->mm;
	if (mm != NULL) {
		mm->lapic = -1;
		mp_set_mm_pagetable(NULL);
		if (mm_count_dec(mm) == 0) {
			exit_mmap(mm);
8000eadc:	0c004ff8 	jal	80013fe0 <exit_mmap>
8000eae0:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:664
			put_pgdir(mm);
8000eae4:	0c0037de 	jal	8000df78 <put_pgdir>
8000eae8:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:666
			bool intr_flag;
			local_intr_save(intr_flag);
8000eaec:	0c003797 	jal	8000de5c <__intr_save>
8000eaf0:	00000000 	nop
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000eaf4:	8e24002c 	lw	a0,44(s1)
8000eaf8:	8e230030 	lw	v1,48(s1)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000eafc:	ac830004 	sw	v1,4(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000eb00:	10400003 	beqz	v0,8000eb10 <__do_exit+0x24c>
8000eb04:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000eb08:	0c006d08 	jal	8001b420 <intr_enable>
8000eb0c:	00000000 	nop
__do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:671
			{
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
8000eb10:	0c004d69 	jal	800135a4 <mm_destroy>
8000eb14:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:673
		}
		current->mm = NULL;
8000eb18:	08003a52 	j	8000e948 <__do_exit+0x84>
8000eb1c:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:652
//   2. set process' state as PROC_ZOMBIE, then call wakeup_proc(parent) to ask parent reclaim itself.
//   3. call scheduler to switch to other process
static int __do_exit(void)
{
	if (current == idleproc) {
		panic("idleproc exit.\n");
8000eb20:	3c048002 	lui	a0,0x8002
8000eb24:	3c068002 	lui	a2,0x8002
8000eb28:	24842ab8 	addiu	a0,a0,10936
8000eb2c:	2405028c 	li	a1,652
8000eb30:	0c006b13 	jal	8001ac4c <__panic>
8000eb34:	24c62afc 	addiu	a2,a2,11004
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:655
	}
	if (current == initproc) {
		panic("initproc exit.\n");
8000eb38:	3c068002 	lui	a2,0x8002
8000eb3c:	24842ab8 	addiu	a0,a0,10936
8000eb40:	2405028f 	li	a1,655
8000eb44:	0c006b13 	jal	8001ac4c <__panic>
8000eb48:	24c62b0c 	addiu	a2,a2,11020

8000eb4c <put_kstack>:
put_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:241
}

// put_kstack - free the memory space of process kernel stack
static void put_kstack(struct proc_struct *proc)
{
	free_pages(kva2page((void *)(proc->kstack)), KSTACKPAGE);
8000eb4c:	8c870014 	lw	a3,20(a0)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000eb50:	3c028000 	lui	v0,0x8000
8000eb54:	24421000 	addiu	v0,v0,4096
put_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:240
	return -E_NO_MEM;
}

// put_kstack - free the memory space of process kernel stack
static void put_kstack(struct proc_struct *proc)
{
8000eb58:	27bdffe8 	addiu	sp,sp,-24
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
8000eb5c:	00e2102b 	sltu	v0,a3,v0
8000eb60:	14400011 	bnez	v0,8000eba8 <put_kstack+0x5c>
8000eb64:	afbf0014 	sw	ra,20(sp)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8000eb68:	3c028015 	lui	v0,0x8015
8000eb6c:	3c037fff 	lui	v1,0x7fff
8000eb70:	8c427770 	lw	v0,30576(v0)
8000eb74:	3463f000 	ori	v1,v1,0xf000
8000eb78:	00e33821 	addu	a3,a3,v1
8000eb7c:	00073b02 	srl	a3,a3,0xc
8000eb80:	00e2102b 	sltu	v0,a3,v0
8000eb84:	1040000e 	beqz	v0,8000ebc0 <put_kstack+0x74>
8000eb88:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8000eb8c:	8c4477bc 	lw	a0,30652(v0)
put_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:242
	free_pages(kva2page((void *)(proc->kstack)), KSTACKPAGE);
}
8000eb90:	8fbf0014 	lw	ra,20(sp)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
8000eb94:	00073940 	sll	a3,a3,0x5
put_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:241
}

// put_kstack - free the memory space of process kernel stack
static void put_kstack(struct proc_struct *proc)
{
	free_pages(kva2page((void *)(proc->kstack)), KSTACKPAGE);
8000eb98:	24050002 	li	a1,2
8000eb9c:	00872021 	addu	a0,a0,a3
8000eba0:	08007449 	j	8001d124 <free_pages>
8000eba4:	27bd0018 	addiu	sp,sp,24
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8000eba8:	3c048002 	lui	a0,0x8002
8000ebac:	3c068002 	lui	a2,0x8002
8000ebb0:	24842a0c 	addiu	a0,a0,10764
8000ebb4:	2405006f 	li	a1,111
8000ebb8:	0c006b13 	jal	8001ac4c <__panic>
8000ebbc:	24c62a50 	addiu	a2,a2,10832
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8000ebc0:	3c048002 	lui	a0,0x8002
8000ebc4:	3c068002 	lui	a2,0x8002
8000ebc8:	24842a0c 	addiu	a0,a0,10764
8000ebcc:	24050063 	li	a1,99
8000ebd0:	0c006b13 	jal	8001ac4c <__panic>
8000ebd4:	24c62a74 	addiu	a2,a2,10868

8000ebd8 <set_proc_name>:
set_proc_name():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000ebd8:	27bdffe0 	addiu	sp,sp,-32
8000ebdc:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000ebe0:	24900060 	addiu	s0,a0,96
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000ebe4:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000ebe8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000ebec:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000ebf0:	24060010 	li	a2,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:101
static int __do_exit(void);
static int __do_kill(struct proc_struct *proc, int error_code);

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
8000ebf4:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:102
	memset(proc->name, 0, sizeof(proc->name));
8000ebf8:	0c005c5a 	jal	80017168 <memset>
8000ebfc:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:103
	return memcpy(proc->name, name, PROC_NAME_LEN);
8000ec00:	02002021 	move	a0,s0
8000ec04:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:104
}
8000ec08:	8fbf001c 	lw	ra,28(sp)
8000ec0c:	8fb10018 	lw	s1,24(sp)
8000ec10:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:103

// set_proc_name - set the name of proc
char *set_proc_name(struct proc_struct *proc, const char *name)
{
	memset(proc->name, 0, sizeof(proc->name));
	return memcpy(proc->name, name, PROC_NAME_LEN);
8000ec14:	2406000f 	li	a2,15
8000ec18:	08005c84 	j	80017210 <memcpy>
8000ec1c:	27bd0020 	addiu	sp,sp,32

8000ec20 <get_proc_name>:
get_proc_name():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:108
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ec20:	27bdffe0 	addiu	sp,sp,-32
8000ec24:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ec28:	3c108015 	lui	s0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:108
	return memcpy(proc->name, name, PROC_NAME_LEN);
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ec2c:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ec30:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:108
	return memcpy(proc->name, name, PROC_NAME_LEN);
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ec34:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ec38:	24060010 	li	a2,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:108
	return memcpy(proc->name, name, PROC_NAME_LEN);
}

// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
8000ec3c:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:110
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
8000ec40:	0c005c5a 	jal	80017168 <memset>
8000ec44:	26044538 	addiu	a0,s0,17720
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:111
	return memcpy(name, proc->name, PROC_NAME_LEN);
8000ec48:	26044538 	addiu	a0,s0,17720
8000ec4c:	26250060 	addiu	a1,s1,96
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:112
}
8000ec50:	8fbf001c 	lw	ra,28(sp)
8000ec54:	8fb10018 	lw	s1,24(sp)
8000ec58:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:111
// get_proc_name - get the name of proc
char *get_proc_name(struct proc_struct *proc)
{
	static char name[PROC_NAME_LEN + 1];
	memset(name, 0, sizeof(name));
	return memcpy(name, proc->name, PROC_NAME_LEN);
8000ec5c:	2406000f 	li	a2,15
8000ec60:	08005c84 	j	80017210 <memcpy>
8000ec64:	27bd0020 	addiu	sp,sp,32

8000ec68 <proc_run>:
proc_run():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:179
}

// proc_run - make process "proc" running on cpu
// NOTE: before call switch_to, should load  base addr of "proc"'s new PDT
void proc_run(struct proc_struct *proc)
{
8000ec68:	27bdffe0 	addiu	sp,sp,-32
8000ec6c:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:180
	if (proc != current) {
8000ec70:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:179
}

// proc_run - make process "proc" running on cpu
// NOTE: before call switch_to, should load  base addr of "proc"'s new PDT
void proc_run(struct proc_struct *proc)
{
8000ec74:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:180
	if (proc != current) {
8000ec78:	8e5177a4 	lw	s1,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:179
}

// proc_run - make process "proc" running on cpu
// NOTE: before call switch_to, should load  base addr of "proc"'s new PDT
void proc_run(struct proc_struct *proc)
{
8000ec7c:	afb00010 	sw	s0,16(sp)
8000ec80:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:180
	if (proc != current) {
8000ec84:	10910013 	beq	a0,s1,8000ecd4 <proc_run+0x6c>
8000ec88:	00808021 	move	s0,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000ec8c:	40026000 	mfc0	v0,c0_status
8000ec90:	30420001 	andi	v0,v0,0x1
8000ec94:	14400015 	bnez	v0,8000ecec <proc_run+0x84>
8000ec98:	00000000 	nop
proc_run():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:187
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
			load_rsp0(next->kstack + KSTACKSIZE);
8000ec9c:	8c840014 	lw	a0,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:186
		bool intr_flag;
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
8000eca0:	ae5077a4 	sw	s0,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:187
			load_rsp0(next->kstack + KSTACKSIZE);
8000eca4:	0c0078f4 	jal	8001e3d0 <load_rsp0>
8000eca8:	24842000 	addiu	a0,a0,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:188
			mp_set_mm_pagetable(next->mm);
8000ecac:	0c007c69 	jal	8001f1a4 <mp_set_mm_pagetable>
8000ecb0:	8e040020 	lw	a0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:194

#ifdef UCONFIG_BIONIC_LIBC
			// for tls switch
			tls_switch(next);
#endif //UCONFIG_BIONIC_LIBC
			switch_to(&(prev->context), &(next->context));
8000ecb4:	26240024 	addiu	a0,s1,36
8000ecb8:	26050024 	addiu	a1,s0,36
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:198
		}
		local_intr_restore(intr_flag);
	}
}
8000ecbc:	8fbf001c 	lw	ra,28(sp)
8000ecc0:	8fb20018 	lw	s2,24(sp)
8000ecc4:	8fb10014 	lw	s1,20(sp)
8000ecc8:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:194

#ifdef UCONFIG_BIONIC_LIBC
			// for tls switch
			tls_switch(next);
#endif //UCONFIG_BIONIC_LIBC
			switch_to(&(prev->context), &(next->context));
8000eccc:	08007f34 	j	8001fcd0 <switch_to>
8000ecd0:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:198
		}
		local_intr_restore(intr_flag);
	}
}
8000ecd4:	8fbf001c 	lw	ra,28(sp)
8000ecd8:	8fb20018 	lw	s2,24(sp)
8000ecdc:	8fb10014 	lw	s1,20(sp)
8000ece0:	8fb00010 	lw	s0,16(sp)
8000ece4:	03e00008 	jr	ra
8000ece8:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000ecec:	0c006d0c 	jal	8001b430 <intr_disable>
8000ecf0:	00000000 	nop
proc_run():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:187
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
			load_rsp0(next->kstack + KSTACKSIZE);
8000ecf4:	8e040014 	lw	a0,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:186
		bool intr_flag;
		struct proc_struct *prev = current, *next = proc;
		// kprintf("(%d) => %d\n", lapic_id, next->pid);
		local_intr_save(intr_flag);
		{
			pls_write(current, proc);
8000ecf8:	ae5077a4 	sw	s0,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:187
			load_rsp0(next->kstack + KSTACKSIZE);
8000ecfc:	0c0078f4 	jal	8001e3d0 <load_rsp0>
8000ed00:	24842000 	addiu	a0,a0,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:188
			mp_set_mm_pagetable(next->mm);
8000ed04:	0c007c69 	jal	8001f1a4 <mp_set_mm_pagetable>
8000ed08:	8e040020 	lw	a0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:194

#ifdef UCONFIG_BIONIC_LIBC
			// for tls switch
			tls_switch(next);
#endif //UCONFIG_BIONIC_LIBC
			switch_to(&(prev->context), &(next->context));
8000ed0c:	26240024 	addiu	a0,s1,36
8000ed10:	0c007f34 	jal	8001fcd0 <switch_to>
8000ed14:	26050024 	addiu	a1,s0,36
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:198
		}
		local_intr_restore(intr_flag);
	}
}
8000ed18:	8fbf001c 	lw	ra,28(sp)
8000ed1c:	8fb20018 	lw	s2,24(sp)
8000ed20:	8fb10014 	lw	s1,20(sp)
8000ed24:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000ed28:	08006d08 	j	8001b420 <intr_enable>
8000ed2c:	27bd0020 	addiu	sp,sp,32

8000ed30 <find_proc>:
find_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:215
}

// find_proc - find proc frome proc hash_list according to pid
struct proc_struct *find_proc(int pid)
{
	if (0 < pid && pid < MAX_PID) {
8000ed30:	2483ffff 	addiu	v1,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:214
	list_del(&(proc->hash_link));
}

// find_proc - find proc frome proc hash_list according to pid
struct proc_struct *find_proc(int pid)
{
8000ed34:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:215
	if (0 < pid && pid < MAX_PID) {
8000ed38:	2c631fff 	sltiu	v1,v1,8191
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:214
	list_del(&(proc->hash_link));
}

// find_proc - find proc frome proc hash_list according to pid
struct proc_struct *find_proc(int pid)
{
8000ed3c:	afb00010 	sw	s0,16(sp)
8000ed40:	afbf0014 	sw	ra,20(sp)
8000ed44:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:215
	if (0 < pid && pid < MAX_PID) {
8000ed48:	1060000e 	beqz	v1,8000ed84 <find_proc+0x54>
8000ed4c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:216
		list_entry_t *list = hash_list + pid_hashfn(pid), *le = list;
8000ed50:	0c00595b 	jal	8001656c <hash32>
8000ed54:	2405000a 	li	a1,10
8000ed58:	3c058015 	lui	a1,0x8015
8000ed5c:	000210c0 	sll	v0,v0,0x3
8000ed60:	24a54548 	addiu	a1,a1,17736
8000ed64:	00a22821 	addu	a1,a1,v0
8000ed68:	00a01821 	move	v1,a1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000ed6c:	8c630004 	lw	v1,4(v1)
find_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:217
		while ((le = list_next(le)) != list) {
8000ed70:	10a30008 	beq	a1,v1,8000ed94 <find_proc+0x64>
8000ed74:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:219
			struct proc_struct *proc = le2proc(le, hash_link);
			if (proc->pid == pid) {
8000ed78:	8c64ff8c 	lw	a0,-116(v1)
8000ed7c:	1490fffb 	bne	a0,s0,8000ed6c <find_proc+0x3c>
8000ed80:	2462ff88 	addiu	v0,v1,-120
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:225
				return proc;
			}
		}
	}
	return NULL;
}
8000ed84:	8fbf0014 	lw	ra,20(sp)
8000ed88:	8fb00010 	lw	s0,16(sp)
8000ed8c:	03e00008 	jr	ra
8000ed90:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:224
			if (proc->pid == pid) {
				return proc;
			}
		}
	}
	return NULL;
8000ed94:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:225
}
8000ed98:	8fb00010 	lw	s0,16(sp)
8000ed9c:	03e00008 	jr	ra
8000eda0:	27bd0018 	addiu	sp,sp,24

8000eda4 <may_killed>:
may_killed():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:552

// may_killed - check if current thread should be killed, should be called before go back to user space
void may_killed(void)
{
	// killed by other process, already set exit_code and call __do_exit directly
	if (current->flags & PF_EXITING) {
8000eda4:	3c028015 	lui	v0,0x8015
8000eda8:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:550
	}
}

// may_killed - check if current thread should be killed, should be called before go back to user space
void may_killed(void)
{
8000edac:	27bdffe8 	addiu	sp,sp,-24
8000edb0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:552
	// killed by other process, already set exit_code and call __do_exit directly
	if (current->flags & PF_EXITING) {
8000edb4:	8c42005c 	lw	v0,92(v0)
8000edb8:	30420001 	andi	v0,v0,0x1
8000edbc:	14400003 	bnez	v0,8000edcc <may_killed+0x28>
8000edc0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:555
		__do_exit();
	}
}
8000edc4:	03e00008 	jr	ra
8000edc8:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:553
// may_killed - check if current thread should be killed, should be called before go back to user space
void may_killed(void)
{
	// killed by other process, already set exit_code and call __do_exit directly
	if (current->flags & PF_EXITING) {
		__do_exit();
8000edcc:	0c003a31 	jal	8000e8c4 <__do_exit>
8000edd0:	00000000 	nop

8000edd4 <do_fork>:
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:563
//    1. call alloc_proc to allocate a proc_struct
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
8000edd4:	27bdffc0 	addiu	sp,sp,-64
8000edd8:	afb30024 	sw	s3,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:566
	int ret = -E_NO_FREE_PROC;
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
8000eddc:	3c138015 	lui	s3,0x8015
8000ede0:	8e626548 	lw	v0,25928(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:563
//    1. call alloc_proc to allocate a proc_struct
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
8000ede4:	afb60030 	sw	s6,48(sp)
8000ede8:	afb5002c 	sw	s5,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:566
	int ret = -E_NO_FREE_PROC;
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
8000edec:	28421000 	slti	v0,v0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:563
//    1. call alloc_proc to allocate a proc_struct
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
8000edf0:	afb20020 	sw	s2,32(sp)
8000edf4:	afbf003c 	sw	ra,60(sp)
8000edf8:	afbe0038 	sw	s8,56(sp)
8000edfc:	afb70034 	sw	s7,52(sp)
8000ee00:	afb40028 	sw	s4,40(sp)
8000ee04:	afb1001c 	sw	s1,28(sp)
8000ee08:	afb00018 	sw	s0,24(sp)
8000ee0c:	00809021 	move	s2,a0
8000ee10:	00a0b021 	move	s6,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:566
	int ret = -E_NO_FREE_PROC;
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
8000ee14:	10400198 	beqz	v0,8000f478 <do_fork+0x6a4>
8000ee18:	00c0a821 	move	s5,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:572
		goto fork_out;
	}

	ret = -E_NO_MEM;

	if ((proc = alloc_proc()) == NULL) {
8000ee1c:	0c0079a8 	jal	8001e6a0 <alloc_proc>
8000ee20:	00000000 	nop
8000ee24:	1040019a 	beqz	v0,8000f490 <do_fork+0x6bc>
8000ee28:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:576
		goto fork_out;
	}

	proc->parent = current;
8000ee2c:	3c118015 	lui	s1,0x8015
8000ee30:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:577
	list_init(&(proc->thread_group));
8000ee34:	26140094 	addiu	s4,s0,148
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8000ee38:	ae140098 	sw	s4,152(s0)
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:578
	assert(current->wait_state == 0);
8000ee3c:	8c430084 	lw	v1,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:576

	if ((proc = alloc_proc()) == NULL) {
		goto fork_out;
	}

	proc->parent = current;
8000ee40:	ae02001c 	sw	v0,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:578
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);
8000ee44:	146001a4 	bnez	v1,8000f4d8 <do_fork+0x704>
8000ee48:	ae140094 	sw	s4,148(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:580

	assert(current->time_slice >= 0);
8000ee4c:	8c4300a8 	lw	v1,168(v0)
8000ee50:	04600199 	bltz	v1,8000f4b8 <do_fork+0x6e4>
8000ee54:	00031843 	sra	v1,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:581
	proc->time_slice = current->time_slice / 2;
8000ee58:	ae0300a8 	sw	v1,168(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:582
	current->time_slice -= proc->time_slice;
8000ee5c:	8c4500a8 	lw	a1,168(v0)
setup_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:230
}

// setup_kstack - alloc pages with size KSTACKPAGE as process kernel stack
static int setup_kstack(struct proc_struct *proc)
{
	struct Page *page = alloc_pages(KSTACKPAGE);
8000ee60:	24040002 	li	a0,2
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:582
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);

	assert(current->time_slice >= 0);
	proc->time_slice = current->time_slice / 2;
	current->time_slice -= proc->time_slice;
8000ee64:	00a31823 	subu	v1,a1,v1
setup_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:230
}

// setup_kstack - alloc pages with size KSTACKPAGE as process kernel stack
static int setup_kstack(struct proc_struct *proc)
{
	struct Page *page = alloc_pages(KSTACKPAGE);
8000ee68:	0c00742d 	jal	8001d0b4 <alloc_pages>
8000ee6c:	ac4300a8 	sw	v1,168(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:231
	if (page != NULL) {
8000ee70:	1040014b 	beqz	v0,8000f3a0 <do_fork+0x5cc>
8000ee74:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000ee78:	8c6777bc 	lw	a3,30652(v1)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000ee7c:	3c038015 	lui	v1,0x8015
8000ee80:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8000ee84:	00471023 	subu	v0,v0,a3
8000ee88:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000ee8c:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000ee90:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8000ee94:	3c078000 	lui	a3,0x8000
8000ee98:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8000ee9c:	0083182b 	sltu	v1,a0,v1
8000eea0:	10600195 	beqz	v1,8000f4f8 <do_fork+0x724>
8000eea4:	00473821 	addu	a3,v0,a3
copy_sem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:381
	return ret;
}

static int copy_sem(uint32_t clone_flags, struct proc_struct *proc)
{
	sem_queue_t *sem_queue, *old_sem_queue = current->sem_queue;
8000eea8:	8e2277a4 	lw	v0,30628(s1)
setup_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:232
// setup_kstack - alloc pages with size KSTACKPAGE as process kernel stack
static int setup_kstack(struct proc_struct *proc)
{
	struct Page *page = alloc_pages(KSTACKPAGE);
	if (page != NULL) {
		proc->kstack = (uintptr_t) page2kva(page);
8000eeac:	ae070014 	sw	a3,20(s0)
copy_sem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:381
	return ret;
}

static int copy_sem(uint32_t clone_flags, struct proc_struct *proc)
{
	sem_queue_t *sem_queue, *old_sem_queue = current->sem_queue;
8000eeb0:	8c5700ac 	lw	s7,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:384

	/* current is kernel thread */
	if (old_sem_queue == NULL) {
8000eeb4:	52e0001e 	beqzl	s7,8000ef30 <do_fork+0x15c>
8000eeb8:	8c5e00bc 	lw	s8,188(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:388
		return 0;
	}

	if (clone_flags & CLONE_SEM) {
8000eebc:	7e420400 	ext	v0,s2,0x10,0x1
8000eec0:	14400010 	bnez	v0,8000ef04 <do_fork+0x130>
8000eec4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:394
		sem_queue = old_sem_queue;
		goto good_sem_queue;
	}

	int ret = -E_NO_MEM;
	if ((sem_queue = sem_queue_create()) == NULL) {
8000eec8:	0c006750 	jal	80019d40 <sem_queue_create>
8000eecc:	00000000 	nop
8000eed0:	10400131 	beqz	v0,8000f398 <do_fork+0x5c4>
8000eed4:	0040f021 	move	s8,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:398
		goto bad_sem_queue;
	}

	down(&(old_sem_queue->sem));
8000eed8:	0c006727 	jal	80019c9c <down>
8000eedc:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:399
	ret = dup_sem_queue(sem_queue, old_sem_queue);
8000eee0:	03c02021 	move	a0,s8
8000eee4:	0c0067da 	jal	80019f68 <dup_sem_queue>
8000eee8:	02e02821 	move	a1,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:400
	up(&(old_sem_queue->sem));
8000eeec:	02e02021 	move	a0,s7
8000eef0:	0c006725 	jal	80019c94 <up>
8000eef4:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:402

	if (ret != 0) {
8000eef8:	8fa20010 	lw	v0,16(sp)
8000eefc:	14400122 	bnez	v0,8000f388 <do_fork+0x5b4>
8000ef00:	03c0b821 	move	s7,s8
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000ef04:	40026000 	mfc0	v0,c0_status
8000ef08:	30420001 	andi	v0,v0,0x1
8000ef0c:	144000bf 	bnez	v0,8000f20c <do_fork+0x438>
8000ef10:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000ef14:	8ee20014 	lw	v0,20(s7)
8000ef18:	24420001 	addiu	v0,v0,1
8000ef1c:	aee20014 	sw	v0,20(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000ef20:	8ee20014 	lw	v0,20(s7)
copy_sem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:408
		goto bad_dup_cleanup_sem;
	}

good_sem_queue:
	sem_queue_count_inc(sem_queue);
	proc->sem_queue = sem_queue;
8000ef24:	8e2277a4 	lw	v0,30628(s1)
8000ef28:	ae1700ac 	sw	s7,172(s0)
copy_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:510
	proc->signal_info.sighand = NULL;
}

static int copy_fs(uint32_t clone_flags, struct proc_struct *proc)
{
	struct fs_struct *fs_struct, *old_fs_struct = current->fs_struct;
8000ef2c:	8c5e00bc 	lw	s8,188(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:511
	assert(old_fs_struct != NULL);
8000ef30:	13c00159 	beqz	s8,8000f498 <do_fork+0x6c4>
8000ef34:	32420200 	andi	v0,s2,0x200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:513

	if (clone_flags & CLONE_FS) {
8000ef38:	1440000a 	bnez	v0,8000ef64 <do_fork+0x190>
8000ef3c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:519
		fs_struct = old_fs_struct;
		goto good_fs_struct;
	}

	int ret = -E_NO_MEM;
	if ((fs_struct = fs_create()) == NULL) {
8000ef40:	0c003283 	jal	8000ca0c <fs_create>
8000ef44:	00000000 	nop
8000ef48:	10400130 	beqz	v0,8000f40c <do_fork+0x638>
8000ef4c:	0040b821 	move	s7,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:523
		goto bad_fs_struct;
	}

	if ((ret = dup_fs(fs_struct, old_fs_struct)) != 0) {
8000ef50:	00402021 	move	a0,v0
8000ef54:	0c0032fe 	jal	8000cbf8 <dup_fs>
8000ef58:	03c02821 	move	a1,s8
8000ef5c:	14400148 	bnez	v0,8000f480 <do_fork+0x6ac>
8000ef60:	02e0f021 	move	s8,s7
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000ef64:	40026000 	mfc0	v0,c0_status
8000ef68:	30420001 	andi	v0,v0,0x1
8000ef6c:	144000ce 	bnez	v0,8000f2a8 <do_fork+0x4d4>
8000ef70:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000ef74:	8fc20008 	lw	v0,8(s8)
8000ef78:	24420001 	addiu	v0,v0,1
8000ef7c:	afc20008 	sw	v0,8(s8)
copy_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:431
	}
}

static int copy_signal(uint32_t clone_flags, struct proc_struct *proc)
{
	struct signal_struct *signal, *oldsig = current->signal_info.signal;
8000ef80:	8e2377a4 	lw	v1,30628(s1)
copy_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000ef84:	8fc20008 	lw	v0,8(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:529
		goto bad_dup_cleanup_fs;
	}

good_fs_struct:
	fs_count_inc(fs_struct);
	proc->fs_struct = fs_struct;
8000ef88:	ae1e00bc 	sw	s8,188(s0)
copy_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:433

static int copy_signal(uint32_t clone_flags, struct proc_struct *proc)
{
	struct signal_struct *signal, *oldsig = current->signal_info.signal;

	if (oldsig == NULL) {
8000ef8c:	8c6200c0 	lw	v0,192(v1)
8000ef90:	50400010 	beqzl	v0,8000efd4 <do_fork+0x200>
8000ef94:	8c6200c4 	lw	v0,196(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:444
		goto good_signal;
	}
#endif

	int ret = -E_NO_MEM;
	if ((signal = signal_create()) == NULL) {
8000ef98:	0c004555 	jal	80011554 <signal_create>
8000ef9c:	00000000 	nop
8000efa0:	10400118 	beqz	v0,8000f404 <do_fork+0x630>
8000efa4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000efa8:	40036000 	mfc0	v1,c0_status
8000efac:	30630001 	andi	v1,v1,0x1
8000efb0:	14600127 	bnez	v1,8000f450 <do_fork+0x67c>
8000efb4:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000efb8:	8c430000 	lw	v1,0(v0)
8000efbc:	24630001 	addiu	v1,v1,1
8000efc0:	ac430000 	sw	v1,0(v0)
copy_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:450
		goto bad_signal;
	}

good_signal:
	signal_count_inc(signal);
	proc->signal_info.signal = signal;
8000efc4:	8e2377a4 	lw	v1,30628(s1)
signal_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000efc8:	8c440000 	lw	a0,0(v0)
copy_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:450
8000efcc:	ae0200c0 	sw	v0,192(s0)
copy_sighand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:472
	proc->signal_info.signal = NULL;
}

static int copy_sighand(uint32_t clone_flags, struct proc_struct *proc)
{
	struct sighand_struct *sighand, *oldsh = current->signal_info.sighand;
8000efd0:	8c6200c4 	lw	v0,196(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:474

	if (oldsh == NULL) {
8000efd4:	50400015 	beqzl	v0,8000f02c <do_fork+0x258>
8000efd8:	8c770020 	lw	s7,32(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:478
		return 0;
	}

	if (clone_flags & (CLONE_SIGHAND | CLONE_THREAD)) {
8000efdc:	3c030001 	lui	v1,0x1
8000efe0:	24630800 	addiu	v1,v1,2048
8000efe4:	02431824 	and	v1,s2,v1
8000efe8:	14600005 	bnez	v1,8000f000 <do_fork+0x22c>
8000efec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:484
		sighand = oldsh;
		goto good_sighand;
	}

	int ret = -E_NO_MEM;
	if ((sighand = sighand_create()) == NULL) {
8000eff0:	0c00457a 	jal	800115e8 <sighand_create>
8000eff4:	00000000 	nop
8000eff8:	10400100 	beqz	v0,8000f3fc <do_fork+0x628>
8000effc:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000f000:	40036000 	mfc0	v1,c0_status
8000f004:	30630001 	andi	v1,v1,0x1
8000f008:	1460009d 	bnez	v1,8000f280 <do_fork+0x4ac>
8000f00c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f010:	8c430000 	lw	v1,0(v0)
8000f014:	24630001 	addiu	v1,v1,1
8000f018:	ac430000 	sw	v1,0(v0)
copy_sighand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:490
		goto bad_sighand;
	}

good_sighand:
	sighand_count_inc(sighand);
	proc->signal_info.sighand = sighand;
8000f01c:	8e2377a4 	lw	v1,30628(s1)
sighand_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f020:	8c440000 	lw	a0,0(v0)
copy_sighand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:490
8000f024:	ae0200c4 	sw	v0,196(s0)
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:318

// copy_mm - process "proc" duplicate OR share process "current"'s mm according clone_flags
//         - if clone_flags & CLONE_VM, then "share" ; else "duplicate"
static int copy_mm(uint32_t clone_flags, struct proc_struct *proc)
{
	struct mm_struct *mm, *oldmm = current->mm;
8000f028:	8c770020 	lw	s7,32(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:321

	/* current is a kernel thread */
	if (oldmm == NULL) {
8000f02c:	12e0000f 	beqz	s7,8000f06c <do_fork+0x298>
8000f030:	32420100 	andi	v0,s2,0x100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:324
		return 0;
	}
	if (clone_flags & CLONE_VM) {
8000f034:	104000ae 	beqz	v0,8000f2f0 <do_fork+0x51c>
8000f038:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000f03c:	40026000 	mfc0	v0,c0_status
8000f040:	30420001 	andi	v0,v0,0x1
8000f044:	144000a1 	bnez	v0,8000f2cc <do_fork+0x4f8>
8000f048:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f04c:	8ee2001c 	lw	v0,28(s7)
8000f050:	24420001 	addiu	v0,v0,1
8000f054:	aee2001c 	sw	v0,28(s7)
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:368
		}
		local_intr_restore(intr_flag);
	}
	mm_count_inc(mm);
	proc->mm = mm;
	set_pgdir(proc, mm->pgdir);
8000f058:	8ee50010 	lw	a1,16(s7)
mm_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f05c:	8ee2001c 	lw	v0,28(s7)
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:368
8000f060:	02002021 	move	a0,s0
8000f064:	0c007908 	jal	8001e420 <set_pgdir>
8000f068:	ae170020 	sw	s7,32(s0)
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:602
		goto bad_fork_cleanup_signal;
	}
	if (copy_mm(clone_flags, proc) != 0) {
		goto bad_fork_cleanup_sighand;
	}
	if (copy_thread(clone_flags, proc, stack, tf) != 0) {
8000f06c:	02402021 	move	a0,s2
8000f070:	02002821 	move	a1,s0
8000f074:	02c03021 	move	a2,s6
8000f078:	0c0079fe 	jal	8001e7f8 <copy_thread>
8000f07c:	02a03821 	move	a3,s5
8000f080:	144000dc 	bnez	v0,8000f3f4 <do_fork+0x620>
8000f084:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:606
		goto bad_fork_cleanup_sighand;
	}

	proc->tls_pointer = current->tls_pointer;
8000f088:	8c4200f0 	lw	v0,240(v0)
8000f08c:	ae0200f0 	sw	v0,240(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000f090:	40026000 	mfc0	v0,c0_status
8000f094:	30420001 	andi	v0,v0,0x1
8000f098:	10400003 	beqz	v0,8000f0a8 <do_fork+0x2d4>
8000f09c:	0000b021 	move	s6,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f0a0:	0c006d0c 	jal	8001b430 <intr_disable>
8000f0a4:	24160001 	li	s6,1
get_pid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:148
{
	static_assert(MAX_PID > MAX_PROCESS);
	struct proc_struct *proc;
	list_entry_t *list = &proc_list, *le;
	static int next_safe = MAX_PID, last_pid = MAX_PID;
	if (++last_pid >= MAX_PID) {
8000f0a8:	3c088002 	lui	t0,0x8002
8000f0ac:	8d04541c 	lw	a0,21532(t0)
8000f0b0:	24840001 	addiu	a0,a0,1
8000f0b4:	28822000 	slti	v0,a0,8192
8000f0b8:	1440006a 	bnez	v0,8000f264 <do_fork+0x490>
8000f0bc:	ad04541c 	sw	a0,21532(t0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:149
		last_pid = pls_read(lcpu_count);
8000f0c0:	3c028015 	lui	v0,0x8015
8000f0c4:	8c4477a0 	lw	a0,30624(v0)
8000f0c8:	3c098002 	lui	t1,0x8002
8000f0cc:	ad04541c 	sw	a0,21532(t0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:156
	}
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
8000f0d0:	3c158015 	lui	s5,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:152
	static int next_safe = MAX_PID, last_pid = MAX_PID;
	if (++last_pid >= MAX_PID) {
		last_pid = pls_read(lcpu_count);
		goto inside;
	}
	if (last_pid >= next_safe) {
8000f0d4:	8d07541c 	lw	a3,21532(t0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:156
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
8000f0d8:	26b57788 	addiu	s5,s5,30600
8000f0dc:	24052000 	li	a1,8192
8000f0e0:	02a01021 	move	v0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:162
		while ((le = list_next(le)) != list) {
			proc = le2proc(le, list_link);
			if (proc->pid == last_pid) {
				if (++last_pid >= next_safe) {
					if (last_pid >= MAX_PID) {
						last_pid = 1;
8000f0e4:	240a0001 	li	t2,1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000f0e8:	8c420004 	lw	v0,4(v0)
get_pid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:157
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
		while ((le = list_next(le)) != list) {
8000f0ec:	5055000a 	beql	v0,s5,8000f118 <do_fork+0x344>
8000f0f0:	ad07541c 	sw	a3,21532(t0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:159
			proc = le2proc(le, list_link);
			if (proc->pid == last_pid) {
8000f0f4:	8c43ff94 	lw	v1,-108(v0)
8000f0f8:	1064004d 	beq	v1,a0,8000f230 <do_fork+0x45c>
8000f0fc:	0083302a 	slt	a2,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:167
						last_pid = 1;
					}
					next_safe = MAX_PID;
					goto repeat;
				}
			} else if (proc->pid > last_pid
8000f100:	10c0fffa 	beqz	a2,8000f0ec <do_fork+0x318>
8000f104:	8c420004 	lw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:168
				   && next_safe > proc->pid) {
8000f108:	0065302a 	slt	a2,v1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:157
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
		while ((le = list_next(le)) != list) {
8000f10c:	1455fff9 	bne	v0,s5,8000f0f4 <do_fork+0x320>
8000f110:	0066280b 	movn	a1,v1,a2
8000f114:	ad07541c 	sw	a3,21532(t0)
8000f118:	ad255420 	sw	a1,21536(t1)
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:611
	proc->tls_pointer = current->tls_pointer;

	bool intr_flag;
	local_intr_save(intr_flag);
	{
		proc->pid = get_pid();
8000f11c:	ae040004 	sw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:612
		proc->tid = proc->pid;
8000f120:	ae040008 	sw	a0,8(s0)
hash_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:203
}

// hash_proc - add proc into proc hash_list
static void hash_proc(struct proc_struct *proc)
{
	list_add(hash_list + pid_hashfn(proc->pid), &(proc->hash_link));
8000f124:	0c00595b 	jal	8001656c <hash32>
8000f128:	2405000a 	li	a1,10
set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:119
// set_links - set the relation links of process
static void set_links(struct proc_struct *proc)
{
	list_add(&proc_list, &(proc->list_link));
	proc->yptr = NULL;
	if ((proc->optr = proc->parent->cptr) != NULL) {
8000f12c:	8e03001c 	lw	v1,28(s0)
hash_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:203
}

// hash_proc - add proc into proc hash_list
static void hash_proc(struct proc_struct *proc)
{
	list_add(hash_list + pid_hashfn(proc->pid), &(proc->hash_link));
8000f130:	3c048015 	lui	a0,0x8015
8000f134:	24844548 	addiu	a0,a0,17736
8000f138:	000210c0 	sll	v0,v0,0x3
8000f13c:	00821021 	addu	v0,a0,v0
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000f140:	8c470004 	lw	a3,4(v0)
set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:119
// set_links - set the relation links of process
static void set_links(struct proc_struct *proc)
{
	list_add(&proc_list, &(proc->list_link));
	proc->yptr = NULL;
	if ((proc->optr = proc->parent->cptr) != NULL) {
8000f144:	8c640088 	lw	a0,136(v1)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
8000f148:	8ea50004 	lw	a1,4(s5)
hash_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:203
}

// hash_proc - add proc into proc hash_list
static void hash_proc(struct proc_struct *proc)
{
	list_add(hash_list + pid_hashfn(proc->pid), &(proc->hash_link));
8000f14c:	26080078 	addiu	t0,s0,120
set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:117
}

// set_links - set the relation links of process
static void set_links(struct proc_struct *proc)
{
	list_add(&proc_list, &(proc->list_link));
8000f150:	26060070 	addiu	a2,s0,112
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f154:	ace80000 	sw	t0,0(a3)
8000f158:	ac480004 	sw	t0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8000f15c:	ae020078 	sw	v0,120(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8000f160:	ae07007c 	sw	a3,124(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f164:	aca60000 	sw	a2,0(a1)
8000f168:	aea60004 	sw	a2,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000f16c:	ae050074 	sw	a1,116(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8000f170:	ae150070 	sw	s5,112(s0)
set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:118
	proc->yptr = NULL;
8000f174:	ae00008c 	sw	zero,140(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:119
	if ((proc->optr = proc->parent->cptr) != NULL) {
8000f178:	10800002 	beqz	a0,8000f184 <do_fork+0x3b0>
8000f17c:	ae040090 	sw	a0,144(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:120
		proc->optr->yptr = proc;
8000f180:	ac90008c 	sw	s0,140(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:123
	}
	proc->parent->cptr = proc;
	nr_process++;
8000f184:	8e626548 	lw	v0,25928(s3)
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:615
	{
		proc->pid = get_pid();
		proc->tid = proc->pid;
		hash_proc(proc);
		set_links(proc);
		if (clone_flags & CLONE_THREAD) {
8000f188:	7e520400 	ext	s2,s2,0x10,0x1
set_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:122
	list_add(&proc_list, &(proc->list_link));
	proc->yptr = NULL;
	if ((proc->optr = proc->parent->cptr) != NULL) {
		proc->optr->yptr = proc;
	}
	proc->parent->cptr = proc;
8000f18c:	ac700088 	sw	s0,136(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:123
	nr_process++;
8000f190:	24420001 	addiu	v0,v0,1
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:615
	{
		proc->pid = get_pid();
		proc->tid = proc->pid;
		hash_proc(proc);
		set_links(proc);
		if (clone_flags & CLONE_THREAD) {
8000f194:	12400030 	beqz	s2,8000f258 <do_fork+0x484>
8000f198:	ae626548 	sw	v0,25928(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:616
			list_add_before(&(current->thread_group),
8000f19c:	8e2277a4 	lw	v0,30628(s1)
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
8000f1a0:	8c430094 	lw	v1,148(v0)
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:618
					&(proc->thread_group));
			proc->gid = current->gid;
8000f1a4:	8c44000c 	lw	a0,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:616
		proc->pid = get_pid();
		proc->tid = proc->pid;
		hash_proc(proc);
		set_links(proc);
		if (clone_flags & CLONE_THREAD) {
			list_add_before(&(current->thread_group),
8000f1a8:	24450094 	addiu	a1,v0,148
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f1ac:	ac540094 	sw	s4,148(v0)
8000f1b0:	ac740004 	sw	s4,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8000f1b4:	ae030094 	sw	v1,148(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8000f1b8:	ae050098 	sw	a1,152(s0)
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:618
					&(proc->thread_group));
			proc->gid = current->gid;
8000f1bc:	ae04000c 	sw	a0,12(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000f1c0:	12c00003 	beqz	s6,8000f1d0 <do_fork+0x3fc>
8000f1c4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000f1c8:	0c006d08 	jal	8001b420 <intr_enable>
8000f1cc:	00000000 	nop
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:625
			proc->gid = proc->pid;
		}
	}
	local_intr_restore(intr_flag);

	wakeup_proc(proc);
8000f1d0:	0c0004f8 	jal	800013e0 <wakeup_proc>
8000f1d4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:627

	ret = proc->pid;
8000f1d8:	8e020004 	lw	v0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:643
bad_fork_cleanup_kstack:
	put_kstack(proc);
bad_fork_cleanup_proc:
	kfree(proc);
	goto fork_out;
}
8000f1dc:	8fbf003c 	lw	ra,60(sp)
8000f1e0:	8fbe0038 	lw	s8,56(sp)
8000f1e4:	8fb70034 	lw	s7,52(sp)
8000f1e8:	8fb60030 	lw	s6,48(sp)
8000f1ec:	8fb5002c 	lw	s5,44(sp)
8000f1f0:	8fb40028 	lw	s4,40(sp)
8000f1f4:	8fb30024 	lw	s3,36(sp)
8000f1f8:	8fb20020 	lw	s2,32(sp)
8000f1fc:	8fb1001c 	lw	s1,28(sp)
8000f200:	8fb00018 	lw	s0,24(sp)
8000f204:	03e00008 	jr	ra
8000f208:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f20c:	0c006d0c 	jal	8001b430 <intr_disable>
8000f210:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f214:	8ee20014 	lw	v0,20(s7)
8000f218:	24420001 	addiu	v0,v0,1
8000f21c:	aee20014 	sw	v0,20(s7)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f220:	0c006d08 	jal	8001b420 <intr_enable>
8000f224:	00000000 	nop
8000f228:	08003bc8 	j	8000ef20 <do_fork+0x14c>
8000f22c:	00000000 	nop
get_pid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:160
repeat:
		le = list;
		while ((le = list_next(le)) != list) {
			proc = le2proc(le, list_link);
			if (proc->pid == last_pid) {
				if (++last_pid >= next_safe) {
8000f230:	24840001 	addiu	a0,a0,1
8000f234:	0085182a 	slt	v1,a0,a1
8000f238:	1460ffab 	bnez	v1,8000f0e8 <do_fork+0x314>
8000f23c:	00803821 	move	a3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:161
					if (last_pid >= MAX_PID) {
8000f240:	28872000 	slti	a3,a0,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:162
						last_pid = 1;
8000f244:	0147200a 	movz	a0,t2,a3
8000f248:	00803821 	move	a3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:164
					}
					next_safe = MAX_PID;
8000f24c:	24052000 	li	a1,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:156
	}
	if (last_pid >= next_safe) {
inside:
		next_safe = MAX_PID;
repeat:
		le = list;
8000f250:	08003c3a 	j	8000f0e8 <do_fork+0x314>
8000f254:	02a01021 	move	v0,s5
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:620
		if (clone_flags & CLONE_THREAD) {
			list_add_before(&(current->thread_group),
					&(proc->thread_group));
			proc->gid = current->gid;
		} else {
			proc->gid = proc->pid;
8000f258:	8e020004 	lw	v0,4(s0)
8000f25c:	08003c70 	j	8000f1c0 <do_fork+0x3ec>
8000f260:	ae02000c 	sw	v0,12(s0)
get_pid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:152
	static int next_safe = MAX_PID, last_pid = MAX_PID;
	if (++last_pid >= MAX_PID) {
		last_pid = pls_read(lcpu_count);
		goto inside;
	}
	if (last_pid >= next_safe) {
8000f264:	3c098002 	lui	t1,0x8002
8000f268:	8d225420 	lw	v0,21536(t1)
8000f26c:	0082102a 	slt	v0,a0,v0
8000f270:	1040ff98 	beqz	v0,8000f0d4 <do_fork+0x300>
8000f274:	3c158015 	lui	s5,0x8015
8000f278:	08003c47 	j	8000f11c <do_fork+0x348>
8000f27c:	26b57788 	addiu	s5,s5,30600
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f280:	0c006d0c 	jal	8001b430 <intr_disable>
8000f284:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f288:	8fa20010 	lw	v0,16(sp)
8000f28c:	8c430000 	lw	v1,0(v0)
8000f290:	24630001 	addiu	v1,v1,1
8000f294:	ac430000 	sw	v1,0(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f298:	0c006d08 	jal	8001b420 <intr_enable>
8000f29c:	00000000 	nop
8000f2a0:	08003c07 	j	8000f01c <do_fork+0x248>
8000f2a4:	8fa20010 	lw	v0,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f2a8:	0c006d0c 	jal	8001b430 <intr_disable>
8000f2ac:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f2b0:	8fc20008 	lw	v0,8(s8)
8000f2b4:	24420001 	addiu	v0,v0,1
8000f2b8:	afc20008 	sw	v0,8(s8)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f2bc:	0c006d08 	jal	8001b420 <intr_enable>
8000f2c0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:431
	}
}

static int copy_signal(uint32_t clone_flags, struct proc_struct *proc)
{
	struct signal_struct *signal, *oldsig = current->signal_info.signal;
8000f2c4:	08003be1 	j	8000ef84 <do_fork+0x1b0>
8000f2c8:	8e2377a4 	lw	v1,30628(s1)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f2cc:	0c006d0c 	jal	8001b430 <intr_disable>
8000f2d0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f2d4:	8ee2001c 	lw	v0,28(s7)
8000f2d8:	24420001 	addiu	v0,v0,1
8000f2dc:	aee2001c 	sw	v0,28(s7)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f2e0:	0c006d08 	jal	8001b420 <intr_enable>
8000f2e4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:368
		}
		local_intr_restore(intr_flag);
	}
	mm_count_inc(mm);
	proc->mm = mm;
	set_pgdir(proc, mm->pgdir);
8000f2e8:	08003c17 	j	8000f05c <do_fork+0x288>
8000f2ec:	8ee50010 	lw	a1,16(s7)
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:330
		mm = oldmm;
		goto good_mm;
	}

	int ret = -E_NO_MEM;
	if ((mm = mm_create()) == NULL) {
8000f2f0:	0c004c60 	jal	80013180 <mm_create>
8000f2f4:	00000000 	nop
8000f2f8:	1040003e 	beqz	v0,8000f3f4 <do_fork+0x620>
8000f2fc:	0040f021 	move	s8,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:333
		goto bad_mm;
	}
	if (setup_pgdir(mm) != 0) {
8000f300:	0c00397e 	jal	8000e5f8 <setup_pgdir>
8000f304:	00402021 	move	a0,v0
8000f308:	14400038 	bnez	v0,8000f3ec <do_fork+0x618>
8000f30c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:337
		goto bad_pgdir_cleanup_mm;
	}

	lock_mm(oldmm);
8000f310:	0c004c2e 	jal	800130b8 <lock_mm>
8000f314:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:339
	{
		ret = dup_mmap(mm, oldmm);
8000f318:	03c02021 	move	a0,s8
8000f31c:	0c004f96 	jal	80013e58 <dup_mmap>
8000f320:	02e02821 	move	a1,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:341
	}
	unlock_mm(oldmm);
8000f324:	02e02021 	move	a0,s7
8000f328:	0c004c3f 	jal	800130fc <unlock_mm>
8000f32c:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:351
		ret = remapfile(mm, proc);
	}
	unlock_mm(mm);
#endif //UCONFIG_BIONIC_LIBC

	if (ret != 0) {
8000f330:	8fa20010 	lw	v0,16(sp)
8000f334:	14400029 	bnez	v0,8000f3dc <do_fork+0x608>
8000f338:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:356
		goto bad_dup_cleanup_mmap;
	}

good_mm:
	if (mm != oldmm) {
8000f33c:	12feff3f 	beq	s7,s8,8000f03c <do_fork+0x268>
8000f340:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:357
		mm->brk_start = oldmm->brk_start;
8000f344:	8ee30024 	lw	v1,36(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:358
		mm->brk = oldmm->brk;
8000f348:	8ee20028 	lw	v0,40(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:357
		goto bad_dup_cleanup_mmap;
	}

good_mm:
	if (mm != oldmm) {
		mm->brk_start = oldmm->brk_start;
8000f34c:	afc30024 	sw	v1,36(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:358
		mm->brk = oldmm->brk;
8000f350:	afc20028 	sw	v0,40(s8)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000f354:	40026000 	mfc0	v0,c0_status
8000f358:	30420001 	andi	v0,v0,0x1
8000f35c:	1440002f 	bnez	v0,8000f41c <do_fork+0x648>
8000f360:	3c028015 	lui	v0,0x8015
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000f364:	24427780 	addiu	v0,v0,30592
8000f368:	8c430004 	lw	v1,4(v0)
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:362
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000f36c:	27c4002c 	addiu	a0,s8,44
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f370:	ac440004 	sw	a0,4(v0)
8000f374:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000f378:	afc30030 	sw	v1,48(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8000f37c:	afc2002c 	sw	v0,44(s8)
8000f380:	08003c0f 	j	8000f03c <do_fork+0x268>
8000f384:	03c0b821 	move	s7,s8
copy_sem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:412
	sem_queue_count_inc(sem_queue);
	proc->sem_queue = sem_queue;
	return 0;

bad_dup_cleanup_sem:
	exit_sem_queue(sem_queue);
8000f388:	0c006810 	jal	8001a040 <exit_sem_queue>
8000f38c:	03c02021 	move	a0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:413
	sem_queue_destroy(sem_queue);
8000f390:	0c006761 	jal	80019d84 <sem_queue_destroy>
8000f394:	03c02021 	move	a0,s8
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:639
bad_fork_cleanup_fs:
	put_fs(proc);
bad_fork_cleanup_sem:
	put_sem_queue(proc);
bad_fork_cleanup_kstack:
	put_kstack(proc);
8000f398:	0c003ad3 	jal	8000eb4c <put_kstack>
8000f39c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:641
bad_fork_cleanup_proc:
	kfree(proc);
8000f3a0:	0c0054b9 	jal	800152e4 <kfree>
8000f3a4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:643
	goto fork_out;
}
8000f3a8:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:570
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
		goto fork_out;
	}

	ret = -E_NO_MEM;
8000f3ac:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:643
bad_fork_cleanup_kstack:
	put_kstack(proc);
bad_fork_cleanup_proc:
	kfree(proc);
	goto fork_out;
}
8000f3b0:	8fbe0038 	lw	s8,56(sp)
8000f3b4:	8fb70034 	lw	s7,52(sp)
8000f3b8:	8fb60030 	lw	s6,48(sp)
8000f3bc:	8fb5002c 	lw	s5,44(sp)
8000f3c0:	8fb40028 	lw	s4,40(sp)
8000f3c4:	8fb30024 	lw	s3,36(sp)
8000f3c8:	8fb20020 	lw	s2,32(sp)
8000f3cc:	8fb1001c 	lw	s1,28(sp)
8000f3d0:	8fb00018 	lw	s0,24(sp)
8000f3d4:	03e00008 	jr	ra
8000f3d8:	27bd0040 	addiu	sp,sp,64
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:371
	mm_count_inc(mm);
	proc->mm = mm;
	set_pgdir(proc, mm->pgdir);
	return 0;
bad_dup_cleanup_mmap:
	exit_mmap(mm);
8000f3dc:	0c004ff8 	jal	80013fe0 <exit_mmap>
8000f3e0:	03c02021 	move	a0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:372
	put_pgdir(mm);
8000f3e4:	0c0037de 	jal	8000df78 <put_pgdir>
8000f3e8:	03c02021 	move	a0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:374
bad_pgdir_cleanup_mm:
	mm_destroy(mm);
8000f3ec:	0c004d69 	jal	800135a4 <mm_destroy>
8000f3f0:	03c02021 	move	a0,s8
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:631

	ret = proc->pid;
fork_out:
	return ret;
bad_fork_cleanup_sighand:
	put_sighand(proc);
8000f3f4:	0c0039aa 	jal	8000e6a8 <put_sighand>
8000f3f8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:633
bad_fork_cleanup_signal:
	put_signal(proc);
8000f3fc:	0c0039ef 	jal	8000e7bc <put_signal>
8000f400:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:635
bad_fork_cleanup_fs:
	put_fs(proc);
8000f404:	0c003a11 	jal	8000e844 <put_fs>
8000f408:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:637
bad_fork_cleanup_sem:
	put_sem_queue(proc);
8000f40c:	0c0039cc 	jal	8000e730 <put_sem_queue>
8000f410:	02002021 	move	a0,s0
8000f414:	08003ce6 	j	8000f398 <do_fork+0x5c4>
8000f418:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f41c:	0c006d0c 	jal	8001b430 <intr_disable>
8000f420:	03c0b821 	move	s7,s8
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000f424:	3c028015 	lui	v0,0x8015
8000f428:	24427780 	addiu	v0,v0,30592
8000f42c:	8c430004 	lw	v1,4(v0)
copy_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:362
		mm->brk_start = oldmm->brk_start;
		mm->brk = oldmm->brk;
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000f430:	27c4002c 	addiu	a0,s8,44
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000f434:	ac440004 	sw	a0,4(v0)
8000f438:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000f43c:	afc30030 	sw	v1,48(s8)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f440:	0c006d08 	jal	8001b420 <intr_enable>
8000f444:	afc2002c 	sw	v0,44(s8)
8000f448:	08003c0f 	j	8000f03c <do_fork+0x268>
8000f44c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f450:	0c006d0c 	jal	8001b430 <intr_disable>
8000f454:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f458:	8fa20010 	lw	v0,16(sp)
8000f45c:	8c430000 	lw	v1,0(v0)
8000f460:	24630001 	addiu	v1,v1,1
8000f464:	ac430000 	sw	v1,0(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f468:	0c006d08 	jal	8001b420 <intr_enable>
8000f46c:	00000000 	nop
8000f470:	08003bf1 	j	8000efc4 <do_fork+0x1f0>
8000f474:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:564
//    2. call setup_kstack to allocate a kernel stack for child process
//    3. call copy_mm to dup OR share mm according clone_flag
//    4. call wakup_proc to make the new child process RUNNABLE 
int do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf)
{
	int ret = -E_NO_FREE_PROC;
8000f478:	08003c77 	j	8000f1dc <do_fork+0x408>
8000f47c:	2402fff0 	li	v0,-16
copy_fs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:533
	fs_count_inc(fs_struct);
	proc->fs_struct = fs_struct;
	return 0;

bad_dup_cleanup_fs:
	fs_destroy(fs_struct);
8000f480:	0c003297 	jal	8000ca5c <fs_destroy>
8000f484:	02e02021 	move	a0,s7
8000f488:	08003d03 	j	8000f40c <do_fork+0x638>
8000f48c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:570
	struct proc_struct *proc;
	if (nr_process >= MAX_PROCESS) {
		goto fork_out;
	}

	ret = -E_NO_MEM;
8000f490:	08003c77 	j	8000f1dc <do_fork+0x408>
8000f494:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:511
}

static int copy_fs(uint32_t clone_flags, struct proc_struct *proc)
{
	struct fs_struct *fs_struct, *old_fs_struct = current->fs_struct;
	assert(old_fs_struct != NULL);
8000f498:	3c048002 	lui	a0,0x8002
8000f49c:	3c068002 	lui	a2,0x8002
8000f4a0:	3c078002 	lui	a3,0x8002
8000f4a4:	24842ab8 	addiu	a0,a0,10936
8000f4a8:	240501ff 	li	a1,511
8000f4ac:	24c60e48 	addiu	a2,a2,3656
8000f4b0:	0c006b13 	jal	8001ac4c <__panic>
8000f4b4:	24e72b78 	addiu	a3,a3,11128
do_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:580

	proc->parent = current;
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);

	assert(current->time_slice >= 0);
8000f4b8:	3c048002 	lui	a0,0x8002
8000f4bc:	3c068002 	lui	a2,0x8002
8000f4c0:	3c078002 	lui	a3,0x8002
8000f4c4:	24842ab8 	addiu	a0,a0,10936
8000f4c8:	24050244 	li	a1,580
8000f4cc:	24c60e48 	addiu	a2,a2,3656
8000f4d0:	0c006b13 	jal	8001ac4c <__panic>
8000f4d4:	24e72b5c 	addiu	a3,a3,11100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:578
		goto fork_out;
	}

	proc->parent = current;
	list_init(&(proc->thread_group));
	assert(current->wait_state == 0);
8000f4d8:	3c048002 	lui	a0,0x8002
8000f4dc:	3c068002 	lui	a2,0x8002
8000f4e0:	3c078002 	lui	a3,0x8002
8000f4e4:	24842ab8 	addiu	a0,a0,10936
8000f4e8:	24050242 	li	a1,578
8000f4ec:	24c60e48 	addiu	a2,a2,3656
8000f4f0:	0c006b13 	jal	8001ac4c <__panic>
8000f4f4:	24e72b40 	addiu	a3,a3,11072
setup_kstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
8000f4f8:	3c048002 	lui	a0,0x8002
8000f4fc:	3c068002 	lui	a2,0x8002
8000f500:	24842a0c 	addiu	a0,a0,10764
8000f504:	2405006a 	li	a1,106
8000f508:	0c006b13 	jal	8001ac4c <__panic>
8000f50c:	24c62a94 	addiu	a2,a2,10900

8000f510 <do_exit_thread>:
do_exit_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:743
}

// do_exit_thread - kill a single thread
int do_exit_thread(int error_code)
{
	current->exit_code = error_code;
8000f510:	3c028015 	lui	v0,0x8015
8000f514:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:742
	return do_exit_thread(error_code);
}

// do_exit_thread - kill a single thread
int do_exit_thread(int error_code)
{
8000f518:	27bdffe8 	addiu	sp,sp,-24
8000f51c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:744
	current->exit_code = error_code;
	return __do_exit();
8000f520:	0c003a31 	jal	8000e8c4 <__do_exit>
8000f524:	ac440080 	sw	a0,128(v0)

8000f528 <do_exit>:
do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:726
	      current->exit_code);
}

// do_exit - kill a thread group, called by syscall or trap handler
int do_exit(int error_code)
{
8000f528:	27bdffd8 	addiu	sp,sp,-40
8000f52c:	afb20020 	sw	s2,32(sp)
8000f530:	afb1001c 	sw	s1,28(sp)
8000f534:	afb00018 	sw	s0,24(sp)
8000f538:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:728
	bool intr_flag;
	local_intr_save(intr_flag);
8000f53c:	0c003797 	jal	8000de5c <__intr_save>
8000f540:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:730
	{
		list_entry_t *list = &(current->thread_group), *le = list;
8000f544:	3c038015 	lui	v1,0x8015
8000f548:	8c7277a4 	lw	s2,30628(v1)
8000f54c:	26520094 	addiu	s2,s2,148
8000f550:	02408821 	move	s1,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8000f554:	8e310004 	lw	s1,4(s1)
do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:731
		while ((le = list_next(le)) != list) {
8000f558:	1251000f 	beq	s2,s1,8000f598 <do_exit+0x70>
8000f55c:	00000000 	nop
__do_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1496
}

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
8000f560:	8e23ffc8 	lw	v1,-56(s1)
8000f564:	30640001 	andi	a0,v1,0x1
8000f568:	5480fffb 	bnezl	a0,8000f558 <do_exit+0x30>
8000f56c:	8e310004 	lw	s1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1499
		proc->flags |= PF_EXITING;
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
8000f570:	8e24fff0 	lw	a0,-16(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1497

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
		proc->flags |= PF_EXITING;
8000f574:	34630001 	ori	v1,v1,0x1
8000f578:	ae23ffc8 	sw	v1,-56(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1499
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
8000f57c:	0481fff5 	bgez	a0,8000f554 <do_exit+0x2c>
8000f580:	ae30ffec 	sw	s0,-20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1500
			wakeup_proc(proc);
8000f584:	2624ff6c 	addiu	a0,s1,-148
8000f588:	0c0004f8 	jal	800013e0 <wakeup_proc>
8000f58c:	afa20010 	sw	v0,16(sp)
8000f590:	08003d55 	j	8000f554 <do_exit+0x2c>
8000f594:	8fa20010 	lw	v0,16(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8000f598:	10400003 	beqz	v0,8000f5a8 <do_exit+0x80>
8000f59c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8000f5a0:	0c006d08 	jal	8001b420 <intr_enable>
8000f5a4:	00000000 	nop
do_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:737
			struct proc_struct *proc = le2proc(le, thread_group);
			__do_kill(proc, error_code);
		}
	}
	local_intr_restore(intr_flag);
	return do_exit_thread(error_code);
8000f5a8:	0c003d44 	jal	8000f510 <do_exit_thread>
8000f5ac:	02002021 	move	a0,s0

8000f5b0 <do_execve>:
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f5b0:	27bdfde8 	addiu	sp,sp,-536
8000f5b4:	afb001f0 	sw	s0,496(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1186
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;
8000f5b8:	3c108015 	lui	s0,0x8015
8000f5bc:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f5c0:	afb201f8 	sw	s2,504(sp)
8000f5c4:	afb40200 	sw	s4,512(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1186
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;
8000f5c8:	8c520020 	lw	s2,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f5cc:	afb301fc 	sw	s3,508(sp)
8000f5d0:	afb101f4 	sw	s1,500(sp)
8000f5d4:	0080a021 	move	s4,a0
8000f5d8:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1189
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;

	char local_name[PROC_NAME_LEN + 1];
	memset(local_name, 0, sizeof(local_name));
8000f5dc:	27a40024 	addiu	a0,sp,36
8000f5e0:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f5e4:	00c09821 	move	s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1189
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;

	char local_name[PROC_NAME_LEN + 1];
	memset(local_name, 0, sizeof(local_name));
8000f5e8:	24060010 	li	a2,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1183
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
{
8000f5ec:	afbf0214 	sw	ra,532(sp)
8000f5f0:	afbe0210 	sw	s8,528(sp)
8000f5f4:	afb7020c 	sw	s7,524(sp)
8000f5f8:	afb60208 	sw	s6,520(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1189
	static_assert(EXEC_MAX_ARG_LEN >= FS_MAX_FPATH_LEN);

	struct mm_struct *mm = current->mm;

	char local_name[PROC_NAME_LEN + 1];
	memset(local_name, 0, sizeof(local_name));
8000f5fc:	0c005c5a 	jal	80017168 <memset>
8000f600:	afb50204 	sw	s5,516(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1195

	char *kargv[EXEC_MAX_ARG_NUM], *kenvp[EXEC_MAX_ENV_NUM];
	const char *path;

	int ret = -E_INVAL;
	lock_mm(mm);
8000f604:	0c004c2e 	jal	800130b8 <lock_mm>
8000f608:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1207
			unlock_mm(mm);
			return ret;
		}
	}
#endif
	snprintf(local_name, sizeof(local_name), "<null> %d", current->pid);
8000f60c:	8e0277a4 	lw	v0,30628(s0)
8000f610:	3c068002 	lui	a2,0x8002
8000f614:	27a40024 	addiu	a0,sp,36
8000f618:	8c470004 	lw	a3,4(v0)
8000f61c:	24050010 	li	a1,16
8000f620:	0c005b48 	jal	80016d20 <snprintf>
8000f624:	24c62b90 	addiu	a2,a2,11152
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1210

	int argc = 0, envc = 0;
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
8000f628:	02402021 	move	a0,s2
8000f62c:	02203021 	move	a2,s1
8000f630:	27a5015c 	addiu	a1,sp,348
8000f634:	27a70020 	addiu	a3,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1209
		}
	}
#endif
	snprintf(local_name, sizeof(local_name), "<null> %d", current->pid);

	int argc = 0, envc = 0;
8000f638:	afa00020 	sw	zero,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1210
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
8000f63c:	0c003827 	jal	8000e09c <copy_kargv.constprop.3>
8000f640:	afa0001c 	sw	zero,28(sp)
8000f644:	00408821 	move	s1,v0
8000f648:	144000a1 	bnez	v0,8000f8d0 <do_execve+0x320>
8000f64c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1214
		unlock_mm(mm);
		return ret;
	}
	if ((ret = copy_kargv(mm, kenvp, envp, EXEC_MAX_ENV_NUM, &envc)) != 0) {
8000f650:	27a500dc 	addiu	a1,sp,220
8000f654:	02603021 	move	a2,s3
8000f658:	0c003827 	jal	8000e09c <copy_kargv.constprop.3>
8000f65c:	27a7001c 	addiu	a3,sp,28
8000f660:	00408821 	move	s1,v0
8000f664:	14400088 	bnez	v0,8000f888 <do_execve+0x2d8>
8000f668:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1232
		kprintf("## %08x %s\n", kenvp[i], kenvp[i]);
#endif
	//path = argv[0];
	//copy_from_user (mm, &path, argv, sizeof (char*), 0);
	path = filename;
	unlock_mm(mm);
8000f66c:	0c004c3f 	jal	800130fc <unlock_mm>
8000f670:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1240
	//fs_closeall(current->fs_struct);

	/* sysfile_open will check the first argument path, thus we have to use a user-space pointer, and argv[0] may be incorrect */

	int fd;
	if ((ret = fd = sysfile_open(path, O_RDONLY)) < 0) {
8000f674:	02802021 	move	a0,s4
8000f678:	0c0033de 	jal	8000cf78 <sysfile_open>
8000f67c:	00002821 	move	a1,zero
8000f680:	0440020f 	bltz	v0,8000fec0 <do_execve+0x910>
8000f684:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1244
		goto execve_exit;
	}

	if (mm != NULL) {
8000f688:	124000d6 	beqz	s2,8000f9e4 <do_execve+0x434>
8000f68c:	2402ffff 	li	v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1245
		mm->lapic = -1;
8000f690:	ae420048 	sw	v0,72(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1246
		mp_set_mm_pagetable(NULL);
8000f694:	0c007c69 	jal	8001f1a4 <mp_set_mm_pagetable>
8000f698:	00002021 	move	a0,zero
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000f69c:	40026000 	mfc0	v0,c0_status
8000f6a0:	30420001 	andi	v0,v0,0x1
8000f6a4:	14400099 	bnez	v0,8000f90c <do_execve+0x35c>
8000f6a8:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f6ac:	8e42001c 	lw	v0,28(s2)
8000f6b0:	2442ffff 	addiu	v0,v0,-1
8000f6b4:	ae42001c 	sw	v0,28(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f6b8:	8e42001c 	lw	v0,28(s2)
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1247
		if (mm_count_dec(mm) == 0) {
8000f6bc:	1040009c 	beqz	v0,8000f930 <do_execve+0x380>
8000f6c0:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1258
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
		}
		current->mm = NULL;
8000f6c4:	ac800020 	sw	zero,32(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1260
	}
	put_sem_queue(current);
8000f6c8:	0c0039cc 	jal	8000e730 <put_sem_queue>
8000f6cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1264

	ret = -E_NO_MEM;
	/* init signal */
	put_sighand(current);
8000f6d0:	0c0039aa 	jal	8000e6a8 <put_sighand>
8000f6d4:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1265
	if ((current->signal_info.sighand = sighand_create()) == NULL) {
8000f6d8:	0c00457a 	jal	800115e8 <sighand_create>
8000f6dc:	8e1277a4 	lw	s2,30628(s0)
8000f6e0:	10400122 	beqz	v0,8000fb6c <do_execve+0x5bc>
8000f6e4:	ae4200c4 	sw	v0,196(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1268
		goto execve_exit;
	}
	sighand_count_inc(current->signal_info.sighand);
8000f6e8:	3c028015 	lui	v0,0x8015
8000f6ec:	8c4277a4 	lw	v0,30628(v0)
8000f6f0:	8c5200c4 	lw	s2,196(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000f6f4:	40026000 	mfc0	v0,c0_status
8000f6f8:	30420001 	andi	v0,v0,0x1
8000f6fc:	144000a5 	bnez	v0,8000f994 <do_execve+0x3e4>
8000f700:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f704:	8e420000 	lw	v0,0(s2)
8000f708:	24420001 	addiu	v0,v0,1
8000f70c:	ae420000 	sw	v0,0(s2)
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1270

	put_signal(current);
8000f710:	8e0477a4 	lw	a0,30628(s0)
sighand_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f714:	8e420000 	lw	v0,0(s2)
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1270
8000f718:	0c0039ef 	jal	8000e7bc <put_signal>
8000f71c:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1271
	if ((current->signal_info.signal = signal_create()) == NULL) {
8000f720:	0c004555 	jal	80011554 <signal_create>
8000f724:	8e1377a4 	lw	s3,30628(s0)
8000f728:	10400110 	beqz	v0,8000fb6c <do_execve+0x5bc>
8000f72c:	ae6200c0 	sw	v0,192(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1274
		goto execve_exit;
	}
	signal_count_inc(current->signal_info.signal);
8000f730:	8e5377a4 	lw	s3,30628(s2)
8000f734:	8e7500c0 	lw	s5,192(s3)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000f738:	40026000 	mfc0	v0,c0_status
8000f73c:	30420001 	andi	v0,v0,0x1
8000f740:	1440008b 	bnez	v0,8000f970 <do_execve+0x3c0>
8000f744:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f748:	8ea20000 	lw	v0,0(s5)
8000f74c:	24420001 	addiu	v0,v0,1
8000f750:	aea20000 	sw	v0,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f754:	8ea20000 	lw	v0,0(s5)
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1276

	if ((current->sem_queue = sem_queue_create()) == NULL) {
8000f758:	0c006750 	jal	80019d40 <sem_queue_create>
8000f75c:	00000000 	nop
8000f760:	10400102 	beqz	v0,8000fb6c <do_execve+0x5bc>
8000f764:	ae6200ac 	sw	v0,172(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1279
		goto execve_exit;
	}
	sem_queue_count_inc(current->sem_queue);
8000f768:	8e0277a4 	lw	v0,30628(s0)
8000f76c:	8c5200ac 	lw	s2,172(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000f770:	40026000 	mfc0	v0,c0_status
8000f774:	30420001 	andi	v0,v0,0x1
8000f778:	1440008f 	bnez	v0,8000f9b8 <do_execve+0x408>
8000f77c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f780:	8e420014 	lw	v0,20(s2)
8000f784:	24420001 	addiu	v0,v0,1
8000f788:	ae420014 	sw	v0,20(s2)
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1281

	if ((ret = load_icode(fd, argc, kargv, envc, kenvp)) != 0) {
8000f78c:	8fb60020 	lw	s6,32(sp)
sem_queue_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000f790:	8e420014 	lw	v0,20(s2)
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:860

//#endif //UCONFIG_BIONIC_LIBC

static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
8000f794:	2ec20021 	sltiu	v0,s6,33
8000f798:	104001c1 	beqz	v0,8000fea0 <do_execve+0x8f0>
8000f79c:	8fb5001c 	lw	s5,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:861
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
8000f7a0:	2ea20021 	sltiu	v0,s5,33
8000f7a4:	104001b6 	beqz	v0,8000fe80 <do_execve+0x8d0>
8000f7a8:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:862
	if (current->mm != NULL) {
8000f7ac:	8c420020 	lw	v0,32(v0)
8000f7b0:	144001ae 	bnez	v0,8000fe6c <do_execve+0x8bc>
8000f7b4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:873
//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t real_entry;
//#endif //UCONFIG_BIONIC_LIBC

	struct mm_struct *mm;
	if ((mm = mm_create()) == NULL) {
8000f7b8:	0c004c60 	jal	80013180 <mm_create>
8000f7bc:	00000000 	nop
8000f7c0:	104000ea 	beqz	v0,8000fb6c <do_execve+0x5bc>
8000f7c4:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:877
		goto bad_mm;
	}

	if (setup_pgdir(mm) != 0) {
8000f7c8:	0c00397e 	jal	8000e5f8 <setup_pgdir>
8000f7cc:	00402021 	move	a0,v0
8000f7d0:	14400082 	bnez	v0,8000f9dc <do_execve+0x42c>
8000f7d4:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:881
		goto bad_pgdir_cleanup_mm;
	}

	mm->brk_start = 0;
8000f7d8:	ae600024 	sw	zero,36(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:886

	struct Page *page;

	struct elfhdr __elf, *elf = &__elf;
	if ((ret = load_icode_read(fd, elf, sizeof(struct elfhdr), 0)) != 0) {
8000f7dc:	27a500a8 	addiu	a1,sp,168
8000f7e0:	24060034 	li	a2,52
8000f7e4:	0c003801 	jal	8000e004 <load_icode_read>
8000f7e8:	00003821 	move	a3,zero
8000f7ec:	14400006 	bnez	v0,8000f808 <do_execve+0x258>
8000f7f0:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:890
		goto bad_elf_cleanup_pgdir;
	}

	if (elf->e_magic != ELF_MAGIC) {
8000f7f4:	8fa300a8 	lw	v1,168(sp)
8000f7f8:	3c02464c 	lui	v0,0x464c
8000f7fc:	2442457f 	addiu	v0,v0,17791
8000f800:	10620083 	beq	v1,v0,8000fa10 <do_execve+0x460>
8000f804:	2412fff8 	li	s2,-8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1126
out:
	return ret;
bad_cleanup_mmap:
	exit_mmap(mm);
bad_elf_cleanup_pgdir:
	put_pgdir(mm);
8000f808:	0c0037de 	jal	8000df78 <put_pgdir>
8000f80c:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1128
bad_pgdir_cleanup_mm:
	mm_destroy(mm);
8000f810:	0c004d69 	jal	800135a4 <mm_destroy>
8000f814:	02602021 	move	a0,s3
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1281
	if ((current->sem_queue = sem_queue_create()) == NULL) {
		goto execve_exit;
	}
	sem_queue_count_inc(current->sem_queue);

	if ((ret = load_icode(fd, argc, kargv, envc, kenvp)) != 0) {
8000f818:	564000d5 	bnezl	s2,8000fb70 <do_execve+0x5c0>
8000f81c:	02408821 	move	s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1285
		goto execve_exit;
	}

	set_proc_name(current, local_name);
8000f820:	8e0477a4 	lw	a0,30628(s0)
8000f824:	0c003af6 	jal	8000ebd8 <set_proc_name>
8000f828:	27a50024 	addiu	a1,sp,36
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1287

	if (do_execve_arch_hook(argc, kargv) < 0)
8000f82c:	8fa40020 	lw	a0,32(sp)
8000f830:	0c007a7c 	jal	8001e9f0 <do_execve_arch_hook>
8000f834:	27a5015c 	addiu	a1,sp,348
8000f838:	044000ce 	bltz	v0,8000fb74 <do_execve+0x5c4>
8000f83c:	8fa40020 	lw	a0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1290
		goto execve_exit;

	put_kargv(argc, kargv);
8000f840:	0c0037cb 	jal	8000df2c <put_kargv>
8000f844:	27a5015c 	addiu	a1,sp,348
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1291
	put_kargv(envc, kenvp);
8000f848:	8fa4001c 	lw	a0,28(sp)
8000f84c:	0c0037cb 	jal	8000df2c <put_kargv>
8000f850:	27a500dc 	addiu	a1,sp,220
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1301
	put_kargv(envc, kenvp);
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
	panic("already exit: %e.\n", ret);
}
8000f854:	8fbf0214 	lw	ra,532(sp)
8000f858:	02201021 	move	v0,s1
8000f85c:	8fbe0210 	lw	s8,528(sp)
8000f860:	8fb7020c 	lw	s7,524(sp)
8000f864:	8fb60208 	lw	s6,520(sp)
8000f868:	8fb50204 	lw	s5,516(sp)
8000f86c:	8fb40200 	lw	s4,512(sp)
8000f870:	8fb301fc 	lw	s3,508(sp)
8000f874:	8fb201f8 	lw	s2,504(sp)
8000f878:	8fb101f4 	lw	s1,500(sp)
8000f87c:	8fb001f0 	lw	s0,496(sp)
8000f880:	03e00008 	jr	ra
8000f884:	27bd0218 	addiu	sp,sp,536
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1215
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
		unlock_mm(mm);
		return ret;
	}
	if ((ret = copy_kargv(mm, kenvp, envp, EXEC_MAX_ENV_NUM, &envc)) != 0) {
		unlock_mm(mm);
8000f888:	0c004c3f 	jal	800130fc <unlock_mm>
8000f88c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1216
		put_kargv(argc, kargv);
8000f890:	8fa40020 	lw	a0,32(sp)
8000f894:	0c0037cb 	jal	8000df2c <put_kargv>
8000f898:	27a5015c 	addiu	a1,sp,348
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1301
	put_kargv(envc, kenvp);
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
	panic("already exit: %e.\n", ret);
}
8000f89c:	8fbf0214 	lw	ra,532(sp)
8000f8a0:	02201021 	move	v0,s1
8000f8a4:	8fbe0210 	lw	s8,528(sp)
8000f8a8:	8fb7020c 	lw	s7,524(sp)
8000f8ac:	8fb60208 	lw	s6,520(sp)
8000f8b0:	8fb50204 	lw	s5,516(sp)
8000f8b4:	8fb40200 	lw	s4,512(sp)
8000f8b8:	8fb301fc 	lw	s3,508(sp)
8000f8bc:	8fb201f8 	lw	s2,504(sp)
8000f8c0:	8fb101f4 	lw	s1,500(sp)
8000f8c4:	8fb001f0 	lw	s0,496(sp)
8000f8c8:	03e00008 	jr	ra
8000f8cc:	27bd0218 	addiu	sp,sp,536
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1211
#endif
	snprintf(local_name, sizeof(local_name), "<null> %d", current->pid);

	int argc = 0, envc = 0;
	if ((ret = copy_kargv(mm, kargv, argv, EXEC_MAX_ARG_NUM, &argc)) != 0) {
		unlock_mm(mm);
8000f8d0:	0c004c3f 	jal	800130fc <unlock_mm>
8000f8d4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1301
	put_kargv(envc, kenvp);
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
	panic("already exit: %e.\n", ret);
}
8000f8d8:	8fbf0214 	lw	ra,532(sp)
8000f8dc:	02201021 	move	v0,s1
8000f8e0:	8fbe0210 	lw	s8,528(sp)
8000f8e4:	8fb7020c 	lw	s7,524(sp)
8000f8e8:	8fb60208 	lw	s6,520(sp)
8000f8ec:	8fb50204 	lw	s5,516(sp)
8000f8f0:	8fb40200 	lw	s4,512(sp)
8000f8f4:	8fb301fc 	lw	s3,508(sp)
8000f8f8:	8fb201f8 	lw	s2,504(sp)
8000f8fc:	8fb101f4 	lw	s1,500(sp)
8000f900:	8fb001f0 	lw	s0,496(sp)
8000f904:	03e00008 	jr	ra
8000f908:	27bd0218 	addiu	sp,sp,536
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f90c:	0c006d0c 	jal	8001b430 <intr_disable>
8000f910:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000f914:	8e42001c 	lw	v0,28(s2)
8000f918:	2442ffff 	addiu	v0,v0,-1
8000f91c:	ae42001c 	sw	v0,28(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f920:	0c006d08 	jal	8001b420 <intr_enable>
8000f924:	00000000 	nop
8000f928:	08003dae 	j	8000f6b8 <do_execve+0x108>
8000f92c:	00000000 	nop
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1248

	if (mm != NULL) {
		mm->lapic = -1;
		mp_set_mm_pagetable(NULL);
		if (mm_count_dec(mm) == 0) {
			exit_mmap(mm);
8000f930:	0c004ff8 	jal	80013fe0 <exit_mmap>
8000f934:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1249
			put_pgdir(mm);
8000f938:	0c0037de 	jal	8000df78 <put_pgdir>
8000f93c:	02402021 	move	a0,s2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000f940:	40026000 	mfc0	v0,c0_status
8000f944:	30420001 	andi	v0,v0,0x1
8000f948:	14400028 	bnez	v0,8000f9ec <do_execve+0x43c>
8000f94c:	00000000 	nop
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000f950:	8e43002c 	lw	v1,44(s2)
8000f954:	8e420030 	lw	v0,48(s2)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000f958:	ac620004 	sw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8000f95c:	ac430000 	sw	v1,0(v0)
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1256
			local_intr_save(intr_flag);
			{
				list_del(&(mm->proc_mm_link));
			}
			local_intr_restore(intr_flag);
			mm_destroy(mm);
8000f960:	0c004d69 	jal	800135a4 <mm_destroy>
8000f964:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1258
		}
		current->mm = NULL;
8000f968:	08003db1 	j	8000f6c4 <do_execve+0x114>
8000f96c:	8e0477a4 	lw	a0,30628(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000f970:	0c006d0c 	jal	8001b430 <intr_disable>
8000f974:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f978:	8ea20000 	lw	v0,0(s5)
8000f97c:	24420001 	addiu	v0,v0,1
8000f980:	aea20000 	sw	v0,0(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f984:	0c006d08 	jal	8001b420 <intr_enable>
8000f988:	00000000 	nop
8000f98c:	08003dd5 	j	8000f754 <do_execve+0x1a4>
8000f990:	8e5377a4 	lw	s3,30628(s2)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f994:	0c006d0c 	jal	8001b430 <intr_disable>
8000f998:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f99c:	8e420000 	lw	v0,0(s2)
8000f9a0:	24420001 	addiu	v0,v0,1
8000f9a4:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f9a8:	0c006d08 	jal	8001b420 <intr_enable>
8000f9ac:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1270
	if ((current->signal_info.sighand = sighand_create()) == NULL) {
		goto execve_exit;
	}
	sighand_count_inc(current->signal_info.sighand);

	put_signal(current);
8000f9b0:	08003dc5 	j	8000f714 <do_execve+0x164>
8000f9b4:	8e0477a4 	lw	a0,30628(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f9b8:	0c006d0c 	jal	8001b430 <intr_disable>
8000f9bc:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000f9c0:	8e420014 	lw	v0,20(s2)
8000f9c4:	24420001 	addiu	v0,v0,1
8000f9c8:	ae420014 	sw	v0,20(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000f9cc:	0c006d08 	jal	8001b420 <intr_enable>
8000f9d0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1281
	if ((current->sem_queue = sem_queue_create()) == NULL) {
		goto execve_exit;
	}
	sem_queue_count_inc(current->sem_queue);

	if ((ret = load_icode(fd, argc, kargv, envc, kenvp)) != 0) {
8000f9d4:	08003de4 	j	8000f790 <do_execve+0x1e0>
8000f9d8:	8fb60020 	lw	s6,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:866
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
	if (current->mm != NULL) {
		panic("load_icode: current->mm must be empty.\n");
	}

	int ret = -E_NO_MEM;
8000f9dc:	08003e04 	j	8000f810 <do_execve+0x260>
8000f9e0:	2412fff4 	li	s2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1244
	int fd;
	if ((ret = fd = sysfile_open(path, O_RDONLY)) < 0) {
		goto execve_exit;
	}

	if (mm != NULL) {
8000f9e4:	08003db2 	j	8000f6c8 <do_execve+0x118>
8000f9e8:	8e0477a4 	lw	a0,30628(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000f9ec:	0c006d0c 	jal	8001b430 <intr_disable>
8000f9f0:	00000000 	nop
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8000f9f4:	8e43002c 	lw	v1,44(s2)
8000f9f8:	8e420030 	lw	v0,48(s2)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8000f9fc:	ac620004 	sw	v0,4(v1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000fa00:	0c006d08 	jal	8001b420 <intr_enable>
8000fa04:	ac430000 	sw	v1,0(v0)
8000fa08:	08003e58 	j	8000f960 <do_execve+0x3b0>
8000fa0c:	00000000 	nop
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:908

//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
8000fa10:	97a200d4 	lhu	v0,212(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:906
	uint32_t vm_flags, phnum;
	pte_perm_t perm = 0;

//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
8000fa14:	afa00018 	sw	zero,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:908
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
8000fa18:	10400034 	beqz	v0,8000faec <do_execve+0x53c>
8000fa1c:	afa001e0 	sw	zero,480(sp)
8000fa20:	08003e91 	j	8000fa44 <do_execve+0x494>
8000fa24:	0000b821 	move	s7,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:922
			is_dynamic = 1;
			interp_idx = phnum;
			continue;
		}

		if (ph->p_type != ELF_PT_LOAD) {
8000fa28:	10430016 	beq	v0,v1,8000fa84 <do_execve+0x4d4>
8000fa2c:	8fa20068 	lw	v0,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:908

//#ifdef UCONFIG_BIONIC_LIBC
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
8000fa30:	97a200d4 	lhu	v0,212(sp)
8000fa34:	26f70001 	addiu	s7,s7,1
8000fa38:	02e2102b 	sltu	v0,s7,v0
8000fa3c:	5040002c 	beqzl	v0,8000faf0 <do_execve+0x540>
8000fa40:	8e620024 	lw	v0,36(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:910
		off_t phoff = elf->e_phoff + sizeof(struct proghdr) * phnum;
		if ((ret =
8000fa44:	8fa200c4 	lw	v0,196(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1182
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
8000fa48:	00173940 	sll	a3,s7,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:910
	uint32_t is_dynamic = 0, interp_idx;
	uint32_t bias = 0;
//#endif //UCONFIG_BIONIC_LIBC
	for (phnum = 0; phnum < elf->e_phnum; phnum++) {
		off_t phoff = elf->e_phoff + sizeof(struct proghdr) * phnum;
		if ((ret =
8000fa4c:	02802021 	move	a0,s4
8000fa50:	27a50054 	addiu	a1,sp,84
8000fa54:	24060020 	li	a2,32
8000fa58:	0c003801 	jal	8000e004 <load_icode_read>
8000fa5c:	00e23821 	addu	a3,a3,v0
8000fa60:	1440001e 	bnez	v0,8000fadc <do_execve+0x52c>
8000fa64:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:916
		     load_icode_read(fd, ph, sizeof(struct proghdr),
				     phoff)) != 0) {
			goto bad_cleanup_mmap;
		}

		if (ph->p_type == ELF_PT_INTERP) {
8000fa68:	8fa20054 	lw	v0,84(sp)
8000fa6c:	24030003 	li	v1,3
8000fa70:	1443ffed 	bne	v0,v1,8000fa28 <do_execve+0x478>
8000fa74:	24030001 	li	v1,1
8000fa78:	02e0f021 	move	s8,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:917
			is_dynamic = 1;
8000fa7c:	08003e8c 	j	8000fa30 <do_execve+0x480>
8000fa80:	afa301e0 	sw	v1,480(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:925
		}

		if (ph->p_type != ELF_PT_LOAD) {
			continue;
		}
		if (ph->p_filesz > ph->p_memsz) {
8000fa84:	8fa30064 	lw	v1,100(sp)
8000fa88:	0043102b 	sltu	v0,v0,v1
8000fa8c:	1440006f 	bnez	v0,8000fc4c <do_execve+0x69c>
8000fa90:	8fa2005c 	lw	v0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:930
			ret = -E_INVAL_ELF;
			goto bad_cleanup_mmap;
		}

		if (ph->p_va == 0 && !bias) {
8000fa94:	8fa30018 	lw	v1,24(sp)
8000fa98:	00621025 	or	v0,v1,v0
8000fa9c:	14400003 	bnez	v0,8000faac <do_execve+0x4fc>
8000faa0:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:931
			bias = 0x30800000;
8000faa4:	3c063080 	lui	a2,0x3080
8000faa8:	afa60018 	sw	a2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:934
		}

		if ((ret = map_ph(fd, ph, mm, &bias, 0)) != 0) {
8000faac:	27a50054 	addiu	a1,sp,84
8000fab0:	02603021 	move	a2,s3
8000fab4:	27a70018 	addiu	a3,sp,24
8000fab8:	0c003884 	jal	8000e210 <map_ph>
8000fabc:	afa00010 	sw	zero,16(sp)
8000fac0:	1040ffdb 	beqz	v0,8000fa30 <do_execve+0x480>
8000fac4:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:935
			kprintf("load address: 0x%08x size: %d\n", ph->p_va,
8000fac8:	8fa5005c 	lw	a1,92(sp)
8000facc:	8fa60068 	lw	a2,104(sp)
8000fad0:	3c048002 	lui	a0,0x8002
8000fad4:	0c007aa6 	jal	8001ea98 <kprintf>
8000fad8:	24842c14 	addiu	a0,a0,11284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1124
#endif //UCONFIG_BIONIC_LIBC
	ret = 0;
out:
	return ret;
bad_cleanup_mmap:
	exit_mmap(mm);
8000fadc:	0c004ff8 	jal	80013fe0 <exit_mmap>
8000fae0:	02602021 	move	a0,s3
8000fae4:	08003e02 	j	8000f808 <do_execve+0x258>
8000fae8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1013
		   }
		 */
	  /**************************************/
	}

	mm->brk_start = mm->brk = ROUNDUP(mm->brk_start, PGSIZE);
8000faec:	8e620024 	lw	v0,36(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1017

	/* setup user stack */
	vm_flags = VM_READ | VM_WRITE | VM_STACK;
	if ((ret =
8000faf0:	02602021 	move	a0,s3
8000faf4:	3c057fff 	lui	a1,0x7fff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1013
		   }
		 */
	  /**************************************/
	}

	mm->brk_start = mm->brk = ROUNDUP(mm->brk_start, PGSIZE);
8000faf8:	24420fff 	addiu	v0,v0,4095
8000fafc:	30430fff 	andi	v1,v0,0xfff
8000fb00:	00431023 	subu	v0,v0,v1
8000fb04:	ae620028 	sw	v0,40(s3)
8000fb08:	ae620024 	sw	v0,36(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1017

	/* setup user stack */
	vm_flags = VM_READ | VM_WRITE | VM_STACK;
	if ((ret =
8000fb0c:	3c060001 	lui	a2,0x1
8000fb10:	2407000b 	li	a3,11
8000fb14:	0c004e52 	jal	80013948 <mm_map>
8000fb18:	afa00010 	sw	zero,16(sp)
8000fb1c:	1440ffef 	bnez	v0,8000fadc <do_execve+0x52c>
8000fb20:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1023
	     mm_map(mm, USTACKTOP - USTACKSIZE, USTACKSIZE, vm_flags,
		    NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (is_dynamic) {
8000fb24:	8fa301e0 	lw	v1,480(sp)
8000fb28:	1060001d 	beqz	v1,8000fba0 <do_execve+0x5f0>
8000fb2c:	8fa300c0 	lw	v1,192(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1024
		elf->e_entry += bias;
8000fb30:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1029

		bias = 0;

		off_t phoff =
		    elf->e_phoff + sizeof(struct proghdr) * interp_idx;
8000fb34:	001e3940 	sll	a3,s8,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1030
		if ((ret =
8000fb38:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1024
		    NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (is_dynamic) {
		elf->e_entry += bias;
8000fb3c:	00621021 	addu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1030

		bias = 0;

		off_t phoff =
		    elf->e_phoff + sizeof(struct proghdr) * interp_idx;
		if ((ret =
8000fb40:	8fa300c4 	lw	v1,196(sp)
8000fb44:	27a50054 	addiu	a1,sp,84
8000fb48:	24060020 	li	a2,32
8000fb4c:	00e33821 	addu	a3,a3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1024
		    NULL)) != 0) {
		goto bad_cleanup_mmap;
	}

	if (is_dynamic) {
		elf->e_entry += bias;
8000fb50:	afa200c0 	sw	v0,192(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1030

		bias = 0;

		off_t phoff =
		    elf->e_phoff + sizeof(struct proghdr) * interp_idx;
		if ((ret =
8000fb54:	0c003801 	jal	8000e004 <load_icode_read>
8000fb58:	afa00018 	sw	zero,24(sp)
8000fb5c:	10400053 	beqz	v0,8000fcac <do_execve+0x6fc>
8000fb60:	00000000 	nop
8000fb64:	08003eb7 	j	8000fadc <do_execve+0x52c>
8000fb68:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:866
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
	if (current->mm != NULL) {
		panic("load_icode: current->mm must be empty.\n");
	}

	int ret = -E_NO_MEM;
8000fb6c:	2411fff4 	li	s1,-12
do_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1295
	put_kargv(argc, kargv);
	put_kargv(envc, kenvp);
	return 0;

execve_exit:
	put_kargv(argc, kargv);
8000fb70:	8fa40020 	lw	a0,32(sp)
8000fb74:	0c0037cb 	jal	8000df2c <put_kargv>
8000fb78:	27a5015c 	addiu	a1,sp,348
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1296
	put_kargv(envc, kenvp);
8000fb7c:	8fa4001c 	lw	a0,28(sp)
8000fb80:	0c0037cb 	jal	8000df2c <put_kargv>
8000fb84:	27a500dc 	addiu	a1,sp,220
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1299
/* exec should return -1 if failed */
	//return ret;
	do_exit(ret);
8000fb88:	0c003d4a 	jal	8000f528 <do_exit>
8000fb8c:	02202021 	move	a0,s1
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1090
				       1)) == 0);
		}

		real_entry = interp_elf->e_entry + bias;

		sysfile_close(interp_fd);
8000fb90:	0c0033f3 	jal	8000cfcc <sysfile_close>
8000fb94:	03c02021 	move	a0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1091
		kfree(interp_path);
8000fb98:	0c0054b9 	jal	800152e4 <kfree>
8000fb9c:	8fa401ec 	lw	a0,492(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1094
	}

	sysfile_close(fd);
8000fba0:	0c0033f3 	jal	8000cfcc <sysfile_close>
8000fba4:	02802021 	move	a0,s4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8000fba8:	40026000 	mfc0	v0,c0_status
8000fbac:	30420001 	andi	v0,v0,0x1
8000fbb0:	14400031 	bnez	v0,8000fc78 <do_execve+0x6c8>
8000fbb4:	3c028015 	lui	v0,0x8015
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000fbb8:	24427780 	addiu	v0,v0,30592
8000fbbc:	8c430004 	lw	v1,4(v0)
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1099

	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000fbc0:	2664002c 	addiu	a0,s3,44
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000fbc4:	ac440004 	sw	a0,4(v0)
8000fbc8:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000fbcc:	ae630030 	sw	v1,48(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8000fbd0:	ae62002c 	sw	v0,44(s3)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8000fbd4:	40026000 	mfc0	v0,c0_status
8000fbd8:	30420001 	andi	v0,v0,0x1
8000fbdc:	1440001d 	bnez	v0,8000fc54 <do_execve+0x6a4>
8000fbe0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8000fbe4:	8e62001c 	lw	v0,28(s3)
8000fbe8:	24420001 	addiu	v0,v0,1
8000fbec:	ae62001c 	sw	v0,28(s3)
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1103
	}
	local_intr_restore(intr_flag);
	mm_count_inc(mm);
	current->mm = mm;
8000fbf0:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1104
	set_pgdir(current, mm->pgdir);
8000fbf4:	8e650010 	lw	a1,16(s3)
mm_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8000fbf8:	8e63001c 	lw	v1,28(s3)
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1104
8000fbfc:	00402021 	move	a0,v0
8000fc00:	0c007908 	jal	8001e420 <set_pgdir>
8000fc04:	ac530020 	sw	s3,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1105
	mm->lapic = pls_read(lapic_id);
8000fc08:	3c028015 	lui	v0,0x8015
8000fc0c:	8c4277b0 	lw	v0,30640(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1106
	mp_set_mm_pagetable(mm);
8000fc10:	02602021 	move	a0,s3
8000fc14:	0c007c69 	jal	8001f1a4 <mp_set_mm_pagetable>
8000fc18:	ae620048 	sw	v0,72(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1117
	if (init_new_context_dynamic(current, elf, argc, kargv, envc, kenvp,
				     is_dynamic, real_entry, load_address,
				     bias) < 0)
		goto bad_cleanup_mmap;
#else
	if (init_new_context(current, elf, argc, kargv, envc, kenvp) < 0)
8000fc1c:	8e0477a4 	lw	a0,30628(s0)
8000fc20:	27a300dc 	addiu	v1,sp,220
8000fc24:	27a500a8 	addiu	a1,sp,168
8000fc28:	02c03021 	move	a2,s6
8000fc2c:	27a7015c 	addiu	a3,sp,348
8000fc30:	afb50010 	sw	s5,16(sp)
8000fc34:	0c007a41 	jal	8001e904 <init_new_context>
8000fc38:	afa30014 	sw	v1,20(sp)
8000fc3c:	0441fef9 	bgez	v0,8000f824 <do_execve+0x274>
8000fc40:	8e0477a4 	lw	a0,30628(s0)
8000fc44:	08003eb7 	j	8000fadc <do_execve+0x52c>
8000fc48:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:926

		if (ph->p_type != ELF_PT_LOAD) {
			continue;
		}
		if (ph->p_filesz > ph->p_memsz) {
			ret = -E_INVAL_ELF;
8000fc4c:	08003eb7 	j	8000fadc <do_execve+0x52c>
8000fc50:	2412fff8 	li	s2,-8
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8000fc54:	0c006d0c 	jal	8001b430 <intr_disable>
8000fc58:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8000fc5c:	8e62001c 	lw	v0,28(s3)
8000fc60:	24420001 	addiu	v0,v0,1
8000fc64:	ae62001c 	sw	v0,28(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000fc68:	0c006d08 	jal	8001b420 <intr_enable>
8000fc6c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1103
	{
		list_add(&(proc_mm_list), &(mm->proc_mm_link));
	}
	local_intr_restore(intr_flag);
	mm_count_inc(mm);
	current->mm = mm;
8000fc70:	08003efd 	j	8000fbf4 <do_execve+0x644>
8000fc74:	8e0277a4 	lw	v0,30628(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8000fc78:	0c006d0c 	jal	8001b430 <intr_disable>
8000fc7c:	00000000 	nop
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8000fc80:	3c028015 	lui	v0,0x8015
8000fc84:	24427780 	addiu	v0,v0,30592
8000fc88:	8c430004 	lw	v1,4(v0)
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1099
	sysfile_close(fd);

	bool intr_flag;
	local_intr_save(intr_flag);
	{
		list_add(&(proc_mm_list), &(mm->proc_mm_link));
8000fc8c:	2664002c 	addiu	a0,s3,44
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8000fc90:	ac440004 	sw	a0,4(v0)
8000fc94:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8000fc98:	ae630030 	sw	v1,48(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8000fc9c:	0c006d08 	jal	8001b420 <intr_enable>
8000fca0:	ae62002c 	sw	v0,44(s3)
8000fca4:	08003ef5 	j	8000fbd4 <do_execve+0x624>
8000fca8:	00000000 	nop
load_icode():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1036
		     load_icode_read(fd, ph, sizeof(struct proghdr),
				     phoff)) != 0) {
			goto bad_cleanup_mmap;
		}

		char *interp_path = (char *)kmalloc(ph->p_filesz);
8000fcac:	0c00548e 	jal	80015238 <kmalloc>
8000fcb0:	8fa40064 	lw	a0,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1037
		load_icode_read(fd, interp_path, ph->p_filesz, ph->p_offset);
8000fcb4:	8fa60064 	lw	a2,100(sp)
8000fcb8:	8fa70058 	lw	a3,88(sp)
8000fcbc:	02802021 	move	a0,s4
8000fcc0:	00402821 	move	a1,v0
8000fcc4:	0c003801 	jal	8000e004 <load_icode_read>
8000fcc8:	afa201ec 	sw	v0,492(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1039

		int interp_fd = sysfile_open(interp_path, O_RDONLY);
8000fccc:	8fa401ec 	lw	a0,492(sp)
8000fcd0:	0c0033de 	jal	8000cf78 <sysfile_open>
8000fcd4:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1040
		assert(interp_fd >= 0);
8000fcd8:	04400097 	bltz	v0,8000ff38 <do_execve+0x988>
8000fcdc:	0040f021 	move	s8,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1042
		struct elfhdr interp___elf, *interp_elf = &interp___elf;
		assert((ret =
8000fce0:	00402021 	move	a0,v0
8000fce4:	27a50074 	addiu	a1,sp,116
8000fce8:	24060034 	li	a2,52
8000fcec:	0c003801 	jal	8000e004 <load_icode_read>
8000fcf0:	00003821 	move	a3,zero
8000fcf4:	14400088 	bnez	v0,8000ff18 <do_execve+0x968>
8000fcf8:	8fa30074 	lw	v1,116(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1045
			load_icode_read(interp_fd, interp_elf,
					sizeof(struct elfhdr), 0)) == 0);
		assert(interp_elf->e_magic == ELF_MAGIC);
8000fcfc:	3c02464c 	lui	v0,0x464c
8000fd00:	2442457f 	addiu	v0,v0,17791
8000fd04:	1462007c 	bne	v1,v0,8000fef8 <do_execve+0x948>
8000fd08:	97a200a0 	lhu	v0,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1050

		struct proghdr interp___ph, *interp_ph = &interp___ph;
		uint32_t interp_phnum;
		uint32_t va_min = 0xffffffff, va_max = 0;
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fd0c:	2403ffff 	li	v1,-1
8000fd10:	afa001e8 	sw	zero,488(sp)
8000fd14:	10400024 	beqz	v0,8000fda8 <do_execve+0x7f8>
8000fd18:	afa301e4 	sw	v1,484(sp)
8000fd1c:	27a30034 	addiu	v1,sp,52
8000fd20:	0000b821 	move	s7,zero
8000fd24:	08003f50 	j	8000fd40 <do_execve+0x790>
8000fd28:	afa301e0 	sw	v1,480(sp)
8000fd2c:	97a200a0 	lhu	v0,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1051
		     ++interp_phnum) {
8000fd30:	26f70001 	addiu	s7,s7,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1050
		assert(interp_elf->e_magic == ELF_MAGIC);

		struct proghdr interp___ph, *interp_ph = &interp___ph;
		uint32_t interp_phnum;
		uint32_t va_min = 0xffffffff, va_max = 0;
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fd34:	02e2102b 	sltu	v0,s7,v0
8000fd38:	1040001c 	beqz	v0,8000fdac <do_execve+0x7fc>
8000fd3c:	8fa301e8 	lw	v1,488(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1055
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fd40:	8fa20090 	lw	v0,144(sp)
8000fd44:	8fa501e0 	lw	a1,480(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1182
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
8000fd48:	00173940 	sll	a3,s7,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1055
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fd4c:	03c02021 	move	a0,s8
8000fd50:	24060020 	li	a2,32
8000fd54:	0c003801 	jal	8000e004 <load_icode_read>
8000fd58:	00e23821 	addu	a3,a3,v0
8000fd5c:	14400062 	bnez	v0,8000fee8 <do_execve+0x938>
8000fd60:	8fa20034 	lw	v0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1059
				load_icode_read(interp_fd, interp_ph,
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
8000fd64:	24060001 	li	a2,1
8000fd68:	1446fff1 	bne	v0,a2,8000fd30 <do_execve+0x780>
8000fd6c:	97a200a0 	lhu	v0,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1062
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd70:	8fa2003c 	lw	v0,60(sp)
8000fd74:	8fa301e4 	lw	v1,484(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd78:	8fa601e8 	lw	a2,488(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1062
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd7c:	0043282b 	sltu	a1,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd80:	8fa30048 	lw	v1,72(sp)
8000fd84:	00431821 	addu	v1,v0,v1
8000fd88:	00c3202b 	sltu	a0,a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1062
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd8c:	8fa601e4 	lw	a2,484(sp)
8000fd90:	0045300b 	movn	a2,v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd94:	8fa201e8 	lw	v0,488(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1062
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
				continue;
			}
			if (va_min > interp_ph->p_va)
8000fd98:	afa601e4 	sw	a2,484(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1064
				va_min = interp_ph->p_va;
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
8000fd9c:	0064100b 	movn	v0,v1,a0
8000fda0:	08003f4b 	j	8000fd2c <do_execve+0x77c>
8000fda4:	afa201e8 	sw	v0,488(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1068
				va_max = interp_ph->p_va + interp_ph->p_memsz;
		}

		bias = get_unmapped_area(mm, va_max - va_min + 1 + PGSIZE);
8000fda8:	8fa301e8 	lw	v1,488(sp)
8000fdac:	02602021 	move	a0,s3
8000fdb0:	24651001 	addiu	a1,v1,4097
8000fdb4:	8fa301e4 	lw	v1,484(sp)
8000fdb8:	0c005024 	jal	80014090 <get_unmapped_area>
8000fdbc:	00a32823 	subu	a1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1069
		bias = ROUNDUP(bias, PGSIZE);
8000fdc0:	24420fff 	addiu	v0,v0,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1071

		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fdc4:	97a300a0 	lhu	v1,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1069
			if (va_max < interp_ph->p_va + interp_ph->p_memsz)
				va_max = interp_ph->p_va + interp_ph->p_memsz;
		}

		bias = get_unmapped_area(mm, va_max - va_min + 1 + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);
8000fdc8:	30440fff 	andi	a0,v0,0xfff
8000fdcc:	00441023 	subu	v0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1071

		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fdd0:	1060ff6f 	beqz	v1,8000fb90 <do_execve+0x5e0>
8000fdd4:	afa20018 	sw	v0,24(sp)
8000fdd8:	27a30034 	addiu	v1,sp,52
8000fddc:	0000b821 	move	s7,zero
8000fde0:	08003f7e 	j	8000fdf8 <do_execve+0x848>
8000fde4:	afa301e0 	sw	v1,480(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1072
		     ++interp_phnum) {
8000fde8:	26f70001 	addiu	s7,s7,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1071
		}

		bias = get_unmapped_area(mm, va_max - va_min + 1 + PGSIZE);
		bias = ROUNDUP(bias, PGSIZE);

		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
8000fdec:	02e2102b 	sltu	v0,s7,v0
8000fdf0:	1040ff67 	beqz	v0,8000fb90 <do_execve+0x5e0>
8000fdf4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1076
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fdf8:	8fa20090 	lw	v0,144(sp)
8000fdfc:	8fa501e0 	lw	a1,480(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1182
failed_cleanup:
	put_kargv(i, kargv);
	return ret;
}

int do_execve(const char *filename, const char **argv, const char **envp)
8000fe00:	00173940 	sll	a3,s7,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1076
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fe04:	03c02021 	move	a0,s8
8000fe08:	24060020 	li	a2,32
8000fe0c:	0c003801 	jal	8000e004 <load_icode_read>
8000fe10:	00e23821 	addu	a3,a3,v0
8000fe14:	1440002c 	bnez	v0,8000fec8 <do_execve+0x918>
8000fe18:	8fa20034 	lw	v0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1080
				load_icode_read(interp_fd, interp_ph,
						sizeof(struct proghdr),
						interp_phoff)) == 0);
			if (interp_ph->p_type != ELF_PT_LOAD) {
8000fe1c:	24060001 	li	a2,1
8000fe20:	1446fff1 	bne	v0,a2,8000fde8 <do_execve+0x838>
8000fe24:	97a200a0 	lhu	v0,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1083
				continue;
			}
			assert((ret =
8000fe28:	8fa501e0 	lw	a1,480(sp)
8000fe2c:	24020001 	li	v0,1
8000fe30:	03c02021 	move	a0,s8
8000fe34:	02603021 	move	a2,s3
8000fe38:	27a70018 	addiu	a3,sp,24
8000fe3c:	0c003884 	jal	8000e210 <map_ph>
8000fe40:	afa20010 	sw	v0,16(sp)
8000fe44:	1040ffe8 	beqz	v0,8000fde8 <do_execve+0x838>
8000fe48:	97a200a0 	lhu	v0,160(sp)
8000fe4c:	3c048002 	lui	a0,0x8002
8000fe50:	3c068002 	lui	a2,0x8002
8000fe54:	3c078002 	lui	a3,0x8002
8000fe58:	24842ab8 	addiu	a0,a0,10936
8000fe5c:	2405043d 	li	a1,1085
8000fe60:	24c60e48 	addiu	a2,a2,3656
8000fe64:	0c006b13 	jal	8001ac4c <__panic>
8000fe68:	24e72d14 	addiu	a3,a3,11540
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:863
static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
	if (current->mm != NULL) {
		panic("load_icode: current->mm must be empty.\n");
8000fe6c:	3c068002 	lui	a2,0x8002
8000fe70:	24842ab8 	addiu	a0,a0,10936
8000fe74:	2405035f 	li	a1,863
8000fe78:	0c006b13 	jal	8001ac4c <__panic>
8000fe7c:	24c62bec 	addiu	a2,a2,11244
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:861
//#endif //UCONFIG_BIONIC_LIBC

static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
	assert(envc >= 0 && envc <= EXEC_MAX_ENV_NUM);
8000fe80:	3c048002 	lui	a0,0x8002
8000fe84:	3c068002 	lui	a2,0x8002
8000fe88:	3c078002 	lui	a3,0x8002
8000fe8c:	24842ab8 	addiu	a0,a0,10936
8000fe90:	2405035d 	li	a1,861
8000fe94:	24c60e48 	addiu	a2,a2,3656
8000fe98:	0c006b13 	jal	8001ac4c <__panic>
8000fe9c:	24e72bc4 	addiu	a3,a3,11204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:860

//#endif //UCONFIG_BIONIC_LIBC

static int load_icode(int fd, int argc, char **kargv, int envc, char **kenvp)
{
	assert(argc >= 0 && argc <= EXEC_MAX_ARG_NUM);
8000fea0:	3c048002 	lui	a0,0x8002
8000fea4:	3c068002 	lui	a2,0x8002
8000fea8:	3c078002 	lui	a3,0x8002
8000feac:	24842ab8 	addiu	a0,a0,10936
8000feb0:	2405035c 	li	a1,860
8000feb4:	24c60e48 	addiu	a2,a2,3656
8000feb8:	0c006b13 	jal	8001ac4c <__panic>
8000febc:	24e72b9c 	addiu	a3,a3,11164
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1240
	//fs_closeall(current->fs_struct);

	/* sysfile_open will check the first argument path, thus we have to use a user-space pointer, and argv[0] may be incorrect */

	int fd;
	if ((ret = fd = sysfile_open(path, O_RDONLY)) < 0) {
8000fec0:	08003edc 	j	8000fb70 <do_execve+0x5c0>
8000fec4:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1076
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fec8:	3c048002 	lui	a0,0x8002
8000fecc:	24842ab8 	addiu	a0,a0,10936
8000fed0:	24050437 	li	a1,1079
8000fed4:	3c068002 	lui	a2,0x8002
8000fed8:	3c078002 	lui	a3,0x8002
8000fedc:	24c60e48 	addiu	a2,a2,3656
8000fee0:	0c006b13 	jal	8001ac4c <__panic>
8000fee4:	24e72cb8 	addiu	a3,a3,11448
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1055
		for (interp_phnum = 0; interp_phnum < interp_elf->e_phnum;
		     ++interp_phnum) {
			off_t interp_phoff =
			    interp_elf->e_phoff +
			    sizeof(struct proghdr) * interp_phnum;
			assert((ret =
8000fee8:	3c048002 	lui	a0,0x8002
8000feec:	24842ab8 	addiu	a0,a0,10936
8000fef0:	08003fb5 	j	8000fed4 <do_execve+0x924>
8000fef4:	24050422 	li	a1,1058
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1045
		assert(interp_fd >= 0);
		struct elfhdr interp___elf, *interp_elf = &interp___elf;
		assert((ret =
			load_icode_read(interp_fd, interp_elf,
					sizeof(struct elfhdr), 0)) == 0);
		assert(interp_elf->e_magic == ELF_MAGIC);
8000fef8:	3c048002 	lui	a0,0x8002
8000fefc:	3c068002 	lui	a2,0x8002
8000ff00:	3c078002 	lui	a3,0x8002
8000ff04:	24842ab8 	addiu	a0,a0,10936
8000ff08:	24050415 	li	a1,1045
8000ff0c:	24c60e48 	addiu	a2,a2,3656
8000ff10:	0c006b13 	jal	8001ac4c <__panic>
8000ff14:	24e72c94 	addiu	a3,a3,11412
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1042
		load_icode_read(fd, interp_path, ph->p_filesz, ph->p_offset);

		int interp_fd = sysfile_open(interp_path, O_RDONLY);
		assert(interp_fd >= 0);
		struct elfhdr interp___elf, *interp_elf = &interp___elf;
		assert((ret =
8000ff18:	3c048002 	lui	a0,0x8002
8000ff1c:	3c068002 	lui	a2,0x8002
8000ff20:	3c078002 	lui	a3,0x8002
8000ff24:	24842ab8 	addiu	a0,a0,10936
8000ff28:	24050414 	li	a1,1044
8000ff2c:	24c60e48 	addiu	a2,a2,3656
8000ff30:	0c006b13 	jal	8001ac4c <__panic>
8000ff34:	24e72c44 	addiu	a3,a3,11332
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1040

		char *interp_path = (char *)kmalloc(ph->p_filesz);
		load_icode_read(fd, interp_path, ph->p_filesz, ph->p_offset);

		int interp_fd = sysfile_open(interp_path, O_RDONLY);
		assert(interp_fd >= 0);
8000ff38:	3c048002 	lui	a0,0x8002
8000ff3c:	3c068002 	lui	a2,0x8002
8000ff40:	3c078002 	lui	a3,0x8002
8000ff44:	24842ab8 	addiu	a0,a0,10936
8000ff48:	24050410 	li	a1,1040
8000ff4c:	24c60e48 	addiu	a2,a2,3656
8000ff50:	0c006b13 	jal	8001ac4c <__panic>
8000ff54:	24e72c34 	addiu	a3,a3,11316

8000ff58 <do_yield>:
do_yield():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1306
}

// do_yield - ask the scheduler to reschedule
int do_yield(void)
{
	current->need_resched = 1;
8000ff58:	3c028015 	lui	v0,0x8015
8000ff5c:	8c4377a4 	lw	v1,30628(v0)
8000ff60:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1308
	return 0;
}
8000ff64:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1306
}

// do_yield - ask the scheduler to reschedule
int do_yield(void)
{
	current->need_resched = 1;
8000ff68:	ac640018 	sw	a0,24(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1308
	return 0;
}
8000ff6c:	03e00008 	jr	ra
8000ff70:	00000000 	nop

8000ff74 <do_wait>:
do_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1314

// do_wait - wait one OR any children with PROC_ZOMBIE state, and free memory space of kernel stack
//         - proc struct of this child.
// NOTE: only after do_wait function, all resources of the child proces are free.
int do_wait(int pid, int *code_store)
{
8000ff74:	27bdffb8 	addiu	sp,sp,-72
8000ff78:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1315
	struct mm_struct *mm = current->mm;
8000ff7c:	3c108015 	lui	s0,0x8015
8000ff80:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1314

// do_wait - wait one OR any children with PROC_ZOMBIE state, and free memory space of kernel stack
//         - proc struct of this child.
// NOTE: only after do_wait function, all resources of the child proces are free.
int do_wait(int pid, int *code_store)
{
8000ff84:	afb30030 	sw	s3,48(sp)
8000ff88:	afb2002c 	sw	s2,44(sp)
8000ff8c:	afb10028 	sw	s1,40(sp)
8000ff90:	afbf0044 	sw	ra,68(sp)
8000ff94:	afb70040 	sw	s7,64(sp)
8000ff98:	afb6003c 	sw	s6,60(sp)
8000ff9c:	afb50038 	sw	s5,56(sp)
8000ffa0:	afb40034 	sw	s4,52(sp)
8000ffa4:	00a09821 	move	s3,a1
8000ffa8:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1316
	struct mm_struct *mm = current->mm;
	if (code_store != NULL) {
8000ffac:	10a00007 	beqz	a1,8000ffcc <do_wait+0x58>
8000ffb0:	8c520020 	lw	s2,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1317
		if (!user_mem_check(mm, (uintptr_t) code_store, sizeof(int), 1)) {
8000ffb4:	02402021 	move	a0,s2
8000ffb8:	24060004 	li	a2,4
8000ffbc:	0c00507f 	jal	800141fc <user_mem_check>
8000ffc0:	24070001 	li	a3,1
8000ffc4:	1040004b 	beqz	v0,800100f4 <do_wait+0x180>
8000ffc8:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1375
		} while (cproc != current);
	}
*/
	if (haskid) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_CHILD;
8000ffcc:	3c158000 	lui	s5,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1331
	haskid = 0;
	if (pid != 0) {
    	proc = find_proc(pid);
            if (proc != NULL && proc->parent == current) {
         	haskid = 1;
                if (proc->state == PROC_ZOMBIE) {
8000ffd0:	24140003 	li	s4,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1374
			cproc = next_thread(cproc);
		} while (cproc != current);
	}
*/
	if (haskid) {
		current->state = PROC_SLEEPING;
8000ffd4:	24160001 	li	s6,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1375
		current->wait_state = WT_CHILD;
8000ffd8:	26b50001 	addiu	s5,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1327
	struct proc_struct *proc;//, *cproc;
	bool intr_flag, haskid;
repeat:
	//cproc = current;
	haskid = 0;
	if (pid != 0) {
8000ffdc:	16200050 	bnez	s1,80010120 <do_wait+0x1ac>
8000ffe0:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1337
                   goto found;
                }
            }
        }
        else {
            proc = current->cptr;
8000ffe4:	8c570088 	lw	s7,136(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1338
            for (; proc != NULL; proc = proc->optr) {
8000ffe8:	56e00006 	bnezl	s7,80010004 <do_wait+0x90>
8000ffec:	8ee30000 	lw	v1,0(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1408
			}
		}
		unlock_mm(mm);
	}
	return ret;
}
8000fff0:	0800405b 	j	8001016c <do_wait+0x1f8>
8000fff4:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1338
                }
            }
        }
        else {
            proc = current->cptr;
            for (; proc != NULL; proc = proc->optr) {
8000fff8:	52e00055 	beqzl	s7,80010150 <do_wait+0x1dc>
8000fffc:	ac560000 	sw	s6,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1340
                haskid = 1;
                if (proc->state == PROC_ZOMBIE) {
80010000:	8ee30000 	lw	v1,0(s7)
80010004:	5474fffc 	bnel	v1,s4,8000fff8 <do_wait+0x84>
80010008:	8ef70090 	lw	s7,144(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1383
		goto repeat;
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
8001000c:	3c028015 	lui	v0,0x8015
80010010:	8c4277a8 	lw	v0,30632(v0)
80010014:	12e20062 	beq	s7,v0,800101a0 <do_wait+0x22c>
80010018:	3c028015 	lui	v0,0x8015
8001001c:	8c427798 	lw	v0,30616(v0)
80010020:	12e20060 	beq	s7,v0,800101a4 <do_wait+0x230>
80010024:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1386
		panic("wait idleproc or initproc.\n");
	}
	int exit_code = proc->exit_code;
80010028:	8ee20080 	lw	v0,128(s7)
8001002c:	afa20010 	sw	v0,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80010030:	40026000 	mfc0	v0,c0_status
80010034:	30420001 	andi	v0,v0,0x1
80010038:	10400004 	beqz	v0,8001004c <do_wait+0xd8>
8001003c:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80010040:	0c006d0c 	jal	8001b430 <intr_disable>
80010044:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80010048:	24050001 	li	a1,1
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001004c:	8ee40078 	lw	a0,120(s7)
80010050:	8ee3007c 	lw	v1,124(s7)
remove_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:130

// remove_links - clean the relation links of process
static void remove_links(struct proc_struct *proc)
{
	list_del(&(proc->list_link));
	if (proc->optr != NULL) {
80010054:	8ee20090 	lw	v0,144(s7)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80010058:	ac830004 	sw	v1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8001005c:	ac640000 	sw	a0,0(v1)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80010060:	8ee40070 	lw	a0,112(s7)
80010064:	8ee30074 	lw	v1,116(s7)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80010068:	ac830004 	sw	v1,4(a0)
remove_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:130
8001006c:	10400003 	beqz	v0,8001007c <do_wait+0x108>
80010070:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:131
		proc->optr->yptr = proc->yptr;
80010074:	8ee3008c 	lw	v1,140(s7)
80010078:	ac43008c 	sw	v1,140(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:133
	}
	if (proc->yptr != NULL) {
8001007c:	8ee3008c 	lw	v1,140(s7)
80010080:	50600045 	beqzl	v1,80010198 <do_wait+0x224>
80010084:	8ee3001c 	lw	v1,28(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:134
		proc->yptr->optr = proc->optr;
80010088:	ac620090 	sw	v0,144(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:138
	} else {
		proc->parent->cptr = proc->optr;
	}
	nr_process--;
8001008c:	3c028015 	lui	v0,0x8015
80010090:	8c436548 	lw	v1,25928(v0)
80010094:	2463ffff 	addiu	v1,v1,-1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80010098:	10a00003 	beqz	a1,800100a8 <do_wait+0x134>
8001009c:	ac436548 	sw	v1,25928(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800100a0:	0c006d08 	jal	8001b420 <intr_enable>
800100a4:	00000000 	nop
do_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1393
	{
		unhash_proc(proc);
		remove_links(proc);
	}
	local_intr_restore(intr_flag);
	put_kstack(proc);
800100a8:	0c003ad3 	jal	8000eb4c <put_kstack>
800100ac:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1394
	kfree(proc);
800100b0:	0c0054b9 	jal	800152e4 <kfree>
800100b4:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1397

	int ret = 0;
	if (code_store != NULL) {
800100b8:	1260000e 	beqz	s3,800100f4 <do_wait+0x180>
800100bc:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1398
		lock_mm(mm);
800100c0:	0c004c2e 	jal	800130b8 <lock_mm>
800100c4:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1401
		{
			if (!copy_to_user
			    (mm, code_store, &exit_code, sizeof(int))) {
800100c8:	02402021 	move	a0,s2
800100cc:	02602821 	move	a1,s3
800100d0:	27a60010 	addiu	a2,sp,16
800100d4:	0c007950 	jal	8001e540 <copy_to_user>
800100d8:	24070004 	li	a3,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1396
	}
	local_intr_restore(intr_flag);
	put_kstack(proc);
	kfree(proc);

	int ret = 0;
800100dc:	2403ffea 	li	v1,-22
800100e0:	0002180b 	movn	v1,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1405
			if (!copy_to_user
			    (mm, code_store, &exit_code, sizeof(int))) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
800100e4:	02402021 	move	a0,s2
800100e8:	0c004c3f 	jal	800130fc <unlock_mm>
800100ec:	afa30018 	sw	v1,24(sp)
800100f0:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1408
	}
	return ret;
}
800100f4:	8fbf0044 	lw	ra,68(sp)
800100f8:	8fb70040 	lw	s7,64(sp)
800100fc:	8fb6003c 	lw	s6,60(sp)
80010100:	8fb50038 	lw	s5,56(sp)
80010104:	8fb40034 	lw	s4,52(sp)
80010108:	8fb30030 	lw	s3,48(sp)
8001010c:	8fb2002c 	lw	s2,44(sp)
80010110:	8fb10028 	lw	s1,40(sp)
80010114:	8fb00024 	lw	s0,36(sp)
80010118:	03e00008 	jr	ra
8001011c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1328
	bool intr_flag, haskid;
repeat:
	//cproc = current;
	haskid = 0;
	if (pid != 0) {
    	proc = find_proc(pid);
80010120:	0c003b4c 	jal	8000ed30 <find_proc>
80010124:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1329
            if (proc != NULL && proc->parent == current) {
80010128:	1040000f 	beqz	v0,80010168 <do_wait+0x1f4>
8001012c:	0040b821 	move	s7,v0
80010130:	8c42001c 	lw	v0,28(v0)
80010134:	8e0377a4 	lw	v1,30628(s0)
80010138:	1443000c 	bne	v0,v1,8001016c <do_wait+0x1f8>
8001013c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1331
         	haskid = 1;
                if (proc->state == PROC_ZOMBIE) {
80010140:	8ee30000 	lw	v1,0(s7)
80010144:	5074ffb2 	beql	v1,s4,80010010 <do_wait+0x9c>
80010148:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1374
			cproc = next_thread(cproc);
		} while (cproc != current);
	}
*/
	if (haskid) {
		current->state = PROC_SLEEPING;
8001014c:	ac560000 	sw	s6,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1376
		current->wait_state = WT_CHILD;
		schedule();
80010150:	0c00059f 	jal	8000167c <schedule>
80010154:	ac550084 	sw	s5,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1377
		may_killed();
80010158:	0c003b69 	jal	8000eda4 <may_killed>
8001015c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1378
		goto repeat;
80010160:	08003ff7 	j	8000ffdc <do_wait+0x68>
80010164:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1408
			}
		}
		unlock_mm(mm);
	}
	return ret;
}
80010168:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1380
		current->wait_state = WT_CHILD;
		schedule();
		may_killed();
		goto repeat;
	}
	return -E_BAD_PROC;
8001016c:	2402fffd 	li	v0,-3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1408
			}
		}
		unlock_mm(mm);
	}
	return ret;
}
80010170:	8fb70040 	lw	s7,64(sp)
80010174:	8fb6003c 	lw	s6,60(sp)
80010178:	8fb50038 	lw	s5,56(sp)
8001017c:	8fb40034 	lw	s4,52(sp)
80010180:	8fb30030 	lw	s3,48(sp)
80010184:	8fb2002c 	lw	s2,44(sp)
80010188:	8fb10028 	lw	s1,40(sp)
8001018c:	8fb00024 	lw	s0,36(sp)
80010190:	03e00008 	jr	ra
80010194:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:136
		proc->optr->yptr = proc->yptr;
	}
	if (proc->yptr != NULL) {
		proc->yptr->optr = proc->optr;
	} else {
		proc->parent->cptr = proc->optr;
80010198:	08004023 	j	8001008c <do_wait+0x118>
8001019c:	ac620088 	sw	v0,136(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1384
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
		panic("wait idleproc or initproc.\n");
800101a0:	3c048002 	lui	a0,0x8002
800101a4:	3c068002 	lui	a2,0x8002
800101a8:	24842ab8 	addiu	a0,a0,10936
800101ac:	24050568 	li	a1,1384
800101b0:	0c006b13 	jal	8001ac4c <__panic>
800101b4:	24c62d4c 	addiu	a2,a2,11596

800101b8 <init_main>:
init_main():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1984
{
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
800101b8:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1979
	kprintf("user_main execve failed, no /bin/sh?.\n");
}

// init_main - the second kernel thread used to create kswapd_main & user_main kernel threads
static int init_main(void *arg)
{
800101bc:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1984
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
800101c0:	24842d68 	addiu	a0,a0,11624
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1979
	kprintf("user_main execve failed, no /bin/sh?.\n");
}

// init_main - the second kernel thread used to create kswapd_main & user_main kernel threads
static int init_main(void *arg)
{
800101c4:	afbf0024 	sw	ra,36(sp)
800101c8:	afb30020 	sw	s3,32(sp)
800101cc:	afb2001c 	sw	s2,28(sp)
800101d0:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1984
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
800101d4:	0c0011ca 	jal	80004728 <vfs_set_bootfs>
800101d8:	afb00014 	sw	s0,20(sp)
800101dc:	14400039 	bnez	v0,800102c4 <init_main+0x10c>
800101e0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1990
		panic("set boot fs failed: %e.\n", ret);
	}
#ifdef DEBUG_PROCESS
	kprintf("exit vfs_set_bootfs\n");
#endif
	size_t nr_used_pages_store = nr_used_pages();
800101e4:	0c007922 	jal	8001e488 <nr_used_pages>
800101e8:	3c108015 	lui	s0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1991
	size_t slab_allocated_store = slab_allocated();
800101ec:	0c00545a 	jal	80015168 <slab_allocated>
800101f0:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1998
	unsigned int nr_process_store = nr_process;

#ifdef DEBUG_PROCESS
	kprintf("create thread\n");
#endif
	int pid = ucore_kernel_thread(user_main, NULL, 0);
800101f4:	3c048001 	lui	a0,0x8001
800101f8:	2484de8c 	addiu	a0,a0,-8564
800101fc:	00002821 	move	a1,zero
80010200:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1991
	}
#ifdef DEBUG_PROCESS
	kprintf("exit vfs_set_bootfs\n");
#endif
	size_t nr_used_pages_store = nr_used_pages();
	size_t slab_allocated_store = slab_allocated();
80010204:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1998
	unsigned int nr_process_store = nr_process;

#ifdef DEBUG_PROCESS
	kprintf("create thread\n");
#endif
	int pid = ucore_kernel_thread(user_main, NULL, 0);
80010208:	0c007a3d 	jal	8001e8f4 <ucore_kernel_thread>
8001020c:	8e116548 	lw	s1,25928(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1999
	if (pid <= 0) {
80010210:	5c400008 	bgtzl	v0,80010234 <init_main+0x7c>
80010214:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2000
		panic("create user_main failed.\n");
80010218:	080040cc 	j	80010330 <init_main+0x178>
8001021c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2006
	}
#ifdef DEBUG_PROCESS
	kprintf("sche thread\n");
#endif
	while (do_wait(0, NULL) == 0) {
		if (nr_process_store == nr_process) {
80010220:	12220008 	beq	s1,v0,80010244 <init_main+0x8c>
80010224:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2009
			break;
		}
		schedule();
80010228:	0c00059f 	jal	8000167c <schedule>
8001022c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2005
		panic("create user_main failed.\n");
	}
#ifdef DEBUG_PROCESS
	kprintf("sche thread\n");
#endif
	while (do_wait(0, NULL) == 0) {
80010230:	00002021 	move	a0,zero
80010234:	0c003fdd 	jal	8000ff74 <do_wait>
80010238:	00002821 	move	a1,zero
8001023c:	1040fff8 	beqz	v0,80010220 <init_main+0x68>
80010240:	8e026548 	lw	v0,25928(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2022
		}
		schedule();
	}
#endif

	mbox_cleanup();
80010244:	0c006619 	jal	80019864 <mbox_cleanup>
80010248:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2023
	fs_cleanup();
8001024c:	0c003278 	jal	8000c9e0 <fs_cleanup>
80010250:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2025

	kprintf("all user-mode processes have quit.\n");
80010254:	3c048002 	lui	a0,0x8002
80010258:	0c007aa6 	jal	8001ea98 <kprintf>
8001025c:	24842da8 	addiu	a0,a0,11688
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2033
	       && initproc->optr == NULL);
	assert(kswapd->cptr == NULL && kswapd->yptr == NULL
	       && kswapd->optr == NULL);
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
80010260:	3c028015 	lui	v0,0x8015
80010264:	8c4377a0 	lw	v1,30624(v0)
80010268:	8e026548 	lw	v0,25928(s0)
8001026c:	24630001 	addiu	v1,v1,1
80010270:	14620028 	bne	v1,v0,80010314 <init_main+0x15c>
80010274:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2035
#endif
	assert(nr_used_pages_store == nr_used_pages());
80010278:	0c007922 	jal	8001e488 <nr_used_pages>
8001027c:	00000000 	nop
80010280:	1662001d 	bne	s3,v0,800102f8 <init_main+0x140>
80010284:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2036
	assert(slab_allocated_store == slab_allocated());
80010288:	0c00545a 	jal	80015168 <slab_allocated>
8001028c:	00000000 	nop
80010290:	54520012 	bnel	v0,s2,800102dc <init_main+0x124>
80010294:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2037
	kprintf("init check memory pass.\n");
80010298:	3c048002 	lui	a0,0x8002
8001029c:	0c007aa6 	jal	8001ea98 <kprintf>
800102a0:	24842e48 	addiu	a0,a0,11848
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2039
	return 0;
}
800102a4:	8fbf0024 	lw	ra,36(sp)
800102a8:	00001021 	move	v0,zero
800102ac:	8fb30020 	lw	s3,32(sp)
800102b0:	8fb2001c 	lw	s2,28(sp)
800102b4:	8fb10018 	lw	s1,24(sp)
800102b8:	8fb00014 	lw	s0,20(sp)
800102bc:	03e00008 	jr	ra
800102c0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1985
	int ret;
#ifdef DEBUG_PROCESS
	kprintf("enter vfs_set_bootfs\n");
#endif
	if ((ret = vfs_set_bootfs("disk0:")) != 0) {
		panic("set boot fs failed: %e.\n", ret);
800102c4:	3c068002 	lui	a2,0x8002
800102c8:	24842ab8 	addiu	a0,a0,10936
800102cc:	240507c1 	li	a1,1985
800102d0:	24c62d70 	addiu	a2,a2,11632
800102d4:	0c006b13 	jal	8001ac4c <__panic>
800102d8:	00403821 	move	a3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2036
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
#endif
	assert(nr_used_pages_store == nr_used_pages());
	assert(slab_allocated_store == slab_allocated());
800102dc:	3c068002 	lui	a2,0x8002
800102e0:	3c078002 	lui	a3,0x8002
800102e4:	24842ab8 	addiu	a0,a0,10936
800102e8:	240507f4 	li	a1,2036
800102ec:	24c60e48 	addiu	a2,a2,3656
800102f0:	0c006b13 	jal	8001ac4c <__panic>
800102f4:	24e72e1c 	addiu	a3,a3,11804
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2035
	       && kswapd->optr == NULL);
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
#endif
	assert(nr_used_pages_store == nr_used_pages());
800102f8:	3c068002 	lui	a2,0x8002
800102fc:	3c078002 	lui	a3,0x8002
80010300:	24842ab8 	addiu	a0,a0,10936
80010304:	240507f3 	li	a1,2035
80010308:	24c60e48 	addiu	a2,a2,3656
8001030c:	0c006b13 	jal	8001ac4c <__panic>
80010310:	24e72df4 	addiu	a3,a3,11764
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2033
	       && initproc->optr == NULL);
	assert(kswapd->cptr == NULL && kswapd->yptr == NULL
	       && kswapd->optr == NULL);
	assert(nr_process == 2 + pls_read(lcpu_count));
#else
	assert(nr_process == 1 + pls_read(lcpu_count));
80010314:	3c068002 	lui	a2,0x8002
80010318:	3c078002 	lui	a3,0x8002
8001031c:	24842ab8 	addiu	a0,a0,10936
80010320:	240507f1 	li	a1,2033
80010324:	24c60e48 	addiu	a2,a2,3656
80010328:	0c006b13 	jal	8001ac4c <__panic>
8001032c:	24e72dcc 	addiu	a3,a3,11724
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2000
#ifdef DEBUG_PROCESS
	kprintf("create thread\n");
#endif
	int pid = ucore_kernel_thread(user_main, NULL, 0);
	if (pid <= 0) {
		panic("create user_main failed.\n");
80010330:	3c068002 	lui	a2,0x8002
80010334:	24842ab8 	addiu	a0,a0,10936
80010338:	240507d0 	li	a1,2000
8001033c:	0c006b13 	jal	8001ac4c <__panic>
80010340:	24c62d8c 	addiu	a2,a2,11660

80010344 <do_linux_waitpid>:
do_linux_waitpid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1411
	}
	return ret;
}

int do_linux_waitpid(int pid, int *code_store)
{
80010344:	27bdffb8 	addiu	sp,sp,-72
80010348:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1412
	struct mm_struct *mm = current->mm;
8001034c:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1411
	}
	return ret;
}

int do_linux_waitpid(int pid, int *code_store)
{
80010350:	afb40034 	sw	s4,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1412
	struct mm_struct *mm = current->mm;
80010354:	8e3477a4 	lw	s4,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1411
	}
	return ret;
}

int do_linux_waitpid(int pid, int *code_store)
{
80010358:	afb30030 	sw	s3,48(sp)
8001035c:	afb2002c 	sw	s2,44(sp)
80010360:	afb00024 	sw	s0,36(sp)
80010364:	afbf0044 	sw	ra,68(sp)
80010368:	afb70040 	sw	s7,64(sp)
8001036c:	afb6003c 	sw	s6,60(sp)
80010370:	afb50038 	sw	s5,56(sp)
80010374:	00a09821 	move	s3,a1
80010378:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1413
	struct mm_struct *mm = current->mm;
	if (code_store != NULL) {
8001037c:	10a00007 	beqz	a1,8001039c <do_linux_waitpid+0x58>
80010380:	8e920020 	lw	s2,32(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1414
		if (!user_mem_check(mm, (uintptr_t) code_store, sizeof(int), 1)) {
80010384:	02402021 	move	a0,s2
80010388:	24060004 	li	a2,4
8001038c:	0c00507f 	jal	800141fc <user_mem_check>
80010390:	24070001 	li	a3,1
80010394:	1040006c 	beqz	v0,80010548 <do_linux_waitpid+0x204>
80010398:	8e3477a4 	lw	s4,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1440
				cproc = next_thread(cproc);
			} while (cproc != current);
		}
	}
	/* we do NOT have group id, so.. */
	else if (pid == 0 || pid == -1) {	/* pid == 0 */
8001039c:	26170001 	addiu	s7,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1457
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_CHILD;
800103a0:	3c168000 	lui	s6,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1430
		proc = find_proc(pid);
		if (proc != NULL) {
			do {
				if (proc->parent == cproc) {
					haskid = 1;
					if (proc->state == PROC_ZOMBIE) {
800103a4:	24150003 	li	s5,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1440
				cproc = next_thread(cproc);
			} while (cproc != current);
		}
	}
	/* we do NOT have group id, so.. */
	else if (pid == 0 || pid == -1) {	/* pid == 0 */
800103a8:	2ef70002 	sltiu	s7,s7,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1457
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_CHILD;
800103ac:	26d60001 	addiu	s6,s6,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1424
	struct proc_struct *proc, *cproc;
	bool intr_flag, haskid;
repeat:
	cproc = current;
	haskid = 0;
	if (pid > 0) {
800103b0:	1a00001a 	blez	s0,8001041c <do_linux_waitpid+0xd8>
800103b4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1425
		proc = find_proc(pid);
800103b8:	0c003b4c 	jal	8000ed30 <find_proc>
800103bc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1426
		if (proc != NULL) {
800103c0:	5040000a 	beqzl	v0,800103ec <do_linux_waitpid+0xa8>
800103c4:	2410fffd 	li	s0,-3
800103c8:	8c44001c 	lw	a0,28(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1436
						goto found;
					}
					break;
				}
				cproc = next_thread(cproc);
			} while (cproc != current);
800103cc:	8e2377a4 	lw	v1,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1428
	haskid = 0;
	if (pid > 0) {
		proc = find_proc(pid);
		if (proc != NULL) {
			do {
				if (proc->parent == cproc) {
800103d0:	50940080 	beql	a0,s4,800105d4 <do_linux_waitpid+0x290>
800103d4:	8c440000 	lw	a0,0(v0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800103d8:	8e940098 	lw	s4,152(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1435
					if (proc->state == PROC_ZOMBIE) {
						goto found;
					}
					break;
				}
				cproc = next_thread(cproc);
800103dc:	2694ff6c 	addiu	s4,s4,-148
do_linux_waitpid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1436
			} while (cproc != current);
800103e0:	1683fffb 	bne	s4,v1,800103d0 <do_linux_waitpid+0x8c>
800103e4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1462
		current->wait_state = WT_CHILD;
		schedule();
		may_killed();
		goto repeat;
	}
	return -E_BAD_PROC;
800103e8:	2410fffd 	li	s0,-3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1491
			}
		}
		unlock_mm(mm);
	}
	return (ret == 0) ? return_pid : ret;
}
800103ec:	8fbf0044 	lw	ra,68(sp)
800103f0:	02001021 	move	v0,s0
800103f4:	8fb70040 	lw	s7,64(sp)
800103f8:	8fb6003c 	lw	s6,60(sp)
800103fc:	8fb50038 	lw	s5,56(sp)
80010400:	8fb40034 	lw	s4,52(sp)
80010404:	8fb30030 	lw	s3,48(sp)
80010408:	8fb2002c 	lw	s2,44(sp)
8001040c:	8fb10028 	lw	s1,40(sp)
80010410:	8fb00024 	lw	s0,36(sp)
80010414:	03e00008 	jr	ra
80010418:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1440
				cproc = next_thread(cproc);
			} while (cproc != current);
		}
	}
	/* we do NOT have group id, so.. */
	else if (pid == 0 || pid == -1) {	/* pid == 0 */
8001041c:	12e0004a 	beqz	s7,80010548 <do_linux_waitpid+0x204>
80010420:	02802021 	move	a0,s4
80010424:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1442
		do {
			proc = cproc->cptr;
80010428:	8c820088 	lw	v0,136(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1443
			for (; proc != NULL; proc = proc->optr) {
8001042c:	54400006 	bnezl	v0,80010448 <do_linux_waitpid+0x104>
80010430:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80010434:	08004160 	j	80010580 <do_linux_waitpid+0x23c>
80010438:	8c840098 	lw	a0,152(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1443
8001043c:	1040004f 	beqz	v0,8001057c <do_linux_waitpid+0x238>
80010440:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1445
				haskid = 1;
				if (proc->state == PROC_ZOMBIE) {
80010444:	8c430000 	lw	v1,0(v0)
80010448:	5475fffc 	bnel	v1,s5,8001043c <do_linux_waitpid+0xf8>
8001044c:	8c420090 	lw	v0,144(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1465
		goto repeat;
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
80010450:	3c038015 	lui	v1,0x8015
80010454:	8c6377a8 	lw	v1,30632(v1)
80010458:	1043006a 	beq	v0,v1,80010604 <do_linux_waitpid+0x2c0>
8001045c:	3c038015 	lui	v1,0x8015
80010460:	8c637798 	lw	v1,30616(v1)
80010464:	10430068 	beq	v0,v1,80010608 <do_linux_waitpid+0x2c4>
80010468:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1468
		panic("wait idleproc or initproc.\n");
	}
	int exit_code = proc->exit_code;
8001046c:	8c510080 	lw	s1,128(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1469
	int return_pid = proc->pid;
80010470:	8c500004 	lw	s0,4(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80010474:	40036000 	mfc0	v1,c0_status
80010478:	30630001 	andi	v1,v1,0x1
8001047c:	10600005 	beqz	v1,80010494 <do_linux_waitpid+0x150>
80010480:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80010484:	0c006d0c 	jal	8001b430 <intr_disable>
80010488:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8001048c:	8fa20018 	lw	v0,24(sp)
80010490:	24060001 	li	a2,1
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80010494:	8c450078 	lw	a1,120(v0)
80010498:	8c44007c 	lw	a0,124(v0)
remove_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:130

// remove_links - clean the relation links of process
static void remove_links(struct proc_struct *proc)
{
	list_del(&(proc->list_link));
	if (proc->optr != NULL) {
8001049c:	8c430090 	lw	v1,144(v0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800104a0:	aca40004 	sw	a0,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
800104a4:	ac850000 	sw	a1,0(a0)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
800104a8:	8c450070 	lw	a1,112(v0)
800104ac:	8c440074 	lw	a0,116(v0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800104b0:	aca40004 	sw	a0,4(a1)
remove_links():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:130
800104b4:	10600003 	beqz	v1,800104c4 <do_linux_waitpid+0x180>
800104b8:	ac850000 	sw	a1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:131
		proc->optr->yptr = proc->yptr;
800104bc:	8c44008c 	lw	a0,140(v0)
800104c0:	ac64008c 	sw	a0,140(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:133
	}
	if (proc->yptr != NULL) {
800104c4:	8c44008c 	lw	a0,140(v0)
800104c8:	5080004c 	beqzl	a0,800105fc <do_linux_waitpid+0x2b8>
800104cc:	8c44001c 	lw	a0,28(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:134
		proc->yptr->optr = proc->optr;
800104d0:	ac830090 	sw	v1,144(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:138
	} else {
		proc->parent->cptr = proc->optr;
	}
	nr_process--;
800104d4:	3c038015 	lui	v1,0x8015
800104d8:	8c646548 	lw	a0,25928(v1)
800104dc:	2484ffff 	addiu	a0,a0,-1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800104e0:	10c00004 	beqz	a2,800104f4 <do_linux_waitpid+0x1b0>
800104e4:	ac646548 	sw	a0,25928(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800104e8:	0c006d08 	jal	8001b420 <intr_enable>
800104ec:	afa20018 	sw	v0,24(sp)
800104f0:	8fa20018 	lw	v0,24(sp)
do_linux_waitpid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1476
	{
		unhash_proc(proc);
		remove_links(proc);
	}
	local_intr_restore(intr_flag);
	put_kstack(proc);
800104f4:	00402021 	move	a0,v0
800104f8:	0c003ad3 	jal	8000eb4c <put_kstack>
800104fc:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1477
	kfree(proc);
80010500:	8fa20018 	lw	v0,24(sp)
80010504:	0c0054b9 	jal	800152e4 <kfree>
80010508:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1480

	int ret = 0;
	if (code_store != NULL) {
8001050c:	1260ffb8 	beqz	s3,800103f0 <do_linux_waitpid+0xac>
80010510:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1481
		lock_mm(mm);
80010514:	0c004c2e 	jal	800130b8 <lock_mm>
80010518:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1483
		{
			int status = exit_code << 8;
8001051c:	00111200 	sll	v0,s1,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1484
			if (!copy_to_user(mm, code_store, &status, sizeof(int))) {
80010520:	02402021 	move	a0,s2
80010524:	02602821 	move	a1,s3
80010528:	27a60010 	addiu	a2,sp,16
8001052c:	24070004 	li	a3,4
80010530:	0c007950 	jal	8001e540 <copy_to_user>
80010534:	afa20010 	sw	v0,16(sp)
80010538:	14400018 	bnez	v0,8001059c <do_linux_waitpid+0x258>
8001053c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1488
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
80010540:	0c004c3f 	jal	800130fc <unlock_mm>
80010544:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1491
	}
	return (ret == 0) ? return_pid : ret;
}
80010548:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1485
	if (code_store != NULL) {
		lock_mm(mm);
		{
			int status = exit_code << 8;
			if (!copy_to_user(mm, code_store, &status, sizeof(int))) {
				ret = -E_INVAL;
8001054c:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1491
			}
		}
		unlock_mm(mm);
	}
	return (ret == 0) ? return_pid : ret;
}
80010550:	02001021 	move	v0,s0
80010554:	8fb70040 	lw	s7,64(sp)
80010558:	8fb6003c 	lw	s6,60(sp)
8001055c:	8fb50038 	lw	s5,56(sp)
80010560:	8fb40034 	lw	s4,52(sp)
80010564:	8fb30030 	lw	s3,48(sp)
80010568:	8fb2002c 	lw	s2,44(sp)
8001056c:	8fb10028 	lw	s1,40(sp)
80010570:	8fb00024 	lw	s0,36(sp)
80010574:	03e00008 	jr	ra
80010578:	27bd0048 	addiu	sp,sp,72
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001057c:	8c840098 	lw	a0,152(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1449
				haskid = 1;
				if (proc->state == PROC_ZOMBIE) {
					goto found;
				}
			}
			cproc = next_thread(cproc);
80010580:	2484ff6c 	addiu	a0,a0,-148
do_linux_waitpid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1450
		} while (cproc != current);
80010584:	5684ffa9 	bnel	s4,a0,8001042c <do_linux_waitpid+0xe8>
80010588:	8c820088 	lw	v0,136(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1455
	} else {		//pid<-1
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
8001058c:	5060ff97 	beqzl	v1,800103ec <do_linux_waitpid+0xa8>
80010590:	2410fffd 	li	s0,-3
80010594:	08004177 	j	800105dc <do_linux_waitpid+0x298>
80010598:	02801821 	move	v1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1488
			int status = exit_code << 8;
			if (!copy_to_user(mm, code_store, &status, sizeof(int))) {
				ret = -E_INVAL;
			}
		}
		unlock_mm(mm);
8001059c:	0c004c3f 	jal	800130fc <unlock_mm>
800105a0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1491
	}
	return (ret == 0) ? return_pid : ret;
}
800105a4:	8fbf0044 	lw	ra,68(sp)
800105a8:	02001021 	move	v0,s0
800105ac:	8fb70040 	lw	s7,64(sp)
800105b0:	8fb6003c 	lw	s6,60(sp)
800105b4:	8fb50038 	lw	s5,56(sp)
800105b8:	8fb40034 	lw	s4,52(sp)
800105bc:	8fb30030 	lw	s3,48(sp)
800105c0:	8fb2002c 	lw	s2,44(sp)
800105c4:	8fb10028 	lw	s1,40(sp)
800105c8:	8fb00024 	lw	s0,36(sp)
800105cc:	03e00008 	jr	ra
800105d0:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1430
		proc = find_proc(pid);
		if (proc != NULL) {
			do {
				if (proc->parent == cproc) {
					haskid = 1;
					if (proc->state == PROC_ZOMBIE) {
800105d4:	5095ff9f 	beql	a0,s5,80010454 <do_linux_waitpid+0x110>
800105d8:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1456
	} else {		//pid<-1
		//TODO
		return -E_INVAL;
	}
	if (haskid) {
		current->state = PROC_SLEEPING;
800105dc:	24020001 	li	v0,1
800105e0:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1458
		current->wait_state = WT_CHILD;
		schedule();
800105e4:	0c00059f 	jal	8000167c <schedule>
800105e8:	ac760084 	sw	s6,132(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1459
		may_killed();
800105ec:	0c003b69 	jal	8000eda4 <may_killed>
800105f0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1460
		goto repeat;
800105f4:	080040ec 	j	800103b0 <do_linux_waitpid+0x6c>
800105f8:	8e3477a4 	lw	s4,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:136
		proc->optr->yptr = proc->yptr;
	}
	if (proc->yptr != NULL) {
		proc->yptr->optr = proc->optr;
	} else {
		proc->parent->cptr = proc->optr;
800105fc:	08004135 	j	800104d4 <do_linux_waitpid+0x190>
80010600:	ac830088 	sw	v1,136(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1466
	}
	return -E_BAD_PROC;

found:
	if (proc == idleproc || proc == initproc) {
		panic("wait idleproc or initproc.\n");
80010604:	3c048002 	lui	a0,0x8002
80010608:	3c068002 	lui	a2,0x8002
8001060c:	24842ab8 	addiu	a0,a0,10936
80010610:	240505ba 	li	a1,1466
80010614:	0c006b13 	jal	8001ac4c <__panic>
80010618:	24c62d4c 	addiu	a2,a2,11596

8001061c <do_kill>:
do_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1509
	return -E_KILLED;
}

// do_kill - kill process with pid
int do_kill(int pid, int error_code)
{
8001061c:	27bdffe0 	addiu	sp,sp,-32
80010620:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1511
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
80010624:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1509
	return -E_KILLED;
}

// do_kill - kill process with pid
int do_kill(int pid, int error_code)
{
80010628:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1511
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
8001062c:	0c003b4c 	jal	8000ed30 <find_proc>
80010630:	2410ffea 	li	s0,-22
80010634:	1040000b 	beqz	v0,80010664 <do_kill+0x48>
80010638:	8fa50010 	lw	a1,16(sp)
__do_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1496
}

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
8001063c:	8c43005c 	lw	v1,92(v0)
80010640:	30640001 	andi	a0,v1,0x1
80010644:	14800007 	bnez	a0,80010664 <do_kill+0x48>
80010648:	2410ffdb 	li	s0,-37
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1499
		proc->flags |= PF_EXITING;
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
8001064c:	8c440084 	lw	a0,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1497

// __do_kill - kill a process with PCB by set this process's flags with PF_EXITING
static int __do_kill(struct proc_struct *proc, int error_code)
{
	if (!(proc->flags & PF_EXITING)) {
		proc->flags |= PF_EXITING;
80010650:	34630001 	ori	v1,v1,0x1
80010654:	ac43005c 	sw	v1,92(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1498
		proc->exit_code = error_code;
80010658:	ac450080 	sw	a1,128(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1499
		if (proc->wait_state & WT_INTERRUPTED) {
8001065c:	04800006 	bltz	a0,80010678 <do_kill+0x5c>
80010660:	00008021 	move	s0,zero
do_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1515
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
		return __do_kill(proc, error_code);
	}
	return -E_INVAL;
}
80010664:	8fbf001c 	lw	ra,28(sp)
80010668:	02001021 	move	v0,s0
8001066c:	8fb00018 	lw	s0,24(sp)
80010670:	03e00008 	jr	ra
80010674:	27bd0020 	addiu	sp,sp,32
__do_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1500
{
	if (!(proc->flags & PF_EXITING)) {
		proc->flags |= PF_EXITING;
		proc->exit_code = error_code;
		if (proc->wait_state & WT_INTERRUPTED) {
			wakeup_proc(proc);
80010678:	0c0004f8 	jal	800013e0 <wakeup_proc>
8001067c:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1515
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) != NULL) {
		return __do_kill(proc, error_code);
	}
	return -E_INVAL;
}
80010680:	0800419a 	j	80010668 <do_kill+0x4c>
80010684:	8fbf001c 	lw	ra,28(sp)

80010688 <do_brk>:
do_brk():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1521

// do_brk - adjust(increase/decrease) the size of process heap, align with page size
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
	struct mm_struct *mm = current->mm;
80010688:	3c028015 	lui	v0,0x8015
8001068c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1520
}

// do_brk - adjust(increase/decrease) the size of process heap, align with page size
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
80010690:	27bdffc8 	addiu	sp,sp,-56
80010694:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1521
	struct mm_struct *mm = current->mm;
80010698:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1520
}

// do_brk - adjust(increase/decrease) the size of process heap, align with page size
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
8001069c:	afb10028 	sw	s1,40(sp)
800106a0:	afbf0034 	sw	ra,52(sp)
800106a4:	afb30030 	sw	s3,48(sp)
800106a8:	afb2002c 	sw	s2,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1522
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
800106ac:	12000048 	beqz	s0,800107d0 <do_brk+0x148>
800106b0:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1525
		panic("kernel thread call sys_brk!!.\n");
	}
	if (brk_store == NULL) {
800106b4:	1080002e 	beqz	a0,80010770 <do_brk+0xe8>
800106b8:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1532
		return mm->brk_start;
	}

	uintptr_t brk;

	lock_mm(mm);
800106bc:	0c004c2e 	jal	800130b8 <lock_mm>
800106c0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1533
	if (!copy_from_user(mm, &brk, brk_store, sizeof(uintptr_t), 1)) {
800106c4:	24020001 	li	v0,1
800106c8:	02002021 	move	a0,s0
800106cc:	27a50018 	addiu	a1,sp,24
800106d0:	02203021 	move	a2,s1
800106d4:	24070004 	li	a3,4
800106d8:	0c007936 	jal	8001e4d8 <copy_from_user>
800106dc:	afa20010 	sw	v0,16(sp)
800106e0:	10400037 	beqz	v0,800107c0 <do_brk+0x138>
800106e4:	8fb30018 	lw	s3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1538
		unlock_mm(mm);
		return -E_INVAL;
	}

	if (brk < mm->brk_start) {
800106e8:	8e020024 	lw	v0,36(s0)
800106ec:	0262102b 	sltu	v0,s3,v0
800106f0:	14400011 	bnez	v0,80010738 <do_brk+0xb0>
800106f4:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1541
		goto out_unlock;
	}
	uintptr_t newbrk = ROUNDUP(brk, PGSIZE), oldbrk = mm->brk;
800106f8:	8e120028 	lw	s2,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1542
	assert(oldbrk % PGSIZE == 0);
800106fc:	32420fff 	andi	v0,s2,0xfff
80010700:	14400039 	bnez	v0,800107e8 <do_brk+0x160>
80010704:	26730fff 	addiu	s3,s3,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1541
	}

	if (brk < mm->brk_start) {
		goto out_unlock;
	}
	uintptr_t newbrk = ROUNDUP(brk, PGSIZE), oldbrk = mm->brk;
80010708:	32620fff 	andi	v0,s3,0xfff
8001070c:	02629823 	subu	s3,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1543
	assert(oldbrk % PGSIZE == 0);
	if (newbrk == oldbrk) {
80010710:	12720009 	beq	s3,s2,80010738 <do_brk+0xb0>
80010714:	0272102b 	sltu	v0,s3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1546
		goto out_unlock;
	}
	if (newbrk < oldbrk) {
80010718:	1040001c 	beqz	v0,8001078c <do_brk+0x104>
8001071c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1547
		if (mm_unmap(mm, newbrk, oldbrk - newbrk) != 0) {
80010720:	02602821 	move	a1,s3
80010724:	0c004ee3 	jal	80013b8c <mm_unmap>
80010728:	02533023 	subu	a2,s2,s3
8001072c:	50400001 	beqzl	v0,80010734 <do_brk+0xac>
80010730:	ae130028 	sw	s3,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1560
			goto out_unlock;
		}
	}
	mm->brk = newbrk;
out_unlock:
	copy_to_user(mm, brk_store, &mm->brk, sizeof(uintptr_t));
80010734:	02202821 	move	a1,s1
80010738:	26060028 	addiu	a2,s0,40
8001073c:	24070004 	li	a3,4
80010740:	0c007950 	jal	8001e540 <copy_to_user>
80010744:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1561
	unlock_mm(mm);
80010748:	0c004c3f 	jal	800130fc <unlock_mm>
8001074c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1562
	return 0;
80010750:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1563
}
80010754:	8fbf0034 	lw	ra,52(sp)
80010758:	8fb30030 	lw	s3,48(sp)
8001075c:	8fb2002c 	lw	s2,44(sp)
80010760:	8fb10028 	lw	s1,40(sp)
80010764:	8fb00024 	lw	s0,36(sp)
80010768:	03e00008 	jr	ra
8001076c:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1527
	if (mm == NULL) {
		panic("kernel thread call sys_brk!!.\n");
	}
	if (brk_store == NULL) {
		//     return -E_INVAL;
		return mm->brk_start;
80010770:	8e020024 	lw	v0,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1563
	mm->brk = newbrk;
out_unlock:
	copy_to_user(mm, brk_store, &mm->brk, sizeof(uintptr_t));
	unlock_mm(mm);
	return 0;
}
80010774:	8fb30030 	lw	s3,48(sp)
80010778:	8fb2002c 	lw	s2,44(sp)
8001077c:	8fb10028 	lw	s1,40(sp)
80010780:	8fb00024 	lw	s0,36(sp)
80010784:	03e00008 	jr	ra
80010788:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1551
	if (newbrk < oldbrk) {
		if (mm_unmap(mm, newbrk, oldbrk - newbrk) != 0) {
			goto out_unlock;
		}
	} else {
		if (find_vma_intersection(mm, oldbrk, newbrk + PGSIZE) != NULL) {
8001078c:	02402821 	move	a1,s2
80010790:	0c004cd9 	jal	80013364 <find_vma_intersection>
80010794:	26661000 	addiu	a2,s3,4096
80010798:	1440ffe7 	bnez	v0,80010738 <do_brk+0xb0>
8001079c:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1554
			goto out_unlock;
		}
		if (mm_brk(mm, oldbrk, newbrk - oldbrk) != 0) {
800107a0:	02402821 	move	a1,s2
800107a4:	02002021 	move	a0,s0
800107a8:	0c00503f 	jal	800140fc <mm_brk>
800107ac:	02723023 	subu	a2,s3,s2
800107b0:	1440ffe1 	bnez	v0,80010738 <do_brk+0xb0>
800107b4:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1558
			goto out_unlock;
		}
	}
	mm->brk = newbrk;
800107b8:	080041ce 	j	80010738 <do_brk+0xb0>
800107bc:	ae130028 	sw	s3,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1534

	uintptr_t brk;

	lock_mm(mm);
	if (!copy_from_user(mm, &brk, brk_store, sizeof(uintptr_t), 1)) {
		unlock_mm(mm);
800107c0:	0c004c3f 	jal	800130fc <unlock_mm>
800107c4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1535
		return -E_INVAL;
800107c8:	080041d5 	j	80010754 <do_brk+0xcc>
800107cc:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1523
// NOTE: will change the process vma
int do_brk(uintptr_t * brk_store)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call sys_brk!!.\n");
800107d0:	3c048002 	lui	a0,0x8002
800107d4:	3c068002 	lui	a2,0x8002
800107d8:	24842ab8 	addiu	a0,a0,10936
800107dc:	240505f3 	li	a1,1523
800107e0:	0c006b13 	jal	8001ac4c <__panic>
800107e4:	24c62e64 	addiu	a2,a2,11876
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1542

	if (brk < mm->brk_start) {
		goto out_unlock;
	}
	uintptr_t newbrk = ROUNDUP(brk, PGSIZE), oldbrk = mm->brk;
	assert(oldbrk % PGSIZE == 0);
800107e8:	3c048002 	lui	a0,0x8002
800107ec:	3c068002 	lui	a2,0x8002
800107f0:	3c078002 	lui	a3,0x8002
800107f4:	24842ab8 	addiu	a0,a0,10936
800107f8:	24050606 	li	a1,1542
800107fc:	24c60e48 	addiu	a2,a2,3656
80010800:	0c006b13 	jal	8001ac4c <__panic>
80010804:	24e72e84 	addiu	a3,a3,11908

80010808 <do_linux_brk>:
do_linux_brk():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1569

/* poring from linux */
int do_linux_brk(uintptr_t brk)
{
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
80010808:	3c028015 	lui	v0,0x8015
8001080c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1567
	return 0;
}

/* poring from linux */
int do_linux_brk(uintptr_t brk)
{
80010810:	27bdffd8 	addiu	sp,sp,-40
80010814:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1569
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
80010818:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1567
	return 0;
}

/* poring from linux */
int do_linux_brk(uintptr_t brk)
{
8001081c:	afb10018 	sw	s1,24(sp)
80010820:	afbf0024 	sw	ra,36(sp)
80010824:	afb30020 	sw	s3,32(sp)
80010828:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1572
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
	uint32_t min_brk;

	if (!mm) {
8001082c:	12000038 	beqz	s0,80010910 <do_linux_brk+0x108>
80010830:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1576
		panic("kernel thread call sys_brk!!.\n");
	}

	lock_mm(mm);
80010834:	0c004c2e 	jal	800130b8 <lock_mm>
80010838:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1580

	min_brk = mm->brk_start;

	if (brk < min_brk)
8001083c:	8e020024 	lw	v0,36(s0)
80010840:	0222102b 	sltu	v0,s1,v0
80010844:	14400020 	bnez	v0,800108c8 <do_linux_brk+0xc0>
80010848:	26230fff 	addiu	v1,s1,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1584
		goto out_unlock;

	newbrk = ROUNDUP(brk, PGSIZE);
	oldbrk = ROUNDUP(mm->brk, PGSIZE);
8001084c:	8e040028 	lw	a0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1583
	min_brk = mm->brk_start;

	if (brk < min_brk)
		goto out_unlock;

	newbrk = ROUNDUP(brk, PGSIZE);
80010850:	30720fff 	andi	s2,v1,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1584
	oldbrk = ROUNDUP(mm->brk, PGSIZE);
80010854:	24820fff 	addiu	v0,a0,4095
80010858:	30530fff 	andi	s3,v0,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1583
	min_brk = mm->brk_start;

	if (brk < min_brk)
		goto out_unlock;

	newbrk = ROUNDUP(brk, PGSIZE);
8001085c:	00729023 	subu	s2,v1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1584
	oldbrk = ROUNDUP(mm->brk, PGSIZE);
80010860:	00539823 	subu	s3,v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1586

	if (oldbrk == newbrk)
80010864:	12530008 	beq	s2,s3,80010888 <do_linux_brk+0x80>
80010868:	0091202b 	sltu	a0,a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1589
		goto set_brk;

	if (brk <= mm->brk) {
8001086c:	14800011 	bnez	a0,800108b4 <do_linux_brk+0xac>
80010870:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1590
		if (!mm_unmap(mm, newbrk, oldbrk - newbrk))
80010874:	02402821 	move	a1,s2
80010878:	0c004ee3 	jal	80013b8c <mm_unmap>
8001087c:	02723023 	subu	a2,s3,s2
80010880:	14400012 	bnez	v0,800108cc <do_linux_brk+0xc4>
80010884:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1603
	/* set the brk */
	if (mm_brk(mm, oldbrk, newbrk - oldbrk))
		goto out_unlock;

set_brk:
	mm->brk = brk;
80010888:	ae110028 	sw	s1,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1606
out_unlock:
	retval = mm->brk;
	unlock_mm(mm);
8001088c:	0c004c3f 	jal	800130fc <unlock_mm>
80010890:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1608
	return retval;
}
80010894:	8fbf0024 	lw	ra,36(sp)
80010898:	02201021 	move	v0,s1
8001089c:	8fb30020 	lw	s3,32(sp)
800108a0:	8fb2001c 	lw	s2,28(sp)
800108a4:	8fb10018 	lw	s1,24(sp)
800108a8:	8fb00014 	lw	s0,20(sp)
800108ac:	03e00008 	jr	ra
800108b0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1595
		if (!mm_unmap(mm, newbrk, oldbrk - newbrk))
			goto set_brk;
		goto out_unlock;
	}

	if (find_vma_intersection(mm, oldbrk, newbrk + PGSIZE))
800108b4:	02602821 	move	a1,s3
800108b8:	0c004cd9 	jal	80013364 <find_vma_intersection>
800108bc:	26461000 	addiu	a2,s2,4096
800108c0:	1040000c 	beqz	v0,800108f4 <do_linux_brk+0xec>
800108c4:	02602821 	move	a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1606

set_brk:
	mm->brk = brk;
out_unlock:
	retval = mm->brk;
	unlock_mm(mm);
800108c8:	02002021 	move	a0,s0
800108cc:	0c004c3f 	jal	800130fc <unlock_mm>
800108d0:	8e110028 	lw	s1,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1608
	return retval;
}
800108d4:	8fbf0024 	lw	ra,36(sp)
800108d8:	02201021 	move	v0,s1
800108dc:	8fb30020 	lw	s3,32(sp)
800108e0:	8fb2001c 	lw	s2,28(sp)
800108e4:	8fb10018 	lw	s1,24(sp)
800108e8:	8fb00014 	lw	s0,20(sp)
800108ec:	03e00008 	jr	ra
800108f0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1599

	if (find_vma_intersection(mm, oldbrk, newbrk + PGSIZE))
		goto out_unlock;

	/* set the brk */
	if (mm_brk(mm, oldbrk, newbrk - oldbrk))
800108f4:	02002021 	move	a0,s0
800108f8:	0c00503f 	jal	800140fc <mm_brk>
800108fc:	02533023 	subu	a2,s2,s3
80010900:	1440fff2 	bnez	v0,800108cc <do_linux_brk+0xc4>
80010904:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1603
		goto out_unlock;

set_brk:
	mm->brk = brk;
80010908:	08004223 	j	8001088c <do_linux_brk+0x84>
8001090c:	ae110028 	sw	s1,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1573
	uint32_t newbrk, oldbrk, retval;
	struct mm_struct *mm = current->mm;
	uint32_t min_brk;

	if (!mm) {
		panic("kernel thread call sys_brk!!.\n");
80010910:	3c048002 	lui	a0,0x8002
80010914:	3c068002 	lui	a2,0x8002
80010918:	24842ab8 	addiu	a0,a0,10936
8001091c:	24050625 	li	a1,1573
80010920:	0c006b13 	jal	8001ac4c <__panic>
80010924:	24c62e64 	addiu	a2,a2,11876

80010928 <do_sleep>:
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1656

// do_sleep - set current process state to sleep and add timer with "time"
//          - then call scheduler. if process run again, delete timer first.
//      time is jiffies
int do_sleep(unsigned int time)
{
80010928:	27bdffc0 	addiu	sp,sp,-64
8001092c:	afb00034 	sw	s0,52(sp)
80010930:	afbf003c 	sw	ra,60(sp)
80010934:	afb10038 	sw	s1,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1657
	assert(!ucore_in_interrupt());
80010938:	0c007eb2 	jal	8001fac8 <ucore_in_interrupt>
8001093c:	00808021 	move	s0,a0
80010940:	1440003a 	bnez	v0,80010a2c <do_sleep+0x104>
80010944:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1658
	if (time == 0) {
80010948:	16000006 	bnez	s0,80010964 <do_sleep+0x3c>
8001094c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1673

	schedule();

	del_timer(timer);
	return 0;
}
80010950:	00001021 	move	v0,zero
80010954:	8fb10038 	lw	s1,56(sp)
80010958:	8fb00034 	lw	s0,52(sp)
8001095c:	03e00008 	jr	ra
80010960:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80010964:	40026000 	mfc0	v0,c0_status
80010968:	30420001 	andi	v0,v0,0x1
8001096c:	1440001a 	bnez	v0,800109d8 <do_sleep+0xb0>
80010970:	3c028015 	lui	v0,0x8015
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1663
	if (time == 0) {
		return 0;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
80010974:	8c4277a4 	lw	v0,30628(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80010978:	27a30024 	addiu	v1,sp,36
8001097c:	afa30028 	sw	v1,40(sp)
80010980:	afa30024 	sw	v1,36(sp)
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1665
	current->state = PROC_SLEEPING;
	current->wait_state = WT_TIMER;
80010984:	3c038000 	lui	v1,0x8000
80010988:	24630002 	addiu	v1,v1,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1666
	add_timer(timer);
8001098c:	27b10010 	addiu	s1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1665
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
	current->state = PROC_SLEEPING;
	current->wait_state = WT_TIMER;
80010990:	ac430084 	sw	v1,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1664
		return 0;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
	current->state = PROC_SLEEPING;
80010994:	24030001 	li	v1,1
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80010998:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:29
	timer->proc = proc;
8001099c:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->linux_timer.linux_timer = NULL;
800109a0:	afa00018 	sw	zero,24(sp)
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1666
	current->wait_state = WT_TIMER;
	add_timer(timer);
800109a4:	02202021 	move	a0,s1
800109a8:	0c0005e5 	jal	80001794 <add_timer>
800109ac:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1669
	local_intr_restore(intr_flag);

	schedule();
800109b0:	0c00059f 	jal	8000167c <schedule>
800109b4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1671

	del_timer(timer);
800109b8:	0c00062d 	jal	800018b4 <del_timer>
800109bc:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1673
	return 0;
}
800109c0:	8fbf003c 	lw	ra,60(sp)
800109c4:	00001021 	move	v0,zero
800109c8:	8fb10038 	lw	s1,56(sp)
800109cc:	8fb00034 	lw	s0,52(sp)
800109d0:	03e00008 	jr	ra
800109d4:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800109d8:	0c006d0c 	jal	8001b430 <intr_disable>
800109dc:	27b10010 	addiu	s1,sp,16
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1663
	if (time == 0) {
		return 0;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	timer_t __timer, *timer = timer_init(&__timer, current, time);
800109e0:	3c028015 	lui	v0,0x8015
800109e4:	8c4277a4 	lw	v0,30628(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
800109e8:	27a30024 	addiu	v1,sp,36
800109ec:	afa30028 	sw	v1,40(sp)
800109f0:	afa30024 	sw	v1,36(sp)
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1664
	current->state = PROC_SLEEPING;
800109f4:	24030001 	li	v1,1
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:29

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
800109f8:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
800109fc:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
80010a00:	afa00018 	sw	zero,24(sp)
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1664
80010a04:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1665
	current->wait_state = WT_TIMER;
80010a08:	3c038000 	lui	v1,0x8000
80010a0c:	24630002 	addiu	v1,v1,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1666
	add_timer(timer);
80010a10:	02202021 	move	a0,s1
80010a14:	0c0005e5 	jal	80001794 <add_timer>
80010a18:	ac430084 	sw	v1,132(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80010a1c:	0c006d08 	jal	8001b420 <intr_enable>
80010a20:	00000000 	nop
80010a24:	0800426c 	j	800109b0 <do_sleep+0x88>
80010a28:	00000000 	nop
do_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1657
// do_sleep - set current process state to sleep and add timer with "time"
//          - then call scheduler. if process run again, delete timer first.
//      time is jiffies
int do_sleep(unsigned int time)
{
	assert(!ucore_in_interrupt());
80010a2c:	3c068002 	lui	a2,0x8002
80010a30:	3c078002 	lui	a3,0x8002
80010a34:	24842ab8 	addiu	a0,a0,10936
80010a38:	24050679 	li	a1,1657
80010a3c:	24c60e48 	addiu	a2,a2,3656
80010a40:	0c006b13 	jal	8001ac4c <__panic>
80010a44:	24e72e9c 	addiu	a3,a3,11932

80010a48 <do_linux_sleep>:
do_linux_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1678
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
	struct mm_struct *mm = current->mm;
80010a48:	3c028015 	lui	v0,0x8015
80010a4c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a50:	27bdffc8 	addiu	sp,sp,-56
80010a54:	afb00028 	sw	s0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1678
	struct mm_struct *mm = current->mm;
80010a58:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a5c:	00803021 	move	a2,a0
80010a60:	afbf0034 	sw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1680
	struct mm_struct *mm = current->mm;
	struct linux_timespec kts;
	lock_mm(mm);
80010a64:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a68:	afb20030 	sw	s2,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1680
	struct mm_struct *mm = current->mm;
	struct linux_timespec kts;
	lock_mm(mm);
80010a6c:	afa60020 	sw	a2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1677
	return 0;
}

int do_linux_sleep(const struct linux_timespec __user * req,
		   struct linux_timespec __user * rem)
{
80010a70:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1680
	struct mm_struct *mm = current->mm;
	struct linux_timespec kts;
	lock_mm(mm);
80010a74:	0c004c2e 	jal	800130b8 <lock_mm>
80010a78:	afb1002c 	sw	s1,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1681
	if (!copy_from_user(mm, &kts, req, sizeof(struct linux_timespec), 1)) {
80010a7c:	8fa60020 	lw	a2,32(sp)
80010a80:	02002021 	move	a0,s0
80010a84:	24020001 	li	v0,1
80010a88:	27a50018 	addiu	a1,sp,24
80010a8c:	24070008 	li	a3,8
80010a90:	0c007936 	jal	8001e4d8 <copy_from_user>
80010a94:	afa20010 	sw	v0,16(sp)
80010a98:	10400033 	beqz	v0,80010b68 <do_linux_sleep+0x120>
80010a9c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1685
		unlock_mm(mm);
		return -E_INVAL;
	}
	unlock_mm(mm);
80010aa0:	0c004c3f 	jal	800130fc <unlock_mm>
80010aa4:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1686
	long msec = kts.tv_sec * 1000 + kts.tv_nsec / 1000000;
80010aa8:	8fa3001c 	lw	v1,28(sp)
80010aac:	3c04431b 	lui	a0,0x431b
80010ab0:	3484de83 	ori	a0,a0,0xde83
80010ab4:	00640018 	mult	v1,a0
80010ab8:	8fa50018 	lw	a1,24(sp)
80010abc:	00031fc3 	sra	v1,v1,0x1f
80010ac0:	00051080 	sll	v0,a1,0x2
80010ac4:	000531c0 	sll	a2,a1,0x7
80010ac8:	00c21023 	subu	v0,a2,v0
80010acc:	00451021 	addu	v0,v0,a1
80010ad0:	000210c0 	sll	v0,v0,0x3
80010ad4:	00002010 	mfhi	a0
80010ad8:	00042483 	sra	a0,a0,0x12
80010adc:	00831823 	subu	v1,a0,v1
80010ae0:	00431021 	addu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1687
	if (msec < 0)
80010ae4:	04400019 	bltz	v0,80010b4c <do_linux_sleep+0x104>
80010ae8:	3c036666 	lui	v1,0x6666
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1692
		return -E_INVAL;
#ifdef UCONFIG_HAVE_LINUX_DDE_BASE
	unsigned long j = msecs_to_jiffies(msec);
#else
	unsigned long j = msec / 10;
80010aec:	24636667 	addiu	v1,v1,26215
80010af0:	00430018 	mult	v0,v1
80010af4:	000217c3 	sra	v0,v0,0x1f
80010af8:	00001810 	mfhi	v1
80010afc:	00031883 	sra	v1,v1,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1695
#endif
	//kprintf("do_linux_sleep: sleep %d msec, %d jiffies\n", msec, j);
	int ret = do_sleep(j);
80010b00:	0c00424a 	jal	80010928 <do_sleep>
80010b04:	00622023 	subu	a0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1696
	if (rem) {
80010b08:	12400010 	beqz	s2,80010b4c <do_linux_sleep+0x104>
80010b0c:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1697
		memset(&kts, 0, sizeof(struct linux_timespec));
80010b10:	00002821 	move	a1,zero
80010b14:	24060008 	li	a2,8
80010b18:	0c005c5a 	jal	80017168 <memset>
80010b1c:	27a40018 	addiu	a0,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1698
		lock_mm(mm);
80010b20:	0c004c2e 	jal	800130b8 <lock_mm>
80010b24:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1699
		if (!copy_to_user(mm, rem, &kts, sizeof(struct linux_timespec))) {
80010b28:	02002021 	move	a0,s0
80010b2c:	02402821 	move	a1,s2
80010b30:	27a60018 	addiu	a2,sp,24
80010b34:	0c007950 	jal	8001e540 <copy_to_user>
80010b38:	24070008 	li	a3,8
80010b3c:	1040000a 	beqz	v0,80010b68 <do_linux_sleep+0x120>
80010b40:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1703
			unlock_mm(mm);
			return -E_INVAL;
		}
		unlock_mm(mm);
80010b44:	0c004c3f 	jal	800130fc <unlock_mm>
80010b48:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1706
	}
	return ret;
}
80010b4c:	8fbf0034 	lw	ra,52(sp)
80010b50:	02201021 	move	v0,s1
80010b54:	8fb20030 	lw	s2,48(sp)
80010b58:	8fb1002c 	lw	s1,44(sp)
80010b5c:	8fb00028 	lw	s0,40(sp)
80010b60:	03e00008 	jr	ra
80010b64:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1700
	int ret = do_sleep(j);
	if (rem) {
		memset(&kts, 0, sizeof(struct linux_timespec));
		lock_mm(mm);
		if (!copy_to_user(mm, rem, &kts, sizeof(struct linux_timespec))) {
			unlock_mm(mm);
80010b68:	0c004c3f 	jal	800130fc <unlock_mm>
80010b6c:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1701
			return -E_INVAL;
80010b70:	080042d4 	j	80010b50 <do_linux_sleep+0x108>
80010b74:	8fbf0034 	lw	ra,52(sp)

80010b78 <__do_linux_mmap>:
__do_linux_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1711
}

int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
80010b78:	3c028015 	lui	v0,0x8015
80010b7c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1710
	return ret;
}

int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010b80:	27bdffd0 	addiu	sp,sp,-48
80010b84:	afb20028 	sw	s2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1711
	struct mm_struct *mm = current->mm;
80010b88:	8c520020 	lw	s2,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1710
	return ret;
}

int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010b8c:	afb10024 	sw	s1,36(sp)
80010b90:	afbf002c 	sw	ra,44(sp)
80010b94:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1712
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010b98:	12400031 	beqz	s2,80010c60 <__do_linux_mmap+0xe8>
80010b9c:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1715
		panic("kernel thread call mmap!!.\n");
	}
	if (addr_store == NULL || len == 0) {
80010ba0:	1080001d 	beqz	a0,80010c18 <__do_linux_mmap+0xa0>
80010ba4:	2402ffea 	li	v0,-22
80010ba8:	10a0001b 	beqz	a1,80010c18 <__do_linux_mmap+0xa0>
80010bac:	2403f000 	li	v1,-4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1722
	}

	int ret = -E_INVAL;

	uintptr_t addr;
	addr = *addr_store;
80010bb0:	8c820000 	lw	v0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1733
	uint32_t vm_flags = VM_READ;

	/* set anonymous flag */
	vm_flags |= VM_ANONYMOUS;

	if (mmap_flags & MMAP_WRITE)
80010bb4:	30c40100 	andi	a0,a2,0x100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1725

	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010bb8:	00a22821 	addu	a1,a1,v0
80010bbc:	24a50fff 	addiu	a1,a1,4095
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1724
	int ret = -E_INVAL;

	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010bc0:	00431024 	and	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1734

	/* set anonymous flag */
	vm_flags |= VM_ANONYMOUS;

	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
80010bc4:	24070023 	li	a3,35
80010bc8:	24030021 	li	v1,33
80010bcc:	0064380a 	movz	a3,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1725

	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010bd0:	30a30fff 	andi	v1,a1,0xfff
80010bd4:	00a32823 	subu	a1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1735
	/* set anonymous flag */
	vm_flags |= VM_ANONYMOUS;

	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
80010bd8:	30c40200 	andi	a0,a2,0x200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1736
		vm_flags |= VM_STACK;
80010bdc:	34e30008 	ori	v1,a3,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1739

	ret = -E_NO_MEM;
	if (addr == 0) {
80010be0:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1726
	uintptr_t addr;
	addr = *addr_store;

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;
80010be4:	00a23023 	subu	a2,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1739
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
80010be8:	14400011 	bnez	v0,80010c30 <__do_linux_mmap+0xb8>
80010bec:	0064380b 	movn	a3,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1740
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010bf0:	00c02821 	move	a1,a2
80010bf4:	02402021 	move	a0,s2
80010bf8:	afa6001c 	sw	a2,28(sp)
80010bfc:	0c005024 	jal	80014090 <get_unmapped_area>
80010c00:	afa70018 	sw	a3,24(sp)
80010c04:	00408021 	move	s0,v0
80010c08:	8fa6001c 	lw	a2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1738
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
80010c0c:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1740
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010c10:	16000007 	bnez	s0,80010c30 <__do_linux_mmap+0xb8>
80010c14:	8fa70018 	lw	a3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1749
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
		*addr_store = addr;
	}
out_unlock:
	return ret;
}
80010c18:	8fbf002c 	lw	ra,44(sp)
80010c1c:	8fb20028 	lw	s2,40(sp)
80010c20:	8fb10024 	lw	s1,36(sp)
80010c24:	8fb00020 	lw	s0,32(sp)
80010c28:	03e00008 	jr	ra
80010c2c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1744
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
			goto out_unlock;
		}
	}
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
80010c30:	02402021 	move	a0,s2
80010c34:	02002821 	move	a1,s0
80010c38:	0c004e52 	jal	80013948 <mm_map>
80010c3c:	afa00010 	sw	zero,16(sp)
80010c40:	1440fff6 	bnez	v0,80010c1c <__do_linux_mmap+0xa4>
80010c44:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1745
		*addr_store = addr;
80010c48:	ae300000 	sw	s0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1749
	}
out_unlock:
	return ret;
}
80010c4c:	8fb20028 	lw	s2,40(sp)
80010c50:	8fb10024 	lw	s1,36(sp)
80010c54:	8fb00020 	lw	s0,32(sp)
80010c58:	03e00008 	jr	ra
80010c5c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1713
int
__do_linux_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call mmap!!.\n");
80010c60:	3c048002 	lui	a0,0x8002
80010c64:	3c068002 	lui	a2,0x8002
80010c68:	24842ab8 	addiu	a0,a0,10936
80010c6c:	240506b1 	li	a1,1713
80010c70:	0c006b13 	jal	8001ac4c <__panic>
80010c74:	24c62eb4 	addiu	a2,a2,11956

80010c78 <do_mmap>:
do_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1754
}

// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
80010c78:	3c028015 	lui	v0,0x8015
80010c7c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1753
	return ret;
}

// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010c80:	27bdffb8 	addiu	sp,sp,-72
80010c84:	afb0002c 	sw	s0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1754
	struct mm_struct *mm = current->mm;
80010c88:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1753
	return ret;
}

// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
80010c8c:	afb50040 	sw	s5,64(sp)
80010c90:	afb30038 	sw	s3,56(sp)
80010c94:	afb10030 	sw	s1,48(sp)
80010c98:	afbf0044 	sw	ra,68(sp)
80010c9c:	afb4003c 	sw	s4,60(sp)
80010ca0:	afb20034 	sw	s2,52(sp)
80010ca4:	00808821 	move	s1,a0
80010ca8:	00a09821 	move	s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1755
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010cac:	12000042 	beqz	s0,80010db8 <do_mmap+0x140>
80010cb0:	00c0a821 	move	s5,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1758
		panic("kernel thread call mmap!!.\n");
	}
	if (addr_store == NULL || len == 0) {
80010cb4:	10800010 	beqz	a0,80010cf8 <do_mmap+0x80>
80010cb8:	2412ffea 	li	s2,-22
80010cbc:	10a0000f 	beqz	a1,80010cfc <do_mmap+0x84>
80010cc0:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1766

	int ret = -E_INVAL;

	uintptr_t addr;

	lock_mm(mm);
80010cc4:	0c004c2e 	jal	800130b8 <lock_mm>
80010cc8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1767
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
80010ccc:	24140001 	li	s4,1
80010cd0:	02002021 	move	a0,s0
80010cd4:	27a50018 	addiu	a1,sp,24
80010cd8:	02203021 	move	a2,s1
80010cdc:	24070004 	li	a3,4
80010ce0:	0c007936 	jal	8001e4d8 <copy_from_user>
80010ce4:	afb40010 	sw	s4,16(sp)
80010ce8:	1440000d 	bnez	v0,80010d20 <do_mmap+0xa8>
80010cec:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1791
	}
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
		copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
	}
out_unlock:
	unlock_mm(mm);
80010cf0:	0c004c3f 	jal	800130fc <unlock_mm>
80010cf4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1793
	return ret;
}
80010cf8:	8fbf0044 	lw	ra,68(sp)
80010cfc:	02401021 	move	v0,s2
80010d00:	8fb50040 	lw	s5,64(sp)
80010d04:	8fb4003c 	lw	s4,60(sp)
80010d08:	8fb30038 	lw	s3,56(sp)
80010d0c:	8fb20034 	lw	s2,52(sp)
80010d10:	8fb10030 	lw	s1,48(sp)
80010d14:	8fb0002c 	lw	s0,44(sp)
80010d18:	03e00008 	jr	ra
80010d1c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1776
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
80010d20:	32a30100 	andi	v1,s5,0x100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1777
		vm_flags |= VM_WRITE;
80010d24:	24070003 	li	a3,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1772
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010d28:	24460fff 	addiu	a2,v0,4095
80010d2c:	00d39821 	addu	s3,a2,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1777
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
80010d30:	0283380a 	movz	a3,s4,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1772
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010d34:	32660fff 	andi	a2,s3,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1771
	lock_mm(mm);
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010d38:	2405f000 	li	a1,-4096
80010d3c:	00452824 	and	a1,v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1772
	    ROUNDUP(addr + len, PGSIZE);
80010d40:	02669823 	subu	s3,s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1778
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
80010d44:	32b50200 	andi	s5,s5,0x200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1779
		vm_flags |= VM_STACK;
80010d48:	34e20008 	ori	v0,a3,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1773
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;
80010d4c:	afa50018 	sw	a1,24(sp)
80010d50:	02653023 	subu	a2,s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1782
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
80010d54:	14a0000c 	bnez	a1,80010d88 <do_mmap+0x110>
80010d58:	0055380b 	movn	a3,v0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1783
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010d5c:	00c02821 	move	a1,a2
80010d60:	02002021 	move	a0,s0
80010d64:	afa60024 	sw	a2,36(sp)
80010d68:	0c005024 	jal	80014090 <get_unmapped_area>
80010d6c:	afa70020 	sw	a3,32(sp)
80010d70:	00402821 	move	a1,v0
80010d74:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1781
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
80010d78:	2412fff4 	li	s2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1783
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010d7c:	8fa60024 	lw	a2,36(sp)
80010d80:	1040ffdb 	beqz	v0,80010cf0 <do_mmap+0x78>
80010d84:	8fa70020 	lw	a3,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1787
			goto out_unlock;
		}
	}
	if ((ret = mm_map(mm, addr, len, vm_flags, NULL)) == 0) {
80010d88:	02002021 	move	a0,s0
80010d8c:	0c004e52 	jal	80013948 <mm_map>
80010d90:	afa00010 	sw	zero,16(sp)
80010d94:	1440ffd6 	bnez	v0,80010cf0 <do_mmap+0x78>
80010d98:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1788
		copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
80010d9c:	02002021 	move	a0,s0
80010da0:	02202821 	move	a1,s1
80010da4:	27a60018 	addiu	a2,sp,24
80010da8:	0c007950 	jal	8001e540 <copy_to_user>
80010dac:	24070004 	li	a3,4
80010db0:	0800433c 	j	80010cf0 <do_mmap+0x78>
80010db4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1756
// do_mmap - add a vma with addr, len and flags(VM_READ/M_WRITE/VM_STACK)
int do_mmap(uintptr_t __user * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call mmap!!.\n");
80010db8:	3c048002 	lui	a0,0x8002
80010dbc:	3c068002 	lui	a2,0x8002
80010dc0:	24842ab8 	addiu	a0,a0,10936
80010dc4:	240506dc 	li	a1,1756
80010dc8:	0c006b13 	jal	8001ac4c <__panic>
80010dcc:	24c62eb4 	addiu	a2,a2,11956

80010dd0 <do_munmap>:
do_munmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1798
}

// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
	struct mm_struct *mm = current->mm;
80010dd0:	3c028015 	lui	v0,0x8015
80010dd4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1797
	return ret;
}

// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
80010dd8:	27bdffd8 	addiu	sp,sp,-40
80010ddc:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1798
	struct mm_struct *mm = current->mm;
80010de0:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1797
	return ret;
}

// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
80010de4:	afb10020 	sw	s1,32(sp)
80010de8:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1799
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010dec:	12000013 	beqz	s0,80010e3c <do_munmap+0x6c>
80010df0:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1802
		panic("kernel thread call munmap!!.\n");
	}
	if (len == 0) {
80010df4:	10a0000c 	beqz	a1,80010e28 <do_munmap+0x58>
80010df8:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1806
		return -E_INVAL;
	}
	int ret;
	lock_mm(mm);
80010dfc:	02002021 	move	a0,s0
80010e00:	0c004c2e 	jal	800130b8 <lock_mm>
80010e04:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1808
	{
		ret = mm_unmap(mm, addr, len);
80010e08:	8fa60010 	lw	a2,16(sp)
80010e0c:	02002021 	move	a0,s0
80010e10:	0c004ee3 	jal	80013b8c <mm_unmap>
80010e14:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1810
	}
	unlock_mm(mm);
80010e18:	02002021 	move	a0,s0
80010e1c:	0c004c3f 	jal	800130fc <unlock_mm>
80010e20:	afa20010 	sw	v0,16(sp)
80010e24:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1812
	return ret;
}
80010e28:	8fbf0024 	lw	ra,36(sp)
80010e2c:	8fb10020 	lw	s1,32(sp)
80010e30:	8fb0001c 	lw	s0,28(sp)
80010e34:	03e00008 	jr	ra
80010e38:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1800
// do_munmap - delete vma with addr & len
int do_munmap(uintptr_t addr, size_t len)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call munmap!!.\n");
80010e3c:	3c048002 	lui	a0,0x8002
80010e40:	3c068002 	lui	a2,0x8002
80010e44:	24842ab8 	addiu	a0,a0,10936
80010e48:	24050708 	li	a1,1800
80010e4c:	0c006b13 	jal	8001ac4c <__panic>
80010e50:	24c62ed0 	addiu	a2,a2,11984

80010e54 <do_shmem>:
do_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1895
#endif //UCONFIG_BIONIC_LIBC

// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
80010e54:	3c028015 	lui	v0,0x8015
80010e58:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1894

#endif //UCONFIG_BIONIC_LIBC

// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
80010e5c:	27bdffc0 	addiu	sp,sp,-64
80010e60:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1895
	struct mm_struct *mm = current->mm;
80010e64:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1894

#endif //UCONFIG_BIONIC_LIBC

// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
80010e68:	afb40034 	sw	s4,52(sp)
80010e6c:	afb2002c 	sw	s2,44(sp)
80010e70:	afb10028 	sw	s1,40(sp)
80010e74:	afbf003c 	sw	ra,60(sp)
80010e78:	afb50038 	sw	s5,56(sp)
80010e7c:	afb30030 	sw	s3,48(sp)
80010e80:	00808821 	move	s1,a0
80010e84:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1896
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
80010e88:	12000051 	beqz	s0,80010fd0 <do_shmem+0x17c>
80010e8c:	00c0a021 	move	s4,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1899
		panic("kernel thread call mmap!!.\n");
	}
	if (addr_store == NULL || len == 0) {
80010e90:	10800030 	beqz	a0,80010f54 <do_shmem+0x100>
80010e94:	2413ffea 	li	s3,-22
80010e98:	10a0002f 	beqz	a1,80010f58 <do_shmem+0x104>
80010e9c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1907

	int ret = -E_INVAL;

	uintptr_t addr;

	lock_mm(mm);
80010ea0:	0c004c2e 	jal	800130b8 <lock_mm>
80010ea4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1908
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
80010ea8:	24130001 	li	s3,1
80010eac:	02002021 	move	a0,s0
80010eb0:	27a50018 	addiu	a1,sp,24
80010eb4:	02203021 	move	a2,s1
80010eb8:	24070004 	li	a3,4
80010ebc:	0c007936 	jal	8001e4d8 <copy_from_user>
80010ec0:	afb30010 	sw	s3,16(sp)
80010ec4:	10400039 	beqz	v0,80010fac <do_shmem+0x158>
80010ec8:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1917
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
80010ecc:	32830100 	andi	v1,s4,0x100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1918
		vm_flags |= VM_WRITE;
80010ed0:	24150003 	li	s5,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1913
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80010ed4:	24440fff 	addiu	a0,v0,4095
80010ed8:	00929021 	addu	s2,a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1918
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
80010edc:	0263a80a 	movz	s5,s3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1912
	lock_mm(mm);
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010ee0:	2404f000 	li	a0,-4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1913
	    ROUNDUP(addr + len, PGSIZE);
80010ee4:	32430fff 	andi	v1,s2,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1912
	lock_mm(mm);
	if (!copy_from_user(mm, &addr, addr_store, sizeof(uintptr_t), 1)) {
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80010ee8:	00441024 	and	v0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1913
	    ROUNDUP(addr + len, PGSIZE);
80010eec:	02439023 	subu	s2,s2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1919
	addr = start, len = end - start;

	uint32_t vm_flags = VM_READ;
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
80010ef0:	32940200 	andi	s4,s4,0x200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1920
		vm_flags |= VM_STACK;
80010ef4:	36a30008 	ori	v1,s5,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1914
		goto out_unlock;
	}

	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	addr = start, len = end - start;
80010ef8:	afa20018 	sw	v0,24(sp)
80010efc:	02429023 	subu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1923
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
80010f00:	1040001e 	beqz	v0,80010f7c <do_shmem+0x128>
80010f04:	0074a80b 	movn	s5,v1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1929
		if ((addr = get_unmapped_area(mm, len)) == 0) {
			goto out_unlock;
		}
	}
	struct shmem_struct *shmem;
	if ((shmem = shmem_create(len)) == NULL) {
80010f08:	0c0049ee 	jal	800127b8 <shmem_create>
80010f0c:	02402021 	move	a0,s2
80010f10:	10400024 	beqz	v0,80010fa4 <do_shmem+0x150>
80010f14:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1932
		goto out_unlock;
	}
	if ((ret = mm_map_shmem(mm, addr, vm_flags, shmem, NULL)) != 0) {
80010f18:	8fa50018 	lw	a1,24(sp)
80010f1c:	02002021 	move	a0,s0
80010f20:	02a03021 	move	a2,s5
80010f24:	00403821 	move	a3,v0
80010f28:	0c004e90 	jal	80013a40 <mm_map_shmem>
80010f2c:	afa00010 	sw	zero,16(sp)
80010f30:	10400020 	beqz	v0,80010fb4 <do_shmem+0x160>
80010f34:	00409821 	move	s3,v0
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80010f38:	8e420010 	lw	v0,16(s2)
do_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1933
		assert(shmem_ref(shmem) == 0);
80010f3c:	1440002a 	bnez	v0,80010fe8 <do_shmem+0x194>
80010f40:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1934
		shmem_destroy(shmem);
80010f44:	0c004a04 	jal	80012810 <shmem_destroy>
80010f48:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1939
		goto out_unlock;
	}
	copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
out_unlock:
	unlock_mm(mm);
80010f4c:	0c004c3f 	jal	800130fc <unlock_mm>
80010f50:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1941
	return ret;
}
80010f54:	8fbf003c 	lw	ra,60(sp)
80010f58:	02601021 	move	v0,s3
80010f5c:	8fb50038 	lw	s5,56(sp)
80010f60:	8fb40034 	lw	s4,52(sp)
80010f64:	8fb30030 	lw	s3,48(sp)
80010f68:	8fb2002c 	lw	s2,44(sp)
80010f6c:	8fb10028 	lw	s1,40(sp)
80010f70:	8fb00024 	lw	s0,36(sp)
80010f74:	03e00008 	jr	ra
80010f78:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1924
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
	if (addr == 0) {
		if ((addr = get_unmapped_area(mm, len)) == 0) {
80010f7c:	02002021 	move	a0,s0
80010f80:	0c005024 	jal	80014090 <get_unmapped_area>
80010f84:	02402821 	move	a1,s2
80010f88:	afa20018 	sw	v0,24(sp)
80010f8c:	1040ffef 	beqz	v0,80010f4c <do_shmem+0xf8>
80010f90:	2413fff4 	li	s3,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1929
			goto out_unlock;
		}
	}
	struct shmem_struct *shmem;
	if ((shmem = shmem_create(len)) == NULL) {
80010f94:	0c0049ee 	jal	800127b8 <shmem_create>
80010f98:	02402021 	move	a0,s2
80010f9c:	1440ffde 	bnez	v0,80010f18 <do_shmem+0xc4>
80010fa0:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1922
	if (mmap_flags & MMAP_WRITE)
		vm_flags |= VM_WRITE;
	if (mmap_flags & MMAP_STACK)
		vm_flags |= VM_STACK;

	ret = -E_NO_MEM;
80010fa4:	080043d3 	j	80010f4c <do_shmem+0xf8>
80010fa8:	2413fff4 	li	s3,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1903
	}
	if (addr_store == NULL || len == 0) {
		return -E_INVAL;
	}

	int ret = -E_INVAL;
80010fac:	080043d3 	j	80010f4c <do_shmem+0xf8>
80010fb0:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1937
	if ((ret = mm_map_shmem(mm, addr, vm_flags, shmem, NULL)) != 0) {
		assert(shmem_ref(shmem) == 0);
		shmem_destroy(shmem);
		goto out_unlock;
	}
	copy_to_user(mm, addr_store, &addr, sizeof(uintptr_t));
80010fb4:	02002021 	move	a0,s0
80010fb8:	02202821 	move	a1,s1
80010fbc:	27a60018 	addiu	a2,sp,24
80010fc0:	0c007950 	jal	8001e540 <copy_to_user>
80010fc4:	24070004 	li	a3,4
80010fc8:	080043d3 	j	80010f4c <do_shmem+0xf8>
80010fcc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1897
// do_shmem - create a share memory with addr, len, flags(VM_READ/M_WRITE/VM_STACK)
int do_shmem(uintptr_t * addr_store, size_t len, uint32_t mmap_flags)
{
	struct mm_struct *mm = current->mm;
	if (mm == NULL) {
		panic("kernel thread call mmap!!.\n");
80010fd0:	3c048002 	lui	a0,0x8002
80010fd4:	3c068002 	lui	a2,0x8002
80010fd8:	24842ab8 	addiu	a0,a0,10936
80010fdc:	24050769 	li	a1,1897
80010fe0:	0c006b13 	jal	8001ac4c <__panic>
80010fe4:	24c62eb4 	addiu	a2,a2,11956
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:1933
	struct shmem_struct *shmem;
	if ((shmem = shmem_create(len)) == NULL) {
		goto out_unlock;
	}
	if ((ret = mm_map_shmem(mm, addr, vm_flags, shmem, NULL)) != 0) {
		assert(shmem_ref(shmem) == 0);
80010fe8:	3c068002 	lui	a2,0x8002
80010fec:	3c078002 	lui	a3,0x8002
80010ff0:	24842ab8 	addiu	a0,a0,10936
80010ff4:	2405078d 	li	a1,1933
80010ff8:	24c60e48 	addiu	a2,a2,3656
80010ffc:	0c006b13 	jal	8001ac4c <__panic>
80011000:	24e72ef0 	addiu	a3,a3,12016

80011004 <proc_init>:
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80011004:	27bdffb8 	addiu	sp,sp,-72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2046
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
80011008:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
8001100c:	afb10034 	sw	s1,52(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80011010:	3c058015 	lui	a1,0x8015
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2046
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
80011014:	8c517790 	lw	s1,30608(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2047
	int lapic_id = pls_read(lapic_id);
80011018:	3c028015 	lui	v0,0x8015
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001101c:	24a37788 	addiu	v1,a1,30600
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80011020:	afb40040 	sw	s4,64(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80011024:	3c048015 	lui	a0,0x8015
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2047
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);
80011028:	8c5477b0 	lw	s4,30640(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2048
	int lcpu_count = pls_read(lcpu_count);
8001102c:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80011030:	afb20038 	sw	s2,56(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80011034:	aca37788 	sw	v1,30600(a1)
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2048
	int i;
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);
	int lcpu_count = pls_read(lcpu_count);
80011038:	8c5277a0 	lw	s2,30624(v0)
8001103c:	3c058015 	lui	a1,0x8015
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80011040:	24827780 	addiu	v0,a0,30592
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2044
}

// proc_init - set up the first kernel thread idleproc "idle" by itself and 
//           - create the second kernel thread init_main
void proc_init(void)
{
80011044:	afbf0044 	sw	ra,68(sp)
80011048:	afb3003c 	sw	s3,60(sp)
8001104c:	afb00030 	sw	s0,48(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80011050:	ac827780 	sw	v0,30592(a0)
80011054:	ac630004 	sw	v1,4(v1)
80011058:	ac420004 	sw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2052
	int lapic_id = pls_read(lapic_id);
	int lcpu_count = pls_read(lcpu_count);

	list_init(&proc_list);
	list_init(&proc_mm_list);
	for (i = 0; i < HASH_LIST_SIZE; i++) {
8001105c:	00001821 	move	v1,zero
80011060:	24a54548 	addiu	a1,a1,17736
proc_init():
80011064:	24040400 	li	a0,1024
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2053
		list_init(hash_list + i);
80011068:	000310c0 	sll	v0,v1,0x3
8001106c:	00a21021 	addu	v0,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2052
	int lapic_id = pls_read(lapic_id);
	int lcpu_count = pls_read(lcpu_count);

	list_init(&proc_list);
	list_init(&proc_mm_list);
	for (i = 0; i < HASH_LIST_SIZE; i++) {
80011070:	24630001 	addiu	v1,v1,1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80011074:	ac420004 	sw	v0,4(v0)
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2052
80011078:	1464fffb 	bne	v1,a0,80011068 <proc_init+0x64>
8001107c:	ac420000 	sw	v0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2056
		list_init(hash_list + i);
	}

	pls_write(idleproc, alloc_proc());
80011080:	0c0079a8 	jal	8001e6a0 <alloc_proc>
80011084:	3c108015 	lui	s0,0x8015
80011088:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2057
	if (idleproc == NULL) {
8001108c:	10400056 	beqz	v0,800111e8 <proc_init+0x1e4>
80011090:	ae0277a8 	sw	v0,30632(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2061
		panic("cannot alloc idleproc.\n");
	}

	idleproc->pid = lcpu_idx;
80011094:	ac510004 	sw	s1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2062
	idleproc->state = PROC_RUNNABLE;
80011098:	24020002 	li	v0,2
8001109c:	ae620000 	sw	v0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2065
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
800110a0:	24020001 	li	v0,1
800110a4:	ae620018 	sw	v0,24(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2067
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
800110a8:	0c003283 	jal	8000ca0c <fs_create>
800110ac:	ae600054 	sw	zero,84(s3)
800110b0:	10400047 	beqz	v0,800111d0 <proc_init+0x1cc>
800110b4:	ae6200bc 	sw	v0,188(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2070
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);
800110b8:	8e0277a8 	lw	v0,30632(s0)
800110bc:	8c5300bc 	lw	s3,188(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800110c0:	40026000 	mfc0	v0,c0_status
800110c4:	30420001 	andi	v0,v0,0x1
800110c8:	14400038 	bnez	v0,800111ac <proc_init+0x1a8>
800110cc:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800110d0:	8e620008 	lw	v0,8(s3)
800110d4:	24420001 	addiu	v0,v0,1
800110d8:	ae620008 	sw	v0,8(s3)
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2073

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
800110dc:	3c068002 	lui	a2,0x8002
800110e0:	24c62f48 	addiu	a2,a2,12104
800110e4:	02803821 	move	a3,s4
800110e8:	27a40010 	addiu	a0,sp,16
800110ec:	24050020 	li	a1,32
fs_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800110f0:	8e620008 	lw	v0,8(s3)
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2073
800110f4:	0c005b48 	jal	80016d20 <snprintf>
800110f8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2075

	set_proc_name(idleproc, namebuf);
800110fc:	8e0477a8 	lw	a0,30632(s0)
80011100:	0c003af6 	jal	8000ebd8 <set_proc_name>
80011104:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2076
	nr_process++;
80011108:	3c028015 	lui	v0,0x8015
8001110c:	8c476548 	lw	a3,25928(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2078

	pls_write(current, idleproc);
80011110:	8e0377a8 	lw	v1,30632(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2080

	int pid = ucore_kernel_thread(init_main, NULL, 0);
80011114:	3c048001 	lui	a0,0x8001
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2076

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);

	set_proc_name(idleproc, namebuf);
	nr_process++;
80011118:	24e70001 	addiu	a3,a3,1
8001111c:	ac476548 	sw	a3,25928(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2080

	pls_write(current, idleproc);

	int pid = ucore_kernel_thread(init_main, NULL, 0);
80011120:	248401b8 	addiu	a0,a0,440
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2078
	snprintf(namebuf, 32, "idle/%d", lapic_id);

	set_proc_name(idleproc, namebuf);
	nr_process++;

	pls_write(current, idleproc);
80011124:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2080

	int pid = ucore_kernel_thread(init_main, NULL, 0);
80011128:	00002821 	move	a1,zero
8001112c:	00003021 	move	a2,zero
80011130:	0c007a3d 	jal	8001e8f4 <ucore_kernel_thread>
80011134:	ac4377a4 	sw	v1,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2081
	if (pid <= 0) {
80011138:	1840003f 	blez	v0,80011238 <proc_init+0x234>
8001113c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2085
		panic("create init_main failed.\n");
	}

	initproc = find_proc(pid);
80011140:	0c003b4c 	jal	8000ed30 <find_proc>
80011144:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2086
	set_proc_name(initproc, "kinit");
80011148:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2085
	int pid = ucore_kernel_thread(init_main, NULL, 0);
	if (pid <= 0) {
		panic("create init_main failed.\n");
	}

	initproc = find_proc(pid);
8001114c:	3c108015 	lui	s0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2086
	set_proc_name(initproc, "kinit");
80011150:	00402021 	move	a0,v0
80011154:	24a52f6c 	addiu	a1,a1,12140
80011158:	0c003af6 	jal	8000ebd8 <set_proc_name>
8001115c:	ae027798 	sw	v0,30616(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2088

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
80011160:	3c028015 	lui	v0,0x8015
80011164:	8c4277a8 	lw	v0,30632(v0)
80011168:	1040002c 	beqz	v0,8001121c <proc_init+0x218>
8001116c:	3c048002 	lui	a0,0x8002
80011170:	8c420004 	lw	v0,4(v0)
80011174:	14510029 	bne	v0,s1,8001121c <proc_init+0x218>
80011178:	8e027798 	lw	v0,30616(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2089
	assert(initproc != NULL && initproc->pid == lcpu_count);
8001117c:	10400021 	beqz	v0,80011204 <proc_init+0x200>
80011180:	3c068002 	lui	a2,0x8002
80011184:	8c420004 	lw	v0,4(v0)
80011188:	1452001d 	bne	v0,s2,80011200 <proc_init+0x1fc>
8001118c:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2090
}
80011190:	8fb40040 	lw	s4,64(sp)
80011194:	8fb3003c 	lw	s3,60(sp)
80011198:	8fb20038 	lw	s2,56(sp)
8001119c:	8fb10034 	lw	s1,52(sp)
800111a0:	8fb00030 	lw	s0,48(sp)
800111a4:	03e00008 	jr	ra
800111a8:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800111ac:	0c006d0c 	jal	8001b430 <intr_disable>
800111b0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800111b4:	8e620008 	lw	v0,8(s3)
800111b8:	24420001 	addiu	v0,v0,1
800111bc:	ae620008 	sw	v0,8(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800111c0:	0c006d08 	jal	8001b420 <intr_enable>
800111c4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2073
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
800111c8:	08004438 	j	800110e0 <proc_init+0xdc>
800111cc:	3c068002 	lui	a2,0x8002
proc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2068
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
		panic("create fs_struct (idleproc) failed.\n");
800111d0:	3c048002 	lui	a0,0x8002
800111d4:	3c068002 	lui	a2,0x8002
800111d8:	24842ab8 	addiu	a0,a0,10936
800111dc:	24050814 	li	a1,2068
800111e0:	0c006b13 	jal	8001ac4c <__panic>
800111e4:	24c62f20 	addiu	a2,a2,12064
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2058
		list_init(hash_list + i);
	}

	pls_write(idleproc, alloc_proc());
	if (idleproc == NULL) {
		panic("cannot alloc idleproc.\n");
800111e8:	3c048002 	lui	a0,0x8002
800111ec:	3c068002 	lui	a2,0x8002
800111f0:	24842ab8 	addiu	a0,a0,10936
800111f4:	2405080a 	li	a1,2058
800111f8:	0c006b13 	jal	8001ac4c <__panic>
800111fc:	24c62f08 	addiu	a2,a2,12040
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2089

	initproc = find_proc(pid);
	set_proc_name(initproc, "kinit");

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
80011200:	3c068002 	lui	a2,0x8002
80011204:	3c078002 	lui	a3,0x8002
80011208:	24842ab8 	addiu	a0,a0,10936
8001120c:	24050829 	li	a1,2089
80011210:	24c60e48 	addiu	a2,a2,3656
80011214:	0c006b13 	jal	8001ac4c <__panic>
80011218:	24e72fa4 	addiu	a3,a3,12196
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2088
	}

	initproc = find_proc(pid);
	set_proc_name(initproc, "kinit");

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
8001121c:	3c068002 	lui	a2,0x8002
80011220:	3c078002 	lui	a3,0x8002
80011224:	24842ab8 	addiu	a0,a0,10936
80011228:	24050828 	li	a1,2088
8001122c:	24c60e48 	addiu	a2,a2,3656
80011230:	0c006b13 	jal	8001ac4c <__panic>
80011234:	24e72f74 	addiu	a3,a3,12148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2082

	pls_write(current, idleproc);

	int pid = ucore_kernel_thread(init_main, NULL, 0);
	if (pid <= 0) {
		panic("create init_main failed.\n");
80011238:	3c068002 	lui	a2,0x8002
8001123c:	24842ab8 	addiu	a0,a0,10936
80011240:	24050822 	li	a1,2082
80011244:	0c006b13 	jal	8001ac4c <__panic>
80011248:	24c62f50 	addiu	a2,a2,12112

8001124c <proc_init_ap>:
proc_init_ap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2093
	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
}

void proc_init_ap(void)
{
8001124c:	27bdffb8 	addiu	sp,sp,-72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2094
	int lcpu_idx = pls_read(lcpu_idx);
80011250:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2093
	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
}

void proc_init_ap(void)
{
80011254:	afb10038 	sw	s1,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2094
	int lcpu_idx = pls_read(lcpu_idx);
80011258:	8c517790 	lw	s1,30608(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2095
	int lapic_id = pls_read(lapic_id);
8001125c:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2093
	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
	assert(initproc != NULL && initproc->pid == lcpu_count);
}

void proc_init_ap(void)
{
80011260:	afb30040 	sw	s3,64(sp)
80011264:	afb2003c 	sw	s2,60(sp)
80011268:	afb00034 	sw	s0,52(sp)
8001126c:	afbf0044 	sw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2095
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);
80011270:	8c5377b0 	lw	s3,30640(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2097

	pls_write(idleproc, alloc_proc());
80011274:	0c0079a8 	jal	8001e6a0 <alloc_proc>
80011278:	3c108015 	lui	s0,0x8015
8001127c:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2098
	if (idleproc == NULL) {
80011280:	10400046 	beqz	v0,8001139c <proc_init_ap+0x150>
80011284:	ae0277a8 	sw	v0,30632(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2102
		panic("cannot alloc idleproc.\n");
	}

	idleproc->pid = lcpu_idx;
80011288:	ac510004 	sw	s1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2103
	idleproc->state = PROC_RUNNABLE;
8001128c:	24020002 	li	v0,2
80011290:	ae420000 	sw	v0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2106
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
80011294:	24020001 	li	v0,1
80011298:	ae420018 	sw	v0,24(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2108
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
8001129c:	0c003283 	jal	8000ca0c <fs_create>
800112a0:	ae400054 	sw	zero,84(s2)
800112a4:	10400037 	beqz	v0,80011384 <proc_init_ap+0x138>
800112a8:	ae4200bc 	sw	v0,188(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2111
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);
800112ac:	8e0277a8 	lw	v0,30632(s0)
800112b0:	8c5200bc 	lw	s2,188(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800112b4:	40026000 	mfc0	v0,c0_status
800112b8:	30420001 	andi	v0,v0,0x1
800112bc:	14400020 	bnez	v0,80011340 <proc_init_ap+0xf4>
800112c0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
800112c4:	8e420008 	lw	v0,8(s2)
800112c8:	24420001 	addiu	v0,v0,1
800112cc:	ae420008 	sw	v0,8(s2)
proc_init_ap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2114

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
800112d0:	3c068002 	lui	a2,0x8002
800112d4:	27a40010 	addiu	a0,sp,16
800112d8:	24050020 	li	a1,32
800112dc:	24c62f48 	addiu	a2,a2,12104
800112e0:	02603821 	move	a3,s3
fs_count_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800112e4:	8e420008 	lw	v0,8(s2)
proc_init_ap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2114
800112e8:	0c005b48 	jal	80016d20 <snprintf>
800112ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2116

	set_proc_name(idleproc, namebuf);
800112f0:	8e0477a8 	lw	a0,30632(s0)
800112f4:	0c003af6 	jal	8000ebd8 <set_proc_name>
800112f8:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2117
	nr_process++;
800112fc:	3c038015 	lui	v1,0x8015
80011300:	8c646548 	lw	a0,25928(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2119

	pls_write(current, idleproc);
80011304:	8e0277a8 	lw	v0,30632(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2117

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);

	set_proc_name(idleproc, namebuf);
	nr_process++;
80011308:	24840001 	addiu	a0,a0,1
8001130c:	ac646548 	sw	a0,25928(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2119

	pls_write(current, idleproc);
80011310:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2121

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
80011314:	10400013 	beqz	v0,80011364 <proc_init_ap+0x118>
80011318:	ac6277a4 	sw	v0,30628(v1)
8001131c:	8c420004 	lw	v0,4(v0)
80011320:	14510010 	bne	v0,s1,80011364 <proc_init_ap+0x118>
80011324:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2122
}
80011328:	8fb30040 	lw	s3,64(sp)
8001132c:	8fb2003c 	lw	s2,60(sp)
80011330:	8fb10038 	lw	s1,56(sp)
80011334:	8fb00034 	lw	s0,52(sp)
80011338:	03e00008 	jr	ra
8001133c:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80011340:	0c006d0c 	jal	8001b430 <intr_disable>
80011344:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80011348:	8e420008 	lw	v0,8(s2)
8001134c:	24420001 	addiu	v0,v0,1
80011350:	ae420008 	sw	v0,8(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80011354:	0c006d08 	jal	8001b420 <intr_enable>
80011358:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2114
		panic("create fs_struct (idleproc) failed.\n");
	}
	fs_count_inc(idleproc->fs_struct);

	char namebuf[32];
	snprintf(namebuf, 32, "idle/%d", lapic_id);
8001135c:	080044b5 	j	800112d4 <proc_init_ap+0x88>
80011360:	3c068002 	lui	a2,0x8002
proc_init_ap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2121
	set_proc_name(idleproc, namebuf);
	nr_process++;

	pls_write(current, idleproc);

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
80011364:	3c048002 	lui	a0,0x8002
80011368:	3c068002 	lui	a2,0x8002
8001136c:	3c078002 	lui	a3,0x8002
80011370:	24842ab8 	addiu	a0,a0,10936
80011374:	24050849 	li	a1,2121
80011378:	24c60e48 	addiu	a2,a2,3656
8001137c:	0c006b13 	jal	8001ac4c <__panic>
80011380:	24e72f74 	addiu	a3,a3,12148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2109
	// XXX
	// idleproc->kstack = (uintptr_t)bootstack;
	idleproc->need_resched = 1;
	idleproc->tf = NULL;
	if ((idleproc->fs_struct = fs_create()) == NULL) {
		panic("create fs_struct (idleproc) failed.\n");
80011384:	3c048002 	lui	a0,0x8002
80011388:	3c068002 	lui	a2,0x8002
8001138c:	24842ab8 	addiu	a0,a0,10936
80011390:	2405083d 	li	a1,2109
80011394:	0c006b13 	jal	8001ac4c <__panic>
80011398:	24c62f20 	addiu	a2,a2,12064
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2099
	int lcpu_idx = pls_read(lcpu_idx);
	int lapic_id = pls_read(lapic_id);

	pls_write(idleproc, alloc_proc());
	if (idleproc == NULL) {
		panic("cannot alloc idleproc.\n");
8001139c:	3c048002 	lui	a0,0x8002
800113a0:	3c068002 	lui	a2,0x8002
800113a4:	24842ab8 	addiu	a0,a0,10936
800113a8:	24050833 	li	a1,2099
800113ac:	0c006b13 	jal	8001ac4c <__panic>
800113b0:	24c62f08 	addiu	a2,a2,12040

800113b4 <do_linux_ugetrlimit>:
do_linux_ugetrlimit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2125

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
}

int do_linux_ugetrlimit(int res, struct linux_rlimit *__user __limit)
{
800113b4:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2127
	struct linux_rlimit limit;
	switch (res) {
800113b8:	24020003 	li	v0,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2125

	assert(idleproc != NULL && idleproc->pid == lcpu_idx);
}

int do_linux_ugetrlimit(int res, struct linux_rlimit *__user __limit)
{
800113bc:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2127
	struct linux_rlimit limit;
	switch (res) {
800113c0:	10820006 	beq	a0,v0,800113dc <do_linux_ugetrlimit+0x28>
800113c4:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2143
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
}
800113c8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2133
	case RLIMIT_STACK:
		limit.rlim_cur = USTACKSIZE;
		limit.rlim_max = USTACKSIZE;
		break;
	default:
		return -E_INVAL;
800113cc:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2143
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
}
800113d0:	8fb00020 	lw	s0,32(sp)
800113d4:	03e00008 	jr	ra
800113d8:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2135
		limit.rlim_max = USTACKSIZE;
		break;
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
800113dc:	3c028015 	lui	v0,0x8015
800113e0:	8c4377a4 	lw	v1,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2129
int do_linux_ugetrlimit(int res, struct linux_rlimit *__user __limit)
{
	struct linux_rlimit limit;
	switch (res) {
	case RLIMIT_STACK:
		limit.rlim_cur = USTACKSIZE;
800113e4:	3c020001 	lui	v0,0x1
800113e8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2135
		limit.rlim_max = USTACKSIZE;
		break;
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
800113ec:	8c700020 	lw	s0,32(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2130
{
	struct linux_rlimit limit;
	switch (res) {
	case RLIMIT_STACK:
		limit.rlim_cur = USTACKSIZE;
		limit.rlim_max = USTACKSIZE;
800113f0:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2136
		break;
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
	lock_mm(mm);
800113f4:	afa50018 	sw	a1,24(sp)
800113f8:	0c004c2e 	jal	800130b8 <lock_mm>
800113fc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2138
	int ret = 0;
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
80011400:	8fa50018 	lw	a1,24(sp)
80011404:	02002021 	move	a0,s0
80011408:	27a60010 	addiu	a2,sp,16
8001140c:	0c007950 	jal	8001e540 <copy_to_user>
80011410:	24070008 	li	a3,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2137
	default:
		return -E_INVAL;
	}
	struct mm_struct *mm = current->mm;
	lock_mm(mm);
	int ret = 0;
80011414:	2403ffea 	li	v1,-22
80011418:	0002180b 	movn	v1,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2141
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
8001141c:	02002021 	move	a0,s0
80011420:	0c004c3f 	jal	800130fc <unlock_mm>
80011424:	afa30018 	sw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2143
	return ret;
}
80011428:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2142
	int ret = 0;
	if (!copy_to_user(mm, __limit, &limit, sizeof(struct linux_rlimit))) {
		ret = -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
8001142c:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/proc.c:2143
}
80011430:	8fb00020 	lw	s0,32(sp)
80011434:	03e00008 	jr	ra
80011438:	27bd0028 	addiu	sp,sp,40

8001143c <remove_from_queue>:
remove_from_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:42
}

// remove sign from the pending queue
static void remove_from_queue(int sign, struct sigpending *queue)
{
	if (!sigismember(queue->signal, sign))
8001143c:	8ca2000c 	lw	v0,12(a1)
80011440:	8ca30008 	lw	v1,8(a1)
80011444:	2484ffff 	addiu	a0,a0,-1
80011448:	00043027 	nor	a2,zero,a0
8001144c:	00024040 	sll	t0,v0,0x1
80011450:	00c84004 	sllv	t0,t0,a2
80011454:	00833006 	srlv	a2,v1,a0
80011458:	01063025 	or	a2,t0,a2
8001145c:	30870020 	andi	a3,a0,0x20
80011460:	00824006 	srlv	t0,v0,a0
80011464:	0107300b 	movn	a2,t0,a3
80011468:	30c60001 	andi	a2,a2,0x1
8001146c:	10c0000b 	beqz	a2,8001149c <remove_from_queue+0x60>
80011470:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:44
		return;
	sigset_del(queue->signal, sign);
80011474:	00862004 	sllv	a0,a2,a0
80011478:	00803021 	move	a2,a0
8001147c:	0007300a 	movz	a2,zero,a3
80011480:	0007200b 	movn	a0,zero,a3
80011484:	00042027 	nor	a0,zero,a0
80011488:	00063027 	nor	a2,zero,a2
8001148c:	00831824 	and	v1,a0,v1
80011490:	00c21024 	and	v0,a2,v0
80011494:	aca30008 	sw	v1,8(a1)
80011498:	aca2000c 	sw	v0,12(a1)
8001149c:	03e00008 	jr	ra
800114a0:	00000000 	nop

800114a4 <lock_sig>:
lock_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:21

//#define __SIGDEBUG

void lock_sig(struct sighand_struct *sh)
{
	if (sh != NULL) {
800114a4:	10800003 	beqz	a0,800114b4 <lock_sig+0x10>
800114a8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:22
		down(&(sh->sig_sem));
800114ac:	08006727 	j	80019c9c <down>
800114b0:	24840608 	addiu	a0,a0,1544
800114b4:	03e00008 	jr	ra
800114b8:	00000000 	nop

800114bc <unlock_sig>:
unlock_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:28
	}
}

void unlock_sig(struct sighand_struct *sh)
{
	if (sh != NULL) {
800114bc:	10800003 	beqz	a0,800114cc <unlock_sig+0x10>
800114c0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:29
		up(&(sh->sig_sem));
800114c4:	08006725 	j	80019c94 <up>
800114c8:	24840608 	addiu	a0,a0,1544
800114cc:	03e00008 	jr	ra
800114d0:	00000000 	nop

800114d4 <next_thread>:
next_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:36
}

// next_thread - get the next thread "proc" from thread_group list
struct proc_struct *next_thread(struct proc_struct *proc)
{
	return le2proc(list_next(&(proc->thread_group)), thread_group);
800114d4:	8c820098 	lw	v0,152(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:37
}
800114d8:	03e00008 	jr	ra
800114dc:	2442ff6c 	addiu	v0,v0,-148

800114e0 <sig_recalc_pending>:
sig_recalc_pending():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:63
}

// calculate is there a signal in proc
void sig_recalc_pending(struct proc_struct *proc)
{
	if ((get_si(proc)->pending.signal & ~(get_si(proc)->blocked)) != 0
800114e0:	8c8300c8 	lw	v1,200(a0)
800114e4:	8c8200cc 	lw	v0,204(a0)
800114e8:	8c8600e0 	lw	a2,224(a0)
800114ec:	8c8500e4 	lw	a1,228(a0)
800114f0:	00031827 	nor	v1,zero,v1
800114f4:	00021027 	nor	v0,zero,v0
800114f8:	00c33024 	and	a2,a2,v1
800114fc:	00a22824 	and	a1,a1,v0
80011500:	00c52825 	or	a1,a2,a1
80011504:	54a0000f 	bnezl	a1,80011544 <sig_recalc_pending+0x64>
80011508:	8c83005c 	lw	v1,92(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:64
	    || (get_si(proc)->signal->
8001150c:	8c8500c0 	lw	a1,192(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:65
		shared_pending.signal & ~(get_si(proc)->blocked)) != 0) {
80011510:	8ca60010 	lw	a2,16(a1)
80011514:	8ca50014 	lw	a1,20(a1)
80011518:	00c31824 	and	v1,a2,v1
8001151c:	00a21024 	and	v0,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:64

// calculate is there a signal in proc
void sig_recalc_pending(struct proc_struct *proc)
{
	if ((get_si(proc)->pending.signal & ~(get_si(proc)->blocked)) != 0
	    || (get_si(proc)->signal->
80011520:	00621025 	or	v0,v1,v0
80011524:	14400006 	bnez	v0,80011540 <sig_recalc_pending+0x60>
80011528:	3c02fffe 	lui	v0,0xfffe
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:68
		shared_pending.signal & ~(get_si(proc)->blocked)) != 0) {
		proc->flags |= TIF_SIGPENDING;
	} else {
		proc->flags &= ~TIF_SIGPENDING;
8001152c:	8c83005c 	lw	v1,92(a0)
80011530:	3442ffff 	ori	v0,v0,0xffff
80011534:	00621024 	and	v0,v1,v0
80011538:	03e00008 	jr	ra
8001153c:	ac82005c 	sw	v0,92(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:66
void sig_recalc_pending(struct proc_struct *proc)
{
	if ((get_si(proc)->pending.signal & ~(get_si(proc)->blocked)) != 0
	    || (get_si(proc)->signal->
		shared_pending.signal & ~(get_si(proc)->blocked)) != 0) {
		proc->flags |= TIF_SIGPENDING;
80011540:	8c83005c 	lw	v1,92(a0)
80011544:	3c020001 	lui	v0,0x1
80011548:	00621025 	or	v0,v1,v0
8001154c:	03e00008 	jr	ra
80011550:	ac82005c 	sw	v0,92(a0)

80011554 <signal_create>:
signal_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:127
	return proc->flags & TIF_SIGPENDING;
}

// create a signal_struct and init it
struct signal_struct *signal_create(void)
{
80011554:	27bdffe8 	addiu	sp,sp,-24
80011558:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:128
	struct signal_struct *sig =
8001155c:	0c00548e 	jal	80015238 <kmalloc>
80011560:	24040020 	li	a0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:130
	    (struct signal_struct *)kmalloc(sizeof(struct signal_struct));
	if (sig != NULL) {
80011564:	10400009 	beqz	v0,8001158c <signal_create+0x38>
80011568:	24430008 	addiu	v1,v0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:134
		set_signal_count(sig, 0);
		sig->curr_target = NULL;
		list_init(&(sig->shared_pending.list));
		sigset_initwith(sig->shared_pending.signal, 0);
8001156c:	00002021 	move	a0,zero
80011570:	00002821 	move	a1,zero
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80011574:	ac400000 	sw	zero,0(v0)
signal_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:132
{
	struct signal_struct *sig =
	    (struct signal_struct *)kmalloc(sizeof(struct signal_struct));
	if (sig != NULL) {
		set_signal_count(sig, 0);
		sig->curr_target = NULL;
80011578:	ac400004 	sw	zero,4(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001157c:	ac43000c 	sw	v1,12(v0)
80011580:	ac430008 	sw	v1,8(v0)
signal_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:134
		list_init(&(sig->shared_pending.list));
		sigset_initwith(sig->shared_pending.signal, 0);
80011584:	ac440010 	sw	a0,16(v0)
80011588:	ac450014 	sw	a1,20(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:137
	}
	return sig;
}
8001158c:	8fbf0014 	lw	ra,20(sp)
80011590:	03e00008 	jr	ra
80011594:	27bd0018 	addiu	sp,sp,24

80011598 <signal_destroy>:
signal_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:141

// free a signal_struct
void signal_destroy(struct signal_struct *sig)
{
80011598:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:142
	assert(sig != NULL && signal_count(sig) == 0);
8001159c:	1080000a 	beqz	a0,800115c8 <signal_destroy+0x30>
800115a0:	afbf0014 	sw	ra,20(sp)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
800115a4:	8c830000 	lw	v1,0(a0)
signal_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:142
800115a8:	14600007 	bnez	v1,800115c8 <signal_destroy+0x30>
800115ac:	8fbf0014 	lw	ra,20(sp)
flush_sigqueue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:107
}

// clean the pending queue
static void flush_sigqueue(struct sigpending *queue)
{
	sigset_initwith(queue->signal, 0);
800115b0:	00003021 	move	a2,zero
800115b4:	00003821 	move	a3,zero
800115b8:	ac860010 	sw	a2,16(a0)
800115bc:	ac870014 	sw	a3,20(a0)
signal_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:144
// free a signal_struct
void signal_destroy(struct signal_struct *sig)
{
	assert(sig != NULL && signal_count(sig) == 0);
	flush_sigqueue(&(sig->shared_pending));
	kfree(sig);
800115c0:	080054b9 	j	800152e4 <kfree>
800115c4:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:142
}

// free a signal_struct
void signal_destroy(struct signal_struct *sig)
{
	assert(sig != NULL && signal_count(sig) == 0);
800115c8:	3c048002 	lui	a0,0x8002
800115cc:	3c068002 	lui	a2,0x8002
800115d0:	3c078002 	lui	a3,0x8002
800115d4:	24842fd4 	addiu	a0,a0,12244
800115d8:	2405008e 	li	a1,142
800115dc:	24c60e48 	addiu	a2,a2,3656
800115e0:	0c006b13 	jal	8001ac4c <__panic>
800115e4:	24e72fe0 	addiu	a3,a3,12256

800115e8 <sighand_create>:
sighand_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:149
	kfree(sig);
}

// create a sighand_struct and init it
struct sighand_struct *sighand_create(void)
{
800115e8:	27bdffe0 	addiu	sp,sp,-32
800115ec:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:150
	struct sighand_struct *sh =
800115f0:	0c00548e 	jal	80015238 <kmalloc>
800115f4:	24040620 	li	a0,1568
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:152
	    (struct sighand_struct *)kmalloc(sizeof(struct sighand_struct));
	if (sh != NULL) {
800115f8:	10400013 	beqz	v0,80011648 <sighand_create+0x60>
800115fc:	8fbf001c 	lw	ra,28(sp)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80011600:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:148
	flush_sigqueue(&(sig->shared_pending));
	kfree(sig);
}

// create a sighand_struct and init it
struct sighand_struct *sighand_create(void)
80011604:	24430008 	addiu	v1,v0,8
sighand_create():
80011608:	24040040 	li	a0,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:157
	if (sh != NULL) {
		set_sighand_count(sh, 0);
		int i;
		for (i = 0; i < sizeof(sh->action) / sizeof(sh->action[0]); ++i) {
			sh->action[i].sa_handler = SIG_DFL;
			sigset_initwith(sh->action[i].sa_mask, 0);
8001160c:	00003021 	move	a2,zero
80011610:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:158
			sh->action[i].sa_flags = 0;
80011614:	2484ffff 	addiu	a0,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:156
	    (struct sighand_struct *)kmalloc(sizeof(struct sighand_struct));
	if (sh != NULL) {
		set_sighand_count(sh, 0);
		int i;
		for (i = 0; i < sizeof(sh->action) / sizeof(sh->action[0]); ++i) {
			sh->action[i].sa_handler = SIG_DFL;
80011618:	ac600000 	sw	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:157
			sigset_initwith(sh->action[i].sa_mask, 0);
8001161c:	ac660008 	sw	a2,8(v1)
80011620:	ac67000c 	sw	a3,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:158
			sh->action[i].sa_flags = 0;
80011624:	ac600010 	sw	zero,16(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:155
	struct sighand_struct *sh =
	    (struct sighand_struct *)kmalloc(sizeof(struct sighand_struct));
	if (sh != NULL) {
		set_sighand_count(sh, 0);
		int i;
		for (i = 0; i < sizeof(sh->action) / sizeof(sh->action[0]); ++i) {
80011628:	1480fff9 	bnez	a0,80011610 <sighand_create+0x28>
8001162c:	24630018 	addiu	v1,v1,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:160
			sh->action[i].sa_handler = SIG_DFL;
			sigset_initwith(sh->action[i].sa_mask, 0);
			sh->action[i].sa_flags = 0;
		}
		sem_init(&(sh->sig_sem), 1);
80011630:	24440608 	addiu	a0,v0,1544
80011634:	24050001 	li	a1,1
80011638:	0c00671f 	jal	80019c7c <sem_init>
8001163c:	afa20010 	sw	v0,16(sp)
80011640:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:163
	}
	return sh;
}
80011644:	8fbf001c 	lw	ra,28(sp)
80011648:	03e00008 	jr	ra
8001164c:	27bd0020 	addiu	sp,sp,32

80011650 <sighand_destroy>:
sighand_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:167

// free a sighand_struct
void sighand_destroy(struct sighand_struct *sh)
{
80011650:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:168
	assert(sh != NULL && sighand_count(sh) == 0);
80011654:	10800006 	beqz	a0,80011670 <sighand_destroy+0x20>
80011658:	afbf0014 	sw	ra,20(sp)
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001165c:	8c820000 	lw	v0,0(a0)
sighand_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:168
80011660:	14400003 	bnez	v0,80011670 <sighand_destroy+0x20>
80011664:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:169
	kfree(sh);
80011668:	080054b9 	j	800152e4 <kfree>
8001166c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:168
}

// free a sighand_struct
void sighand_destroy(struct sighand_struct *sh)
{
	assert(sh != NULL && sighand_count(sh) == 0);
80011670:	3c048002 	lui	a0,0x8002
80011674:	3c068002 	lui	a2,0x8002
80011678:	3c078002 	lui	a3,0x8002
8001167c:	24842fd4 	addiu	a0,a0,12244
80011680:	240500a8 	li	a1,168
80011684:	24c60e48 	addiu	a2,a2,3656
80011688:	0c006b13 	jal	8001ac4c <__panic>
8001168c:	24e73008 	addiu	a3,a3,12296

80011690 <do_sigaction>:
do_sigaction():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:188
						  || sign == SIGURG));
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
80011690:	27bdffb8 	addiu	sp,sp,-72
80011694:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:189
	assert(get_si(current)->sighand);
80011698:	3c108015 	lui	s0,0x8015
8001169c:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:188
						  || sign == SIGURG));
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
800116a0:	afb40034 	sw	s4,52(sp)
800116a4:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:189
	assert(get_si(current)->sighand);
800116a8:	8c4300c4 	lw	v1,196(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:188
						  || sign == SIGURG));
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
800116ac:	afbf0044 	sw	ra,68(sp)
800116b0:	afb70040 	sw	s7,64(sp)
800116b4:	afb6003c 	sw	s6,60(sp)
800116b8:	afb50038 	sw	s5,56(sp)
800116bc:	afb30030 	sw	s3,48(sp)
800116c0:	afb2002c 	sw	s2,44(sp)
800116c4:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:189
	assert(get_si(current)->sighand);
800116c8:	1060006b 	beqz	v1,80011878 <do_sigaction+0x1e8>
800116cc:	00a0a021 	move	s4,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:193
#ifdef __SIGDEBUG
	kprintf("do_sigaction(): sign = %d, pid = %d\n", sign, current->pid);
#endif
	struct sigaction *k = &(get_si(current)->sighand->action[sign - 1]);
800116d0:	2496ffff 	addiu	s6,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:199

	if (k == NULL) {
		panic("kernel thread call sigaction (i guess)\n");
	}
	int ret = 0;
	struct mm_struct *mm = current->mm;
800116d4:	8c520020 	lw	s2,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:193
{
	assert(get_si(current)->sighand);
#ifdef __SIGDEBUG
	kprintf("do_sigaction(): sign = %d, pid = %d\n", sign, current->pid);
#endif
	struct sigaction *k = &(get_si(current)->sighand->action[sign - 1]);
800116d8:	0016a8c0 	sll	s5,s6,0x3
800116dc:	0016b140 	sll	s6,s6,0x5
800116e0:	02d59823 	subu	s3,s6,s5
800116e4:	26730008 	addiu	s3,s3,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:200
	if (k == NULL) {
		panic("kernel thread call sigaction (i guess)\n");
	}
	int ret = 0;
	struct mm_struct *mm = current->mm;
	lock_mm(mm);
800116e8:	02402021 	move	a0,s2
800116ec:	afa60018 	sw	a2,24(sp)
800116f0:	0c004c2e 	jal	800130b8 <lock_mm>
800116f4:	00739821 	addu	s3,v1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:201
	if (old != NULL && !copy_to_user(mm, old, k, sizeof(struct sigaction))) {
800116f8:	8fa60018 	lw	a2,24(sp)
800116fc:	10c00007 	beqz	a2,8001171c <do_sigaction+0x8c>
80011700:	00c02821 	move	a1,a2
80011704:	02402021 	move	a0,s2
80011708:	02603021 	move	a2,s3
8001170c:	0c007950 	jal	8001e540 <copy_to_user>
80011710:	24070018 	li	a3,24
80011714:	10400048 	beqz	v0,80011838 <do_sigaction+0x1a8>
80011718:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:206
		unlock_mm(mm);
		ret = -E_INVAL;
		goto out;
	}
	if (act == NULL
8001171c:	12800046 	beqz	s4,80011838 <do_sigaction+0x1a8>
80011720:	24170001 	li	s7,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:207
	    || !copy_from_user(mm, k, act, sizeof(struct sigaction), 1)) {
80011724:	02402021 	move	a0,s2
80011728:	02602821 	move	a1,s3
8001172c:	02803021 	move	a2,s4
80011730:	24070018 	li	a3,24
80011734:	0c007936 	jal	8001e4d8 <copy_from_user>
80011738:	afb70010 	sw	s7,16(sp)
8001173c:	1040003e 	beqz	v0,80011838 <do_sigaction+0x1a8>
80011740:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:212
		unlock_mm(mm);
		ret = -E_INVAL;
		goto out;
	}
	unlock_mm(mm);
80011744:	0c004c3f 	jal	800130fc <unlock_mm>
80011748:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:213
	lock_sig(get_si(current)->sighand);
8001174c:	8e0277a4 	lw	v0,30628(s0)
80011750:	0c004529 	jal	800114a4 <lock_sig>
80011754:	8c4400c4 	lw	a0,196(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:215
	sigset_del(k->sa_mask, SIGKILL);
	sigset_del(k->sa_mask, SIGSTOP);
80011758:	8e630008 	lw	v1,8(s3)
8001175c:	3c02fffb 	lui	v0,0xfffb
80011760:	3442feff 	ori	v0,v0,0xfeff
80011764:	00621024 	and	v0,v1,v0
ignore_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80011768:	24030009 	li	v1,9
do_sigaction():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:215
		goto out;
	}
	unlock_mm(mm);
	lock_sig(get_si(current)->sighand);
	sigset_del(k->sa_mask, SIGKILL);
	sigset_del(k->sa_mask, SIGSTOP);
8001176c:	ae620008 	sw	v0,8(s3)
ignore_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80011770:	1223003f 	beq	s1,v1,80011870 <do_sigaction+0x1e0>
80011774:	8e0277a4 	lw	v0,30628(s0)
80011778:	24030013 	li	v1,19
8001177c:	12230008 	beq	s1,v1,800117a0 <do_sigaction+0x110>
80011780:	8c4400c4 	lw	a0,196(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:178
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
80011784:	02d5a823 	subu	s5,s6,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:179
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
80011788:	0095a821 	addu	s5,a0,s5
8001178c:	8ea30008 	lw	v1,8(s5)
80011790:	50770019 	beql	v1,s7,800117f8 <do_sigaction+0x168>
80011794:	8c4500c0 	lw	a1,192(v0)
80011798:	1060000f 	beqz	v1,800117d8 <do_sigaction+0x148>
8001179c:	2623ffef 	addiu	v1,s1,-17
do_sigaction():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:227
			remove_from_queue(sign, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
800117a0:	0c00452f 	jal	800114bc <unlock_sig>
800117a4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:230
out:
	return ret;
}
800117a8:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:198
	struct sigaction *k = &(get_si(current)->sighand->action[sign - 1]);

	if (k == NULL) {
		panic("kernel thread call sigaction (i guess)\n");
	}
	int ret = 0;
800117ac:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:230
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
out:
	return ret;
}
800117b0:	8fb70040 	lw	s7,64(sp)
800117b4:	8fb6003c 	lw	s6,60(sp)
800117b8:	8fb50038 	lw	s5,56(sp)
800117bc:	8fb40034 	lw	s4,52(sp)
800117c0:	8fb30030 	lw	s3,48(sp)
800117c4:	8fb2002c 	lw	s2,44(sp)
800117c8:	8fb10028 	lw	s1,40(sp)
800117cc:	8fb00024 	lw	s0,36(sp)
800117d0:	03e00008 	jr	ra
800117d4:	27bd0048 	addiu	sp,sp,72
ignore_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:180
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
					      && (sign == SIGCONT
800117d8:	2c630002 	sltiu	v1,v1,2
800117dc:	14600005 	bnez	v1,800117f4 <do_sigaction+0x164>
800117e0:	2403001c 	li	v1,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:182
						  || sign == SIGCHLD
						  || sign == SIGWINCH
800117e4:	12230003 	beq	s1,v1,800117f4 <do_sigaction+0x164>
800117e8:	24030017 	li	v1,23
do_sigaction():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:216
	}
	unlock_mm(mm);
	lock_sig(get_si(current)->sighand);
	sigset_del(k->sa_mask, SIGKILL);
	sigset_del(k->sa_mask, SIGSTOP);
	if (ignore_sig(sign, current)) {
800117ec:	1623ffec 	bne	s1,v1,800117a0 <do_sigaction+0x110>
800117f0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:218
		// i'm not very sure that if we should lock
		remove_from_queue(sign,
800117f4:	8c4500c0 	lw	a1,192(v0)
800117f8:	02202021 	move	a0,s1
800117fc:	0c00450f 	jal	8001143c <remove_from_queue>
80011800:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:220
				  &(get_si(current)->signal->shared_pending));
		struct proc_struct *proc = current;
80011804:	8e1277a4 	lw	s2,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:222
		do {
			remove_from_queue(sign, &(get_si(proc)->pending));
80011808:	264500d8 	addiu	a1,s2,216
8001180c:	0c00450f 	jal	8001143c <remove_from_queue>
80011810:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:223
			sig_recalc_pending(proc);
80011814:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011818:	02402021 	move	a0,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001181c:	8e520098 	lw	s2,152(s2)
do_sigaction():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:225
			proc = next_thread(proc);
		} while (proc != current);
80011820:	8e0277a4 	lw	v0,30628(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:224
				  &(get_si(current)->signal->shared_pending));
		struct proc_struct *proc = current;
		do {
			remove_from_queue(sign, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
80011824:	2652ff6c 	addiu	s2,s2,-148
do_sigaction():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:225
		} while (proc != current);
80011828:	1642fff8 	bne	s2,v0,8001180c <do_sigaction+0x17c>
8001182c:	264500d8 	addiu	a1,s2,216
80011830:	080045e8 	j	800117a0 <do_sigaction+0x110>
80011834:	8e4400c4 	lw	a0,196(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:208
		ret = -E_INVAL;
		goto out;
	}
	if (act == NULL
	    || !copy_from_user(mm, k, act, sizeof(struct sigaction), 1)) {
		unlock_mm(mm);
80011838:	0c004c3f 	jal	800130fc <unlock_mm>
8001183c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:230
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
out:
	return ret;
}
80011840:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:209
		goto out;
	}
	if (act == NULL
	    || !copy_from_user(mm, k, act, sizeof(struct sigaction), 1)) {
		unlock_mm(mm);
		ret = -E_INVAL;
80011844:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:230
		} while (proc != current);
	}
	unlock_sig(get_si(current)->sighand);
out:
	return ret;
}
80011848:	8fb70040 	lw	s7,64(sp)
8001184c:	8fb6003c 	lw	s6,60(sp)
80011850:	8fb50038 	lw	s5,56(sp)
80011854:	8fb40034 	lw	s4,52(sp)
80011858:	8fb30030 	lw	s3,48(sp)
8001185c:	8fb2002c 	lw	s2,44(sp)
80011860:	8fb10028 	lw	s1,40(sp)
80011864:	8fb00024 	lw	s0,36(sp)
80011868:	03e00008 	jr	ra
8001186c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80011870:	080045e8 	j	800117a0 <do_sigaction+0x110>
80011874:	8c4400c4 	lw	a0,196(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:189
}

// do syscall sigaction
int do_sigaction(int sign, const struct sigaction *act, struct sigaction *old)
{
	assert(get_si(current)->sighand);
80011878:	3c048002 	lui	a0,0x8002
8001187c:	3c068002 	lui	a2,0x8002
80011880:	3c078002 	lui	a3,0x8002
80011884:	24842fd4 	addiu	a0,a0,12244
80011888:	240500bd 	li	a1,189
8001188c:	24c60e48 	addiu	a2,a2,3656
80011890:	0c006b13 	jal	8001ac4c <__panic>
80011894:	24e73030 	addiu	a3,a3,12336

80011898 <do_sigpending>:
do_sigpending():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:234
	return ret;
}

// do syscall sigpending
int do_sigpending(sigset_t * set)
{
80011898:	27bdffd8 	addiu	sp,sp,-40
8001189c:	afb00020 	sw	s0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:235
	assert(get_si(current)->sighand);
800118a0:	3c108015 	lui	s0,0x8015
800118a4:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:234
	return ret;
}

// do syscall sigpending
int do_sigpending(sigset_t * set)
{
800118a8:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:235
	assert(get_si(current)->sighand);
800118ac:	8c6200c4 	lw	v0,196(v1)
800118b0:	10400025 	beqz	v0,80011948 <do_sigpending+0xb0>
800118b4:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:239
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
	    signal->shared_pending.signal;
800118b8:	8c6200c0 	lw	v0,192(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:238
int do_sigpending(sigset_t * set)
{
	assert(get_si(current)->sighand);
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
800118bc:	8c6400e0 	lw	a0,224(v1)
800118c0:	8c6800e4 	lw	t0,228(v1)
800118c4:	8c490010 	lw	t1,16(v0)
800118c8:	8c420014 	lw	v0,20(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:240
	    signal->shared_pending.signal;
	pending &= get_si(current)->blocked;
800118cc:	8c6700c8 	lw	a3,200(v1)
800118d0:	8c6600cc 	lw	a2,204(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:238
int do_sigpending(sigset_t * set)
{
	assert(get_si(current)->sighand);
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
800118d4:	01242025 	or	a0,t1,a0
800118d8:	00481025 	or	v0,v0,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:240
	    signal->shared_pending.signal;
	pending &= get_si(current)->blocked;
800118dc:	00c21024 	and	v0,a2,v0
800118e0:	00e42024 	and	a0,a3,a0
800118e4:	afa20014 	sw	v0,20(sp)
800118e8:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:242
	int ret = 0;
	if (set != NULL) {
800118ec:	10a00012 	beqz	a1,80011938 <do_sigpending+0xa0>
800118f0:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:243
		lock_mm(current->mm);
800118f4:	8c640020 	lw	a0,32(v1)
800118f8:	0c004c2e 	jal	800130b8 <lock_mm>
800118fc:	afa50018 	sw	a1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:244
		if (!copy_to_user(current->mm, set, &pending, sizeof(sigset_t))) {
80011900:	8e0277a4 	lw	v0,30628(s0)
80011904:	8fa50018 	lw	a1,24(sp)
80011908:	27a60010 	addiu	a2,sp,16
8001190c:	8c440020 	lw	a0,32(v0)
80011910:	0c007950 	jal	8001e540 <copy_to_user>
80011914:	24070008 	li	a3,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:247
			ret = -E_INVAL;
		}
		unlock_mm(current->mm);
80011918:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:241
	sigset_t pending;
	pending =
	    get_si(current)->pending.signal | get_si(current)->
	    signal->shared_pending.signal;
	pending &= get_si(current)->blocked;
	int ret = 0;
8001191c:	2404ffea 	li	a0,-22
80011920:	0002200b 	movn	a0,zero,v0
80011924:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:247
	if (set != NULL) {
		lock_mm(current->mm);
		if (!copy_to_user(current->mm, set, &pending, sizeof(sigset_t))) {
			ret = -E_INVAL;
		}
		unlock_mm(current->mm);
80011928:	8c640020 	lw	a0,32(v1)
8001192c:	0c004c3f 	jal	800130fc <unlock_mm>
80011930:	afa20018 	sw	v0,24(sp)
80011934:	8fa20018 	lw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:250
	}
	return ret;
}
80011938:	8fbf0024 	lw	ra,36(sp)
8001193c:	8fb00020 	lw	s0,32(sp)
80011940:	03e00008 	jr	ra
80011944:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:235
}

// do syscall sigpending
int do_sigpending(sigset_t * set)
{
	assert(get_si(current)->sighand);
80011948:	3c048002 	lui	a0,0x8002
8001194c:	3c068002 	lui	a2,0x8002
80011950:	3c078002 	lui	a3,0x8002
80011954:	24842fd4 	addiu	a0,a0,12244
80011958:	240500eb 	li	a1,235
8001195c:	24c60e48 	addiu	a2,a2,3656
80011960:	0c006b13 	jal	8001ac4c <__panic>
80011964:	24e73030 	addiu	a3,a3,12336

80011968 <do_sigprocmask>:
do_sigprocmask():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:254
	return ret;
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
80011968:	27bdffc0 	addiu	sp,sp,-64
8001196c:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:255
	assert(get_si(current)->signal);
80011970:	3c118015 	lui	s1,0x8015
80011974:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:254
	return ret;
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
80011978:	afb50038 	sw	s5,56(sp)
8001197c:	afb40034 	sw	s4,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:255
	assert(get_si(current)->signal);
80011980:	8c4300c0 	lw	v1,192(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:254
	return ret;
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
80011984:	afb2002c 	sw	s2,44(sp)
80011988:	afbf003c 	sw	ra,60(sp)
8001198c:	afb30030 	sw	s3,48(sp)
80011990:	afb00024 	sw	s0,36(sp)
80011994:	00809021 	move	s2,a0
80011998:	00a0a821 	move	s5,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:255
	assert(get_si(current)->signal);
8001199c:	10600051 	beqz	v1,80011ae4 <do_sigprocmask+0x17c>
800119a0:	00c0a021 	move	s4,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:258
	sigset_t new;
	int ret = -E_INVAL;
	if (set == NULL) {
800119a4:	10a0002e 	beqz	a1,80011a60 <do_sigprocmask+0xf8>
800119a8:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:261
		goto out;
	}
	struct mm_struct *mm = current->mm;
800119ac:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:262
	lock_mm(mm);
800119b0:	0c004c2e 	jal	800130b8 <lock_mm>
800119b4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:263
	if (!copy_from_user(mm, &new, set, sizeof(sigset_t), 1)) {
800119b8:	24020001 	li	v0,1
800119bc:	02002021 	move	a0,s0
800119c0:	27a50018 	addiu	a1,sp,24
800119c4:	02a03021 	move	a2,s5
800119c8:	24070008 	li	a3,8
800119cc:	0c007936 	jal	8001e4d8 <copy_from_user>
800119d0:	afa20010 	sw	v0,16(sp)
800119d4:	1040003f 	beqz	v0,80011ad4 <do_sigprocmask+0x16c>
800119d8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:267
		unlock_mm(mm);
		goto out;
	}
	if (old != NULL
800119dc:	12800008 	beqz	s4,80011a00 <do_sigprocmask+0x98>
800119e0:	8e2677a4 	lw	a2,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:268
	    && !copy_to_user(mm, old, &(get_si(current)->blocked),
800119e4:	02002021 	move	a0,s0
800119e8:	02802821 	move	a1,s4
800119ec:	24c600c8 	addiu	a2,a2,200
800119f0:	0c007950 	jal	8001e540 <copy_to_user>
800119f4:	24070008 	li	a3,8
800119f8:	10400036 	beqz	v0,80011ad4 <do_sigprocmask+0x16c>
800119fc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:273
			     sizeof(sigset_t))) {
		unlock_mm(mm);
		goto out;
	}
	unlock_mm(mm);
80011a00:	0c004c3f 	jal	800130fc <unlock_mm>
80011a04:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:275
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
80011a08:	8fa40018 	lw	a0,24(sp)
80011a0c:	3c03fffb 	lui	v1,0xfffb
80011a10:	3463feff 	ori	v1,v1,0xfeff
80011a14:	00831824 	and	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:277
	ret = 0;
	switch (how) {
80011a18:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:275
		unlock_mm(mm);
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
80011a1c:	8fa2001c 	lw	v0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:277
	ret = 0;
	switch (how) {
80011a20:	1244001f 	beq	s2,a0,80011aa0 <do_sigprocmask+0x138>
80011a24:	afa30018 	sw	v1,24(sp)
80011a28:	24040002 	li	a0,2
80011a2c:	12440016 	beq	s2,a0,80011a88 <do_sigprocmask+0x120>
80011a30:	8e2477a4 	lw	a0,30628(s1)
80011a34:	16400008 	bnez	s2,80011a58 <do_sigprocmask+0xf0>
80011a38:	2413ffea 	li	s3,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:279
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
80011a3c:	8c8600c8 	lw	a2,200(a0)
80011a40:	8c8500cc 	lw	a1,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:276
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
	ret = 0;
80011a44:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:279
	switch (how) {
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
80011a48:	00c31825 	or	v1,a2,v1
80011a4c:	00a21025 	or	v0,a1,v0
80011a50:	ac8300c8 	sw	v1,200(a0)
80011a54:	ac8200cc 	sw	v0,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:290
		sigset_initwith(get_si(current)->blocked, new);
		break;
	default:
		ret = -E_INVAL;
	}
	sig_recalc_pending(current);
80011a58:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011a5c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:293
out:
	return ret;
}
80011a60:	8fbf003c 	lw	ra,60(sp)
80011a64:	02601021 	move	v0,s3
80011a68:	8fb50038 	lw	s5,56(sp)
80011a6c:	8fb40034 	lw	s4,52(sp)
80011a70:	8fb30030 	lw	s3,48(sp)
80011a74:	8fb2002c 	lw	s2,44(sp)
80011a78:	8fb10028 	lw	s1,40(sp)
80011a7c:	8fb00024 	lw	s0,36(sp)
80011a80:	03e00008 	jr	ra
80011a84:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:276
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
	ret = 0;
80011a88:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:285
		break;
	case SIG_UNBLOCK:
		sigset_delmask(get_si(current)->blocked, new);
		break;
	case SIG_SETMASK:
		sigset_initwith(get_si(current)->blocked, new);
80011a8c:	ac8300c8 	sw	v1,200(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:290
		break;
	default:
		ret = -E_INVAL;
	}
	sig_recalc_pending(current);
80011a90:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011a94:	ac8200cc 	sw	v0,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:293
out:
	return ret;
}
80011a98:	08004699 	j	80011a64 <do_sigprocmask+0xfc>
80011a9c:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:282
	switch (how) {
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
		break;
	case SIG_UNBLOCK:
		sigset_delmask(get_si(current)->blocked, new);
80011aa0:	8e2477a4 	lw	a0,30628(s1)
80011aa4:	00031827 	nor	v1,zero,v1
80011aa8:	00021027 	nor	v0,zero,v0
80011aac:	8c8600c8 	lw	a2,200(a0)
80011ab0:	8c8500cc 	lw	a1,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:276
		goto out;
	}
	unlock_mm(mm);
	sigset_del(new, SIGKILL);
	sigset_del(new, SIGSTOP);
	ret = 0;
80011ab4:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:282
	switch (how) {
	case SIG_BLOCK:
		sigset_addmask(get_si(current)->blocked, new);
		break;
	case SIG_UNBLOCK:
		sigset_delmask(get_si(current)->blocked, new);
80011ab8:	00c31824 	and	v1,a2,v1
80011abc:	00a21024 	and	v0,a1,v0
80011ac0:	ac8300c8 	sw	v1,200(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:290
		sigset_initwith(get_si(current)->blocked, new);
		break;
	default:
		ret = -E_INVAL;
	}
	sig_recalc_pending(current);
80011ac4:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011ac8:	ac8200cc 	sw	v0,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:293
out:
	return ret;
}
80011acc:	08004699 	j	80011a64 <do_sigprocmask+0xfc>
80011ad0:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:270
		goto out;
	}
	if (old != NULL
	    && !copy_to_user(mm, old, &(get_si(current)->blocked),
			     sizeof(sigset_t))) {
		unlock_mm(mm);
80011ad4:	0c004c3f 	jal	800130fc <unlock_mm>
80011ad8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:271
		goto out;
80011adc:	08004699 	j	80011a64 <do_sigprocmask+0xfc>
80011ae0:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:255
}

// do syscall sigprocmask
int do_sigprocmask(int how, const sigset_t * set, sigset_t * old)
{
	assert(get_si(current)->signal);
80011ae4:	3c048002 	lui	a0,0x8002
80011ae8:	3c068002 	lui	a2,0x8002
80011aec:	3c078002 	lui	a3,0x8002
80011af0:	24842fd4 	addiu	a0,a0,12244
80011af4:	240500ff 	li	a1,255
80011af8:	24c60e48 	addiu	a2,a2,3656
80011afc:	0c006b13 	jal	8001ac4c <__panic>
80011b00:	24e7304c 	addiu	a3,a3,12364

80011b04 <do_signal>:
do_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:553
	schedule();
}

// do the signals in current
int do_signal(struct trapframe *tf, sigset_t * old)
{
80011b04:	27bdffc0 	addiu	sp,sp,-64
80011b08:	afb60030 	sw	s6,48(sp)
80011b0c:	afb5002c 	sw	s5,44(sp)
80011b10:	afbf003c 	sw	ra,60(sp)
80011b14:	afbe0038 	sw	s8,56(sp)
80011b18:	afb70034 	sw	s7,52(sp)
80011b1c:	afb40028 	sw	s4,40(sp)
80011b20:	afb30024 	sw	s3,36(sp)
80011b24:	afb20020 	sw	s2,32(sp)
80011b28:	afb1001c 	sw	s1,28(sp)
80011b2c:	afb00018 	sw	s0,24(sp)
80011b30:	0080a821 	move	s5,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:554
	assert(!trap_in_kernel(tf));
80011b34:	0c007c90 	jal	8001f240 <trap_in_kernel>
80011b38:	00a0b021 	move	s6,a1
80011b3c:	144000e4 	bnez	v0,80011ed0 <do_signal+0x3cc>
80011b40:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:555
	if (!get_si(current)->signal || !get_si(current)->sighand)
80011b44:	8c7e77a4 	lw	s8,30628(v1)
80011b48:	8fc300c0 	lw	v1,192(s8)
80011b4c:	10600053 	beqz	v1,80011c9c <do_signal+0x198>
80011b50:	00008021 	move	s0,zero
80011b54:	8fc300c4 	lw	v1,196(s8)
80011b58:	10600050 	beqz	v1,80011c9c <do_signal+0x198>
80011b5c:	00408021 	move	s0,v0
signal_pending():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:122
}

// is there a signal pending in proc
static inline bool signal_pending(struct proc_struct *proc)
{
	return proc->flags & TIF_SIGPENDING;
80011b60:	8fc3005c 	lw	v1,92(s8)
80011b64:	7c620400 	ext	v0,v1,0x10,0x1
do_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:557
int do_signal(struct trapframe *tf, sigset_t * old)
{
	assert(!trap_in_kernel(tf));
	if (!get_si(current)->signal || !get_si(current)->sighand)
		return 0;
	if (!signal_pending(current))
80011b68:	1040004c 	beqz	v0,80011c9c <do_signal+0x198>
80011b6c:	27c200c8 	addiu	v0,s8,200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:561
		return 0;
	int sign;
	if (old == NULL) {
		old = &get_si(current)->blocked;
80011b70:	0056b00a 	movz	s6,v0,s6
dequeue_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:77
// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
		while (++sign < 64) {
80011b74:	24170040 	li	s7,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:76

// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
80011b78:	8fcb00e0 	lw	t3,224(s8)
80011b7c:	8fca00e4 	lw	t2,228(s8)
80011b80:	016a1025 	or	v0,t3,t2
80011b84:	50400053 	beqzl	v0,80011cd4 <do_signal+0x1d0>
80011b88:	8fc500c0 	lw	a1,192(s8)
80011b8c:	8fc700cc 	lw	a3,204(s8)
80011b90:	8fc900c8 	lw	t1,200(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:77
		while (++sign < 64) {
80011b94:	24100001 	li	s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:76

// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
80011b98:	00001821 	move	v1,zero
80011b9c:	00074040 	sll	t0,a3,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:79
		while (++sign < 64) {
			if (!sigismember(get_si(proc)->blocked, sign)
			    && sigismember(get_si(proc)->pending.signal, sign)) {
80011ba0:	080046ed 	j	80011bb4 <do_signal+0xb0>
80011ba4:	000a6040 	sll	t4,t2,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:77
// return a signal every time, until empty then return 0
static int dequeue_signal(struct proc_struct *proc)
{
	int sign = 0;
	if (get_si(proc)->pending.signal != 0) {
		while (++sign < 64) {
80011ba8:	10570049 	beq	v0,s7,80011cd0 <do_signal+0x1cc>
80011bac:	02001821 	move	v1,s0
80011bb0:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:78
			if (!sigismember(get_si(proc)->blocked, sign)
80011bb4:	00032827 	nor	a1,zero,v1
80011bb8:	00a83004 	sllv	a2,t0,a1
80011bbc:	00691006 	srlv	v0,t1,v1
80011bc0:	00c21025 	or	v0,a2,v0
80011bc4:	30640020 	andi	a0,v1,0x20
80011bc8:	00673006 	srlv	a2,a3,v1
80011bcc:	00c4100b 	movn	v0,a2,a0
80011bd0:	30420001 	andi	v0,v0,0x1
80011bd4:	1440fff4 	bnez	v0,80011ba8 <do_signal+0xa4>
80011bd8:	26020001 	addiu	v0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:79
			    && sigismember(get_si(proc)->pending.signal, sign)) {
80011bdc:	006b1006 	srlv	v0,t3,v1
80011be0:	00ac2804 	sllv	a1,t4,a1
80011be4:	00a21025 	or	v0,a1,v0
80011be8:	006a1806 	srlv	v1,t2,v1
80011bec:	0064100b 	movn	v0,v1,a0
80011bf0:	30420001 	andi	v0,v0,0x1
80011bf4:	1040ffec 	beqz	v0,80011ba8 <do_signal+0xa4>
80011bf8:	26020001 	addiu	v0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:80
				remove_from_queue(sign,
80011bfc:	02002021 	move	a0,s0
80011c00:	0c00450f 	jal	8001143c <remove_from_queue>
80011c04:	27c500d8 	addiu	a1,s8,216
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:82
						  &(get_si(proc)->pending));
				sig_recalc_pending(proc);
80011c08:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011c0c:	03c02021 	move	a0,s8
do_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:570
#ifdef __SIGDEBUG
		kprintf("do_signal(): sign = %d, pid = %d\n", sign,
			current->pid);
#endif
		struct sigaction *act =
		    &(get_si(current)->sighand->action[sign - 1]);
80011c10:	3c028015 	lui	v0,0x8015
80011c14:	8c5e77a4 	lw	s8,30628(v0)
80011c18:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:571
		if (sign == SIGKILL) {
80011c1c:	24020009 	li	v0,9
80011c20:	1202001c 	beq	s0,v0,80011c94 <do_signal+0x190>
80011c24:	8fc300c4 	lw	v1,196(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:574
			do_exit(-E_KILLED);
			break;
		} else if (sign == SIGSTOP) {
80011c28:	24020013 	li	v0,19
80011c2c:	1202005e 	beq	s0,v0,80011da8 <do_signal+0x2a4>
80011c30:	2611ffff 	addiu	s1,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:569
	while ((sign = dequeue_signal(current)) != 0) {
#ifdef __SIGDEBUG
		kprintf("do_signal(): sign = %d, pid = %d\n", sign,
			current->pid);
#endif
		struct sigaction *act =
80011c34:	001110c0 	sll	v0,s1,0x3
80011c38:	00119140 	sll	s2,s1,0x5
80011c3c:	02429023 	subu	s2,s2,v0
80011c40:	26520008 	addiu	s2,s2,8
80011c44:	00729021 	addu	s2,v1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:576
		if (sign == SIGKILL) {
			do_exit(-E_KILLED);
			break;
		} else if (sign == SIGSTOP) {
			do_signal_stop(current);
		} else if (act->sa_handler == SIG_IGN) {
80011c48:	8e420000 	lw	v0,0(s2)
80011c4c:	24130001 	li	s3,1
80011c50:	5053ffca 	beql	v0,s3,80011b7c <do_signal+0x78>
80011c54:	8fcb00e0 	lw	t3,224(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:578
			continue;
		} else if (act->sa_handler == SIG_DFL) {
80011c58:	14400072 	bnez	v0,80011e24 <do_signal+0x320>
80011c5c:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:579
			if (current == initproc) {
80011c60:	8c627798 	lw	v0,30616(v1)
80011c64:	13c2ffc4 	beq	s8,v0,80011b78 <do_signal+0x74>
80011c68:	2602ffef 	addiu	v0,s0,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:581
				continue;
			} else if (sign == SIGCONT || sign == SIGCHLD
80011c6c:	2c420002 	sltiu	v0,v0,2
80011c70:	1440ffc1 	bnez	v0,80011b78 <do_signal+0x74>
80011c74:	2402001c 	li	v0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:582
				   || sign == SIGWINCH || sign == SIGURG) {
80011c78:	1202ffbf 	beq	s0,v0,80011b78 <do_signal+0x74>
80011c7c:	24020017 	li	v0,23
80011c80:	1202ffbd 	beq	s0,v0,80011b78 <do_signal+0x74>
80011c84:	2602ffec 	addiu	v0,s0,-20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:584
				continue;
			} else if (sign == SIGTSTP || sign == SIGTTIN
80011c88:	2c420003 	sltiu	v0,v0,3
80011c8c:	5440ffbb 	bnezl	v0,80011b7c <do_signal+0x78>
80011c90:	8fcb00e0 	lw	t3,224(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:593
			} else {
#ifdef __SIGDEBUG
				kprintf("do_signal() exit pid = %d\n",
					current->pid);
#endif
				do_exit(-E_KILLED);
80011c94:	0c003d4a 	jal	8000f528 <do_exit>
80011c98:	2404ffdb 	li	a0,-37
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011c9c:	8fbf003c 	lw	ra,60(sp)
80011ca0:	02001021 	move	v0,s0
80011ca4:	8fbe0038 	lw	s8,56(sp)
80011ca8:	8fb70034 	lw	s7,52(sp)
80011cac:	8fb60030 	lw	s6,48(sp)
80011cb0:	8fb5002c 	lw	s5,44(sp)
80011cb4:	8fb40028 	lw	s4,40(sp)
80011cb8:	8fb30024 	lw	s3,36(sp)
80011cbc:	8fb20020 	lw	s2,32(sp)
80011cc0:	8fb1001c 	lw	s1,28(sp)
80011cc4:	8fb00018 	lw	s0,24(sp)
80011cc8:	03e00008 	jr	ra
80011ccc:	27bd0040 	addiu	sp,sp,64
dequeue_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:88
				return sign;
			}
		}
	}
	sign = 0;
	if (get_si(proc)->signal->shared_pending.signal != 0) {
80011cd0:	8fc500c0 	lw	a1,192(s8)
80011cd4:	8cac0010 	lw	t4,16(a1)
80011cd8:	8cab0014 	lw	t3,20(a1)
80011cdc:	018b1025 	or	v0,t4,t3
80011ce0:	10400023 	beqz	v0,80011d70 <do_signal+0x26c>
80011ce4:	24100001 	li	s0,1
80011ce8:	8fc800cc 	lw	t0,204(s8)
80011cec:	8fca00c8 	lw	t2,200(s8)
80011cf0:	00001021 	move	v0,zero
80011cf4:	00084840 	sll	t1,t0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:91
		while (++sign < 64) {
			if (!sigismember(get_si(proc)->blocked, sign)
			    && sigismember(get_si(proc)->signal->
80011cf8:	08004743 	j	80011d0c <do_signal+0x208>
80011cfc:	000b6840 	sll	t5,t3,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:89
			}
		}
	}
	sign = 0;
	if (get_si(proc)->signal->shared_pending.signal != 0) {
		while (++sign < 64) {
80011d00:	1077001b 	beq	v1,s7,80011d70 <do_signal+0x26c>
80011d04:	02001021 	move	v0,s0
80011d08:	00608021 	move	s0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:90
			if (!sigismember(get_si(proc)->blocked, sign)
80011d0c:	00023027 	nor	a2,zero,v0
80011d10:	00c93804 	sllv	a3,t1,a2
80011d14:	004a1806 	srlv	v1,t2,v0
80011d18:	00e31825 	or	v1,a3,v1
80011d1c:	30440020 	andi	a0,v0,0x20
80011d20:	00483806 	srlv	a3,t0,v0
80011d24:	00e4180b 	movn	v1,a3,a0
80011d28:	30630001 	andi	v1,v1,0x1
80011d2c:	1460fff4 	bnez	v1,80011d00 <do_signal+0x1fc>
80011d30:	26030001 	addiu	v1,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:91
			    && sigismember(get_si(proc)->signal->
80011d34:	004c1806 	srlv	v1,t4,v0
80011d38:	00cd3004 	sllv	a2,t5,a2
80011d3c:	00c31825 	or	v1,a2,v1
80011d40:	004b1006 	srlv	v0,t3,v0
80011d44:	0044180b 	movn	v1,v0,a0
80011d48:	30630001 	andi	v1,v1,0x1
80011d4c:	1060ffec 	beqz	v1,80011d00 <do_signal+0x1fc>
80011d50:	26030001 	addiu	v1,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:93
					   shared_pending.signal, sign)) {
				remove_from_queue(sign,
80011d54:	02002021 	move	a0,s0
80011d58:	0c00450f 	jal	8001143c <remove_from_queue>
80011d5c:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:96
						  &(get_si(proc)->
						    signal->shared_pending));
				sig_recalc_pending(proc);
80011d60:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011d64:	03c02021 	move	a0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:570
#ifdef __SIGDEBUG
		kprintf("do_signal(): sign = %d, pid = %d\n", sign,
			current->pid);
#endif
		struct sigaction *act =
		    &(get_si(current)->sighand->action[sign - 1]);
80011d68:	08004705 	j	80011c14 <do_signal+0x110>
80011d6c:	3c028015 	lui	v0,0x8015
do_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011d70:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:88
				return sign;
			}
		}
	}
	sign = 0;
	if (get_si(proc)->signal->shared_pending.signal != 0) {
80011d74:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011d78:	02001021 	move	v0,s0
80011d7c:	8fbe0038 	lw	s8,56(sp)
80011d80:	8fb70034 	lw	s7,52(sp)
80011d84:	8fb60030 	lw	s6,48(sp)
80011d88:	8fb5002c 	lw	s5,44(sp)
80011d8c:	8fb40028 	lw	s4,40(sp)
80011d90:	8fb30024 	lw	s3,36(sp)
80011d94:	8fb20020 	lw	s2,32(sp)
80011d98:	8fb1001c 	lw	s1,28(sp)
80011d9c:	8fb00018 	lw	s0,24(sp)
80011da0:	03e00008 	jr	ra
80011da4:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:574
		struct sigaction *act =
		    &(get_si(current)->sighand->action[sign - 1]);
		if (sign == SIGKILL) {
			do_exit(-E_KILLED);
			break;
		} else if (sign == SIGSTOP) {
80011da8:	03c08021 	move	s0,s8
do_signal_stop():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:538
// stop thread group
static void do_signal_stop(struct proc_struct *proc)
{
	struct proc_struct *next = proc;
	do {
		if (next->state == PROC_UNINIT || next->state == PROC_ZOMBIE
80011dac:	24110003 	li	s1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:542
		    || next->flags & PF_EXITING) {
			continue;
		}
		if (next->state == PROC_SLEEPING
80011db0:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:538
// stop thread group
static void do_signal_stop(struct proc_struct *proc)
{
	struct proc_struct *next = proc;
	do {
		if (next->state == PROC_UNINIT || next->state == PROC_ZOMBIE
80011db4:	8e020000 	lw	v0,0(s0)
80011db8:	5040000d 	beqzl	v0,80011df0 <do_signal+0x2ec>
80011dbc:	8e100098 	lw	s0,152(s0)
80011dc0:	5051000b 	beql	v0,s1,80011df0 <do_signal+0x2ec>
80011dc4:	8e100098 	lw	s0,152(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:539
		    || next->flags & PF_EXITING) {
80011dc8:	8e03005c 	lw	v1,92(s0)
80011dcc:	30630001 	andi	v1,v1,0x1
80011dd0:	54600007 	bnezl	v1,80011df0 <do_signal+0x2ec>
80011dd4:	8e100098 	lw	s0,152(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:542
			continue;
		}
		if (next->state == PROC_SLEEPING
80011dd8:	1452000d 	bne	v0,s2,80011e10 <do_signal+0x30c>
80011ddc:	3c058000 	lui	a1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:543
		    && !(next->wait_state & WT_INTERRUPTED)) {
80011de0:	8e020084 	lw	v0,132(s0)
80011de4:	0440000b 	bltz	v0,80011e14 <do_signal+0x310>
80011de8:	02002021 	move	a0,s0
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80011dec:	8e100098 	lw	s0,152(s0)
do_signal_stop():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:547
			continue;
		}
		stop_proc(next, WT_SIGNAL);
	} while ((next = next_thread(next)) != proc);
80011df0:	2610ff6c 	addiu	s0,s0,-148
80011df4:	57d0fff0 	bnel	s8,s0,80011db8 <do_signal+0x2b4>
80011df8:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:548
	schedule();
80011dfc:	0c00059f 	jal	8000167c <schedule>
80011e00:	00000000 	nop
80011e04:	3c028015 	lui	v0,0x8015
80011e08:	080046de 	j	80011b78 <do_signal+0x74>
80011e0c:	8c5e77a4 	lw	s8,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:546
		}
		if (next->state == PROC_SLEEPING
		    && !(next->wait_state & WT_INTERRUPTED)) {
			continue;
		}
		stop_proc(next, WT_SIGNAL);
80011e10:	02002021 	move	a0,s0
80011e14:	0c0004d4 	jal	80001350 <stop_proc>
80011e18:	34a50400 	ori	a1,a1,0x400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80011e1c:	0800477c 	j	80011df0 <do_signal+0x2ec>
80011e20:	8e100098 	lw	s0,152(s0)
handle_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:517
// prepare block for signal handler
static int
handle_signal(int sign, struct sigaction *act, sigset_t oldset,
	      struct trapframe *tf)
{
	int ret = __sig_setup_frame(sign, act, oldset, tf);
80011e24:	8ec60000 	lw	a2,0(s6)
80011e28:	8ec70004 	lw	a3,4(s6)
80011e2c:	02002021 	move	a0,s0
80011e30:	02402821 	move	a1,s2
80011e34:	0c007a7e 	jal	8001e9f8 <__sig_setup_frame>
80011e38:	afb50010 	sw	s5,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:519

	if (ret != 0) {
80011e3c:	14400004 	bnez	v0,80011e50 <do_signal+0x34c>
80011e40:	8e420010 	lw	v0,16(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:523
		return ret;
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
80011e44:	7c430780 	ext	v1,v0,0x1e,0x1
80011e48:	50600008 	beqzl	v1,80011e6c <do_signal+0x368>
80011e4c:	8e8277a4 	lw	v0,30628(s4)
do_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:602
		} else {
#ifdef __SIGDEBUG
			kprintf("do_signal() call user %d\n", sign);
#endif
			handle_signal(sign, act, *old, tf);
			if ((act->sa_flags & SA_ONESHOT) != 0) {
80011e50:	3c038000 	lui	v1,0x8000
80011e54:	24631000 	addiu	v1,v1,4096
80011e58:	00431024 	and	v0,v0,v1
80011e5c:	5440ff8f 	bnezl	v0,80011c9c <do_signal+0x198>
80011e60:	ae400000 	sw	zero,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:609
			}
			return sign;
		}
	}
	return sign;
}
80011e64:	08004728 	j	80011ca0 <do_signal+0x19c>
80011e68:	8fbf003c 	lw	ra,60(sp)
handle_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:526
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
		get_si(current)->blocked |= act->sa_mask;
		sigset_add(get_si(current)->blocked, sign);
80011e6c:	02339804 	sllv	s3,s3,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:524
	if (ret != 0) {
		return ret;
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
80011e70:	0c004529 	jal	800114a4 <lock_sig>
80011e74:	8c4400c4 	lw	a0,196(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:525
		get_si(current)->blocked |= act->sa_mask;
80011e78:	8e8277a4 	lw	v0,30628(s4)
80011e7c:	8e480008 	lw	t0,8(s2)
80011e80:	8e46000c 	lw	a2,12(s2)
80011e84:	8c4700c8 	lw	a3,200(v0)
80011e88:	8c4300cc 	lw	v1,204(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:526
		sigset_add(get_si(current)->blocked, sign);
80011e8c:	32240020 	andi	a0,s1,0x20
80011e90:	02602821 	move	a1,s3
80011e94:	0004280a 	movz	a1,zero,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:525
		return ret;
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
		get_si(current)->blocked |= act->sa_mask;
80011e98:	01078825 	or	s1,t0,a3
80011e9c:	00c31825 	or	v1,a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:526
		sigset_add(get_si(current)->blocked, sign);
80011ea0:	0004980b 	movn	s3,zero,a0
80011ea4:	00651825 	or	v1,v1,a1
80011ea8:	02338825 	or	s1,s1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:527
		sig_recalc_pending(current);
80011eac:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:526
	}

	if ((act->sa_flags & SA_NODEFER) == 0) {
		lock_sig(get_si(current)->sighand);
		get_si(current)->blocked |= act->sa_mask;
		sigset_add(get_si(current)->blocked, sign);
80011eb0:	ac5100c8 	sw	s1,200(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:527
		sig_recalc_pending(current);
80011eb4:	0c004538 	jal	800114e0 <sig_recalc_pending>
80011eb8:	ac4300cc 	sw	v1,204(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:528
		unlock_sig(get_si(current)->sighand);
80011ebc:	8e8277a4 	lw	v0,30628(s4)
80011ec0:	0c00452f 	jal	800114bc <unlock_sig>
80011ec4:	8c4400c4 	lw	a0,196(v0)
80011ec8:	08004794 	j	80011e50 <do_signal+0x34c>
80011ecc:	8e420010 	lw	v0,16(s2)
do_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:554
}

// do the signals in current
int do_signal(struct trapframe *tf, sigset_t * old)
{
	assert(!trap_in_kernel(tf));
80011ed0:	3c048002 	lui	a0,0x8002
80011ed4:	3c068002 	lui	a2,0x8002
80011ed8:	3c078002 	lui	a3,0x8002
80011edc:	24842fd4 	addiu	a0,a0,12244
80011ee0:	2405022a 	li	a1,554
80011ee4:	24c60e48 	addiu	a2,a2,3656
80011ee8:	0c006b13 	jal	8001ac4c <__panic>
80011eec:	24e73064 	addiu	a3,a3,12388

80011ef0 <do_sigsuspend>:
do_sigsuspend():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011ef0:	27bdffb8 	addiu	sp,sp,-72
80011ef4:	afb00034 	sw	s0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:298
	struct mm_struct *mm = pls_read(current)->mm;
80011ef8:	3c108015 	lui	s0,0x8015
80011efc:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011f00:	afb10038 	sw	s1,56(sp)
80011f04:	00803021 	move	a2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:298
	struct mm_struct *mm = pls_read(current)->mm;
80011f08:	8c510020 	lw	s1,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011f0c:	afbf0044 	sw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:300
	struct mm_struct *mm = pls_read(current)->mm;
	sigset_t mask;
	lock_mm(mm);
80011f10:	afa60028 	sw	a2,40(sp)
80011f14:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:297
	return ret;
}

// do syscall sigsuspend
int do_sigsuspend(sigset_t __user * pmask)
{
80011f18:	afb30040 	sw	s3,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:300
	struct mm_struct *mm = pls_read(current)->mm;
	sigset_t mask;
	lock_mm(mm);
80011f1c:	0c004c2e 	jal	800130b8 <lock_mm>
80011f20:	afb2003c 	sw	s2,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:302
	{
		if (!copy_from_user(mm, &mask, pmask, sizeof(sigset_t), 0)) {
80011f24:	8fa60028 	lw	a2,40(sp)
80011f28:	02202021 	move	a0,s1
80011f2c:	27a50020 	addiu	a1,sp,32
80011f30:	24070008 	li	a3,8
80011f34:	0c007936 	jal	8001e4d8 <copy_from_user>
80011f38:	afa00010 	sw	zero,16(sp)
80011f3c:	10400023 	beqz	v0,80011fcc <do_sigsuspend+0xdc>
80011f40:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:307
			unlock_mm(mm);
			return -E_INVAL;
		}
	}
	unlock_mm(mm);
80011f44:	0c004c3f 	jal	800130fc <unlock_mm>
80011f48:	3c118000 	lui	s1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:318
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f4c:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:314

	sigset_t set;
	sigset_initwith(set, 0);
	sigset_addmask(set, mask);
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
80011f50:	8fa60020 	lw	a2,32(sp)
80011f54:	3c05fffb 	lui	a1,0xfffb
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:318
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f58:	8c8200c8 	lw	v0,200(a0)
80011f5c:	8c8300cc 	lw	v1,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:314

	sigset_t set;
	sigset_initwith(set, 0);
	sigset_addmask(set, mask);
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
80011f60:	34a5feff 	ori	a1,a1,0xfeff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:318
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f64:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:319
	get_si(current)->blocked = set;
80011f68:	8fa20024 	lw	v0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:314

	sigset_t set;
	sigset_initwith(set, 0);
	sigset_addmask(set, mask);
	sigset_del(set, SIGKILL);
	sigset_del(set, SIGSTOP);
80011f6c:	00c52824 	and	a1,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:318
	//kprintf("do_sigsuspend() %d\n", current->pid);
	//print_trapframe(current->tf);

	sigset_t old_blocked = get_si(current)->blocked;
80011f70:	afa3001c 	sw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:319
	get_si(current)->blocked = set;
80011f74:	ac8500c8 	sw	a1,200(a0)
80011f78:	ac8200cc 	sw	v0,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:322

	while (1) {
		current->state = PROC_SLEEPING;
80011f7c:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:323
		current->wait_state = WT_SIGNAL;
80011f80:	02009821 	move	s3,s0
80011f84:	26310400 	addiu	s1,s1,1024
80011f88:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:322

	sigset_t old_blocked = get_si(current)->blocked;
	get_si(current)->blocked = set;

	while (1) {
		current->state = PROC_SLEEPING;
80011f8c:	ac920000 	sw	s2,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:324
		current->wait_state = WT_SIGNAL;
		schedule();
80011f90:	0c00059f 	jal	8000167c <schedule>
80011f94:	ac510084 	sw	s1,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:327
		//kprintf("# HERE %08x %08x\n", current->state, current->wait_state);
		int ret;
		if ((ret = do_signal(current->tf, &old_blocked)) != 0) {
80011f98:	8e0277a4 	lw	v0,30628(s0)
80011f9c:	27a50018 	addiu	a1,sp,24
80011fa0:	0c0046c1 	jal	80011b04 <do_signal>
80011fa4:	8c440054 	lw	a0,84(v0)
80011fa8:	5040fff7 	beqzl	v0,80011f88 <do_sigsuspend+0x98>
80011fac:	8e6477a4 	lw	a0,30628(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:331
			return ret;
		}
	}
}
80011fb0:	8fbf0044 	lw	ra,68(sp)
80011fb4:	8fb30040 	lw	s3,64(sp)
80011fb8:	8fb2003c 	lw	s2,60(sp)
80011fbc:	8fb10038 	lw	s1,56(sp)
80011fc0:	8fb00034 	lw	s0,52(sp)
80011fc4:	03e00008 	jr	ra
80011fc8:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:303
	struct mm_struct *mm = pls_read(current)->mm;
	sigset_t mask;
	lock_mm(mm);
	{
		if (!copy_from_user(mm, &mask, pmask, sizeof(sigset_t), 0)) {
			unlock_mm(mm);
80011fcc:	0c004c3f 	jal	800130fc <unlock_mm>
80011fd0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:304
			return -E_INVAL;
80011fd4:	080047ec 	j	80011fb0 <do_sigsuspend+0xc0>
80011fd8:	2402ffea 	li	v0,-22

80011fdc <raise_signal>:
raise_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:612
	}
	return sign;
}

int raise_signal(struct proc_struct *proc, int sign, bool group)
{
80011fdc:	27bdffc8 	addiu	sp,sp,-56
80011fe0:	afb10020 	sw	s1,32(sp)
80011fe4:	afb0001c 	sw	s0,28(sp)
80011fe8:	afbf0034 	sw	ra,52(sp)
80011fec:	afb50030 	sw	s5,48(sp)
80011ff0:	afb4002c 	sw	s4,44(sp)
80011ff4:	afb30028 	sw	s3,40(sp)
80011ff8:	afb20024 	sw	s2,36(sp)
80011ffc:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:617
	struct siginfo_t info;
	info.si_signo = sign;
	info.si_errno = 0;
	info.si_code = SI_USER;
	if (group) {
80012000:	14c0004d 	bnez	a2,80012138 <raise_signal+0x15c>
80012004:	00a08821 	move	s1,a1
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:391
static int
specific_send_sig_info(int sign, struct siginfo_t *info, struct proc_struct *to)
{
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
80012008:	0c004529 	jal	800114a4 <lock_sig>
8001200c:	8c8400c4 	lw	a0,196(a0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012010:	40026000 	mfc0	v0,c0_status
80012014:	30420001 	andi	v0,v0,0x1
80012018:	14400090 	bnez	v0,8001225c <raise_signal+0x280>
8001201c:	00009021 	move	s2,zero
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:394
	local_intr_save(intr_flag);

	if (!sigismember(get_si(to)->blocked, sign)
80012020:	8e0400cc 	lw	a0,204(s0)
80012024:	8e0200c8 	lw	v0,200(s0)
80012028:	2623ffff 	addiu	v1,s1,-1
8001202c:	00043840 	sll	a3,a0,0x1
80012030:	00033027 	nor	a2,zero,v1
80012034:	00c73804 	sllv	a3,a3,a2
80012038:	00621006 	srlv	v0,v0,v1
8001203c:	30650020 	andi	a1,v1,0x20
80012040:	00e21025 	or	v0,a3,v0
80012044:	00642006 	srlv	a0,a0,v1
80012048:	0085100b 	movn	v0,a0,a1
8001204c:	30480001 	andi	t0,v0,0x1
80012050:	55000012 	bnezl	t0,8001209c <raise_signal+0xc0>
80012054:	8e0700e4 	lw	a3,228(s0)
ignore_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
80012058:	24020009 	li	v0,9
8001205c:	5222000f 	beql	s1,v0,8001209c <raise_signal+0xc0>
80012060:	8e0700e4 	lw	a3,228(s0)
80012064:	24020013 	li	v0,19
80012068:	1222000b 	beq	s1,v0,80012098 <raise_signal+0xbc>
8001206c:	00033940 	sll	a3,v1,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:179
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
80012070:	8e0400c4 	lw	a0,196(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:178
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
80012074:	000310c0 	sll	v0,v1,0x3
80012078:	00e21023 	subu	v0,a3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:179
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
8001207c:	00821021 	addu	v0,a0,v0
80012080:	8c440008 	lw	a0,8(v0)
80012084:	24070001 	li	a3,1
80012088:	10870019 	beq	a0,a3,800120f0 <raise_signal+0x114>
8001208c:	00001021 	move	v0,zero
80012090:	108000f0 	beqz	a0,80012454 <raise_signal+0x478>
80012094:	2624ffef 	addiu	a0,s1,-17
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:398

	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
		goto out;
	}
	if (sigismember(get_si(to)->pending.signal, sign)) {
80012098:	8e0700e4 	lw	a3,228(s0)
8001209c:	8e0900e0 	lw	t1,224(s0)
800120a0:	00072040 	sll	a0,a3,0x1
800120a4:	00c43004 	sllv	a2,a0,a2
800120a8:	00692006 	srlv	a0,t1,v1
800120ac:	00c42025 	or	a0,a2,a0
800120b0:	00673006 	srlv	a2,a3,v1
800120b4:	00c5200b 	movn	a0,a2,a1
800120b8:	30840001 	andi	a0,a0,0x1
800120bc:	1480000c 	bnez	a0,800120f0 <raise_signal+0x114>
800120c0:	00001021 	move	v0,zero
send_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:362
		q->info.si_code = SI_KERNEL;
	} else {
		memcpy(&(q->info), info, sizeof(struct siginfo_t));
	}
#endif
	sigset_add(pending->signal, sign);
800120c4:	24020001 	li	v0,1
800120c8:	00621804 	sllv	v1,v0,v1
800120cc:	00601021 	move	v0,v1
800120d0:	0005100a 	movz	v0,zero,a1
800120d4:	0005180b 	movn	v1,zero,a1
800120d8:	00473825 	or	a3,v0,a3
800120dc:	00691825 	or	v1,v1,t1
800120e0:	ae0300e0 	sw	v1,224(s0)
800120e4:	ae0700e4 	sw	a3,228(s0)
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:402
	}
	if (sigismember(get_si(to)->pending.signal, sign)) {
		goto out;;
	}
	if (send_signal(sign, info, to, &(get_si(to)->pending)) == 0
	    && !sigismember(get_si(to)->blocked, sign)) {
800120e8:	1100006e 	beqz	t0,800122a4 <raise_signal+0x2c8>
800120ec:	24020001 	li	v0,1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800120f0:	52400005 	beqzl	s2,80012108 <raise_signal+0x12c>
800120f4:	8e0400c4 	lw	a0,196(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800120f8:	0c006d08 	jal	8001b420 <intr_enable>
800120fc:	afa20010 	sw	v0,16(sp)
80012100:	8fa20010 	lw	v0,16(sp)
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:408
		signal_wakeup(sign, to);
	}
	ret = 1;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
80012104:	8e0400c4 	lw	a0,196(s0)
80012108:	0c00452f 	jal	800114bc <unlock_sig>
8001210c:	afa20010 	sw	v0,16(sp)
80012110:	8fa20010 	lw	v0,16(sp)
raise_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:622
	if (group) {
		return group_send_sig_info(sign, &info, proc);
	} else {
		return specific_send_sig_info(sign, &info, proc);
	}
}
80012114:	8fbf0034 	lw	ra,52(sp)
80012118:	8fb50030 	lw	s5,48(sp)
8001211c:	8fb4002c 	lw	s4,44(sp)
80012120:	8fb30028 	lw	s3,40(sp)
80012124:	8fb20024 	lw	s2,36(sp)
80012128:	8fb10020 	lw	s1,32(sp)
8001212c:	8fb0001c 	lw	s0,28(sp)
80012130:	03e00008 	jr	ra
80012134:	27bd0038 	addiu	sp,sp,56
group_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:482

// send a signal to thread group
static int
group_send_sig_info(int sign, struct siginfo_t *info, struct proc_struct *to)
{
	if (sign < 0 || sign > 64) {
80012138:	2ca30041 	sltiu	v1,a1,65
8001213c:	1060fff5 	beqz	v1,80012114 <raise_signal+0x138>
80012140:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:485
		return -E_INVAL;
	}
	if (sign == 0 || get_si(to)->sighand == NULL) {
80012144:	10a0fff3 	beqz	a1,80012114 <raise_signal+0x138>
80012148:	00001021 	move	v0,zero
8001214c:	8c8400c4 	lw	a0,196(a0)
80012150:	1080fff1 	beqz	a0,80012118 <raise_signal+0x13c>
80012154:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:490
		return 0;
	}
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
80012158:	0c004529 	jal	800114a4 <lock_sig>
8001215c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012160:	40026000 	mfc0	v0,c0_status
80012164:	30420001 	andi	v0,v0,0x1
80012168:	144000b6 	bnez	v0,80012444 <raise_signal+0x468>
8001216c:	00009021 	move	s2,zero
handle_stop_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:416

// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
80012170:	2622ffed 	addiu	v0,s1,-19
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:415
}

// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
80012174:	2c420004 	sltiu	v0,v0,4
80012178:	144000a0 	bnez	v0,800123fc <raise_signal+0x420>
8001217c:	24020012 	li	v0,18
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:425
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	} else if (sign == SIGCONT) {
80012180:	522200bd 	beql	s1,v0,80012478 <raise_signal+0x49c>
80012184:	8e0500c0 	lw	a1,192(s0)
group_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:493
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
80012188:	8e0200cc 	lw	v0,204(s0)
8001218c:	8e0500c8 	lw	a1,200(s0)
80012190:	2623ffff 	addiu	v1,s1,-1
80012194:	00023040 	sll	a2,v0,0x1
80012198:	00034027 	nor	t0,zero,v1
8001219c:	01063004 	sllv	a2,a2,t0
800121a0:	00652006 	srlv	a0,a1,v1
800121a4:	00c42025 	or	a0,a2,a0
800121a8:	30670020 	andi	a3,v1,0x20
800121ac:	00623006 	srlv	a2,v0,v1
800121b0:	00c7200b 	movn	a0,a2,a3
800121b4:	30840001 	andi	a0,a0,0x1
800121b8:	5480004a 	bnezl	a0,800122e4 <raise_signal+0x308>
800121bc:	8e0600c0 	lw	a2,192(s0)
ignore_sig():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
800121c0:	24040009 	li	a0,9
800121c4:	12240046 	beq	s1,a0,800122e0 <raise_signal+0x304>
800121c8:	24040013 	li	a0,19
800121cc:	12240044 	beq	s1,a0,800122e0 <raise_signal+0x304>
800121d0:	000320c0 	sll	a0,v1,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:179
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
800121d4:	8e0600c4 	lw	a2,196(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:178
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
800121d8:	00034940 	sll	t1,v1,0x5
800121dc:	01242023 	subu	a0,t1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:179
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
800121e0:	00c42021 	addu	a0,a2,a0
800121e4:	8c840008 	lw	a0,8(a0)
800121e8:	24060001 	li	a2,1
800121ec:	1086000b 	beq	a0,a2,8001221c <raise_signal+0x240>
800121f0:	00000000 	nop
800121f4:	5480003b 	bnezl	a0,800122e4 <raise_signal+0x308>
800121f8:	8e0600c0 	lw	a2,192(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:181
					      && (sign == SIGCONT
						  || sign == SIGCHLD
800121fc:	2624ffef 	addiu	a0,s1,-17
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:180
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
					      && (sign == SIGCONT
80012200:	2c840002 	sltiu	a0,a0,2
80012204:	14800005 	bnez	a0,8001221c <raise_signal+0x240>
80012208:	2404001c 	li	a0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:182
						  || sign == SIGCHLD
						  || sign == SIGWINCH
8001220c:	12240003 	beq	s1,a0,8001221c <raise_signal+0x240>
80012210:	24040017 	li	a0,23
group_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:494
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
80012214:	56240033 	bnel	s1,a0,800122e4 <raise_signal+0x308>
80012218:	8e0600c0 	lw	a2,192(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001221c:	16400073 	bnez	s2,800123ec <raise_signal+0x410>
80012220:	00000000 	nop
group_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:508
	}
	group_complete_send(sign, to);
	ret = 0;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
80012224:	8e0400c4 	lw	a0,196(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:509
	return ret;
80012228:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:508
	}
	group_complete_send(sign, to);
	ret = 0;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
8001222c:	0c00452f 	jal	800114bc <unlock_sig>
80012230:	afa20010 	sw	v0,16(sp)
raise_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:622
	if (group) {
		return group_send_sig_info(sign, &info, proc);
	} else {
		return specific_send_sig_info(sign, &info, proc);
	}
}
80012234:	8fbf0034 	lw	ra,52(sp)
80012238:	8fa20010 	lw	v0,16(sp)
8001223c:	8fb50030 	lw	s5,48(sp)
80012240:	8fb4002c 	lw	s4,44(sp)
80012244:	8fb30028 	lw	s3,40(sp)
80012248:	8fb20024 	lw	s2,36(sp)
8001224c:	8fb10020 	lw	s1,32(sp)
80012250:	8fb0001c 	lw	s0,28(sp)
80012254:	03e00008 	jr	ra
80012258:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001225c:	0c006d0c 	jal	8001b430 <intr_disable>
80012260:	24120001 	li	s2,1
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:394
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);

	if (!sigismember(get_si(to)->blocked, sign)
80012264:	8e0400cc 	lw	a0,204(s0)
80012268:	8e0200c8 	lw	v0,200(s0)
8001226c:	2623ffff 	addiu	v1,s1,-1
80012270:	00043840 	sll	a3,a0,0x1
80012274:	00033027 	nor	a2,zero,v1
80012278:	00c73804 	sllv	a3,a3,a2
8001227c:	00621006 	srlv	v0,v0,v1
80012280:	30650020 	andi	a1,v1,0x20
80012284:	00e21025 	or	v0,a3,v0
80012288:	00642006 	srlv	a0,a0,v1
8001228c:	0085100b 	movn	v0,a0,a1
80012290:	30480001 	andi	t0,v0,0x1
80012294:	5500ff81 	bnezl	t0,8001209c <raise_signal+0xc0>
80012298:	8e0700e4 	lw	a3,228(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:175
}

// will the sign be ignored
static inline bool ignore_sig(int sign, struct proc_struct *proc)
{
	if (sign == SIGKILL || sign == SIGSTOP) {
8001229c:	08004817 	j	8001205c <raise_signal+0x80>
800122a0:	24020009 	li	v0,9
signal_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
800122a4:	8e05005c 	lw	a1,92(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:378
	if (proc->state == PROC_SLEEPING
800122a8:	8e030000 	lw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
800122ac:	3c040001 	lui	a0,0x1
800122b0:	00a42025 	or	a0,a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:378
	if (proc->state == PROC_SLEEPING
800122b4:	1462ff8e 	bne	v1,v0,800120f0 <raise_signal+0x114>
800122b8:	ae04005c 	sw	a0,92(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:379
	    && (proc->wait_state & WT_INTERRUPTED || sign == SIGKILL)) {
800122bc:	8e030084 	lw	v1,132(s0)
800122c0:	04600003 	bltz	v1,800122d0 <raise_signal+0x2f4>
800122c4:	24030009 	li	v1,9
800122c8:	1623ff89 	bne	s1,v1,800120f0 <raise_signal+0x114>
800122cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:380
		try_to_wakeup(proc);
800122d0:	0c00053d 	jal	800014f4 <try_to_wakeup>
800122d4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:405
	}
	if (send_signal(sign, info, to, &(get_si(to)->pending)) == 0
	    && !sigismember(get_si(to)->blocked, sign)) {
		signal_wakeup(sign, to);
	}
	ret = 1;
800122d8:	0800483c 	j	800120f0 <raise_signal+0x114>
800122dc:	24020001 	li	v0,1
group_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:497
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
		goto out;
	}
	if (sigismember(get_si(to)->signal->shared_pending.signal, sign)) {
800122e0:	8e0600c0 	lw	a2,192(s0)
800122e4:	8cc90014 	lw	t1,20(a2)
800122e8:	8cca0010 	lw	t2,16(a2)
800122ec:	00092040 	sll	a0,t1,0x1
800122f0:	01044004 	sllv	t0,a0,t0
800122f4:	006a2006 	srlv	a0,t2,v1
800122f8:	01042025 	or	a0,t0,a0
800122fc:	00694006 	srlv	t0,t1,v1
80012300:	0107200b 	movn	a0,t0,a3
80012304:	30840001 	andi	a0,a0,0x1
80012308:	1480ffc4 	bnez	a0,8001221c <raise_signal+0x240>
8001230c:	24040001 	li	a0,1
send_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:362
		q->info.si_code = SI_KERNEL;
	} else {
		memcpy(&(q->info), info, sizeof(struct siginfo_t));
	}
#endif
	sigset_add(pending->signal, sign);
80012310:	00641804 	sllv	v1,a0,v1
80012314:	00604021 	move	t0,v1
group_complete_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:465

// select a proc who wants signal from thread group
static void group_complete_send(int sign, struct proc_struct *proc)
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
80012318:	8cc40004 	lw	a0,4(a2)
send_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:362
		q->info.si_code = SI_KERNEL;
	} else {
		memcpy(&(q->info), info, sizeof(struct siginfo_t));
	}
#endif
	sigset_add(pending->signal, sign);
8001231c:	0007400a 	movz	t0,zero,a3
80012320:	0007180b 	movn	v1,zero,a3
80012324:	006a5025 	or	t2,v1,t2
80012328:	01094825 	or	t1,t0,t1
8001232c:	acca0010 	sw	t2,16(a2)
group_complete_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:466
// select a proc who wants signal from thread group
static void group_complete_send(int sign, struct proc_struct *proc)
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
80012330:	10800078 	beqz	a0,80012514 <raise_signal+0x538>
80012334:	acc90014 	sw	t1,20(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:470
		pick = get_si(proc)->signal->curr_target = proc;
	while (!wants_signal(sign, pick)) {
		pick = next_thread(pick);
		if (pick == get_si(proc)->signal->curr_target) {
80012338:	8c8500c8 	lw	a1,200(a0)
8001233c:	8c8200cc 	lw	v0,204(a0)
wants_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:452
// does the proc want a signal
static bool wants_signal(int sign, struct proc_struct *proc)
{
	if (sigismember(get_si(proc)->blocked, sign)) {
		return 0;
	} else if (proc->flags & PF_EXITING || proc->state == PROC_ZOMBIE) {
80012340:	240a0003 	li	t2,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:454
		return 0;
	} else if (sign == SIGKILL) {
80012344:	240b0009 	li	t3,9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:122
}

// is there a signal pending in proc
static inline bool signal_pending(struct proc_struct *proc)
{
	return proc->flags & TIF_SIGPENDING;
80012348:	080048dd 	j	80012374 <raise_signal+0x398>
8001234c:	3c090001 	lui	t1,0x1
group_complete_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:468
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
		pick = get_si(proc)->signal->curr_target = proc;
	while (!wants_signal(sign, pick)) {
80012350:	50e00017 	beqzl	a3,800123b0 <raise_signal+0x3d4>
80012354:	3c030001 	lui	v1,0x1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80012358:	8c820098 	lw	v0,152(a0)
group_complete_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:470
		pick = next_thread(pick);
		if (pick == get_si(proc)->signal->curr_target) {
8001235c:	8cc50004 	lw	a1,4(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:469
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
		pick = get_si(proc)->signal->curr_target = proc;
	while (!wants_signal(sign, pick)) {
		pick = next_thread(pick);
80012360:	2444ff6c 	addiu	a0,v0,-148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:470
		if (pick == get_si(proc)->signal->curr_target) {
80012364:	1085ffad 	beq	a0,a1,8001221c <raise_signal+0x240>
80012368:	00000000 	nop
8001236c:	8c450034 	lw	a1,52(v0)
80012370:	8c420038 	lw	v0,56(v0)
wants_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:450
}

// does the proc want a signal
static bool wants_signal(int sign, struct proc_struct *proc)
{
	if (sigismember(get_si(proc)->blocked, sign)) {
80012374:	00652824 	and	a1,v1,a1
80012378:	01021024 	and	v0,t0,v0
8001237c:	00a21025 	or	v0,a1,v0
80012380:	5440fff6 	bnezl	v0,8001235c <raise_signal+0x380>
80012384:	8c820098 	lw	v0,152(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:452
		return 0;
	} else if (proc->flags & PF_EXITING || proc->state == PROC_ZOMBIE) {
80012388:	8c82005c 	lw	v0,92(a0)
8001238c:	30450001 	andi	a1,v0,0x1
80012390:	54a0fff2 	bnezl	a1,8001235c <raise_signal+0x380>
80012394:	8c820098 	lw	v0,152(a0)
80012398:	8c850000 	lw	a1,0(a0)
8001239c:	10aaffee 	beq	a1,t2,80012358 <raise_signal+0x37c>
800123a0:	00493824 	and	a3,v0,t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:454
		return 0;
	} else if (sign == SIGKILL) {
800123a4:	162bffea 	bne	s1,t3,80012350 <raise_signal+0x374>
800123a8:	00000000 	nop
signal_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
800123ac:	3c030001 	lui	v1,0x1
800123b0:	00431025 	or	v0,v0,v1
group_complete_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:474
		pick = next_thread(pick);
		if (pick == get_si(proc)->signal->curr_target) {
			return;
		}
	}
	get_si(proc)->signal->curr_target = pick;
800123b4:	acc40004 	sw	a0,4(a2)
signal_wakeup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:377
}

// wake up proc to handle its signal
static void signal_wakeup(int sign, struct proc_struct *proc)
{
	proc->flags |= TIF_SIGPENDING;
800123b8:	ac82005c 	sw	v0,92(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:378
	if (proc->state == PROC_SLEEPING
800123bc:	24020001 	li	v0,1
800123c0:	14a2ff96 	bne	a1,v0,8001221c <raise_signal+0x240>
800123c4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:379
	    && (proc->wait_state & WT_INTERRUPTED || sign == SIGKILL)) {
800123c8:	8c820084 	lw	v0,132(a0)
800123cc:	04400003 	bltz	v0,800123dc <raise_signal+0x400>
800123d0:	24020009 	li	v0,9
800123d4:	1622ff91 	bne	s1,v0,8001221c <raise_signal+0x240>
800123d8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:380
		try_to_wakeup(proc);
800123dc:	0c00053d 	jal	800014f4 <try_to_wakeup>
800123e0:	00000000 	nop
800123e4:	08004887 	j	8001221c <raise_signal+0x240>
800123e8:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800123ec:	0c006d08 	jal	8001b420 <intr_enable>
800123f0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:508
	}
	group_complete_send(sign, to);
	ret = 0;
out:
	local_intr_restore(intr_flag);
	unlock_sig(get_si(to)->sighand);
800123f4:	0800488a 	j	80012228 <raise_signal+0x24c>
800123f8:	8e0400c4 	lw	a0,196(s0)
handle_stop_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:417
// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
		remove_from_queue(SIGCONT,
800123fc:	8e0500c0 	lw	a1,192(s0)
80012400:	24040012 	li	a0,18
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:419
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
80012404:	3c158015 	lui	s5,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:417
// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
		remove_from_queue(SIGCONT,
80012408:	0c00450f 	jal	8001143c <remove_from_queue>
8001240c:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:419
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
80012410:	8eb377a4 	lw	s3,30628(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:421
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
80012414:	266500d8 	addiu	a1,s3,216
80012418:	0c00450f 	jal	8001143c <remove_from_queue>
8001241c:	24040012 	li	a0,18
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:422
			sig_recalc_pending(proc);
80012420:	0c004538 	jal	800114e0 <sig_recalc_pending>
80012424:	02602021 	move	a0,s3
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80012428:	8e730098 	lw	s3,152(s3)
handle_stop_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:424
			proc = next_thread(proc);
		} while (proc != current);
8001242c:	8ea277a4 	lw	v0,30628(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:423
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
80012430:	2673ff6c 	addiu	s3,s3,-148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:424
		} while (proc != current);
80012434:	1662fff8 	bne	s3,v0,80012418 <raise_signal+0x43c>
80012438:	266500d8 	addiu	a1,s3,216
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:493
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
8001243c:	08004863 	j	8001218c <raise_signal+0x1b0>
80012440:	8e0200cc 	lw	v0,204(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80012444:	0c006d0c 	jal	8001b430 <intr_disable>
80012448:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:416

// handle stop and continue signal
static int handle_stop_signal(int sign, struct proc_struct *to)
{
	if (sign == SIGSTOP || sign == SIGTSTP || sign == SIGTTIN
	    || sign == SIGTTOU) {
8001244c:	0800485d 	j	80012174 <raise_signal+0x198>
80012450:	2622ffed 	addiu	v0,s1,-19
specific_send_sig_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:180
	if (sign == SIGKILL || sign == SIGSTOP) {
		return 0;
	}
	struct sigaction *act = &(get_si(proc)->sighand->action[sign - 1]);
	return act->sa_handler == SIG_IGN || (act->sa_handler == SIG_DFL
					      && (sign == SIGCONT
80012454:	2c840002 	sltiu	a0,a0,2
80012458:	1480ff25 	bnez	a0,800120f0 <raise_signal+0x114>
8001245c:	2404001c 	li	a0,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:182
						  || sign == SIGCHLD
						  || sign == SIGWINCH
80012460:	1224ff23 	beq	s1,a0,800120f0 <raise_signal+0x114>
80012464:	24040017 	li	a0,23
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:395
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);

	if (!sigismember(get_si(to)->blocked, sign)
	    && ignore_sig(sign, to)) {
80012468:	1224ff21 	beq	s1,a0,800120f0 <raise_signal+0x114>
8001246c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:398
		goto out;
	}
	if (sigismember(get_si(to)->pending.signal, sign)) {
80012470:	08004827 	j	8001209c <raise_signal+0xc0>
80012474:	8e0700e4 	lw	a3,228(s0)
handle_stop_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:426
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	} else if (sign == SIGCONT) {
		remove_from_queue(SIGSTOP,
80012478:	24040013 	li	a0,19
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:434
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTIN,
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTOU,
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
8001247c:	3c158015 	lui	s5,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:426
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
		} while (proc != current);
	} else if (sign == SIGCONT) {
		remove_from_queue(SIGSTOP,
80012480:	0c00450f 	jal	8001143c <remove_from_queue>
80012484:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:428
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTSTP,
80012488:	8e0500c0 	lw	a1,192(s0)
8001248c:	24040014 	li	a0,20
80012490:	0c00450f 	jal	8001143c <remove_from_queue>
80012494:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:430
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTIN,
80012498:	8e0500c0 	lw	a1,192(s0)
8001249c:	24040015 	li	a0,21
800124a0:	0c00450f 	jal	8001143c <remove_from_queue>
800124a4:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:432
				  &(get_si(to)->signal->shared_pending));
		remove_from_queue(SIGTTOU,
800124a8:	8e0500c0 	lw	a1,192(s0)
800124ac:	24040016 	li	a0,22
800124b0:	0c00450f 	jal	8001143c <remove_from_queue>
800124b4:	24a50008 	addiu	a1,a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:434
				  &(get_si(to)->signal->shared_pending));
		struct proc_struct *proc = current;
800124b8:	8eb377a4 	lw	s3,30628(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:436
		do {
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
800124bc:	267400d8 	addiu	s4,s3,216
800124c0:	24040012 	li	a0,18
800124c4:	0c00450f 	jal	8001143c <remove_from_queue>
800124c8:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:437
			remove_from_queue(SIGTSTP, &(get_si(proc)->pending));
800124cc:	24040014 	li	a0,20
800124d0:	0c00450f 	jal	8001143c <remove_from_queue>
800124d4:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:438
			remove_from_queue(SIGTTIN, &(get_si(proc)->pending));
800124d8:	24040015 	li	a0,21
800124dc:	0c00450f 	jal	8001143c <remove_from_queue>
800124e0:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:439
			remove_from_queue(SIGTTOU, &(get_si(proc)->pending));
800124e4:	02802821 	move	a1,s4
800124e8:	0c00450f 	jal	8001143c <remove_from_queue>
800124ec:	24040016 	li	a0,22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:440
			sig_recalc_pending(proc);
800124f0:	0c004538 	jal	800114e0 <sig_recalc_pending>
800124f4:	02602021 	move	a0,s3
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800124f8:	8e730098 	lw	s3,152(s3)
handle_stop_signal():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:442
			proc = next_thread(proc);
		} while (proc != current);
800124fc:	8ea277a4 	lw	v0,30628(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:441
			remove_from_queue(SIGCONT, &(get_si(proc)->pending));
			remove_from_queue(SIGTSTP, &(get_si(proc)->pending));
			remove_from_queue(SIGTTIN, &(get_si(proc)->pending));
			remove_from_queue(SIGTTOU, &(get_si(proc)->pending));
			sig_recalc_pending(proc);
			proc = next_thread(proc);
80012500:	2673ff6c 	addiu	s3,s3,-148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:442
		} while (proc != current);
80012504:	1662ffee 	bne	s3,v0,800124c0 <raise_signal+0x4e4>
80012508:	267400d8 	addiu	s4,s3,216
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:493
	bool intr_flag;
	int ret = 0;
	lock_sig(get_si(to)->sighand);
	local_intr_save(intr_flag);
	handle_stop_signal(sign, to);
	if (!sigismember(get_si(to)->blocked, sign)
8001250c:	08004863 	j	8001218c <raise_signal+0x1b0>
80012510:	8e0200cc 	lw	v0,204(s0)
group_complete_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:467
static void group_complete_send(int sign, struct proc_struct *proc)
{
	struct proc_struct *pick;
	pick = get_si(proc)->signal->curr_target;
	if (pick == NULL)
		pick = get_si(proc)->signal->curr_target = proc;
80012514:	acd00004 	sw	s0,4(a2)
80012518:	080048d0 	j	80012340 <raise_signal+0x364>
8001251c:	02002021 	move	a0,s0

80012520 <do_sigtkill>:
do_sigtkill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:625
		return specific_send_sig_info(sign, &info, proc);
	}
}

int do_sigtkill(int pid, int sign)
{
80012520:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:626
	struct proc_struct *proc = find_proc(pid);
80012524:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:625
		return specific_send_sig_info(sign, &info, proc);
	}
}

int do_sigtkill(int pid, int sign)
{
80012528:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:626
	struct proc_struct *proc = find_proc(pid);
8001252c:	0c003b4c 	jal	8000ed30 <find_proc>
80012530:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:627
	if (proc == NULL || proc->state == PROC_ZOMBIE) {
80012534:	10400009 	beqz	v0,8001255c <do_sigtkill+0x3c>
80012538:	8fa50010 	lw	a1,16(sp)
8001253c:	8c440000 	lw	a0,0(v0)
80012540:	24030003 	li	v1,3
80012544:	10830005 	beq	a0,v1,8001255c <do_sigtkill+0x3c>
80012548:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:630
		return -E_INVAL;
	}
	return raise_signal(proc, sign, 0);
8001254c:	00402021 	move	a0,v0
80012550:	00003021 	move	a2,zero
80012554:	080047f7 	j	80011fdc <raise_signal>
80012558:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:631
}
8001255c:	8fbf001c 	lw	ra,28(sp)
80012560:	2402ffea 	li	v0,-22
80012564:	03e00008 	jr	ra
80012568:	27bd0020 	addiu	sp,sp,32

8001256c <do_sigkill>:
do_sigkill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:634

int do_sigkill(int pid, int sign)
{
8001256c:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:635
	struct proc_struct *proc = find_proc(pid);
80012570:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:634
	}
	return raise_signal(proc, sign, 0);
}

int do_sigkill(int pid, int sign)
{
80012574:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:635
	struct proc_struct *proc = find_proc(pid);
80012578:	0c003b4c 	jal	8000ed30 <find_proc>
8001257c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:636
	if (proc == NULL || proc->state == PROC_ZOMBIE) {
80012580:	10400009 	beqz	v0,800125a8 <do_sigkill+0x3c>
80012584:	8fa50010 	lw	a1,16(sp)
80012588:	8c440000 	lw	a0,0(v0)
8001258c:	24030003 	li	v1,3
80012590:	10830005 	beq	a0,v1,800125a8 <do_sigkill+0x3c>
80012594:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:642
		return -E_INVAL;
	}
#ifdef __SIGDEBUG
	kprintf("do_sigkill: pid=%d sig=%d\n", pid, sign);
#endif
	return raise_signal(proc, sign, 1);
80012598:	00402021 	move	a0,v0
8001259c:	24060001 	li	a2,1
800125a0:	080047f7 	j	80011fdc <raise_signal>
800125a4:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:643
}
800125a8:	8fbf001c 	lw	ra,28(sp)
800125ac:	2402ffea 	li	v0,-22
800125b0:	03e00008 	jr	ra
800125b4:	27bd0020 	addiu	sp,sp,32

800125b8 <do_sigaltstack>:
do_sigaltstack():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:647

// do syscall sigaltstack
int do_sigaltstack(const stack_t * ss, stack_t * old)
{
800125b8:	27bdffb8 	addiu	sp,sp,-72
800125bc:	afb10038 	sw	s1,56(sp)
800125c0:	afbf0044 	sw	ra,68(sp)
800125c4:	afb30040 	sw	s3,64(sp)
800125c8:	afb2003c 	sw	s2,60(sp)
800125cc:	afb00034 	sw	s0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:649
	int ret = -E_INVAL;
	if (ss == NULL) {
800125d0:	10800024 	beqz	a0,80012664 <do_sigaltstack+0xac>
800125d4:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:653
		return ret;
	}

	struct mm_struct *mm = current->mm;
800125d8:	3c138015 	lui	s3,0x8015
800125dc:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:654
	stack_t stack =
800125e0:	afa0001c 	sw	zero,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:657
	    { get_si(current)->sas_ss_sp, 0, get_si(current)->sas_ss_size };
	lock_mm(mm);
	if (old != NULL && !copy_to_user(mm, old, &stack, sizeof(stack_t))) {
800125e4:	27b20018 	addiu	s2,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:653
	int ret = -E_INVAL;
	if (ss == NULL) {
		return ret;
	}

	struct mm_struct *mm = current->mm;
800125e8:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:654
	stack_t stack =
800125ec:	8c4300e8 	lw	v1,232(v0)
800125f0:	8c4200ec 	lw	v0,236(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:656
	    { get_si(current)->sas_ss_sp, 0, get_si(current)->sas_ss_size };
	lock_mm(mm);
800125f4:	02002021 	move	a0,s0
800125f8:	afa50028 	sw	a1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:654
	if (ss == NULL) {
		return ret;
	}

	struct mm_struct *mm = current->mm;
	stack_t stack =
800125fc:	afa30018 	sw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:656
	    { get_si(current)->sas_ss_sp, 0, get_si(current)->sas_ss_size };
	lock_mm(mm);
80012600:	0c004c2e 	jal	800130b8 <lock_mm>
80012604:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:657
	if (old != NULL && !copy_to_user(mm, old, &stack, sizeof(stack_t))) {
80012608:	8fa50028 	lw	a1,40(sp)
8001260c:	10a00006 	beqz	a1,80012628 <do_sigaltstack+0x70>
80012610:	02002021 	move	a0,s0
80012614:	02403021 	move	a2,s2
80012618:	0c007950 	jal	8001e540 <copy_to_user>
8001261c:	2407000c 	li	a3,12
80012620:	10400011 	beqz	v0,80012668 <do_sigaltstack+0xb0>
80012624:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:660
		goto out;
	}
	if (copy_from_user(mm, &stack, ss, sizeof(stack_t), 1)) {
80012628:	24020001 	li	v0,1
8001262c:	02002021 	move	a0,s0
80012630:	02402821 	move	a1,s2
80012634:	02203021 	move	a2,s1
80012638:	2407000c 	li	a3,12
8001263c:	0c007936 	jal	8001e4d8 <copy_from_user>
80012640:	afa20010 	sw	v0,16(sp)
80012644:	10400005 	beqz	v0,8001265c <do_sigaltstack+0xa4>
80012648:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:661
		get_si(current)->sas_ss_sp = stack.sp;
8001264c:	8fa30018 	lw	v1,24(sp)
80012650:	ac4300e8 	sw	v1,232(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:662
		get_si(current)->sas_ss_size = stack.size;
80012654:	8fa30020 	lw	v1,32(sp)
80012658:	ac4300ec 	sw	v1,236(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:664
	}
	unlock_mm(mm);
8001265c:	0c004c3f 	jal	800130fc <unlock_mm>
80012660:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:667
out:
	return ret;
}
80012664:	8fbf0044 	lw	ra,68(sp)
80012668:	2402ffea 	li	v0,-22
8001266c:	8fb30040 	lw	s3,64(sp)
80012670:	8fb2003c 	lw	s2,60(sp)
80012674:	8fb10038 	lw	s1,56(sp)
80012678:	8fb00034 	lw	s0,52(sp)
8001267c:	03e00008 	jr	ra
80012680:	27bd0048 	addiu	sp,sp,72

80012684 <do_sigwaitinfo>:
do_sigwaitinfo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:670

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
80012684:	27bdffb8 	addiu	sp,sp,-72
80012688:	afb00034 	sw	s0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:672
	sigset_t set;
	struct mm_struct *mm = current->mm;
8001268c:	3c108015 	lui	s0,0x8015
80012690:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:670
out:
	return ret;
}

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
80012694:	afb10038 	sw	s1,56(sp)
80012698:	afbf0044 	sw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:672
	sigset_t set;
	struct mm_struct *mm = current->mm;
8001269c:	8c510020 	lw	s1,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:670
out:
	return ret;
}

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
800126a0:	afb30040 	sw	s3,64(sp)
800126a4:	afb2003c 	sw	s2,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:673
	sigset_t set;
	struct mm_struct *mm = current->mm;
	assert(mm != NULL);
800126a8:	1220003b 	beqz	s1,80012798 <do_sigwaitinfo+0x114>
800126ac:	00803021 	move	a2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:674
	lock_mm(mm);
800126b0:	02202021 	move	a0,s1
800126b4:	0c004c2e 	jal	800130b8 <lock_mm>
800126b8:	afa60028 	sw	a2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:675
	if (setp == NULL
800126bc:	8fa60028 	lw	a2,40(sp)
800126c0:	10c0002d 	beqz	a2,80012778 <do_sigwaitinfo+0xf4>
800126c4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:676
	    || !copy_from_user(mm, &set, setp, sizeof(sigset_t), 0)) {
800126c8:	27a50020 	addiu	a1,sp,32
800126cc:	24070008 	li	a3,8
800126d0:	0c007936 	jal	8001e4d8 <copy_from_user>
800126d4:	afa00010 	sw	zero,16(sp)
800126d8:	50400028 	beqzl	v0,8001277c <do_sigwaitinfo+0xf8>
800126dc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:681
		assert(0);
		unlock_mm(mm);
		return -1;
	}
	unlock_mm(mm);
800126e0:	0c004c3f 	jal	800130fc <unlock_mm>
800126e4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:685

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
	sigset_t old_blocked = get_si(current)->blocked;
800126e8:	8e0477a4 	lw	a0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:684
		return -1;
	}
	unlock_mm(mm);

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
800126ec:	8fa70020 	lw	a3,32(sp)
800126f0:	8fa50024 	lw	a1,36(sp)
800126f4:	3c060004 	lui	a2,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:685
	sigset_t old_blocked = get_si(current)->blocked;
800126f8:	8c8200c8 	lw	v0,200(a0)
800126fc:	8c8300cc 	lw	v1,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:684
		return -1;
	}
	unlock_mm(mm);

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
80012700:	24c60100 	addiu	a2,a2,256
80012704:	00e63025 	or	a2,a3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:686
	sigset_t old_blocked = get_si(current)->blocked;
	get_si(current)->blocked = ~set;
80012708:	00064027 	nor	t0,zero,a2
8001270c:	00053827 	nor	a3,zero,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:694
		current->pid);
#endif

	while (1) {
		current->state = PROC_SLEEPING;
		current->wait_state = WT_SIGNAL;
80012710:	3c118000 	lui	s1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:684
		return -1;
	}
	unlock_mm(mm);

	sigset_add(set, SIGKILL);
	sigset_add(set, SIGSTOP);
80012714:	afa60020 	sw	a2,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:685
	sigset_t old_blocked = get_si(current)->blocked;
80012718:	afa20018 	sw	v0,24(sp)
8001271c:	afa3001c 	sw	v1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:686
	get_si(current)->blocked = ~set;
80012720:	ac8800c8 	sw	t0,200(a0)
80012724:	ac8700cc 	sw	a3,204(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:693
	kprintf("do_sigwaitinfo(): set = %016llx, pid = %d\n", set,
		current->pid);
#endif

	while (1) {
		current->state = PROC_SLEEPING;
80012728:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:694
		current->wait_state = WT_SIGNAL;
8001272c:	02009821 	move	s3,s0
80012730:	26310400 	addiu	s1,s1,1024
80012734:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:693
	kprintf("do_sigwaitinfo(): set = %016llx, pid = %d\n", set,
		current->pid);
#endif

	while (1) {
		current->state = PROC_SLEEPING;
80012738:	ac920000 	sw	s2,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:695
		current->wait_state = WT_SIGNAL;
		schedule();
8001273c:	0c00059f 	jal	8000167c <schedule>
80012740:	ac510084 	sw	s1,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:696
		int sign = do_signal(current->tf, &old_blocked);
80012744:	8e0277a4 	lw	v0,30628(s0)
80012748:	27a50018 	addiu	a1,sp,24
8001274c:	0c0046c1 	jal	80011b04 <do_signal>
80012750:	8c440054 	lw	a0,84(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:697
		if (sign != 0) {
80012754:	5040fff7 	beqzl	v0,80012734 <do_sigwaitinfo+0xb0>
80012758:	8e6477a4 	lw	a0,30628(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:706
			     set, sign, current->pid);
#endif
			return sign;
		}
	}
}
8001275c:	8fbf0044 	lw	ra,68(sp)
80012760:	8fb30040 	lw	s3,64(sp)
80012764:	8fb2003c 	lw	s2,60(sp)
80012768:	8fb10038 	lw	s1,56(sp)
8001276c:	8fb00034 	lw	s0,52(sp)
80012770:	03e00008 	jr	ra
80012774:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:677
	struct mm_struct *mm = current->mm;
	assert(mm != NULL);
	lock_mm(mm);
	if (setp == NULL
	    || !copy_from_user(mm, &set, setp, sizeof(sigset_t), 0)) {
		assert(0);
80012778:	3c048002 	lui	a0,0x8002
8001277c:	3c068002 	lui	a2,0x8002
80012780:	3c078002 	lui	a3,0x8002
80012784:	24842fd4 	addiu	a0,a0,12244
80012788:	240502a5 	li	a1,677
8001278c:	24c60e48 	addiu	a2,a2,3656
80012790:	0c006b13 	jal	8001ac4c <__panic>
80012794:	24e72434 	addiu	a3,a3,9268
/home/oslab/ucore-mips-standard_2/src/kern-ucore/process/signal.c:673

int do_sigwaitinfo(const sigset_t * setp, struct siginfo_t *info)
{
	sigset_t set;
	struct mm_struct *mm = current->mm;
	assert(mm != NULL);
80012798:	3c048002 	lui	a0,0x8002
8001279c:	3c068002 	lui	a2,0x8002
800127a0:	3c078002 	lui	a3,0x8002
800127a4:	24842fd4 	addiu	a0,a0,12244
800127a8:	240502a1 	li	a1,673
800127ac:	24c60e48 	addiu	a2,a2,3656
800127b0:	0c006b13 	jal	8001ac4c <__panic>
800127b4:	24e73078 	addiu	a3,a3,12408

800127b8 <shmem_create>:
shmem_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:12
#include <swap.h>
#include <error.h>
#include <sem.h>

struct shmem_struct *shmem_create(size_t len)
{
800127b8:	27bdffe0 	addiu	sp,sp,-32
800127bc:	afb00018 	sw	s0,24(sp)
800127c0:	00808021 	move	s0,a0
800127c4:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:13
	struct shmem_struct *shmem = kmalloc(sizeof(struct shmem_struct));
800127c8:	0c00548e 	jal	80015238 <kmalloc>
800127cc:	24040028 	li	a0,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:14
	if (shmem != NULL) {
800127d0:	1040000c 	beqz	v0,80012804 <shmem_create+0x4c>
800127d4:	8fbf001c 	lw	ra,28(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
800127d8:	ac420004 	sw	v0,4(v0)
800127dc:	ac420000 	sw	v0,0(v0)
shmem_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:16
		list_init(&(shmem->shmn_list));
		shmem->shmn_cache = NULL;
800127e0:	ac400008 	sw	zero,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:17
		shmem->len = len;
800127e4:	ac50000c 	sw	s0,12(v0)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
800127e8:	ac400010 	sw	zero,16(v0)
shmem_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:19
		set_shmem_ref(shmem, 0);
		sem_init(&(shmem->shmem_sem), 1);
800127ec:	24440014 	addiu	a0,v0,20
800127f0:	24050001 	li	a1,1
800127f4:	0c00671f 	jal	80019c7c <sem_init>
800127f8:	afa20010 	sw	v0,16(sp)
800127fc:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:22
	}
	return shmem;
}
80012800:	8fbf001c 	lw	ra,28(sp)
80012804:	8fb00018 	lw	s0,24(sp)
80012808:	03e00008 	jr	ra
8001280c:	27bd0020 	addiu	sp,sp,32

80012810 <shmem_destroy>:
shmem_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:140

	list_add_after(le_prev, &(shmn->list_link));
}

void shmem_destroy(struct shmem_struct *shmem)
{
80012810:	27bdffc8 	addiu	sp,sp,-56
80012814:	afb20018 	sw	s2,24(sp)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80012818:	8c920004 	lw	s2,4(a0)
shmem_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:140
8001281c:	afb7002c 	sw	s7,44(sp)
80012820:	afbf0034 	sw	ra,52(sp)
80012824:	afbe0030 	sw	s8,48(sp)
80012828:	afb60028 	sw	s6,40(sp)
8001282c:	afb50024 	sw	s5,36(sp)
80012830:	afb40020 	sw	s4,32(sp)
80012834:	afb3001c 	sw	s3,28(sp)
80012838:	afb10014 	sw	s1,20(sp)
8001283c:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:142
	list_entry_t *list = &(shmem->shmn_list), *le;
	while ((le = list_next(list)) != list) {
80012840:	10920057 	beq	a0,s2,800129a0 <shmem_destroy+0x190>
80012844:	0080b821 	move	s7,a0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012848:	3c157fff 	lui	s5,0x7fff
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
8001284c:	2416f000 	li	s6,-4096
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012850:	36b5f000 	ori	s5,s5,0xf000
80012854:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012858:	3c138015 	lui	s3,0x8015
shmn_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:81

static void shmn_destroy(shmn_t * shmn)
{
	int i;
	for (i = 0; i < SHMN_NENTRY; i++) {
		shmem_remove_entry_pte(shmn->entry + i);
8001285c:	8e47fffc 	lw	a3,-4(s2)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80012860:	8e430000 	lw	v1,0(s2)
80012864:	8e420004 	lw	v0,4(s2)
shmn_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:81
80012868:	00e08821 	move	s1,a3
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001286c:	ac620004 	sw	v0,4(v1)
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:47

static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
80012870:	10e0001f 	beqz	a3,800128f0 <shmem_destroy+0xe0>
80012874:	ac430000 	sw	v1,0(v0)
80012878:	24100004 	li	s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:201
}

int shmem_remove_entry(struct shmem_struct *shmem, uintptr_t addr)
{
	return shmem_insert_entry(shmem, addr, 0);
}
8001287c:	8e3e0000 	lw	s8,0(s1)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80012880:	33c20001 	andi	v0,s8,0x1
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:48
static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
	if (ptep_present(ptep)) {
80012884:	10400026 	beqz	v0,80012920 <shmem_destroy+0x110>
80012888:	03d61024 	and	v0,s8,s6
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001288c:	8e837770 	lw	v1,30576(s4)
80012890:	00551021 	addu	v0,v0,s5
80012894:	00021302 	srl	v0,v0,0xc
80012898:	0043182b 	sltu	v1,v0,v1
8001289c:	1060004d 	beqz	v1,800129d4 <shmem_destroy+0x1c4>
800128a0:	8e7e77bc 	lw	s8,30652(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
800128a4:	00021140 	sll	v0,v0,0x5
800128a8:	03c2f021 	addu	s8,s8,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800128ac:	40026000 	mfc0	v0,c0_status
800128b0:	30420001 	andi	v0,v0,0x1
800128b4:	1440001e 	bnez	v0,80012930 <shmem_destroy+0x120>
800128b8:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800128bc:	8fc20000 	lw	v0,0(s8)
800128c0:	2442ffff 	addiu	v0,v0,-1
800128c4:	afc20000 	sw	v0,0(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800128c8:	8fc20000 	lw	v0,0(s8)
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:62
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
#else
		if (page_ref_dec(page) == 0) {
800128cc:	10400010 	beqz	v0,80012910 <shmem_destroy+0x100>
800128d0:	03c02021 	move	a0,s8
800128d4:	8e47fffc 	lw	a3,-4(s2)
ptep_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
800128d8:	ae200000 	sw	zero,0(s1)
shmn_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:80
}

static void shmn_destroy(shmn_t * shmn)
{
	int i;
	for (i = 0; i < SHMN_NENTRY; i++) {
800128dc:	24021000 	li	v0,4096
800128e0:	1202001c 	beq	s0,v0,80012954 <shmem_destroy+0x144>
800128e4:	00f08821 	addu	s1,a3,s0
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:47

static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
800128e8:	1620ffe4 	bnez	s1,8001287c <shmem_destroy+0x6c>
800128ec:	26100004 	addiu	s0,s0,4
800128f0:	3c048002 	lui	a0,0x8002
800128f4:	3c068002 	lui	a2,0x8002
800128f8:	3c078002 	lui	a3,0x8002
800128fc:	24843084 	addiu	a0,a0,12420
80012900:	2405002f 	li	a1,47
80012904:	24c60e48 	addiu	a2,a2,3656
80012908:	0c006b13 	jal	8001ac4c <__panic>
8001290c:	24e730a4 	addiu	a3,a3,12452
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:63
			}
			page_ref_dec(page);
		}
#else
		if (page_ref_dec(page) == 0) {
			free_page(page);
80012910:	0c007449 	jal	8001d124 <free_pages>
80012914:	24050001 	li	a1,1
80012918:	08004a36 	j	800128d8 <shmem_destroy+0xc8>
8001291c:	8e47fffc 	lw	a3,-4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:67
		}
#endif /* UCONFIG_SWAP */
		ptep_unmap(ptep);
	} else if (!ptep_invalid(ptep)) {
80012920:	13c0ffef 	beqz	s8,800128e0 <shmem_destroy+0xd0>
80012924:	24021000 	li	v0,4096
80012928:	0c007f64 	jal	8001fd90 <shmem_remove_entry_pte.part.6>
8001292c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80012930:	0c006d0c 	jal	8001b430 <intr_disable>
80012934:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012938:	8fc20000 	lw	v0,0(s8)
8001293c:	2442ffff 	addiu	v0,v0,-1
80012940:	afc20000 	sw	v0,0(s8)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012944:	0c006d08 	jal	8001b420 <intr_enable>
80012948:	00000000 	nop
8001294c:	08004a32 	j	800128c8 <shmem_destroy+0xb8>
80012950:	00000000 	nop
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80012954:	3c028000 	lui	v0,0x8000
80012958:	24421000 	addiu	v0,v0,4096
8001295c:	00e2102b 	sltu	v0,a3,v0
80012960:	14400022 	bnez	v0,800129ec <shmem_destroy+0x1dc>
80012964:	8e837770 	lw	v1,30576(s4)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012968:	00f51021 	addu	v0,a3,s5
8001296c:	00021302 	srl	v0,v0,0xc
80012970:	0043182b 	sltu	v1,v0,v1
80012974:	10600017 	beqz	v1,800129d4 <shmem_destroy+0x1c4>
80012978:	8e6477bc 	lw	a0,30652(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001297c:	00021140 	sll	v0,v0,0x5
shmn_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:83
{
	int i;
	for (i = 0; i < SHMN_NENTRY; i++) {
		shmem_remove_entry_pte(shmn->entry + i);
	}
	free_page(kva2page(shmn->entry));
80012980:	24050001 	li	a1,1
80012984:	0c007449 	jal	8001d124 <free_pages>
80012988:	00822021 	addu	a0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:84
	kfree(shmn);
8001298c:	0c0054b9 	jal	800152e4 <kfree>
80012990:	2644fff4 	addiu	a0,s2,-12
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80012994:	8ef20004 	lw	s2,4(s7)
shmem_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:142
}

void shmem_destroy(struct shmem_struct *shmem)
{
	list_entry_t *list = &(shmem->shmn_list), *le;
	while ((le = list_next(list)) != list) {
80012998:	56f2ffb1 	bnel	s7,s2,80012860 <shmem_destroy+0x50>
8001299c:	8e47fffc 	lw	a3,-4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:146
		list_del(le);
		shmn_destroy(le2shmn(le, list_link));
	}
	kfree(shmem);
800129a0:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:147
}
800129a4:	8fbf0034 	lw	ra,52(sp)
800129a8:	8fbe0030 	lw	s8,48(sp)
800129ac:	8fb7002c 	lw	s7,44(sp)
800129b0:	8fb60028 	lw	s6,40(sp)
800129b4:	8fb50024 	lw	s5,36(sp)
800129b8:	8fb40020 	lw	s4,32(sp)
800129bc:	8fb3001c 	lw	s3,28(sp)
800129c0:	8fb20018 	lw	s2,24(sp)
800129c4:	8fb10014 	lw	s1,20(sp)
800129c8:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:146
	list_entry_t *list = &(shmem->shmn_list), *le;
	while ((le = list_next(list)) != list) {
		list_del(le);
		shmn_destroy(le2shmn(le, list_link));
	}
	kfree(shmem);
800129cc:	080054b9 	j	800152e4 <kfree>
800129d0:	27bd0038 	addiu	sp,sp,56
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
800129d4:	3c048002 	lui	a0,0x8002
800129d8:	3c068002 	lui	a2,0x8002
800129dc:	24842a0c 	addiu	a0,a0,10764
800129e0:	24050063 	li	a1,99
800129e4:	0c006b13 	jal	8001ac4c <__panic>
800129e8:	24c62a74 	addiu	a2,a2,10868
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
800129ec:	3c048002 	lui	a0,0x8002
800129f0:	3c068002 	lui	a2,0x8002
800129f4:	24842a0c 	addiu	a0,a0,10764
800129f8:	2405006f 	li	a1,111
800129fc:	0c006b13 	jal	8001ac4c <__panic>
80012a00:	24c62a50 	addiu	a2,a2,10832

80012a04 <shmem_get_entry>:
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:151
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
	assert(addr < shmem->len);
80012a04:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:150
	}
	kfree(shmem);
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
80012a08:	27bdffd8 	addiu	sp,sp,-40
80012a0c:	afb30020 	sw	s3,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:151
	assert(addr < shmem->len);
80012a10:	00a2102b 	sltu	v0,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:150
	}
	kfree(shmem);
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
80012a14:	afb2001c 	sw	s2,28(sp)
80012a18:	afbf0024 	sw	ra,36(sp)
80012a1c:	afb10018 	sw	s1,24(sp)
80012a20:	afb00014 	sw	s0,20(sp)
80012a24:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:151
	assert(addr < shmem->len);
80012a28:	104000ac 	beqz	v0,80012cdc <shmem_get_entry+0x2d8>
80012a2c:	00c09821 	move	s3,a2
find_shmn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:89
	kfree(shmn);
}

static shmn_t *find_shmn(struct shmem_struct *shmem, uintptr_t addr)
{
	shmn_t *shmn = shmem->shmn_cache;
80012a30:	8c910008 	lw	s1,8(a0)
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:152
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
	assert(addr < shmem->len);
	addr = ROUNDDOWN(addr, PGSIZE);
80012a34:	2410f000 	li	s0,-4096
find_shmn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:90
}

static shmn_t *find_shmn(struct shmem_struct *shmem, uintptr_t addr)
{
	shmn_t *shmn = shmem->shmn_cache;
	if (!(shmn != NULL && shmn->start <= addr && addr < shmn->end)) {
80012a38:	1220001e 	beqz	s1,80012ab4 <shmem_get_entry+0xb0>
80012a3c:	00b08024 	and	s0,a1,s0
80012a40:	8e230000 	lw	v1,0(s1)
80012a44:	0203102b 	sltu	v0,s0,v1
80012a48:	1440001b 	bnez	v0,80012ab8 <shmem_get_entry+0xb4>
80012a4c:	02401021 	move	v0,s2
80012a50:	8e220004 	lw	v0,4(s1)
80012a54:	0202102b 	sltu	v0,s0,v0
80012a58:	10400017 	beqz	v0,80012ab8 <shmem_get_entry+0xb4>
80012a5c:	02401021 	move	v0,s2
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:155
{
	assert(addr < shmem->len);
	addr = ROUNDDOWN(addr, PGSIZE);
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
80012a60:	8e220004 	lw	v0,4(s1)
80012a64:	0202102b 	sltu	v0,s0,v0
80012a68:	10400094 	beqz	v0,80012cbc <shmem_get_entry+0x2b8>
80012a6c:	ae510008 	sw	s1,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:163
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
		}
		insert_shmn(shmem, shmn);
	}
	int index = (addr - shmn->start) / PGSIZE;
80012a70:	02038023 	subu	s0,s0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:164
	if (shmn->entry[index] == 0) {
80012a74:	8e220008 	lw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:163
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
		}
		insert_shmn(shmem, shmn);
	}
	int index = (addr - shmn->start) / PGSIZE;
80012a78:	00108302 	srl	s0,s0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:164
	if (shmn->entry[index] == 0) {
80012a7c:	00108080 	sll	s0,s0,0x2
80012a80:	00501021 	addu	v0,v0,s0
80012a84:	8c430000 	lw	v1,0(v0)
80012a88:	14600004 	bnez	v1,80012a9c <shmem_get_entry+0x98>
80012a8c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:165
		if (create) {
80012a90:	16600062 	bnez	s3,80012c1c <shmem_get_entry+0x218>
80012a94:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:174
				page_ref_inc(page);
			}
		}
	}
	return shmn->entry + index;
}
80012a98:	8fbf0024 	lw	ra,36(sp)
80012a9c:	8fb30020 	lw	s3,32(sp)
80012aa0:	8fb2001c 	lw	s2,28(sp)
80012aa4:	8fb10018 	lw	s1,24(sp)
80012aa8:	8fb00014 	lw	s0,20(sp)
80012aac:	03e00008 	jr	ra
80012ab0:	27bd0028 	addiu	sp,sp,40
find_shmn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:92
static shmn_t *find_shmn(struct shmem_struct *shmem, uintptr_t addr)
{
	shmn_t *shmn = shmem->shmn_cache;
	if (!(shmn != NULL && shmn->start <= addr && addr < shmn->end)) {
		shmn = NULL;
		list_entry_t *list = &(shmem->shmn_list), *le = list;
80012ab4:	02401021 	move	v0,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80012ab8:	8c420004 	lw	v0,4(v0)
find_shmn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:93
		while ((le = list_next(le)) != list) {
80012abc:	1242000b 	beq	s2,v0,80012aec <shmem_get_entry+0xe8>
80012ac0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:95
			shmn_t *tmp = le2shmn(le, list_link);
			if (tmp->start <= addr && addr < tmp->end) {
80012ac4:	8c43fff4 	lw	v1,-12(v0)
80012ac8:	0203202b 	sltu	a0,s0,v1
80012acc:	1480fffa 	bnez	a0,80012ab8 <shmem_get_entry+0xb4>
80012ad0:	2451fff4 	addiu	s1,v0,-12
80012ad4:	8c44fff8 	lw	a0,-8(v0)
80012ad8:	0204202b 	sltu	a0,s0,a0
80012adc:	5080fff7 	beqzl	a0,80012abc <shmem_get_entry+0xb8>
80012ae0:	8c420004 	lw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:101
				shmn = tmp;
				break;
			}
		}
	}
	if (shmn != NULL) {
80012ae4:	5620ffdf 	bnezl	s1,80012a64 <shmem_get_entry+0x60>
80012ae8:	8e220004 	lw	v0,4(s1)
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:158
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
		if (!create || (shmn = shmn_create(start)) == NULL) {
80012aec:	1260ffea 	beqz	s3,80012a98 <shmem_get_entry+0x94>
80012af0:	00001021 	move	v0,zero
shmn_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:27
}

static shmn_t *shmn_create(uintptr_t start)
{
	assert(start % PGSIZE * SHMN_NENTRY == 0);
	shmn_t *shmn = kmalloc(sizeof(shmn_t));
80012af4:	0c00548e 	jal	80015238 <kmalloc>
80012af8:	24040014 	li	a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:28
	if (shmn != NULL) {
80012afc:	1040007f 	beqz	v0,80012cfc <shmem_get_entry+0x2f8>
80012b00:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:30
		struct Page *page;
		if ((page = alloc_page()) != NULL) {
80012b04:	0c00742d 	jal	8001d0b4 <alloc_pages>
80012b08:	24040001 	li	a0,1
80012b0c:	1040007d 	beqz	v0,80012d04 <shmem_get_entry+0x300>
80012b10:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012b14:	8c6477bc 	lw	a0,30652(v1)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012b18:	3c038015 	lui	v1,0x8015
80012b1c:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012b20:	00441023 	subu	v0,v0,a0
80012b24:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012b28:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012b2c:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012b30:	3c078000 	lui	a3,0x8000
80012b34:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012b38:	0083182b 	sltu	v1,a0,v1
80012b3c:	10600086 	beqz	v1,80012d58 <shmem_get_entry+0x354>
80012b40:	00473821 	addu	a3,v0,a3
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:157
	addr = ROUNDDOWN(addr, PGSIZE);
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
80012b44:	3c02ffc0 	lui	v0,0xffc0
80012b48:	02021024 	and	v0,s0,v0
shmn_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:33
	if (shmn != NULL) {
		struct Page *page;
		if ((page = alloc_page()) != NULL) {
			shmn->entry = (pte_t *) page2kva(page);
			shmn->start = start;
			shmn->end = start + PGSIZE * SHMN_NENTRY;
80012b4c:	3c030040 	lui	v1,0x40
80012b50:	00431821 	addu	v1,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:34
			memset(shmn->entry, 0, PGSIZE);
80012b54:	00e02021 	move	a0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:31
	assert(start % PGSIZE * SHMN_NENTRY == 0);
	shmn_t *shmn = kmalloc(sizeof(shmn_t));
	if (shmn != NULL) {
		struct Page *page;
		if ((page = alloc_page()) != NULL) {
			shmn->entry = (pte_t *) page2kva(page);
80012b58:	ae270008 	sw	a3,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:32
			shmn->start = start;
80012b5c:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:33
			shmn->end = start + PGSIZE * SHMN_NENTRY;
80012b60:	ae230004 	sw	v1,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:34
			memset(shmn->entry, 0, PGSIZE);
80012b64:	00002821 	move	a1,zero
80012b68:	0c005c5a 	jal	80017168 <memset>
80012b6c:	24061000 	li	a2,4096
80012b70:	02402021 	move	a0,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80012b74:	8c820004 	lw	v0,4(a0)
insert_shmn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:118

static void insert_shmn(struct shmem_struct *shmem, shmn_t * shmn)
{
	list_entry_t *list = &(shmem->shmn_list), *le = list;
	list_entry_t *le_prev = list, *le_next;
	while ((le = list_next(le)) != list) {
80012b78:	52420006 	beql	s2,v0,80012b94 <shmem_get_entry+0x190>
80012b7c:	02401021 	move	v0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:120
		shmn_t *shmn_prev = le2shmn(le, list_link);
		if (shmn_prev->start > shmn->start) {
80012b80:	8c45fff4 	lw	a1,-12(v0)
80012b84:	8e230000 	lw	v1,0(s1)
80012b88:	0065182b 	sltu	v1,v1,a1
80012b8c:	5060fff9 	beqzl	v1,80012b74 <shmem_get_entry+0x170>
80012b90:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:129
	}

	le_next = list_next(le_prev);

	/* check overlap */
	if (le_prev != list) {
80012b94:	5244000e 	beql	s2,a0,80012bd0 <shmem_get_entry+0x1cc>
80012b98:	8e230000 	lw	v1,0(s1)
check_shmn_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
80012b9c:	8c85fff8 	lw	a1,-8(a0)
80012ba0:	8c83fff4 	lw	v1,-12(a0)
80012ba4:	0065182b 	sltu	v1,v1,a1
80012ba8:	10600069 	beqz	v1,80012d50 <shmem_get_entry+0x34c>
80012bac:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:110
	assert(prev->end <= next->start);
80012bb0:	8e230000 	lw	v1,0(s1)
80012bb4:	0065282b 	sltu	a1,v1,a1
80012bb8:	54a0005e 	bnezl	a1,80012d34 <shmem_get_entry+0x330>
80012bbc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:111
	assert(next->start < next->end);
80012bc0:	8e250004 	lw	a1,4(s1)
80012bc4:	0065282b 	sltu	a1,v1,a1
80012bc8:	50a00053 	beqzl	a1,80012d18 <shmem_get_entry+0x314>
80012bcc:	3c048002 	lui	a0,0x8002
insert_shmn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:132

	/* check overlap */
	if (le_prev != list) {
		check_shmn_overlap(le2shmn(le_prev, list_link), shmn);
	}
	if (le_next != list) {
80012bd0:	1242000d 	beq	s2,v0,80012c08 <shmem_get_entry+0x204>
80012bd4:	2625000c 	addiu	a1,s1,12
check_shmn_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
80012bd8:	8e260004 	lw	a2,4(s1)
80012bdc:	0066282b 	sltu	a1,v1,a2
80012be0:	10a0005b 	beqz	a1,80012d50 <shmem_get_entry+0x34c>
80012be4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:110
	assert(prev->end <= next->start);
80012be8:	8c45fff4 	lw	a1,-12(v0)
80012bec:	00a6302b 	sltu	a2,a1,a2
80012bf0:	54c00050 	bnezl	a2,80012d34 <shmem_get_entry+0x330>
80012bf4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:111
	assert(next->start < next->end);
80012bf8:	8c46fff8 	lw	a2,-8(v0)
80012bfc:	00a6282b 	sltu	a1,a1,a2
80012c00:	10a00044 	beqz	a1,80012d14 <shmem_get_entry+0x310>
80012c04:	2625000c 	addiu	a1,s1,12
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80012c08:	ac450000 	sw	a1,0(v0)
80012c0c:	ac850004 	sw	a1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80012c10:	ae24000c 	sw	a0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80012c14:	08004a9c 	j	80012a70 <shmem_get_entry+0x6c>
80012c18:	ae220010 	sw	v0,16(s1)
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:166
		insert_shmn(shmem, shmn);
	}
	int index = (addr - shmn->start) / PGSIZE;
	if (shmn->entry[index] == 0) {
		if (create) {
			struct Page *page = alloc_page();
80012c1c:	0c00742d 	jal	8001d0b4 <alloc_pages>
80012c20:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:167
			if (page != NULL) {
80012c24:	10400017 	beqz	v0,80012c84 <shmem_get_entry+0x280>
80012c28:	00409021 	move	s2,v0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012c2c:	3c028015 	lui	v0,0x8015
80012c30:	8c4477bc 	lw	a0,30652(v0)
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012c34:	3c038000 	lui	v1,0x8000
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:168
				ptep_map(&(shmn->entry[index]), page2pa(page));
80012c38:	8e220008 	lw	v0,8(s1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80012c3c:	02442023 	subu	a0,s2,a0
80012c40:	00042143 	sra	a0,a0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80012c44:	00042300 	sll	a0,a0,0xc
80012c48:	24631000 	addiu	v1,v1,4096
80012c4c:	00831821 	addu	v1,a0,v1
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:168
80012c50:	00501021 	addu	v0,v0,s0
ptep_map():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:11

typedef pte_t pte_perm_t;

static inline void ptep_map(pte_t * ptep, uintptr_t pa)
{
	*ptep = (pa | PTE_P);
80012c54:	34630001 	ori	v1,v1,0x1
80012c58:	ac430000 	sw	v1,0(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012c5c:	40036000 	mfc0	v1,c0_status
80012c60:	30630001 	andi	v1,v1,0x1
80012c64:	1460000a 	bnez	v1,80012c90 <shmem_get_entry+0x28c>
80012c68:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80012c6c:	8e430000 	lw	v1,0(s2)
80012c70:	24630001 	addiu	v1,v1,1
80012c74:	ae430000 	sw	v1,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012c78:	8e430000 	lw	v1,0(s2)
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:173
				page_ref_inc(page);
			}
		}
	}
	return shmn->entry + index;
80012c7c:	08004aa7 	j	80012a9c <shmem_get_entry+0x98>
80012c80:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:167
	}
	int index = (addr - shmn->start) / PGSIZE;
	if (shmn->entry[index] == 0) {
		if (create) {
			struct Page *page = alloc_page();
			if (page != NULL) {
80012c84:	8e220008 	lw	v0,8(s1)
80012c88:	08004aa6 	j	80012a98 <shmem_get_entry+0x94>
80012c8c:	00501021 	addu	v0,v0,s0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80012c90:	0c006d0c 	jal	8001b430 <intr_disable>
80012c94:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012c98:	8e420000 	lw	v0,0(s2)
80012c9c:	24420001 	addiu	v0,v0,1
80012ca0:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012ca4:	0c006d08 	jal	8001b420 <intr_enable>
80012ca8:	00000000 	nop
80012cac:	8e220008 	lw	v0,8(s1)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012cb0:	8e430000 	lw	v1,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
80012cb4:	08004aa6 	j	80012a98 <shmem_get_entry+0x94>
80012cb8:	00501021 	addu	v0,v0,s0
shmem_get_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:155
{
	assert(addr < shmem->len);
	addr = ROUNDDOWN(addr, PGSIZE);
	shmn_t *shmn = find_shmn(shmem, addr);

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
80012cbc:	3c048002 	lui	a0,0x8002
80012cc0:	3c068002 	lui	a2,0x8002
80012cc4:	3c078002 	lui	a3,0x8002
80012cc8:	24843084 	addiu	a0,a0,12420
80012ccc:	2405009b 	li	a1,155
80012cd0:	24c60e48 	addiu	a2,a2,3656
80012cd4:	0c006b13 	jal	8001ac4c <__panic>
80012cd8:	24e730ec 	addiu	a3,a3,12524
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:151
	kfree(shmem);
}

pte_t *shmem_get_entry(struct shmem_struct *shmem, uintptr_t addr, bool create)
{
	assert(addr < shmem->len);
80012cdc:	3c048002 	lui	a0,0x8002
80012ce0:	3c068002 	lui	a2,0x8002
80012ce4:	3c078002 	lui	a3,0x8002
80012ce8:	24843084 	addiu	a0,a0,12420
80012cec:	24050097 	li	a1,151
80012cf0:	24c60e48 	addiu	a2,a2,3656
80012cf4:	0c006b13 	jal	8001ac4c <__panic>
80012cf8:	24e730d8 	addiu	a3,a3,12504
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:159

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
80012cfc:	08004aa6 	j	80012a98 <shmem_get_entry+0x94>
80012d00:	00001021 	move	v0,zero
shmn_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:36
			shmn->entry = (pte_t *) page2kva(page);
			shmn->start = start;
			shmn->end = start + PGSIZE * SHMN_NENTRY;
			memset(shmn->entry, 0, PGSIZE);
		} else {
			kfree(shmn);
80012d04:	0c0054b9 	jal	800152e4 <kfree>
80012d08:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:159

	assert(shmn == NULL || (shmn->start <= addr && addr < shmn->end));
	if (shmn == NULL) {
		uintptr_t start = ROUNDDOWN(addr, PGSIZE * SHMN_NENTRY);
		if (!create || (shmn = shmn_create(start)) == NULL) {
			return NULL;
80012d0c:	08004aa6 	j	80012a98 <shmem_get_entry+0x94>
80012d10:	00001021 	move	v0,zero
check_shmn_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:111

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
	assert(prev->end <= next->start);
	assert(next->start < next->end);
80012d14:	3c048002 	lui	a0,0x8002
80012d18:	3c068002 	lui	a2,0x8002
80012d1c:	3c078002 	lui	a3,0x8002
80012d20:	24843084 	addiu	a0,a0,12420
80012d24:	2405006f 	li	a1,111
80012d28:	24c60e48 	addiu	a2,a2,3656
80012d2c:	0c006b13 	jal	8001ac4c <__panic>
80012d30:	24e73144 	addiu	a3,a3,12612
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:110
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
	assert(prev->end <= next->start);
80012d34:	3c068002 	lui	a2,0x8002
80012d38:	3c078002 	lui	a3,0x8002
80012d3c:	24843084 	addiu	a0,a0,12420
80012d40:	2405006e 	li	a1,110
80012d44:	24c60e48 	addiu	a2,a2,3656
80012d48:	0c006b13 	jal	8001ac4c <__panic>
80012d4c:	24e73128 	addiu	a3,a3,12584
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
80012d50:	0c007f5a 	jal	8001fd68 <check_shmn_overlap.part.5>
80012d54:	00000000 	nop
shmn_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80012d58:	3c048002 	lui	a0,0x8002
80012d5c:	3c068002 	lui	a2,0x8002
80012d60:	24842a0c 	addiu	a0,a0,10764
80012d64:	2405006a 	li	a1,106
80012d68:	0c006b13 	jal	8001ac4c <__panic>
80012d6c:	24c62a94 	addiu	a2,a2,10900

80012d70 <shmem_insert_entry>:
shmem_insert_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:177
	}
	return shmn->entry + index;
}

int shmem_insert_entry(struct shmem_struct *shmem, uintptr_t addr, pte_t entry)
{
80012d70:	27bdffd8 	addiu	sp,sp,-40
80012d74:	afb0001c 	sw	s0,28(sp)
80012d78:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:178
	pte_t *ptep = shmem_get_entry(shmem, addr, 1);
80012d7c:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:177
	}
	return shmn->entry + index;
}

int shmem_insert_entry(struct shmem_struct *shmem, uintptr_t addr, pte_t entry)
{
80012d80:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:178
	pte_t *ptep = shmem_get_entry(shmem, addr, 1);
80012d84:	0c004a81 	jal	80012a04 <shmem_get_entry>
80012d88:	afb10020 	sw	s1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:179
	if (ptep == NULL) {
80012d8c:	5040001e 	beqzl	v0,80012e08 <shmem_insert_entry+0x98>
80012d90:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:201
}

int shmem_remove_entry(struct shmem_struct *shmem, uintptr_t addr)
{
	return shmem_insert_entry(shmem, addr, 0);
}
80012d94:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:182
{
	pte_t *ptep = shmem_get_entry(shmem, addr, 1);
	if (ptep == NULL) {
		return -E_NO_MEM;
	}
	if (!ptep_invalid(ptep)) {
80012d98:	1460002a 	bnez	v1,80012e44 <shmem_insert_entry+0xd4>
80012d9c:	30640001 	andi	a0,v1,0x1
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80012da0:	32030001 	andi	v1,s0,0x1
shmem_insert_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:185
		shmem_remove_entry_pte(ptep);
	}
	if (ptep_present(&entry)) {
80012da4:	1060001d 	beqz	v1,80012e1c <shmem_insert_entry+0xac>
80012da8:	3c038015 	lui	v1,0x8015
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012dac:	8c647770 	lw	a0,30576(v1)
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80012db0:	2411f000 	li	s1,-4096
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012db4:	3c037fff 	lui	v1,0x7fff
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80012db8:	02118824 	and	s1,s0,s1
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012dbc:	3463f000 	ori	v1,v1,0xf000
80012dc0:	02231821 	addu	v1,s1,v1
80012dc4:	00031b02 	srl	v1,v1,0xc
80012dc8:	0064202b 	sltu	a0,v1,a0
80012dcc:	10800054 	beqz	a0,80012f20 <shmem_insert_entry+0x1b0>
80012dd0:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012dd4:	8c9177bc 	lw	s1,30652(a0)
80012dd8:	00031940 	sll	v1,v1,0x5
80012ddc:	02238821 	addu	s1,s1,v1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80012de0:	40036000 	mfc0	v1,c0_status
80012de4:	30630001 	andi	v1,v1,0x1
80012de8:	14600037 	bnez	v1,80012ec8 <shmem_insert_entry+0x158>
80012dec:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012df0:	8e230000 	lw	v1,0(s1)
80012df4:	24630001 	addiu	v1,v1,1
80012df8:	ae230000 	sw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012dfc:	8e230000 	lw	v1,0(s1)
ptep_copy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:99
	*ptep |= perm;
}

static inline void ptep_copy(pte_t * to, pte_t * from)
{
	*to = *from;
80012e00:	ac500000 	sw	s0,0(v0)
shmem_insert_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:195
#else
		assert(0);
#endif
	}
	ptep_copy(ptep, &entry);
	return 0;
80012e04:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:196
}
80012e08:	8fbf0024 	lw	ra,36(sp)
80012e0c:	8fb10020 	lw	s1,32(sp)
80012e10:	8fb0001c 	lw	s0,28(sp)
80012e14:	03e00008 	jr	ra
80012e18:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:187
	if (!ptep_invalid(ptep)) {
		shmem_remove_entry_pte(ptep);
	}
	if (ptep_present(&entry)) {
		page_ref_inc(pte2page(entry));
	} else if (!ptep_invalid(&entry)) {
80012e1c:	5200fff9 	beqzl	s0,80012e04 <shmem_insert_entry+0x94>
80012e20:	ac500000 	sw	s0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:191
#ifdef UCONFIG_SWAP
		swap_duplicate(entry);
#else
		assert(0);
80012e24:	3c048002 	lui	a0,0x8002
80012e28:	3c068002 	lui	a2,0x8002
80012e2c:	3c078002 	lui	a3,0x8002
80012e30:	24843084 	addiu	a0,a0,12420
80012e34:	240500bf 	li	a1,191
80012e38:	24c60e48 	addiu	a2,a2,3656
80012e3c:	0c006b13 	jal	8001ac4c <__panic>
80012e40:	24e72434 	addiu	a3,a3,9268
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:48
static inline void shmem_remove_entry_pte(pte_t * ptep)
{
	//TODO
	//assert(0);
	assert(ptep != NULL);
	if (ptep_present(ptep)) {
80012e44:	10800034 	beqz	a0,80012f18 <shmem_insert_entry+0x1a8>
80012e48:	2404f000 	li	a0,-4096
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80012e4c:	00641824 	and	v1,v1,a0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80012e50:	3c057fff 	lui	a1,0x7fff
80012e54:	3c048015 	lui	a0,0x8015
80012e58:	8c847770 	lw	a0,30576(a0)
80012e5c:	34a5f000 	ori	a1,a1,0xf000
80012e60:	00651821 	addu	v1,v1,a1
80012e64:	00031b02 	srl	v1,v1,0xc
80012e68:	0064202b 	sltu	a0,v1,a0
80012e6c:	1080002c 	beqz	a0,80012f20 <shmem_insert_entry+0x1b0>
80012e70:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80012e74:	8c9177bc 	lw	s1,30652(a0)
80012e78:	00031940 	sll	v1,v1,0x5
80012e7c:	02238821 	addu	s1,s1,v1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80012e80:	40036000 	mfc0	v1,c0_status
80012e84:	30630001 	andi	v1,v1,0x1
80012e88:	1460001a 	bnez	v1,80012ef4 <shmem_insert_entry+0x184>
80012e8c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012e90:	8e230000 	lw	v1,0(s1)
80012e94:	2463ffff 	addiu	v1,v1,-1
80012e98:	ae230000 	sw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012e9c:	8e230000 	lw	v1,0(s1)
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:62
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
#else
		if (page_ref_dec(page) == 0) {
80012ea0:	10600003 	beqz	v1,80012eb0 <shmem_insert_entry+0x140>
80012ea4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
80012ea8:	08004b68 	j	80012da0 <shmem_insert_entry+0x30>
80012eac:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:63
			free_page(page);
80012eb0:	24050001 	li	a1,1
80012eb4:	0c007449 	jal	8001d124 <free_pages>
80012eb8:	afa20010 	sw	v0,16(sp)
80012ebc:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
80012ec0:	08004b68 	j	80012da0 <shmem_insert_entry+0x30>
80012ec4:	ac400000 	sw	zero,0(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80012ec8:	0c006d0c 	jal	8001b430 <intr_disable>
80012ecc:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012ed0:	8e230000 	lw	v1,0(s1)
80012ed4:	24630001 	addiu	v1,v1,1
80012ed8:	ae230000 	sw	v1,0(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012edc:	0c006d08 	jal	8001b420 <intr_enable>
80012ee0:	00000000 	nop
80012ee4:	8fa20010 	lw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80012ee8:	8e230000 	lw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:99
	*ptep |= perm;
}

static inline void ptep_copy(pte_t * to, pte_t * from)
{
	*to = *from;
80012eec:	08004b81 	j	80012e04 <shmem_insert_entry+0x94>
80012ef0:	ac500000 	sw	s0,0(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80012ef4:	0c006d0c 	jal	8001b430 <intr_disable>
80012ef8:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80012efc:	8e230000 	lw	v1,0(s1)
80012f00:	2463ffff 	addiu	v1,v1,-1
80012f04:	ae230000 	sw	v1,0(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80012f08:	0c006d08 	jal	8001b420 <intr_enable>
80012f0c:	00000000 	nop
80012f10:	08004ba7 	j	80012e9c <shmem_insert_entry+0x12c>
80012f14:	8fa20010 	lw	v0,16(sp)
ptep_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
80012f18:	0c007f64 	jal	8001fd90 <shmem_remove_entry_pte.part.6>
80012f1c:	00000000 	nop
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
80012f20:	3c048002 	lui	a0,0x8002
80012f24:	3c068002 	lui	a2,0x8002
80012f28:	24842a0c 	addiu	a0,a0,10764
80012f2c:	24050063 	li	a1,99
80012f30:	0c006b13 	jal	8001ac4c <__panic>
80012f34:	24c62a74 	addiu	a2,a2,10868

80012f38 <shmem_remove_entry>:
shmem_remove_entry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:200
	return 0;
}

int shmem_remove_entry(struct shmem_struct *shmem, uintptr_t addr)
{
	return shmem_insert_entry(shmem, addr, 0);
80012f38:	08004b5c 	j	80012d70 <shmem_insert_entry>
80012f3c:	00003021 	move	a2,zero

80012f40 <vma_compare>:
vma_compare():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:217
// vma_compare - compare vma1->vm_start < vma2->vm_start ?
static inline int vma_compare(rb_node * node1, rb_node * node2)
{
	struct vma_struct *vma1 = rbn2vma(node1, rb_link);
	struct vma_struct *vma2 = rbn2vma(node2, rb_link);
	uintptr_t start1 = vma1->vm_start, start2 = vma2->vm_start;
80012f40:	8c83fff4 	lw	v1,-12(a0)
80012f44:	8ca4fff4 	lw	a0,-12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:219
	return (start1 < start2) ? -1 : (start1 > start2) ? 1 : 0;
}
80012f48:	2405ffff 	li	a1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:218
static inline int vma_compare(rb_node * node1, rb_node * node2)
{
	struct vma_struct *vma1 = rbn2vma(node1, rb_link);
	struct vma_struct *vma2 = rbn2vma(node2, rb_link);
	uintptr_t start1 = vma1->vm_start, start2 = vma2->vm_start;
	return (start1 < start2) ? -1 : (start1 > start2) ? 1 : 0;
80012f4c:	0064102b 	sltu	v0,v1,a0
80012f50:	0083182b 	sltu	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:219
}
80012f54:	0062280a 	movz	a1,v1,v0
80012f58:	03e00008 	jr	ra
80012f5c:	00a01021 	move	v0,a1

80012f60 <vma_resize>:
vma_resize():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:433
		*vma_store = vma;
	}
	return 0;
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
80012f60:	00c51025 	or	v0,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:434
{
80012f64:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:433
		*vma_store = vma;
	}
	return 0;
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
80012f68:	30420fff 	andi	v0,v0,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:435
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80012f6c:	14400020 	bnez	v0,80012ff0 <vma_resize+0x90>
80012f70:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:436
	assert(vma->vm_start <= start && start < end && end <= vma->vm_end);
80012f74:	8c820004 	lw	v0,4(a0)
80012f78:	00a2182b 	sltu	v1,a1,v0
80012f7c:	14600014 	bnez	v1,80012fd0 <vma_resize+0x70>
80012f80:	00a6182b 	sltu	v1,a1,a2
80012f84:	50600013 	beqzl	v1,80012fd4 <vma_resize+0x74>
80012f88:	3c048002 	lui	a0,0x8002
80012f8c:	8c830008 	lw	v1,8(a0)
80012f90:	0066182b 	sltu	v1,v1,a2
80012f94:	5460000f 	bnezl	v1,80012fd4 <vma_resize+0x74>
80012f98:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:437
	if (vma->vm_flags & VM_SHARE) {
80012f9c:	8c83000c 	lw	v1,12(a0)
80012fa0:	30630010 	andi	v1,v1,0x10
80012fa4:	10600006 	beqz	v1,80012fc0 <vma_resize+0x60>
80012fa8:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:438
		vma->shmem_off += start - vma->vm_start;
80012fac:	8c83002c 	lw	v1,44(a0)
80012fb0:	00621023 	subu	v0,v1,v0
80012fb4:	00451021 	addu	v0,v0,a1
80012fb8:	ac82002c 	sw	v0,44(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:447
		vma->mfile.offset += start - vma->vm_start;
	}
#endif //UCONFIG_BIONIC_LIBC

	vma->vm_start = start, vma->vm_end = end;
}
80012fbc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:446
	if (vma->mfile.file != NULL) {
		vma->mfile.offset += start - vma->vm_start;
	}
#endif //UCONFIG_BIONIC_LIBC

	vma->vm_start = start, vma->vm_end = end;
80012fc0:	ac850004 	sw	a1,4(a0)
80012fc4:	ac860008 	sw	a2,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:447
}
80012fc8:	03e00008 	jr	ra
80012fcc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:436
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(vma->vm_start <= start && start < end && end <= vma->vm_end);
80012fd0:	3c048002 	lui	a0,0x8002
80012fd4:	3c068002 	lui	a2,0x8002
80012fd8:	3c078002 	lui	a3,0x8002
80012fdc:	2484315c 	addiu	a0,a0,12636
80012fe0:	240501b4 	li	a1,436
80012fe4:	24c60e48 	addiu	a2,a2,3656
80012fe8:	0c006b13 	jal	8001ac4c <__panic>
80012fec:	24e73190 	addiu	a3,a3,12688
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:435
	return 0;
}

static void vma_resize(struct vma_struct *vma, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80012ff0:	3c048002 	lui	a0,0x8002
80012ff4:	3c068002 	lui	a2,0x8002
80012ff8:	3c078002 	lui	a3,0x8002
80012ffc:	2484315c 	addiu	a0,a0,12636
80013000:	240501b3 	li	a1,435
80013004:	24c60e48 	addiu	a2,a2,3656
80013008:	0c006b13 	jal	8001ac4c <__panic>
8001300c:	24e73164 	addiu	a3,a3,12644

80013010 <vma_destroy>:
vma_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:140
}

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
	if (vma->vm_flags & VM_SHARE) {
80013010:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:139
	return vma;
}

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
80013014:	27bdffe0 	addiu	sp,sp,-32
80013018:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:140
	if (vma->vm_flags & VM_SHARE) {
8001301c:	30420010 	andi	v0,v0,0x10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:139
	return vma;
}

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
80013020:	afbf001c 	sw	ra,28(sp)
80013024:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:140
	if (vma->vm_flags & VM_SHARE) {
80013028:	14400007 	bnez	v0,80013048 <vma_destroy+0x38>
8001302c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:145
		if (shmem_ref_dec(vma->shmem) == 0) {
			shmem_destroy(vma->shmem);
		}
	}
	kfree(vma);
80013030:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:146
}
80013034:	8fbf001c 	lw	ra,28(sp)
80013038:	8fb10018 	lw	s1,24(sp)
8001303c:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:145
	if (vma->vm_flags & VM_SHARE) {
		if (shmem_ref_dec(vma->shmem) == 0) {
			shmem_destroy(vma->shmem);
		}
	}
	kfree(vma);
80013040:	080054b9 	j	800152e4 <kfree>
80013044:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:141

// vma_destroy - free vma_struct
static void vma_destroy(struct vma_struct *vma)
{
	if (vma->vm_flags & VM_SHARE) {
		if (shmem_ref_dec(vma->shmem) == 0) {
80013048:	8c910028 	lw	s1,40(a0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001304c:	40026000 	mfc0	v0,c0_status
80013050:	30420001 	andi	v0,v0,0x1
80013054:	1440000f 	bnez	v0,80013094 <vma_destroy+0x84>
80013058:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
8001305c:	8e220010 	lw	v0,16(s1)
80013060:	2442ffff 	addiu	v0,v0,-1
80013064:	ae220010 	sw	v0,16(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013068:	8e220010 	lw	v0,16(s1)
vma_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:141
8001306c:	1440fff1 	bnez	v0,80013034 <vma_destroy+0x24>
80013070:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:142
			shmem_destroy(vma->shmem);
80013074:	0c004a04 	jal	80012810 <shmem_destroy>
80013078:	8e040028 	lw	a0,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:145
		}
	}
	kfree(vma);
8001307c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:146
}
80013080:	8fbf001c 	lw	ra,28(sp)
80013084:	8fb10018 	lw	s1,24(sp)
80013088:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:145
	if (vma->vm_flags & VM_SHARE) {
		if (shmem_ref_dec(vma->shmem) == 0) {
			shmem_destroy(vma->shmem);
		}
	}
	kfree(vma);
8001308c:	080054b9 	j	800152e4 <kfree>
80013090:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013094:	0c006d0c 	jal	8001b430 <intr_disable>
80013098:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
8001309c:	8e220010 	lw	v0,16(s1)
800130a0:	2442ffff 	addiu	v0,v0,-1
800130a4:	ae220010 	sw	v0,16(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800130a8:	0c006d08 	jal	8001b420 <intr_enable>
800130ac:	00000000 	nop
800130b0:	08004c1a 	j	80013068 <vma_destroy+0x58>
800130b4:	00000000 	nop

800130b8 <lock_mm>:
lock_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:66
static void check_vmm(void);
static void check_vma_struct(void);
static void check_pgfault(void);

void lock_mm(struct mm_struct *mm)
{
800130b8:	27bdffe8 	addiu	sp,sp,-24
800130bc:	afb00010 	sw	s0,16(sp)
800130c0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:67
	if (mm != NULL) {
800130c4:	10800009 	beqz	a0,800130ec <lock_mm+0x34>
800130c8:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:68
		down(&(mm->mm_sem));
800130cc:	0c006727 	jal	80019c9c <down>
800130d0:	24840034 	addiu	a0,a0,52
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:69
		struct proc_struct *current = pls_read(current);
800130d4:	3c028015 	lui	v0,0x8015
800130d8:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:70
		if (current != NULL) {
800130dc:	10400004 	beqz	v0,800130f0 <lock_mm+0x38>
800130e0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:71
			mm->locked_by = current->pid;
800130e4:	8c420004 	lw	v0,4(v0)
800130e8:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:74
		}
	}
}
800130ec:	8fbf0014 	lw	ra,20(sp)
800130f0:	8fb00010 	lw	s0,16(sp)
800130f4:	03e00008 	jr	ra
800130f8:	27bd0018 	addiu	sp,sp,24

800130fc <unlock_mm>:
unlock_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:77

void unlock_mm(struct mm_struct *mm)
{
800130fc:	27bdffe8 	addiu	sp,sp,-24
80013100:	afb00010 	sw	s0,16(sp)
80013104:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:78
	if (mm != NULL) {
80013108:	10800004 	beqz	a0,8001311c <unlock_mm+0x20>
8001310c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:79
		up(&(mm->mm_sem));
80013110:	0c006725 	jal	80019c94 <up>
80013114:	24840034 	addiu	a0,a0,52
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:80
		mm->locked_by = 0;
80013118:	ae000020 	sw	zero,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:82
	}
}
8001311c:	8fbf0014 	lw	ra,20(sp)
80013120:	8fb00010 	lw	s0,16(sp)
80013124:	03e00008 	jr	ra
80013128:	27bd0018 	addiu	sp,sp,24

8001312c <try_lock_mm>:
try_lock_mm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:85

bool try_lock_mm(struct mm_struct *mm)
{
8001312c:	27bdffe8 	addiu	sp,sp,-24
80013130:	afb00010 	sw	s0,16(sp)
80013134:	afbf0014 	sw	ra,20(sp)
80013138:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:86
	if (mm != NULL) {
8001313c:	1080000b 	beqz	a0,8001316c <try_lock_mm+0x40>
80013140:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:87
		if (!try_down(&(mm->mm_sem))) {
80013144:	0c006738 	jal	80019ce0 <try_down>
80013148:	24840034 	addiu	a0,a0,52
8001314c:	10400007 	beqz	v0,8001316c <try_lock_mm+0x40>
80013150:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:90
			return 0;
		}
		struct proc_struct *current = pls_read(current);
80013154:	3c028015 	lui	v0,0x8015
80013158:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:91
		if (current != NULL) {
8001315c:	10400003 	beqz	v0,8001316c <try_lock_mm+0x40>
80013160:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:92
			mm->locked_by = current->pid;
80013164:	8c420004 	lw	v0,4(v0)
80013168:	ae020020 	sw	v0,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:96
		}
	}
	return 1;
}
8001316c:	8fbf0014 	lw	ra,20(sp)
80013170:	00601021 	move	v0,v1
80013174:	8fb00010 	lw	s0,16(sp)
80013178:	03e00008 	jr	ra
8001317c:	27bd0018 	addiu	sp,sp,24

80013180 <mm_create>:
mm_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:100

// mm_create -  alloc a mm_struct & initialize it.
struct mm_struct *mm_create(void)
{
80013180:	27bdffe0 	addiu	sp,sp,-32
80013184:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:101
	struct mm_struct *mm = kmalloc(sizeof(struct mm_struct));
80013188:	0c00548e 	jal	80015238 <kmalloc>
8001318c:	2404004c 	li	a0,76
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:102
	if (mm != NULL) {
80013190:	10400015 	beqz	v0,800131e8 <mm_create+0x68>
80013194:	2443002c 	addiu	v1,v0,44
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80013198:	ac430030 	sw	v1,48(v0)
8001319c:	ac43002c 	sw	v1,44(v0)
800131a0:	ac420004 	sw	v0,4(v0)
800131a4:	ac420000 	sw	v0,0(v0)
mm_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:104
		list_init(&(mm->mmap_list));
		mm->mmap_tree = NULL;
800131a8:	ac400008 	sw	zero,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:105
		mm->mmap_cache = NULL;
800131ac:	ac40000c 	sw	zero,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:106
		mm->pgdir = NULL;
800131b0:	ac400010 	sw	zero,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:107
		mm->map_count = 0;
800131b4:	ac400014 	sw	zero,20(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:108
		mm->swap_address = 0;
800131b8:	ac400018 	sw	zero,24(v0)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
800131bc:	ac40001c 	sw	zero,28(v0)
mm_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:110
		set_mm_count(mm, 0);
		mm->locked_by = 0;
800131c0:	ac400020 	sw	zero,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:111
		mm->brk_start = mm->brk = 0;
800131c4:	ac400028 	sw	zero,40(v0)
800131c8:	ac400024 	sw	zero,36(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:113
		list_init(&(mm->proc_mm_link));
		sem_init(&(mm->mm_sem), 1);
800131cc:	24440034 	addiu	a0,v0,52
800131d0:	24050001 	li	a1,1
800131d4:	0c00671f 	jal	80019c7c <sem_init>
800131d8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:114
		mm->lapic = -1;
800131dc:	8fa20010 	lw	v0,16(sp)
800131e0:	2403ffff 	li	v1,-1
800131e4:	ac430048 	sw	v1,72(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:117
	}
	return mm;
}
800131e8:	8fbf001c 	lw	ra,28(sp)
800131ec:	03e00008 	jr	ra
800131f0:	27bd0020 	addiu	sp,sp,32

800131f4 <vma_create>:
vma_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:122

// vma_create - alloc a vma_struct & initialize it. (addr range: vm_start~vm_end)
struct vma_struct *vma_create(uintptr_t vm_start, uintptr_t vm_end,
			      uint32_t vm_flags)
{
800131f4:	27bdffe0 	addiu	sp,sp,-32
800131f8:	afb00018 	sw	s0,24(sp)
800131fc:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:123
	struct vma_struct *vma = kmalloc(sizeof(struct vma_struct));
80013200:	afa50010 	sw	a1,16(sp)
80013204:	afa60014 	sw	a2,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:122
}

// vma_create - alloc a vma_struct & initialize it. (addr range: vm_start~vm_end)
struct vma_struct *vma_create(uintptr_t vm_start, uintptr_t vm_end,
			      uint32_t vm_flags)
{
80013208:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:123
	struct vma_struct *vma = kmalloc(sizeof(struct vma_struct));
8001320c:	0c00548e 	jal	80015238 <kmalloc>
80013210:	24040030 	li	a0,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:124
	if (vma != NULL) {
80013214:	8fa50010 	lw	a1,16(sp)
80013218:	10400006 	beqz	v0,80013234 <vma_create+0x40>
8001321c:	8fa60014 	lw	a2,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:125
		vma->vm_start = vm_start;
80013220:	ac500004 	sw	s0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:126
		vma->vm_end = vm_end;
80013224:	ac450008 	sw	a1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:127
		vma->vm_flags = vm_flags;
80013228:	ac46000c 	sw	a2,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:128
		vma->shmem = NULL;
8001322c:	ac400028 	sw	zero,40(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:129
		vma->shmem_off = 0;
80013230:	ac40002c 	sw	zero,44(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:135
#ifdef UCONFIG_BIONIC_LIBC
		vma->mfile.file = NULL;
#endif //UCONFIG_BIONIC_LIBC
	}
	return vma;
}
80013234:	8fbf001c 	lw	ra,28(sp)
80013238:	8fb00018 	lw	s0,24(sp)
8001323c:	03e00008 	jr	ra
80013240:	27bd0020 	addiu	sp,sp,32

80013244 <find_vma>:
find_vma():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:170
	return vma;
}

// find_vma - find a vma  (vma->vm_start <= addr <= vma_vm_end)
struct vma_struct *find_vma(struct mm_struct *mm, uintptr_t addr)
{
80013244:	27bdffd8 	addiu	sp,sp,-40
80013248:	afb30020 	sw	s3,32(sp)
8001324c:	afb10018 	sw	s1,24(sp)
80013250:	afb00014 	sw	s0,20(sp)
80013254:	afbf0024 	sw	ra,36(sp)
80013258:	afb2001c 	sw	s2,28(sp)
8001325c:	00809821 	move	s3,a0
80013260:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:172
	struct vma_struct *vma = NULL;
	if (mm != NULL) {
80013264:	10800020 	beqz	a0,800132e8 <find_vma+0xa4>
80013268:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:173
		vma = mm->mmap_cache;
8001326c:	8c91000c 	lw	s1,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:174
		if (!
80013270:	52200006 	beqzl	s1,8001328c <find_vma+0x48>
80013274:	8e720008 	lw	s2,8(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:175
		    (vma != NULL && vma->vm_start <= addr
80013278:	8e220004 	lw	v0,4(s1)
8001327c:	00a2102b 	sltu	v0,a1,v0
80013280:	50400027 	beqzl	v0,80013320 <find_vma+0xdc>
80013284:	8e220008 	lw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:177
		     && vma->vm_end > addr)) {
			if (mm->mmap_tree != NULL) {
80013288:	8e720008 	lw	s2,8(s3)
8001328c:	1240002a 	beqz	s2,80013338 <find_vma+0xf4>
80013290:	02601021 	move	v0,s3
find_vma_rb():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:151
}

// find_vma_rb - find a vma  (vma->vm_start <= addr <= vma_vm_end) in rb tree
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
80013294:	0c005723 	jal	80015c8c <rb_node_root>
80013298:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:153
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
8001329c:	10400012 	beqz	v0,800132e8 <find_vma+0xa4>
800132a0:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:155
		tmp = rbn2vma(node, rb_link);
		if (tmp->vm_end > addr) {
800132a4:	8c43fff8 	lw	v1,-8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:160
			vma = tmp;
			if (tmp->vm_start <= addr) {
				break;
			}
			node = rb_node_left(tree, node);
800132a8:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:155
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
		tmp = rbn2vma(node, rb_link);
		if (tmp->vm_end > addr) {
800132ac:	0203182b 	sltu	v1,s0,v1
800132b0:	10600015 	beqz	v1,80013308 <find_vma+0xc4>
800132b4:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:157
			vma = tmp;
			if (tmp->vm_start <= addr) {
800132b8:	8c43fff4 	lw	v1,-12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:154
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
		tmp = rbn2vma(node, rb_link);
800132bc:	2451fff0 	addiu	s1,v0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:157
		if (tmp->vm_end > addr) {
			vma = tmp;
			if (tmp->vm_start <= addr) {
800132c0:	0203102b 	sltu	v0,s0,v1
800132c4:	10400005 	beqz	v0,800132dc <find_vma+0x98>
800132c8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:160
				break;
			}
			node = rb_node_left(tree, node);
800132cc:	0c00572a 	jal	80015ca8 <rb_node_left>
800132d0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:153
// find_vma_rb - find a vma  (vma->vm_start <= addr <= vma_vm_end) in rb tree
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
800132d4:	5440fff4 	bnezl	v0,800132a8 <find_vma+0x64>
800132d8:	8c43fff8 	lw	v1,-8(v0)
find_vma():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:195
				if (!found) {
					vma = NULL;
				}
			}
		}
		if (vma != NULL) {
800132dc:	12200003 	beqz	s1,800132ec <find_vma+0xa8>
800132e0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:196
			mm->mmap_cache = vma;
800132e4:	ae71000c 	sw	s1,12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:200
		}
	}
	return vma;
}
800132e8:	8fbf0024 	lw	ra,36(sp)
800132ec:	02201021 	move	v0,s1
800132f0:	8fb30020 	lw	s3,32(sp)
800132f4:	8fb2001c 	lw	s2,28(sp)
800132f8:	8fb10018 	lw	s1,24(sp)
800132fc:	8fb00014 	lw	s0,20(sp)
80013300:	03e00008 	jr	ra
80013304:	27bd0028 	addiu	sp,sp,40
find_vma_rb():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:162
			if (tmp->vm_start <= addr) {
				break;
			}
			node = rb_node_left(tree, node);
		} else {
			node = rb_node_right(tree, node);
80013308:	0c005730 	jal	80015cc0 <rb_node_right>
8001330c:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:153
// find_vma_rb - find a vma  (vma->vm_start <= addr <= vma_vm_end) in rb tree
static inline struct vma_struct *find_vma_rb(rb_tree * tree, uintptr_t addr)
{
	rb_node *node = rb_node_root(tree);
	struct vma_struct *vma = NULL, *tmp;
	while (node != NULL) {
80013310:	5440ffe5 	bnezl	v0,800132a8 <find_vma+0x64>
80013314:	8c43fff8 	lw	v1,-8(v0)
80013318:	08004cb7 	j	800132dc <find_vma+0x98>
8001331c:	00000000 	nop
find_vma():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:174
struct vma_struct *find_vma(struct mm_struct *mm, uintptr_t addr)
{
	struct vma_struct *vma = NULL;
	if (mm != NULL) {
		vma = mm->mmap_cache;
		if (!
80013320:	00a2102b 	sltu	v0,a1,v0
80013324:	5440fff0 	bnezl	v0,800132e8 <find_vma+0xa4>
80013328:	ae71000c 	sw	s1,12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:177
		    (vma != NULL && vma->vm_start <= addr
		     && vma->vm_end > addr)) {
			if (mm->mmap_tree != NULL) {
8001332c:	8e720008 	lw	s2,8(s3)
80013330:	1640ffd8 	bnez	s2,80013294 <find_vma+0x50>
80013334:	02601021 	move	v0,s3
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80013338:	8c420004 	lw	v0,4(v0)
find_vma():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:183
				vma = find_vma_rb(mm->mmap_tree, addr);
			} else {
				bool found = 0;
				list_entry_t *list = &(mm->mmap_list), *le =
				    list;
				while ((le = list_next(le)) != list) {
8001333c:	1262ffea 	beq	s3,v0,800132e8 <find_vma+0xa4>
80013340:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:185
					vma = le2vma(le, list_link);
					if (addr < vma->vm_end) {
80013344:	8c43ffe8 	lw	v1,-24(v0)
80013348:	0203182b 	sltu	v1,s0,v1
8001334c:	1060fffa 	beqz	v1,80013338 <find_vma+0xf4>
80013350:	2451ffe0 	addiu	s1,v0,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:195
				if (!found) {
					vma = NULL;
				}
			}
		}
		if (vma != NULL) {
80013354:	5620ffe4 	bnezl	s1,800132e8 <find_vma+0xa4>
80013358:	ae71000c 	sw	s1,12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:200
			mm->mmap_cache = vma;
		}
	}
	return vma;
}
8001335c:	08004cbb 	j	800132ec <find_vma+0xa8>
80013360:	8fbf0024 	lw	ra,36(sp)

80013364 <find_vma_intersection>:
find_vma_intersection():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:204

struct vma_struct *find_vma_intersection(struct mm_struct *mm, uintptr_t start,
					 uintptr_t end)
{
80013364:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:205
	struct vma_struct *vma = find_vma(mm, start);
80013368:	afa60010 	sw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:204
	return vma;
}

struct vma_struct *find_vma_intersection(struct mm_struct *mm, uintptr_t start,
					 uintptr_t end)
{
8001336c:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:205
	struct vma_struct *vma = find_vma(mm, start);
80013370:	0c004c91 	jal	80013244 <find_vma>
80013374:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:206
	if (vma != NULL && end <= vma->vm_start) {
80013378:	10400004 	beqz	v0,8001338c <find_vma_intersection+0x28>
8001337c:	8fa60010 	lw	a2,16(sp)
80013380:	8c430004 	lw	v1,4(v0)
80013384:	0066302b 	sltu	a2,v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:207
		vma = NULL;
80013388:	0006100a 	movz	v0,zero,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:210
	}
	return vma;
}
8001338c:	8fbf001c 	lw	ra,28(sp)
80013390:	03e00008 	jr	ra
80013394:	27bd0020 	addiu	sp,sp,32

80013398 <insert_vma_struct>:
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:291
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
80013398:	8ca20004 	lw	v0,4(a1)
8001339c:	8ca30008 	lw	v1,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:290
	}
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
800133a0:	27bdffd8 	addiu	sp,sp,-40
800133a4:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:291
	assert(vma->vm_start < vma->vm_end);
800133a8:	0043182b 	sltu	v1,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:290
	}
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
800133ac:	afb00014 	sw	s0,20(sp)
800133b0:	afbf0024 	sw	ra,36(sp)
800133b4:	afb30020 	sw	s3,32(sp)
800133b8:	afb2001c 	sw	s2,28(sp)
800133bc:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:291
	assert(vma->vm_start < vma->vm_end);
800133c0:	10600070 	beqz	v1,80013584 <insert_vma_struct+0x1ec>
800133c4:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:294
	list_entry_t *list = &(mm->mmap_list);
	list_entry_t *le_prev = list, *le_next;
	if (mm->mmap_tree != NULL) {
800133c8:	8c920008 	lw	s2,8(a0)
800133cc:	1240003e 	beqz	s2,800134c8 <insert_vma_struct+0x130>
800133d0:	24b30010 	addiu	s3,a1,16
insert_vma_rb():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:281
static inline void
insert_vma_rb(rb_tree * tree, struct vma_struct *vma,
	      struct vma_struct **vma_prevp)
{
	rb_node *node = &(vma->rb_link), *prev;
	rb_insert(tree, node);
800133d4:	02402021 	move	a0,s2
800133d8:	0c00557d 	jal	800155f4 <rb_insert>
800133dc:	02602821 	move	a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:283
	if (vma_prevp != NULL) {
		prev = rb_node_prev(tree, node);
800133e0:	02402021 	move	a0,s2
800133e4:	0c0056e6 	jal	80015b98 <rb_node_prev>
800133e8:	02602821 	move	a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:284
		*vma_prevp = (prev != NULL) ? rbn2vma(prev, rb_link) : NULL;
800133ec:	50400053 	beqzl	v0,8001353c <insert_vma_struct+0x1a4>
800133f0:	8e040004 	lw	a0,4(s0)
800133f4:	2443fff0 	addiu	v1,v0,-16
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:297
	list_entry_t *list = &(mm->mmap_list);
	list_entry_t *le_prev = list, *le_next;
	if (mm->mmap_tree != NULL) {
		struct vma_struct *mmap_prev;
		insert_vma_rb(mm->mmap_tree, vma, &mmap_prev);
		if (mmap_prev != NULL) {
800133f8:	50600050 	beqzl	v1,8001353c <insert_vma_struct+0x1a4>
800133fc:	8e040004 	lw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:298
			le_prev = &(mmap_prev->list_link);
80013400:	8c440014 	lw	a0,20(v0)
80013404:	24430010 	addiu	v1,v0,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:314
	}

	le_next = list_next(le_prev);

	/* check overlap */
	if (le_prev != list) {
80013408:	1070000e 	beq	v1,s0,80013444 <insert_vma_struct+0xac>
8001340c:	00000000 	nop
check_vma_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
80013410:	8c65ffe8 	lw	a1,-24(v1)
80013414:	8c62ffe4 	lw	v0,-28(v1)
80013418:	0045102b 	sltu	v0,v0,a1
8001341c:	10400057 	beqz	v0,8001357c <insert_vma_struct+0x1e4>
80013420:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:271
	assert(prev->vm_end <= next->vm_start);
80013424:	8e220004 	lw	v0,4(s1)
80013428:	0045282b 	sltu	a1,v0,a1
8001342c:	54a0004c 	bnezl	a1,80013560 <insert_vma_struct+0x1c8>
80013430:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:272
	assert(next->vm_start < next->vm_end);
80013434:	8e250008 	lw	a1,8(s1)
80013438:	0045102b 	sltu	v0,v0,a1
8001343c:	50400041 	beqzl	v0,80013544 <insert_vma_struct+0x1ac>
80013440:	3c048002 	lui	a0,0x8002
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:317

	/* check overlap */
	if (le_prev != list) {
		check_vma_overlap(le2vma(le_prev, list_link), vma);
	}
	if (le_next != list) {
80013444:	5204000f 	beql	s0,a0,80013484 <insert_vma_struct+0xec>
80013448:	8e050014 	lw	a1,20(s0)
check_vma_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
8001344c:	8e220008 	lw	v0,8(s1)
80013450:	8e250004 	lw	a1,4(s1)
80013454:	00a2282b 	sltu	a1,a1,v0
80013458:	10a00048 	beqz	a1,8001357c <insert_vma_struct+0x1e4>
8001345c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:271
	assert(prev->vm_end <= next->vm_start);
80013460:	8c85ffe4 	lw	a1,-28(a0)
80013464:	00a2102b 	sltu	v0,a1,v0
80013468:	5440003d 	bnezl	v0,80013560 <insert_vma_struct+0x1c8>
8001346c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:272
	assert(next->vm_start < next->vm_end);
80013470:	8c82ffe8 	lw	v0,-24(a0)
80013474:	00a2282b 	sltu	a1,a1,v0
80013478:	50a00032 	beqzl	a1,80013544 <insert_vma_struct+0x1ac>
8001347c:	3c048002 	lui	a0,0x8002
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:324
	}

	vma->vm_mm = mm;
	list_add_after(le_prev, &(vma->list_link));

	mm->map_count++;
80013480:	8e050014 	lw	a1,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:325
	if (mm->mmap_tree == NULL && mm->map_count >= RB_MIN_MAP_COUNT) {
80013484:	8e060008 	lw	a2,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:322
	if (le_next != list) {
		check_vma_overlap(vma, le2vma(le_next, list_link));
	}

	vma->vm_mm = mm;
	list_add_after(le_prev, &(vma->list_link));
80013488:	26220020 	addiu	v0,s1,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:324

	mm->map_count++;
8001348c:	24a50001 	addiu	a1,a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:321
	}
	if (le_next != list) {
		check_vma_overlap(vma, le2vma(le_next, list_link));
	}

	vma->vm_mm = mm;
80013490:	ae300000 	sw	s0,0(s1)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80013494:	ac820000 	sw	v0,0(a0)
80013498:	ac620004 	sw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8001349c:	ae230020 	sw	v1,32(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800134a0:	ae240024 	sw	a0,36(s1)
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:325
	list_add_after(le_prev, &(vma->list_link));

	mm->map_count++;
	if (mm->mmap_tree == NULL && mm->map_count >= RB_MIN_MAP_COUNT) {
800134a4:	10c00012 	beqz	a2,800134f0 <insert_vma_struct+0x158>
800134a8:	ae050014 	sw	a1,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:338
				insert_vma_rb(mm->mmap_tree,
					      le2vma(le, list_link), NULL);
			}
		}
	}
}
800134ac:	8fbf0024 	lw	ra,36(sp)
800134b0:	8fb30020 	lw	s3,32(sp)
800134b4:	8fb2001c 	lw	s2,28(sp)
800134b8:	8fb10018 	lw	s1,24(sp)
800134bc:	8fb00014 	lw	s0,20(sp)
800134c0:	03e00008 	jr	ra
800134c4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:294
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
	list_entry_t *list = &(mm->mmap_list);
	list_entry_t *le_prev = list, *le_next;
	if (mm->mmap_tree != NULL) {
800134c8:	00801821 	move	v1,a0
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800134cc:	8c840004 	lw	a0,4(a0)
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:302
		if (mmap_prev != NULL) {
			le_prev = &(mmap_prev->list_link);
		}
	} else {
		list_entry_t *le = list;
		while ((le = list_next(le)) != list) {
800134d0:	1204ffcd 	beq	s0,a0,80013408 <insert_vma_struct+0x70>
800134d4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:304
			struct vma_struct *mmap_prev = le2vma(le, list_link);
			if (mmap_prev->vm_start > vma->vm_start) {
800134d8:	8c85ffe4 	lw	a1,-28(a0)
800134dc:	0045282b 	sltu	a1,v0,a1
800134e0:	50a0fffa 	beqzl	a1,800134cc <insert_vma_struct+0x134>
800134e4:	00801821 	move	v1,a0
800134e8:	08004d02 	j	80013408 <insert_vma_struct+0x70>
800134ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:325

	vma->vm_mm = mm;
	list_add_after(le_prev, &(vma->list_link));

	mm->map_count++;
	if (mm->mmap_tree == NULL && mm->map_count >= RB_MIN_MAP_COUNT) {
800134f0:	28a50020 	slti	a1,a1,32
800134f4:	14a0ffee 	bnez	a1,800134b0 <insert_vma_struct+0x118>
800134f8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:328

		/* try to build red-black tree now, but may fail. */
		mm->mmap_tree = rb_tree_create(vma_compare);
800134fc:	3c048001 	lui	a0,0x8001
80013500:	0c00554c 	jal	80015530 <rb_tree_create>
80013504:	24842f40 	addiu	a0,a0,12096
80013508:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:330

		if (mm->mmap_tree != NULL) {
8001350c:	1040ffe7 	beqz	v0,800134ac <insert_vma_struct+0x114>
80013510:	ae020008 	sw	v0,8(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80013514:	8e110004 	lw	s1,4(s0)
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:332
			list_entry_t *list = &(mm->mmap_list), *le = list;
			while ((le = list_next(le)) != list) {
80013518:	1211ffe5 	beq	s0,s1,800134b0 <insert_vma_struct+0x118>
8001351c:	8fbf0024 	lw	ra,36(sp)
insert_vma_rb():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:281
static inline void
insert_vma_rb(rb_tree * tree, struct vma_struct *vma,
	      struct vma_struct **vma_prevp)
{
	rb_node *node = &(vma->rb_link), *prev;
	rb_insert(tree, node);
80013520:	0c00557d 	jal	800155f4 <rb_insert>
80013524:	2625fff0 	addiu	a1,s1,-16
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80013528:	8e310004 	lw	s1,4(s1)
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:332
		/* try to build red-black tree now, but may fail. */
		mm->mmap_tree = rb_tree_create(vma_compare);

		if (mm->mmap_tree != NULL) {
			list_entry_t *list = &(mm->mmap_list), *le = list;
			while ((le = list_next(le)) != list) {
8001352c:	5611fffc 	bnel	s0,s1,80013520 <insert_vma_struct+0x188>
80013530:	8e040008 	lw	a0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:338
				insert_vma_rb(mm->mmap_tree,
					      le2vma(le, list_link), NULL);
			}
		}
	}
}
80013534:	08004d2c 	j	800134b0 <insert_vma_struct+0x118>
80013538:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:292

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
	list_entry_t *list = &(mm->mmap_list);
8001353c:	08004d11 	j	80013444 <insert_vma_struct+0xac>
80013540:	02001821 	move	v1,s0
check_vma_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:272
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
	assert(prev->vm_end <= next->vm_start);
	assert(next->vm_start < next->vm_end);
80013544:	3c068002 	lui	a2,0x8002
80013548:	3c078002 	lui	a3,0x8002
8001354c:	2484315c 	addiu	a0,a0,12636
80013550:	24050110 	li	a1,272
80013554:	24c60e48 	addiu	a2,a2,3656
80013558:	0c006b13 	jal	8001ac4c <__panic>
8001355c:	24e73228 	addiu	a3,a3,12840
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:271
// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
	assert(prev->vm_end <= next->vm_start);
80013560:	3c068002 	lui	a2,0x8002
80013564:	3c078002 	lui	a3,0x8002
80013568:	2484315c 	addiu	a0,a0,12636
8001356c:	2405010f 	li	a1,271
80013570:	24c60e48 	addiu	a2,a2,3656
80013574:	0c006b13 	jal	8001ac4c <__panic>
80013578:	24e73208 	addiu	a3,a3,12808
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
8001357c:	0c007f6e 	jal	8001fdb8 <check_vma_overlap.part.5>
80013580:	00000000 	nop
insert_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:291
}

// insert_vma_struct -insert vma in mm's rb tree link & list link
void insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(vma->vm_start < vma->vm_end);
80013584:	3c048002 	lui	a0,0x8002
80013588:	3c068002 	lui	a2,0x8002
8001358c:	3c078002 	lui	a3,0x8002
80013590:	2484315c 	addiu	a0,a0,12636
80013594:	24050123 	li	a1,291
80013598:	24c60e48 	addiu	a2,a2,3656
8001359c:	0c006b13 	jal	8001ac4c <__panic>
800135a0:	24e731ec 	addiu	a3,a3,12780

800135a4 <mm_destroy>:
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
800135a4:	8c82001c 	lw	v0,28(a0)
mm_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:357
	return 0;
}

// mm_destroy - free mm and mm internal fields
void mm_destroy(struct mm_struct *mm)
{
800135a8:	27bdffe8 	addiu	sp,sp,-24
800135ac:	afb00010 	sw	s0,16(sp)
800135b0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:358
	assert(mm_count(mm) == 0);
800135b4:	14400015 	bnez	v0,8001360c <mm_destroy+0x68>
800135b8:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:359
	if (mm->mmap_tree != NULL) {
800135bc:	8c840008 	lw	a0,8(a0)
800135c0:	5080000b 	beqzl	a0,800135f0 <mm_destroy+0x4c>
800135c4:	8e040004 	lw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:360
		rb_tree_destroy(mm->mmap_tree);
800135c8:	0c0056d8 	jal	80015b60 <rb_tree_destroy>
800135cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800135d0:	08004d7c 	j	800135f0 <mm_destroy+0x4c>
800135d4:	8e040004 	lw	a0,4(s0)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
800135d8:	8c820004 	lw	v0,4(a0)
mm_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:365
	}
	list_entry_t *list = &(mm->mmap_list), *le;
	while ((le = list_next(list)) != list) {
		list_del(le);
		vma_destroy(le2vma(le, list_link));
800135dc:	2484ffe0 	addiu	a0,a0,-32
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800135e0:	ac620004 	sw	v0,4(v1)
mm_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:365
800135e4:	0c004c04 	jal	80013010 <vma_destroy>
800135e8:	ac430000 	sw	v1,0(v0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800135ec:	8e040004 	lw	a0,4(s0)
mm_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:363
	assert(mm_count(mm) == 0);
	if (mm->mmap_tree != NULL) {
		rb_tree_destroy(mm->mmap_tree);
	}
	list_entry_t *list = &(mm->mmap_list), *le;
	while ((le = list_next(list)) != list) {
800135f0:	5604fff9 	bnel	s0,a0,800135d8 <mm_destroy+0x34>
800135f4:	8c830000 	lw	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:367
		list_del(le);
		vma_destroy(le2vma(le, list_link));
	}
	kfree(mm);
800135f8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:368
}
800135fc:	8fbf0014 	lw	ra,20(sp)
80013600:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:367
	list_entry_t *list = &(mm->mmap_list), *le;
	while ((le = list_next(list)) != list) {
		list_del(le);
		vma_destroy(le2vma(le, list_link));
	}
	kfree(mm);
80013604:	080054b9 	j	800152e4 <kfree>
80013608:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:358
}

// mm_destroy - free mm and mm internal fields
void mm_destroy(struct mm_struct *mm)
{
	assert(mm_count(mm) == 0);
8001360c:	3c048002 	lui	a0,0x8002
80013610:	3c068002 	lui	a2,0x8002
80013614:	3c078002 	lui	a3,0x8002
80013618:	2484315c 	addiu	a0,a0,12636
8001361c:	24050166 	li	a1,358
80013620:	24c60e48 	addiu	a2,a2,3656
80013624:	0c006b13 	jal	8001ac4c <__panic>
80013628:	24e73248 	addiu	a3,a3,12872

8001362c <vmm_init>:
vmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:373
}

// vmm_init - initialize virtual memory management
//          - now just call check_vmm to check correctness of vmm
void vmm_init(void)
{
8001362c:	27bdffd0 	addiu	sp,sp,-48
80013630:	afbf002c 	sw	ra,44(sp)
80013634:	afb60028 	sw	s6,40(sp)
80013638:	afb50024 	sw	s5,36(sp)
8001363c:	afb40020 	sw	s4,32(sp)
80013640:	afb3001c 	sw	s3,28(sp)
80013644:	afb20018 	sw	s2,24(sp)
80013648:	afb10014 	sw	s1,20(sp)
check_vmm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:735
}

// check_vmm - check correctness of vmm
static void check_vmm(void)
{
	size_t nr_used_pages_store = nr_used_pages();
8001364c:	0c007922 	jal	8001e488 <nr_used_pages>
80013650:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:737
	//YX
	size_t slab_allocated_store = slab_allocated();
80013654:	0c00545a 	jal	80015168 <slab_allocated>
80013658:	0040a021 	move	s4,v0
check_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:749
	kprintf("check_vmm() succeeded.\n");
}

static void check_vma_struct(void)
{
	size_t nr_used_pages_store = nr_used_pages();
8001365c:	0c007922 	jal	8001e488 <nr_used_pages>
80013660:	00409821 	move	s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:750
	size_t slab_allocated_store = slab_allocated();
80013664:	0c00545a 	jal	80015168 <slab_allocated>
80013668:	0040b021 	move	s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:752

	struct mm_struct *mm = mm_create();
8001366c:	0c004c60 	jal	80013180 <mm_create>
80013670:	0040a821 	move	s5,v0
80013674:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:753
	assert(mm != NULL);
80013678:	24100140 	li	s0,320
8001367c:	10400095 	beqz	v0,800138d4 <vmm_init+0x2a8>
80013680:	2412fffb 	li	s2,-5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:759
	//10 
	int step1 = RB_MIN_MAP_COUNT * 2, step2 = step1 * 10;

	int i;
	for (i = step1; i >= 0; i--) {
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
80013684:	02002021 	move	a0,s0
80013688:	26050002 	addiu	a1,s0,2
8001368c:	0c004c7d 	jal	800131f4 <vma_create>
80013690:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:760
		assert(vma != NULL);
80013694:	1040008b 	beqz	v0,800138c4 <vmm_init+0x298>
80013698:	2610fffb 	addiu	s0,s0,-5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:761
		insert_vma_struct(mm, vma);
8001369c:	02202021 	move	a0,s1
800136a0:	0c004ce6 	jal	80013398 <insert_vma_struct>
800136a4:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:758
	assert(mm != NULL);
	//10 
	int step1 = RB_MIN_MAP_COUNT * 2, step2 = step1 * 10;

	int i;
	for (i = step1; i >= 0; i--) {
800136a8:	1612fff7 	bne	s0,s2,80013688 <vmm_init+0x5c>
800136ac:	02002021 	move	a0,s0
800136b0:	24100145 	li	s0,325
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:764
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
		insert_vma_struct(mm, vma);
	}

	for (i = step1 + 1; i <= step2; i++) {
800136b4:	24120c85 	li	s2,3205
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:765
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
800136b8:	02002021 	move	a0,s0
800136bc:	26050002 	addiu	a1,s0,2
800136c0:	0c004c7d 	jal	800131f4 <vma_create>
800136c4:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:766
		assert(vma != NULL);
800136c8:	10400072 	beqz	v0,80013894 <vmm_init+0x268>
800136cc:	26100005 	addiu	s0,s0,5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:767
		insert_vma_struct(mm, vma);
800136d0:	02202021 	move	a0,s1
800136d4:	0c004ce6 	jal	80013398 <insert_vma_struct>
800136d8:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:764
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
		insert_vma_struct(mm, vma);
	}

	for (i = step1 + 1; i <= step2; i++) {
800136dc:	1612fff7 	bne	s0,s2,800136bc <vmm_init+0x90>
800136e0:	02002021 	move	a0,s0
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800136e4:	8e220004 	lw	v0,4(s1)
800136e8:	24030002 	li	v1,2
check_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:772
		insert_vma_struct(mm, vma);
	}

	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
800136ec:	24060c87 	li	a2,3207
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:773
		assert(le != &(mm->mmap_list));
800136f0:	12220061 	beq	s1,v0,80013878 <vmm_init+0x24c>
800136f4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:775
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
800136f8:	8c44ffe4 	lw	a0,-28(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:372
	kfree(mm);
}

// vmm_init - initialize virtual memory management
//          - now just call check_vmm to check correctness of vmm
void vmm_init(void)
800136fc:	2465fffe 	addiu	a1,v1,-2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:775
	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
		assert(le != &(mm->mmap_list));
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
80013700:	14a4004e 	bne	a1,a0,8001383c <vmm_init+0x210>
80013704:	3c048002 	lui	a0,0x8002
80013708:	8c44ffe8 	lw	a0,-24(v0)
8001370c:	1483004a 	bne	a0,v1,80013838 <vmm_init+0x20c>
80013710:	24630005 	addiu	v1,v1,5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:772
		insert_vma_struct(mm, vma);
	}

	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
80013714:	1466fff6 	bne	v1,a2,800136f0 <vmm_init+0xc4>
80013718:	8c420004 	lw	v0,4(v0)
8001371c:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:779
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
		le = list_next(le);
	}

	for (i = 0; i < 5 * step2 + 2; i++) {
80013720:	24120c82 	li	s2,3202
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:780
		struct vma_struct *vma = find_vma(mm, i);
80013724:	02202021 	move	a0,s1
80013728:	0c004c91 	jal	80013244 <find_vma>
8001372c:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:781
		assert(vma != NULL);
80013730:	10400060 	beqz	v0,800138b4 <vmm_init+0x288>
80013734:	001018c2 	srl	v1,s0,0x3
__divu5():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:44
}

static inline unsigned __divu5(unsigned int n)
{
	unsigned int q, r;
	q = (n >> 3) + (n >> 4);
80013738:	00102102 	srl	a0,s0,0x4
8001373c:	00832021 	addu	a0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:45
	q = q + (q >> 4);
80013740:	00041902 	srl	v1,a0,0x4
80013744:	00642021 	addu	a0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:46
	q = q + (q >> 8);
80013748:	00041a02 	srl	v1,a0,0x8
8001374c:	00642021 	addu	a0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:48
	q = q + (q >> 16);
	r = n - q * 5;
80013750:	00041880 	sll	v1,a0,0x2
80013754:	00641821 	addu	v1,v1,a0
80013758:	02031823 	subu	v1,s0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:49
	return q + (13 * r >> 6);
8001375c:	00032880 	sll	a1,v1,0x2
80013760:	00033100 	sll	a2,v1,0x4
80013764:	00c52823 	subu	a1,a2,a1
80013768:	00a31821 	addu	v1,a1,v1
8001376c:	00031982 	srl	v1,v1,0x6
80013770:	00642021 	addu	a0,v1,a0
check_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:783
		int j = __divu5(i);//i / 5;
		if (i >= 5 * j + 2) {
80013774:	00041880 	sll	v1,a0,0x2
80013778:	00641821 	addu	v1,v1,a0
8001377c:	24650001 	addiu	a1,v1,1
80013780:	00b0282a 	slt	a1,a1,s0
80013784:	50a00005 	beqzl	a1,8001379c <vmm_init+0x170>
80013788:	8c440004 	lw	a0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:784
			j++;
8001378c:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:783

	for (i = 0; i < 5 * step2 + 2; i++) {
		struct vma_struct *vma = find_vma(mm, i);
		assert(vma != NULL);
		int j = __divu5(i);//i / 5;
		if (i >= 5 * j + 2) {
80013790:	00041880 	sll	v1,a0,0x2
80013794:	00641821 	addu	v1,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:786
			j++;
		}
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
80013798:	8c440004 	lw	a0,4(v0)
8001379c:	1483002e 	bne	a0,v1,80013858 <vmm_init+0x22c>
800137a0:	24630002 	addiu	v1,v1,2
800137a4:	8c420008 	lw	v0,8(v0)
800137a8:	1443002b 	bne	v0,v1,80013858 <vmm_init+0x22c>
800137ac:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:779
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
		le = list_next(le);
	}

	for (i = 0; i < 5 * step2 + 2; i++) {
800137b0:	1612ffdd 	bne	s0,s2,80013728 <vmm_init+0xfc>
800137b4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:789
			j++;
		}
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
	}

	mm_destroy(mm);
800137b8:	0c004d69 	jal	800135a4 <mm_destroy>
800137bc:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:791

	__CHECK_MEMORY_LEAK();
800137c0:	0c007922 	jal	8001e488 <nr_used_pages>
800137c4:	00000000 	nop
800137c8:	16c20051 	bne	s6,v0,80013910 <vmm_init+0x2e4>
800137cc:	3c048002 	lui	a0,0x8002
800137d0:	0c00545a 	jal	80015168 <slab_allocated>
800137d4:	00000000 	nop
800137d8:	56a20046 	bnel	s5,v0,800138f4 <vmm_init+0x2c8>
800137dc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:793

	kprintf("check_vma_struct() succeeded!\n");
800137e0:	3c048002 	lui	a0,0x8002
800137e4:	0c007aa6 	jal	8001ea98 <kprintf>
800137e8:	248432ec 	addiu	a0,a0,13036
check_vmm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:742
	size_t slab_allocated_store = slab_allocated();

	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();
800137ec:	0c007922 	jal	8001e488 <nr_used_pages>
800137f0:	00000000 	nop
800137f4:	16820051 	bne	s4,v0,8001393c <vmm_init+0x310>
800137f8:	3c048002 	lui	a0,0x8002
800137fc:	0c00545a 	jal	80015168 <slab_allocated>
80013800:	00000000 	nop
80013804:	16620049 	bne	s3,v0,8001392c <vmm_init+0x300>
80013808:	8fbf002c 	lw	ra,44(sp)
vmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:375
// vmm_init - initialize virtual memory management
//          - now just call check_vmm to check correctness of vmm
void vmm_init(void)
{
	check_vmm();
}
8001380c:	8fb60028 	lw	s6,40(sp)
80013810:	8fb50024 	lw	s5,36(sp)
80013814:	8fb40020 	lw	s4,32(sp)
80013818:	8fb3001c 	lw	s3,28(sp)
8001381c:	8fb20018 	lw	s2,24(sp)
80013820:	8fb10014 	lw	s1,20(sp)
80013824:	8fb00010 	lw	s0,16(sp)
check_vmm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:744
	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();

	kprintf("check_vmm() succeeded.\n");
80013828:	3c048002 	lui	a0,0x8002
8001382c:	2484330c 	addiu	a0,a0,13068
80013830:	08007aa6 	j	8001ea98 <kprintf>
80013834:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:775
	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
		assert(le != &(mm->mmap_list));
		struct vma_struct *mmap = le2vma(le, list_link);
		assert(mmap->vm_start == i * 5 && mmap->vm_end == i * 5 + 2);
80013838:	3c048002 	lui	a0,0x8002
8001383c:	3c068002 	lui	a2,0x8002
80013840:	3c078002 	lui	a3,0x8002
80013844:	2484315c 	addiu	a0,a0,12636
80013848:	24050307 	li	a1,775
8001384c:	24c60e48 	addiu	a2,a2,3656
80013850:	0c006b13 	jal	8001ac4c <__panic>
80013854:	24e73280 	addiu	a3,a3,12928
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:786
		assert(vma != NULL);
		int j = __divu5(i);//i / 5;
		if (i >= 5 * j + 2) {
			j++;
		}
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
80013858:	3c048002 	lui	a0,0x8002
8001385c:	3c068002 	lui	a2,0x8002
80013860:	3c078002 	lui	a3,0x8002
80013864:	2484315c 	addiu	a0,a0,12636
80013868:	24050312 	li	a1,786
8001386c:	24c60e48 	addiu	a2,a2,3656
80013870:	0c006b13 	jal	8001ac4c <__panic>
80013874:	24e732b8 	addiu	a3,a3,12984
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:773
	}

	list_entry_t *le = list_next(&(mm->mmap_list));

	for (i = 0; i <= step2; i++) {
		assert(le != &(mm->mmap_list));
80013878:	3c068002 	lui	a2,0x8002
8001387c:	3c078002 	lui	a3,0x8002
80013880:	2484315c 	addiu	a0,a0,12636
80013884:	24050305 	li	a1,773
80013888:	24c60e48 	addiu	a2,a2,3656
8001388c:	0c006b13 	jal	8001ac4c <__panic>
80013890:	24e73268 	addiu	a3,a3,12904
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:766
		insert_vma_struct(mm, vma);
	}

	for (i = step1 + 1; i <= step2; i++) {
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
80013894:	3c048002 	lui	a0,0x8002
80013898:	2484315c 	addiu	a0,a0,12636
8001389c:	240502fe 	li	a1,766
800138a0:	3c068002 	lui	a2,0x8002
800138a4:	3c078002 	lui	a3,0x8002
800138a8:	24c60e48 	addiu	a2,a2,3656
800138ac:	0c006b13 	jal	8001ac4c <__panic>
800138b0:	24e7325c 	addiu	a3,a3,12892
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:781
		le = list_next(le);
	}

	for (i = 0; i < 5 * step2 + 2; i++) {
		struct vma_struct *vma = find_vma(mm, i);
		assert(vma != NULL);
800138b4:	3c048002 	lui	a0,0x8002
800138b8:	2484315c 	addiu	a0,a0,12636
800138bc:	08004e28 	j	800138a0 <vmm_init+0x274>
800138c0:	2405030d 	li	a1,781
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:760
	int step1 = RB_MIN_MAP_COUNT * 2, step2 = step1 * 10;

	int i;
	for (i = step1; i >= 0; i--) {
		struct vma_struct *vma = vma_create(i * 5, i * 5 + 2, 0);
		assert(vma != NULL);
800138c4:	3c048002 	lui	a0,0x8002
800138c8:	2484315c 	addiu	a0,a0,12636
800138cc:	08004e28 	j	800138a0 <vmm_init+0x274>
800138d0:	240502f8 	li	a1,760
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:753
{
	size_t nr_used_pages_store = nr_used_pages();
	size_t slab_allocated_store = slab_allocated();

	struct mm_struct *mm = mm_create();
	assert(mm != NULL);
800138d4:	3c048002 	lui	a0,0x8002
800138d8:	3c068002 	lui	a2,0x8002
800138dc:	3c078002 	lui	a3,0x8002
800138e0:	2484315c 	addiu	a0,a0,12636
800138e4:	240502f1 	li	a1,753
800138e8:	24c60e48 	addiu	a2,a2,3656
800138ec:	0c006b13 	jal	8001ac4c <__panic>
800138f0:	24e73078 	addiu	a3,a3,12408
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:791
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
	}

	mm_destroy(mm);

	__CHECK_MEMORY_LEAK();
800138f4:	2484315c 	addiu	a0,a0,12636
800138f8:	24050317 	li	a1,791
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:742
	size_t slab_allocated_store = slab_allocated();

	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();
800138fc:	3c068002 	lui	a2,0x8002
80013900:	3c078002 	lui	a3,0x8002
80013904:	24c60e48 	addiu	a2,a2,3656
80013908:	0c006b13 	jal	8001ac4c <__panic>
8001390c:	24e72e1c 	addiu	a3,a3,11804
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:791
		assert(vma->vm_start == j * 5 && vma->vm_end == j * 5 + 2);
	}

	mm_destroy(mm);

	__CHECK_MEMORY_LEAK();
80013910:	2484315c 	addiu	a0,a0,12636
80013914:	24050317 	li	a1,791
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:742
	size_t slab_allocated_store = slab_allocated();

	check_vma_struct();
	check_pgfault();

	__CHECK_MEMORY_LEAK();
80013918:	3c068002 	lui	a2,0x8002
8001391c:	3c078002 	lui	a3,0x8002
80013920:	24c60e48 	addiu	a2,a2,3656
80013924:	0c006b13 	jal	8001ac4c <__panic>
80013928:	24e72df4 	addiu	a3,a3,11764
8001392c:	3c048002 	lui	a0,0x8002
80013930:	2484315c 	addiu	a0,a0,12636
80013934:	08004e3f 	j	800138fc <vmm_init+0x2d0>
80013938:	240502e6 	li	a1,742
8001393c:	2484315c 	addiu	a0,a0,12636
80013940:	08004e46 	j	80013918 <vmm_init+0x2ec>
80013944:	240502e6 	li	a1,742

80013948 <mm_map>:
mm_map():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:380
}

int
mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,
       struct vma_struct **vma_store)
{
80013948:	27bdffd0 	addiu	sp,sp,-48
8001394c:	afb10020 	sw	s1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:382
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80013950:	24b10fff 	addiu	s1,a1,4095
80013954:	02268821 	addu	s1,s1,a2
80013958:	32220fff 	andi	v0,s1,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:380
}

int
mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,
       struct vma_struct **vma_store)
{
8001395c:	afb20024 	sw	s2,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:381
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80013960:	2412f000 	li	s2,-4096
80013964:	00b29024 	and	s2,a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:382
	    ROUNDUP(addr + len, PGSIZE);
80013968:	02228823 	subu	s1,s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:383
	if (!USER_ACCESS(start, end)) {
8001396c:	0251102b 	sltu	v0,s2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:380
}

int
mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,
       struct vma_struct **vma_store)
{
80013970:	afb30028 	sw	s3,40(sp)
80013974:	afb0001c 	sw	s0,28(sp)
80013978:	afbf002c 	sw	ra,44(sp)
8001397c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:383
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
80013980:	10400025 	beqz	v0,80013a18 <mm_map+0xd0>
80013984:	8fb30040 	lw	s3,64(sp)
80013988:	3c028000 	lui	v0,0x8000
8001398c:	24420001 	addiu	v0,v0,1
80013990:	0222102b 	sltu	v0,s1,v0
80013994:	10400019 	beqz	v0,800139fc <mm_map+0xb4>
80013998:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:387
		return -E_INVAL;
	}

	assert(mm != NULL);
8001399c:	10800020 	beqz	a0,80013a20 <mm_map+0xd8>
800139a0:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:392

	int ret = -E_INVAL;

	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) != NULL && end > vma->vm_start) {
800139a4:	0c004c91 	jal	80013244 <find_vma>
800139a8:	afa70010 	sw	a3,16(sp)
800139ac:	10400005 	beqz	v0,800139c4 <mm_map+0x7c>
800139b0:	8fa70010 	lw	a3,16(sp)
800139b4:	8c430004 	lw	v1,4(v0)
800139b8:	0071182b 	sltu	v1,v1,s1
800139bc:	1460000f 	bnez	v1,800139fc <mm_map+0xb4>
800139c0:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:397
		goto out;
	}
	ret = -E_NO_MEM;
	vm_flags &= ~VM_SHARE;
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
800139c4:	2406ffef 	li	a2,-17
800139c8:	02202821 	move	a1,s1
800139cc:	02402021 	move	a0,s2
800139d0:	0c004c7d 	jal	800131f4 <vma_create>
800139d4:	00e63024 	and	a2,a3,a2
800139d8:	00408821 	move	s1,v0
800139dc:	12200007 	beqz	s1,800139fc <mm_map+0xb4>
800139e0:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:400
		goto out;
	}
	insert_vma_struct(mm, vma);
800139e4:	02002021 	move	a0,s0
800139e8:	0c004ce6 	jal	80013398 <insert_vma_struct>
800139ec:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:401
	if (vma_store != NULL) {
800139f0:	12600002 	beqz	s3,800139fc <mm_map+0xb4>
800139f4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:402
		*vma_store = vma;
800139f8:	ae710000 	sw	s1,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:408
	}
	ret = 0;

out:
	return ret;
}
800139fc:	8fbf002c 	lw	ra,44(sp)
80013a00:	8fb30028 	lw	s3,40(sp)
80013a04:	8fb20024 	lw	s2,36(sp)
80013a08:	8fb10020 	lw	s1,32(sp)
80013a0c:	8fb0001c 	lw	s0,28(sp)
80013a10:	03e00008 	jr	ra
80013a14:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:384
       struct vma_struct **vma_store)
{
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
		return -E_INVAL;
80013a18:	08004e7f 	j	800139fc <mm_map+0xb4>
80013a1c:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:387
	}

	assert(mm != NULL);
80013a20:	3c048002 	lui	a0,0x8002
80013a24:	3c068002 	lui	a2,0x8002
80013a28:	3c078002 	lui	a3,0x8002
80013a2c:	2484315c 	addiu	a0,a0,12636
80013a30:	24050183 	li	a1,387
80013a34:	24c60e48 	addiu	a2,a2,3656
80013a38:	0c006b13 	jal	8001ac4c <__panic>
80013a3c:	24e73078 	addiu	a3,a3,12408

80013a40 <mm_map_shmem>:
mm_map_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:413
}

int
mm_map_shmem(struct mm_struct *mm, uintptr_t addr, uint32_t vm_flags,
	     struct shmem_struct *shmem, struct vma_struct **vma_store)
{
80013a40:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:414
	if ((addr % PGSIZE) != 0 || shmem == NULL) {
80013a44:	30a30fff 	andi	v1,a1,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:413
}

int
mm_map_shmem(struct mm_struct *mm, uintptr_t addr, uint32_t vm_flags,
	     struct shmem_struct *shmem, struct vma_struct **vma_store)
{
80013a48:	afb20030 	sw	s2,48(sp)
80013a4c:	afb1002c 	sw	s1,44(sp)
80013a50:	afb00028 	sw	s0,40(sp)
80013a54:	afbf0034 	sw	ra,52(sp)
80013a58:	00c09021 	move	s2,a2
80013a5c:	00e08021 	move	s0,a3
80013a60:	8fb10048 	lw	s1,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:414
	if ((addr % PGSIZE) != 0 || shmem == NULL) {
80013a64:	14600019 	bnez	v1,80013acc <mm_map_shmem+0x8c>
80013a68:	2402ffea 	li	v0,-22
80013a6c:	10e00018 	beqz	a3,80013ad0 <mm_map_shmem+0x90>
80013a70:	8fbf0034 	lw	ra,52(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80013a74:	40026000 	mfc0	v0,c0_status
80013a78:	30420001 	andi	v0,v0,0x1
80013a7c:	54400019 	bnezl	v0,80013ae4 <mm_map_shmem+0xa4>
80013a80:	afa40020 	sw	a0,32(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013a84:	8ce20010 	lw	v0,16(a3)
mm_map_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:420
		return -E_INVAL;
	}
	int ret;
	struct vma_struct *vma;
	shmem_ref_inc(shmem);
	if ((ret = mm_map(mm, addr, shmem->len, vm_flags, &vma)) != 0) {
80013a88:	8e06000c 	lw	a2,12(s0)
shmem_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80013a8c:	24420001 	addiu	v0,v0,1
80013a90:	ace20010 	sw	v0,16(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013a94:	8e020010 	lw	v0,16(s0)
mm_map_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:420
80013a98:	02403821 	move	a3,s2
80013a9c:	27a20018 	addiu	v0,sp,24
80013aa0:	0c004e52 	jal	80013948 <mm_map>
80013aa4:	afa20010 	sw	v0,16(sp)
80013aa8:	1440001f 	bnez	v0,80013b28 <mm_map_shmem+0xe8>
80013aac:	8fa30018 	lw	v1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:426
		shmem_ref_dec(shmem);
		return ret;
	}
	vma->shmem = shmem;
	vma->shmem_off = 0;
	vma->vm_flags |= VM_SHARE;
80013ab0:	8c64000c 	lw	a0,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:424
	shmem_ref_inc(shmem);
	if ((ret = mm_map(mm, addr, shmem->len, vm_flags, &vma)) != 0) {
		shmem_ref_dec(shmem);
		return ret;
	}
	vma->shmem = shmem;
80013ab4:	ac700028 	sw	s0,40(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:425
	vma->shmem_off = 0;
80013ab8:	ac60002c 	sw	zero,44(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:426
	vma->vm_flags |= VM_SHARE;
80013abc:	34840010 	ori	a0,a0,0x10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:427
	if (vma_store != NULL) {
80013ac0:	12200002 	beqz	s1,80013acc <mm_map_shmem+0x8c>
80013ac4:	ac64000c 	sw	a0,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:428
		*vma_store = vma;
80013ac8:	ae230000 	sw	v1,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:431
	}
	return 0;
}
80013acc:	8fbf0034 	lw	ra,52(sp)
80013ad0:	8fb20030 	lw	s2,48(sp)
80013ad4:	8fb1002c 	lw	s1,44(sp)
80013ad8:	8fb00028 	lw	s0,40(sp)
80013adc:	03e00008 	jr	ra
80013ae0:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013ae4:	0c006d0c 	jal	8001b430 <intr_disable>
80013ae8:	afa50024 	sw	a1,36(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013aec:	8e020010 	lw	v0,16(s0)
80013af0:	24420001 	addiu	v0,v0,1
80013af4:	ae020010 	sw	v0,16(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013af8:	0c006d08 	jal	8001b420 <intr_enable>
80013afc:	00000000 	nop
mm_map_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:420
		return -E_INVAL;
	}
	int ret;
	struct vma_struct *vma;
	shmem_ref_inc(shmem);
	if ((ret = mm_map(mm, addr, shmem->len, vm_flags, &vma)) != 0) {
80013b00:	8e06000c 	lw	a2,12(s0)
80013b04:	8fa40020 	lw	a0,32(sp)
80013b08:	8fa50024 	lw	a1,36(sp)
shmem_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013b0c:	8e020010 	lw	v0,16(s0)
mm_map_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:420
80013b10:	02403821 	move	a3,s2
80013b14:	27a20018 	addiu	v0,sp,24
80013b18:	0c004e52 	jal	80013948 <mm_map>
80013b1c:	afa20010 	sw	v0,16(sp)
80013b20:	1040ffe3 	beqz	v0,80013ab0 <mm_map_shmem+0x70>
80013b24:	8fa30018 	lw	v1,24(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80013b28:	40036000 	mfc0	v1,c0_status
80013b2c:	30630001 	andi	v1,v1,0x1
80013b30:	1460000b 	bnez	v1,80013b60 <mm_map_shmem+0x120>
80013b34:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013b38:	8e030010 	lw	v1,16(s0)
80013b3c:	2463ffff 	addiu	v1,v1,-1
80013b40:	ae030010 	sw	v1,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013b44:	8e030010 	lw	v1,16(s0)
mm_map_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:431
	vma->vm_flags |= VM_SHARE;
	if (vma_store != NULL) {
		*vma_store = vma;
	}
	return 0;
}
80013b48:	8fbf0034 	lw	ra,52(sp)
80013b4c:	8fb20030 	lw	s2,48(sp)
80013b50:	8fb1002c 	lw	s1,44(sp)
80013b54:	8fb00028 	lw	s0,40(sp)
80013b58:	03e00008 	jr	ra
80013b5c:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013b60:	0c006d0c 	jal	8001b430 <intr_disable>
80013b64:	afa20020 	sw	v0,32(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013b68:	8e030010 	lw	v1,16(s0)
80013b6c:	2463ffff 	addiu	v1,v1,-1
80013b70:	ae030010 	sw	v1,16(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013b74:	0c006d08 	jal	8001b420 <intr_enable>
80013b78:	00000000 	nop
80013b7c:	8fa20020 	lw	v0,32(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013b80:	8e030010 	lw	v1,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:431
80013b84:	08004ed3 	j	80013b4c <mm_map_shmem+0x10c>
80013b88:	8fbf0034 	lw	ra,52(sp)

80013b8c <mm_unmap>:
mm_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:450

	vma->vm_start = start, vma->vm_end = end;
}

int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80013b8c:	27bdffc0 	addiu	sp,sp,-64
80013b90:	afb20024 	sw	s2,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:452
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80013b94:	24b20fff 	addiu	s2,a1,4095
80013b98:	02469021 	addu	s2,s2,a2
80013b9c:	32420fff 	andi	v0,s2,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:450

	vma->vm_start = start, vma->vm_end = end;
}

int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80013ba0:	afb30028 	sw	s3,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:451
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80013ba4:	2413f000 	li	s3,-4096
80013ba8:	00b39824 	and	s3,a1,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:452
	    ROUNDUP(addr + len, PGSIZE);
80013bac:	02429023 	subu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:453
	if (!USER_ACCESS(start, end)) {
80013bb0:	0272102b 	sltu	v0,s3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:450

	vma->vm_start = start, vma->vm_end = end;
}

int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80013bb4:	afb10020 	sw	s1,32(sp)
80013bb8:	afbf003c 	sw	ra,60(sp)
80013bbc:	afb70038 	sw	s7,56(sp)
80013bc0:	afb60034 	sw	s6,52(sp)
80013bc4:	afb50030 	sw	s5,48(sp)
80013bc8:	afb4002c 	sw	s4,44(sp)
80013bcc:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:453
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
80013bd0:	10400090 	beqz	v0,80013e14 <mm_unmap+0x288>
80013bd4:	00808821 	move	s1,a0
80013bd8:	3c028000 	lui	v0,0x8000
80013bdc:	24420001 	addiu	v0,v0,1
80013be0:	0242102b 	sltu	v0,s2,v0
80013be4:	10400060 	beqz	v0,80013d68 <mm_unmap+0x1dc>
80013be8:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:457
		return -E_INVAL;
	}

	assert(mm != NULL);
80013bec:	50800093 	beqzl	a0,80013e3c <mm_unmap+0x2b0>
80013bf0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:460

	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) == NULL || end <= vma->vm_start) {
80013bf4:	0c004c91 	jal	80013244 <find_vma>
80013bf8:	02602821 	move	a1,s3
80013bfc:	10400059 	beqz	v0,80013d64 <mm_unmap+0x1d8>
80013c00:	00408021 	move	s0,v0
80013c04:	8c440004 	lw	a0,4(v0)
80013c08:	0092102b 	sltu	v0,a0,s2
80013c0c:	10400055 	beqz	v0,80013d64 <mm_unmap+0x1d8>
80013c10:	0093102b 	sltu	v0,a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:464
		return 0;
	}

	if (vma->vm_start < start && end < vma->vm_end) {
80013c14:	5440005f 	bnezl	v0,80013d94 <mm_unmap+0x208>
80013c18:	8e020008 	lw	v0,8(s0)
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:343
}

// remove_vma_struct - remove vma from mm's rb tree link & list link
static int remove_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(mm == vma->vm_mm);
80013c1c:	8e020000 	lw	v0,0(s0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80013c20:	27b60010 	addiu	s6,sp,16
80013c24:	afb60014 	sw	s6,20(sp)
80013c28:	afb60010 	sw	s6,16(sp)
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:343
80013c2c:	12220014 	beq	s1,v0,80013c80 <mm_unmap+0xf4>
80013c30:	8e140024 	lw	s4,36(s0)
80013c34:	08004f88 	j	80013e20 <mm_unmap+0x294>
80013c38:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:351
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013c3c:	8e240014 	lw	a0,20(s1)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80013c40:	8fa20014 	lw	v0,20(sp)
mm_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:484
	list_entry_t free_list, *le;
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
80013c44:	26030020 	addiu	v1,s0,32
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:351
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013c48:	2484ffff 	addiu	a0,a0,-1
80013c4c:	ae240014 	sw	a0,20(s1)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80013c50:	afa30014 	sw	v1,20(sp)
80013c54:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80013c58:	ae020024 	sw	v0,36(s0)
mm_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:485
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
		if (le == &(mm->mmap_list)) {
80013c5c:	1234001e 	beq	s1,s4,80013cd8 <mm_unmap+0x14c>
80013c60:	ae160020 	sw	s6,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:481
		return 0;
	}

	list_entry_t free_list, *le;
	list_init(&free_list);
	while (vma->vm_start < end) {
80013c64:	8e82ffe4 	lw	v0,-28(s4)
80013c68:	0052102b 	sltu	v0,v0,s2
80013c6c:	1040001a 	beqz	v0,80013cd8 <mm_unmap+0x14c>
80013c70:	2690ffe0 	addiu	s0,s4,-32
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:343
}

// remove_vma_struct - remove vma from mm's rb tree link & list link
static int remove_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(mm == vma->vm_mm);
80013c74:	8e82ffe0 	lw	v0,-32(s4)
80013c78:	16220068 	bne	s1,v0,80013e1c <mm_unmap+0x290>
80013c7c:	8e940004 	lw	s4,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:344
	if (mm->mmap_tree != NULL) {
80013c80:	8e240008 	lw	a0,8(s1)
80013c84:	50800004 	beqzl	a0,80013c98 <mm_unmap+0x10c>
80013c88:	8e030020 	lw	v1,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:345
		rb_delete(mm->mmap_tree, &(vma->rb_link));
80013c8c:	0c00562e 	jal	800158b8 <rb_delete>
80013c90:	26050010 	addiu	a1,s0,16
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80013c94:	8e030020 	lw	v1,32(s0)
80013c98:	8e020024 	lw	v0,36(s0)
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:348
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
80013c9c:	8e24000c 	lw	a0,12(s1)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80013ca0:	ac620004 	sw	v0,4(v1)
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:348
80013ca4:	1604ffe5 	bne	s0,a0,80013c3c <mm_unmap+0xb0>
80013ca8:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:351
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013cac:	8e240014 	lw	a0,20(s1)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80013cb0:	8fa20014 	lw	v0,20(sp)
mm_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:484
	list_entry_t free_list, *le;
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
80013cb4:	26030020 	addiu	v1,s0,32
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:351
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
	}
	mm->map_count--;
80013cb8:	2484ffff 	addiu	a0,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:349
	if (mm->mmap_tree != NULL) {
		rb_delete(mm->mmap_tree, &(vma->rb_link));
	}
	list_del(&(vma->list_link));
	if (vma == mm->mmap_cache) {
		mm->mmap_cache = NULL;
80013cbc:	ae20000c 	sw	zero,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:351
	}
	mm->map_count--;
80013cc0:	ae240014 	sw	a0,20(s1)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80013cc4:	afa30014 	sw	v1,20(sp)
80013cc8:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80013ccc:	ae020024 	sw	v0,36(s0)
mm_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:485
	list_init(&free_list);
	while (vma->vm_start < end) {
		le = list_next(&(vma->list_link));
		remove_vma_struct(mm, vma);
		list_add(&free_list, &(vma->list_link));
		if (le == &(mm->mmap_list)) {
80013cd0:	1634ffe4 	bne	s1,s4,80013c64 <mm_unmap+0xd8>
80013cd4:	ae160020 	sw	s6,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:492
		}
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
80013cd8:	16c30011 	bne	s6,v1,80013d20 <mm_unmap+0x194>
80013cdc:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:516
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
	}
	return 0;
}
80013ce0:	08004f5b 	j	80013d6c <mm_unmap+0x1e0>
80013ce4:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:504
			insert_vma_struct(mm, vma);
		} else {
			un_start = vma->vm_start, un_end = vma->vm_end;
			if (end < un_end) {
				un_end = end;
				vma_resize(vma, un_end, vma->vm_end);
80013ce8:	02e02021 	move	a0,s7
80013cec:	0c004bd8 	jal	80012f60 <vma_resize>
80013cf0:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:505
				insert_vma_struct(mm, vma);
80013cf4:	02202021 	move	a0,s1
80013cf8:	0c004ce6 	jal	80013398 <insert_vma_struct>
80013cfc:	02e02821 	move	a1,s7
80013d00:	0240a021 	move	s4,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:513
				vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
				vma_destroy(vma);
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
80013d04:	8e240010 	lw	a0,16(s1)
80013d08:	02002821 	move	a1,s0
80013d0c:	0c005e8c 	jal	80017a30 <unmap_range>
80013d10:	02803021 	move	a2,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:492
		}
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
80013d14:	12d50014 	beq	s6,s5,80013d68 <mm_unmap+0x1dc>
80013d18:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:494
		vma = le2vma(le, list_link);
		le = list_next(le);
80013d1c:	02a01821 	move	v1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:496
		uintptr_t un_start, un_end;
		if (vma->vm_start < start) {
80013d20:	8c70ffe4 	lw	s0,-28(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:493
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
		vma = le2vma(le, list_link);
80013d24:	2477ffe0 	addiu	s7,v1,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:496
		le = list_next(le);
		uintptr_t un_start, un_end;
		if (vma->vm_start < start) {
80013d28:	0213102b 	sltu	v0,s0,s3
80013d2c:	1440002f 	bnez	v0,80013dec <mm_unmap+0x260>
80013d30:	8c750004 	lw	s5,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:501
			un_start = start, un_end = vma->vm_end;
			vma_resize(vma, vma->vm_start, un_start);
			insert_vma_struct(mm, vma);
		} else {
			un_start = vma->vm_start, un_end = vma->vm_end;
80013d34:	8c74ffe8 	lw	s4,-24(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:502
			if (end < un_end) {
80013d38:	0254102b 	sltu	v0,s2,s4
80013d3c:	1440ffea 	bnez	v0,80013ce8 <mm_unmap+0x15c>
80013d40:	02803021 	move	a2,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:510
				insert_vma_struct(mm, vma);
			} else {
#ifdef UCONFIG_BIONIC_LIBC
				vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
				vma_destroy(vma);
80013d44:	0c004c04 	jal	80013010 <vma_destroy>
80013d48:	02e02021 	move	a0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:513
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
80013d4c:	8e240010 	lw	a0,16(s1)
80013d50:	02002821 	move	a1,s0
80013d54:	0c005e8c 	jal	80017a30 <unmap_range>
80013d58:	02803021 	move	a2,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:492
		}
		vma = le2vma(le, list_link);
	}

	le = list_next(&free_list);
	while (le != &free_list) {
80013d5c:	16d5fff0 	bne	s6,s5,80013d20 <mm_unmap+0x194>
80013d60:	02a01821 	move	v1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:461

	assert(mm != NULL);

	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) == NULL || end <= vma->vm_start) {
		return 0;
80013d64:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:516
			}
		}
		unmap_range(mm->pgdir, un_start, un_end);
	}
	return 0;
}
80013d68:	8fbf003c 	lw	ra,60(sp)
80013d6c:	8fb70038 	lw	s7,56(sp)
80013d70:	8fb60034 	lw	s6,52(sp)
80013d74:	8fb50030 	lw	s5,48(sp)
80013d78:	8fb4002c 	lw	s4,44(sp)
80013d7c:	8fb30028 	lw	s3,40(sp)
80013d80:	8fb20024 	lw	s2,36(sp)
80013d84:	8fb10020 	lw	s1,32(sp)
80013d88:	8fb0001c 	lw	s0,28(sp)
80013d8c:	03e00008 	jr	ra
80013d90:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:464
	struct vma_struct *vma;
	if ((vma = find_vma(mm, start)) == NULL || end <= vma->vm_start) {
		return 0;
	}

	if (vma->vm_start < start && end < vma->vm_end) {
80013d94:	0242102b 	sltu	v0,s2,v0
80013d98:	5040ffa1 	beqzl	v0,80013c20 <mm_unmap+0x94>
80013d9c:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:466
		struct vma_struct *nvma;
		if ((nvma =
80013da0:	8e06000c 	lw	a2,12(s0)
80013da4:	0c004c7d 	jal	800131f4 <vma_create>
80013da8:	02602821 	move	a1,s3
80013dac:	0040a021 	move	s4,v0
80013db0:	1280ffed 	beqz	s4,80013d68 <mm_unmap+0x1dc>
80013db4:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:473
			return -E_NO_MEM;
		}
#ifdef UCONFIG_BIONIC_LIBC
		vma_copymapfile(nvma, vma);
#endif //UCONFIG_BIONIC_LIBC
		vma_resize(vma, end, vma->vm_end);
80013db8:	8e060008 	lw	a2,8(s0)
80013dbc:	02002021 	move	a0,s0
80013dc0:	0c004bd8 	jal	80012f60 <vma_resize>
80013dc4:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:474
		insert_vma_struct(mm, nvma);
80013dc8:	02202021 	move	a0,s1
80013dcc:	0c004ce6 	jal	80013398 <insert_vma_struct>
80013dd0:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:475
		unmap_range(mm->pgdir, start, end);
80013dd4:	8e240010 	lw	a0,16(s1)
80013dd8:	02602821 	move	a1,s3
80013ddc:	0c005e8c 	jal	80017a30 <unmap_range>
80013de0:	02403021 	move	a2,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:476
		return 0;
80013de4:	08004f5a 	j	80013d68 <mm_unmap+0x1dc>
80013de8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:498
		vma = le2vma(le, list_link);
		le = list_next(le);
		uintptr_t un_start, un_end;
		if (vma->vm_start < start) {
			un_start = start, un_end = vma->vm_end;
			vma_resize(vma, vma->vm_start, un_start);
80013dec:	02002821 	move	a1,s0
80013df0:	02603021 	move	a2,s3
80013df4:	02e02021 	move	a0,s7
80013df8:	0c004bd8 	jal	80012f60 <vma_resize>
80013dfc:	8c74ffe8 	lw	s4,-24(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:499
			insert_vma_struct(mm, vma);
80013e00:	02202021 	move	a0,s1
80013e04:	0c004ce6 	jal	80013398 <insert_vma_struct>
80013e08:	02e02821 	move	a1,s7
80013e0c:	08004f41 	j	80013d04 <mm_unmap+0x178>
80013e10:	02608021 	move	s0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:454
int mm_unmap(struct mm_struct *mm, uintptr_t addr, size_t len)
{
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
		return -E_INVAL;
80013e14:	08004f5a 	j	80013d68 <mm_unmap+0x1dc>
80013e18:	2402ffea 	li	v0,-22
remove_vma_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:343
}

// remove_vma_struct - remove vma from mm's rb tree link & list link
static int remove_vma_struct(struct mm_struct *mm, struct vma_struct *vma)
{
	assert(mm == vma->vm_mm);
80013e1c:	3c048002 	lui	a0,0x8002
80013e20:	3c068002 	lui	a2,0x8002
80013e24:	3c078002 	lui	a3,0x8002
80013e28:	2484315c 	addiu	a0,a0,12636
80013e2c:	24050157 	li	a1,343
80013e30:	24c60e48 	addiu	a2,a2,3656
80013e34:	0c006b13 	jal	8001ac4c <__panic>
80013e38:	24e73324 	addiu	a3,a3,13092
mm_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:457
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
		return -E_INVAL;
	}

	assert(mm != NULL);
80013e3c:	3c068002 	lui	a2,0x8002
80013e40:	3c078002 	lui	a3,0x8002
80013e44:	2484315c 	addiu	a0,a0,12636
80013e48:	240501c9 	li	a1,457
80013e4c:	24c60e48 	addiu	a2,a2,3656
80013e50:	0c006b13 	jal	8001ac4c <__panic>
80013e54:	24e73078 	addiu	a3,a3,12408

80013e58 <dup_mmap>:
dup_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:587
	return 0;
}
#endif //UCONFIG_BIONIC_LIBC

int dup_mmap(struct mm_struct *to, struct mm_struct *from)
{
80013e58:	27bdffc8 	addiu	sp,sp,-56
80013e5c:	afb2002c 	sw	s2,44(sp)
80013e60:	afb10028 	sw	s1,40(sp)
80013e64:	afbf0034 	sw	ra,52(sp)
80013e68:	afb30030 	sw	s3,48(sp)
80013e6c:	afb00024 	sw	s0,36(sp)
80013e70:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:588
	assert(to != NULL && from != NULL);
80013e74:	10800052 	beqz	a0,80013fc0 <dup_mmap+0x168>
80013e78:	00a08821 	move	s1,a1
80013e7c:	14a0000f 	bnez	a1,80013ebc <dup_mmap+0x64>
80013e80:	00a08021 	move	s0,a1
80013e84:	08004ff1 	j	80013fc4 <dup_mmap+0x16c>
80013e88:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:606
			}
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
80013e8c:	0c004ce6 	jal	80013398 <insert_vma_struct>
80013e90:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:607
		bool share = (vma->vm_flags & VM_SHARE);
80013e94:	8e02ffec 	lw	v0,-20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013e98:	8e06ffe4 	lw	a2,-28(s0)
80013e9c:	8e07ffe8 	lw	a3,-24(s0)
80013ea0:	8e440010 	lw	a0,16(s2)
80013ea4:	8e250010 	lw	a1,16(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:607
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
80013ea8:	30420010 	andi	v0,v0,0x10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013eac:	0c005f64 	jal	80017d90 <copy_range>
80013eb0:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:608
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
		if (copy_range
80013eb4:	14400029 	bnez	v0,80013f5c <dup_mmap+0x104>
80013eb8:	8fbf0034 	lw	ra,52(sp)
list_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
80013ebc:	8e100000 	lw	s0,0(s0)
dup_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:590

int dup_mmap(struct mm_struct *to, struct mm_struct *from)
{
	assert(to != NULL && from != NULL);
	list_entry_t *list = &(from->mmap_list), *le = list;
	while ((le = list_prev(le)) != list) {
80013ec0:	12300038 	beq	s1,s0,80013fa4 <dup_mmap+0x14c>
80013ec4:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:593
		struct vma_struct *vma, *nvma;
		vma = le2vma(le, list_link);
		nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);
80013ec8:	8e04ffe4 	lw	a0,-28(s0)
80013ecc:	8e05ffe8 	lw	a1,-24(s0)
80013ed0:	0c004c7d 	jal	800131f4 <vma_create>
80013ed4:	8e06ffec 	lw	a2,-20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:594
		if (nvma == NULL) {
80013ed8:	10400020 	beqz	v0,80013f5c <dup_mmap+0x104>
80013edc:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:597
			return -E_NO_MEM;
		} else {
			if (vma->vm_flags & VM_SHARE) {
80013ee0:	8e03ffec 	lw	v1,-20(s0)
80013ee4:	30630010 	andi	v1,v1,0x10
80013ee8:	1060ffe8 	beqz	v1,80013e8c <dup_mmap+0x34>
80013eec:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:598
				nvma->shmem = vma->shmem;
80013ef0:	8e040008 	lw	a0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:599
				nvma->shmem_off = vma->shmem_off;
80013ef4:	8e03000c 	lw	v1,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:598
		nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);
		if (nvma == NULL) {
			return -E_NO_MEM;
		} else {
			if (vma->vm_flags & VM_SHARE) {
				nvma->shmem = vma->shmem;
80013ef8:	ac440028 	sw	a0,40(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:599
				nvma->shmem_off = vma->shmem_off;
80013efc:	ac43002c 	sw	v1,44(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:600
				shmem_ref_inc(vma->shmem);
80013f00:	8e130008 	lw	s3,8(s0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80013f04:	40036000 	mfc0	v1,c0_status
80013f08:	30630001 	andi	v1,v1,0x1
80013f0c:	1460001a 	bnez	v1,80013f78 <dup_mmap+0x120>
80013f10:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013f14:	8e630010 	lw	v1,16(s3)
80013f18:	24630001 	addiu	v1,v1,1
80013f1c:	ae630010 	sw	v1,16(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013f20:	8e630010 	lw	v1,16(s3)
dup_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:606
			}
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
80013f24:	00402821 	move	a1,v0
80013f28:	0c004ce6 	jal	80013398 <insert_vma_struct>
80013f2c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:607
		bool share = (vma->vm_flags & VM_SHARE);
80013f30:	8e02ffec 	lw	v0,-20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013f34:	8e06ffe4 	lw	a2,-28(s0)
80013f38:	8e07ffe8 	lw	a3,-24(s0)
80013f3c:	8e440010 	lw	a0,16(s2)
80013f40:	8e250010 	lw	a1,16(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:607
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
80013f44:	30420010 	andi	v0,v0,0x10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:609
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
80013f48:	0c005f64 	jal	80017d90 <copy_range>
80013f4c:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:608
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
		if (copy_range
80013f50:	5040ffdb 	beqzl	v0,80013ec0 <dup_mmap+0x68>
80013f54:	8e100000 	lw	s0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:615
		     share) != 0) {
			return -E_NO_MEM;
		}
	}
	return 0;
}
80013f58:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:611
		insert_vma_struct(to, nvma);
		bool share = (vma->vm_flags & VM_SHARE);
		if (copy_range
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
		     share) != 0) {
			return -E_NO_MEM;
80013f5c:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:615
		}
	}
	return 0;
}
80013f60:	8fb30030 	lw	s3,48(sp)
80013f64:	8fb2002c 	lw	s2,44(sp)
80013f68:	8fb10028 	lw	s1,40(sp)
80013f6c:	8fb00024 	lw	s0,36(sp)
80013f70:	03e00008 	jr	ra
80013f74:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80013f78:	0c006d0c 	jal	8001b430 <intr_disable>
80013f7c:	afa20018 	sw	v0,24(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80013f80:	8e630010 	lw	v1,16(s3)
80013f84:	24630001 	addiu	v1,v1,1
80013f88:	ae630010 	sw	v1,16(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80013f8c:	0c006d08 	jal	8001b420 <intr_enable>
80013f90:	00000000 	nop
80013f94:	8fa20018 	lw	v0,24(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80013f98:	8e630010 	lw	v1,16(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:606
			}
#ifdef UCONFIG_BIONIC_LIBC
			nvma->mfile = vma->mfile;
#endif //UCONFIG_BIONIC_LIBC
		}
		insert_vma_struct(to, nvma);
80013f9c:	08004fca 	j	80013f28 <dup_mmap+0xd0>
80013fa0:	00402821 	move	a1,v0
dup_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:614
		    (to->pgdir, from->pgdir, vma->vm_start, vma->vm_end,
		     share) != 0) {
			return -E_NO_MEM;
		}
	}
	return 0;
80013fa4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:615
}
80013fa8:	8fb30030 	lw	s3,48(sp)
80013fac:	8fb2002c 	lw	s2,44(sp)
80013fb0:	8fb10028 	lw	s1,40(sp)
80013fb4:	8fb00024 	lw	s0,36(sp)
80013fb8:	03e00008 	jr	ra
80013fbc:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:588
}
#endif //UCONFIG_BIONIC_LIBC

int dup_mmap(struct mm_struct *to, struct mm_struct *from)
{
	assert(to != NULL && from != NULL);
80013fc0:	3c048002 	lui	a0,0x8002
80013fc4:	3c068002 	lui	a2,0x8002
80013fc8:	3c078002 	lui	a3,0x8002
80013fcc:	2484315c 	addiu	a0,a0,12636
80013fd0:	2405024c 	li	a1,588
80013fd4:	24c60e48 	addiu	a2,a2,3656
80013fd8:	0c006b13 	jal	8001ac4c <__panic>
80013fdc:	24e728b0 	addiu	a3,a3,10416

80013fe0 <exit_mmap>:
exit_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:618
	}
	return 0;
}

void exit_mmap(struct mm_struct *mm)
{
80013fe0:	27bdffe0 	addiu	sp,sp,-32
80013fe4:	afb10014 	sw	s1,20(sp)
80013fe8:	afbf001c 	sw	ra,28(sp)
80013fec:	afb20018 	sw	s2,24(sp)
80013ff0:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:619
	assert(mm != NULL && mm_count(mm) == 0);
80013ff4:	1080001e 	beqz	a0,80014070 <exit_mmap+0x90>
80013ff8:	00808821 	move	s1,a0
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
80013ffc:	8c82001c 	lw	v0,28(a0)
exit_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:619
80014000:	5440001c 	bnezl	v0,80014074 <exit_mmap+0x94>
80014004:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80014008:	8c900004 	lw	s0,4(a0)
exit_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:622
	pgd_t *pgdir = mm->pgdir;
	list_entry_t *list = &(mm->mmap_list), *le = list;
	while ((le = list_next(le)) != list) {
8001400c:	1090000f 	beq	a0,s0,8001404c <exit_mmap+0x6c>
80014010:	8c920010 	lw	s2,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:624
		struct vma_struct *vma = le2vma(le, list_link);
		unmap_range(pgdir, vma->vm_start, vma->vm_end);
80014014:	8e05ffe4 	lw	a1,-28(s0)
80014018:	8e06ffe8 	lw	a2,-24(s0)
8001401c:	0c005e8c 	jal	80017a30 <unmap_range>
80014020:	02402021 	move	a0,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80014024:	8e100004 	lw	s0,4(s0)
exit_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:622
void exit_mmap(struct mm_struct *mm)
{
	assert(mm != NULL && mm_count(mm) == 0);
	pgd_t *pgdir = mm->pgdir;
	list_entry_t *list = &(mm->mmap_list), *le = list;
	while ((le = list_next(le)) != list) {
80014028:	5630fffb 	bnel	s1,s0,80014018 <exit_mmap+0x38>
8001402c:	8e05ffe4 	lw	a1,-28(s0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
80014030:	8e100004 	lw	s0,4(s0)
exit_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:630

#ifdef UCONFIG_BIONIC_LIBC
		vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
	}
	while ((le = list_next(le)) != list) {
80014034:	12300009 	beq	s1,s0,8001405c <exit_mmap+0x7c>
80014038:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:632
		struct vma_struct *vma = le2vma(le, list_link);
		exit_range(pgdir, vma->vm_start, vma->vm_end);
8001403c:	8e05ffe4 	lw	a1,-28(s0)
80014040:	8e06ffe8 	lw	a2,-24(s0)
80014044:	0c005f0d 	jal	80017c34 <exit_range>
80014048:	02402021 	move	a0,s2
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8001404c:	8e100004 	lw	s0,4(s0)
exit_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:630

#ifdef UCONFIG_BIONIC_LIBC
		vma_unmapfile(vma);
#endif //UCONFIG_BIONIC_LIBC
	}
	while ((le = list_next(le)) != list) {
80014050:	5630fffb 	bnel	s1,s0,80014040 <exit_mmap+0x60>
80014054:	8e05ffe4 	lw	a1,-28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:634
		struct vma_struct *vma = le2vma(le, list_link);
		exit_range(pgdir, vma->vm_start, vma->vm_end);
	}
}
80014058:	8fbf001c 	lw	ra,28(sp)
8001405c:	8fb20018 	lw	s2,24(sp)
80014060:	8fb10014 	lw	s1,20(sp)
80014064:	8fb00010 	lw	s0,16(sp)
80014068:	03e00008 	jr	ra
8001406c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:619
	return 0;
}

void exit_mmap(struct mm_struct *mm)
{
	assert(mm != NULL && mm_count(mm) == 0);
80014070:	3c048002 	lui	a0,0x8002
80014074:	3c068002 	lui	a2,0x8002
80014078:	3c078002 	lui	a3,0x8002
8001407c:	2484315c 	addiu	a0,a0,12636
80014080:	2405026b 	li	a1,619
80014084:	24c60e48 	addiu	a2,a2,3656
80014088:	0c006b13 	jal	8001ac4c <__panic>
8001408c:	24e73338 	addiu	a3,a3,13112

80014090 <get_unmapped_area>:
get_unmapped_area():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:658
}
#endif //UCONFIG_BIONIC_LIBC

uintptr_t get_unmapped_area(struct mm_struct * mm, size_t len)
{
	if (len == 0 || len > USERTOP) {
80014090:	24a3ffff 	addiu	v1,a1,-1
80014094:	04600015 	bltz	v1,800140ec <get_unmapped_area+0x5c>
80014098:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:661
		return 0;
	}
	uintptr_t start = USERTOP - len;
8001409c:	3c028000 	lui	v0,0x8000
800140a0:	00451023 	subu	v0,v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:662
	list_entry_t *list = &(mm->mmap_list), *le = list;
800140a4:	00801821 	move	v1,a0
list_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
800140a8:	8c630000 	lw	v1,0(v1)
get_unmapped_area():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:663
	while ((le = list_prev(le)) != list) {
800140ac:	1083000f 	beq	a0,v1,800140ec <get_unmapped_area+0x5c>
800140b0:	00453821 	addu	a3,v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:665
		struct vma_struct *vma = le2vma(le, list_link);
		if (start >= vma->vm_end) {
800140b4:	8c66ffe8 	lw	a2,-24(v1)
800140b8:	0046302b 	sltu	a2,v0,a2
800140bc:	10c0000d 	beqz	a2,800140f4 <get_unmapped_area+0x64>
800140c0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:668
			return start;
		}
		if (start + len > vma->vm_start) {
800140c4:	8c66ffe4 	lw	a2,-28(v1)
800140c8:	00c7382b 	sltu	a3,a2,a3
800140cc:	10e0fff6 	beqz	a3,800140a8 <get_unmapped_area+0x18>
800140d0:	00a6402b 	sltu	t0,a1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:669
			if (len >= vma->vm_start) {
800140d4:	11000005 	beqz	t0,800140ec <get_unmapped_area+0x5c>
800140d8:	00001021 	move	v0,zero
list_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:144
800140dc:	8c630000 	lw	v1,0(v1)
get_unmapped_area():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:672
				return 0;
			}
			start = vma->vm_start - len;
800140e0:	00c51023 	subu	v0,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:663
	if (len == 0 || len > USERTOP) {
		return 0;
	}
	uintptr_t start = USERTOP - len;
	list_entry_t *list = &(mm->mmap_list), *le = list;
	while ((le = list_prev(le)) != list) {
800140e4:	1483fff3 	bne	a0,v1,800140b4 <get_unmapped_area+0x24>
800140e8:	00453821 	addu	a3,v0,a1
800140ec:	03e00008 	jr	ra
800140f0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:676
			}
			start = vma->vm_start - len;
		}
	}
	return (start >= USERBASE) ? start : 0;
}
800140f4:	03e00008 	jr	ra
800140f8:	00000000 	nop

800140fc <mm_brk>:
mm_brk():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:679

int mm_brk(struct mm_struct *mm, uintptr_t addr, size_t len)
{
800140fc:	27bdffd8 	addiu	sp,sp,-40
80014100:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:681
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
80014104:	24b10fff 	addiu	s1,a1,4095
80014108:	02268821 	addu	s1,s1,a2
8001410c:	32220fff 	andi	v0,s1,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:679
	}
	return (start >= USERBASE) ? start : 0;
}

int mm_brk(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80014110:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:680
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
80014114:	2410f000 	li	s0,-4096
80014118:	00b08024 	and	s0,a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:681
	    ROUNDUP(addr + len, PGSIZE);
8001411c:	02228823 	subu	s1,s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:682
	if (!USER_ACCESS(start, end)) {
80014120:	0211102b 	sltu	v0,s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:679
	}
	return (start >= USERBASE) ? start : 0;
}

int mm_brk(struct mm_struct *mm, uintptr_t addr, size_t len)
{
80014124:	afb30020 	sw	s3,32(sp)
80014128:	afb2001c 	sw	s2,28(sp)
8001412c:	afbf0024 	sw	ra,36(sp)
80014130:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:682
	uintptr_t start = ROUNDDOWN(addr, PGSIZE), end =
	    ROUNDUP(addr + len, PGSIZE);
	if (!USER_ACCESS(start, end)) {
80014134:	1040000a 	beqz	v0,80014160 <mm_brk+0x64>
80014138:	2412ffea 	li	s2,-22
8001413c:	3c028000 	lui	v0,0x8000
80014140:	24420001 	addiu	v0,v0,1
80014144:	0222102b 	sltu	v0,s1,v0
80014148:	10400005 	beqz	v0,80014160 <mm_brk+0x64>
8001414c:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:687
		return -E_INVAL;
	}

	int ret;
	if ((ret = mm_unmap(mm, start, end - start)) != 0) {
80014150:	0c004ee3 	jal	80013b8c <mm_unmap>
80014154:	02303023 	subu	a2,s1,s0
80014158:	10400009 	beqz	v0,80014180 <mm_brk+0x84>
8001415c:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:701
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
		return -E_NO_MEM;
	}
	insert_vma_struct(mm, vma);
	return 0;
}
80014160:	8fbf0024 	lw	ra,36(sp)
80014164:	02401021 	move	v0,s2
80014168:	8fb30020 	lw	s3,32(sp)
8001416c:	8fb2001c 	lw	s2,28(sp)
80014170:	8fb10018 	lw	s1,24(sp)
80014174:	8fb00014 	lw	s0,20(sp)
80014178:	03e00008 	jr	ra
8001417c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:691
	int ret;
	if ((ret = mm_unmap(mm, start, end - start)) != 0) {
		return ret;
	}
	uint32_t vm_flags = VM_READ | VM_WRITE;
	struct vma_struct *vma = find_vma(mm, start - 1);
80014180:	02602021 	move	a0,s3
80014184:	0c004c91 	jal	80013244 <find_vma>
80014188:	2605ffff 	addiu	a1,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:692
	if (vma != NULL && vma->vm_end == start && vma->vm_flags == vm_flags) {
8001418c:	10400005 	beqz	v0,800141a4 <mm_brk+0xa8>
80014190:	02002021 	move	a0,s0
80014194:	8c430008 	lw	v1,8(v0)
80014198:	52030011 	beql	s0,v1,800141e0 <mm_brk+0xe4>
8001419c:	8c44000c 	lw	a0,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:696
		vma->vm_end = end;
		return 0;
	}
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
800141a0:	02002021 	move	a0,s0
800141a4:	02202821 	move	a1,s1
800141a8:	0c004c7d 	jal	800131f4 <vma_create>
800141ac:	24060003 	li	a2,3
800141b0:	10400010 	beqz	v0,800141f4 <mm_brk+0xf8>
800141b4:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:699
		return -E_NO_MEM;
	}
	insert_vma_struct(mm, vma);
800141b8:	0c004ce6 	jal	80013398 <insert_vma_struct>
800141bc:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:701
	return 0;
}
800141c0:	8fbf0024 	lw	ra,36(sp)
800141c4:	02401021 	move	v0,s2
800141c8:	8fb30020 	lw	s3,32(sp)
800141cc:	8fb2001c 	lw	s2,28(sp)
800141d0:	8fb10018 	lw	s1,24(sp)
800141d4:	8fb00014 	lw	s0,20(sp)
800141d8:	03e00008 	jr	ra
800141dc:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:692
	if ((ret = mm_unmap(mm, start, end - start)) != 0) {
		return ret;
	}
	uint32_t vm_flags = VM_READ | VM_WRITE;
	struct vma_struct *vma = find_vma(mm, start - 1);
	if (vma != NULL && vma->vm_end == start && vma->vm_flags == vm_flags) {
800141e0:	24030003 	li	v1,3
800141e4:	1483ffef 	bne	a0,v1,800141a4 <mm_brk+0xa8>
800141e8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:694
		vma->vm_end = end;
		return 0;
800141ec:	08005058 	j	80014160 <mm_brk+0x64>
800141f0:	ac510008 	sw	s1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:697
	}
	if ((vma = vma_create(start, end, vm_flags)) == NULL) {
		return -E_NO_MEM;
800141f4:	08005058 	j	80014160 <mm_brk+0x64>
800141f8:	2412fff4 	li	s2,-12

800141fc <user_mem_check>:
user_mem_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:705
	return 0;
}

bool
user_mem_check(struct mm_struct * mm, uintptr_t addr, size_t len, bool write)
{
800141fc:	27bdffd8 	addiu	sp,sp,-40
80014200:	afb3001c 	sw	s3,28(sp)
80014204:	afb00010 	sw	s0,16(sp)
80014208:	afbf0024 	sw	ra,36(sp)
8001420c:	afb40020 	sw	s4,32(sp)
80014210:	afb20018 	sw	s2,24(sp)
80014214:	afb10014 	sw	s1,20(sp)
80014218:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:706
	if (mm != NULL) {
8001421c:	1080002e 	beqz	a0,800142d8 <user_mem_check+0xdc>
80014220:	00e09821 	move	s3,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:707
		if (!USER_ACCESS(addr, addr + len)) {
80014224:	00c59021 	addu	s2,a2,a1
80014228:	00b2182b 	sltu	v1,a1,s2
8001422c:	10600022 	beqz	v1,800142b8 <user_mem_check+0xbc>
80014230:	00001021 	move	v0,zero
80014234:	3c038000 	lui	v1,0x8000
80014238:	24630001 	addiu	v1,v1,1
8001423c:	0243182b 	sltu	v1,s2,v1
80014240:	1060001d 	beqz	v1,800142b8 <user_mem_check+0xbc>
80014244:	24140002 	li	s4,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:717
		while (start < end) {
			if ((vma = find_vma(mm, start)) == NULL
			    || start < vma->vm_start) {
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
80014248:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:707

bool
user_mem_check(struct mm_struct * mm, uintptr_t addr, size_t len, bool write)
{
	if (mm != NULL) {
		if (!USER_ACCESS(addr, addr + len)) {
8001424c:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:717
		while (start < end) {
			if ((vma = find_vma(mm, start)) == NULL
			    || start < vma->vm_start) {
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
80014250:	080050a8 	j	800142a0 <user_mem_check+0xa4>
80014254:	0047a00a 	movz	s4,v0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:714
		}
		struct vma_struct *vma;
		uintptr_t start = addr, end = addr + len;
		while (start < end) {
			if ((vma = find_vma(mm, start)) == NULL
			    || start < vma->vm_start) {
80014258:	0224182b 	sltu	v1,s1,a0
8001425c:	54600016 	bnezl	v1,800142b8 <user_mem_check+0xbc>
80014260:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:717
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
80014264:	8c43000c 	lw	v1,12(v0)
80014268:	02832824 	and	a1,s4,v1
8001426c:	10a00011 	beqz	a1,800142b4 <user_mem_check+0xb8>
80014270:	30630008 	andi	v1,v1,0x8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:720
				return 0;
			}
			if (write && (vma->vm_flags & VM_STACK)) {
80014274:	52600007 	beqzl	s3,80014294 <user_mem_check+0x98>
80014278:	8c510008 	lw	s1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:721
				if (start < vma->vm_start + PGSIZE) {
8001427c:	24841000 	addiu	a0,a0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:720
				return 0;
			}
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
				return 0;
			}
			if (write && (vma->vm_flags & VM_STACK)) {
80014280:	10600003 	beqz	v1,80014290 <user_mem_check+0x94>
80014284:	0224202b 	sltu	a0,s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:721
				if (start < vma->vm_start + PGSIZE) {
80014288:	5480000b 	bnezl	a0,800142b8 <user_mem_check+0xbc>
8001428c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:725
					return 0;
				}
			}
			start = vma->vm_end;
80014290:	8c510008 	lw	s1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:712
		if (!USER_ACCESS(addr, addr + len)) {
			return 0;
		}
		struct vma_struct *vma;
		uintptr_t start = addr, end = addr + len;
		while (start < end) {
80014294:	0232102b 	sltu	v0,s1,s2
80014298:	10400007 	beqz	v0,800142b8 <user_mem_check+0xbc>
8001429c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:713
			if ((vma = find_vma(mm, start)) == NULL
800142a0:	02202821 	move	a1,s1
800142a4:	0c004c91 	jal	80013244 <find_vma>
800142a8:	02002021 	move	a0,s0
800142ac:	5440ffea 	bnezl	v0,80014258 <user_mem_check+0x5c>
800142b0:	8c440004 	lw	a0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:722
			if (!(vma->vm_flags & ((write) ? VM_WRITE : VM_READ))) {
				return 0;
			}
			if (write && (vma->vm_flags & VM_STACK)) {
				if (start < vma->vm_start + PGSIZE) {
					return 0;
800142b4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:730
			start = vma->vm_end;
		}
		return 1;
	}
	return KERN_ACCESS(addr, addr + len);
}
800142b8:	8fbf0024 	lw	ra,36(sp)
800142bc:	8fb40020 	lw	s4,32(sp)
800142c0:	8fb3001c 	lw	s3,28(sp)
800142c4:	8fb20018 	lw	s2,24(sp)
800142c8:	8fb10014 	lw	s1,20(sp)
800142cc:	8fb00010 	lw	s0,16(sp)
800142d0:	03e00008 	jr	ra
800142d4:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:729
			}
			start = vma->vm_end;
		}
		return 1;
	}
	return KERN_ACCESS(addr, addr + len);
800142d8:	3c038000 	lui	v1,0x8000
800142dc:	24631000 	addiu	v1,v1,4096
800142e0:	00a3182b 	sltu	v1,a1,v1
800142e4:	1460fff4 	bnez	v1,800142b8 <user_mem_check+0xbc>
800142e8:	00001021 	move	v0,zero
800142ec:	00c53021 	addu	a2,a2,a1
800142f0:	00a6282b 	sltu	a1,a1,a2
800142f4:	10a0fff1 	beqz	a1,800142bc <user_mem_check+0xc0>
800142f8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:704
	insert_vma_struct(mm, vma);
	return 0;
}

bool
user_mem_check(struct mm_struct * mm, uintptr_t addr, size_t len, bool write)
800142fc:	3c028200 	lui	v0,0x8200
80014300:	24421001 	addiu	v0,v0,4097
80014304:	080050af 	j	800142bc <user_mem_check+0xc0>
80014308:	00c2102b 	sltu	v0,a2,v0

8001430c <do_madvise>:
do_madvise():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:872
#endif //UCONFIG_BIONIC_LIBC

int do_madvise(void *addr, size_t len, int advice)
{
	return 0;
}
8001430c:	03e00008 	jr	ra
80014310:	00001021 	move	v0,zero

80014314 <do_pgfault>:
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:875

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
80014314:	27bdffb8 	addiu	sp,sp,-72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:876
	struct proc_struct *current = pls_read(current);
80014318:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:875
{
	return 0;
}

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
8001431c:	afb50038 	sw	s5,56(sp)
80014320:	afb2002c 	sw	s2,44(sp)
80014324:	afb10028 	sw	s1,40(sp)
80014328:	afb00024 	sw	s0,36(sp)
8001432c:	afbf0044 	sw	ra,68(sp)
80014330:	afb70040 	sw	s7,64(sp)
80014334:	afb6003c 	sw	s6,60(sp)
80014338:	afb40034 	sw	s4,52(sp)
8001433c:	afb30030 	sw	s3,48(sp)
80014340:	00808021 	move	s0,a0
80014344:	00a0a821 	move	s5,a1
80014348:	00c08821 	move	s1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:877
	struct proc_struct *current = pls_read(current);
	if (mm == NULL) {
8001434c:	10800047 	beqz	a0,8001446c <do_pgfault+0x158>
80014350:	8c5277a4 	lw	s2,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:889
		     current->pid, current->name, error_code, addr);
		return -E_KILLED;
	}

	bool need_unlock = 1;
	if (!try_lock_mm(mm)) {
80014354:	0c004c4b 	jal	8001312c <try_lock_mm>
80014358:	24130001 	li	s3,1
8001435c:	1440000b 	bnez	v0,8001438c <do_pgfault+0x78>
80014360:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:890
		if (current != NULL && mm->locked_by == current->pid) {
80014364:	12400005 	beqz	s2,8001437c <do_pgfault+0x68>
80014368:	00000000 	nop
8001436c:	8e030020 	lw	v1,32(s0)
80014370:	8e420004 	lw	v0,4(s2)
80014374:	10620005 	beq	v1,v0,8001438c <do_pgfault+0x78>
80014378:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:893
			need_unlock = 0;
		} else {
			lock_mm(mm);
8001437c:	0c004c2e 	jal	800130b8 <lock_mm>
80014380:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:888
		    ("page fault in kernel thread: pid = %d, name = %s, %d %08x.\n",
		     current->pid, current->name, error_code, addr);
		return -E_KILLED;
	}

	bool need_unlock = 1;
80014384:	24130001 	li	s3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:898
			lock_mm(mm);
		}
	}

	int ret = -E_INVAL;
	struct vma_struct *vma = find_vma(mm, addr);
80014388:	02002021 	move	a0,s0
8001438c:	0c004c91 	jal	80013244 <find_vma>
80014390:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:899
	if (vma == NULL || vma->vm_start > addr) {
80014394:	1040004b 	beqz	v0,800144c4 <do_pgfault+0x1b0>
80014398:	0040a021 	move	s4,v0
8001439c:	8c420004 	lw	v0,4(v0)
800143a0:	0222182b 	sltu	v1,s1,v0
800143a4:	1060000f 	beqz	v1,800143e4 <do_pgfault+0xd0>
800143a8:	2412ffea 	li	s2,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800143ac:	16600021 	bnez	s3,80014434 <do_pgfault+0x120>
800143b0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
		unlock_mm(mm);
	}
	return ret;
}
800143b4:	8fbf0044 	lw	ra,68(sp)
800143b8:	02401021 	move	v0,s2
800143bc:	8fb70040 	lw	s7,64(sp)
800143c0:	8fb6003c 	lw	s6,60(sp)
800143c4:	8fb50038 	lw	s5,56(sp)
800143c8:	8fb40034 	lw	s4,52(sp)
800143cc:	8fb30030 	lw	s3,48(sp)
800143d0:	8fb2002c 	lw	s2,44(sp)
800143d4:	8fb10028 	lw	s1,40(sp)
800143d8:	8fb00024 	lw	s0,36(sp)
800143dc:	03e00008 	jr	ra
800143e0:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:902
	int ret = -E_INVAL;
	struct vma_struct *vma = find_vma(mm, addr);
	if (vma == NULL || vma->vm_start > addr) {
		goto failed;
	}
	if (vma->vm_flags & VM_STACK) {
800143e4:	8e83000c 	lw	v1,12(s4)
800143e8:	30640008 	andi	a0,v1,0x8
800143ec:	50800005 	beqzl	a0,80014404 <do_pgfault+0xf0>
800143f0:	30624000 	andi	v0,v1,0x4000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:903
		if (addr < vma->vm_start + PGSIZE) {
800143f4:	24421000 	addiu	v0,v0,4096
800143f8:	0222102b 	sltu	v0,s1,v0
800143fc:	1440ffeb 	bnez	v0,800143ac <do_pgfault+0x98>
80014400:	30624000 	andi	v0,v1,0x4000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:909
			goto failed;
		}
	}
	//kprintf("@ %x %08x\n", vma->vm_flags, vma->vm_start);
	//assert((vma->vm_flags & VM_IO)==0);
	if (vma->vm_flags & VM_IO) {
80014404:	1440ffe9 	bnez	v0,800143ac <do_pgfault+0x98>
80014408:	2412ffea 	li	s2,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:913
		ret = -E_INVAL;
		goto failed;
	}
	switch (error_code & 3) {
8001440c:	32a20003 	andi	v0,s5,0x3
80014410:	14400030 	bnez	v0,800144d4 <do_pgfault+0x1c0>
80014414:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:924
		}
		break;
	case 1:		/* read, present */
		goto failed;
	case 0:		/* read, not present */
		if (!(vma->vm_flags & (VM_READ | VM_EXEC))) {
80014418:	30620005 	andi	v0,v1,0x5
8001441c:	1040ffe3 	beqz	v0,800143ac <do_pgfault+0x98>
80014420:	30630002 	andi	v1,v1,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:65
	*ptep |= PTE_U;
}

static inline void ptep_set_u_write(pte_t * ptep)
{
	*ptep |= PTE_W | PTE_U;
80014424:	24160006 	li	s6,6
80014428:	24020004 	li	v0,4
8001442c:	08005139 	j	800144e4 <do_pgfault+0x1d0>
80014430:	0043b00a 	movz	s6,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1140
	}
	ret = 0;

failed:
	if (need_unlock) {
		unlock_mm(mm);
80014434:	0c004c3f 	jal	800130fc <unlock_mm>
80014438:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
	}
	return ret;
}
8001443c:	8fbf0044 	lw	ra,68(sp)
80014440:	02401021 	move	v0,s2
80014444:	8fb70040 	lw	s7,64(sp)
80014448:	8fb6003c 	lw	s6,60(sp)
8001444c:	8fb50038 	lw	s5,56(sp)
80014450:	8fb40034 	lw	s4,52(sp)
80014454:	8fb30030 	lw	s3,48(sp)
80014458:	8fb2002c 	lw	s2,44(sp)
8001445c:	8fb10028 	lw	s1,40(sp)
80014460:	8fb00024 	lw	s0,36(sp)
80014464:	03e00008 	jr	ra
80014468:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:878

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
	struct proc_struct *current = pls_read(current);
	if (mm == NULL) {
		assert(current != NULL);
8001446c:	124000c1 	beqz	s2,80014774 <do_pgfault+0x460>
80014470:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:883
		/* Chen Yuheng 
		 * give handler a chance to deal with it 
		 */
		kprintf
		    ("page fault in kernel thread: pid = %d, name = %s, %d %08x.\n",
80014474:	8e450004 	lw	a1,4(s2)
80014478:	3c048002 	lui	a0,0x8002
8001447c:	26460060 	addiu	a2,s2,96
80014480:	02a03821 	move	a3,s5
80014484:	24843368 	addiu	a0,a0,13160
80014488:	0c007aa6 	jal	8001ea98 <kprintf>
8001448c:	afb10010 	sw	s1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
80014490:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:885
		 * give handler a chance to deal with it 
		 */
		kprintf
		    ("page fault in kernel thread: pid = %d, name = %s, %d %08x.\n",
		     current->pid, current->name, error_code, addr);
		return -E_KILLED;
80014494:	2412ffdb 	li	s2,-37
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
80014498:	02401021 	move	v0,s2
8001449c:	8fb70040 	lw	s7,64(sp)
800144a0:	8fb6003c 	lw	s6,60(sp)
800144a4:	8fb50038 	lw	s5,56(sp)
800144a8:	8fb40034 	lw	s4,52(sp)
800144ac:	8fb30030 	lw	s3,48(sp)
800144b0:	8fb2002c 	lw	s2,44(sp)
800144b4:	8fb10028 	lw	s1,40(sp)
800144b8:	8fb00024 	lw	s0,36(sp)
800144bc:	03e00008 	jr	ra
800144c0:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800144c4:	1260ffbb 	beqz	s3,800143b4 <do_pgfault+0xa0>
800144c8:	2412ffea 	li	s2,-22
800144cc:	0800510d 	j	80014434 <do_pgfault+0x120>
800144d0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:913
	//assert((vma->vm_flags & VM_IO)==0);
	if (vma->vm_flags & VM_IO) {
		ret = -E_INVAL;
		goto failed;
	}
	switch (error_code & 3) {
800144d4:	1044ffb5 	beq	v0,a0,800143ac <do_pgfault+0x98>
800144d8:	30630002 	andi	v1,v1,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:917
	default:
		/* default is 3: write, present */
	case 2:		/* write, not present */
		if (!(vma->vm_flags & VM_WRITE)) {
800144dc:	1060ffb3 	beqz	v1,800143ac <do_pgfault+0x98>
800144e0:	24160006 	li	s6,6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:943
	ptep_set_u_read(&perm);
	if (vma->vm_flags & VM_WRITE) {
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);
800144e4:	2402f000 	li	v0,-4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:948

	ret = -E_NO_MEM;

	pte_t *ptep;
	if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
800144e8:	8e040010 	lw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:943
	ptep_set_u_read(&perm);
	if (vma->vm_flags & VM_WRITE) {
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);
800144ec:	02228824 	and	s1,s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:948

	ret = -E_NO_MEM;

	pte_t *ptep;
	if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
800144f0:	02202821 	move	a1,s1
800144f4:	0c005cd4 	jal	80017350 <get_pte>
800144f8:	24060001 	li	a2,1
800144fc:	10400052 	beqz	v0,80014648 <do_pgfault+0x334>
80014500:	0040b821 	move	s7,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
80014504:	8c450000 	lw	a1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:951

	pte_t *ptep;
	if ((ptep = get_pte(mm->pgdir, addr, 1)) == NULL) {
		goto failed;
	}
	if (ptep_invalid(ptep)) {
80014508:	14a0000d 	bnez	a1,80014540 <do_pgfault+0x22c>
8001450c:	8e82000c 	lw	v0,12(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1016
			}
#endif //SHARE_MAPPED_FILE

		} else
#endif //UCONFIG_BIONIC_LIBC
		if (!(vma->vm_flags & VM_SHARE)) {
80014510:	30420010 	andi	v0,v0,0x10
80014514:	5440005a 	bnezl	v0,80014680 <do_pgfault+0x36c>
80014518:	8e840028 	lw	a0,40(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1017
			if (pgdir_alloc_page(mm->pgdir, addr, perm) == NULL) {
8001451c:	8e040010 	lw	a0,16(s0)
80014520:	02202821 	move	a1,s1
80014524:	0c005e55 	jal	80017954 <pgdir_alloc_page>
80014528:	02c03021 	move	a2,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:945
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);

	ret = -E_NO_MEM;
8001452c:	2412fff4 	li	s2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
80014530:	1260ffa0 	beqz	s3,800143b4 <do_pgfault+0xa0>
80014534:	0002900b 	movn	s2,zero,v0
80014538:	0800510d 	j	80014434 <do_pgfault+0x120>
8001453c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1051
			}
		}
	} else {		//a present page, handle copy-on-write (cow) 
		struct Page *page, *newpage = NULL;
		bool cow =
		    ((vma->vm_flags & (VM_SHARE | VM_WRITE)) == VM_WRITE),
80014540:	30520012 	andi	s2,v0,0x12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1050
#endif
			}
		}
	} else {		//a present page, handle copy-on-write (cow) 
		struct Page *page, *newpage = NULL;
		bool cow =
80014544:	3a520002 	xori	s2,s2,0x2
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80014548:	30a30001 	andi	v1,a1,0x1
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1055
		    ((vma->vm_flags & (VM_SHARE | VM_WRITE)) == VM_WRITE),
		    may_copy = 1;

#if 1
		if (!(!ptep_present(ptep)
8001454c:	10600042 	beqz	v1,80014658 <do_pgfault+0x344>
80014550:	2e520001 	sltiu	s2,s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1056
		      || ((error_code & 2) && !ptep_u_write(ptep) && cow))) {
80014554:	32a30002 	andi	v1,s5,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1055
		bool cow =
		    ((vma->vm_flags & (VM_SHARE | VM_WRITE)) == VM_WRITE),
		    may_copy = 1;

#if 1
		if (!(!ptep_present(ptep)
80014558:	106000a6 	beqz	v1,800147f4 <do_pgfault+0x4e0>
8001455c:	24030006 	li	v1,6
ptep_u_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:46
	return (*ptep & PTE_U);
}

static inline int ptep_u_write(pte_t * ptep)
{
	return ((*ptep & PTE_U) && (*ptep & PTE_W));
80014560:	30a40006 	andi	a0,a1,0x6
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1056
		      || ((error_code & 2) && !ptep_u_write(ptep) && cow))) {
80014564:	108300a4 	beq	a0,v1,800147f8 <do_pgfault+0x4e4>
80014568:	3c048002 	lui	a0,0x8002
8001456c:	124000a3 	beqz	s2,800147fc <do_pgfault+0x4e8>
80014570:	248433b0 	addiu	a0,a0,13232
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1065
			assert(0);
		}
#endif

		if (cow) {
			newpage = alloc_page();
80014574:	0c00742d 	jal	8001d0b4 <alloc_pages>
80014578:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
failed:
	if (need_unlock) {
		unlock_mm(mm);
	}
	return ret;
}
8001457c:	8ee30000 	lw	v1,0(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1065
			assert(0);
		}
#endif

		if (cow) {
			newpage = alloc_page();
80014580:	0040a021 	move	s4,v0
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80014584:	30620001 	andi	v0,v1,0x1
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1067
		}
		if (ptep_present(ptep)) {
80014588:	10400035 	beqz	v0,80014660 <do_pgfault+0x34c>
8001458c:	2402f000 	li	v0,-4096
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80014590:	00621824 	and	v1,v1,v0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80014594:	3c047fff 	lui	a0,0x7fff
80014598:	3c028015 	lui	v0,0x8015
8001459c:	3484f000 	ori	a0,a0,0xf000
800145a0:	8c467770 	lw	a2,30576(v0)
800145a4:	00641821 	addu	v1,v1,a0
800145a8:	00031b02 	srl	v1,v1,0xc
800145ac:	0066102b 	sltu	v0,v1,a2
800145b0:	1040007d 	beqz	v0,800147a8 <do_pgfault+0x494>
800145b4:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
800145b8:	8c4277bc 	lw	v0,30652(v0)
800145bc:	00031940 	sll	v1,v1,0x5
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1091
#endif
				may_copy = 0;
			}
		}

		if (cow && may_copy) {
800145c0:	12400044 	beqz	s2,800146d4 <do_pgfault+0x3c0>
800145c4:	00432821 	addu	a1,v0,v1
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
800145c8:	8ca30000 	lw	v1,0(a1)
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1095
#ifdef UCONFIG_SWAP
			if (page_ref(page) + swap_page_count(page) > 1) {
#else
			if (page_ref(page) > 1) {
800145cc:	28630002 	slti	v1,v1,2
800145d0:	54600041 	bnezl	v1,800146d8 <do_pgfault+0x3c4>
800145d4:	8e040010 	lw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1097
#endif
				if (newpage == NULL) {
800145d8:	1280001b 	beqz	s4,80014648 <do_pgfault+0x334>
800145dc:	02823823 	subu	a3,s4,v0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800145e0:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800145e4:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800145e8:	00071b02 	srl	v1,a3,0xc
800145ec:	0066182b 	sltu	v1,v1,a2
800145f0:	10600073 	beqz	v1,800147c0 <do_pgfault+0x4ac>
800145f4:	00e43823 	subu	a3,a3,a0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800145f8:	00a21023 	subu	v0,a1,v0
800145fc:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80014600:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014604:	00021b02 	srl	v1,v0,0xc
80014608:	0066302b 	sltu	a2,v1,a2
8001460c:	10c00072 	beqz	a2,800147d8 <do_pgfault+0x4c4>
80014610:	00441023 	subu	v0,v0,a0
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1100
					goto failed;
				}
				memcpy(page2kva(newpage), page2kva(page),
80014614:	00e02021 	move	a0,a3
80014618:	00402821 	move	a1,v0
8001461c:	0c005c84 	jal	80017210 <memcpy>
80014620:	24061000 	li	a2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1131
#endif //SHARE_MAPPED_FILE
		}
#endif //UCONFIG_BIONIC_LIBC
		else {
		}
		page_insert(mm->pgdir, page, addr, perm);
80014624:	8e040010 	lw	a0,16(s0)
80014628:	02802821 	move	a1,s4
8001462c:	02203021 	move	a2,s1
80014630:	0c005dd5 	jal	80017754 <page_insert>
80014634:	02c03821 	move	a3,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
80014638:	1260ff5e 	beqz	s3,800143b4 <do_pgfault+0xa0>
8001463c:	00009021 	move	s2,zero
80014640:	0800510d 	j	80014434 <do_pgfault+0x120>
80014644:	00000000 	nop
80014648:	1260ff5a 	beqz	s3,800143b4 <do_pgfault+0xa0>
8001464c:	2412fff4 	li	s2,-12
80014650:	0800510d 	j	80014434 <do_pgfault+0x120>
80014654:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1064
				cow, vma->vm_flags);
			assert(0);
		}
#endif

		if (cow) {
80014658:	1640ffc6 	bnez	s2,80014574 <do_pgfault+0x260>
8001465c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1078
					free_page(newpage);
				}
				goto failed;
			}
#else
			assert(0);
80014660:	3c048002 	lui	a0,0x8002
80014664:	2484315c 	addiu	a0,a0,12636
80014668:	24050436 	li	a1,1078
8001466c:	3c068002 	lui	a2,0x8002
80014670:	3c078002 	lui	a3,0x8002
80014674:	24c60e48 	addiu	a2,a2,3656
80014678:	0c006b13 	jal	8001ac4c <__panic>
8001467c:	24e72434 	addiu	a3,a3,9268
lock_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.h:63
	return atomic_sub_return(&(shmem->shmem_ref), 1);
}

static inline void lock_shmem(struct shmem_struct *shmem)
{
	down(&(shmem->shmem_sem));
80014680:	0c006727 	jal	80019c9c <down>
80014684:	24840014 	addiu	a0,a0,20
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1028
			}
#endif //UCONFIG_BIONIC_LIBC
		} else {	//shared mem
			lock_shmem(vma->shmem);
			uintptr_t shmem_addr =
			    addr - vma->vm_start + vma->shmem_off;
80014688:	8e85002c 	lw	a1,44(s4)
8001468c:	8e820004 	lw	v0,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1029
			pte_t *sh_ptep =
80014690:	8e840028 	lw	a0,40(s4)
80014694:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1028
			}
#endif //UCONFIG_BIONIC_LIBC
		} else {	//shared mem
			lock_shmem(vma->shmem);
			uintptr_t shmem_addr =
			    addr - vma->vm_start + vma->shmem_off;
80014698:	00a22823 	subu	a1,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1029
			pte_t *sh_ptep =
8001469c:	0c004a81 	jal	80012a04 <shmem_get_entry>
800146a0:	00b12821 	addu	a1,a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1031
			    shmem_get_entry(vma->shmem, shmem_addr, 1);
			if (sh_ptep == NULL || ptep_invalid(sh_ptep)) {
800146a4:	10400004 	beqz	v0,800146b8 <do_pgfault+0x3a4>
800146a8:	8e840028 	lw	a0,40(s4)
800146ac:	8c430000 	lw	v1,0(v0)
800146b0:	14600015 	bnez	v1,80014708 <do_pgfault+0x3f4>
800146b4:	00000000 	nop
unlock_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:945
		ptep_set_u_write(&perm);
	}
#endif
	addr = ROUNDDOWN(addr, PGSIZE);

	ret = -E_NO_MEM;
800146b8:	2412fff4 	li	s2,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.h:68
}

static inline void unlock_shmem(struct shmem_struct *shmem)
{
	up(&(shmem->shmem_sem));
800146bc:	0c006725 	jal	80019c94 <up>
800146c0:	24840014 	addiu	a0,a0,20
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800146c4:	1260ff3c 	beqz	s3,800143b8 <do_pgfault+0xa4>
800146c8:	8fbf0044 	lw	ra,68(sp)
800146cc:	0800510d 	j	80014434 <do_pgfault+0x120>
800146d0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1131
#endif //SHARE_MAPPED_FILE
		}
#endif //UCONFIG_BIONIC_LIBC
		else {
		}
		page_insert(mm->pgdir, page, addr, perm);
800146d4:	8e040010 	lw	a0,16(s0)
800146d8:	02203021 	move	a2,s1
800146dc:	0c005dd5 	jal	80017754 <page_insert>
800146e0:	02c03821 	move	a3,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1132
		if (newpage != NULL) {
800146e4:	1280ff31 	beqz	s4,800143ac <do_pgfault+0x98>
800146e8:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1133
			free_page(newpage);
800146ec:	02802021 	move	a0,s4
800146f0:	0c007449 	jal	8001d124 <free_pages>
800146f4:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
800146f8:	1260ff2f 	beqz	s3,800143b8 <do_pgfault+0xa4>
800146fc:	8fbf0044 	lw	ra,68(sp)
80014700:	0800510d 	j	80014434 <do_pgfault+0x120>
80014704:	00000000 	nop
unlock_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.h:68
80014708:	afa20018 	sw	v0,24(sp)
8001470c:	0c006725 	jal	80019c94 <up>
80014710:	24840014 	addiu	a0,a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1143
		unlock_mm(mm);
	}
	return ret;
}
80014714:	8fa20018 	lw	v0,24(sp)
80014718:	8c420000 	lw	v0,0(v0)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
8001471c:	30430001 	andi	v1,v0,0x1
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1036
			if (sh_ptep == NULL || ptep_invalid(sh_ptep)) {
				unlock_shmem(vma->shmem);
				goto failed;
			}
			unlock_shmem(vma->shmem);
			if (ptep_present(sh_ptep)) {
80014720:	1060001b 	beqz	v1,80014790 <do_pgfault+0x47c>
80014724:	3c038015 	lui	v1,0x8015
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80014728:	3c047fff 	lui	a0,0x7fff
8001472c:	3484f000 	ori	a0,a0,0xf000
80014730:	8c637770 	lw	v1,30576(v1)
80014734:	00441021 	addu	v0,v0,a0
80014738:	00021302 	srl	v0,v0,0xc
8001473c:	0043182b 	sltu	v1,v0,v1
80014740:	10600019 	beqz	v1,800147a8 <do_pgfault+0x494>
80014744:	8e040010 	lw	a0,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80014748:	3c038015 	lui	v1,0x8015
8001474c:	8c6577bc 	lw	a1,30652(v1)
80014750:	00021140 	sll	v0,v0,0x5
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1037
				page_insert(mm->pgdir, pa2page(*sh_ptep), addr,
80014754:	02203021 	move	a2,s1
80014758:	00a22821 	addu	a1,a1,v0
8001475c:	0c005dd5 	jal	80017754 <page_insert>
80014760:	02c03821 	move	a3,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1139
		}
	}
	ret = 0;

failed:
	if (need_unlock) {
80014764:	1260ff13 	beqz	s3,800143b4 <do_pgfault+0xa0>
80014768:	00009021 	move	s2,zero
8001476c:	0800510d 	j	80014434 <do_pgfault+0x120>
80014770:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:878

int do_pgfault(struct mm_struct *mm, machine_word_t error_code, uintptr_t addr)
{
	struct proc_struct *current = pls_read(current);
	if (mm == NULL) {
		assert(current != NULL);
80014774:	3c068002 	lui	a2,0x8002
80014778:	3c078002 	lui	a3,0x8002
8001477c:	2484315c 	addiu	a0,a0,12636
80014780:	2405036e 	li	a1,878
80014784:	24c60e48 	addiu	a2,a2,3656
80014788:	0c006b13 	jal	8001ac4c <__panic>
8001478c:	24e73358 	addiu	a3,a3,13144
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1044
			} else {
#ifdef UCONFIG_SWAP
				swap_duplicate(*ptep);
				ptep_copy(ptep, sh_ptep);
#else
				panic("NO SWAP\n");
80014790:	3c048002 	lui	a0,0x8002
80014794:	3c068002 	lui	a2,0x8002
80014798:	2484315c 	addiu	a0,a0,12636
8001479c:	24050414 	li	a1,1044
800147a0:	0c006b13 	jal	8001ac4c <__panic>
800147a4:	24c633a4 	addiu	a2,a2,13220
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
800147a8:	3c048002 	lui	a0,0x8002
800147ac:	3c068002 	lui	a2,0x8002
800147b0:	24842a0c 	addiu	a0,a0,10764
800147b4:	24050063 	li	a1,99
800147b8:	0c006b13 	jal	8001ac4c <__panic>
800147bc:	24c62a74 	addiu	a2,a2,10868
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800147c0:	3c048002 	lui	a0,0x8002
800147c4:	3c068002 	lui	a2,0x8002
800147c8:	24842a0c 	addiu	a0,a0,10764
800147cc:	2405006a 	li	a1,106
800147d0:	0c006b13 	jal	8001ac4c <__panic>
800147d4:	24c62a94 	addiu	a2,a2,10900
800147d8:	3c048002 	lui	a0,0x8002
800147dc:	3c068002 	lui	a2,0x8002
800147e0:	24842a0c 	addiu	a0,a0,10764
800147e4:	2405006a 	li	a1,106
800147e8:	24c62a94 	addiu	a2,a2,10900
800147ec:	0c006b13 	jal	8001ac4c <__panic>
800147f0:	00403821 	move	a3,v0
do_pgfault():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1058

#if 1
		if (!(!ptep_present(ptep)
		      || ((error_code & 2) && !ptep_u_write(ptep) && cow))) {
			//assert(PADDR(mm->pgdir) == rcr3());
			kprintf("%p %p %d %d %x\n", *ptep, addr, error_code,
800147f4:	3c048002 	lui	a0,0x8002
800147f8:	248433b0 	addiu	a0,a0,13232
800147fc:	02203021 	move	a2,s1
80014800:	02a03821 	move	a3,s5
80014804:	afb20010 	sw	s2,16(sp)
80014808:	0c007aa6 	jal	8001ea98 <kprintf>
8001480c:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:1060
				cow, vma->vm_flags);
			assert(0);
80014810:	3c048002 	lui	a0,0x8002
80014814:	2484315c 	addiu	a0,a0,12636
80014818:	0800519b 	j	8001466c <do_pgfault+0x358>
8001481c:	24050424 	li	a1,1060

80014820 <kmem_cache_alloc>:
kmem_cache_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:399
}

// kmem_cache_alloc - call kmem_cache_alloc_one function to allocate a obj
//                  - if no free obj, try to allocate a slab
static void *
kmem_cache_alloc(kmem_cache_t *cachep) {
80014820:	27bdffc0 	addiu	sp,sp,-64
80014824:	afb60030 	sw	s6,48(sp)
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
80014828:	3c168000 	lui	s6,0x8000
kmem_cache_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:399
8001482c:	afbe0038 	sw	s8,56(sp)
80014830:	afb70034 	sw	s7,52(sp)
80014834:	afb5002c 	sw	s5,44(sp)
80014838:	afb40028 	sw	s4,40(sp)
8001483c:	afb20020 	sw	s2,32(sp)
80014840:	afbf003c 	sw	ra,60(sp)
80014844:	afb30024 	sw	s3,36(sp)
80014848:	afb1001c 	sw	s1,28(sp)
8001484c:	afb00018 	sw	s0,24(sp)
80014850:	00809021 	move	s2,a0
80014854:	24940008 	addiu	s4,a0,8
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80014858:	3c178015 	lui	s7,0x8015
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001485c:	26d61000 	addiu	s6,s6,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80014860:	3c158015 	lui	s5,0x8015
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:365

    int i;
    for (i = 0; i < cachep->num; i ++) {
        slab_bufctl(slabp)[i] = i + 1;
    }
    slab_bufctl(slabp)[cachep->num - 1] = BUFCTL_END;
80014864:	241effff 	li	s8,-1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014868:	40026000 	mfc0	v0,c0_status
8001486c:	30420001 	andi	v0,v0,0x1
80014870:	10400004 	beqz	v0,80014884 <kmem_cache_alloc+0x64>
80014874:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80014878:	0c006d0c 	jal	8001b430 <intr_disable>
8001487c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80014880:	24030001 	li	v1,1
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80014884:	8e44000c 	lw	a0,12(s2)
kmem_cache_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:405
    void *objp;
    bool intr_flag;

try_again:
    local_intr_save(intr_flag);
    if (list_empty(&(cachep->slabs_notfull))) {
80014888:	56840080 	bnel	s4,a0,80014a8c <kmem_cache_alloc+0x26c>
8001488c:	8c860014 	lw	a2,20(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014890:	50600004 	beqzl	v1,800148a4 <kmem_cache_alloc+0x84>
80014894:	8e440024 	lw	a0,36(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80014898:	0c006d08 	jal	8001b420 <intr_enable>
8001489c:	00000000 	nop
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:341

// kmem_cache_grow - allocate a new slab by calling alloc_pages
//                 - set control area in the new slab
static bool
kmem_cache_grow(kmem_cache_t *cachep) {
    struct Page *page = alloc_pages(1 << cachep->page_order);
800148a0:	8e440024 	lw	a0,36(s2)
800148a4:	24130001 	li	s3,1
800148a8:	0c00742d 	jal	8001d0b4 <alloc_pages>
800148ac:	00932004 	sllv	a0,s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:342
    if (page == NULL) {
800148b0:	10400057 	beqz	v0,80014a10 <kmem_cache_alloc+0x1f0>
800148b4:	00408821 	move	s1,v0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800148b8:	8ef077bc 	lw	s0,30652(s7)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800148bc:	8ea27770 	lw	v0,30576(s5)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800148c0:	02308023 	subu	s0,s1,s0
800148c4:	00108143 	sra	s0,s0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800148c8:	00108300 	sll	s0,s0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800148cc:	00101b02 	srl	v1,s0,0xc
800148d0:	0062102b 	sltu	v0,v1,v0
800148d4:	10400098 	beqz	v0,80014b38 <kmem_cache_alloc+0x318>
800148d8:	02168021 	addu	s0,s0,s6
kmem_cache_slabmgmt():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:309
//                     - and initialize the slab according to cachep
static slab_t *
kmem_cache_slabmgmt(kmem_cache_t *cachep, struct Page *page) {
    void *objp = page2kva(page);
    slab_t *slabp;
    if (cachep->off_slab) {
800148dc:	8e430020 	lw	v1,32(s2)
800148e0:	10600005 	beqz	v1,800148f8 <kmem_cache_alloc+0xd8>
800148e4:	02001021 	move	v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:310
        if ((slabp = kmem_cache_alloc(cachep->slab_cachep)) == NULL) {
800148e8:	0c005208 	jal	80014820 <kmem_cache_alloc>
800148ec:	8e440028 	lw	a0,40(s2)
800148f0:	50400054 	beqzl	v0,80014a44 <kmem_cache_alloc+0x224>
800148f4:	8e450024 	lw	a1,36(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:318
    }
    else {
        slabp = page2kva(page);
    }
    slabp->inuse = 0;
    slabp->offset = cachep->offset;
800148f8:	8e43001c 	lw	v1,28(s2)
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:351
    slab_t *slabp;
    if ((slabp = kmem_cache_slabmgmt(cachep, page)) == NULL) {
        goto oops;
    }

    size_t order_size = (1 << cachep->page_order);
800148fc:	8e440024 	lw	a0,36(s2)
kmem_cache_slabmgmt():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:317
        }
    }
    else {
        slabp = page2kva(page);
    }
    slabp->inuse = 0;
80014900:	ac40000c 	sw	zero,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:319
    slabp->offset = cachep->offset;
    slabp->s_mem = objp + cachep->offset;
80014904:	02038021 	addu	s0,s0,v1
80014908:	ac500008 	sw	s0,8(v0)
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:351
    slab_t *slabp;
    if ((slabp = kmem_cache_slabmgmt(cachep, page)) == NULL) {
        goto oops;
    }

    size_t order_size = (1 << cachep->page_order);
8001490c:	24100001 	li	s0,1
kmem_cache_slabmgmt():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:318
    }
    else {
        slabp = page2kva(page);
    }
    slabp->inuse = 0;
    slabp->offset = cachep->offset;
80014910:	ac430010 	sw	v1,16(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:351
    slab_t *slabp;
    if ((slabp = kmem_cache_slabmgmt(cachep, page)) == NULL) {
        goto oops;
    }

    size_t order_size = (1 << cachep->page_order);
80014914:	0800524d 	j	80014934 <kmem_cache_alloc+0x114>
80014918:	00908004 	sllv	s0,s0,a0
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001491c:	8e230004 	lw	v1,4(s1)
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:359
        SET_PAGE_CACHE(page, cachep);
        SET_PAGE_SLAB(page, slabp);
	//this page is used for slab
        SetPageSlab(page);
        page ++;
    } while (-- order_size);
80014920:	2610ffff 	addiu	s0,s0,-1
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
80014924:	34630004 	ori	v1,v1,0x4
80014928:	ae230004 	sw	v1,4(s1)
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:359
8001492c:	12000011 	beqz	s0,80014974 <kmem_cache_alloc+0x154>
80014930:	26310020 	addiu	s1,s1,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:354
    }

    size_t order_size = (1 << cachep->page_order);
    do {
        //setup this page in the free list (see memlayout.h: struct page)???
        SET_PAGE_CACHE(page, cachep);
80014934:	ae320014 	sw	s2,20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:355
        SET_PAGE_SLAB(page, slabp);
80014938:	ae220010 	sw	v0,16(s1)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001493c:	40036000 	mfc0	v1,c0_status
80014940:	30630001 	andi	v1,v1,0x1
80014944:	1060fff5 	beqz	v1,8001491c <kmem_cache_alloc+0xfc>
80014948:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001494c:	0c006d0c 	jal	8001b430 <intr_disable>
80014950:	afa20010 	sw	v0,16(sp)
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
80014954:	8e230004 	lw	v1,4(s1)
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:359
	//this page is used for slab
        SetPageSlab(page);
        page ++;
    } while (-- order_size);
80014958:	2610ffff 	addiu	s0,s0,-1
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001495c:	34630004 	ori	v1,v1,0x4
80014960:	ae230004 	sw	v1,4(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014964:	0c006d08 	jal	8001b420 <intr_enable>
80014968:	26310020 	addiu	s1,s1,32
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:359
8001496c:	1600fff1 	bnez	s0,80014934 <kmem_cache_alloc+0x114>
80014970:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:362

    int i;
    for (i = 0; i < cachep->num; i ++) {
80014974:	8e440018 	lw	a0,24(s2)
80014978:	1080000b 	beqz	a0,800149a8 <kmem_cache_alloc+0x188>
8001497c:	00001821 	move	v1,zero
80014980:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:363
        slab_bufctl(slabp)[i] = i + 1;
80014984:	24a50006 	addiu	a1,a1,6
80014988:	00052880 	sll	a1,a1,0x2
8001498c:	24630001 	addiu	v1,v1,1
80014990:	00452821 	addu	a1,v0,a1
80014994:	aca30000 	sw	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:362
        SetPageSlab(page);
        page ++;
    } while (-- order_size);

    int i;
    for (i = 0; i < cachep->num; i ++) {
80014998:	8e440018 	lw	a0,24(s2)
8001499c:	0064302b 	sltu	a2,v1,a0
800149a0:	14c0fff8 	bnez	a2,80014984 <kmem_cache_alloc+0x164>
800149a4:	00602821 	move	a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:365
        slab_bufctl(slabp)[i] = i + 1;
    }
    slab_bufctl(slabp)[cachep->num - 1] = BUFCTL_END;
800149a8:	24840005 	addiu	a0,a0,5
800149ac:	00042080 	sll	a0,a0,0x2
800149b0:	00442021 	addu	a0,v0,a0
800149b4:	ac9e0000 	sw	s8,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:366
    slabp->free = 0;
800149b8:	ac400014 	sw	zero,20(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800149bc:	40036000 	mfc0	v1,c0_status
800149c0:	30630001 	andi	v1,v1,0x1
800149c4:	14600007 	bnez	v1,800149e4 <kmem_cache_alloc+0x1c4>
800149c8:	00000000 	nop
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
800149cc:	8e43000c 	lw	v1,12(s2)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800149d0:	ae42000c 	sw	v0,12(s2)
800149d4:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
800149d8:	ac430004 	sw	v1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
800149dc:	0800521a 	j	80014868 <kmem_cache_alloc+0x48>
800149e0:	ac540000 	sw	s4,0(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800149e4:	0c006d0c 	jal	8001b430 <intr_disable>
800149e8:	afa20010 	sw	v0,16(sp)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800149ec:	8fa20010 	lw	v0,16(sp)
list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
800149f0:	8e43000c 	lw	v1,12(s2)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
800149f4:	ae42000c 	sw	v0,12(s2)
800149f8:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
800149fc:	ac430004 	sw	v1,4(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014a00:	0c006d08 	jal	8001b420 <intr_enable>
80014a04:	ac540000 	sw	s4,0(v0)
80014a08:	0800521a 	j	80014868 <kmem_cache_alloc+0x48>
80014a0c:	00000000 	nop
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:419
    local_intr_restore(intr_flag);

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
80014a10:	00001021 	move	v0,zero
kmem_cache_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:420
}
80014a14:	8fbf003c 	lw	ra,60(sp)
80014a18:	8fbe0038 	lw	s8,56(sp)
80014a1c:	8fb70034 	lw	s7,52(sp)
80014a20:	8fb60030 	lw	s6,48(sp)
80014a24:	8fb5002c 	lw	s5,44(sp)
80014a28:	8fb40028 	lw	s4,40(sp)
80014a2c:	8fb30024 	lw	s3,36(sp)
80014a30:	8fb20020 	lw	s2,32(sp)
80014a34:	8fb1001c 	lw	s1,28(sp)
80014a38:	8fb00018 	lw	s0,24(sp)
80014a3c:	03e00008 	jr	ra
80014a40:	27bd0040 	addiu	sp,sp,64
kmem_cache_grow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:419
    local_intr_restore(intr_flag);

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
80014a44:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:377
    }
    local_intr_restore(intr_flag);
    return 1;

oops:
    free_pages(page, 1 << cachep->page_order);
80014a48:	02202021 	move	a0,s1
80014a4c:	00b32804 	sllv	a1,s3,a1
80014a50:	0c007449 	jal	8001d124 <free_pages>
80014a54:	afa20010 	sw	v0,16(sp)
kmem_cache_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:420

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
}
80014a58:	8fbf003c 	lw	ra,60(sp)
80014a5c:	8fa20010 	lw	v0,16(sp)
80014a60:	8fbe0038 	lw	s8,56(sp)
80014a64:	8fb70034 	lw	s7,52(sp)
80014a68:	8fb60030 	lw	s6,48(sp)
80014a6c:	8fb5002c 	lw	s5,44(sp)
80014a70:	8fb40028 	lw	s4,40(sp)
80014a74:	8fb30024 	lw	s3,36(sp)
80014a78:	8fb20020 	lw	s2,32(sp)
80014a7c:	8fb1001c 	lw	s1,28(sp)
80014a80:	8fb00018 	lw	s0,24(sp)
80014a84:	03e00008 	jr	ra
80014a88:	27bd0040 	addiu	sp,sp,64
kmem_cache_alloc_one():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:386

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
80014a8c:	8e470010 	lw	a3,16(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:385
}

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
80014a90:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:387
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014a94:	24c50006 	addiu	a1,a2,6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:386

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
80014a98:	70c74002 	mul	t0,a2,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:385
}

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
80014a9c:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:387
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014aa0:	00052880 	sll	a1,a1,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:385
}

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
80014aa4:	ac82000c 	sw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:387
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014aa8:	00852821 	addu	a1,a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:386

// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
80014aac:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:387
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014ab0:	8ca50000 	lw	a1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:389

    if (slabp->free == BUFCTL_END) {
80014ab4:	2406ffff 	li	a2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:387
// kmem_cache_alloc_one - allocate a obj in a slab
static void * 
kmem_cache_alloc_one(kmem_cache_t *cachep, slab_t *slabp) {
    slabp->inuse ++;
    void *objp = slabp->s_mem + slabp->free * cachep->objsize;
    slabp->free = slab_bufctl(slabp)[slabp->free];
80014ab8:	ac850014 	sw	a1,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:389

    if (slabp->free == BUFCTL_END) {
80014abc:	10a60012 	beq	a1,a2,80014b08 <kmem_cache_alloc+0x2e8>
80014ac0:	01021021 	addu	v0,t0,v0
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014ac4:	1060ffd4 	beqz	v1,80014a18 <kmem_cache_alloc+0x1f8>
80014ac8:	8fbf003c 	lw	ra,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80014acc:	0c006d08 	jal	8001b420 <intr_enable>
80014ad0:	afa20010 	sw	v0,16(sp)
kmem_cache_alloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:420

    if (kmem_cache_grow(cachep)) {
        goto try_again;
    }
    return NULL;
}
80014ad4:	8fbf003c 	lw	ra,60(sp)
80014ad8:	8fa20010 	lw	v0,16(sp)
80014adc:	8fbe0038 	lw	s8,56(sp)
80014ae0:	8fb70034 	lw	s7,52(sp)
80014ae4:	8fb60030 	lw	s6,48(sp)
80014ae8:	8fb5002c 	lw	s5,44(sp)
80014aec:	8fb40028 	lw	s4,40(sp)
80014af0:	8fb30024 	lw	s3,36(sp)
80014af4:	8fb20020 	lw	s2,32(sp)
80014af8:	8fb1001c 	lw	s1,28(sp)
80014afc:	8fb00018 	lw	s0,24(sp)
80014b00:	03e00008 	jr	ra
80014b04:	27bd0040 	addiu	sp,sp,64
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80014b08:	8c870000 	lw	a3,0(a0)
80014b0c:	8c860004 	lw	a2,4(a0)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80014b10:	ace60004 	sw	a2,4(a3)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80014b14:	8e450004 	lw	a1,4(s2)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
	next->prev = prev;
80014b18:	acc70000 	sw	a3,0(a2)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80014b1c:	ae440004 	sw	a0,4(s2)
80014b20:	aca40000 	sw	a0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80014b24:	ac850004 	sw	a1,4(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014b28:	1060ffba 	beqz	v1,80014a14 <kmem_cache_alloc+0x1f4>
80014b2c:	ac920000 	sw	s2,0(a0)
80014b30:	080052b3 	j	80014acc <kmem_cache_alloc+0x2ac>
80014b34:	00000000 	nop
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
80014b38:	3c048002 	lui	a0,0x8002
80014b3c:	3c068002 	lui	a2,0x8002
80014b40:	24842a0c 	addiu	a0,a0,10764
80014b44:	2405006a 	li	a1,106
80014b48:	24c62a94 	addiu	a2,a2,10900
80014b4c:	0c006b13 	jal	8001ac4c <__panic>
80014b50:	02003821 	move	a3,s0

80014b54 <kmem_cache_free>:
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80014b54:	3c028000 	lui	v0,0x8000
80014b58:	24421000 	addiu	v0,v0,4096
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:485
#define GET_PAGE_SLAB(page)                                 \
    (slab_t *)((page)->page_link.prev)

// kmem_cache_free - call kmem_cache_free_one function to free an obj 
static void
kmem_cache_free(kmem_cache_t *cachep, void *objp) {
80014b5c:	27bdffc8 	addiu	sp,sp,-56
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
80014b60:	00a2102b 	sltu	v0,a1,v0
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:485
80014b64:	afb2001c 	sw	s2,28(sp)
80014b68:	afb00014 	sw	s0,20(sp)
80014b6c:	afbf0034 	sw	ra,52(sp)
80014b70:	afb70030 	sw	s7,48(sp)
80014b74:	afb6002c 	sw	s6,44(sp)
80014b78:	afb50028 	sw	s5,40(sp)
80014b7c:	afb40024 	sw	s4,36(sp)
80014b80:	afb30020 	sw	s3,32(sp)
80014b84:	afb10018 	sw	s1,24(sp)
80014b88:	00a08021 	move	s0,a1
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
80014b8c:	144000b2 	bnez	v0,80014e58 <kmem_cache_free+0x304>
80014b90:	00809021 	move	s2,a0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80014b94:	3c158015 	lui	s5,0x8015
80014b98:	3c027fff 	lui	v0,0x7fff
80014b9c:	8ea37770 	lw	v1,30576(s5)
80014ba0:	3442f000 	ori	v0,v0,0xf000
80014ba4:	00a21021 	addu	v0,a1,v0
80014ba8:	00021302 	srl	v0,v0,0xc
80014bac:	0043182b 	sltu	v1,v0,v1
80014bb0:	1060009d 	beqz	v1,80014e28 <kmem_cache_free+0x2d4>
80014bb4:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80014bb8:	8e9177bc 	lw	s1,30652(s4)
80014bbc:	00021140 	sll	v0,v0,0x5
80014bc0:	02228821 	addu	s1,s1,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014bc4:	40026000 	mfc0	v0,c0_status
80014bc8:	30420001 	andi	v0,v0,0x1
80014bcc:	14400040 	bnez	v0,80014cd0 <kmem_cache_free+0x17c>
80014bd0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014bd4:	8e330004 	lw	s3,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80014bd8:	7e730080 	ext	s3,s3,0x2,0x1
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:489
    bool intr_flag;
    struct Page *page = kva2page(objp);

    if (!PageSlab(page)) {
80014bdc:	12600098 	beqz	s3,80014e40 <kmem_cache_free+0x2ec>
80014be0:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80014be4:	40026000 	mfc0	v0,c0_status
80014be8:	30420001 	andi	v0,v0,0x1
80014bec:	10400003 	beqz	v0,80014bfc <kmem_cache_free+0xa8>
80014bf0:	00009821 	move	s3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80014bf4:	0c006d0c 	jal	8001b430 <intr_disable>
80014bf8:	24130001 	li	s3,1
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:494
        panic("not a slab page %08x\n", objp);
    }
    local_intr_save(intr_flag);
    {
        kmem_cache_free_one(cachep, GET_PAGE_SLAB(page), objp);
80014bfc:	8e310010 	lw	s1,16(s1)
kmem_cache_free_one():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:461
// kmem_cache_free_one - free an obj in a slab
//                     - if slab->inuse==0, then free the slab
static void
kmem_cache_free_one(kmem_cache_t *cachep, slab_t *slabp, void *objp) {
    //should not use divide operator ???
    size_t objnr = (objp - slabp->s_mem) >> cachep->objsize_shift;
80014c00:	8e420014 	lw	v0,20(s2)
80014c04:	8e230008 	lw	v1,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:462
    slab_bufctl(slabp)[objnr] = slabp->free;
80014c08:	8e240014 	lw	a0,20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:461
// kmem_cache_free_one - free an obj in a slab
//                     - if slab->inuse==0, then free the slab
static void
kmem_cache_free_one(kmem_cache_t *cachep, slab_t *slabp, void *objp) {
    //should not use divide operator ???
    size_t objnr = (objp - slabp->s_mem) >> cachep->objsize_shift;
80014c0c:	02038023 	subu	s0,s0,v1
80014c10:	00508007 	srav	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:462
    slab_bufctl(slabp)[objnr] = slabp->free;
80014c14:	26020006 	addiu	v0,s0,6
80014c18:	00021080 	sll	v0,v0,0x2
80014c1c:	02221021 	addu	v0,s1,v0
80014c20:	ac440000 	sw	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:465
    slabp->free = objnr;

    slabp->inuse --;
80014c24:	8e22000c 	lw	v0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:463
static void
kmem_cache_free_one(kmem_cache_t *cachep, slab_t *slabp, void *objp) {
    //should not use divide operator ???
    size_t objnr = (objp - slabp->s_mem) >> cachep->objsize_shift;
    slab_bufctl(slabp)[objnr] = slabp->free;
    slabp->free = objnr;
80014c28:	ae300014 	sw	s0,20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:465

    slabp->inuse --;
80014c2c:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:467

    if (slabp->inuse == 0) {
80014c30:	1040002e 	beqz	v0,80014cec <kmem_cache_free+0x198>
80014c34:	ae22000c 	sw	v0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:471
        list_del(&(slabp->slab_link));
        kmem_slab_destroy(cachep, slabp);
    }
    else if (slabp->inuse == cachep->num -1 ) {
80014c38:	8e430018 	lw	v1,24(s2)
80014c3c:	2463ffff 	addiu	v1,v1,-1
80014c40:	5043000e 	beql	v0,v1,80014c7c <kmem_cache_free+0x128>
80014c44:	8e240000 	lw	a0,0(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80014c48:	16600017 	bnez	s3,80014ca8 <kmem_cache_free+0x154>
80014c4c:	8fbf0034 	lw	ra,52(sp)
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:497
    local_intr_save(intr_flag);
    {
        kmem_cache_free_one(cachep, GET_PAGE_SLAB(page), objp);
    }
    local_intr_restore(intr_flag);
}
80014c50:	8fbf0034 	lw	ra,52(sp)
80014c54:	8fb70030 	lw	s7,48(sp)
80014c58:	8fb6002c 	lw	s6,44(sp)
80014c5c:	8fb50028 	lw	s5,40(sp)
80014c60:	8fb40024 	lw	s4,36(sp)
80014c64:	8fb30020 	lw	s3,32(sp)
80014c68:	8fb2001c 	lw	s2,28(sp)
80014c6c:	8fb10018 	lw	s1,24(sp)
80014c70:	8fb00014 	lw	s0,20(sp)
80014c74:	03e00008 	jr	ra
80014c78:	27bd0038 	addiu	sp,sp,56
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80014c7c:	8e230004 	lw	v1,4(s1)
kmem_cache_free_one():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:473
        list_del(&(slabp->slab_link));
        kmem_slab_destroy(cachep, slabp);
    }
    else if (slabp->inuse == cachep->num -1 ) {
        list_del(&(slabp->slab_link));
        list_add(&(cachep->slabs_notfull), &(slabp->slab_link));
80014c80:	26450008 	addiu	a1,s2,8
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80014c84:	ac830004 	sw	v1,4(a0)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80014c88:	8e42000c 	lw	v0,12(s2)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
	next->prev = prev;
80014c8c:	ac640000 	sw	a0,0(v1)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80014c90:	ae51000c 	sw	s1,12(s2)
80014c94:	ac510000 	sw	s1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80014c98:	ae220004 	sw	v0,4(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
80014c9c:	1260ffec 	beqz	s3,80014c50 <kmem_cache_free+0xfc>
80014ca0:	ae250000 	sw	a1,0(s1)
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:497
    local_intr_save(intr_flag);
    {
        kmem_cache_free_one(cachep, GET_PAGE_SLAB(page), objp);
    }
    local_intr_restore(intr_flag);
}
80014ca4:	8fbf0034 	lw	ra,52(sp)
80014ca8:	8fb70030 	lw	s7,48(sp)
80014cac:	8fb6002c 	lw	s6,44(sp)
80014cb0:	8fb50028 	lw	s5,40(sp)
80014cb4:	8fb40024 	lw	s4,36(sp)
80014cb8:	8fb30020 	lw	s3,32(sp)
80014cbc:	8fb2001c 	lw	s2,28(sp)
80014cc0:	8fb10018 	lw	s1,24(sp)
80014cc4:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80014cc8:	08006d08 	j	8001b420 <intr_enable>
80014ccc:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80014cd0:	0c006d0c 	jal	8001b430 <intr_disable>
80014cd4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014cd8:	8e330004 	lw	s3,4(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014cdc:	0c006d08 	jal	8001b420 <intr_enable>
80014ce0:	7e730080 	ext	s3,s3,0x2,0x1
80014ce4:	080052f7 	j	80014bdc <kmem_cache_free+0x88>
80014ce8:	00000000 	nop
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:439
static void kmem_cache_free(kmem_cache_t *cachep, void *obj);

// kmem_slab_destroy - call free_pages & kmem_cache_free to free a slab 
static void
kmem_slab_destroy(kmem_cache_t *cachep, slab_t *slabp) {
    struct Page *page = kva2page(slabp->s_mem - slabp->offset);
80014cec:	8e270010 	lw	a3,16(s1)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80014cf0:	8e240000 	lw	a0,0(s1)
80014cf4:	8e220004 	lw	v0,4(s1)
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:439
80014cf8:	00673823 	subu	a3,v1,a3
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80014cfc:	3c038000 	lui	v1,0x8000
80014d00:	24631000 	addiu	v1,v1,4096
80014d04:	00e3182b 	sltu	v1,a3,v1
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80014d08:	ac820004 	sw	v0,4(a0)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
80014d0c:	14600059 	bnez	v1,80014e74 <kmem_cache_free+0x320>
80014d10:	ac440000 	sw	a0,0(v0)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80014d14:	3c177fff 	lui	s7,0x7fff
80014d18:	8ea27770 	lw	v0,30576(s5)
80014d1c:	36f7f000 	ori	s7,s7,0xf000
80014d20:	00f73821 	addu	a3,a3,s7
80014d24:	00073b02 	srl	a3,a3,0xc
80014d28:	00e2102b 	sltu	v0,a3,v0
80014d2c:	1040003e 	beqz	v0,80014e28 <kmem_cache_free+0x2d4>
80014d30:	8e9777bc 	lw	s7,30652(s4)
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:442

    struct Page *p = page;
    size_t order_size = (1 << cachep->page_order);
80014d34:	8e420024 	lw	v0,36(s2)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80014d38:	00073940 	sll	a3,a3,0x5
80014d3c:	02e7b821 	addu	s7,s7,a3
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:442
80014d40:	24140001 	li	s4,1
80014d44:	0054a004 	sllv	s4,s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:441
// kmem_slab_destroy - call free_pages & kmem_cache_free to free a slab 
static void
kmem_slab_destroy(kmem_cache_t *cachep, slab_t *slabp) {
    struct Page *page = kva2page(slabp->s_mem - slabp->offset);

    struct Page *p = page;
80014d48:	02e08021 	move	s0,s7
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
80014d4c:	2416fffb 	li	s6,-5
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80014d50:	40026000 	mfc0	v0,c0_status
80014d54:	30420001 	andi	v0,v0,0x1
80014d58:	1440001c 	bnez	v0,80014dcc <kmem_cache_free+0x278>
80014d5c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014d60:	8e150004 	lw	s5,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
80014d64:	7eb50080 	ext	s5,s5,0x2,0x1
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:444
    size_t order_size = (1 << cachep->page_order);
    do {
        assert(PageSlab(p));
80014d68:	52a00028 	beqzl	s5,80014e0c <kmem_cache_free+0x2b8>
80014d6c:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80014d70:	40026000 	mfc0	v0,c0_status
80014d74:	30420001 	andi	v0,v0,0x1
80014d78:	1440001b 	bnez	v0,80014de8 <kmem_cache_free+0x294>
80014d7c:	00000000 	nop
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
80014d80:	8e020004 	lw	v0,4(s0)
80014d84:	00561024 	and	v0,v0,s6
80014d88:	ae020004 	sw	v0,4(s0)
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:447
        ClearPageSlab(p);
        p ++;
    } while (-- order_size);
80014d8c:	2694ffff 	addiu	s4,s4,-1
80014d90:	1680ffef 	bnez	s4,80014d50 <kmem_cache_free+0x1fc>
80014d94:	26100020 	addiu	s0,s0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:449

    free_pages(page, 1 << cachep->page_order);
80014d98:	8e420024 	lw	v0,36(s2)
80014d9c:	24050001 	li	a1,1
80014da0:	02e02021 	move	a0,s7
80014da4:	0c007449 	jal	8001d124 <free_pages>
80014da8:	00452804 	sllv	a1,a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:451

    if (cachep->off_slab) {
80014dac:	8e420020 	lw	v0,32(s2)
80014db0:	1040ffa5 	beqz	v0,80014c48 <kmem_cache_free+0xf4>
80014db4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:452
        kmem_cache_free(cachep->slab_cachep, slabp);
80014db8:	8e440028 	lw	a0,40(s2)
80014dbc:	0c0052d5 	jal	80014b54 <kmem_cache_free>
80014dc0:	02202821 	move	a1,s1
80014dc4:	08005312 	j	80014c48 <kmem_cache_free+0xf4>
80014dc8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80014dcc:	0c006d0c 	jal	8001b430 <intr_disable>
80014dd0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80014dd4:	8e150004 	lw	s5,4(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014dd8:	0c006d08 	jal	8001b420 <intr_enable>
80014ddc:	7eb50080 	ext	s5,s5,0x2,0x1
80014de0:	0800535a 	j	80014d68 <kmem_cache_free+0x214>
80014de4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80014de8:	0c006d0c 	jal	8001b430 <intr_disable>
80014dec:	00000000 	nop
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
80014df0:	8e020004 	lw	v0,4(s0)
80014df4:	00561024 	and	v0,v0,s6
80014df8:	ae020004 	sw	v0,4(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80014dfc:	0c006d08 	jal	8001b420 <intr_enable>
80014e00:	2694ffff 	addiu	s4,s4,-1
80014e04:	08005364 	j	80014d90 <kmem_cache_free+0x23c>
80014e08:	00000000 	nop
kmem_slab_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:444
    struct Page *page = kva2page(slabp->s_mem - slabp->offset);

    struct Page *p = page;
    size_t order_size = (1 << cachep->page_order);
    do {
        assert(PageSlab(p));
80014e0c:	3c068002 	lui	a2,0x8002
80014e10:	3c078002 	lui	a3,0x8002
80014e14:	248433c0 	addiu	a0,a0,13248
80014e18:	240501bc 	li	a1,444
80014e1c:	24c60e48 	addiu	a2,a2,3656
80014e20:	0c006b13 	jal	8001ac4c <__panic>
80014e24:	24e733e0 	addiu	a3,a3,13280
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
80014e28:	3c048002 	lui	a0,0x8002
80014e2c:	3c068002 	lui	a2,0x8002
80014e30:	24842a0c 	addiu	a0,a0,10764
80014e34:	24050063 	li	a1,99
80014e38:	0c006b13 	jal	8001ac4c <__panic>
80014e3c:	24c62a74 	addiu	a2,a2,10868
kmem_cache_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:490
kmem_cache_free(kmem_cache_t *cachep, void *objp) {
    bool intr_flag;
    struct Page *page = kva2page(objp);

    if (!PageSlab(page)) {
        panic("not a slab page %08x\n", objp);
80014e40:	3c068002 	lui	a2,0x8002
80014e44:	248433c0 	addiu	a0,a0,13248
80014e48:	240501ea 	li	a1,490
80014e4c:	24c633c8 	addiu	a2,a2,13256
80014e50:	0c006b13 	jal	8001ac4c <__panic>
80014e54:	02003821 	move	a3,s0
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80014e58:	3c048002 	lui	a0,0x8002
80014e5c:	3c068002 	lui	a2,0x8002
80014e60:	24842a0c 	addiu	a0,a0,10764
80014e64:	2405006f 	li	a1,111
80014e68:	24c62a50 	addiu	a2,a2,10832
80014e6c:	0c006b13 	jal	8001ac4c <__panic>
80014e70:	02003821 	move	a3,s0
80014e74:	3c048002 	lui	a0,0x8002
80014e78:	3c068002 	lui	a2,0x8002
80014e7c:	24842a0c 	addiu	a0,a0,10764
80014e80:	2405006f 	li	a1,111
80014e84:	0c006b13 	jal	8001ac4c <__panic>
80014e88:	24c62a50 	addiu	a2,a2,10832

80014e8c <slab_init>:
slab_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014e8c:	27bdffd0 	addiu	sp,sp,-48
80014e90:	afb3001c 	sw	s3,28(sp)
80014e94:	3c0f8015 	lui	t7,0x8015
calculate_slab_order():
80014e98:	3c138002 	lui	s3,0x8002
slab_init():
80014e9c:	afb20018 	sw	s2,24(sp)
80014ea0:	afb10014 	sw	s1,20(sp)
80014ea4:	afb00010 	sw	s0,16(sp)
80014ea8:	afbf002c 	sw	ra,44(sp)
80014eac:	afb60028 	sw	s6,40(sp)
80014eb0:	afb50024 	sw	s5,36(sp)
80014eb4:	afb40020 	sw	s4,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:121
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80014eb8:	00006021 	move	t4,zero
80014ebc:	25ef654c 	addiu	t7,t7,25932
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:122
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014ec0:	24180001 	li	t8,1
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80014ec4:	240d0012 	li	t5,18
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014ec8:	2673ffec 	addiu	s3,s3,-20
cache_estimate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:179

// cacahe_estimate - estimate the number of objs in a slab
static void
cache_estimate(size_t order, size_t objsize_shift, bool off_slab, size_t *remainder, size_t *num) {
    size_t nr_objs, mgmt_size;
    size_t slab_size = (PGSIZE << order);
80014ecc:	24121000 	li	s2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:202
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
            nr_objs --;
        }
        if (nr_objs > SLAB_LIMIT) {
80014ed0:	2411ffff 	li	s1,-1
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:226
//   left_over: the size of can not be used area in slab
static void
calculate_slab_order(kmem_cache_t *cachep, size_t objsize_shift, bool off_slab, size_t *left_over) {
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
80014ed4:	2410000b 	li	s0,11
slab_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:121
void
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80014ed8:	2419000d 	li	t9,13
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014edc:	25870005 	addiu	a3,t4,5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:122
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014ee0:	000c1080 	sll	v0,t4,0x2
80014ee4:	000c1900 	sll	v1,t4,0x4
80014ee8:	00f83804 	sllv	a3,t8,a3
80014eec:	00621823 	subu	v1,v1,v0
init_kmem_cache():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:272
static void
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
80014ef0:	24e7000f 	addiu	a3,a3,15
slab_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:122
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014ef4:	006c1823 	subu	v1,v1,t4
init_kmem_cache():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:272
static void
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
80014ef8:	00073902 	srl	a3,a3,0x4
80014efc:	00073900 	sll	a3,a3,0x4
slab_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:122
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
80014f00:	00031880 	sll	v1,v1,0x2
80014f04:	01e31821 	addu	v1,t7,v1
init_kmem_cache():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:274
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
    cachep->off_slab = (objsize >= (PGSIZE >> 3));
80014f08:	2cee0200 	sltiu	t6,a3,512
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:270

// init_kmem_cache - initial a slab_cache cachep according to the obj with the size = objsize
static void
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));
80014f0c:	24620008 	addiu	v0,v1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:274

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
    cachep->off_slab = (objsize >= (PGSIZE >> 3));
80014f10:	39ce0001 	xori	t6,t6,0x1
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80014f14:	2ce40021 	sltiu	a0,a3,33
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80014f18:	ac630004 	sw	v1,4(v1)
80014f1c:	ac630000 	sw	v1,0(v1)
80014f20:	ac62000c 	sw	v0,12(v1)
80014f24:	ac620008 	sw	v0,8(v1)
init_kmem_cache():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:273
init_kmem_cache(kmem_cache_t *cachep, size_t objsize) {
    list_init(&(cachep->slabs_full));
    list_init(&(cachep->slabs_notfull));

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
80014f28:	ac670010 	sw	a3,16(v1)
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80014f2c:	14800054 	bnez	a0,80015080 <slab_init+0x1f4>
80014f30:	ac6e0020 	sw	t6,32(v1)
80014f34:	24040040 	li	a0,64
80014f38:	24020006 	li	v0,6
80014f3c:	0087282b 	sltu	a1,a0,a3
80014f40:	10a0000a 	beqz	a1,80014f6c <slab_init+0xe0>
80014f44:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80014f48:	24420001 	addiu	v0,v0,1
80014f4c:	144dfffb 	bne	v0,t5,80014f3c <slab_init+0xb0>
80014f50:	00042040 	sll	a0,a0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:262
        if (n <= order_size) {
            return order;
        }
    }
    panic("getorder failed. %d\n", n);
80014f54:	3c048002 	lui	a0,0x8002
80014f58:	3c068002 	lui	a2,0x8002
80014f5c:	248433c0 	addiu	a0,a0,13248
80014f60:	24050106 	li	a1,262
80014f64:	0c006b13 	jal	8001ac4c <__panic>
80014f68:	24c633ec 	addiu	a2,a2,13292
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80014f6c:	00582804 	sllv	a1,t8,v0
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:198
    }
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
80014f70:	2456fffb 	addiu	s6,v0,-5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:231
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
        size_t num, remainder;
        cache_estimate(order, objsize_shift, off_slab, &remainder, &num);
        if (num != 0) {
            if (off_slab) {
                size_t off_slab_limit = objsize - sizeof(slab_t);
80014f74:	24a7ffe8 	addiu	a3,a1,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014f78:	0016b080 	sll	s6,s6,0x2
init_kmem_cache():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:276

    objsize = ROUNDUP_2N(objsize, ALIGN_SHIFT);
    cachep->objsize = objsize;
    cachep->off_slab = (objsize >= (PGSIZE >> 3));
//    cachep->off_slab = 1;
    cachep->objsize_shift = getorder(objsize);
80014f7c:	ac620014 	sw	v0,20(v1)
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:233
        cache_estimate(order, objsize_shift, off_slab, &remainder, &num);
        if (num != 0) {
            if (off_slab) {
                size_t off_slab_limit = objsize - sizeof(slab_t);
                /* sizeof(kmem_cache_t) == 4 */
                off_slab_limit /= sizeof(kmem_bufctl_t);
80014f80:	00073882 	srl	a3,a3,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80014f84:	0276b021 	addu	s6,s3,s6
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:226
//   left_over: the size of can not be used area in slab
static void
calculate_slab_order(kmem_cache_t *cachep, size_t objsize_shift, bool off_slab, size_t *left_over) {
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
80014f88:	0000a021 	move	s4,zero
cache_estimate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:182
cache_estimate(size_t order, size_t objsize_shift, bool off_slab, size_t *remainder, size_t *num) {
    size_t nr_objs, mgmt_size;
    size_t slab_size = (PGSIZE << order);
    size_t objsize = 1<<objsize_shift;

    if (off_slab) {
80014f8c:	11c0001a 	beqz	t6,80014ff8 <slab_init+0x16c>
80014f90:	02925004 	sllv	t2,s2,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:184
        mgmt_size = 0;
        nr_objs = slab_size >> objsize_shift;
80014f94:	02aa3006 	srlv	a2,t2,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:183
    size_t nr_objs, mgmt_size;
    size_t slab_size = (PGSIZE << order);
    size_t objsize = 1<<objsize_shift;

    if (off_slab) {
        mgmt_size = 0;
80014f98:	00004821 	move	t1,zero
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:229
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
        size_t num, remainder;
        cache_estimate(order, objsize_shift, off_slab, &remainder, &num);
        if (num != 0) {
80014f9c:	50c0000e 	beqzl	a2,80014fd8 <slab_init+0x14c>
80014fa0:	26940001 	addiu	s4,s4,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:230
            if (off_slab) {
80014fa4:	11c00005 	beqz	t6,80014fbc <slab_init+0x130>
80014fa8:	70c52002 	mul	a0,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:234
                size_t off_slab_limit = objsize - sizeof(slab_t);
                /* sizeof(kmem_cache_t) == 4 */
                off_slab_limit /= sizeof(kmem_bufctl_t);
                if (num > off_slab_limit) {
80014fac:	00e6102b 	sltu	v0,a3,a2
80014fb0:	1440002f 	bnez	v0,80015070 <slab_init+0x1e4>
80014fb4:	3c048002 	lui	a0,0x8002
cache_estimate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:212

        }
        mgmt_size = slab_mgmt_size(nr_objs);
    }
    *num = nr_objs;
    *remainder = slab_size - nr_objs * objsize - mgmt_size;
80014fb8:	70c52002 	mul	a0,a2,a1
80014fbc:	01441023 	subu	v0,t2,a0
80014fc0:	00494823 	subu	t1,v0,t1
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:240
                    //panic("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    kprintf("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    while (1);
                }
            }
            if (remainder * 8 <= (PGSIZE << order)) {
80014fc4:	000910c0 	sll	v0,t1,0x3
80014fc8:	0142502b 	sltu	t2,t2,v0
80014fcc:	51400030 	beqzl	t2,80015090 <slab_init+0x204>
80014fd0:	00063880 	sll	a3,a2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:226
//   left_over: the size of can not be used area in slab
static void
calculate_slab_order(kmem_cache_t *cachep, size_t objsize_shift, bool off_slab, size_t *left_over) {
    size_t order;
    size_t objsize = 1 << objsize_shift;
    for (order = 0; order <= KMALLOC_MAX_ORDER; order ++) {
80014fd4:	26940001 	addiu	s4,s4,1
80014fd8:	1690ffec 	bne	s4,s0,80014f8c <slab_init+0x100>
80014fdc:	26d60020 	addiu	s6,s6,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:250
                }
                return ;
            }
        }
    }
    panic("calculate_slab_over: failed.");
80014fe0:	3c048002 	lui	a0,0x8002
80014fe4:	3c068002 	lui	a2,0x8002
80014fe8:	248433c0 	addiu	a0,a0,13248
80014fec:	240500fa 	li	a1,250
80014ff0:	0c006b13 	jal	8001ac4c <__panic>
80014ff4:	24c6344c 	addiu	a2,a2,13388
cache_estimate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:198
    }
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
80014ff8:	8ec60000 	lw	a2,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:199
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80014ffc:	70c52002 	mul	a0,a2,a1
slab_mgmt_size():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:167
}

// slab_mgmt_size - get the size of slab control area (slab_t+num*kmem_bufctl_t)
static size_t
slab_mgmt_size(size_t num) {
    return ROUNDUP_2N(sizeof(slab_t) + num * sizeof(kmem_bufctl_t), ALIGN_SHIFT);
80015000:	00064880 	sll	t1,a2,0x2
80015004:	25290027 	addiu	t1,t1,39
80015008:	00094902 	srl	t1,t1,0x4
8001500c:	00094900 	sll	t1,t1,0x4
cache_estimate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80015010:	00891021 	addu	v0,a0,t1
80015014:	0142102b 	sltu	v0,t2,v0
80015018:	1040000f 	beqz	v0,80015058 <slab_init+0x1cc>
8001501c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:117

#define ALIGN_SHIFT 4

//slab_init - call init_kmem_cache function to reset the slab_cache array
void
slab_init(void) {
80015020:	24c8ffff 	addiu	t0,a2,-1
80015024:	00061080 	sll	v0,a2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80015028:	71052002 	mul	a0,t0,a1
8001502c:	0800540e 	j	80015038 <slab_init+0x1ac>
80015030:	24420023 	addiu	v0,v0,35
80015034:	2508ffff 	addiu	t0,t0,-1
slab_mgmt_size():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:167
}

// slab_mgmt_size - get the size of slab control area (slab_t+num*kmem_bufctl_t)
static size_t
slab_mgmt_size(size_t num) {
    return ROUNDUP_2N(sizeof(slab_t) + num * sizeof(kmem_bufctl_t), ALIGN_SHIFT);
80015038:	00024902 	srl	t1,v0,0x4
8001503c:	00094900 	sll	t1,t1,0x4
cache_estimate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
80015040:	00895821 	addu	t3,a0,t1
80015044:	014b582b 	sltu	t3,t2,t3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:200
            nr_objs --;
80015048:	01003021 	move	a2,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:199
    else {
        /* no div! precomputed */
        //panic("no div, precompute?");
        //nr_objs = (slab_size - sizeof(slab_t)) / (objsize + sizeof(kmem_bufctl_t));
        nr_objs = __slab_div_table[order][objsize_shift - 5];
        while (slab_mgmt_size(nr_objs) + nr_objs * objsize > slab_size) {
8001504c:	2442fffc 	addiu	v0,v0,-4
80015050:	1560fff8 	bnez	t3,80015034 <slab_init+0x1a8>
80015054:	00852023 	subu	a0,a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:202
            nr_objs --;
        }
        if (nr_objs > SLAB_LIMIT) {
80015058:	14d1ffd0 	bne	a2,s1,80014f9c <slab_init+0x110>
8001505c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:205
            nr_objs = SLAB_LIMIT;

                kprintf("found2!\n");
80015060:	0c007aa6 	jal	8001ea98 <kprintf>
80015064:	24843404 	addiu	a0,a0,13316
80015068:	0800541a 	j	80015068 <slab_init+0x1dc>
8001506c:	00000000 	nop
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:236
                size_t off_slab_limit = objsize - sizeof(slab_t);
                /* sizeof(kmem_cache_t) == 4 */
                off_slab_limit /= sizeof(kmem_bufctl_t);
                if (num > off_slab_limit) {
                    //panic("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    kprintf("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
80015070:	0c007aa6 	jal	8001ea98 <kprintf>
80015074:	24843410 	addiu	a0,a0,13328
80015078:	0800541e 	j	80015078 <slab_init+0x1ec>
8001507c:	00000000 	nop
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015080:	24050020 	li	a1,32
80015084:	24150005 	li	s5,5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:256
}

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
80015088:	080053dc 	j	80014f70 <slab_init+0xe4>
8001508c:	24020005 	li	v0,5
slab_mgmt_size():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:167
}

// slab_mgmt_size - get the size of slab control area (slab_t+num*kmem_bufctl_t)
static size_t
slab_mgmt_size(size_t num) {
    return ROUNDUP_2N(sizeof(slab_t) + num * sizeof(kmem_bufctl_t), ALIGN_SHIFT);
80015090:	24e70027 	addiu	a3,a3,39
80015094:	00073902 	srl	a3,a3,0x4
calculate_slab_order():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:241
                    kprintf("off_slab: objsize = %d, num = %08x off_slab_limit = %08x.", objsize, num, off_slab_limit);
                    while (1);
                }
            }
            if (remainder * 8 <= (PGSIZE << order)) {
                cachep->num = num;
80015098:	ac660018 	sw	a2,24(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:242
                cachep->page_order = order;
8001509c:	ac740024 	sw	s4,36(v1)
init_kmem_cache():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:285

    assert(cachep->num > 0);

    size_t mgmt_size = slab_mgmt_size(cachep->num);

    if (cachep->off_slab && left_over >= mgmt_size) {
800150a0:	11c00005 	beqz	t6,800150b8 <slab_init+0x22c>
800150a4:	00073900 	sll	a3,a3,0x4
800150a8:	0127482b 	sltu	t1,t1,a3
800150ac:	1520000f 	bnez	t1,800150ec <slab_init+0x260>
800150b0:	2ce20021 	sltiu	v0,a3,33
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:286
        cachep->off_slab = 0;
800150b4:	ac600020 	sw	zero,32(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:294
    if (cachep->off_slab) {
        cachep->offset = 0;
        cachep->slab_cachep = slab_cache + (getorder(mgmt_size) - MIN_SIZE_ORDER);
    }
    else {
        cachep->offset = mgmt_size;
800150b8:	ac67001c 	sw	a3,28(v1)
slab_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:121
void
slab_init(void) {
    size_t i;
    //the align bit for obj in slab. 2^n could be better for performance
    //size_t align = 16;
    for (i = 0; i < SLAB_CACHE_NUM; i ++) {
800150bc:	258c0001 	addiu	t4,t4,1
800150c0:	1599ff86 	bne	t4,t9,80014edc <slab_init+0x50>
800150c4:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:125
        init_kmem_cache(slab_cache + i, 1 << (i + MIN_SIZE_ORDER));
    }
    //check_slab();
}
800150c8:	8fb60028 	lw	s6,40(sp)
800150cc:	8fb50024 	lw	s5,36(sp)
800150d0:	8fb40020 	lw	s4,32(sp)
800150d4:	8fb3001c 	lw	s3,28(sp)
800150d8:	8fb20018 	lw	s2,24(sp)
800150dc:	8fb10014 	lw	s1,20(sp)
800150e0:	8fb00010 	lw	s0,16(sp)
800150e4:	03e00008 	jr	ra
800150e8:	27bd0030 	addiu	sp,sp,48
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
800150ec:	1440000b 	bnez	v0,8001511c <slab_init+0x290>
800150f0:	ac60001c 	sw	zero,28(v1)
800150f4:	24040040 	li	a0,64
800150f8:	24020006 	li	v0,6
800150fc:	0087282b 	sltu	a1,a0,a3
80015100:	50a00009 	beqzl	a1,80015128 <slab_init+0x29c>
80015104:	00022080 	sll	a0,v0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80015108:	24420001 	addiu	v0,v0,1
8001510c:	144dfffb 	bne	v0,t5,800150fc <slab_init+0x270>
80015110:	00042040 	sll	a0,a0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:262
        if (n <= order_size) {
            return order;
        }
    }
    panic("getorder failed. %d\n", n);
80015114:	080053d6 	j	80014f58 <slab_init+0xcc>
80015118:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
8001511c:	01e01021 	move	v0,t7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:291
        cachep->off_slab = 0;
    }

    if (cachep->off_slab) {
        cachep->offset = 0;
        cachep->slab_cachep = slab_cache + (getorder(mgmt_size) - MIN_SIZE_ORDER);
80015120:	0800542f 	j	800150bc <slab_init+0x230>
80015124:	ac620028 	sw	v0,40(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015128:	00022900 	sll	a1,v0,0x4
8001512c:	00a42023 	subu	a0,a1,a0
80015130:	00821023 	subu	v0,a0,v0
80015134:	00021080 	sll	v0,v0,0x2
80015138:	2442ff24 	addiu	v0,v0,-220
8001513c:	08005448 	j	80015120 <slab_init+0x294>
80015140:	01e21021 	addu	v0,t7,v0

80015144 <kmalloc_init>:
kmalloc_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:128
    }
    //check_slab();
}

inline void 
kmalloc_init(void) {
80015144:	27bdffe8 	addiu	sp,sp,-24
80015148:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:129
	slab_init();
8001514c:	0c0053a3 	jal	80014e8c <slab_init>
80015150:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:131
	kprintf("kmalloc_init() succeeded!\n");
}
80015154:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:130
}

inline void 
kmalloc_init(void) {
	slab_init();
	kprintf("kmalloc_init() succeeded!\n");
80015158:	3c048002 	lui	a0,0x8002
8001515c:	2484346c 	addiu	a0,a0,13420
80015160:	08007aa6 	j	8001ea98 <kprintf>
80015164:	27bd0018 	addiu	sp,sp,24

80015168 <slab_allocated>:
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:135
}

//slab_allocated - summary the total size of allocated objs
size_t
slab_allocated(void) {
80015168:	27bdffe0 	addiu	sp,sp,-32
8001516c:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80015170:	40026000 	mfc0	v0,c0_status
80015174:	30420001 	andi	v0,v0,0x1
80015178:	10400004 	beqz	v0,8001518c <slab_allocated+0x24>
8001517c:	00005021 	move	t2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80015180:	0c006d0c 	jal	8001b430 <intr_disable>
80015184:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80015188:	240a0001 	li	t2,1
8001518c:	3c098015 	lui	t1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:141
    size_t total = 0;
    int i;
    bool intr_flag;
    local_intr_save(intr_flag);
    {
        for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80015190:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:136
}

//slab_allocated - summary the total size of allocated objs
size_t
slab_allocated(void) {
    size_t total = 0;
80015194:	00001021 	move	v0,zero
80015198:	2529654c 	addiu	t1,t1,25932
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:141
    int i;
    bool intr_flag;
    local_intr_save(intr_flag);
    {
        for (i = 0; i < SLAB_CACHE_NUM; i ++) {
8001519c:	2408000d 	li	t0,13
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:142
            kmem_cache_t *cachep = slab_cache + i;
800151a0:	00071900 	sll	v1,a3,0x4
800151a4:	00072080 	sll	a0,a3,0x2
800151a8:	00642023 	subu	a0,v1,a0
800151ac:	00872023 	subu	a0,a0,a3
800151b0:	00042080 	sll	a0,a0,0x2
800151b4:	01242021 	addu	a0,t1,a0
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800151b8:	8c830004 	lw	v1,4(a0)
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:145
            list_entry_t *list, *le;
            list = le = &(cachep->slabs_full);
            while ((le = list_next(le)) != list) {
800151bc:	50830008 	beql	a0,v1,800151e0 <slab_allocated+0x78>
800151c0:	8c83000c 	lw	v1,12(a0)
800151c4:	8c850018 	lw	a1,24(a0)
800151c8:	8c860010 	lw	a2,16(a0)
800151cc:	70c52802 	mul	a1,a2,a1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800151d0:	8c630004 	lw	v1,4(v1)
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:145
800151d4:	1483fffe 	bne	a0,v1,800151d0 <slab_allocated+0x68>
800151d8:	00451021 	addu	v0,v0,a1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800151dc:	8c83000c 	lw	v1,12(a0)
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:148
                total += cachep->num * cachep->objsize;
            }
            list = le = &(cachep->slabs_notfull);
800151e0:	24850008 	addiu	a1,a0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:149
            while ((le = list_next(le)) != list) {
800151e4:	50a30008 	beql	a1,v1,80015208 <slab_allocated+0xa0>
800151e8:	24e70001 	addiu	a3,a3,1
800151ec:	8c860010 	lw	a2,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:151
                slab_t *slabp = le2slab(le, slab_link);
                total += slabp->inuse * cachep->objsize;
800151f0:	8c64000c 	lw	a0,12(v1)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
800151f4:	8c630004 	lw	v1,4(v1)
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:151
800151f8:	70c45802 	mul	t3,a2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:149
            list = le = &(cachep->slabs_full);
            while ((le = list_next(le)) != list) {
                total += cachep->num * cachep->objsize;
            }
            list = le = &(cachep->slabs_notfull);
            while ((le = list_next(le)) != list) {
800151fc:	14a3fffc 	bne	a1,v1,800151f0 <slab_allocated+0x88>
80015200:	01621021 	addu	v0,t3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:141
    size_t total = 0;
    int i;
    bool intr_flag;
    local_intr_save(intr_flag);
    {
        for (i = 0; i < SLAB_CACHE_NUM; i ++) {
80015204:	24e70001 	addiu	a3,a3,1
80015208:	54e8ffe6 	bnel	a3,t0,800151a4 <slab_allocated+0x3c>
8001520c:	00071900 	sll	v1,a3,0x4
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80015210:	11400005 	beqz	t2,80015228 <slab_allocated+0xc0>
80015214:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80015218:	0c006d08 	jal	8001b420 <intr_enable>
8001521c:	afa20010 	sw	v0,16(sp)
80015220:	8fa20010 	lw	v0,16(sp)
slab_allocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:157
            }
        }
    }
    local_intr_restore(intr_flag);
    return total;
}
80015224:	8fbf001c 	lw	ra,28(sp)
80015228:	03e00008 	jr	ra
8001522c:	27bd0020 	addiu	sp,sp,32

80015230 <kallocated>:
kallocated():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:161

inline size_t
kallocated(void) {
   return slab_allocated();
80015230:	0800545a 	j	80015168 <slab_allocated>
80015234:	00000000 	nop

80015238 <kmalloc>:
kmalloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:425
}

// kmalloc - simple interface used by outside functions 
//         - to allocate a free memory using kmem_cache_alloc function
void *
kmalloc(size_t size) {
80015238:	27bdffe8 	addiu	sp,sp,-24
8001523c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:426
    assert(size > 0);
80015240:	10800020 	beqz	a0,800152c4 <kmalloc+0x8c>
80015244:	00803821 	move	a3,a0
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
80015248:	2c820021 	sltiu	v0,a0,33
8001524c:	1440001a 	bnez	v0,800152b8 <kmalloc+0x80>
80015250:	24030040 	li	v1,64
80015254:	24020006 	li	v0,6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80015258:	24050012 	li	a1,18
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
        if (n <= order_size) {
8001525c:	0067202b 	sltu	a0,v1,a3
80015260:	5080000a 	beqzl	a0,8001528c <kmalloc+0x54>
80015264:	00022100 	sll	a0,v0,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:257

// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
80015268:	24420001 	addiu	v0,v0,1
8001526c:	1445fffb 	bne	v0,a1,8001525c <kmalloc+0x24>
80015270:	00031840 	sll	v1,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:262
        if (n <= order_size) {
            return order;
        }
    }
    panic("getorder failed. %d\n", n);
80015274:	3c048002 	lui	a0,0x8002
80015278:	3c068002 	lui	a2,0x8002
8001527c:	248433c0 	addiu	a0,a0,13248
80015280:	24050106 	li	a1,262
80015284:	0c006b13 	jal	8001ac4c <__panic>
80015288:	24c633ec 	addiu	a2,a2,13292
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
8001528c:	00021880 	sll	v1,v0,0x2
80015290:	00831823 	subu	v1,a0,v1
80015294:	00621023 	subu	v0,v1,v0
80015298:	00021080 	sll	v0,v0,0x2
8001529c:	3c048015 	lui	a0,0x8015
800152a0:	2442ff24 	addiu	v0,v0,-220
800152a4:	2484654c 	addiu	a0,a0,25932
800152a8:	00822021 	addu	a0,a0,v0
kmalloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:432
    size_t order = getorder(size);
    if (order > MAX_SIZE_ORDER) {
        return NULL;
    }
    return kmem_cache_alloc(slab_cache + (order - MIN_SIZE_ORDER));
}
800152ac:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:431
    assert(size > 0);
    size_t order = getorder(size);
    if (order > MAX_SIZE_ORDER) {
        return NULL;
    }
    return kmem_cache_alloc(slab_cache + (order - MIN_SIZE_ORDER));
800152b0:	08005208 	j	80014820 <kmem_cache_alloc>
800152b4:	27bd0018 	addiu	sp,sp,24
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:258
// getorder - find order, should satisfy n <= minest 2^order
static inline size_t
getorder(size_t n) {
    size_t order = MIN_SIZE_ORDER, order_size = (1 << order);
    for (; order <= MAX_SIZE_ORDER; order ++, order_size <<= 1) {
        if (n <= order_size) {
800152b8:	3c048015 	lui	a0,0x8015
800152bc:	080054ab 	j	800152ac <kmalloc+0x74>
800152c0:	2484654c 	addiu	a0,a0,25932
kmalloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:426

// kmalloc - simple interface used by outside functions 
//         - to allocate a free memory using kmem_cache_alloc function
void *
kmalloc(size_t size) {
    assert(size > 0);
800152c4:	3c048002 	lui	a0,0x8002
800152c8:	3c068002 	lui	a2,0x8002
800152cc:	3c078002 	lui	a3,0x8002
800152d0:	248433c0 	addiu	a0,a0,13248
800152d4:	240501aa 	li	a1,426
800152d8:	24c60e48 	addiu	a2,a2,3656
800152dc:	0c006b13 	jal	8001ac4c <__panic>
800152e0:	24e73488 	addiu	a3,a3,13448

800152e4 <kfree>:
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
800152e4:	3c028000 	lui	v0,0x8000
800152e8:	24421000 	addiu	v0,v0,4096
kfree():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:501
    local_intr_restore(intr_flag);
}

// kfree - simple interface used by ooutside functions to free an obj
void
kfree(void *objp) {
800152ec:	27bdffe8 	addiu	sp,sp,-24
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
800152f0:	0082102b 	sltu	v0,a0,v0
kfree():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:501
800152f4:	afbf0014 	sw	ra,20(sp)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
800152f8:	14400012 	bnez	v0,80015344 <kfree+0x60>
800152fc:	00803821 	move	a3,a0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80015300:	3c028015 	lui	v0,0x8015
80015304:	8c437770 	lw	v1,30576(v0)
80015308:	3c027fff 	lui	v0,0x7fff
8001530c:	3442f000 	ori	v0,v0,0xf000
80015310:	00821021 	addu	v0,a0,v0
80015314:	00021302 	srl	v0,v0,0xc
80015318:	0043182b 	sltu	v1,v0,v1
8001531c:	1060000f 	beqz	v1,8001535c <kfree+0x78>
80015320:	3c038015 	lui	v1,0x8015
kfree():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:502
    kmem_cache_free(GET_PAGE_CACHE(kva2page(objp)), objp);
80015324:	8c6377bc 	lw	v1,30652(v1)
80015328:	00021140 	sll	v0,v0,0x5
8001532c:	00802821 	move	a1,a0
80015330:	00621021 	addu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:503
}
80015334:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/slab.c:502
}

// kfree - simple interface used by ooutside functions to free an obj
void
kfree(void *objp) {
    kmem_cache_free(GET_PAGE_CACHE(kva2page(objp)), objp);
80015338:	8c440014 	lw	a0,20(v0)
8001533c:	080052d5 	j	80014b54 <kmem_cache_free>
80015340:	27bd0018 	addiu	sp,sp,24
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
80015344:	3c048002 	lui	a0,0x8002
80015348:	3c068002 	lui	a2,0x8002
8001534c:	24842a0c 	addiu	a0,a0,10764
80015350:	2405006f 	li	a1,111
80015354:	0c006b13 	jal	8001ac4c <__panic>
80015358:	24c62a50 	addiu	a2,a2,10832
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001535c:	3c048002 	lui	a0,0x8002
80015360:	3c068002 	lui	a2,0x8002
80015364:	24842a0c 	addiu	a0,a0,10764
80015368:	24050063 	li	a1,99
8001536c:	0c006b13 	jal	8001ac4c <__panic>
80015370:	24c62a74 	addiu	a2,a2,10868

80015374 <check_compare1>:
check_compare1():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:419
#define rbn2data(node)              \
    (to_struct(node, struct check_data, rb_link))

static inline int check_compare1(rb_node * node1, rb_node * node2)
{
	return rbn2data(node1)->data - rbn2data(node2)->data;
80015374:	8c82fffc 	lw	v0,-4(a0)
80015378:	8ca3fffc 	lw	v1,-4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:420
}
8001537c:	03e00008 	jr	ra
80015380:	00431023 	subu	v0,v0,v1

80015384 <check_compare2>:
check_compare2():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:424

static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
80015384:	8c82fffc 	lw	v0,-4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:425
}
80015388:	03e00008 	jr	ra
8001538c:	00451023 	subu	v0,v0,a1

80015390 <rb_left_rotate>:
rb_left_rotate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:100
    y->_left = x;                                               \
    x->parent = y;                                              \
    assert(!(nil->red));                                        \
}

FUNC_ROTATE(rb_left_rotate, left, right);
80015390:	8c820008 	lw	v0,8(a0)
80015394:	27bdffe8 	addiu	sp,sp,-24
80015398:	afbf0014 	sw	ra,20(sp)
8001539c:	8c840004 	lw	a0,4(a0)
800153a0:	10450017 	beq	v0,a1,80015400 <rb_left_rotate+0x70>
800153a4:	8ca3000c 	lw	v1,12(a1)
800153a8:	50a40016 	beql	a1,a0,80015404 <rb_left_rotate+0x74>
800153ac:	3c048002 	lui	a0,0x8002
800153b0:	50640014 	beql	v1,a0,80015404 <rb_left_rotate+0x74>
800153b4:	3c048002 	lui	a0,0x8002
800153b8:	8c620008 	lw	v0,8(v1)
800153bc:	10820002 	beq	a0,v0,800153c8 <rb_left_rotate+0x38>
800153c0:	aca2000c 	sw	v0,12(a1)
800153c4:	ac450004 	sw	a1,4(v0)
800153c8:	8ca20004 	lw	v0,4(a1)
800153cc:	ac620004 	sw	v0,4(v1)
800153d0:	8ca20004 	lw	v0,4(a1)
800153d4:	8c460008 	lw	a2,8(v0)
800153d8:	50c50002 	beql	a2,a1,800153e4 <rb_left_rotate+0x54>
800153dc:	ac430008 	sw	v1,8(v0)
800153e0:	ac43000c 	sw	v1,12(v0)
800153e4:	8c820000 	lw	v0,0(a0)
800153e8:	ac650008 	sw	a1,8(v1)
800153ec:	1440000c 	bnez	v0,80015420 <rb_left_rotate+0x90>
800153f0:	aca30004 	sw	v1,4(a1)
800153f4:	8fbf0014 	lw	ra,20(sp)
800153f8:	03e00008 	jr	ra
800153fc:	27bd0018 	addiu	sp,sp,24
80015400:	3c048002 	lui	a0,0x8002
80015404:	3c068002 	lui	a2,0x8002
80015408:	3c078002 	lui	a3,0x8002
8001540c:	24843494 	addiu	a0,a0,13460
80015410:	24050064 	li	a1,100
80015414:	24c60e48 	addiu	a2,a2,3656
80015418:	0c006b13 	jal	8001ac4c <__panic>
8001541c:	24e734a0 	addiu	a3,a3,13472
80015420:	3c048002 	lui	a0,0x8002
80015424:	3c068002 	lui	a2,0x8002
80015428:	3c078002 	lui	a3,0x8002
8001542c:	24843494 	addiu	a0,a0,13460
80015430:	24050064 	li	a1,100
80015434:	24c60e48 	addiu	a2,a2,3656
80015438:	0c006b13 	jal	8001ac4c <__panic>
8001543c:	24e734c8 	addiu	a3,a3,13512

80015440 <rb_right_rotate>:
rb_right_rotate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:101
FUNC_ROTATE(rb_right_rotate, right, left);
80015440:	8c820008 	lw	v0,8(a0)
80015444:	27bdffe8 	addiu	sp,sp,-24
80015448:	afbf0014 	sw	ra,20(sp)
8001544c:	8c840004 	lw	a0,4(a0)
80015450:	10450017 	beq	v0,a1,800154b0 <rb_right_rotate+0x70>
80015454:	8ca30008 	lw	v1,8(a1)
80015458:	50a40016 	beql	a1,a0,800154b4 <rb_right_rotate+0x74>
8001545c:	3c048002 	lui	a0,0x8002
80015460:	50640014 	beql	v1,a0,800154b4 <rb_right_rotate+0x74>
80015464:	3c048002 	lui	a0,0x8002
80015468:	8c62000c 	lw	v0,12(v1)
8001546c:	10820002 	beq	a0,v0,80015478 <rb_right_rotate+0x38>
80015470:	aca20008 	sw	v0,8(a1)
80015474:	ac450004 	sw	a1,4(v0)
80015478:	8ca20004 	lw	v0,4(a1)
8001547c:	ac620004 	sw	v0,4(v1)
80015480:	8ca20004 	lw	v0,4(a1)
80015484:	8c46000c 	lw	a2,12(v0)
80015488:	50c50002 	beql	a2,a1,80015494 <rb_right_rotate+0x54>
8001548c:	ac43000c 	sw	v1,12(v0)
80015490:	ac430008 	sw	v1,8(v0)
80015494:	8c820000 	lw	v0,0(a0)
80015498:	ac65000c 	sw	a1,12(v1)
8001549c:	1440000c 	bnez	v0,800154d0 <rb_right_rotate+0x90>
800154a0:	aca30004 	sw	v1,4(a1)
800154a4:	8fbf0014 	lw	ra,20(sp)
800154a8:	03e00008 	jr	ra
800154ac:	27bd0018 	addiu	sp,sp,24
800154b0:	3c048002 	lui	a0,0x8002
800154b4:	3c068002 	lui	a2,0x8002
800154b8:	3c078002 	lui	a3,0x8002
800154bc:	24843494 	addiu	a0,a0,13460
800154c0:	24050065 	li	a1,101
800154c4:	24c60e48 	addiu	a2,a2,3656
800154c8:	0c006b13 	jal	8001ac4c <__panic>
800154cc:	24e734a0 	addiu	a3,a3,13472
800154d0:	3c048002 	lui	a0,0x8002
800154d4:	3c068002 	lui	a2,0x8002
800154d8:	3c078002 	lui	a3,0x8002
800154dc:	24843494 	addiu	a0,a0,13460
800154e0:	24050065 	li	a1,101
800154e4:	24c60e48 	addiu	a2,a2,3656
800154e8:	0c006b13 	jal	8001ac4c <__panic>
800154ec:	24e734c8 	addiu	a3,a3,13512

800154f0 <check_safe_kmalloc>:
check_safe_kmalloc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:403
	}
	return hb;
}

static void *check_safe_kmalloc(size_t size)
{
800154f0:	27bdffe8 	addiu	sp,sp,-24
800154f4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:404
	void *ret = kmalloc(size);
800154f8:	0c00548e 	jal	80015238 <kmalloc>
800154fc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:405
	assert(ret != NULL);
80015500:	10400003 	beqz	v0,80015510 <check_safe_kmalloc+0x20>
80015504:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:407
	return ret;
}
80015508:	03e00008 	jr	ra
8001550c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:405
}

static void *check_safe_kmalloc(size_t size)
{
	void *ret = kmalloc(size);
	assert(ret != NULL);
80015510:	3c048002 	lui	a0,0x8002
80015514:	3c068002 	lui	a2,0x8002
80015518:	3c078002 	lui	a3,0x8002
8001551c:	24843494 	addiu	a0,a0,13460
80015520:	24050195 	li	a1,405
80015524:	24c60e48 	addiu	a2,a2,3656
80015528:	0c006b13 	jal	8001ac4c <__panic>
8001552c:	24e734d4 	addiu	a3,a3,13524

80015530 <rb_tree_create>:
rb_tree_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:30
 * Note that, root->left should always point to the node that is the root
 * of the tree. And nil points to a 'NULL' node which should always be
 * black and may have arbitrary children and parent node.
 * */
rb_tree *rb_tree_create(int (*compare) (rb_node * node1, rb_node * node2))
{
80015530:	27bdffe0 	addiu	sp,sp,-32
80015534:	afb00014 	sw	s0,20(sp)
80015538:	afbf001c 	sw	ra,28(sp)
8001553c:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:31
	assert(compare != NULL);
80015540:	10800024 	beqz	a0,800155d4 <rb_tree_create+0xa4>
80015544:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:36

	rb_tree *tree;
	rb_node *nil, *root;

	if ((tree = kmalloc(sizeof(rb_tree))) == NULL) {
80015548:	0c00548e 	jal	80015238 <kmalloc>
8001554c:	2404000c 	li	a0,12
80015550:	10400014 	beqz	v0,800155a4 <rb_tree_create+0x74>
80015554:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:40
		goto bad_tree;
	}

	tree->compare = compare;
80015558:	ac500000 	sw	s0,0(v0)
rb_node_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:11
#include <assert.h>

/* rb_node_create - create a new rb_node */
static inline rb_node *rb_node_create(void)
{
	return kmalloc(sizeof(rb_node));
8001555c:	0c00548e 	jal	80015238 <kmalloc>
80015560:	24040010 	li	a0,16
rb_tree_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:42
		goto bad_tree;
	}

	tree->compare = compare;

	if ((nil = rb_node_create()) == NULL) {
80015564:	10400017 	beqz	v0,800155c4 <rb_tree_create+0x94>
80015568:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:46
		goto bad_node_cleanup_tree;
	}

	nil->parent = nil->left = nil->right = nil;
8001556c:	ac42000c 	sw	v0,12(v0)
80015570:	ac420008 	sw	v0,8(v0)
80015574:	ac420004 	sw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:47
	nil->red = 0;
80015578:	ac400000 	sw	zero,0(v0)
rb_node_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:11
#include <assert.h>

/* rb_node_create - create a new rb_node */
static inline rb_node *rb_node_create(void)
{
	return kmalloc(sizeof(rb_node));
8001557c:	24040010 	li	a0,16
80015580:	0c00548e 	jal	80015238 <kmalloc>
80015584:	ae220004 	sw	v0,4(s1)
rb_tree_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:50

	nil->parent = nil->left = nil->right = nil;
	nil->red = 0;
	tree->nil = nil;

	if ((root = rb_node_create()) == NULL) {
80015588:	1040000c 	beqz	v0,800155bc <rb_tree_create+0x8c>
8001558c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:54
		goto bad_node_cleanup_nil;
	}

	root->parent = root->left = root->right = nil;
80015590:	ac50000c 	sw	s0,12(v0)
80015594:	ac500008 	sw	s0,8(v0)
80015598:	ac500004 	sw	s0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:55
	root->red = 0;
8001559c:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:56
	tree->root = root;
800155a0:	ae220008 	sw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:65
	kfree(nil);
bad_node_cleanup_tree:
	kfree(tree);
bad_tree:
	return NULL;
}
800155a4:	8fbf001c 	lw	ra,28(sp)
800155a8:	02201021 	move	v0,s1
800155ac:	8fb00014 	lw	s0,20(sp)
800155b0:	8fb10018 	lw	s1,24(sp)
800155b4:	03e00008 	jr	ra
800155b8:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:60
	root->red = 0;
	tree->root = root;
	return tree;

bad_node_cleanup_nil:
	kfree(nil);
800155bc:	0c0054b9 	jal	800152e4 <kfree>
800155c0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:62
bad_node_cleanup_tree:
	kfree(tree);
800155c4:	0c0054b9 	jal	800152e4 <kfree>
800155c8:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:64
bad_tree:
	return NULL;
800155cc:	08005569 	j	800155a4 <rb_tree_create+0x74>
800155d0:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:31
 * of the tree. And nil points to a 'NULL' node which should always be
 * black and may have arbitrary children and parent node.
 * */
rb_tree *rb_tree_create(int (*compare) (rb_node * node1, rb_node * node2))
{
	assert(compare != NULL);
800155d4:	3c048002 	lui	a0,0x8002
800155d8:	3c068002 	lui	a2,0x8002
800155dc:	3c078002 	lui	a3,0x8002
800155e0:	24843494 	addiu	a0,a0,13460
800155e4:	2405001f 	li	a1,31
800155e8:	24c60e48 	addiu	a2,a2,3656
800155ec:	0c006b13 	jal	8001ac4c <__panic>
800155f0:	24e734e0 	addiu	a3,a3,13536

800155f4 <rb_insert>:
rb_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
800155f4:	27bdffd8 	addiu	sp,sp,-40
800155f8:	afb40020 	sw	s4,32(sp)
rb_insert_binary():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:115
 * a regular binary tree. This function is only intended to be called
 * by function rb_insert.
 * */
static inline void rb_insert_binary(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;
800155fc:	8c940004 	lw	s4,4(a0)
rb_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
80015600:	afb00010 	sw	s0,16(sp)
rb_insert_binary():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:115
 * a regular binary tree. This function is only intended to be called
 * by function rb_insert.
 * */
static inline void rb_insert_binary(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;
80015604:	8c900008 	lw	s0,8(a0)
rb_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
80015608:	afb3001c 	sw	s3,28(sp)
8001560c:	afb20018 	sw	s2,24(sp)
80015610:	afb10014 	sw	s1,20(sp)
80015614:	afbf0024 	sw	ra,36(sp)
rb_insert_binary():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:117
 * */
static inline void rb_insert_binary(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
80015618:	acb40008 	sw	s4,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:118
	y = root, x = y->left;
8001561c:	8e110008 	lw	s1,8(s0)
rb_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:133
	}
}

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
80015620:	00809021 	move	s2,a0
80015624:	00a09821 	move	s3,a1
rb_insert_binary():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:119
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
	y = root, x = y->left;
	while (x != nil) {
80015628:	12910066 	beq	s4,s1,800157c4 <rb_insert+0x1d0>
8001562c:	acb4000c 	sw	s4,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:121
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
80015630:	8e420000 	lw	v0,0(s2)
80015634:	02202021 	move	a0,s1
80015638:	0040f809 	jalr	v0
8001563c:	02602821 	move	a1,s3
80015640:	5840000c 	blezl	v0,80015674 <rb_insert+0x80>
80015644:	8e22000c 	lw	v0,12(s1)
80015648:	8e220008 	lw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:119
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
	y = root, x = y->left;
	while (x != nil) {
8001564c:	1282000b 	beq	s4,v0,8001567c <rb_insert+0x88>
80015650:	00000000 	nop
80015654:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:121
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
80015658:	8e420000 	lw	v0,0(s2)
8001565c:	02202021 	move	a0,s1
80015660:	0040f809 	jalr	v0
80015664:	02602821 	move	a1,s3
80015668:	5c40fff8 	bgtzl	v0,8001564c <rb_insert+0x58>
8001566c:	8e220008 	lw	v0,8(s1)
80015670:	8e22000c 	lw	v0,12(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:119
{
	rb_node *x, *y, *z = node, *nil = tree->nil, *root = tree->root;

	z->left = z->right = nil;
	y = root, x = y->left;
	while (x != nil) {
80015674:	5682fff8 	bnel	s4,v0,80015658 <rb_insert+0x64>
80015678:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:124
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
	}
	z->parent = y;
	if (y == root || COMPARE(tree, y, z) > 0) {
8001567c:	12110007 	beq	s0,s1,8001569c <rb_insert+0xa8>
80015680:	ae710004 	sw	s1,4(s3)
80015684:	8e420000 	lw	v0,0(s2)
80015688:	02202021 	move	a0,s1
8001568c:	0040f809 	jalr	v0
80015690:	02602821 	move	a1,s3
80015694:	18400049 	blez	v0,800157bc <rb_insert+0x1c8>
80015698:	8e700004 	lw	s0,4(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:125
		y->left = z;
8001569c:	ae330008 	sw	s3,8(s1)
rb_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:135

/* rb_insert - insert a node to red-black tree */
void rb_insert(rb_tree * tree, rb_node * node)
{
	rb_insert_binary(tree, node);
	node->red = 1;
800156a0:	24020001 	li	v0,1
800156a4:	ae620000 	sw	v0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:159
            x->parent->parent->red = 1;                         \
            rb_##_right##_rotate(tree, x->parent->parent);      \
        }                                                       \
    } while (0)

	while (x->parent->red) {
800156a8:	8e020000 	lw	v0,0(s0)
800156ac:	10400012 	beqz	v0,800156f8 <rb_insert+0x104>
800156b0:	24110001 	li	s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:160
		if (x->parent == x->parent->parent->left) {
800156b4:	8e050004 	lw	a1,4(s0)
800156b8:	8ca20008 	lw	v0,8(a1)
800156bc:	50500027 	beql	v0,s0,8001575c <rb_insert+0x168>
800156c0:	8ca3000c 	lw	v1,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:163
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
800156c4:	8c430000 	lw	v1,0(v0)
800156c8:	5060001c 	beqzl	v1,8001573c <rb_insert+0x148>
800156cc:	8e020008 	lw	v0,8(s0)
800156d0:	8e630004 	lw	v1,4(s3)
800156d4:	00a09821 	move	s3,a1
800156d8:	ae000000 	sw	zero,0(s0)
800156dc:	8c630004 	lw	v1,4(v1)
800156e0:	8e700004 	lw	s0,4(s3)
800156e4:	ac400000 	sw	zero,0(v0)
800156e8:	ac710000 	sw	s1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:159
            x->parent->parent->red = 1;                         \
            rb_##_right##_rotate(tree, x->parent->parent);      \
        }                                                       \
    } while (0)

	while (x->parent->red) {
800156ec:	8e020000 	lw	v0,0(s0)
800156f0:	5440fff1 	bnezl	v0,800156b8 <rb_insert+0xc4>
800156f4:	8e050004 	lw	a1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:166
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
		}
	}
	tree->root->left->red = 0;
800156f8:	8e420008 	lw	v0,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:167
	assert(!(tree->nil->red) && !(tree->root->red));
800156fc:	8e430004 	lw	v1,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:166
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
		}
	}
	tree->root->left->red = 0;
80015700:	8c440008 	lw	a0,8(v0)
80015704:	ac800000 	sw	zero,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:167
	assert(!(tree->nil->red) && !(tree->root->red));
80015708:	8c630000 	lw	v1,0(v1)
8001570c:	54600037 	bnezl	v1,800157ec <rb_insert+0x1f8>
80015710:	3c048002 	lui	a0,0x8002
80015714:	8c420000 	lw	v0,0(v0)
80015718:	14400033 	bnez	v0,800157e8 <rb_insert+0x1f4>
8001571c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:170

#undef RB_INSERT_SUB
}
80015720:	8fb40020 	lw	s4,32(sp)
80015724:	8fb3001c 	lw	s3,28(sp)
80015728:	8fb20018 	lw	s2,24(sp)
8001572c:	8fb10014 	lw	s1,20(sp)
80015730:	8fb00010 	lw	s0,16(sp)
80015734:	03e00008 	jr	ra
80015738:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:163

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
		} else {
			RB_INSERT_SUB(right, left);
8001573c:	50530018 	beql	v0,s3,800157a0 <rb_insert+0x1ac>
80015740:	02002821 	move	a1,s0
80015744:	ae000000 	sw	zero,0(s0)
80015748:	02402021 	move	a0,s2
8001574c:	0c0054e4 	jal	80015390 <rb_left_rotate>
80015750:	acb10000 	sw	s1,0(a1)
80015754:	080055bb 	j	800156ec <rb_insert+0xf8>
80015758:	8e700004 	lw	s0,4(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:161
        }                                                       \
    } while (0)

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
8001575c:	8c640000 	lw	a0,0(v1)
80015760:	50800007 	beqzl	a0,80015780 <rb_insert+0x18c>
80015764:	8e03000c 	lw	v1,12(s0)
80015768:	00a09821 	move	s3,a1
8001576c:	ae000000 	sw	zero,0(s0)
80015770:	ac600000 	sw	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:163
		} else {
			RB_INSERT_SUB(right, left);
80015774:	8e700004 	lw	s0,4(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:161
        }                                                       \
    } while (0)

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
80015778:	080055bb 	j	800156ec <rb_insert+0xf8>
8001577c:	acb10000 	sw	s1,0(a1)
80015780:	50730013 	beql	v1,s3,800157d0 <rb_insert+0x1dc>
80015784:	02002821 	move	a1,s0
80015788:	ac400000 	sw	zero,0(v0)
8001578c:	02402021 	move	a0,s2
80015790:	0c005510 	jal	80015440 <rb_right_rotate>
80015794:	acb10000 	sw	s1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:163
		} else {
			RB_INSERT_SUB(right, left);
80015798:	080055bb 	j	800156ec <rb_insert+0xf8>
8001579c:	8e700004 	lw	s0,4(s3)
800157a0:	0c005510 	jal	80015440 <rb_right_rotate>
800157a4:	02402021 	move	a0,s2
800157a8:	8e020004 	lw	v0,4(s0)
800157ac:	02009821 	move	s3,s0
800157b0:	8c450004 	lw	a1,4(v0)
800157b4:	080055d1 	j	80015744 <rb_insert+0x150>
800157b8:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:127
	}
	z->parent = y;
	if (y == root || COMPARE(tree, y, z) > 0) {
		y->left = z;
	} else {
		y->right = z;
800157bc:	080055a8 	j	800156a0 <rb_insert+0xac>
800157c0:	ae33000c 	sw	s3,12(s1)
rb_insert_binary():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:123
	y = root, x = y->left;
	while (x != nil) {
		y = x;
		x = (COMPARE(tree, x, node) > 0) ? x->left : x->right;
	}
	z->parent = y;
800157c4:	acb00004 	sw	s0,4(a1)
800157c8:	080055a7 	j	8001569c <rb_insert+0xa8>
800157cc:	02008821 	move	s1,s0
rb_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:161
        }                                                       \
    } while (0)

	while (x->parent->red) {
		if (x->parent == x->parent->parent->left) {
			RB_INSERT_SUB(left, right);
800157d0:	0c0054e4 	jal	80015390 <rb_left_rotate>
800157d4:	02402021 	move	a0,s2
800157d8:	8e020004 	lw	v0,4(s0)
800157dc:	02009821 	move	s3,s0
800157e0:	080055e2 	j	80015788 <rb_insert+0x194>
800157e4:	8c450004 	lw	a1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:167
		} else {
			RB_INSERT_SUB(right, left);
		}
	}
	tree->root->left->red = 0;
	assert(!(tree->nil->red) && !(tree->root->red));
800157e8:	3c048002 	lui	a0,0x8002
800157ec:	3c068002 	lui	a2,0x8002
800157f0:	3c078002 	lui	a3,0x8002
800157f4:	24843494 	addiu	a0,a0,13460
800157f8:	240500a7 	li	a1,167
800157fc:	24c60e48 	addiu	a2,a2,3656
80015800:	0c006b13 	jal	8001ac4c <__panic>
80015804:	24e734f0 	addiu	a3,a3,13552

80015808 <rb_search>:
rb_search():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:231
 * the functions returns the one highest in the tree.
 * */
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
	rb_node *nil = tree->nil, *node = tree->root->left;
80015808:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:230
 * function @compare). If there're multiple nodes with value 'equal' to @key,
 * the functions returns the one highest in the tree.
 * */
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
8001580c:	27bdffd8 	addiu	sp,sp,-40
80015810:	afb10018 	sw	s1,24(sp)
80015814:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:231
	rb_node *nil = tree->nil, *node = tree->root->left;
80015818:	8c910004 	lw	s1,4(a0)
8001581c:	8c500008 	lw	s0,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:230
 * function @compare). If there're multiple nodes with value 'equal' to @key,
 * the functions returns the one highest in the tree.
 * */
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
80015820:	afb30020 	sw	s3,32(sp)
80015824:	afb2001c 	sw	s2,28(sp)
80015828:	afbf0024 	sw	ra,36(sp)
8001582c:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:233
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
80015830:	1230000b 	beq	s1,s0,80015860 <rb_search+0x58>
80015834:	00c09821 	move	s3,a2
80015838:	02002021 	move	a0,s0
8001583c:	0240f809 	jalr	s2
80015840:	02602821 	move	a1,s3
80015844:	10400013 	beqz	v0,80015894 <rb_search+0x8c>
80015848:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:234
		node = (r > 0) ? node->left : node->right;
8001584c:	5840000d 	blezl	v0,80015884 <rb_search+0x7c>
80015850:	8e10000c 	lw	s0,12(s0)
80015854:	8e100008 	lw	s0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:233
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
80015858:	1611fff8 	bne	s0,s1,8001583c <rb_search+0x34>
8001585c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:237
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
}
80015860:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:236
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
80015864:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:237
}
80015868:	02001021 	move	v0,s0
8001586c:	8fb30020 	lw	s3,32(sp)
80015870:	8fb2001c 	lw	s2,28(sp)
80015874:	8fb10018 	lw	s1,24(sp)
80015878:	8fb00014 	lw	s0,20(sp)
8001587c:	03e00008 	jr	ra
80015880:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:233
rb_node *rb_search(rb_tree * tree, int (*compare) (rb_node * node, void *key),
		   void *key)
{
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
80015884:	1611ffed 	bne	s0,s1,8001583c <rb_search+0x34>
80015888:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:237
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
}
8001588c:	08005619 	j	80015864 <rb_search+0x5c>
80015890:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:236
	rb_node *nil = tree->nil, *node = tree->root->left;
	int r;
	while (node != nil && (r = compare(node, key)) != 0) {
		node = (r > 0) ? node->left : node->right;
	}
	return (node != nil) ? node : NULL;
80015894:	02308826 	xor	s1,s1,s0
80015898:	0011800a 	movz	s0,zero,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:237
}
8001589c:	02001021 	move	v0,s0
800158a0:	8fb30020 	lw	s3,32(sp)
800158a4:	8fb2001c 	lw	s2,28(sp)
800158a8:	8fb10018 	lw	s1,24(sp)
800158ac:	8fb00014 	lw	s0,20(sp)
800158b0:	03e00008 	jr	ra
800158b4:	27bd0028 	addiu	sp,sp,40

800158b8 <rb_delete>:
rb_delete():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:292
/* *
 * rb_delete - deletes @node from @tree, and calls rb_delete_fixup to
 * restore red-black properties.
 * */
void rb_delete(rb_tree * tree, rb_node * node)
{
800158b8:	27bdffd8 	addiu	sp,sp,-40
800158bc:	afb10018 	sw	s1,24(sp)
800158c0:	afb00014 	sw	s0,20(sp)
800158c4:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:296
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
800158c8:	8cb00008 	lw	s0,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:294
 * restore red-black properties.
 * */
void rb_delete(rb_tree * tree, rb_node * node)
{
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;
800158cc:	8c840004 	lw	a0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:292
/* *
 * rb_delete - deletes @node from @tree, and calls rb_delete_fixup to
 * restore red-black properties.
 * */
void rb_delete(rb_tree * tree, rb_node * node)
{
800158d0:	afbf0024 	sw	ra,36(sp)
800158d4:	afb30020 	sw	s3,32(sp)
800158d8:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:297
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
800158dc:	12040094 	beq	s0,a0,80015b30 <rb_delete+0x278>
800158e0:	8e260008 	lw	a2,8(s1)
800158e4:	8ca3000c 	lw	v1,12(a1)
800158e8:	10640006 	beq	v1,a0,80015904 <rb_delete+0x4c>
800158ec:	00a01021 	move	v0,a1
rb_tree_successor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:182
static inline rb_node *rb_tree_successor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;

	if ((y = x->right) != nil) {
		while (y->left != nil) {
800158f0:	8c620008 	lw	v0,8(v1)
800158f4:	5482fffe 	bnel	a0,v0,800158f0 <rb_delete+0x38>
800158f8:	00401821 	move	v1,v0
800158fc:	00601021 	move	v0,v1
rb_delete():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:298
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
	x = (y->left != nil) ? y->left : y->right;
80015900:	8c50000c 	lw	s0,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:300

	assert(y != root && y != nil);
80015904:	5046008f 	beql	v0,a2,80015b44 <rb_delete+0x28c>
80015908:	3c048002 	lui	a0,0x8002
8001590c:	1044008d 	beq	v0,a0,80015b44 <rb_delete+0x28c>
80015910:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:302

	x->parent = y->parent;
80015914:	8c430004 	lw	v1,4(v0)
80015918:	ae030004 	sw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:303
	if (y == y->parent->left) {
8001591c:	8c430004 	lw	v1,4(v0)
80015920:	8c640008 	lw	a0,8(v1)
80015924:	50440002 	beql	v0,a0,80015930 <rb_delete+0x78>
80015928:	ac700008 	sw	s0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:306
		y->parent->left = x;
	} else {
		y->parent->right = x;
8001592c:	ac70000c 	sw	s0,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:311
	}

	bool need_fixup = !(y->red);

	if (y != z) {
80015930:	10450010 	beq	v0,a1,80015974 <rb_delete+0xbc>
80015934:	8c470000 	lw	a3,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:312
		if (z == z->parent->left) {
80015938:	8ca30004 	lw	v1,4(a1)
8001593c:	8c640008 	lw	a0,8(v1)
80015940:	50a40002 	beql	a1,a0,8001594c <rb_delete+0x94>
80015944:	ac620008 	sw	v0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:315
			z->parent->left = y;
		} else {
			z->parent->right = y;
80015948:	ac62000c 	sw	v0,12(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:317
		}
		z->left->parent = z->right->parent = y;
8001594c:	8ca40008 	lw	a0,8(a1)
80015950:	8ca3000c 	lw	v1,12(a1)
80015954:	ac620004 	sw	v0,4(v1)
80015958:	ac820004 	sw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:318
		*y = *z;
8001595c:	8ca80000 	lw	t0,0(a1)
80015960:	8ca50004 	lw	a1,4(a1)
80015964:	ac440008 	sw	a0,8(v0)
80015968:	ac480000 	sw	t0,0(v0)
8001596c:	ac450004 	sw	a1,4(v0)
80015970:	ac43000c 	sw	v1,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:320
	}
	if (need_fixup) {
80015974:	10e00007 	beqz	a3,80015994 <rb_delete+0xdc>
80015978:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:323
		rb_delete_fixup(tree, x);
	}
}
8001597c:	8fb30020 	lw	s3,32(sp)
80015980:	8fb2001c 	lw	s2,28(sp)
80015984:	8fb10018 	lw	s1,24(sp)
80015988:	8fb00014 	lw	s0,20(sp)
8001598c:	03e00008 	jr	ra
80015990:	27bd0028 	addiu	sp,sp,40
rb_delete_fixup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:245
 * rb_delete_fixup - performs rotations and changes colors to restore
 * red-black properties after a node is deleted.
 * */
static void rb_delete_fixup(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *w, *root = tree->root->left;
80015994:	8cd30008 	lw	s3,8(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:275
            rb_##_left##_rotate(tree, x->parent);               \
            x = root;                                           \
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
80015998:	52130026 	beql	s0,s3,80015a34 <rb_delete+0x17c>
8001599c:	ae600000 	sw	zero,0(s3)
800159a0:	8e020000 	lw	v0,0(s0)
800159a4:	14400065 	bnez	v0,80015b3c <rb_delete+0x284>
800159a8:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:276
		if (x == x->parent->left) {
800159ac:	08005677 	j	800159dc <rb_delete+0x124>
800159b0:	8e040004 	lw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:279
			RB_DELETE_FIXUP_SUB(left, right);
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
800159b4:	8c650000 	lw	a1,0(v1)
800159b8:	54a00016 	bnezl	a1,80015a14 <rb_delete+0x15c>
800159bc:	8e060004 	lw	a2,4(s0)
800159c0:	ac520000 	sw	s2,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:275
            rb_##_left##_rotate(tree, x->parent);               \
            x = root;                                           \
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
800159c4:	1093001a 	beq	a0,s3,80015a30 <rb_delete+0x178>
800159c8:	00808021 	move	s0,a0
800159cc:	8c820000 	lw	v0,0(a0)
800159d0:	54400017 	bnezl	v0,80015a30 <rb_delete+0x178>
800159d4:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:276
		if (x == x->parent->left) {
800159d8:	8e040004 	lw	a0,4(s0)
800159dc:	8c820008 	lw	v0,8(a0)
800159e0:	5202002b 	beql	s0,v0,80015a90 <rb_delete+0x1d8>
800159e4:	8c82000c 	lw	v0,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:279
			RB_DELETE_FIXUP_SUB(left, right);
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
800159e8:	8c430000 	lw	v1,0(v0)
800159ec:	54600021 	bnezl	v1,80015a74 <rb_delete+0x1bc>
800159f0:	ac400000 	sw	zero,0(v0)
800159f4:	8c45000c 	lw	a1,12(v0)
800159f8:	8ca30000 	lw	v1,0(a1)
800159fc:	1060ffed 	beqz	v1,800159b4 <rb_delete+0xfc>
80015a00:	8c430008 	lw	v1,8(v0)
80015a04:	8c640000 	lw	a0,0(v1)
80015a08:	50800011 	beqzl	a0,80015a50 <rb_delete+0x198>
80015a0c:	24030001 	li	v1,1
80015a10:	8e060004 	lw	a2,4(s0)
80015a14:	8cc70000 	lw	a3,0(a2)
80015a18:	02202021 	move	a0,s1
80015a1c:	00c02821 	move	a1,a2
80015a20:	ac470000 	sw	a3,0(v0)
80015a24:	acc00000 	sw	zero,0(a2)
80015a28:	0c005510 	jal	80015440 <rb_right_rotate>
80015a2c:	ac600000 	sw	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:282
		}
	}
	x->red = 0;
80015a30:	ae600000 	sw	zero,0(s3)
rb_delete():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:323
		*y = *z;
	}
	if (need_fixup) {
		rb_delete_fixup(tree, x);
	}
}
80015a34:	8fbf0024 	lw	ra,36(sp)
80015a38:	8fb30020 	lw	s3,32(sp)
80015a3c:	8fb2001c 	lw	s2,28(sp)
80015a40:	8fb10018 	lw	s1,24(sp)
80015a44:	8fb00014 	lw	s0,20(sp)
80015a48:	03e00008 	jr	ra
80015a4c:	27bd0028 	addiu	sp,sp,40
rb_delete_fixup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:279

	while (x != root && !x->red) {
		if (x == x->parent->left) {
			RB_DELETE_FIXUP_SUB(left, right);
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
80015a50:	aca00000 	sw	zero,0(a1)
80015a54:	02202021 	move	a0,s1
80015a58:	ac430000 	sw	v1,0(v0)
80015a5c:	0c0054e4 	jal	80015390 <rb_left_rotate>
80015a60:	00402821 	move	a1,v0
80015a64:	8e060004 	lw	a2,4(s0)
80015a68:	8cc20008 	lw	v0,8(a2)
80015a6c:	08005685 	j	80015a14 <rb_delete+0x15c>
80015a70:	8c430008 	lw	v1,8(v0)
80015a74:	00802821 	move	a1,a0
80015a78:	ac920000 	sw	s2,0(a0)
80015a7c:	0c005510 	jal	80015440 <rb_right_rotate>
80015a80:	02202021 	move	a0,s1
80015a84:	8e040004 	lw	a0,4(s0)
80015a88:	0800567d 	j	800159f4 <rb_delete+0x13c>
80015a8c:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:277
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
		if (x == x->parent->left) {
			RB_DELETE_FIXUP_SUB(left, right);
80015a90:	8c430000 	lw	v1,0(v0)
80015a94:	5460001f 	bnezl	v1,80015b14 <rb_delete+0x25c>
80015a98:	ac400000 	sw	zero,0(v0)
80015a9c:	8c450008 	lw	a1,8(v0)
80015aa0:	8ca30000 	lw	v1,0(a1)
80015aa4:	1460000e 	bnez	v1,80015ae0 <rb_delete+0x228>
80015aa8:	8c43000c 	lw	v1,12(v0)
80015aac:	8c650000 	lw	a1,0(v1)
80015ab0:	50a0ffc4 	beqzl	a1,800159c4 <rb_delete+0x10c>
80015ab4:	ac520000 	sw	s2,0(v0)
80015ab8:	8e060004 	lw	a2,4(s0)
80015abc:	8cc70000 	lw	a3,0(a2)
80015ac0:	02202021 	move	a0,s1
80015ac4:	00c02821 	move	a1,a2
80015ac8:	ac470000 	sw	a3,0(v0)
80015acc:	acc00000 	sw	zero,0(a2)
80015ad0:	0c0054e4 	jal	80015390 <rb_left_rotate>
80015ad4:	ac600000 	sw	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:282
		} else {
			RB_DELETE_FIXUP_SUB(right, left);
		}
	}
	x->red = 0;
80015ad8:	0800568d 	j	80015a34 <rb_delete+0x17c>
80015adc:	ae600000 	sw	zero,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:277
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
		if (x == x->parent->left) {
			RB_DELETE_FIXUP_SUB(left, right);
80015ae0:	8c640000 	lw	a0,0(v1)
80015ae4:	5480fff5 	bnezl	a0,80015abc <rb_delete+0x204>
80015ae8:	8e060004 	lw	a2,4(s0)
80015aec:	24030001 	li	v1,1
80015af0:	aca00000 	sw	zero,0(a1)
80015af4:	02202021 	move	a0,s1
80015af8:	ac430000 	sw	v1,0(v0)
80015afc:	0c005510 	jal	80015440 <rb_right_rotate>
80015b00:	00402821 	move	a1,v0
80015b04:	8e060004 	lw	a2,4(s0)
80015b08:	8cc2000c 	lw	v0,12(a2)
80015b0c:	080056af 	j	80015abc <rb_delete+0x204>
80015b10:	8c43000c 	lw	v1,12(v0)
80015b14:	00802821 	move	a1,a0
80015b18:	ac920000 	sw	s2,0(a0)
80015b1c:	0c0054e4 	jal	80015390 <rb_left_rotate>
80015b20:	02202021 	move	a0,s1
80015b24:	8e040004 	lw	a0,4(s0)
80015b28:	080056a7 	j	80015a9c <rb_delete+0x1e4>
80015b2c:	8c82000c 	lw	v0,12(a0)
rb_delete():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:297
{
	rb_node *x, *y, *z = node;
	rb_node *nil = tree->nil, *root = tree->root;

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
80015b30:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:298
	x = (y->left != nil) ? y->left : y->right;
80015b34:	08005641 	j	80015904 <rb_delete+0x4c>
80015b38:	8c50000c 	lw	s0,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:275
            rb_##_left##_rotate(tree, x->parent);               \
            x = root;                                           \
        }                                                       \
    } while (0)

	while (x != root && !x->red) {
80015b3c:	0800568c 	j	80015a30 <rb_delete+0x178>
80015b40:	02009821 	move	s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:300

	y = (z->left == nil
	     || z->right == nil) ? z : rb_tree_successor(tree, z);
	x = (y->left != nil) ? y->left : y->right;

	assert(y != root && y != nil);
80015b44:	3c068002 	lui	a2,0x8002
80015b48:	3c078002 	lui	a3,0x8002
80015b4c:	24843494 	addiu	a0,a0,13460
80015b50:	2405012c 	li	a1,300
80015b54:	24c60e48 	addiu	a2,a2,3656
80015b58:	0c006b13 	jal	8001ac4c <__panic>
80015b5c:	24e73518 	addiu	a3,a3,13592

80015b60 <rb_tree_destroy>:
rb_tree_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:327
	}
}

/* rb_tree_destroy - destroy a tree and free memory */
void rb_tree_destroy(rb_tree * tree)
{
80015b60:	27bdffe8 	addiu	sp,sp,-24
80015b64:	afb00010 	sw	s0,16(sp)
80015b68:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:328
	kfree(tree->root);
80015b6c:	8c840008 	lw	a0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:327
	}
}

/* rb_tree_destroy - destroy a tree and free memory */
void rb_tree_destroy(rb_tree * tree)
{
80015b70:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:328
	kfree(tree->root);
80015b74:	0c0054b9 	jal	800152e4 <kfree>
80015b78:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:329
	kfree(tree->nil);
80015b7c:	0c0054b9 	jal	800152e4 <kfree>
80015b80:	8e040004 	lw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:330
	kfree(tree);
80015b84:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:331
}
80015b88:	8fbf0014 	lw	ra,20(sp)
80015b8c:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:330
/* rb_tree_destroy - destroy a tree and free memory */
void rb_tree_destroy(rb_tree * tree)
{
	kfree(tree->root);
	kfree(tree->nil);
	kfree(tree);
80015b90:	080054b9 	j	800152e4 <kfree>
80015b94:	27bd0018 	addiu	sp,sp,24

80015b98 <rb_node_prev>:
rb_tree_predecessor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:204
 * rb_tree_predecessor - returns the predecessor of @node, or nil
 * if no predecessor exists, likes rb_tree_successor.
 * */
static inline rb_node *rb_tree_predecessor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;
80015b98:	8c860004 	lw	a2,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:206

	if ((y = x->left) != nil) {
80015b9c:	8ca20008 	lw	v0,8(a1)
80015ba0:	54c20004 	bnel	a2,v0,80015bb4 <rb_node_prev+0x1c>
80015ba4:	8c43000c 	lw	v1,12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:212
		while (y->right != nil) {
			y = y->right;
		}
		return y;
	} else {
		y = x->parent;
80015ba8:	080056f2 	j	80015bc8 <rb_node_prev+0x30>
80015bac:	8ca30004 	lw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:207
static inline rb_node *rb_tree_predecessor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;

	if ((y = x->left) != nil) {
		while (y->right != nil) {
80015bb0:	8c43000c 	lw	v1,12(v0)
80015bb4:	54c3fffe 	bnel	a2,v1,80015bb0 <rb_node_prev+0x18>
80015bb8:	00601021 	move	v0,v1
rb_node_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:340
 * or 'NULL' if no predecessor exists.
 * */
rb_node *rb_node_prev(rb_tree * tree, rb_node * node)
{
	rb_node *prev = rb_tree_predecessor(tree, node);
	return (prev != tree->nil) ? prev : NULL;
80015bbc:	00c23026 	xor	a2,a2,v0
80015bc0:	03e00008 	jr	ra
80015bc4:	0006100a 	movz	v0,zero,a2
rb_tree_predecessor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:213
			y = y->right;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->left) {
80015bc8:	8c620008 	lw	v0,8(v1)
80015bcc:	14a2fffb 	bne	a1,v0,80015bbc <rb_node_prev+0x24>
80015bd0:	00601021 	move	v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:214
			if (y == tree->root) {
80015bd4:	8c850008 	lw	a1,8(a0)
80015bd8:	14650005 	bne	v1,a1,80015bf0 <rb_node_prev+0x58>
80015bdc:	00001021 	move	v0,zero
80015be0:	08005704 	j	80015c10 <rb_node_prev+0x78>
80015be4:	00000000 	nop
80015be8:	10450007 	beq	v0,a1,80015c08 <rb_node_prev+0x70>
80015bec:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:217
				return nil;
			}
			x = y, y = y->parent;
80015bf0:	8c620004 	lw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:213
			y = y->right;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->left) {
80015bf4:	8c440008 	lw	a0,8(v0)
80015bf8:	1083fffb 	beq	a0,v1,80015be8 <rb_node_prev+0x50>
80015bfc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:340
 * or 'NULL' if no predecessor exists.
 * */
rb_node *rb_node_prev(rb_tree * tree, rb_node * node)
{
	rb_node *prev = rb_tree_predecessor(tree, node);
	return (prev != tree->nil) ? prev : NULL;
80015c00:	080056f0 	j	80015bc0 <rb_node_prev+0x28>
80015c04:	00c23026 	xor	a2,a2,v0
rb_node_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:341
}
80015c08:	03e00008 	jr	ra
80015c0c:	00001021 	move	v0,zero
80015c10:	03e00008 	jr	ra
80015c14:	00000000 	nop

80015c18 <rb_node_next>:
rb_tree_successor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:179
 * if no successor exists. Make sure that @node must belong to @tree,
 * and this function should only be called by rb_node_prev.
 * */
static inline rb_node *rb_tree_successor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;
80015c18:	8c860004 	lw	a2,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:181

	if ((y = x->right) != nil) {
80015c1c:	8ca2000c 	lw	v0,12(a1)
80015c20:	54c20004 	bnel	a2,v0,80015c34 <rb_node_next+0x1c>
80015c24:	8c430008 	lw	v1,8(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:187
		while (y->left != nil) {
			y = y->left;
		}
		return y;
	} else {
		y = x->parent;
80015c28:	08005713 	j	80015c4c <rb_node_next+0x34>
80015c2c:	8ca20004 	lw	v0,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:182
static inline rb_node *rb_tree_successor(rb_tree * tree, rb_node * node)
{
	rb_node *x = node, *y, *nil = tree->nil;

	if ((y = x->right) != nil) {
		while (y->left != nil) {
80015c30:	8c430008 	lw	v1,8(v0)
80015c34:	54c3fffe 	bnel	a2,v1,80015c30 <rb_node_next+0x18>
80015c38:	00601021 	move	v0,v1
rb_node_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:350
 * or 'NULL' if no successor exists.
 * */
rb_node *rb_node_next(rb_tree * tree, rb_node * node)
{
	rb_node *next = rb_tree_successor(tree, node);
	return (next != tree->nil) ? next : NULL;
80015c3c:	00c23026 	xor	a2,a2,v0
80015c40:	0006100a 	movz	v0,zero,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:351
}
80015c44:	03e00008 	jr	ra
80015c48:	00000000 	nop
rb_tree_successor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:188
			y = y->left;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->right) {
80015c4c:	8c47000c 	lw	a3,12(v0)
80015c50:	10a70003 	beq	a1,a3,80015c60 <rb_node_next+0x48>
80015c54:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:191
			x = y, y = y->parent;
		}
		if (y == tree->root) {
80015c58:	0800571d 	j	80015c74 <rb_node_next+0x5c>
80015c5c:	8c840008 	lw	a0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:189
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->right) {
			x = y, y = y->parent;
80015c60:	8c430004 	lw	v1,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:188
			y = y->left;
		}
		return y;
	} else {
		y = x->parent;
		while (x == y->right) {
80015c64:	8c65000c 	lw	a1,12(v1)
80015c68:	50a2fffd 	beql	a1,v0,80015c60 <rb_node_next+0x48>
80015c6c:	00601021 	move	v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:191
			x = y, y = y->parent;
		}
		if (y == tree->root) {
80015c70:	8c840008 	lw	a0,8(a0)
80015c74:	1064fff3 	beq	v1,a0,80015c44 <rb_node_next+0x2c>
80015c78:	00001021 	move	v0,zero
80015c7c:	00601021 	move	v0,v1
rb_node_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:350
 * or 'NULL' if no successor exists.
 * */
rb_node *rb_node_next(rb_tree * tree, rb_node * node)
{
	rb_node *next = rb_tree_successor(tree, node);
	return (next != tree->nil) ? next : NULL;
80015c80:	00c23026 	xor	a2,a2,v0
80015c84:	03e00008 	jr	ra
80015c88:	0006100a 	movz	v0,zero,a2

80015c8c <rb_node_root>:
rb_node_root():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:356
}

/* rb_node_root - returns the root node of a @tree, or 'NULL' if tree is empty */
rb_node *rb_node_root(rb_tree * tree)
{
	rb_node *node = tree->root->left;
80015c8c:	8c830008 	lw	v1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:357
	return (node != tree->nil) ? node : NULL;
80015c90:	8c820004 	lw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:356
}

/* rb_node_root - returns the root node of a @tree, or 'NULL' if tree is empty */
rb_node *rb_node_root(rb_tree * tree)
{
	rb_node *node = tree->root->left;
80015c94:	8c630008 	lw	v1,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:357
	return (node != tree->nil) ? node : NULL;
80015c98:	00431026 	xor	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:358
}
80015c9c:	0002180a 	movz	v1,zero,v0
80015ca0:	03e00008 	jr	ra
80015ca4:	00601021 	move	v0,v1

80015ca8 <rb_node_left>:
rb_node_left():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:363

/* rb_node_left - gets the left child of @node, or 'NULL' if no such node */
rb_node *rb_node_left(rb_tree * tree, rb_node * node)
{
	rb_node *left = node->left;
80015ca8:	8ca30008 	lw	v1,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:364
	return (left != tree->nil) ? left : NULL;
80015cac:	8c820004 	lw	v0,4(a0)
80015cb0:	00431026 	xor	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:365
}
80015cb4:	0002180a 	movz	v1,zero,v0
80015cb8:	03e00008 	jr	ra
80015cbc:	00601021 	move	v0,v1

80015cc0 <rb_node_right>:
rb_node_right():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:370

/* rb_node_right - gets the right child of @node, or 'NULL' if no such node */
rb_node *rb_node_right(rb_tree * tree, rb_node * node)
{
	rb_node *right = node->right;
80015cc0:	8ca3000c 	lw	v1,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:371
	return (right != tree->nil) ? right : NULL;
80015cc4:	8c820004 	lw	v0,4(a0)
80015cc8:	00431026 	xor	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:372
}
80015ccc:	0002180a 	movz	v1,zero,v0
80015cd0:	03e00008 	jr	ra
80015cd4:	00601021 	move	v0,v1

80015cd8 <check_tree>:
check_tree():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:375

int check_tree(rb_tree * tree, rb_node * node)
{
80015cd8:	27bdffe0 	addiu	sp,sp,-32
80015cdc:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:376
	rb_node *nil = tree->nil;
80015ce0:	8c920004 	lw	s2,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:375
	rb_node *right = node->right;
	return (right != tree->nil) ? right : NULL;
}

int check_tree(rb_tree * tree, rb_node * node)
{
80015ce4:	afb10014 	sw	s1,20(sp)
80015ce8:	afb00010 	sw	s0,16(sp)
80015cec:	afbf001c 	sw	ra,28(sp)
80015cf0:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:377
	rb_node *nil = tree->nil;
	if (node == nil) {
80015cf4:	10b20034 	beq	a1,s2,80015dc8 <check_tree+0xf0>
80015cf8:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:381
		assert(!node->red);
		return 1;
	}
	if (node->left != nil) {
80015cfc:	8ca50008 	lw	a1,8(a1)
80015d00:	50b2000b 	beql	a1,s2,80015d30 <check_tree+0x58>
80015d04:	8e03000c 	lw	v1,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:382
		assert(COMPARE(tree, node, node->left) >= 0);
80015d08:	8c820000 	lw	v0,0(a0)
80015d0c:	0040f809 	jalr	v0
80015d10:	02002021 	move	a0,s0
80015d14:	04420059 	bltzl	v0,80015e7c <check_tree+0x1a4>
80015d18:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:383
		assert(node->left->parent == node);
80015d1c:	8e050008 	lw	a1,8(s0)
80015d20:	8ca20004 	lw	v0,4(a1)
80015d24:	5450004e 	bnel	v0,s0,80015e60 <check_tree+0x188>
80015d28:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:385
	}
	if (node->right != nil) {
80015d2c:	8e03000c 	lw	v1,12(s0)
80015d30:	1072000b 	beq	v1,s2,80015d60 <check_tree+0x88>
80015d34:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:386
		assert(COMPARE(tree, node, node->right) <= 0);
80015d38:	8e220000 	lw	v0,0(s1)
80015d3c:	0040f809 	jalr	v0
80015d40:	00602821 	move	a1,v1
80015d44:	1c40003f 	bgtz	v0,80015e44 <check_tree+0x16c>
80015d48:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:387
		assert(node->right->parent == node);
80015d4c:	8e03000c 	lw	v1,12(s0)
80015d50:	8c620004 	lw	v0,4(v1)
80015d54:	14500035 	bne	v0,s0,80015e2c <check_tree+0x154>
80015d58:	3c068002 	lui	a2,0x8002
80015d5c:	8e050008 	lw	a1,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:389
	}
	if (node->red) {
80015d60:	8e020000 	lw	v0,0(s0)
80015d64:	10400007 	beqz	v0,80015d84 <check_tree+0xac>
80015d68:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:390
		assert(!node->left->red && !node->right->red);
80015d6c:	8ca20000 	lw	v0,0(a1)
80015d70:	14400020 	bnez	v0,80015df4 <check_tree+0x11c>
80015d74:	3c048002 	lui	a0,0x8002
80015d78:	8c620000 	lw	v0,0(v1)
80015d7c:	1440001e 	bnez	v0,80015df8 <check_tree+0x120>
80015d80:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:392
	}
	int hb_left = check_tree(tree, node->left);
80015d84:	0c005736 	jal	80015cd8 <check_tree>
80015d88:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:393
	int hb_right = check_tree(tree, node->right);
80015d8c:	8e05000c 	lw	a1,12(s0)
80015d90:	02202021 	move	a0,s1
80015d94:	0c005736 	jal	80015cd8 <check_tree>
80015d98:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:394
	assert(hb_left == hb_right);
80015d9c:	1642001c 	bne	s2,v0,80015e10 <check_tree+0x138>
80015da0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:396
	int hb = hb_left;
	if (!node->red) {
80015da4:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:397
		hb++;
80015da8:	2c420001 	sltiu	v0,v0,1
80015dac:	02421021 	addu	v0,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:400
	}
	return hb;
}
80015db0:	8fbf001c 	lw	ra,28(sp)
80015db4:	8fb20018 	lw	s2,24(sp)
80015db8:	8fb10014 	lw	s1,20(sp)
80015dbc:	8fb00010 	lw	s0,16(sp)
80015dc0:	03e00008 	jr	ra
80015dc4:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:378

int check_tree(rb_tree * tree, rb_node * node)
{
	rb_node *nil = tree->nil;
	if (node == nil) {
		assert(!node->red);
80015dc8:	8ca30000 	lw	v1,0(a1)
80015dcc:	1060fff8 	beqz	v1,80015db0 <check_tree+0xd8>
80015dd0:	24020001 	li	v0,1
80015dd4:	3c048002 	lui	a0,0x8002
80015dd8:	3c068002 	lui	a2,0x8002
80015ddc:	3c078002 	lui	a3,0x8002
80015de0:	24843494 	addiu	a0,a0,13460
80015de4:	2405017a 	li	a1,378
80015de8:	24c60e48 	addiu	a2,a2,3656
80015dec:	0c006b13 	jal	8001ac4c <__panic>
80015df0:	24e73530 	addiu	a3,a3,13616
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:390
	if (node->right != nil) {
		assert(COMPARE(tree, node, node->right) <= 0);
		assert(node->right->parent == node);
	}
	if (node->red) {
		assert(!node->left->red && !node->right->red);
80015df4:	3c068002 	lui	a2,0x8002
80015df8:	3c078002 	lui	a3,0x8002
80015dfc:	24843494 	addiu	a0,a0,13460
80015e00:	24050186 	li	a1,390
80015e04:	24c60e48 	addiu	a2,a2,3656
80015e08:	0c006b13 	jal	8001ac4c <__panic>
80015e0c:	24e735c4 	addiu	a3,a3,13764
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:394
	}
	int hb_left = check_tree(tree, node->left);
	int hb_right = check_tree(tree, node->right);
	assert(hb_left == hb_right);
80015e10:	3c068002 	lui	a2,0x8002
80015e14:	3c078002 	lui	a3,0x8002
80015e18:	24843494 	addiu	a0,a0,13460
80015e1c:	2405018a 	li	a1,394
80015e20:	24c60e48 	addiu	a2,a2,3656
80015e24:	0c006b13 	jal	8001ac4c <__panic>
80015e28:	24e735ec 	addiu	a3,a3,13804
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:387
		assert(COMPARE(tree, node, node->left) >= 0);
		assert(node->left->parent == node);
	}
	if (node->right != nil) {
		assert(COMPARE(tree, node, node->right) <= 0);
		assert(node->right->parent == node);
80015e2c:	3c078002 	lui	a3,0x8002
80015e30:	24843494 	addiu	a0,a0,13460
80015e34:	24050183 	li	a1,387
80015e38:	24c60e48 	addiu	a2,a2,3656
80015e3c:	0c006b13 	jal	8001ac4c <__panic>
80015e40:	24e735a8 	addiu	a3,a3,13736
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:386
	if (node->left != nil) {
		assert(COMPARE(tree, node, node->left) >= 0);
		assert(node->left->parent == node);
	}
	if (node->right != nil) {
		assert(COMPARE(tree, node, node->right) <= 0);
80015e44:	3c068002 	lui	a2,0x8002
80015e48:	3c078002 	lui	a3,0x8002
80015e4c:	24843494 	addiu	a0,a0,13460
80015e50:	24050182 	li	a1,386
80015e54:	24c60e48 	addiu	a2,a2,3656
80015e58:	0c006b13 	jal	8001ac4c <__panic>
80015e5c:	24e73580 	addiu	a3,a3,13696
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:383
		assert(!node->red);
		return 1;
	}
	if (node->left != nil) {
		assert(COMPARE(tree, node, node->left) >= 0);
		assert(node->left->parent == node);
80015e60:	3c068002 	lui	a2,0x8002
80015e64:	3c078002 	lui	a3,0x8002
80015e68:	24843494 	addiu	a0,a0,13460
80015e6c:	2405017f 	li	a1,383
80015e70:	24c60e48 	addiu	a2,a2,3656
80015e74:	0c006b13 	jal	8001ac4c <__panic>
80015e78:	24e73564 	addiu	a3,a3,13668
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:382
	if (node == nil) {
		assert(!node->red);
		return 1;
	}
	if (node->left != nil) {
		assert(COMPARE(tree, node, node->left) >= 0);
80015e7c:	3c068002 	lui	a2,0x8002
80015e80:	3c078002 	lui	a3,0x8002
80015e84:	24843494 	addiu	a0,a0,13460
80015e88:	2405017e 	li	a1,382
80015e8c:	24c60e48 	addiu	a2,a2,3656
80015e90:	0c006b13 	jal	8001ac4c <__panic>
80015e94:	24e7353c 	addiu	a3,a3,13628

80015e98 <check_rb_tree>:
check_rb_tree():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:429
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
{
	rb_tree *tree = rb_tree_create(check_compare1);
80015e98:	3c048001 	lui	a0,0x8001
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:428
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
{
80015e9c:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:429
	rb_tree *tree = rb_tree_create(check_compare1);
80015ea0:	24845374 	addiu	a0,a0,21364
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:428
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
{
80015ea4:	afb00010 	sw	s0,16(sp)
80015ea8:	afbf0034 	sw	ra,52(sp)
80015eac:	afbe0030 	sw	s8,48(sp)
80015eb0:	afb7002c 	sw	s7,44(sp)
80015eb4:	afb60028 	sw	s6,40(sp)
80015eb8:	afb50024 	sw	s5,36(sp)
80015ebc:	afb40020 	sw	s4,32(sp)
80015ec0:	afb3001c 	sw	s3,28(sp)
80015ec4:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:429
	rb_tree *tree = rb_tree_create(check_compare1);
80015ec8:	0c00554c 	jal	80015530 <rb_tree_create>
80015ecc:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:430
	assert(tree != NULL);
80015ed0:	10400116 	beqz	v0,8001632c <check_rb_tree+0x494>
80015ed4:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:432

	rb_node *nil = tree->nil, *root = tree->root;
80015ed8:	8c420004 	lw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:433
	assert(!nil->red && root->left == nil);
80015edc:	8c430000 	lw	v1,0(v0)
80015ee0:	1460010e 	bnez	v1,8001631c <check_rb_tree+0x484>
80015ee4:	8e140008 	lw	s4,8(s0)
80015ee8:	8e9e0008 	lw	s8,8(s4)
80015eec:	17c2010c 	bne	s8,v0,80016320 <check_rb_tree+0x488>
80015ef0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:436

	int total = 100;
	struct check_data **all =
80015ef4:	0c00553c 	jal	800154f0 <check_safe_kmalloc>
80015ef8:	24040190 	li	a0,400
80015efc:	00408821 	move	s1,v0
80015f00:	00409021 	move	s2,v0
80015f04:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:440
	    check_safe_kmalloc(sizeof(struct check_data *) * total);

	long i;
	for (i = 0; i < total; i++) {
80015f08:	00009821 	move	s3,zero
80015f0c:	24160064 	li	s6,100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:441
		all[i] = check_safe_kmalloc(sizeof(struct check_data));
80015f10:	0c00553c 	jal	800154f0 <check_safe_kmalloc>
80015f14:	24040014 	li	a0,20
80015f18:	aea20000 	sw	v0,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:442
		all[i]->data = i;
80015f1c:	ac530000 	sw	s3,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:440
	int total = 100;
	struct check_data **all =
	    check_safe_kmalloc(sizeof(struct check_data *) * total);

	long i;
	for (i = 0; i < total; i++) {
80015f20:	26730001 	addiu	s3,s3,1
80015f24:	1676fffa 	bne	s3,s6,80015f10 <check_rb_tree+0x78>
80015f28:	26b50004 	addiu	s5,s5,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:445
		all[i] = check_safe_kmalloc(sizeof(struct check_data));
		all[i]->data = i;
	}

	int *mark = check_safe_kmalloc(sizeof(int) * total);
80015f2c:	0c00553c 	jal	800154f0 <check_safe_kmalloc>
80015f30:	24040190 	li	a0,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:446
	memset(mark, 0, sizeof(int) * total);
80015f34:	00402021 	move	a0,v0
80015f38:	00002821 	move	a1,zero
80015f3c:	24060190 	li	a2,400
80015f40:	0c005c5a 	jal	80017168 <memset>
80015f44:	00409821 	move	s3,v0
80015f48:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:449

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015f4c:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:448
	}

	int *mark = check_safe_kmalloc(sizeof(int) * total);
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
80015f50:	24040190 	li	a0,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015f54:	02221821 	addu	v1,s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:449

	int *mark = check_safe_kmalloc(sizeof(int) * total);
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015f58:	8c630000 	lw	v1,0(v1)
80015f5c:	24420004 	addiu	v0,v0,4
80015f60:	8c630000 	lw	v1,0(v1)
80015f64:	00031880 	sll	v1,v1,0x2
80015f68:	02631821 	addu	v1,s3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:448
	}

	int *mark = check_safe_kmalloc(sizeof(int) * total);
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
80015f6c:	1444fff9 	bne	v0,a0,80015f54 <check_rb_tree+0xbc>
80015f70:	ac650000 	sw	a1,0(v1)
80015f74:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:452
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80015f78:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:451
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80015f7c:	24050190 	li	a1,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015f80:	02621821 	addu	v1,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:452

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80015f84:	8c630000 	lw	v1,0(v1)
80015f88:	146400c8 	bne	v1,a0,800162ac <check_rb_tree+0x414>
80015f8c:	24420004 	addiu	v0,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:451
	memset(mark, 0, sizeof(int) * total);

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80015f90:	1445fffc 	bne	v0,a1,80015f84 <check_rb_tree+0xec>
80015f94:	02621821 	addu	v1,s3,v0
80015f98:	0220b021 	move	s6,s1
80015f9c:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015fa0:	24170064 	li	s7,100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:456
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		int j = (rand() % (total - i)) + i;
80015fa4:	0c005b65 	jal	80016d94 <rand>
80015fa8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80015fac:	02f51823 	subu	v1,s7,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:456
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		int j = (rand() % (total - i)) + i;
80015fb0:	0043001a 	div	zero,v0,v1
80015fb4:	006001f4 	teq	v1,zero,0x7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:457
		struct check_data *z = all[i];
80015fb8:	8ec20000 	lw	v0,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:456
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		int j = (rand() % (total - i)) + i;
80015fbc:	00001810 	mfhi	v1
80015fc0:	00751821 	addu	v1,v1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:458
		struct check_data *z = all[i];
		all[i] = all[j];
80015fc4:	00031880 	sll	v1,v1,0x2
80015fc8:	02231821 	addu	v1,s1,v1
80015fcc:	8c640000 	lw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:455
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80015fd0:	26b50001 	addiu	s5,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:458
		int j = (rand() % (total - i)) + i;
		struct check_data *z = all[i];
		all[i] = all[j];
80015fd4:	aec40000 	sw	a0,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:459
		all[j] = z;
80015fd8:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:455
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80015fdc:	16b7fff1 	bne	s5,s7,80015fa4 <check_rb_tree+0x10c>
80015fe0:	26d60004 	addiu	s6,s6,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:462
		struct check_data *z = all[i];
		all[i] = all[j];
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
80015fe4:	02602021 	move	a0,s3
80015fe8:	00002821 	move	a1,zero
80015fec:	0c005c5a 	jal	80017168 <memset>
80015ff0:	24060190 	li	a2,400
80015ff4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:464
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80015ff8:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:463
		all[i] = all[j];
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
80015ffc:	24040190 	li	a0,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80016000:	02221821 	addu	v1,s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:464
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
80016004:	8c630000 	lw	v1,0(v1)
80016008:	24420004 	addiu	v0,v0,4
8001600c:	8c630000 	lw	v1,0(v1)
80016010:	00031880 	sll	v1,v1,0x2
80016014:	02631821 	addu	v1,s3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:463
		all[i] = all[j];
		all[j] = z;
	}

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
80016018:	1444fff9 	bne	v0,a0,80016000 <check_rb_tree+0x168>
8001601c:	ac650000 	sw	a1,0(v1)
80016020:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:467
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80016024:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:466

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
80016028:	24050190 	li	a1,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
8001602c:	02621821 	addu	v1,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:467
	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
80016030:	8c630000 	lw	v1,0(v1)
80016034:	14640095 	bne	v1,a0,8001628c <check_rb_tree+0x3f4>
80016038:	24420004 	addiu	v0,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:466

	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
8001603c:	1445fffc 	bne	v0,a1,80016030 <check_rb_tree+0x198>
80016040:	02621821 	addu	v1,s3,v0
80016044:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:470
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80016048:	24160190 	li	s6,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
8001604c:	02351021 	addu	v0,s1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:471
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
80016050:	8c450000 	lw	a1,0(v0)
80016054:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:472
		check_tree(tree, root->left);
80016058:	26b50004 	addiu	s5,s5,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:471
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
8001605c:	0c00557d 	jal	800155f4 <rb_insert>
80016060:	24a50004 	addiu	a1,a1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:472
		check_tree(tree, root->left);
80016064:	8e850008 	lw	a1,8(s4)
80016068:	0c005736 	jal	80015cd8 <check_tree>
8001606c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:470
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
80016070:	16b6fff7 	bne	s5,s6,80016050 <check_rb_tree+0x1b8>
80016074:	02351021 	addu	v0,s1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:477
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
80016078:	3c028001 	lui	v0,0x8001
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:470
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
	}

	for (i = 0; i < total; i++) {
8001607c:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:477
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
80016080:	24565384 	addiu	s6,v0,21380
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:476
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
80016084:	24170064 	li	s7,100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:477
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
80016088:	8e420000 	lw	v0,0(s2)
8001608c:	02002021 	move	a0,s0
80016090:	02c02821 	move	a1,s6
80016094:	0c005602 	jal	80015808 <rb_search>
80016098:	8c460000 	lw	a2,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:478
		assert(node != NULL && node == &(all[i]->rb_link));
8001609c:	1040006d 	beqz	v0,80016254 <check_rb_tree+0x3bc>
800160a0:	3c048002 	lui	a0,0x8002
800160a4:	8e430000 	lw	v1,0(s2)
800160a8:	24630004 	addiu	v1,v1,4
800160ac:	14430069 	bne	v0,v1,80016254 <check_rb_tree+0x3bc>
800160b0:	26b50001 	addiu	s5,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:476
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
800160b4:	16b7fff4 	bne	s5,s7,80016088 <check_rb_tree+0x1f0>
800160b8:	26520004 	addiu	s2,s2,4
800160bc:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:481
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
	}

	for (i = 0; i < total; i++) {
800160c0:	24150064 	li	s5,100
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:482
		node = rb_search(tree, check_compare2, (void *)i);
800160c4:	02002021 	move	a0,s0
800160c8:	02c02821 	move	a1,s6
800160cc:	0c005602 	jal	80015808 <rb_search>
800160d0:	02403021 	move	a2,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:483
		assert(node != NULL && rbn2data(node)->data == i);
800160d4:	10400066 	beqz	v0,80016270 <check_rb_tree+0x3d8>
800160d8:	3c048002 	lui	a0,0x8002
800160dc:	8c43fffc 	lw	v1,-4(v0)
800160e0:	14720064 	bne	v1,s2,80016274 <check_rb_tree+0x3dc>
800160e4:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:484
		rb_delete(tree, node);
800160e8:	00402821 	move	a1,v0
800160ec:	0c00562e 	jal	800158b8 <rb_delete>
800160f0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:485
		check_tree(tree, root->left);
800160f4:	8e850008 	lw	a1,8(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:481
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
	}

	for (i = 0; i < total; i++) {
800160f8:	26520001 	addiu	s2,s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:485
		node = rb_search(tree, check_compare2, (void *)i);
		assert(node != NULL && rbn2data(node)->data == i);
		rb_delete(tree, node);
		check_tree(tree, root->left);
800160fc:	0c005736 	jal	80015cd8 <check_tree>
80016100:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:481
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
	}

	for (i = 0; i < total; i++) {
80016104:	5655fff0 	bnel	s2,s5,800160c8 <check_rb_tree+0x230>
80016108:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:488
		assert(node != NULL && rbn2data(node)->data == i);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(!nil->red && root->left == nil);
8001610c:	8fc20000 	lw	v0,0(s8)
80016110:	54400073 	bnezl	v0,800162e0 <check_rb_tree+0x448>
80016114:	3c048002 	lui	a0,0x8002
80016118:	8e820008 	lw	v0,8(s4)
8001611c:	17c2006f 	bne	s8,v0,800162dc <check_rb_tree+0x444>
80016120:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:496
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
		all[i]->data = max;
80016124:	24160020 	li	s6,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:495
	long max = 32;
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
80016128:	24150080 	li	s5,128
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
8001612c:	02321021 	addu	v0,s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:496
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
		all[i]->data = max;
80016130:	8c420000 	lw	v0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:497
		rb_insert(tree, &(all[i]->rb_link));
80016134:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:498
		check_tree(tree, root->left);
80016138:	26520004 	addiu	s2,s2,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:497
		max = total;
	}

	for (i = 0; i < max; i++) {
		all[i]->data = max;
		rb_insert(tree, &(all[i]->rb_link));
8001613c:	24450004 	addiu	a1,v0,4
80016140:	0c00557d 	jal	800155f4 <rb_insert>
80016144:	ac560000 	sw	s6,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:498
		check_tree(tree, root->left);
80016148:	8e850008 	lw	a1,8(s4)
8001614c:	0c005736 	jal	80015cd8 <check_tree>
80016150:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:495
	long max = 32;
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
80016154:	1655fff6 	bne	s2,s5,80016130 <check_rb_tree+0x298>
80016158:	02321021 	addu	v0,s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:502
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
		node = rb_search(tree, check_compare2, (void *)max);
8001615c:	3c028001 	lui	v0,0x8001
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:495
	long max = 32;
	if (max > total) {
		max = total;
	}

	for (i = 0; i < max; i++) {
80016160:	24120020 	li	s2,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:502
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
		node = rb_search(tree, check_compare2, (void *)max);
80016164:	24555384 	addiu	s5,v0,21380
80016168:	02002021 	move	a0,s0
8001616c:	02a02821 	move	a1,s5
80016170:	0c005602 	jal	80015808 <rb_search>
80016174:	24060020 	li	a2,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:503
		assert(node != NULL && rbn2data(node)->data == max);
80016178:	10400050 	beqz	v0,800162bc <check_rb_tree+0x424>
8001617c:	24030020 	li	v1,32
80016180:	8c44fffc 	lw	a0,-4(v0)
80016184:	1483004e 	bne	a0,v1,800162c0 <check_rb_tree+0x428>
80016188:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:504
		rb_delete(tree, node);
8001618c:	00402821 	move	a1,v0
80016190:	0c00562e 	jal	800158b8 <rb_delete>
80016194:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:505
		check_tree(tree, root->left);
80016198:	8e850008 	lw	a1,8(s4)
8001619c:	2652ffff 	addiu	s2,s2,-1
800161a0:	0c005736 	jal	80015cd8 <check_tree>
800161a4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:501
		all[i]->data = max;
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
800161a8:	5640fff0 	bnezl	s2,8001616c <check_rb_tree+0x2d4>
800161ac:	02002021 	move	a0,s0
rb_tree_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:18

/* rb_tree_empty - tests if tree is empty */
static inline bool rb_tree_empty(rb_tree * tree)
{
	rb_node *nil = tree->nil, *root = tree->root;
	return root->left == nil;
800161b0:	8e020008 	lw	v0,8(s0)
check_rb_tree():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:508
		assert(node != NULL && rbn2data(node)->data == max);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(rb_tree_empty(tree));
800161b4:	8e030004 	lw	v1,4(s0)
800161b8:	8c420008 	lw	v0,8(v0)
800161bc:	1462004f 	bne	v1,v0,800162fc <check_rb_tree+0x464>
800161c0:	24150190 	li	s5,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
800161c4:	02321021 	addu	v0,s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:511
	}

	assert(rb_tree_empty(tree));

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
800161c8:	8c450000 	lw	a1,0(v0)
800161cc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:512
		check_tree(tree, root->left);
800161d0:	26520004 	addiu	s2,s2,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:511
	}

	assert(rb_tree_empty(tree));

	for (i = 0; i < total; i++) {
		rb_insert(tree, &(all[i]->rb_link));
800161d4:	0c00557d 	jal	800155f4 <rb_insert>
800161d8:	24a50004 	addiu	a1,a1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:512
		check_tree(tree, root->left);
800161dc:	8e850008 	lw	a1,8(s4)
800161e0:	0c005736 	jal	80015cd8 <check_tree>
800161e4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:510
		check_tree(tree, root->left);
	}

	assert(rb_tree_empty(tree));

	for (i = 0; i < total; i++) {
800161e8:	1655fff7 	bne	s2,s5,800161c8 <check_rb_tree+0x330>
800161ec:	02321021 	addu	v0,s1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:515
		rb_insert(tree, &(all[i]->rb_link));
		check_tree(tree, root->left);
	}

	rb_tree_destroy(tree);
800161f0:	0c0056d8 	jal	80015b60 <rb_tree_destroy>
800161f4:	02002021 	move	a0,s0
800161f8:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:517

	for (i = 0; i < total; i++) {
800161fc:	24120190 	li	s2,400
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:427
static inline int check_compare2(rb_node * node, void *key)
{
	return rbn2data(node)->data - (long)key;
}

void check_rb_tree(void)
80016200:	02301021 	addu	v0,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:518
	}

	rb_tree_destroy(tree);

	for (i = 0; i < total; i++) {
		kfree(all[i]);
80016204:	8c440000 	lw	a0,0(v0)
80016208:	0c0054b9 	jal	800152e4 <kfree>
8001620c:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:517
		check_tree(tree, root->left);
	}

	rb_tree_destroy(tree);

	for (i = 0; i < total; i++) {
80016210:	1612fffc 	bne	s0,s2,80016204 <check_rb_tree+0x36c>
80016214:	02301021 	addu	v0,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:521
		kfree(all[i]);
	}

	kfree(mark);
80016218:	0c0054b9 	jal	800152e4 <kfree>
8001621c:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:522
	kfree(all);
80016220:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:523
}
80016224:	8fbf0034 	lw	ra,52(sp)
80016228:	8fbe0030 	lw	s8,48(sp)
8001622c:	8fb7002c 	lw	s7,44(sp)
80016230:	8fb60028 	lw	s6,40(sp)
80016234:	8fb50024 	lw	s5,36(sp)
80016238:	8fb40020 	lw	s4,32(sp)
8001623c:	8fb3001c 	lw	s3,28(sp)
80016240:	8fb20018 	lw	s2,24(sp)
80016244:	8fb10014 	lw	s1,20(sp)
80016248:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:522
	for (i = 0; i < total; i++) {
		kfree(all[i]);
	}

	kfree(mark);
	kfree(all);
8001624c:	080054b9 	j	800152e4 <kfree>
80016250:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:478
	}

	rb_node *node;
	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)(all[i]->data));
		assert(node != NULL && node == &(all[i]->rb_link));
80016254:	3c068002 	lui	a2,0x8002
80016258:	3c078002 	lui	a3,0x8002
8001625c:	24843494 	addiu	a0,a0,13460
80016260:	240501de 	li	a1,478
80016264:	24c60e48 	addiu	a2,a2,3656
80016268:	0c006b13 	jal	8001ac4c <__panic>
8001626c:	24e73640 	addiu	a3,a3,13888
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:483
	}

	for (i = 0; i < total; i++) {
		node = rb_search(tree, check_compare2, (void *)i);
		assert(node != NULL && rbn2data(node)->data == i);
80016270:	3c068002 	lui	a2,0x8002
80016274:	3c078002 	lui	a3,0x8002
80016278:	24843494 	addiu	a0,a0,13460
8001627c:	240501e3 	li	a1,483
80016280:	24c60e48 	addiu	a2,a2,3656
80016284:	0c006b13 	jal	8001ac4c <__panic>
80016288:	24e7366c 	addiu	a3,a3,13932
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:467
	memset(mark, 0, sizeof(int) * total);
	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
8001628c:	3c048002 	lui	a0,0x8002
80016290:	24843494 	addiu	a0,a0,13460
80016294:	240501d3 	li	a1,467
80016298:	3c068002 	lui	a2,0x8002
8001629c:	3c078002 	lui	a3,0x8002
800162a0:	24c60e48 	addiu	a2,a2,3656
800162a4:	0c006b13 	jal	8001ac4c <__panic>
800162a8:	24e73630 	addiu	a3,a3,13872
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:452

	for (i = 0; i < total; i++) {
		mark[all[i]->data] = 1;
	}
	for (i = 0; i < total; i++) {
		assert(mark[i] == 1);
800162ac:	3c048002 	lui	a0,0x8002
800162b0:	24843494 	addiu	a0,a0,13460
800162b4:	080058a6 	j	80016298 <check_rb_tree+0x400>
800162b8:	240501c4 	li	a1,452
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:503
		check_tree(tree, root->left);
	}

	for (i = 0; i < max; i++) {
		node = rb_search(tree, check_compare2, (void *)max);
		assert(node != NULL && rbn2data(node)->data == max);
800162bc:	3c048002 	lui	a0,0x8002
800162c0:	3c068002 	lui	a2,0x8002
800162c4:	3c078002 	lui	a3,0x8002
800162c8:	24843494 	addiu	a0,a0,13460
800162cc:	240501f7 	li	a1,503
800162d0:	24c60e48 	addiu	a2,a2,3656
800162d4:	0c006b13 	jal	8001ac4c <__panic>
800162d8:	24e73698 	addiu	a3,a3,13976
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:488
		assert(node != NULL && rbn2data(node)->data == i);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(!nil->red && root->left == nil);
800162dc:	3c048002 	lui	a0,0x8002
800162e0:	24843494 	addiu	a0,a0,13460
800162e4:	240501e8 	li	a1,488
800162e8:	3c068002 	lui	a2,0x8002
800162ec:	3c078002 	lui	a3,0x8002
800162f0:	24c60e48 	addiu	a2,a2,3656
800162f4:	0c006b13 	jal	8001ac4c <__panic>
800162f8:	24e73610 	addiu	a3,a3,13840
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:508
		assert(node != NULL && rbn2data(node)->data == max);
		rb_delete(tree, node);
		check_tree(tree, root->left);
	}

	assert(rb_tree_empty(tree));
800162fc:	3c048002 	lui	a0,0x8002
80016300:	3c068002 	lui	a2,0x8002
80016304:	3c078002 	lui	a3,0x8002
80016308:	24843494 	addiu	a0,a0,13460
8001630c:	240501fc 	li	a1,508
80016310:	24c60e48 	addiu	a2,a2,3656
80016314:	0c006b13 	jal	8001ac4c <__panic>
80016318:	24e736c4 	addiu	a3,a3,14020
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:433
{
	rb_tree *tree = rb_tree_create(check_compare1);
	assert(tree != NULL);

	rb_node *nil = tree->nil, *root = tree->root;
	assert(!nil->red && root->left == nil);
8001631c:	3c048002 	lui	a0,0x8002
80016320:	24843494 	addiu	a0,a0,13460
80016324:	080058ba 	j	800162e8 <check_rb_tree+0x450>
80016328:	240501b1 	li	a1,433
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/rb_tree.c:430
}

void check_rb_tree(void)
{
	rb_tree *tree = rb_tree_create(check_compare1);
	assert(tree != NULL);
8001632c:	3c048002 	lui	a0,0x8002
80016330:	3c068002 	lui	a2,0x8002
80016334:	3c078002 	lui	a3,0x8002
80016338:	24843494 	addiu	a0,a0,13460
8001633c:	240501ae 	li	a1,430
80016340:	24c60e48 	addiu	a2,a2,3656
80016344:	0c006b13 	jal	8001ac4c <__panic>
80016348:	24e73600 	addiu	a3,a3,13824

8001634c <readline>:
readline():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:29
 * The readline() function returns the text of the line read. If some errors
 * are happened, NULL is returned. The return value is a global variable,
 * thus it should be copied before it is used.
 * */
char *readline(const char *prompt)
{
8001634c:	27bdffd0 	addiu	sp,sp,-48
80016350:	afbf002c 	sw	ra,44(sp)
80016354:	afb40028 	sw	s4,40(sp)
80016358:	afb30024 	sw	s3,36(sp)
8001635c:	afb20020 	sw	s2,32(sp)
80016360:	afb1001c 	sw	s1,28(sp)
80016364:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:30
	if (prompt != NULL) {
80016368:	10800004 	beqz	a0,8001637c <readline+0x30>
8001636c:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:31
		kprintf("%s", prompt);
80016370:	3c048002 	lui	a0,0x8002
80016374:	0c007aa6 	jal	8001ea98 <kprintf>
80016378:	248436d8 	addiu	a0,a0,14040
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:40
		c = getchar();
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
8001637c:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:29
 * The readline() function returns the text of the line read. If some errors
 * are happened, NULL is returned. The return value is a global variable,
 * thus it should be copied before it is used.
 * */
char *readline(const char *prompt)
{
80016380:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:44
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
			cputchar(c);
			i--;
		} else if (c == '\n' || c == '\r') {
80016384:	2411000d 	li	s1,13
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:41
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
80016388:	24120008 	li	s2,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:44
			cputchar(c);
			i--;
		} else if (c == '\n' || c == '\r') {
8001638c:	2413000a 	li	s3,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:40
		c = getchar();
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
80016390:	26946788 	addiu	s4,s4,26504
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:35
	if (prompt != NULL) {
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
80016394:	0c006c85 	jal	8001b214 <cons_getc>
80016398:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:38
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
8001639c:	28430020 	slti	v1,v0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:36
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
		if (c < 0) {
800163a0:	0440001f 	bltz	v0,80016420 <readline+0xd4>
800163a4:	2a0403ff 	slti	a0,s0,1023
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:38
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
800163a8:	14600026 	bnez	v1,80016444 <readline+0xf8>
800163ac:	00000000 	nop
800163b0:	54800011 	bnezl	a0,800163f8 <readline+0xac>
800163b4:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:44
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
			cputchar(c);
			i--;
		} else if (c == '\n' || c == '\r') {
800163b8:	1451fff6 	bne	v0,s1,80016394 <readline+0x48>
800163bc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:45
			cputchar(c);
800163c0:	0c006c63 	jal	8001b18c <cons_putc>
800163c4:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:46
			buf[i] = '\0';
800163c8:	3c028015 	lui	v0,0x8015
800163cc:	24426788 	addiu	v0,v0,26504
800163d0:	02028021 	addu	s0,s0,v0
800163d4:	a2000000 	sb	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:50
			return buf;
		}
	}
}
800163d8:	8fbf002c 	lw	ra,44(sp)
800163dc:	8fb40028 	lw	s4,40(sp)
800163e0:	8fb30024 	lw	s3,36(sp)
800163e4:	8fb20020 	lw	s2,32(sp)
800163e8:	8fb1001c 	lw	s1,28(sp)
800163ec:	8fb00018 	lw	s0,24(sp)
800163f0:	03e00008 	jr	ra
800163f4:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:39
	while (1) {
		c = getchar();
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
800163f8:	0c006c63 	jal	8001b18c <cons_putc>
800163fc:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:40
			buf[i++] = c;
80016400:	8fa20010 	lw	v0,16(sp)
80016404:	02141821 	addu	v1,s0,s4
80016408:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:35
	if (prompt != NULL) {
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
8001640c:	0c006c85 	jal	8001b214 <cons_getc>
80016410:	a0620000 	sb	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:38
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
80016414:	28430020 	slti	v1,v0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:36
		kprintf("%s", prompt);
	}
	int i = 0, c;
	while (1) {
		c = getchar();
		if (c < 0) {
80016418:	0441ffe3 	bgez	v0,800163a8 <readline+0x5c>
8001641c:	2a0403ff 	slti	a0,s0,1023
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:50
			cputchar(c);
			buf[i] = '\0';
			return buf;
		}
	}
}
80016420:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:37
	}
	int i = 0, c;
	while (1) {
		c = getchar();
		if (c < 0) {
			return NULL;
80016424:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:50
			cputchar(c);
			buf[i] = '\0';
			return buf;
		}
	}
}
80016428:	8fb40028 	lw	s4,40(sp)
8001642c:	8fb30024 	lw	s3,36(sp)
80016430:	8fb20020 	lw	s2,32(sp)
80016434:	8fb1001c 	lw	s1,28(sp)
80016438:	8fb00018 	lw	s0,24(sp)
8001643c:	03e00008 	jr	ra
80016440:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:41
		if (c < 0) {
			return NULL;
		} else if (c >= ' ' && i < BUFSIZE - 1) {
			cputchar(c);
			buf[i++] = c;
		} else if (c == '\b' && i > 0) {
80016444:	14520007 	bne	v0,s2,80016464 <readline+0x118>
80016448:	00000000 	nop
8001644c:	1200ffd1 	beqz	s0,80016394 <readline+0x48>
80016450:	24040008 	li	a0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:42
			cputchar(c);
80016454:	0c006c63 	jal	8001b18c <cons_putc>
80016458:	2610ffff 	addiu	s0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:43
			i--;
8001645c:	080058e5 	j	80016394 <readline+0x48>
80016460:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/readline.c:44
		} else if (c == '\n' || c == '\r') {
80016464:	1053ffd6 	beq	v0,s3,800163c0 <readline+0x74>
80016468:	00000000 	nop
8001646c:	1451ffc9 	bne	v0,s1,80016394 <readline+0x48>
80016470:	00000000 	nop
80016474:	080058f0 	j	800163c0 <readline+0x74>
80016478:	00000000 	nop

8001647c <strdup>:
strdup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:5
#include <string.h>
#include <slab.h>

char *strdup(const char *src)
{
8001647c:	27bdffd8 	addiu	sp,sp,-40
80016480:	afbf0024 	sw	ra,36(sp)
80016484:	afb10020 	sw	s1,32(sp)
80016488:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:7
	char *dst;
	size_t len = strlen(src);
8001648c:	0c005b81 	jal	80016e04 <strlen>
80016490:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:8
	if ((dst = kmalloc(len + 1)) != NULL) {
80016494:	24440001 	addiu	a0,v0,1
80016498:	0c00548e 	jal	80015238 <kmalloc>
8001649c:	00408821 	move	s1,v0
800164a0:	00408021 	move	s0,v0
800164a4:	10400006 	beqz	v0,800164c0 <strdup+0x44>
800164a8:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:9
		memcpy(dst, src, len);
800164ac:	02203021 	move	a2,s1
800164b0:	00402021 	move	a0,v0
800164b4:	0c005c84 	jal	80017210 <memcpy>
800164b8:	02118821 	addu	s1,s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:10
		dst[len] = '\0';
800164bc:	a2200000 	sb	zero,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:13
	}
	return dst;
}
800164c0:	8fbf0024 	lw	ra,36(sp)
800164c4:	02001021 	move	v0,s0
800164c8:	8fb10020 	lw	s1,32(sp)
800164cc:	8fb0001c 	lw	s0,28(sp)
800164d0:	03e00008 	jr	ra
800164d4:	27bd0028 	addiu	sp,sp,40

800164d8 <stradd>:
stradd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:16

char *stradd(const char *src1, const char *src2)
{
800164d8:	27bdffd0 	addiu	sp,sp,-48
800164dc:	afb30028 	sw	s3,40(sp)
800164e0:	00a09821 	move	s3,a1
800164e4:	afbf002c 	sw	ra,44(sp)
800164e8:	afb20024 	sw	s2,36(sp)
800164ec:	afb10020 	sw	s1,32(sp)
800164f0:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:18
	char *ret, *dst;
	size_t len1 = strlen(src1), len2 = strlen(src2);
800164f4:	0c005b81 	jal	80016e04 <strlen>
800164f8:	afa40010 	sw	a0,16(sp)
800164fc:	02602021 	move	a0,s3
80016500:	0c005b81 	jal	80016e04 <strlen>
80016504:	00409021 	move	s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:19
	if ((ret = dst = kmalloc(len1 + len2 + 1)) != NULL) {
80016508:	02422021 	addu	a0,s2,v0
8001650c:	24840001 	addiu	a0,a0,1
80016510:	0c00548e 	jal	80015238 <kmalloc>
80016514:	00408821 	move	s1,v0
80016518:	00408021 	move	s0,v0
8001651c:	1040000b 	beqz	v0,8001654c <stradd+0x74>
80016520:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:20
		memcpy(dst, src1, len1), dst += len1;
80016524:	02403021 	move	a2,s2
80016528:	00402021 	move	a0,v0
8001652c:	0c005c84 	jal	80017210 <memcpy>
80016530:	00529021 	addu	s2,v0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:21
		memcpy(dst, src2, len2), dst += len2;
80016534:	02402021 	move	a0,s2
80016538:	02602821 	move	a1,s3
8001653c:	02203021 	move	a2,s1
80016540:	0c005c84 	jal	80017210 <memcpy>
80016544:	02519021 	addu	s2,s2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:22
		*dst = '\0';
80016548:	a2400000 	sb	zero,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/libs/string.c:25
	}
	return ret;
}
8001654c:	8fbf002c 	lw	ra,44(sp)
80016550:	02001021 	move	v0,s0
80016554:	8fb30028 	lw	s3,40(sp)
80016558:	8fb20024 	lw	s2,36(sp)
8001655c:	8fb10020 	lw	s1,32(sp)
80016560:	8fb0001c 	lw	s0,28(sp)
80016564:	03e00008 	jr	ra
80016568:	27bd0030 	addiu	sp,sp,48

8001656c <hash32>:
hash32():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/hash.c:15
 *
 * High bits are more random, so we use them.
 * */
uint32_t hash32(uint32_t val, unsigned int bits)
{
	uint32_t hash = val * GOLDEN_RATIO_PRIME_32;
8001656c:	3c029e37 	lui	v0,0x9e37
80016570:	24420001 	addiu	v0,v0,1
80016574:	70821002 	mul	v0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/hash.c:16
	return (hash >> (32 - bits));
80016578:	00052823 	negu	a1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/hash.c:17
}
8001657c:	03e00008 	jr	ra
80016580:	00a21006 	srlv	v0,v0,a1

80016584 <printnum>:
printnum():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:74
 * @padc:       character that padded on the left if the actual width is less than @width
 * */
static void
printnum(void (*putch) (int, void *, int), int fd, void *putdat,
	 unsigned long long num, unsigned base, int width, int padc)
{
80016584:	27bdffb8 	addiu	sp,sp,-72
80016588:	8fa20060 	lw	v0,96(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:77
	unsigned long long result = num;
	unsigned mod = 0;//do_div(result, base);
	if(base == 10){
8001658c:	2403000a 	li	v1,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:74
 * @padc:       character that padded on the left if the actual width is less than @width
 * */
static void
printnum(void (*putch) (int, void *, int), int fd, void *putdat,
	 unsigned long long num, unsigned base, int width, int padc)
{
80016590:	afb4003c 	sw	s4,60(sp)
80016594:	afb30038 	sw	s3,56(sp)
80016598:	afb20034 	sw	s2,52(sp)
8001659c:	afb10030 	sw	s1,48(sp)
800165a0:	afb0002c 	sw	s0,44(sp)
800165a4:	00808821 	move	s1,a0
800165a8:	00a09021 	move	s2,a1
800165ac:	afbf0044 	sw	ra,68(sp)
800165b0:	afb50040 	sw	s5,64(sp)
800165b4:	00c09821 	move	s3,a2
800165b8:	8fa40058 	lw	a0,88(sp)
800165bc:	8fa5005c 	lw	a1,92(sp)
800165c0:	8fb00064 	lw	s0,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:77
	unsigned long long result = num;
	unsigned mod = 0;//do_div(result, base);
	if(base == 10){
800165c4:	10430031 	beq	v0,v1,8001668c <printnum+0x108>
800165c8:	8fb40068 	lw	s4,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:81
      		unsigned int t = __divu10(result);
      		mod = result - __mulu10(t);
      		result = t;
   	}else if(base == 8){
800165cc:	24030008 	li	v1,8
800165d0:	10430045 	beq	v0,v1,800166e8 <printnum+0x164>
800165d4:	00053700 	sll	a2,a1,0x1c
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:86
      	mod = result & 0x7;
      	result = result >> 3;
    	}else{
      		mod = result & 0xF;
      		result = result >> 4;
800165d8:	00041902 	srl	v1,a0,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:85
      		result = t;
   	}else if(base == 8){
      	mod = result & 0x7;
      	result = result >> 3;
    	}else{
      		mod = result & 0xF;
800165dc:	3095000f 	andi	s5,a0,0xf
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:86
      		result = result >> 4;
800165e0:	00c31825 	or	v1,a2,v1
800165e4:	00053902 	srl	a3,a1,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:90
    	}

	// first recursively print all preceding (more significant) digits
	if (num >= base) {
800165e8:	14a0001d 	bnez	a1,80016660 <printnum+0xdc>
800165ec:	2610ffff 	addiu	s0,s0,-1
800165f0:	0082202b 	sltu	a0,a0,v0
800165f4:	1080001b 	beqz	a0,80016664 <printnum+0xe0>
800165f8:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:94
		printnum(putch, fd, putdat, result, base, width - 1, padc);
	} else {
		// print any needed pad characters before first digit
		while (--width > 0)
800165fc:	1a000009 	blez	s0,80016624 <printnum+0xa0>
80016600:	3c028002 	lui	v0,0x8002
80016604:	2610ffff 	addiu	s0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:95
			putch(padc, putdat, fd);
80016608:	02802021 	move	a0,s4
8001660c:	02602821 	move	a1,s3
80016610:	0220f809 	jalr	s1
80016614:	02403021 	move	a2,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:94
	// first recursively print all preceding (more significant) digits
	if (num >= base) {
		printnum(putch, fd, putdat, result, base, width - 1, padc);
	} else {
		// print any needed pad characters before first digit
		while (--width > 0)
80016618:	1600fffb 	bnez	s0,80016608 <printnum+0x84>
8001661c:	2610ffff 	addiu	s0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:98
			putch(padc, putdat, fd);
	}
	// then print this (the least significant) digit
	putch("0123456789abcdef"[mod], putdat, fd);
80016620:	3c028002 	lui	v0,0x8002
80016624:	244236dc 	addiu	v0,v0,14044
80016628:	02a2a821 	addu	s5,s5,v0
8001662c:	92a40000 	lbu	a0,0(s5)
80016630:	02602821 	move	a1,s3
80016634:	02403021 	move	a2,s2
80016638:	0220c821 	move	t9,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:99
}
8001663c:	8fbf0044 	lw	ra,68(sp)
80016640:	8fb50040 	lw	s5,64(sp)
80016644:	8fb4003c 	lw	s4,60(sp)
80016648:	8fb30038 	lw	s3,56(sp)
8001664c:	8fb20034 	lw	s2,52(sp)
80016650:	8fb10030 	lw	s1,48(sp)
80016654:	8fb0002c 	lw	s0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:98
		// print any needed pad characters before first digit
		while (--width > 0)
			putch(padc, putdat, fd);
	}
	// then print this (the least significant) digit
	putch("0123456789abcdef"[mod], putdat, fd);
80016658:	03200008 	jr	t9
8001665c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:91
      		result = result >> 4;
    	}

	// first recursively print all preceding (more significant) digits
	if (num >= base) {
		printnum(putch, fd, putdat, result, base, width - 1, padc);
80016660:	02202021 	move	a0,s1
80016664:	02402821 	move	a1,s2
80016668:	02603021 	move	a2,s3
8001666c:	afa30010 	sw	v1,16(sp)
80016670:	afa70014 	sw	a3,20(sp)
80016674:	afa20018 	sw	v0,24(sp)
80016678:	afb0001c 	sw	s0,28(sp)
8001667c:	0c005961 	jal	80016584 <printnum>
80016680:	afb40020 	sw	s4,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:98
		// print any needed pad characters before first digit
		while (--width > 0)
			putch(padc, putdat, fd);
	}
	// then print this (the least significant) digit
	putch("0123456789abcdef"[mod], putdat, fd);
80016684:	08005989 	j	80016624 <printnum+0xa0>
80016688:	3c028002 	lui	v0,0x8002
__divu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:32
/* __divu* routines are from the book, Hacker's Delight */

static inline unsigned int __divu10(unsigned int n)
{
	unsigned int q, r;
	q = (n >> 1) + (n >> 2);
8001668c:	00043042 	srl	a2,a0,0x1
80016690:	00041882 	srl	v1,a0,0x2
80016694:	00661821 	addu	v1,v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:33
	q = q + (q >> 4);
80016698:	00033102 	srl	a2,v1,0x4
8001669c:	00c31821 	addu	v1,a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:34
	q = q + (q >> 8);
800166a0:	00033202 	srl	a2,v1,0x8
800166a4:	00c31821 	addu	v1,a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:35
	q = q + (q >> 16);
800166a8:	00033402 	srl	a2,v1,0x10
800166ac:	00c31821 	addu	v1,a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:36
	q = q >> 3;
800166b0:	000330c2 	srl	a2,v1,0x3
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
800166b4:	000638c0 	sll	a3,a2,0x3
800166b8:	24830006 	addiu	v1,a0,6
__divu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:37
	q = (n >> 1) + (n >> 2);
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
800166bc:	00671823 	subu	v1,v1,a3
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
800166c0:	00063840 	sll	a3,a2,0x1
__divu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:38
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
	return q + ((r + 6) >> 4);
800166c4:	00671823 	subu	v1,v1,a3
800166c8:	00031902 	srl	v1,v1,0x4
800166cc:	00661821 	addu	v1,v1,a2
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
800166d0:	0003a840 	sll	s5,v1,0x1
800166d4:	000330c0 	sll	a2,v1,0x3
printnum():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:72
 * @base:       base for print, must be in [1, 16]
 * @width:      maximum number of digits, if the actual width is less than @width, use @padc instead
 * @padc:       character that padded on the left if the actual width is less than @width
 * */
static void
printnum(void (*putch) (int, void *, int), int fd, void *putdat,
800166d8:	02a6a821 	addu	s5,s5,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:79
{
	unsigned long long result = num;
	unsigned mod = 0;//do_div(result, base);
	if(base == 10){
      		unsigned int t = __divu10(result);
      		mod = result - __mulu10(t);
800166dc:	0095a823 	subu	s5,a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:80
      		result = t;
800166e0:	0800597a 	j	800165e8 <printnum+0x64>
800166e4:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:83
   	}else if(base == 8){
      	mod = result & 0x7;
      	result = result >> 3;
800166e8:	00053740 	sll	a2,a1,0x1d
800166ec:	000418c2 	srl	v1,a0,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:82
	if(base == 10){
      		unsigned int t = __divu10(result);
      		mod = result - __mulu10(t);
      		result = t;
   	}else if(base == 8){
      	mod = result & 0x7;
800166f0:	30950007 	andi	s5,a0,0x7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:83
      	result = result >> 3;
800166f4:	00c31825 	or	v1,a2,v1
800166f8:	0800597a 	j	800165e8 <printnum+0x64>
800166fc:	000538c2 	srl	a3,a1,0x3

80016700 <sprintputch>:
sprintputch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:362
 * @ch:         the character will be printed
 * @b:          the buffer to place the character @ch
 * */
static void sprintputch(int ch, struct sprintbuf *b)
{
	b->cnt++;
80016700:	8ca30008 	lw	v1,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:363
	if (b->buf < b->ebuf) {
80016704:	8ca20000 	lw	v0,0(a1)
80016708:	8ca60004 	lw	a2,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:362
 * @ch:         the character will be printed
 * @b:          the buffer to place the character @ch
 * */
static void sprintputch(int ch, struct sprintbuf *b)
{
	b->cnt++;
8001670c:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:363
	if (b->buf < b->ebuf) {
80016710:	0046302b 	sltu	a2,v0,a2
80016714:	10c00004 	beqz	a2,80016728 <sprintputch+0x28>
80016718:	aca30008 	sw	v1,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:364
		*b->buf++ = ch;
8001671c:	24430001 	addiu	v1,v0,1
80016720:	a0440000 	sb	a0,0(v0)
80016724:	aca30000 	sw	v1,0(a1)
80016728:	03e00008 	jr	ra
8001672c:	00000000 	nop

80016730 <vprintfmt>:
vprintfmt():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:184
 * Or you probably want printfmt() instead.
 * */
void
vprintfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	  const char *fmt, va_list ap)
{
80016730:	27bdff98 	addiu	sp,sp,-104
80016734:	afb40050 	sw	s4,80(sp)
80016738:	8fb40078 	lw	s4,120(sp)
8001673c:	afb7005c 	sw	s7,92(sp)
80016740:	afb50054 	sw	s5,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:261
		case 'e':
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
80016744:	3c178002 	lui	s7,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016748:	3c158002 	lui	s5,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:184
 * Or you probably want printfmt() instead.
 * */
void
vprintfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	  const char *fmt, va_list ap)
{
8001674c:	afbe0060 	sw	s8,96(sp)
80016750:	afb60058 	sw	s6,88(sp)
80016754:	afb3004c 	sw	s3,76(sp)
80016758:	afb20048 	sw	s2,72(sp)
8001675c:	afb10044 	sw	s1,68(sp)
80016760:	afb00040 	sw	s0,64(sp)
80016764:	afbf0064 	sw	ra,100(sp)
80016768:	00809021 	move	s2,a0
8001676c:	00a08821 	move	s1,a1
80016770:	00c08021 	move	s0,a2
80016774:	00e09821 	move	s3,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016778:	26b5000c 	addiu	s5,s5,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:271
			break;

			// string
		case 's':
			if ((p = va_arg(ap, char *)) == NULL) {
				p = "(null)";
8001677c:	3c168002 	lui	s6,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:261
		case 'e':
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
80016780:	26f70164 	addiu	s7,s7,356
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:264
				printfmt(putch, fd, putdat, "error %d", err);
			} else {
				printfmt(putch, fd, putdat, "%s", p);
80016784:	3c1e8002 	lui	s8,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016788:	92640000 	lbu	a0,0(s3)
8001678c:	24030025 	li	v1,37
80016790:	1083000f 	beq	a0,v1,800167d0 <vprintfmt+0xa0>
80016794:	26620001 	addiu	v0,s3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:192
			if (ch == '\0') {
80016798:	10800029 	beqz	a0,80016840 <vprintfmt+0x110>
8001679c:	24130025 	li	s3,37
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:195
				return;
			}
			putch(ch, putdat, fd);
800167a0:	080059ed 	j	800167b4 <vprintfmt+0x84>
800167a4:	afa2003c 	sw	v0,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:192
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
			if (ch == '\0') {
800167a8:	10800026 	beqz	a0,80016844 <vprintfmt+0x114>
800167ac:	8fbf0064 	lw	ra,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:195
				return;
			}
			putch(ch, putdat, fd);
800167b0:	afa2003c 	sw	v0,60(sp)
800167b4:	02002821 	move	a1,s0
800167b8:	0240f809 	jalr	s2
800167bc:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
800167c0:	8fa2003c 	lw	v0,60(sp)
800167c4:	90440000 	lbu	a0,0(v0)
800167c8:	1493fff7 	bne	a0,s3,800167a8 <vprintfmt+0x78>
800167cc:	24420001 	addiu	v0,v0,1
800167d0:	90440000 	lbu	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:233
			precision = va_arg(ap, int);
			goto process_precision;

		case '.':
			if (width < 0)
				width = 0;
800167d4:	24080020 	li	t0,32
800167d8:	afa00028 	sw	zero,40(sp)
800167dc:	00004821 	move	t1,zero
800167e0:	2403ffff 	li	v1,-1
800167e4:	2407ffff 	li	a3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800167e8:	2485ffdd 	addiu	a1,a0,-35
800167ec:	30a500ff 	andi	a1,a1,0xff
800167f0:	2ca60056 	sltiu	a2,a1,86
800167f4:	14c0001e 	bnez	a2,80016870 <vprintfmt+0x140>
800167f8:	24530001 	addiu	s3,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:340
			putch(ch, putdat, fd);
			break;

			// unrecognized escape sequence - just print it literally
		default:
			putch('%', putdat, fd);
800167fc:	afa2003c 	sw	v0,60(sp)
80016800:	24040025 	li	a0,37
80016804:	02002821 	move	a1,s0
80016808:	0240f809 	jalr	s2
8001680c:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:341
			for (fmt--; fmt[-1] != '%'; fmt--)
80016810:	8fa2003c 	lw	v0,60(sp)
80016814:	9043ffff 	lbu	v1,-1(v0)
80016818:	00409821 	move	s3,v0
8001681c:	24020025 	li	v0,37
80016820:	1062ffd9 	beq	v1,v0,80016788 <vprintfmt+0x58>
80016824:	24030025 	li	v1,37
80016828:	2673ffff 	addiu	s3,s3,-1
8001682c:	9262ffff 	lbu	v0,-1(s3)
80016830:	5443fffe 	bnel	v0,v1,8001682c <vprintfmt+0xfc>
80016834:	2673ffff 	addiu	s3,s3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016838:	080059e3 	j	8001678c <vprintfmt+0x5c>
8001683c:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:346
			for (fmt--; fmt[-1] != '%'; fmt--)
				/* do nothing */ ;
			break;
		}
	}
}
80016840:	8fbf0064 	lw	ra,100(sp)
80016844:	8fbe0060 	lw	s8,96(sp)
80016848:	8fb7005c 	lw	s7,92(sp)
8001684c:	8fb60058 	lw	s6,88(sp)
80016850:	8fb50054 	lw	s5,84(sp)
80016854:	8fb40050 	lw	s4,80(sp)
80016858:	8fb3004c 	lw	s3,76(sp)
8001685c:	8fb20048 	lw	s2,72(sp)
80016860:	8fb10044 	lw	s1,68(sp)
80016864:	8fb00040 	lw	s0,64(sp)
80016868:	03e00008 	jr	ra
8001686c:	27bd0068 	addiu	sp,sp,104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
80016870:	00052880 	sll	a1,a1,0x2
80016874:	02a52821 	addu	a1,s5,a1
80016878:	8ca50000 	lw	a1,0(a1)
8001687c:	00a00008 	jr	a1
80016880:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:232
		case '*':
			precision = va_arg(ap, int);
			goto process_precision;

		case '.':
			if (width < 0)
80016884:	90440001 	lbu	a0,1(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:237
				width = 0;
			goto reswitch;

		case '#':
			altflag = 1;
80016888:	24020001 	li	v0,1
8001688c:	afa20028 	sw	v0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:238
			goto reswitch;
80016890:	080059fa 	j	800167e8 <vprintfmt+0xb8>
80016894:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:335
			printnum(putch, fd, putdat, num, base, width, padc);
			break;

			// escaped '%' character
		case '%':
			putch(ch, putdat, fd);
80016898:	02002821 	move	a1,s0
8001689c:	0240f809 	jalr	s2
800168a0:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:336
			break;
800168a4:	080059e3 	j	8001678c <vprintfmt+0x5c>
800168a8:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:228
				}
			}
			goto process_precision;

		case '*':
			precision = va_arg(ap, int);
800168ac:	8e830000 	lw	v1,0(s4)
800168b0:	90440001 	lbu	a0,1(v0)
800168b4:	26940004 	addiu	s4,s4,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800168b8:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:241
		case '#':
			altflag = 1;
			goto reswitch;

process_precision:
			if (width < 0)
800168bc:	04e1ffcb 	bgez	a3,800167ec <vprintfmt+0xbc>
800168c0:	2485ffdd 	addiu	a1,a0,-35
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:242
				width = precision, precision = -1;
800168c4:	00603821 	move	a3,v1
800168c8:	080059fb 	j	800167ec <vprintfmt+0xbc>
800168cc:	2403ffff 	li	v1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800168d0:	90440001 	lbu	a0,1(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:208

			// flag to pad on the right
		case '-':
			padc = '-';
800168d4:	2408002d 	li	t0,45
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800168d8:	080059fa 	j	800167e8 <vprintfmt+0xb8>
800168dc:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:232
		case '*':
			precision = va_arg(ap, int);
			goto process_precision;

		case '.':
			if (width < 0)
800168e0:	04e1ffeb 	bgez	a3,80016890 <vprintfmt+0x160>
800168e4:	90440001 	lbu	a0,1(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:233
				width = 0;
800168e8:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
800168ec:	080059fa 	j	800167e8 <vprintfmt+0xb8>
800168f0:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:221
			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
				ch = *fmt;
				if (ch < '0' || ch > '9') {
800168f4:	90440001 	lbu	a0,1(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:213
			padc = '-';
			goto reswitch;

			// flag to pad with 0's instead of spaces
		case '0':
			padc = '0';
800168f8:	24080030 	li	t0,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:214
			goto reswitch;
800168fc:	080059fa 	j	800167e8 <vprintfmt+0xb8>
80016900:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:220

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
				ch = *fmt;
80016904:	90450001 	lbu	a1,1(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:219
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
80016908:	2483ffd0 	addiu	v1,a0,-48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:204
		char padc = ' ';
		width = precision = -1;
		lflag = altflag = 0;

reswitch:
		switch (ch = *(unsigned char *)fmt++) {
8001690c:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:221
			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
				ch = *fmt;
				if (ch < '0' || ch > '9') {
80016910:	24a6ffd0 	addiu	a2,a1,-48
80016914:	2cc6000a 	sltiu	a2,a2,10
80016918:	10c0ffe8 	beqz	a2,800168bc <vprintfmt+0x18c>
8001691c:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:219
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
80016920:	00032040 	sll	a0,v1,0x1
80016924:	000318c0 	sll	v1,v1,0x3
80016928:	00831821 	addu	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:218
			padc = '0';
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
8001692c:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:219
				precision = precision * 10 + ch - '0';
80016930:	00651821 	addu	v1,v1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:220
				ch = *fmt;
80016934:	90450000 	lbu	a1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:219
			goto reswitch;

			// width field
		case '1' ... '9':
			for (precision = 0;; ++fmt) {
				precision = precision * 10 + ch - '0';
80016938:	2463ffd0 	addiu	v1,v1,-48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:221
				ch = *fmt;
				if (ch < '0' || ch > '9') {
8001693c:	24a6ffd0 	addiu	a2,a1,-48
80016940:	2cc6000a 	sltiu	a2,a2,10
80016944:	14c0fff6 	bnez	a2,80016920 <vprintfmt+0x1f0>
80016948:	00a02021 	move	a0,a1
8001694c:	08005a2f 	j	800168bc <vprintfmt+0x18c>
80016950:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:252
			lflag++;
			goto reswitch;

			// character
		case 'c':
			putch(va_arg(ap, int), putdat, fd);
80016954:	8e840000 	lw	a0,0(s4)
80016958:	02002821 	move	a1,s0
8001695c:	02203021 	move	a2,s1
80016960:	0240f809 	jalr	s2
80016964:	26940004 	addiu	s4,s4,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:253
			break;
80016968:	080059e3 	j	8001678c <vprintfmt+0x5c>
8001696c:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:296
			}
			break;

			// (signed) decimal
		case 'd':
			num = getint(ap, lflag);
80016970:	29220002 	slti	v0,t1,2
80016974:	144000c8 	bnez	v0,80016c98 <vprintfmt+0x568>
80016978:	2402fff8 	li	v0,-8
8001697c:	26940007 	addiu	s4,s4,7
80016980:	0282a024 	and	s4,s4,v0
80016984:	8e830000 	lw	v1,0(s4)
80016988:	8e820004 	lw	v0,4(s4)
8001698c:	26940008 	addiu	s4,s4,8
80016990:	00604821 	move	t1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:297
			if ((long long)num < 0) {
80016994:	044000ad 	bltz	v0,80016c4c <vprintfmt+0x51c>
80016998:	00405021 	move	t2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:306
			base = 10;
			goto number;

			// unsigned decimal
		case 'u':
			num = getuint(ap, lflag);
8001699c:	2402000a 	li	v0,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:330
			// (unsigned) hexadecimal
		case 'x':
			num = getuint(ap, lflag);
			base = 16;
number:
			printnum(putch, fd, putdat, num, base, width, padc);
800169a0:	02402021 	move	a0,s2
800169a4:	02202821 	move	a1,s1
800169a8:	02003021 	move	a2,s0
800169ac:	afa90010 	sw	t1,16(sp)
800169b0:	afaa0014 	sw	t2,20(sp)
800169b4:	afa20018 	sw	v0,24(sp)
800169b8:	afa7001c 	sw	a3,28(sp)
800169bc:	0c005961 	jal	80016584 <printnum>
800169c0:	afa80020 	sw	t0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:331
			break;
800169c4:	080059e3 	j	8001678c <vprintfmt+0x5c>
800169c8:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:257
			putch(va_arg(ap, int), putdat, fd);
			break;

			// error message
		case 'e':
			err = va_arg(ap, int);
800169cc:	8e820000 	lw	v0,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:262
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
				printfmt(putch, fd, putdat, "error %d", err);
800169d0:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:257
			putch(va_arg(ap, int), putdat, fd);
			break;

			// error message
		case 'e':
			err = va_arg(ap, int);
800169d4:	26940004 	addiu	s4,s4,4
800169d8:	00021fc3 	sra	v1,v0,0x1f
800169dc:	00621026 	xor	v0,v1,v0
800169e0:	00431023 	subu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:261
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
800169e4:	28430028 	slti	v1,v0,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:262
				printfmt(putch, fd, putdat, "error %d", err);
800169e8:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:261
		case 'e':
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
800169ec:	10600091 	beqz	v1,80016c34 <vprintfmt+0x504>
800169f0:	02003021 	move	a2,s0
800169f4:	00021880 	sll	v1,v0,0x2
800169f8:	00771821 	addu	v1,v1,s7
800169fc:	8c630000 	lw	v1,0(v1)
80016a00:	1060008c 	beqz	v1,80016c34 <vprintfmt+0x504>
80016a04:	27c736d8 	addiu	a3,s8,14040
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:264
				printfmt(putch, fd, putdat, "error %d", err);
			} else {
				printfmt(putch, fd, putdat, "%s", p);
80016a08:	0c005b3f 	jal	80016cfc <printfmt>
80016a0c:	afa30010 	sw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016a10:	080059e3 	j	8001678c <vprintfmt+0x5c>
80016a14:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:247
				width = precision, precision = -1;
			goto reswitch;

			// long flag (doubled for long long)
		case 'l':
			lflag++;
80016a18:	90440001 	lbu	a0,1(v0)
80016a1c:	25290001 	addiu	t1,t1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:248
			goto reswitch;
80016a20:	080059fa 	j	800167e8 <vprintfmt+0xb8>
80016a24:	02601021 	move	v0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:312
			base = 10;
			goto number;

			// (unsigned) octal
		case 'o':
			num = getuint(ap, lflag);
80016a28:	29220002 	slti	v0,t1,2
80016a2c:	544000a2 	bnezl	v0,80016cb8 <vprintfmt+0x588>
80016a30:	8e890000 	lw	t1,0(s4)
80016a34:	26940007 	addiu	s4,s4,7
80016a38:	2402fff8 	li	v0,-8
80016a3c:	02821024 	and	v0,s4,v0
80016a40:	24540008 	addiu	s4,v0,8
80016a44:	8c490000 	lw	t1,0(v0)
80016a48:	8c4a0004 	lw	t2,4(v0)
80016a4c:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016a50:	24020008 	li	v0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:318
			base = 8;
			goto number;

			// pointer
		case 'p':
			putch('0', putdat, fd);
80016a54:	afa70038 	sw	a3,56(sp)
80016a58:	afa80030 	sw	t0,48(sp)
80016a5c:	24040030 	li	a0,48
80016a60:	02002821 	move	a1,s0
80016a64:	0240f809 	jalr	s2
80016a68:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:319
			putch('x', putdat, fd);
80016a6c:	24040078 	li	a0,120
80016a70:	02002821 	move	a1,s0
80016a74:	0240f809 	jalr	s2
80016a78:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:320
			num =
80016a7c:	8e890000 	lw	t1,0(s4)
80016a80:	00005021 	move	t2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:321
			    (unsigned long long)(uintptr_t) va_arg(ap, void *);
80016a84:	26940004 	addiu	s4,s4,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:323
			base = 16;
			goto number;
80016a88:	24020010 	li	v0,16
80016a8c:	8fa70038 	lw	a3,56(sp)
80016a90:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016a94:	8fa80030 	lw	t0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:270
			}
			break;

			// string
		case 's':
			if ((p = va_arg(ap, char *)) == NULL) {
80016a98:	8e820000 	lw	v0,0(s4)
80016a9c:	26940004 	addiu	s4,s4,4
80016aa0:	afa2002c 	sw	v0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:271
				p = "(null)";
80016aa4:	8fa4002c 	lw	a0,44(sp)
80016aa8:	26c236f0 	addiu	v0,s6,14064
80016aac:	0044200a 	movz	a0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:273
			}
			if (width > 0 && padc != '-') {
80016ab0:	18e00019 	blez	a3,80016b18 <vprintfmt+0x3e8>
80016ab4:	afa4002c 	sw	a0,44(sp)
80016ab8:	2402002d 	li	v0,45
80016abc:	11020016 	beq	t0,v0,80016b18 <vprintfmt+0x3e8>
80016ac0:	00602821 	move	a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:274
				for (width -= strnlen(p, precision); width > 0;
80016ac4:	afa30034 	sw	v1,52(sp)
80016ac8:	afa70038 	sw	a3,56(sp)
80016acc:	0c005b8b 	jal	80016e2c <strnlen>
80016ad0:	afa80030 	sw	t0,48(sp)
80016ad4:	8fa70038 	lw	a3,56(sp)
80016ad8:	8fa30034 	lw	v1,52(sp)
80016adc:	00e23823 	subu	a3,a3,v0
80016ae0:	18e0000d 	blez	a3,80016b18 <vprintfmt+0x3e8>
80016ae4:	8fa80030 	lw	t0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:275
				     width--) {
80016ae8:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:276
					putch(padc, putdat, fd);
80016aec:	01002021 	move	a0,t0
80016af0:	afa30034 	sw	v1,52(sp)
80016af4:	afa70038 	sw	a3,56(sp)
80016af8:	afa80030 	sw	t0,48(sp)
80016afc:	02002821 	move	a1,s0
80016b00:	0240f809 	jalr	s2
80016b04:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:274
		case 's':
			if ((p = va_arg(ap, char *)) == NULL) {
				p = "(null)";
			}
			if (width > 0 && padc != '-') {
				for (width -= strnlen(p, precision); width > 0;
80016b08:	8fa70038 	lw	a3,56(sp)
80016b0c:	8fa30034 	lw	v1,52(sp)
80016b10:	14e0fff5 	bnez	a3,80016ae8 <vprintfmt+0x3b8>
80016b14:	8fa80030 	lw	t0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:280
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
			     (ch = *p++) != '\0' && (precision < 0
80016b18:	8fa2002c 	lw	v0,44(sp)
80016b1c:	90440000 	lbu	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:279
				for (width -= strnlen(p, precision); width > 0;
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
80016b20:	10800018 	beqz	a0,80016b84 <vprintfmt+0x454>
80016b24:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:280
			     (ch = *p++) != '\0' && (precision < 0
80016b28:	04600004 	bltz	v1,80016b3c <vprintfmt+0x40c>
80016b2c:	2405ffff 	li	a1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:281
						     || --precision >= 0);
80016b30:	2463ffff 	addiu	v1,v1,-1
80016b34:	10650013 	beq	v1,a1,80016b84 <vprintfmt+0x454>
80016b38:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:283
			     width--) {
				if (altflag && (ch < ' ' || ch > '~')) {
80016b3c:	8fa50028 	lw	a1,40(sp)
80016b40:	10a00003 	beqz	a1,80016b50 <vprintfmt+0x420>
80016b44:	2485ffe0 	addiu	a1,a0,-32
80016b48:	2ca5005f 	sltiu	a1,a1,95
80016b4c:	10a0002f 	beqz	a1,80016c0c <vprintfmt+0x4dc>
80016b50:	afa2003c 	sw	v0,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:286
					putch('?', putdat, fd);
				} else {
					putch(ch, putdat, fd);
80016b54:	afa30034 	sw	v1,52(sp)
80016b58:	afa70038 	sw	a3,56(sp)
80016b5c:	02002821 	move	a1,s0
80016b60:	0240f809 	jalr	s2
80016b64:	02203021 	move	a2,s1
80016b68:	8fa70038 	lw	a3,56(sp)
80016b6c:	8fa30034 	lw	v1,52(sp)
80016b70:	8fa2003c 	lw	v0,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:280
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
			     (ch = *p++) != '\0' && (precision < 0
80016b74:	90440000 	lbu	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:282
						     || --precision >= 0);
			     width--) {
80016b78:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:279
				for (width -= strnlen(p, precision); width > 0;
				     width--) {
					putch(padc, putdat, fd);
				}
			}
			for (;
80016b7c:	1480ffea 	bnez	a0,80016b28 <vprintfmt+0x3f8>
80016b80:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:289
					putch('?', putdat, fd);
				} else {
					putch(ch, putdat, fd);
				}
			}
			for (; width > 0; width--) {
80016b84:	58e0ff01 	blezl	a3,8001678c <vprintfmt+0x5c>
80016b88:	92640000 	lbu	a0,0(s3)
80016b8c:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:290
				putch(' ', putdat, fd);
80016b90:	afa70038 	sw	a3,56(sp)
80016b94:	24040020 	li	a0,32
80016b98:	02002821 	move	a1,s0
80016b9c:	0240f809 	jalr	s2
80016ba0:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:289
					putch('?', putdat, fd);
				} else {
					putch(ch, putdat, fd);
				}
			}
			for (; width > 0; width--) {
80016ba4:	8fa70038 	lw	a3,56(sp)
80016ba8:	54e0fff9 	bnezl	a3,80016b90 <vprintfmt+0x460>
80016bac:	24e7ffff 	addiu	a3,a3,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:191
	register int ch, err;
	unsigned long long num;
	int base, width, precision, lflag, altflag;

	while (1) {
		while ((ch = *(unsigned char *)fmt++) != '%') {
80016bb0:	080059e3 	j	8001678c <vprintfmt+0x5c>
80016bb4:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:306
			base = 10;
			goto number;

			// unsigned decimal
		case 'u':
			num = getuint(ap, lflag);
80016bb8:	29220002 	slti	v0,t1,2
80016bbc:	14400046 	bnez	v0,80016cd8 <vprintfmt+0x5a8>
80016bc0:	2402fff8 	li	v0,-8
80016bc4:	26940007 	addiu	s4,s4,7
80016bc8:	02821024 	and	v0,s4,v0
80016bcc:	24540008 	addiu	s4,v0,8
80016bd0:	8c490000 	lw	t1,0(v0)
80016bd4:	8c4a0004 	lw	t2,4(v0)
80016bd8:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016bdc:	2402000a 	li	v0,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:327
			base = 16;
			goto number;

			// (unsigned) hexadecimal
		case 'x':
			num = getuint(ap, lflag);
80016be0:	29220002 	slti	v0,t1,2
80016be4:	54400038 	bnezl	v0,80016cc8 <vprintfmt+0x598>
80016be8:	8e890000 	lw	t1,0(s4)
80016bec:	26940007 	addiu	s4,s4,7
80016bf0:	2402fff8 	li	v0,-8
80016bf4:	02821024 	and	v0,s4,v0
80016bf8:	24540008 	addiu	s4,v0,8
80016bfc:	8c490000 	lw	t1,0(v0)
80016c00:	8c4a0004 	lw	t2,4(v0)
80016c04:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016c08:	24020010 	li	v0,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:284
			for (;
			     (ch = *p++) != '\0' && (precision < 0
						     || --precision >= 0);
			     width--) {
				if (altflag && (ch < ' ' || ch > '~')) {
					putch('?', putdat, fd);
80016c0c:	afa30034 	sw	v1,52(sp)
80016c10:	afa70038 	sw	a3,56(sp)
80016c14:	2404003f 	li	a0,63
80016c18:	02002821 	move	a1,s0
80016c1c:	0240f809 	jalr	s2
80016c20:	02203021 	move	a2,s1
80016c24:	8fa2003c 	lw	v0,60(sp)
80016c28:	8fa30034 	lw	v1,52(sp)
80016c2c:	08005add 	j	80016b74 <vprintfmt+0x444>
80016c30:	8fa70038 	lw	a3,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:262
			err = va_arg(ap, int);
			if (err < 0) {
				err = -err;
			}
			if (err > MAXERROR || (p = error_string[err]) == NULL) {
				printfmt(putch, fd, putdat, "error %d", err);
80016c34:	3c078002 	lui	a3,0x8002
80016c38:	24e736f8 	addiu	a3,a3,14072
80016c3c:	0c005b3f 	jal	80016cfc <printfmt>
80016c40:	afa20010 	sw	v0,16(sp)
80016c44:	080059e3 	j	8001678c <vprintfmt+0x5c>
80016c48:	92640000 	lbu	a0,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:298

			// (signed) decimal
		case 'd':
			num = getint(ap, lflag);
			if ((long long)num < 0) {
				putch('-', putdat, fd);
80016c4c:	2404002d 	li	a0,45
80016c50:	afa2003c 	sw	v0,60(sp)
80016c54:	afa30034 	sw	v1,52(sp)
80016c58:	afa70038 	sw	a3,56(sp)
80016c5c:	afa80030 	sw	t0,48(sp)
80016c60:	02002821 	move	a1,s0
80016c64:	0240f809 	jalr	s2
80016c68:	02203021 	move	a2,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:299
				num = -(long long)num;
80016c6c:	8fa30034 	lw	v1,52(sp)
80016c70:	8fa2003c 	lw	v0,60(sp)
80016c74:	8fa70038 	lw	a3,56(sp)
80016c78:	00031823 	negu	v1,v1
80016c7c:	00021023 	negu	v0,v0
80016c80:	0003202b 	sltu	a0,zero,v1
80016c84:	00445023 	subu	t2,v0,a0
80016c88:	00604821 	move	t1,v1
80016c8c:	2402000a 	li	v0,10
80016c90:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016c94:	8fa80030 	lw	t0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:296
			}
			break;

			// (signed) decimal
		case 'd':
			num = getint(ap, lflag);
80016c98:	8e890000 	lw	t1,0(s4)
80016c9c:	26940004 	addiu	s4,s4,4
80016ca0:	000957c3 	sra	t2,t1,0x1f
80016ca4:	01401021 	move	v0,t2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:297
			if ((long long)num < 0) {
80016ca8:	0441ff3c 	bgez	v0,8001699c <vprintfmt+0x26c>
80016cac:	01201821 	move	v1,t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:298
				putch('-', putdat, fd);
80016cb0:	08005b14 	j	80016c50 <vprintfmt+0x520>
80016cb4:	2404002d 	li	a0,45
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:312
			base = 10;
			goto number;

			// (unsigned) octal
		case 'o':
			num = getuint(ap, lflag);
80016cb8:	00005021 	move	t2,zero
80016cbc:	26940004 	addiu	s4,s4,4
80016cc0:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016cc4:	24020008 	li	v0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:327
			base = 16;
			goto number;

			// (unsigned) hexadecimal
		case 'x':
			num = getuint(ap, lflag);
80016cc8:	00005021 	move	t2,zero
80016ccc:	26940004 	addiu	s4,s4,4
80016cd0:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016cd4:	24020010 	li	v0,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:306
			base = 10;
			goto number;

			// unsigned decimal
		case 'u':
			num = getuint(ap, lflag);
80016cd8:	11200004 	beqz	t1,80016cec <vprintfmt+0x5bc>
80016cdc:	8e890000 	lw	t1,0(s4)
80016ce0:	00005021 	move	t2,zero
80016ce4:	08005a67 	j	8001699c <vprintfmt+0x26c>
80016ce8:	26940004 	addiu	s4,s4,4
80016cec:	00005021 	move	t2,zero
80016cf0:	26940004 	addiu	s4,s4,4
80016cf4:	08005a68 	j	800169a0 <vprintfmt+0x270>
80016cf8:	2402000a 	li	v0,10

80016cfc <printfmt>:
printfmt():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:161
 * @fmt:        the format string to use
 * */
void
printfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	 const char *fmt, ...)
{
80016cfc:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:164
	va_list ap;

	va_start(ap, fmt);
80016d00:	27a20038 	addiu	v0,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:161
 * @fmt:        the format string to use
 * */
void
printfmt(void (*putch) (int, void *, int), int fd, void *putdat,
	 const char *fmt, ...)
{
80016d04:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:164
	va_list ap;

	va_start(ap, fmt);
80016d08:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:165
	vprintfmt(putch, fd, putdat, fmt, ap);
80016d0c:	0c0059cc 	jal	80016730 <vprintfmt>
80016d10:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:167
	va_end(ap);
}
80016d14:	8fbf0024 	lw	ra,36(sp)
80016d18:	03e00008 	jr	ra
80016d1c:	27bd0028 	addiu	sp,sp,40

80016d20 <snprintf>:
snprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:402
 * @str:        the buffer to place the result into
 * @size:       the size of buffer, including the trailing null space
 * @fmt:        the format string to use
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
80016d20:	27bdffd0 	addiu	sp,sp,-48
ucore_vsnprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:384
 * Call this function if you are already dealing with a va_list.
 * Or you probably want snprintf() instead.
 * */
static int ucore_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)
{
	struct sprintbuf b = { str, str + size - 1, 0 };
80016d24:	24a5ffff 	addiu	a1,a1,-1
snprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:405
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
	va_list ap;
	int cnt;
	va_start(ap, fmt);
80016d28:	27a2003c 	addiu	v0,sp,60
ucore_vsnprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:384
 * Call this function if you are already dealing with a va_list.
 * Or you probably want snprintf() instead.
 * */
static int ucore_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)
{
	struct sprintbuf b = { str, str + size - 1, 0 };
80016d2c:	00852821 	addu	a1,a0,a1
snprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:402
 * @str:        the buffer to place the result into
 * @size:       the size of buffer, including the trailing null space
 * @fmt:        the format string to use
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
80016d30:	afa7003c 	sw	a3,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:405
	va_list ap;
	int cnt;
	va_start(ap, fmt);
80016d34:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:402
 * @str:        the buffer to place the result into
 * @size:       the size of buffer, including the trailing null space
 * @fmt:        the format string to use
 * */
int snprintf(char *str, size_t size, const char *fmt, ...)
{
80016d38:	afbf002c 	sw	ra,44(sp)
80016d3c:	00c03821 	move	a3,a2
ucore_vsnprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:384
 * Call this function if you are already dealing with a va_list.
 * Or you probably want snprintf() instead.
 * */
static int ucore_vsnprintf(char *str, size_t size, const char *fmt, va_list ap)
{
	struct sprintbuf b = { str, str + size - 1, 0 };
80016d40:	afa4001c 	sw	a0,28(sp)
80016d44:	afa50020 	sw	a1,32(sp)
80016d48:	afa00024 	sw	zero,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:385
	if (str == NULL || b.buf > b.ebuf) {
80016d4c:	1080000e 	beqz	a0,80016d88 <snprintf+0x68>
80016d50:	2402ffea 	li	v0,-22
80016d54:	00a4202b 	sltu	a0,a1,a0
80016d58:	1480000b 	bnez	a0,80016d88 <snprintf+0x68>
80016d5c:	3c048001 	lui	a0,0x8001
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:389
		return -E_INVAL;
	}
	// print the string to the buffer
	vprintfmt((void *)sprintputch, NO_FD, &b, fmt, ap);
80016d60:	3c05ffff 	lui	a1,0xffff
80016d64:	27a2003c 	addiu	v0,sp,60
80016d68:	24846700 	addiu	a0,a0,26368
80016d6c:	24a56ad9 	addiu	a1,a1,27353
80016d70:	27a6001c 	addiu	a2,sp,28
80016d74:	0c0059cc 	jal	80016730 <vprintfmt>
80016d78:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:391
	// null terminate the buffer
	*b.buf = '\0';
80016d7c:	8fa2001c 	lw	v0,28(sp)
80016d80:	a0400000 	sb	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:392
	return b.cnt;
80016d84:	8fa20024 	lw	v0,36(sp)
snprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/printfmt.c:409
	int cnt;
	va_start(ap, fmt);
	cnt = ucore_vsnprintf(str, size, fmt, ap);
	va_end(ap);
	return cnt;
}
80016d88:	8fbf002c 	lw	ra,44(sp)
80016d8c:	03e00008 	jr	ra
80016d90:	27bd0030 	addiu	sp,sp,48

80016d94 <rand>:
rand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/rand.c:13
 *
 * The rand() function return a value in the range [0, RAND_MAX].
 * */
int rand(void)
{
	next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);
80016d94:	3c038002 	lui	v1,0x8002
80016d98:	8c645428 	lw	a0,21544(v1)
80016d9c:	3c02deec 	lui	v0,0xdeec
80016da0:	3442e66d 	ori	v0,v0,0xe66d
80016da4:	24060005 	li	a2,5
80016da8:	70863002 	mul	a2,a0,a2
80016dac:	8c67542c 	lw	a3,21548(v1)
80016db0:	00820019 	multu	a0,v0
80016db4:	00002012 	mflo	a0
80016db8:	00002810 	mfhi	a1
80016dbc:	70e24002 	mul	t0,a3,v0
80016dc0:	01061021 	addu	v0,t0,a2
80016dc4:	2488000b 	addiu	t0,a0,11
80016dc8:	0104482b 	sltu	t1,t0,a0
80016dcc:	00451021 	addu	v0,v0,a1
80016dd0:	01221021 	addu	v0,t1,v0
80016dd4:	3042ffff 	andi	v0,v0,0xffff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/rand.c:14
	unsigned long long result = (next >> 12);
80016dd8:	00022d00 	sll	a1,v0,0x14
80016ddc:	00082302 	srl	a0,t0,0xc
80016de0:	00a42025 	or	a0,a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/rand.c:13
 *
 * The rand() function return a value in the range [0, RAND_MAX].
 * */
int rand(void)
{
	next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);
80016de4:	ac62542c 	sw	v0,21548(v1)
80016de8:	ac685428 	sw	t0,21544(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/rand.c:16
	unsigned long long result = (next >> 12);
	return (int)do_div(result, RAND_MAX + 1);
}
80016dec:	03e00008 	jr	ra
80016df0:	7c82f000 	ext	v0,a0,0x0,0x1f

80016df4 <srand>:
srand():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/rand.c:24
 * srand - seed the random number generator with the given number
 * @seed:   the required seed number
 * */
void srand(unsigned int seed)
{
	next = seed;
80016df4:	3c028002 	lui	v0,0x8002
80016df8:	ac445428 	sw	a0,21544(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/rand.c:25
}
80016dfc:	03e00008 	jr	ra
80016e00:	ac40542c 	sw	zero,21548(v0)

80016e04 <strlen>:
strlen():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:14
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016e04:	90830000 	lbu	v1,0(a0)
80016e08:	10600006 	beqz	v1,80016e24 <strlen+0x20>
80016e0c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:15
		cnt++;
80016e10:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:11
 * the terminating '\0' character.
 * @s:      the input string
 *
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
80016e14:	00821821 	addu	v1,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:14
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016e18:	90630000 	lbu	v1,0(v1)
80016e1c:	5460fffd 	bnezl	v1,80016e14 <strlen+0x10>
80016e20:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:18
		cnt++;
	}
	return cnt;
}
80016e24:	03e00008 	jr	ra
80016e28:	00000000 	nop

80016e2c <strnlen>:
strnlen():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:36
 * pointed by @s.
 * */
size_t strnlen(const char *s, size_t len)
{
	size_t cnt = 0;
	while (cnt < len && *s++ != '\0') {
80016e2c:	10a0000c 	beqz	a1,80016e60 <strnlen+0x34>
80016e30:	00001021 	move	v0,zero
80016e34:	90830000 	lbu	v1,0(a0)
80016e38:	54600007 	bnezl	v1,80016e58 <strnlen+0x2c>
80016e3c:	24420001 	addiu	v0,v0,1
80016e40:	08005b98 	j	80016e60 <strnlen+0x34>
80016e44:	00000000 	nop
80016e48:	90630000 	lbu	v1,0(v1)
80016e4c:	10600004 	beqz	v1,80016e60 <strnlen+0x34>
80016e50:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:37
		cnt++;
80016e54:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:36
 * pointed by @s.
 * */
size_t strnlen(const char *s, size_t len)
{
	size_t cnt = 0;
	while (cnt < len && *s++ != '\0') {
80016e58:	1445fffb 	bne	v0,a1,80016e48 <strnlen+0x1c>
80016e5c:	00821821 	addu	v1,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:40
		cnt++;
	}
	return cnt;
}
80016e60:	03e00008 	jr	ra
80016e64:	00000000 	nop

80016e68 <strcpy>:
strcpy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:55
 * To avoid overflows, the size of array pointed by @dst should be long enough to
 * contain the same string as @src (including the terminating null character), and
 * should not overlap in memory with @src.
 * */
char *strcpy(char *dst, const char *src)
{
80016e68:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:59
#ifdef __HAVE_ARCH_STRCPY
	return __strcpy(dst, src);
#else
	char *p = dst;
80016e6c:	00801821 	move	v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:60
	while ((*p++ = *src++) != '\0')
80016e70:	90a40000 	lbu	a0,0(a1)
80016e74:	24a50001 	addiu	a1,a1,1
80016e78:	a0640000 	sb	a0,0(v1)
80016e7c:	1480fffc 	bnez	a0,80016e70 <strcpy+0x8>
80016e80:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:64
		/* nothing */ ;
	return dst;
#endif /* __HAVE_ARCH_STRCPY */
}
80016e84:	03e00008 	jr	ra
80016e88:	00000000 	nop

80016e8c <strncpy>:
strncpy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:79
 * The return value is @dst
 * */
char *strncpy(char *dst, const char *src, size_t len)
{
	char *p = dst;
	while (len > 0) {
80016e8c:	10c00009 	beqz	a2,80016eb4 <strncpy+0x28>
80016e90:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:76
 * @src:    string to be copied
 * @len:    maximum number of characters to be copied from @src
 *
 * The return value is @dst
 * */
char *strncpy(char *dst, const char *src, size_t len)
80016e94:	00863021 	addu	a2,a0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:78
{
	char *p = dst;
80016e98:	00801821 	move	v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:80
	while (len > 0) {
		if ((*p = *src) != '\0') {
80016e9c:	90a40000 	lbu	a0,0(a1)
80016ea0:	a0640000 	sb	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:81
			src++;
80016ea4:	0004202b 	sltu	a0,zero,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:83
		}
		p++, len--;
80016ea8:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:79
 * The return value is @dst
 * */
char *strncpy(char *dst, const char *src, size_t len)
{
	char *p = dst;
	while (len > 0) {
80016eac:	1466fffb 	bne	v1,a2,80016e9c <strncpy+0x10>
80016eb0:	00a42821 	addu	a1,a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:86
			src++;
		}
		p++, len--;
	}
	return dst;
}
80016eb4:	03e00008 	jr	ra
80016eb8:	00000000 	nop

80016ebc <strcat>:
strlen():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:14
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016ebc:	90830000 	lbu	v1,0(a0)
80016ec0:	10600007 	beqz	v1,80016ee0 <strcat+0x24>
80016ec4:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:13
 *
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
80016ec8:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:15
	while (*s++ != '\0') {
		cnt++;
80016ecc:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:96
 * is appended at the end of the new string formed by the concatenation of both in @dst.
 * @dst:    pointer to the @dst array, which should be large enough to contain the concatenated
 *          resulting string.
 * @src:    string to be appended, this should not overlap @dst
 * */
char *strcat(char *dst, const char *src)
80016ed0:	00831021 	addu	v0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:14
 * The strlen() function returns the length of string @s.
 * */
size_t strlen(const char *s)
{
	size_t cnt = 0;
	while (*s++ != '\0') {
80016ed4:	90460000 	lbu	a2,0(v0)
80016ed8:	54c0fffd 	bnezl	a2,80016ed0 <strcat+0x14>
80016edc:	24630001 	addiu	v1,v1,1
strcat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:59
char *strcpy(char *dst, const char *src)
{
#ifdef __HAVE_ARCH_STRCPY
	return __strcpy(dst, src);
#else
	char *p = dst;
80016ee0:	00401821 	move	v1,v0
strcpy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:60
	while ((*p++ = *src++) != '\0')
80016ee4:	90a40000 	lbu	a0,0(a1)
80016ee8:	24a50001 	addiu	a1,a1,1
80016eec:	a0640000 	sb	a0,0(v1)
80016ef0:	1480fffc 	bnez	a0,80016ee4 <strcat+0x28>
80016ef4:	24630001 	addiu	v1,v1,1
strcat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:99
 * @src:    string to be appended, this should not overlap @dst
 * */
char *strcat(char *dst, const char *src)
{
	return strcpy(dst + strlen(dst), src);
}
80016ef8:	03e00008 	jr	ra
80016efc:	00000000 	nop

80016f00 <strcmp>:
strcmp():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:121
int strcmp(const char *s1, const char *s2)
{
#ifdef __HAVE_ARCH_STRCMP
	return __strcmp(s1, s2);
#else
	while (*s1 != '\0' && *s1 == *s2) {
80016f00:	90830000 	lbu	v1,0(a0)
80016f04:	1060000c 	beqz	v1,80016f38 <strcmp+0x38>
80016f08:	90a20000 	lbu	v0,0(a1)
80016f0c:	10620005 	beq	v1,v0,80016f24 <strcmp+0x24>
80016f10:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:126
		s1++, s2++;
	}
	return (int)((unsigned char)*s1 - (unsigned char)*s2);
#endif /* __HAVE_ARCH_STRCMP */
}
80016f14:	03e00008 	jr	ra
80016f18:	00621023 	subu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:121
int strcmp(const char *s1, const char *s2)
{
#ifdef __HAVE_ARCH_STRCMP
	return __strcmp(s1, s2);
#else
	while (*s1 != '\0' && *s1 == *s2) {
80016f1c:	14620006 	bne	v1,v0,80016f38 <strcmp+0x38>
80016f20:	00c02821 	move	a1,a2
80016f24:	90830000 	lbu	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:122
		s1++, s2++;
80016f28:	24a60001 	addiu	a2,a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:121
int strcmp(const char *s1, const char *s2)
{
#ifdef __HAVE_ARCH_STRCMP
	return __strcmp(s1, s2);
#else
	while (*s1 != '\0' && *s1 == *s2) {
80016f2c:	24840001 	addiu	a0,a0,1
80016f30:	1460fffa 	bnez	v1,80016f1c <strcmp+0x1c>
80016f34:	90a20001 	lbu	v0,1(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:126
		s1++, s2++;
	}
	return (int)((unsigned char)*s1 - (unsigned char)*s2);
#endif /* __HAVE_ARCH_STRCMP */
}
80016f38:	00621023 	subu	v0,v1,v0
80016f3c:	03e00008 	jr	ra
80016f40:	00000000 	nop

80016f44 <strncmp>:
strncmp():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:141
 * the characters differ, until a terminating null-character is reached, or
 * until @n characters match in both strings, whichever happens first.
 * */
int strncmp(const char *s1, const char *s2, size_t n)
{
	while (n > 0 && *s1 != '\0' && *s1 == *s2) {
80016f44:	10c00013 	beqz	a2,80016f94 <strncmp+0x50>
80016f48:	00001021 	move	v0,zero
80016f4c:	90820000 	lbu	v0,0(a0)
80016f50:	1040000d 	beqz	v0,80016f88 <strncmp+0x44>
80016f54:	90a30000 	lbu	v1,0(a1)
80016f58:	1443000b 	bne	v0,v1,80016f88 <strncmp+0x44>
80016f5c:	00a63021 	addu	a2,a1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:139
 * This function starts comparing the first character of each string. If
 * they are equal to each other, it continues with the following pairs until
 * the characters differ, until a terminating null-character is reached, or
 * until @n characters match in both strings, whichever happens first.
 * */
int strncmp(const char *s1, const char *s2, size_t n)
80016f60:	24840001 	addiu	a0,a0,1
80016f64:	24c6ffff 	addiu	a2,a2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:141
{
	while (n > 0 && *s1 != '\0' && *s1 == *s2) {
80016f68:	10a60009 	beq	a1,a2,80016f90 <strncmp+0x4c>
80016f6c:	24a70001 	addiu	a3,a1,1
80016f70:	90820000 	lbu	v0,0(a0)
80016f74:	24840001 	addiu	a0,a0,1
80016f78:	10400003 	beqz	v0,80016f88 <strncmp+0x44>
80016f7c:	90a30001 	lbu	v1,1(a1)
80016f80:	1043fff9 	beq	v0,v1,80016f68 <strncmp+0x24>
80016f84:	00e02821 	move	a1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:144
		n--, s1++, s2++;
	}
	return (n == 0) ? 0 : (int)((unsigned char)*s1 - (unsigned char)*s2);
80016f88:	03e00008 	jr	ra
80016f8c:	00431023 	subu	v0,v0,v1
80016f90:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:145
}
80016f94:	03e00008 	jr	ra
80016f98:	00000000 	nop

80016f9c <strchr>:
strchr():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:157
 * The strchr() function returns a pointer to the first occurrence of
 * character in @s. If the value is not found, the function returns 'NULL'.
 * */
char *strchr(const char *s, char c)
{
	while (*s != '\0') {
80016f9c:	90830000 	lbu	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:156
 *
 * The strchr() function returns a pointer to the first occurrence of
 * character in @s. If the value is not found, the function returns 'NULL'.
 * */
char *strchr(const char *s, char c)
{
80016fa0:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:157
	while (*s != '\0') {
80016fa4:	1060000c 	beqz	v1,80016fd8 <strchr+0x3c>
80016fa8:	30a500ff 	andi	a1,a1,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:158
		if (*s == c) {
80016fac:	54650006 	bnel	v1,a1,80016fc8 <strchr+0x2c>
80016fb0:	90430001 	lbu	v1,1(v0)
80016fb4:	08005bf8 	j	80016fe0 <strchr+0x44>
80016fb8:	00000000 	nop
80016fbc:	10650008 	beq	v1,a1,80016fe0 <strchr+0x44>
80016fc0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:157
 * The strchr() function returns a pointer to the first occurrence of
 * character in @s. If the value is not found, the function returns 'NULL'.
 * */
char *strchr(const char *s, char c)
{
	while (*s != '\0') {
80016fc4:	90430001 	lbu	v1,1(v0)
80016fc8:	1460fffc 	bnez	v1,80016fbc <strchr+0x20>
80016fcc:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:163
		if (*s == c) {
			return (char *)s;
		}
		s++;
	}
	return NULL;
80016fd0:	03e00008 	jr	ra
80016fd4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:164
}
80016fd8:	03e00008 	jr	ra
80016fdc:	00001021 	move	v0,zero
80016fe0:	03e00008 	jr	ra
80016fe4:	00000000 	nop

80016fe8 <strfind>:
strfind():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:177
 * not found in @s, then it returns a pointer to the null byte at the
 * end of @s, rather than 'NULL'.
 * */
char *strfind(const char *s, char c)
{
	while (*s != '\0') {
80016fe8:	90830000 	lbu	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:176
 * The strfind() function is like strchr() except that if @c is
 * not found in @s, then it returns a pointer to the null byte at the
 * end of @s, rather than 'NULL'.
 * */
char *strfind(const char *s, char c)
{
80016fec:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:177
	while (*s != '\0') {
80016ff0:	1060000b 	beqz	v1,80017020 <strfind+0x38>
80016ff4:	30a500ff 	andi	a1,a1,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:178
		if (*s == c) {
80016ff8:	54650006 	bnel	v1,a1,80017014 <strfind+0x2c>
80016ffc:	24420001 	addiu	v0,v0,1
80017000:	08005c0a 	j	80017028 <strfind+0x40>
80017004:	00000000 	nop
80017008:	10650007 	beq	v1,a1,80017028 <strfind+0x40>
8001700c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:181
			break;
		}
		s++;
80017010:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:177
 * not found in @s, then it returns a pointer to the null byte at the
 * end of @s, rather than 'NULL'.
 * */
char *strfind(const char *s, char c)
{
	while (*s != '\0') {
80017014:	90430000 	lbu	v1,0(v0)
80017018:	1460fffb 	bnez	v1,80017008 <strfind+0x20>
8001701c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:184
			break;
		}
		s++;
	}
	return (char *)s;
}
80017020:	03e00008 	jr	ra
80017024:	00000000 	nop
80017028:	03e00008 	jr	ra
8001702c:	00000000 	nop

80017030 <strtol>:
strtol():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:222
{
	int neg = 0;
	long val = 0;

	// gobble initial whitespace
	while (*s == ' ' || *s == '\t') {
80017030:	24020020 	li	v0,32
80017034:	24070009 	li	a3,9
80017038:	90830000 	lbu	v1,0(a0)
8001703c:	5062fffe 	beql	v1,v0,80017038 <strtol+0x8>
80017040:	24840001 	addiu	a0,a0,1
80017044:	54670003 	bnel	v1,a3,80017054 <strtol+0x24>
80017048:	2402002b 	li	v0,43
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:223
		s++;
8001704c:	08005c0e 	j	80017038 <strtol+0x8>
80017050:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:227
	}

	// plus/minus sign
	if (*s == '+') {
80017054:	10620039 	beq	v1,v0,8001713c <strtol+0x10c>
80017058:	00803821 	move	a3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:229
		s++;
	} else if (*s == '-') {
8001705c:	2402002d 	li	v0,45
80017060:	10620032 	beq	v1,v0,8001712c <strtol+0xfc>
80017064:	00005021 	move	t2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:233
		s++, neg = 1;
	}
	// hex or octal base prefix
	if ((base == 0 || base == 16) && (s[0] == '0' && s[1] == 'x')) {
80017068:	10c00021 	beqz	a2,800170f0 <strtol+0xc0>
8001706c:	24020030 	li	v0,48
80017070:	24020010 	li	v0,16
80017074:	50c2001e 	beql	a2,v0,800170f0 <strtol+0xc0>
80017078:	24020030 	li	v0,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:238
		s += 2, base = 16;
	} else if (base == 0 && s[0] == '0') {
		s++, base = 8;
	} else if (base == 0) {
		base = 10;
8001707c:	08005c28 	j	800170a0 <strtol+0x70>
80017080:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:245
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
			dig = *s - '0';
80017084:	00e01821 	move	v1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:253
		} else if (*s >= 'A' && *s <= 'Z') {
			dig = *s - 'A' + 10;
		} else {
			break;
		}
		if (dig >= base) {
80017088:	0066382a 	slt	a3,v1,a2
8001708c:	10e00013 	beqz	a3,800170dc <strtol+0xac>
80017090:	70463802 	mul	a3,v0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:256
			break;
		}
		s++, val = (val * base) + dig;
80017094:	24840001 	addiu	a0,a0,1
80017098:	00e31021 	addu	v0,a3,v1
8001709c:	90830000 	lbu	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:244
	}
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
800170a0:	2467ffd0 	addiu	a3,v1,-48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:246
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
800170a4:	2469ff9f 	addiu	t1,v1,-97
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:244
	}
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
800170a8:	30e800ff 	andi	t0,a3,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:246
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
800170ac:	312900ff 	andi	t1,t1,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:244
	}
	// digits
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
800170b0:	2d08000a 	sltiu	t0,t0,10
800170b4:	1500fff3 	bnez	t0,80017084 <strtol+0x54>
800170b8:	2d29001a 	sltiu	t1,t1,26
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:248
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
			dig = *s - 'a' + 10;
		} else if (*s >= 'A' && *s <= 'Z') {
800170bc:	2467ffbf 	addiu	a3,v1,-65
800170c0:	30e700ff 	andi	a3,a3,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:246
	while (1) {
		int dig;

		if (*s >= '0' && *s <= '9') {
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
800170c4:	11200015 	beqz	t1,8001711c <strtol+0xec>
800170c8:	2ce7001a 	sltiu	a3,a3,26
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:247
			dig = *s - 'a' + 10;
800170cc:	2463ffa9 	addiu	v1,v1,-87
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:253
		} else if (*s >= 'A' && *s <= 'Z') {
			dig = *s - 'A' + 10;
		} else {
			break;
		}
		if (dig >= base) {
800170d0:	0066382a 	slt	a3,v1,a2
800170d4:	14e0ffef 	bnez	a3,80017094 <strtol+0x64>
800170d8:	70463802 	mul	a3,v0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:260
		}
		s++, val = (val * base) + dig;
		// we don't properly detect overflow!
	}

	if (endptr) {
800170dc:	54a00001 	bnezl	a1,800170e4 <strtol+0xb4>
800170e0:	aca40000 	sw	a0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:263
		*endptr = (char *)s;
	}
	return (neg ? -val : val);
800170e4:	00021823 	negu	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:264
}
800170e8:	03e00008 	jr	ra
800170ec:	006a100b 	movn	v0,v1,t2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:233
		s++;
	} else if (*s == '-') {
		s++, neg = 1;
	}
	// hex or octal base prefix
	if ((base == 0 || base == 16) && (s[0] == '0' && s[1] == 'x')) {
800170f0:	50620016 	beql	v1,v0,8001714c <strtol+0x11c>
800170f4:	90870001 	lbu	a3,1(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:235
		s += 2, base = 16;
	} else if (base == 0 && s[0] == '0') {
800170f8:	14c0ffe9 	bnez	a2,800170a0 <strtol+0x70>
800170fc:	00001021 	move	v0,zero
80017100:	24020030 	li	v0,48
80017104:	1462ffdd 	bne	v1,v0,8001707c <strtol+0x4c>
80017108:	2406000a 	li	a2,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:236
		s++, base = 8;
8001710c:	90830001 	lbu	v1,1(a0)
80017110:	24060008 	li	a2,8
80017114:	08005c1f 	j	8001707c <strtol+0x4c>
80017118:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:248

		if (*s >= '0' && *s <= '9') {
			dig = *s - '0';
		} else if (*s >= 'a' && *s <= 'z') {
			dig = *s - 'a' + 10;
		} else if (*s >= 'A' && *s <= 'Z') {
8001711c:	10e0ffef 	beqz	a3,800170dc <strtol+0xac>
80017120:	2463ffc9 	addiu	v1,v1,-55
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:253
			dig = *s - 'A' + 10;
		} else {
			break;
		}
		if (dig >= base) {
80017124:	08005c23 	j	8001708c <strtol+0x5c>
80017128:	0066382a 	slt	a3,v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:230

	// plus/minus sign
	if (*s == '+') {
		s++;
	} else if (*s == '-') {
		s++, neg = 1;
8001712c:	90830001 	lbu	v1,1(a0)
80017130:	240a0001 	li	t2,1
80017134:	08005c1a 	j	80017068 <strtol+0x38>
80017138:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:228
		s++;
	}

	// plus/minus sign
	if (*s == '+') {
		s++;
8001713c:	24840001 	addiu	a0,a0,1
80017140:	90e30001 	lbu	v1,1(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:218
 *
 * The strtol() function returns the converted integral number as a long int value.
 * */
long strtol(const char *s, char **endptr, int base)
{
	int neg = 0;
80017144:	08005c1a 	j	80017068 <strtol+0x38>
80017148:	00005021 	move	t2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:233
		s++;
	} else if (*s == '-') {
		s++, neg = 1;
	}
	// hex or octal base prefix
	if ((base == 0 || base == 16) && (s[0] == '0' && s[1] == 'x')) {
8001714c:	24020078 	li	v0,120
80017150:	14e2ffe9 	bne	a3,v0,800170f8 <strtol+0xc8>
80017154:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:234
		s += 2, base = 16;
80017158:	90830002 	lbu	v1,2(a0)
8001715c:	24060010 	li	a2,16
80017160:	08005c1f 	j	8001707c <strtol+0x4c>
80017164:	24840002 	addiu	a0,a0,2

80017168 <memset>:
memset():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:281
{
#ifdef __HAVE_ARCH_MEMSET
	return __memset(s, c, n);
#else
	char *p = s;
	while (n-- > 0) {
80017168:	10c00007 	beqz	a2,80017188 <memset+0x20>
8001716c:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:275
 * @c:      value to set
 * @n:      number of bytes to be set to the value
 *
 * The memset() function returns @s.
 * */
void *memset(void *s, char c, size_t n)
80017170:	00863021 	addu	a2,a0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:280
{
#ifdef __HAVE_ARCH_MEMSET
	return __memset(s, c, n);
#else
	char *p = s;
80017174:	00801821 	move	v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:282
	while (n-- > 0) {
		*p++ = c;
80017178:	a0650000 	sb	a1,0(v1)
8001717c:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:281
{
#ifdef __HAVE_ARCH_MEMSET
	return __memset(s, c, n);
#else
	char *p = s;
	while (n-- > 0) {
80017180:	5466fffe 	bnel	v1,a2,8001717c <memset+0x14>
80017184:	a0650000 	sb	a1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:286
		*p++ = c;
	}
	return s;
#endif /* __HAVE_ARCH_MEMSET */
}
80017188:	03e00008 	jr	ra
8001718c:	00000000 	nop

80017190 <memmove>:
memmove():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:304
#ifdef __HAVE_ARCH_MEMMOVE
	return __memmove(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
80017190:	00a4182b 	sltu	v1,a1,a0
80017194:	10600014 	beqz	v1,800171e8 <memmove+0x58>
80017198:	00801021 	move	v0,a0
8001719c:	00a64021 	addu	t0,a1,a2
800171a0:	0088182b 	sltu	v1,a0,t0
800171a4:	10600010 	beqz	v1,800171e8 <memmove+0x58>
800171a8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:306
		s += n, d += n;
		while (n-- > 0) {
800171ac:	10c0000c 	beqz	a2,800171e0 <memmove+0x50>
800171b0:	00061823 	negu	v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:305
	return __memmove(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
800171b4:	00863821 	addu	a3,a0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
800171b8:	01034021 	addu	t0,t0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:306
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
800171bc:	24c6ffff 	addiu	a2,a2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
800171c0:	00e33821 	addu	a3,a3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:306
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
800171c4:	2405ffff 	li	a1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
800171c8:	01061821 	addu	v1,t0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:307
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
			*--d = *--s;
800171cc:	90640000 	lbu	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
800171d0:	00e61821 	addu	v1,a3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:306
#else
	const char *s = src;
	char *d = dst;
	if (s < d && s + n > d) {
		s += n, d += n;
		while (n-- > 0) {
800171d4:	24c6ffff 	addiu	a2,a2,-1
800171d8:	14c5fffb 	bne	a2,a1,800171c8 <memmove+0x38>
800171dc:	a0640000 	sb	a0,0(v1)
800171e0:	03e00008 	jr	ra
800171e4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:310
			*--d = *--s;
		}
	} else {
		while (n-- > 0) {
800171e8:	10c0fffd 	beqz	a2,800171e0 <memmove+0x50>
800171ec:	00a63021 	addu	a2,a1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:297
 * @src     pointer to the source of data to by copied
 * @n:      number of bytes to copy
 *
 * The memmove() function returns @dst.
 * */
void *memmove(void *dst, const void *src, size_t n)
800171f0:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:311
		while (n-- > 0) {
			*--d = *--s;
		}
	} else {
		while (n-- > 0) {
			*d++ = *s++;
800171f4:	90a40000 	lbu	a0,0(a1)
800171f8:	24a50001 	addiu	a1,a1,1
800171fc:	a0640000 	sb	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:310
		s += n, d += n;
		while (n-- > 0) {
			*--d = *--s;
		}
	} else {
		while (n-- > 0) {
80017200:	14a6fffc 	bne	a1,a2,800171f4 <memmove+0x64>
80017204:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:316
			*d++ = *s++;
		}
	}
	return dst;
#endif /* __HAVE_ARCH_MEMMOVE */
}
80017208:	03e00008 	jr	ra
8001720c:	00000000 	nop

80017210 <memcpy>:
memcpy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:339
#ifdef __HAVE_ARCH_MEMCPY
	return __memcpy(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	while (n-- > 0) {
80017210:	10c00008 	beqz	a2,80017234 <memcpy+0x24>
80017214:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:332
 * Note that, the function does not check any terminating null character in @src,
 * it always copies exactly @n bytes. To avoid overflows, the size of arrays pointed
 * by both @src and @dst, should be at least @n bytes, and should not overlap
 * (for overlapping memory area, memmove is a safer approach).
 * */
void *memcpy(void *dst, const void *src, size_t n)
80017218:	00a63021 	addu	a2,a1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:338
{
#ifdef __HAVE_ARCH_MEMCPY
	return __memcpy(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
8001721c:	00801821 	move	v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:340
	while (n-- > 0) {
		*d++ = *s++;
80017220:	90a40000 	lbu	a0,0(a1)
80017224:	24a50001 	addiu	a1,a1,1
80017228:	a0640000 	sb	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:339
#ifdef __HAVE_ARCH_MEMCPY
	return __memcpy(dst, src, n);
#else
	const char *s = src;
	char *d = dst;
	while (n-- > 0) {
8001722c:	14a6fffc 	bne	a1,a2,80017220 <memcpy+0x10>
80017230:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:344
		*d++ = *s++;
	}
	return dst;
#endif /* __HAVE_ARCH_MEMCPY */
}
80017234:	03e00008 	jr	ra
80017238:	00000000 	nop

8001723c <memcmp>:
memcmp():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:364
 * */
int memcmp(const void *v1, const void *v2, size_t n)
{
	const char *s1 = (const char *)v1;
	const char *s2 = (const char *)v2;
	while (n-- > 0) {
8001723c:	10c00010 	beqz	a2,80017280 <memcmp+0x44>
80017240:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:365
		if (*s1 != *s2) {
80017244:	90870000 	lbu	a3,0(a0)
80017248:	90a20000 	lbu	v0,0(a1)
8001724c:	14e2000a 	bne	a3,v0,80017278 <memcmp+0x3c>
80017250:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:360
 * - A value greater than zero indicates that the first byte that does not
 *   match in both memory blocks has a greater value in @v1 than in @v2
 *   as if evaluated as unsigned char values;
 * - And a value less than zero indicates the opposite.
 * */
int memcmp(const void *v1, const void *v2, size_t n)
80017254:	24a30001 	addiu	v1,a1,1
80017258:	00a63021 	addu	a2,a1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:364
{
	const char *s1 = (const char *)v1;
	const char *s2 = (const char *)v2;
	while (n-- > 0) {
8001725c:	10660008 	beq	v1,a2,80017280 <memcmp+0x44>
80017260:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:365
		if (*s1 != *s2) {
80017264:	90870000 	lbu	a3,0(a0)
80017268:	90620000 	lbu	v0,0(v1)
8001726c:	24840001 	addiu	a0,a0,1
80017270:	10e2fffa 	beq	a3,v0,8001725c <memcmp+0x20>
80017274:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:366
			return (int)((unsigned char)*s1 - (unsigned char)*s2);
80017278:	03e00008 	jr	ra
8001727c:	00e21023 	subu	v0,a3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:371
		}
		s1++, s2++;
	}
	return 0;
}
80017280:	03e00008 	jr	ra
80017284:	00000000 	nop

80017288 <stricmp>:
stricmp():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:394
{
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
80017288:	90830000 	lbu	v1,0(a0)
8001728c:	50600015 	beqzl	v1,800172e4 <stricmp+0x5c>
80017290:	90a20000 	lbu	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:388
 * - A value greater than zero indicates that the first character that does
 *   not match has a greater value in @s1 than in @s2;
 * - And a value less than zero indicates the opposite.
 * - All of the comparing is case insensitive
 * */
int stricmp(const char *s1, const char *s2)
80017294:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:395
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
80017298:	2c69005b 	sltiu	t1,v1,91
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:399
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);

		if (t1 == t2) {
			s1++, s2++;
8001729c:	24840001 	addiu	a0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:395
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
800172a0:	2462ffe0 	addiu	v0,v1,-32
800172a4:	15200002 	bnez	t1,800172b0 <stricmp+0x28>
800172a8:	00603821 	move	a3,v1
800172ac:	304700ff 	andi	a3,v0,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:396
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
800172b0:	90a20000 	lbu	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:399

		if (t1 == t2) {
			s1++, s2++;
800172b4:	24a50001 	addiu	a1,a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:396
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
800172b8:	2c48005b 	sltiu	t0,v0,91
800172bc:	244affe0 	addiu	t2,v0,-32
800172c0:	15000002 	bnez	t0,800172cc <stricmp+0x44>
800172c4:	00403021 	move	a2,v0
800172c8:	314600ff 	andi	a2,t2,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:398

		if (t1 == t2) {
800172cc:	14e6000d 	bne	a3,a2,80017304 <stricmp+0x7c>
800172d0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:394
{
	//while (*s1 != '\0')&& *s1 == *s2) {
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
800172d4:	9083ffff 	lbu	v1,-1(a0)
800172d8:	5460fff0 	bnezl	v1,8001729c <stricmp+0x14>
800172dc:	2c69005b 	sltiu	t1,v1,91
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:406
			break;
		}
	}
	t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
	t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
	return (int)((unsigned char)t1 - (unsigned char)t2);
800172e0:	90a20000 	lbu	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:396
	//    s1 ++, s2 ++;
	//}
	char t1, t2;
	while (*s1 != '\0') {
		t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
		t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
800172e4:	00001821 	move	v1,zero
800172e8:	2c48005b 	sltiu	t0,v0,91
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:405
		} else {
			break;
		}
	}
	t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
	t2 = ((*s2 > 'Z') ? (*s2 - 32) : *s2);
800172ec:	5500000a 	bnezl	t0,80017318 <stricmp+0x90>
800172f0:	00621023 	subu	v0,v1,v0
800172f4:	2442ffe0 	addiu	v0,v0,-32
800172f8:	304200ff 	andi	v0,v0,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:407
	return (int)((unsigned char)t1 - (unsigned char)t2);
}
800172fc:	03e00008 	jr	ra
80017300:	00621023 	subu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/string.c:404
			s1++, s2++;
		} else {
			break;
		}
	}
	t1 = ((*s1 > 'Z') ? (*s1 - 32) : *s1);
80017304:	1520fff9 	bnez	t1,800172ec <stricmp+0x64>
80017308:	00000000 	nop
8001730c:	2463ffe0 	addiu	v1,v1,-32
80017310:	08005cbb 	j	800172ec <stricmp+0x64>
80017314:	306300ff 	andi	v1,v1,0xff
80017318:	03e00008 	jr	ra
8001731c:	00000000 	nop

80017320 <get_pgd>:
get_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017320:	00051582 	srl	v0,a1,0x16
80017324:	00021080 	sll	v0,v0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:17
}
80017328:	03e00008 	jr	ra
8001732c:	00821021 	addu	v0,a0,v0

80017330 <get_pud>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017330:	00051582 	srl	v0,a1,0x16
80017334:	00021080 	sll	v0,v0,0x2
get_pud():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:43
		ptep_set_accessed(pgdp);
		ptep_set_dirty(pgdp);
	}
	return &((pud_t *) KADDR(PGD_ADDR(*pgdp)))[PUX(la)];
#endif /* PUXSHIFT == PGXSHIFT */
}
80017338:	03e00008 	jr	ra
8001733c:	00821021 	addu	v0,a0,v0

80017340 <get_pmd>:
get_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017340:	00051582 	srl	v0,a1,0x16
80017344:	00021080 	sll	v0,v0,0x2
get_pmd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:69
		ptep_set_accessed(pudp);
		ptep_set_dirty(pudp);
	}
	return &((pmd_t *) KADDR(PUD_ADDR(*pudp)))[PMX(la)];
#endif /* PMXSHIFT == PUXSHIFT */
}
80017348:	03e00008 	jr	ra
8001734c:	00821021 	addu	v0,a0,v0

80017350 <get_pte>:
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:72

pte_t *get_pte(pgd_t * pgdir, uintptr_t la, bool create)
{
80017350:	27bdffd8 	addiu	sp,sp,-40
80017354:	afb00014 	sw	s0,20(sp)
get_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017358:	00058582 	srl	s0,a1,0x16
8001735c:	00108080 	sll	s0,s0,0x2
80017360:	00908021 	addu	s0,a0,s0
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:72
	return &((pmd_t *) KADDR(PUD_ADDR(*pudp)))[PMX(la)];
#endif /* PMXSHIFT == PUXSHIFT */
}

pte_t *get_pte(pgd_t * pgdir, uintptr_t la, bool create)
{
80017364:	afb10018 	sw	s1,24(sp)
80017368:	afbf0024 	sw	ra,36(sp)
8001736c:	afb30020 	sw	s3,32(sp)
80017370:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:79
#if PTXSHIFT == PMXSHIFT
	printk( "PMXSHIFT is defined as:0x%x\n", PMXSHIFT );
	return get_pmd(pgdir, la, create);
#else /* PTXSHIFT == PMXSHIFT */
	pmd_t *pmdp;
	if ((pmdp = get_pmd(pgdir, la, create)) == NULL) {
80017374:	12000032 	beqz	s0,80017440 <get_pte+0xf0>
80017378:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
8001737c:	8e130000 	lw	s3,0(s0)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
80017380:	32620001 	andi	v0,s3,0x1
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:82
#else /* PTXSHIFT == PMXSHIFT */
	pmd_t *pmdp;
	if ((pmdp = get_pmd(pgdir, la, create)) == NULL) {
		return NULL;
	}
	if (!ptep_present(pmdp)) {
80017384:	5440001b 	bnezl	v0,800173f4 <get_pte+0xa4>
80017388:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:84
		struct Page *page;
		if (!create || (page = alloc_page()) == NULL) {
8001738c:	10c0002d 	beqz	a2,80017444 <get_pte+0xf4>
80017390:	8fbf0024 	lw	ra,36(sp)
80017394:	0c00742d 	jal	8001d0b4 <alloc_pages>
80017398:	24040001 	li	a0,1
8001739c:	10400028 	beqz	v0,80017440 <get_pte+0xf0>
800173a0:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800173a4:	8c6377bc 	lw	v1,30652(v1)
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:89
			return NULL;
		}
		set_page_ref(page, 1);
		uintptr_t pa = page2pa(page);
		memset(KADDR(pa), 0, PGSIZE);
800173a8:	3c128015 	lui	s2,0x8015
800173ac:	8e447770 	lw	a0,30576(s2)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
800173b0:	00431823 	subu	v1,v0,v1
800173b4:	00031943 	sra	v1,v1,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800173b8:	00031b00 	sll	v1,v1,0xc
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:89
800173bc:	00032b02 	srl	a1,v1,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
800173c0:	3c138000 	lui	s3,0x8000
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:89
800173c4:	00a4202b 	sltu	a0,a1,a0
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
800173c8:	26731000 	addiu	s3,s3,4096
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
800173cc:	24050001 	li	a1,1
800173d0:	ac450000 	sw	a1,0(v0)
get_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:89
800173d4:	10800029 	beqz	a0,8001747c <get_pte+0x12c>
800173d8:	00739821 	addu	s3,v1,s3
800173dc:	02602021 	move	a0,s3
800173e0:	00002821 	move	a1,zero
800173e4:	24061000 	li	a2,4096
800173e8:	0c005c5a 	jal	80017168 <memset>
800173ec:	36730067 	ori	s3,s3,0x67
800173f0:	ae130000 	sw	s3,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:104
		ptep_set_dirty(pmdp);
#else
#warning ARM9 PDE does not have access field
#endif
	}
	return &((pte_t *) KADDR(PMD_ADDR(*pmdp)))[PTX(la)];
800173f4:	2402f000 	li	v0,-4096
800173f8:	02629824 	and	s3,s3,v0
800173fc:	3c027fff 	lui	v0,0x7fff
80017400:	8e437770 	lw	v1,30576(s2)
80017404:	3442f000 	ori	v0,v0,0xf000
80017408:	02621021 	addu	v0,s3,v0
8001740c:	00021302 	srl	v0,v0,0xc
80017410:	0043102b 	sltu	v0,v0,v1
80017414:	10400012 	beqz	v0,80017460 <get_pte+0x110>
80017418:	8fbf0024 	lw	ra,36(sp)
8001741c:	7e224b00 	ext	v0,s1,0xc,0xa
80017420:	00021080 	sll	v0,v0,0x2
80017424:	02621021 	addu	v0,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:106
#endif /* PTXSHIFT == PMXSHIFT */
}
80017428:	8fb2001c 	lw	s2,28(sp)
8001742c:	8fb30020 	lw	s3,32(sp)
80017430:	8fb10018 	lw	s1,24(sp)
80017434:	8fb00014 	lw	s0,20(sp)
80017438:	03e00008 	jr	ra
8001743c:	27bd0028 	addiu	sp,sp,40
80017440:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:85
		return NULL;
	}
	if (!ptep_present(pmdp)) {
		struct Page *page;
		if (!create || (page = alloc_page()) == NULL) {
			return NULL;
80017444:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:106
#warning ARM9 PDE does not have access field
#endif
	}
	return &((pte_t *) KADDR(PMD_ADDR(*pmdp)))[PTX(la)];
#endif /* PTXSHIFT == PMXSHIFT */
}
80017448:	8fb30020 	lw	s3,32(sp)
8001744c:	8fb2001c 	lw	s2,28(sp)
80017450:	8fb10018 	lw	s1,24(sp)
80017454:	8fb00014 	lw	s0,20(sp)
80017458:	03e00008 	jr	ra
8001745c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:104
		ptep_set_dirty(pmdp);
#else
#warning ARM9 PDE does not have access field
#endif
	}
	return &((pte_t *) KADDR(PMD_ADDR(*pmdp)))[PTX(la)];
80017460:	3c048002 	lui	a0,0x8002
80017464:	3c068002 	lui	a2,0x8002
80017468:	24843a18 	addiu	a0,a0,14872
8001746c:	24050068 	li	a1,104
80017470:	24c62a94 	addiu	a2,a2,10900
80017474:	0c006b13 	jal	8001ac4c <__panic>
80017478:	02603821 	move	a3,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:89
		if (!create || (page = alloc_page()) == NULL) {
			return NULL;
		}
		set_page_ref(page, 1);
		uintptr_t pa = page2pa(page);
		memset(KADDR(pa), 0, PGSIZE);
8001747c:	3c048002 	lui	a0,0x8002
80017480:	3c068002 	lui	a2,0x8002
80017484:	24843a18 	addiu	a0,a0,14872
80017488:	24050059 	li	a1,89
8001748c:	24c62a94 	addiu	a2,a2,10900
80017490:	0c006b13 	jal	8001ac4c <__panic>
80017494:	02603821 	move	a3,s3

80017498 <get_page>:
get_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:116
 * @param la linear address
 * @param ptep_store table entry stored if not NULL
 * @return @la's corresponding page descriptor
 */
struct Page *get_page(pgd_t * pgdir, uintptr_t la, pte_t ** ptep_store)
{
80017498:	27bdffe8 	addiu	sp,sp,-24
8001749c:	afb00010 	sw	s0,16(sp)
800174a0:	00c08021 	move	s0,a2
800174a4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:117
	pte_t *ptep = get_pte(pgdir, la, 0);
800174a8:	0c005cd4 	jal	80017350 <get_pte>
800174ac:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:118
	if (ptep_store != NULL) {
800174b0:	56000001 	bnezl	s0,800174b8 <get_page+0x20>
800174b4:	ae020000 	sw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:121
		*ptep_store = ptep;
	}
	if (ptep != NULL && ptep_present(ptep)) {
800174b8:	10400014 	beqz	v0,8001750c <get_page+0x74>
800174bc:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
800174c0:	8c420000 	lw	v0,0(v0)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
800174c4:	30430001 	andi	v1,v0,0x1
get_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:121
{
	pte_t *ptep = get_pte(pgdir, la, 0);
	if (ptep_store != NULL) {
		*ptep_store = ptep;
	}
	if (ptep != NULL && ptep_present(ptep)) {
800174c8:	10600010 	beqz	v1,8001750c <get_page+0x74>
800174cc:	3c038015 	lui	v1,0x8015
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800174d0:	3c047fff 	lui	a0,0x7fff
800174d4:	8c637770 	lw	v1,30576(v1)
800174d8:	3484f000 	ori	a0,a0,0xf000
800174dc:	00441021 	addu	v0,v0,a0
800174e0:	00021302 	srl	v0,v0,0xc
800174e4:	0043182b 	sltu	v1,v0,v1
800174e8:	1060000c 	beqz	v1,8001751c <get_page+0x84>
800174ec:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
800174f0:	8c6377bc 	lw	v1,30652(v1)
get_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:125
		return pa2page(*ptep);
	}
	return NULL;
}
800174f4:	8fbf0014 	lw	ra,20(sp)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
800174f8:	00021140 	sll	v0,v0,0x5
800174fc:	00621021 	addu	v0,v1,v0
get_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:125
80017500:	8fb00010 	lw	s0,16(sp)
80017504:	03e00008 	jr	ra
80017508:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:124
		*ptep_store = ptep;
	}
	if (ptep != NULL && ptep_present(ptep)) {
		return pa2page(*ptep);
	}
	return NULL;
8001750c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:125
}
80017510:	8fb00010 	lw	s0,16(sp)
80017514:	03e00008 	jr	ra
80017518:	27bd0018 	addiu	sp,sp,24
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001751c:	0c007f78 	jal	8001fde0 <pa2page.part.7>
80017520:	00000000 	nop

80017524 <page_remove_pte>:
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017524:	8cc20000 	lw	v0,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:136
 * @param la logical address of the page to be removed
 * @param page table entry of the page to be removed
 * note: PT is changed, so the TLB need to be invalidate 
 */
void page_remove_pte(pgd_t * pgdir, uintptr_t la, pte_t * ptep)
{
80017528:	27bdffd0 	addiu	sp,sp,-48
8001752c:	afb10020 	sw	s1,32(sp)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
80017530:	30430001 	andi	v1,v0,0x1
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:136
80017534:	afb0001c 	sw	s0,28(sp)
80017538:	afbf002c 	sw	ra,44(sp)
8001753c:	afb30028 	sw	s3,40(sp)
80017540:	afb20024 	sw	s2,36(sp)
80017544:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:137
	if (ptep_present(ptep)) {
80017548:	1460000a 	bnez	v1,80017574 <page_remove_pte+0x50>
8001754c:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:153
			}
			page_ref_dec(page);
		}
		ptep_unmap(ptep);
		mp_tlb_invalidate(pgdir, la);
	} else if (!ptep_invalid(ptep)) {
80017550:	54400001 	bnezl	v0,80017558 <page_remove_pte+0x34>
80017554:	acc00000 	sw	zero,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:159
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
#endif
		ptep_unmap(ptep);
	}
}
80017558:	8fbf002c 	lw	ra,44(sp)
8001755c:	8fb30028 	lw	s3,40(sp)
80017560:	8fb20024 	lw	s2,36(sp)
80017564:	8fb10020 	lw	s1,32(sp)
80017568:	8fb0001c 	lw	s0,28(sp)
8001756c:	03e00008 	jr	ra
80017570:	27bd0030 	addiu	sp,sp,48
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80017574:	2403f000 	li	v1,-4096
80017578:	00431024 	and	v0,v0,v1
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001757c:	3c047fff 	lui	a0,0x7fff
80017580:	3c038015 	lui	v1,0x8015
80017584:	8c637770 	lw	v1,30576(v1)
80017588:	3484f000 	ori	a0,a0,0xf000
8001758c:	00441021 	addu	v0,v0,a0
80017590:	00021302 	srl	v0,v0,0xc
80017594:	0043182b 	sltu	v1,v0,v1
80017598:	1060006c 	beqz	v1,8001774c <page_remove_pte+0x228>
8001759c:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
800175a0:	8c7277bc 	lw	s2,30652(v1)
800175a4:	00021140 	sll	v0,v0,0x5
800175a8:	02429021 	addu	s2,s2,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800175ac:	40026000 	mfc0	v0,c0_status
800175b0:	30420001 	andi	v0,v0,0x1
800175b4:	1440001b 	bnez	v0,80017624 <page_remove_pte+0x100>
800175b8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
800175bc:	8e530004 	lw	s3,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
800175c0:	7e730100 	ext	s3,s3,0x4,0x1
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:139
 */
void page_remove_pte(pgd_t * pgdir, uintptr_t la, pte_t * ptep)
{
	if (ptep_present(ptep)) {
		struct Page *page = pte2page(*ptep);
		if (!PageSwap(page)) {
800175c4:	1260001e 	beqz	s3,80017640 <page_remove_pte+0x11c>
800175c8:	00000000 	nop
ptep_dirty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:114
	return *ptep & PTE_A;
}

static inline int ptep_dirty(pte_t * ptep)
{
	return *ptep & PTE_D;
800175cc:	8cc20000 	lw	v0,0(a2)
800175d0:	30420040 	andi	v0,v0,0x40
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:146
				//Don't free dma pages
				if (!PageIO(page))
					free_page(page);
			}
		} else {
			if (ptep_dirty(ptep)) {
800175d4:	1440003b 	bnez	v0,800176c4 <page_remove_pte+0x1a0>
800175d8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
800175dc:	40026000 	mfc0	v0,c0_status
800175e0:	30420001 	andi	v0,v0,0x1
800175e4:	1440002e 	bnez	v0,800176a0 <page_remove_pte+0x17c>
800175e8:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800175ec:	8e420000 	lw	v0,0(s2)
800175f0:	2442ffff 	addiu	v0,v0,-1
800175f4:	ae420000 	sw	v0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800175f8:	8e420000 	lw	v0,0(s2)
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:152
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
		ptep_unmap(ptep);
		mp_tlb_invalidate(pgdir, la);
800175fc:	02202021 	move	a0,s1
80017600:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:159
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
#endif
		ptep_unmap(ptep);
	}
}
80017604:	8fbf002c 	lw	ra,44(sp)
80017608:	8fb30028 	lw	s3,40(sp)
8001760c:	8fb20024 	lw	s2,36(sp)
80017610:	8fb10020 	lw	s1,32(sp)
80017614:	8fb0001c 	lw	s0,28(sp)
ptep_unmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:16
	*ptep = (pa | PTE_P);
}

static inline void ptep_unmap(pte_t * ptep)
{
	*ptep = 0;
80017618:	acc00000 	sw	zero,0(a2)
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:152
				SetPageDirty(page);
			}
			page_ref_dec(page);
		}
		ptep_unmap(ptep);
		mp_tlb_invalidate(pgdir, la);
8001761c:	08007c83 	j	8001f20c <mp_tlb_invalidate>
80017620:	27bd0030 	addiu	sp,sp,48
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80017624:	0c006d0c 	jal	8001b430 <intr_disable>
80017628:	afa60010 	sw	a2,16(sp)
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001762c:	8e530004 	lw	s3,4(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80017630:	0c006d08 	jal	8001b420 <intr_enable>
80017634:	7e730100 	ext	s3,s3,0x4,0x1
80017638:	08005d71 	j	800175c4 <page_remove_pte+0xa0>
8001763c:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80017640:	40026000 	mfc0	v0,c0_status
80017644:	30420001 	andi	v0,v0,0x1
80017648:	14400030 	bnez	v0,8001770c <page_remove_pte+0x1e8>
8001764c:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80017650:	8e420000 	lw	v0,0(s2)
80017654:	2442ffff 	addiu	v0,v0,-1
80017658:	ae420000 	sw	v0,0(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
8001765c:	8e420000 	lw	v0,0(s2)
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:140
void page_remove_pte(pgd_t * pgdir, uintptr_t la, pte_t * ptep)
{
	if (ptep_present(ptep)) {
		struct Page *page = pte2page(*ptep);
		if (!PageSwap(page)) {
			if (page_ref_dec(page) == 0) {
80017660:	1440ffe7 	bnez	v0,80017600 <page_remove_pte+0xdc>
80017664:	02202021 	move	a0,s1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
80017668:	40026000 	mfc0	v0,c0_status
8001766c:	30420001 	andi	v0,v0,0x1
80017670:	1440002f 	bnez	v0,80017730 <page_remove_pte+0x20c>
80017674:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80017678:	8e530004 	lw	s3,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001767c:	7e730180 	ext	s3,s3,0x6,0x1
page_remove_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:142
				//Don't free dma pages
				if (!PageIO(page))
80017680:	1660ffdf 	bnez	s3,80017600 <page_remove_pte+0xdc>
80017684:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:143
					free_page(page);
80017688:	02402021 	move	a0,s2
8001768c:	24050001 	li	a1,1
80017690:	0c007449 	jal	8001d124 <free_pages>
80017694:	afa60010 	sw	a2,16(sp)
80017698:	08005d7f 	j	800175fc <page_remove_pte+0xd8>
8001769c:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800176a0:	0c006d0c 	jal	8001b430 <intr_disable>
800176a4:	afa60010 	sw	a2,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800176a8:	8e420000 	lw	v0,0(s2)
800176ac:	2442ffff 	addiu	v0,v0,-1
800176b0:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800176b4:	0c006d08 	jal	8001b420 <intr_enable>
800176b8:	00000000 	nop
800176bc:	08005d7e 	j	800175f8 <page_remove_pte+0xd4>
800176c0:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800176c4:	40026000 	mfc0	v0,c0_status
800176c8:	30420001 	andi	v0,v0,0x1
800176cc:	14400006 	bnez	v0,800176e8 <page_remove_pte+0x1c4>
800176d0:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
800176d4:	8e420004 	lw	v0,4(s2)
800176d8:	34420008 	ori	v0,v0,0x8
800176dc:	ae420004 	sw	v0,4(s2)
800176e0:	08005d77 	j	800175dc <page_remove_pte+0xb8>
800176e4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800176e8:	0c006d0c 	jal	8001b430 <intr_disable>
800176ec:	afa60010 	sw	a2,16(sp)
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
800176f0:	8e420004 	lw	v0,4(s2)
800176f4:	34420008 	ori	v0,v0,0x8
800176f8:	ae420004 	sw	v0,4(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800176fc:	0c006d08 	jal	8001b420 <intr_enable>
80017700:	00000000 	nop
80017704:	08005d77 	j	800175dc <page_remove_pte+0xb8>
80017708:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001770c:	0c006d0c 	jal	8001b430 <intr_disable>
80017710:	afa60010 	sw	a2,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80017714:	8e420000 	lw	v0,0(s2)
80017718:	2442ffff 	addiu	v0,v0,-1
8001771c:	ae420000 	sw	v0,0(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80017720:	0c006d08 	jal	8001b420 <intr_enable>
80017724:	00000000 	nop
80017728:	08005d97 	j	8001765c <page_remove_pte+0x138>
8001772c:	8fa60010 	lw	a2,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80017730:	0c006d0c 	jal	8001b430 <intr_disable>
80017734:	afa60010 	sw	a2,16(sp)
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
80017738:	8e530004 	lw	s3,4(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001773c:	0c006d08 	jal	8001b420 <intr_enable>
80017740:	7e730180 	ext	s3,s3,0x6,0x1
80017744:	08005da0 	j	80017680 <page_remove_pte+0x15c>
80017748:	8fa60010 	lw	a2,16(sp)
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001774c:	0c007f78 	jal	8001fde0 <pa2page.part.7>
80017750:	00000000 	nop

80017754 <page_insert>:
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:170
 * @param la logical address of the page
 * @param perm permission of the page
 * @return 0 on success and error code when failed
 */
int page_insert(pgd_t * pgdir, struct Page *page, uintptr_t la, pte_perm_t perm)
{
80017754:	27bdffd0 	addiu	sp,sp,-48
80017758:	afb1001c 	sw	s1,28(sp)
8001775c:	00c08821 	move	s1,a2
80017760:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:172

	pte_t *ptep = get_pte(pgdir, la, 1);
80017764:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:170
 * @param la logical address of the page
 * @param perm permission of the page
 * @return 0 on success and error code when failed
 */
int page_insert(pgd_t * pgdir, struct Page *page, uintptr_t la, pte_perm_t perm)
{
80017768:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:172

	pte_t *ptep = get_pte(pgdir, la, 1);
8001776c:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:170
 * @param la logical address of the page
 * @param perm permission of the page
 * @return 0 on success and error code when failed
 */
int page_insert(pgd_t * pgdir, struct Page *page, uintptr_t la, pte_perm_t perm)
{
80017770:	afb30024 	sw	s3,36(sp)
80017774:	afb20020 	sw	s2,32(sp)
80017778:	afbf002c 	sw	ra,44(sp)
8001777c:	afb40028 	sw	s4,40(sp)
80017780:	00809021 	move	s2,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:172

	pte_t *ptep = get_pte(pgdir, la, 1);
80017784:	0c005cd4 	jal	80017350 <get_pte>
80017788:	00e09821 	move	s3,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:178
	/*kprintf("page2kva(p):0x%08x",page2kva(page));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x1100):0x%08x",*(int*)(page2kva(page)+0x1100));
		kprintf("\n\r");
	kprintf("*(int*)(0x1100):0x%08x",*(int*)(0x1100));*/
	if (ptep == NULL) {
8001778c:	50400024 	beqzl	v0,80017820 <page_insert+0xcc>
80017790:	2402fff4 	li	v0,-12
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80017794:	40036000 	mfc0	v1,c0_status
80017798:	30630001 	andi	v1,v1,0x1
8001779c:	14600028 	bnez	v1,80017840 <page_insert+0xec>
800177a0:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800177a4:	8e030000 	lw	v1,0(s0)
800177a8:	24630001 	addiu	v1,v1,1
800177ac:	ae030000 	sw	v1,0(s0)
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:182
		return -E_NO_MEM;
	}
	page_ref_inc(page);
	if (*ptep != 0) {
800177b0:	8c430000 	lw	v1,0(v0)
page_ref_inc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800177b4:	8e040000 	lw	a0,0(s0)
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:182
800177b8:	1060000b 	beqz	v1,800177e8 <page_insert+0x94>
800177bc:	3c148015 	lui	s4,0x8015
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
800177c0:	30640001 	andi	a0,v1,0x1
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:183
		if (ptep_present(ptep) && pte2page(*ptep) == page) {
800177c4:	14800027 	bnez	a0,80017864 <page_insert+0x110>
800177c8:	2404f000 	li	a0,-4096
800177cc:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:187
			page_ref_dec(page);
			goto out;
		}
		page_remove_pte(pgdir, la, ptep);
800177d0:	00403021 	move	a2,v0
800177d4:	02402021 	move	a0,s2
800177d8:	02202821 	move	a1,s1
800177dc:	0c005d49 	jal	80017524 <page_remove_pte>
800177e0:	afa20010 	sw	v0,16(sp)
800177e4:	8fa20010 	lw	v0,16(sp)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800177e8:	8e8377bc 	lw	v1,30652(s4)
ptep_map():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:11

typedef pte_t pte_perm_t;

static inline void ptep_map(pte_t * ptep, uintptr_t pa)
{
	*ptep = (pa | PTE_P);
800177ec:	36730001 	ori	s3,s3,0x1
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:198
	kprintf("*(int*)(page2kva(p)+0x1100):0x%08x",*(int*)(page2kva(page)+0x1100));
		kprintf("\n\r");
	kprintf("*(int*)(0x1100):0x%08x",*(int*)(0x1100));*/
	ptep_map(ptep, page2pa(page));
	ptep_set_perm(ptep, perm);
	mp_tlb_update(pgdir, la);
800177f0:	02402021 	move	a0,s2
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
800177f4:	02038023 	subu	s0,s0,v1
800177f8:	00108143 	sra	s0,s0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800177fc:	3c038000 	lui	v1,0x8000
80017800:	24631000 	addiu	v1,v1,4096
80017804:	00108300 	sll	s0,s0,0xc
80017808:	02038021 	addu	s0,s0,v1
ptep_set_perm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:94
	return (*ptep) & perm;
}

static inline void ptep_set_perm(pte_t * ptep, pte_perm_t perm)
{
	*ptep |= perm;
8001780c:	02709825 	or	s3,s3,s0
80017810:	ac530000 	sw	s3,0(v0)
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:198
80017814:	0c007c85 	jal	8001f214 <mp_tlb_update>
80017818:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:199
	return 0;
8001781c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:201

}
80017820:	8fbf002c 	lw	ra,44(sp)
80017824:	8fb40028 	lw	s4,40(sp)
80017828:	8fb30024 	lw	s3,36(sp)
8001782c:	8fb20020 	lw	s2,32(sp)
80017830:	8fb1001c 	lw	s1,28(sp)
80017834:	8fb00018 	lw	s0,24(sp)
80017838:	03e00008 	jr	ra
8001783c:	27bd0030 	addiu	sp,sp,48
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80017840:	0c006d0c 	jal	8001b430 <intr_disable>
80017844:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80017848:	8e030000 	lw	v1,0(s0)
8001784c:	24630001 	addiu	v1,v1,1
80017850:	ae030000 	sw	v1,0(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80017854:	0c006d08 	jal	8001b420 <intr_enable>
80017858:	00000000 	nop
8001785c:	08005dec 	j	800177b0 <page_insert+0x5c>
80017860:	8fa20010 	lw	v0,16(sp)
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80017864:	00641824 	and	v1,v1,a0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017868:	3c057fff 	lui	a1,0x7fff
8001786c:	3c048015 	lui	a0,0x8015
80017870:	8c847770 	lw	a0,30576(a0)
80017874:	34a5f000 	ori	a1,a1,0xf000
80017878:	00651821 	addu	v1,v1,a1
8001787c:	00031b02 	srl	v1,v1,0xc
80017880:	0064202b 	sltu	a0,v1,a0
80017884:	1080001b 	beqz	a0,800178f4 <page_insert+0x1a0>
80017888:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001788c:	8e8477bc 	lw	a0,30652(s4)
80017890:	00031940 	sll	v1,v1,0x5
80017894:	00831821 	addu	v1,a0,v1
page_insert():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:183
	if (ptep == NULL) {
		return -E_NO_MEM;
	}
	page_ref_inc(page);
	if (*ptep != 0) {
		if (ptep_present(ptep) && pte2page(*ptep) == page) {
80017898:	1603ffce 	bne	s0,v1,800177d4 <page_insert+0x80>
8001789c:	00403021 	move	a2,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800178a0:	40036000 	mfc0	v1,c0_status
800178a4:	30630001 	andi	v1,v1,0x1
800178a8:	14600007 	bnez	v1,800178c8 <page_insert+0x174>
800178ac:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
800178b0:	8e030000 	lw	v1,0(s0)
800178b4:	2463ffff 	addiu	v1,v1,-1
800178b8:	ae030000 	sw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800178bc:	8e030000 	lw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800178c0:	08005dfb 	j	800177ec <page_insert+0x98>
800178c4:	8e8377bc 	lw	v1,30652(s4)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800178c8:	0c006d0c 	jal	8001b430 <intr_disable>
800178cc:	afa20010 	sw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
800178d0:	8e030000 	lw	v1,0(s0)
800178d4:	2463ffff 	addiu	v1,v1,-1
800178d8:	ae030000 	sw	v1,0(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800178dc:	0c006d08 	jal	8001b420 <intr_enable>
800178e0:	00000000 	nop
800178e4:	8fa20010 	lw	v0,16(sp)
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
800178e8:	8e030000 	lw	v1,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
800178ec:	08005dfb 	j	800177ec <page_insert+0x98>
800178f0:	8e8377bc 	lw	v1,30652(s4)
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800178f4:	0c007f78 	jal	8001fde0 <pa2page.part.7>
800178f8:	00000000 	nop

800178fc <page_remove>:
page_remove():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:228
 * page_remove - free an Page which is related linear address la and has an validated pte
 * @param pgdir page directory
 * @param la logical address of the page to be removed
 */
void page_remove(pgd_t * pgdir, uintptr_t la)
{
800178fc:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:229
	pte_t *ptep = get_pte(pgdir, la, 0);
80017900:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:228
 * page_remove - free an Page which is related linear address la and has an validated pte
 * @param pgdir page directory
 * @param la logical address of the page to be removed
 */
void page_remove(pgd_t * pgdir, uintptr_t la)
{
80017904:	afb10018 	sw	s1,24(sp)
80017908:	afb00014 	sw	s0,20(sp)
8001790c:	afbf001c 	sw	ra,28(sp)
80017910:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:229
	pte_t *ptep = get_pte(pgdir, la, 0);
80017914:	0c005cd4 	jal	80017350 <get_pte>
80017918:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:230
	if (ptep != NULL) {
8001791c:	10400008 	beqz	v0,80017940 <page_remove+0x44>
80017920:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:231
		page_remove_pte(pgdir, la, ptep);
80017924:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:233
	}
}
80017928:	8fbf001c 	lw	ra,28(sp)
8001792c:	8fb10018 	lw	s1,24(sp)
80017930:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:231
 */
void page_remove(pgd_t * pgdir, uintptr_t la)
{
	pte_t *ptep = get_pte(pgdir, la, 0);
	if (ptep != NULL) {
		page_remove_pte(pgdir, la, ptep);
80017934:	00403021 	move	a2,v0
80017938:	08005d49 	j	80017524 <page_remove_pte>
8001793c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:233
	}
}
80017940:	8fbf001c 	lw	ra,28(sp)
80017944:	8fb10018 	lw	s1,24(sp)
80017948:	8fb00014 	lw	s0,20(sp)
8001794c:	03e00008 	jr	ra
80017950:	27bd0020 	addiu	sp,sp,32

80017954 <pgdir_alloc_page>:
pgdir_alloc_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:245
 * @param la       logical address for the page to be allocated
 * @param perm     permission of the page
 * @return         the page descriptor of the allocated
 */
struct Page *pgdir_alloc_page(pgd_t * pgdir, uintptr_t la, uint32_t perm)
{
80017954:	27bdffd8 	addiu	sp,sp,-40
80017958:	afb30020 	sw	s3,32(sp)
8001795c:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:246
	struct Page *page = alloc_page();
80017960:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:245
 * @param la       logical address for the page to be allocated
 * @param perm     permission of the page
 * @return         the page descriptor of the allocated
 */
struct Page *pgdir_alloc_page(pgd_t * pgdir, uintptr_t la, uint32_t perm)
{
80017964:	afb2001c 	sw	s2,28(sp)
80017968:	afb10018 	sw	s1,24(sp)
8001796c:	afb00014 	sw	s0,20(sp)
80017970:	afbf0024 	sw	ra,36(sp)
80017974:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:246
	struct Page *page = alloc_page();
80017978:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001797c:	00c08821 	move	s1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:247
	if (page != NULL) {
80017980:	10400019 	beqz	v0,800179e8 <pgdir_alloc_page+0x94>
80017984:	00408021 	move	s0,v0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80017988:	3c028015 	lui	v0,0x8015
8001798c:	8c4277bc 	lw	v0,30652(v0)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
80017990:	3c038015 	lui	v1,0x8015
80017994:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
80017998:	02021023 	subu	v0,s0,v0
8001799c:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800179a0:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800179a4:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800179a8:	3c078000 	lui	a3,0x8000
800179ac:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800179b0:	0083182b 	sltu	v1,a0,v1
800179b4:	10600018 	beqz	v1,80017a18 <pgdir_alloc_page+0xc4>
800179b8:	00473821 	addu	a3,v0,a3
pgdir_alloc_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:249
		//zero it!
		memset(page2kva(page), 0, PGSIZE);
800179bc:	00e02021 	move	a0,a3
800179c0:	00002821 	move	a1,zero
800179c4:	0c005c5a 	jal	80017168 <memset>
800179c8:	24061000 	li	a2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:250
		if (page_insert(pgdir, page, la, perm) != 0) {
800179cc:	02602021 	move	a0,s3
800179d0:	02002821 	move	a1,s0
800179d4:	02403021 	move	a2,s2
800179d8:	0c005dd5 	jal	80017754 <page_insert>
800179dc:	02203821 	move	a3,s1
800179e0:	14400009 	bnez	v0,80017a08 <pgdir_alloc_page+0xb4>
800179e4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:256
			free_page(page);
			return NULL;
		}
	}
	return page;
}
800179e8:	8fbf0024 	lw	ra,36(sp)
800179ec:	02001021 	move	v0,s0
800179f0:	8fb30020 	lw	s3,32(sp)
800179f4:	8fb2001c 	lw	s2,28(sp)
800179f8:	8fb10018 	lw	s1,24(sp)
800179fc:	8fb00014 	lw	s0,20(sp)
80017a00:	03e00008 	jr	ra
80017a04:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:251
	struct Page *page = alloc_page();
	if (page != NULL) {
		//zero it!
		memset(page2kva(page), 0, PGSIZE);
		if (page_insert(pgdir, page, la, perm) != 0) {
			free_page(page);
80017a08:	0c007449 	jal	8001d124 <free_pages>
80017a0c:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:252
			return NULL;
80017a10:	08005e7a 	j	800179e8 <pgdir_alloc_page+0x94>
80017a14:	00008021 	move	s0,zero
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
80017a18:	3c048002 	lui	a0,0x8002
80017a1c:	3c068002 	lui	a2,0x8002
80017a20:	24842a0c 	addiu	a0,a0,10764
80017a24:	2405006a 	li	a1,106
80017a28:	0c006b13 	jal	8001ac4c <__panic>
80017a2c:	24c62a94 	addiu	a2,a2,10900

80017a30 <unmap_range>:
unmap_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:345
		}
		start += size, la += PUSIZE;
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017a30:	00c51025 	or	v0,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:346
{
80017a34:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:345
		}
		start += size, la += PUSIZE;
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017a38:	30420fff 	andi	v0,v0,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:346
{
80017a3c:	afbe0030 	sw	s8,48(sp)
80017a40:	afb50024 	sw	s5,36(sp)
80017a44:	afb10014 	sw	s1,20(sp)
80017a48:	afbf0034 	sw	ra,52(sp)
80017a4c:	afb7002c 	sw	s7,44(sp)
80017a50:	afb60028 	sw	s6,40(sp)
80017a54:	afb40020 	sw	s4,32(sp)
80017a58:	afb3001c 	sw	s3,28(sp)
80017a5c:	afb20018 	sw	s2,24(sp)
80017a60:	afb00010 	sw	s0,16(sp)
80017a64:	00a08821 	move	s1,a1
80017a68:	00c0a821 	move	s5,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:347
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017a6c:	1440006d 	bnez	v0,80017c24 <unmap_range+0x1f4>
80017a70:	0080f021 	move	s8,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:348
	assert(USER_ACCESS(start, end));
80017a74:	00a6102b 	sltu	v0,a1,a2
80017a78:	10400062 	beqz	v0,80017c04 <unmap_range+0x1d4>
80017a7c:	3c028000 	lui	v0,0x8000
80017a80:	24420001 	addiu	v0,v0,1
80017a84:	00c2102b 	sltu	v0,a2,v0
80017a88:	1040005e 	beqz	v0,80017c04 <unmap_range+0x1d4>
80017a8c:	3c12ffc0 	lui	s2,0xffc0
unmap_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:332
static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
	do {
		off = start - la, size = PUSIZE - off;
80017a90:	3c170040 	lui	s7,0x40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:330
}

static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
80017a94:	00b29024 	and	s2,a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:336
	do {
		off = start - la, size = PUSIZE - off;
		if (size > end - start) {
			size = end - start;
		}
		pgd_t *pgdp = &pgd[PGX(la)];
80017a98:	00121582 	srl	v0,s2,0x16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017a9c:	00021080 	sll	v0,v0,0x2
80017aa0:	03c21021 	addu	v0,s8,v0
80017aa4:	8c440000 	lw	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:332
static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
	do {
		off = start - la, size = PUSIZE - off;
80017aa8:	02328023 	subu	s0,s1,s2
80017aac:	02f01823 	subu	v1,s7,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:333
		if (size > end - start) {
80017ab0:	02b11023 	subu	v0,s5,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:332
static void unmap_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	size_t off, size;
	uintptr_t la = ROUNDDOWN(start, PUSIZE);
	do {
		off = start - la, size = PUSIZE - off;
80017ab4:	0043b02b 	sltu	s6,v0,v1
80017ab8:	0076100a 	movz	v0,v1,s6
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
80017abc:	30850001 	andi	a1,a0,0x1
unmap_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:337
		if (size > end - start) {
			size = end - start;
		}
		pgd_t *pgdp = &pgd[PGX(la)];
		if (ptep_present(pgdp)) {
80017ac0:	10a00028 	beqz	a1,80017b64 <unmap_range+0x134>
80017ac4:	0040b021 	move	s6,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:338
			unmap_range_pud(pgd, KADDR(PGD_ADDR(*pgdp)), la, off,
80017ac8:	2414f000 	li	s4,-4096
80017acc:	0094a024 	and	s4,a0,s4
80017ad0:	3c028015 	lui	v0,0x8015
80017ad4:	3c047fff 	lui	a0,0x7fff
80017ad8:	8c437770 	lw	v1,30576(v0)
80017adc:	3484f000 	ori	a0,a0,0xf000
80017ae0:	02841021 	addu	v0,s4,a0
80017ae4:	00021302 	srl	v0,v0,0xc
80017ae8:	0043102b 	sltu	v0,v0,v1
80017aec:	1040002f 	beqz	v0,80017bac <unmap_range+0x17c>
80017af0:	02d09821 	addu	s3,s6,s0
unmap_range_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:266

static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
80017af4:	0213102b 	sltu	v0,s0,s3
80017af8:	1040003a 	beqz	v0,80017be4 <unmap_range+0x1b4>
80017afc:	3c030040 	lui	v1,0x40
80017b00:	34630001 	ori	v1,v1,0x1
80017b04:	0263102b 	sltu	v0,s3,v1
80017b08:	10400036 	beqz	v0,80017be4 <unmap_range+0x1b4>
80017b0c:	02701025 	or	v0,s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:345
		}
		start += size, la += PUSIZE;
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017b10:	30420fff 	andi	v0,v0,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:267
static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017b14:	10400008 	beqz	v0,80017b38 <unmap_range+0x108>
80017b18:	7e064b00 	ext	a2,s0,0xc,0xa
80017b1c:	08005ef2 	j	80017bc8 <unmap_range+0x198>
80017b20:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:274
		pte_t *ptep = &pte[PTX(start)];
		if (*ptep != 0) {
			page_remove_pte(pgdir, base + start, ptep);
		}
		start += PGSIZE;
	} while (start != 0 && start < end);
80017b24:	52000010 	beqzl	s0,80017b68 <unmap_range+0x138>
80017b28:	02368821 	addu	s1,s1,s6
80017b2c:	0213102b 	sltu	v0,s0,s3
80017b30:	1040000c 	beqz	v0,80017b64 <unmap_range+0x134>
80017b34:	7e064b00 	ext	a2,s0,0xc,0xa
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:269
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	do {
		pte_t *ptep = &pte[PTX(start)];
80017b38:	00063080 	sll	a2,a2,0x2
80017b3c:	02863021 	addu	a2,s4,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:270
		if (*ptep != 0) {
80017b40:	8cc20000 	lw	v0,0(a2)
80017b44:	5040fff7 	beqzl	v0,80017b24 <unmap_range+0xf4>
80017b48:	26101000 	addiu	s0,s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:271
			page_remove_pte(pgdir, base + start, ptep);
80017b4c:	02122821 	addu	a1,s0,s2
80017b50:	03c02021 	move	a0,s8
80017b54:	0c005d49 	jal	80017524 <page_remove_pte>
80017b58:	26101000 	addiu	s0,s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:274
		}
		start += PGSIZE;
	} while (start != 0 && start < end);
80017b5c:	1600fff4 	bnez	s0,80017b30 <unmap_range+0x100>
80017b60:	0213102b 	sltu	v0,s0,s3
unmap_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:341
		pgd_t *pgdp = &pgd[PGX(la)];
		if (ptep_present(pgdp)) {
			unmap_range_pud(pgd, KADDR(PGD_ADDR(*pgdp)), la, off,
					off + size);
		}
		start += size, la += PUSIZE;
80017b64:	02368821 	addu	s1,s1,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:342
	} while (start != 0 && start < end);
80017b68:	12200004 	beqz	s1,80017b7c <unmap_range+0x14c>
80017b6c:	02579021 	addu	s2,s2,s7
80017b70:	0235102b 	sltu	v0,s1,s5
80017b74:	1440ffc9 	bnez	v0,80017a9c <unmap_range+0x6c>
80017b78:	00121582 	srl	v0,s2,0x16
unmap_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:350
void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
	unmap_range_pgd(pgdir, start, end);
}
80017b7c:	8fbf0034 	lw	ra,52(sp)
80017b80:	8fbe0030 	lw	s8,48(sp)
80017b84:	8fb7002c 	lw	s7,44(sp)
80017b88:	8fb60028 	lw	s6,40(sp)
80017b8c:	8fb50024 	lw	s5,36(sp)
80017b90:	8fb40020 	lw	s4,32(sp)
80017b94:	8fb3001c 	lw	s3,28(sp)
80017b98:	8fb20018 	lw	s2,24(sp)
80017b9c:	8fb10014 	lw	s1,20(sp)
80017ba0:	8fb00010 	lw	s0,16(sp)
80017ba4:	03e00008 	jr	ra
80017ba8:	27bd0038 	addiu	sp,sp,56
unmap_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:338
		if (size > end - start) {
			size = end - start;
		}
		pgd_t *pgdp = &pgd[PGX(la)];
		if (ptep_present(pgdp)) {
			unmap_range_pud(pgd, KADDR(PGD_ADDR(*pgdp)), la, off,
80017bac:	3c048002 	lui	a0,0x8002
80017bb0:	3c068002 	lui	a2,0x8002
80017bb4:	24843a18 	addiu	a0,a0,14872
80017bb8:	24050152 	li	a1,338
80017bbc:	24c62a94 	addiu	a2,a2,10900
80017bc0:	0c006b13 	jal	8001ac4c <__panic>
80017bc4:	02803821 	move	a3,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:267
static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017bc8:	24843a18 	addiu	a0,a0,14872
80017bcc:	2405010b 	li	a1,267
80017bd0:	3c068002 	lui	a2,0x8002
80017bd4:	3c078002 	lui	a3,0x8002
80017bd8:	24c60e48 	addiu	a2,a2,3656
80017bdc:	0c006b13 	jal	8001ac4c <__panic>
80017be0:	24e73164 	addiu	a3,a3,12644
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:266

static void
unmap_range_pte(pgd_t * pgdir, pte_t * pte, uintptr_t base, uintptr_t start,
		uintptr_t end)
{
	assert(start >= 0 && start < end && end <= PTSIZE);
80017be4:	3c048002 	lui	a0,0x8002
80017be8:	3c068002 	lui	a2,0x8002
80017bec:	3c078002 	lui	a3,0x8002
80017bf0:	24843a18 	addiu	a0,a0,14872
80017bf4:	2405010a 	li	a1,266
80017bf8:	24c60e48 	addiu	a2,a2,3656
80017bfc:	0c006b13 	jal	8001ac4c <__panic>
80017c00:	24e73a38 	addiu	a3,a3,14904
unmap_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:348
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
80017c04:	3c048002 	lui	a0,0x8002
80017c08:	3c068002 	lui	a2,0x8002
80017c0c:	3c078002 	lui	a3,0x8002
80017c10:	24843a18 	addiu	a0,a0,14872
80017c14:	2405015c 	li	a1,348
80017c18:	24c60e48 	addiu	a2,a2,3656
80017c1c:	0c006b13 	jal	8001ac4c <__panic>
80017c20:	24e73a20 	addiu	a3,a3,14880
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:347
	} while (start != 0 && start < end);
}

void unmap_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017c24:	3c048002 	lui	a0,0x8002
80017c28:	24843a18 	addiu	a0,a0,14872
80017c2c:	08005ef4 	j	80017bd0 <unmap_range+0x1a0>
80017c30:	2405015b 	li	a1,347

80017c34 <exit_range>:
exit_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:398
		}
		start += PUSIZE;
	} while (start != 0 && start < end);
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017c34:	00c51025 	or	v0,a2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:399
{
80017c38:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:398
		}
		start += PUSIZE;
	} while (start != 0 && start < end);
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
80017c3c:	30420fff 	andi	v0,v0,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:399
{
80017c40:	afb30020 	sw	s3,32(sp)
80017c44:	afb2001c 	sw	s2,28(sp)
80017c48:	afbf0034 	sw	ra,52(sp)
80017c4c:	afb70030 	sw	s7,48(sp)
80017c50:	afb6002c 	sw	s6,44(sp)
80017c54:	afb50028 	sw	s5,40(sp)
80017c58:	afb40024 	sw	s4,36(sp)
80017c5c:	afb10018 	sw	s1,24(sp)
80017c60:	afb00014 	sw	s0,20(sp)
80017c64:	00c09021 	move	s2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:400
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017c68:	14400041 	bnez	v0,80017d70 <exit_range+0x13c>
80017c6c:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:401
	assert(USER_ACCESS(start, end));
80017c70:	00a6102b 	sltu	v0,a1,a2
80017c74:	10400036 	beqz	v0,80017d50 <exit_range+0x11c>
80017c78:	3c028000 	lui	v0,0x8000
80017c7c:	24420001 	addiu	v0,v0,1
80017c80:	00c2102b 	sltu	v0,a2,v0
80017c84:	10400032 	beqz	v0,80017d50 <exit_range+0x11c>
80017c88:	3c10ffc0 	lui	s0,0xffc0
exit_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:391
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017c8c:	3c157fff 	lui	s5,0x7fff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:387
#endif
}

static void exit_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	start = ROUNDDOWN(start, PUSIZE);
80017c90:	00b08024 	and	s0,a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:391
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017c94:	2416f000 	li	s6,-4096
80017c98:	36b5f000 	ori	s5,s5,0xf000
80017c9c:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017ca0:	08005f2c 	j	80017cb0 <exit_range+0x7c>
80017ca4:	3c178015 	lui	s7,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:395
			free_page(pgd2page(*pgdp)), *pgdp = 0;
		}
		start += PUSIZE;
	} while (start != 0 && start < end);
80017ca8:	10400019 	beqz	v0,80017d10 <exit_range+0xdc>
80017cac:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:389

static void exit_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
80017cb0:	00108d82 	srl	s1,s0,0x16
80017cb4:	00118880 	sll	s1,s1,0x2
80017cb8:	02718821 	addu	s1,s3,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:491
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
}
80017cbc:	8e270000 	lw	a3,0(s1)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
80017cc0:	30e20001 	andi	v0,a3,0x1
exit_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:390
static void exit_range_pgd(pgd_t * pgd, uintptr_t start, uintptr_t end)
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
80017cc4:	1040000e 	beqz	v0,80017d00 <exit_range+0xcc>
80017cc8:	3c020040 	lui	v0,0x40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:391
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017ccc:	00f63824 	and	a3,a3,s6
80017cd0:	8e827770 	lw	v0,30576(s4)
80017cd4:	00f52021 	addu	a0,a3,s5
80017cd8:	00042302 	srl	a0,a0,0xc
80017cdc:	0082102b 	sltu	v0,a0,v0
80017ce0:	10400015 	beqz	v0,80017d38 <exit_range+0x104>
80017ce4:	8ee277bc 	lw	v0,30652(s7)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
80017ce8:	00042140 	sll	a0,a0,0x5
exit_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:392
			free_page(pgd2page(*pgdp)), *pgdp = 0;
80017cec:	24050001 	li	a1,1
80017cf0:	0c007449 	jal	8001d124 <free_pages>
80017cf4:	00442021 	addu	a0,v0,a0
80017cf8:	ae200000 	sw	zero,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:394
		}
		start += PUSIZE;
80017cfc:	3c020040 	lui	v0,0x40
80017d00:	02028021 	addu	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:395
	} while (start != 0 && start < end);
80017d04:	1600ffe8 	bnez	s0,80017ca8 <exit_range+0x74>
80017d08:	0212102b 	sltu	v0,s0,s2
exit_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:403
void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
	exit_range_pgd(pgdir, start, end);
}
80017d0c:	8fbf0034 	lw	ra,52(sp)
80017d10:	8fb70030 	lw	s7,48(sp)
80017d14:	8fb6002c 	lw	s6,44(sp)
80017d18:	8fb50028 	lw	s5,40(sp)
80017d1c:	8fb40024 	lw	s4,36(sp)
80017d20:	8fb30020 	lw	s3,32(sp)
80017d24:	8fb2001c 	lw	s2,28(sp)
80017d28:	8fb10018 	lw	s1,24(sp)
80017d2c:	8fb00014 	lw	s0,20(sp)
80017d30:	03e00008 	jr	ra
80017d34:	27bd0038 	addiu	sp,sp,56
exit_range_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:391
{
	start = ROUNDDOWN(start, PUSIZE);
	do {
		pgd_t *pgdp = &pgd[PGX(start)];
		if (ptep_present(pgdp)) {
			exit_range_pud(KADDR(PGD_ADDR(*pgdp)));
80017d38:	3c048002 	lui	a0,0x8002
80017d3c:	3c068002 	lui	a2,0x8002
80017d40:	24843a18 	addiu	a0,a0,14872
80017d44:	24050187 	li	a1,391
80017d48:	0c006b13 	jal	8001ac4c <__panic>
80017d4c:	24c62a94 	addiu	a2,a2,10900
exit_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:401
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
80017d50:	3c048002 	lui	a0,0x8002
80017d54:	3c068002 	lui	a2,0x8002
80017d58:	3c078002 	lui	a3,0x8002
80017d5c:	24843a18 	addiu	a0,a0,14872
80017d60:	24050191 	li	a1,401
80017d64:	24c60e48 	addiu	a2,a2,3656
80017d68:	0c006b13 	jal	8001ac4c <__panic>
80017d6c:	24e73a20 	addiu	a3,a3,14880
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:400
	} while (start != 0 && start < end);
}

void exit_range(pgd_t * pgdir, uintptr_t start, uintptr_t end)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017d70:	3c048002 	lui	a0,0x8002
80017d74:	3c068002 	lui	a2,0x8002
80017d78:	3c078002 	lui	a3,0x8002
80017d7c:	24843a18 	addiu	a0,a0,14872
80017d80:	24050190 	li	a1,400
80017d84:	24c60e48 	addiu	a2,a2,3656
80017d88:	0c006b13 	jal	8001ac4c <__panic>
80017d8c:	24e73164 	addiu	a3,a3,12644

80017d90 <copy_range>:
copy_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:410
/* ucore use copy-on-write when forking a new process,
 * thus copy_range only copy pdt/pte and set their permission to 
 * READONLY, a write will be handled in pgfault
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
80017d90:	00e61025 	or	v0,a3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:411
{
80017d94:	27bdffc8 	addiu	sp,sp,-56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:410
/* ucore use copy-on-write when forking a new process,
 * thus copy_range only copy pdt/pte and set their permission to 
 * READONLY, a write will be handled in pgfault
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
80017d98:	30420fff 	andi	v0,v0,0xfff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:411
{
80017d9c:	afb60028 	sw	s6,40(sp)
80017da0:	afb3001c 	sw	s3,28(sp)
80017da4:	afb20018 	sw	s2,24(sp)
80017da8:	afb10014 	sw	s1,20(sp)
80017dac:	afb00010 	sw	s0,16(sp)
80017db0:	afbf0034 	sw	ra,52(sp)
80017db4:	afbe0030 	sw	s8,48(sp)
80017db8:	afb7002c 	sw	s7,44(sp)
80017dbc:	afb50024 	sw	s5,36(sp)
80017dc0:	afb40020 	sw	s4,32(sp)
80017dc4:	00c08021 	move	s0,a2
80017dc8:	00e08821 	move	s1,a3
80017dcc:	00809821 	move	s3,a0
80017dd0:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:412
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017dd4:	1440007d 	bnez	v0,80017fcc <copy_range+0x23c>
80017dd8:	8fb60048 	lw	s6,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:413
	assert(USER_ACCESS(start, end));
80017ddc:	00c7102b 	sltu	v0,a2,a3
80017de0:	10400072 	beqz	v0,80017fac <copy_range+0x21c>
80017de4:	3c028000 	lui	v0,0x8000
80017de8:	24420001 	addiu	v0,v0,1
80017dec:	00e2102b 	sltu	v0,a3,v0
80017df0:	1040006e 	beqz	v0,80017fac <copy_range+0x21c>
80017df4:	3c1e8015 	lui	s8,0x8015
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
80017df8:	3c178015 	lui	s7,0x8015
copy_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:416

	do {
		pte_t *ptep = get_pte(from, start, 0), *nptep;
80017dfc:	02402021 	move	a0,s2
80017e00:	02002821 	move	a1,s0
80017e04:	0c005cd4 	jal	80017350 <get_pte>
80017e08:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:417
		if (ptep == NULL) {
80017e0c:	10400042 	beqz	v0,80017f18 <copy_range+0x188>
80017e10:	0040a021 	move	s4,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:427
			} else {
				start = ROUNDDOWN(start + PTSIZE, PTSIZE);
			}
			continue;
		}
		if (*ptep != 0) {
80017e14:	8c420000 	lw	v0,0(v0)
80017e18:	14400013 	bnez	v0,80017e68 <copy_range+0xd8>
80017e1c:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:483
				ptep_copy(&entry, ptep);
				swap_duplicate(entry);
				ptep_copy(nptep, &entry);
			}
		}
		start += PGSIZE;
80017e20:	26101000 	addiu	s0,s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:484
	} while (start != 0 && start < end);
80017e24:	12000003 	beqz	s0,80017e34 <copy_range+0xa4>
80017e28:	0211102b 	sltu	v0,s0,s1
80017e2c:	1440fff4 	bnez	v0,80017e00 <copy_range+0x70>
80017e30:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:490
#ifdef ARCH_ARM
	/* we have modified the PTE of the original
	 * process, so invalidate TLB */
	tlb_invalidate_all();
#endif
	return 0;
80017e34:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:491
}
80017e38:	8fbf0034 	lw	ra,52(sp)
80017e3c:	8fbe0030 	lw	s8,48(sp)
80017e40:	8fb7002c 	lw	s7,44(sp)
80017e44:	8fb60028 	lw	s6,40(sp)
80017e48:	8fb50024 	lw	s5,36(sp)
80017e4c:	8fb40020 	lw	s4,32(sp)
80017e50:	8fb3001c 	lw	s3,28(sp)
80017e54:	8fb20018 	lw	s2,24(sp)
80017e58:	8fb10014 	lw	s1,20(sp)
80017e5c:	8fb00010 	lw	s0,16(sp)
80017e60:	03e00008 	jr	ra
80017e64:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:428
				start = ROUNDDOWN(start + PTSIZE, PTSIZE);
			}
			continue;
		}
		if (*ptep != 0) {
			if ((nptep = get_pte(to, start, 1)) == NULL) {
80017e68:	02002821 	move	a1,s0
80017e6c:	0c005cd4 	jal	80017350 <get_pte>
80017e70:	24060001 	li	a2,1
80017e74:	5040fff0 	beqzl	v0,80017e38 <copy_range+0xa8>
80017e78:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:433
				return -E_NO_MEM;
			}
			int ret;
			//kprintf("%08x %08x %08x\n", nptep, *nptep, start);
			assert(*ptep != 0 && *nptep == 0);
80017e7c:	8e830000 	lw	v1,0(s4)
80017e80:	1060003a 	beqz	v1,80017f6c <copy_range+0x1dc>
80017e84:	3c048002 	lui	a0,0x8002
80017e88:	8c420000 	lw	v0,0(v0)
80017e8c:	14400037 	bnez	v0,80017f6c <copy_range+0x1dc>
80017e90:	30620001 	andi	v0,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:457
				struct Page *page = pte2page(*ptep);
				ret = page_insert(to, page, start, perm);

			}
#else /* ARCH_ARM */
			if (ptep_present(ptep)) {
80017e94:	1040003c 	beqz	v0,80017f88 <copy_range+0x1f8>
80017e98:	2402f000 	li	v0,-4096
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017e9c:	3c057fff 	lui	a1,0x7fff
pte2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:119
static inline struct Page *pte2page(pte_t pte)
{
	if (!(pte & PTE_P)) {
		panic("pte2page called with invalid pte");
	}
	return pa2page(PTE_ADDR(pte));
80017ea0:	00621024 	and	v0,v1,v0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017ea4:	8fc47770 	lw	a0,30576(s8)
80017ea8:	34a5f000 	ori	a1,a1,0xf000
80017eac:	00451021 	addu	v0,v0,a1
80017eb0:	00021302 	srl	v0,v0,0xc
80017eb4:	0044202b 	sltu	a0,v0,a0
80017eb8:	1080003a 	beqz	a0,80017fa4 <copy_range+0x214>
80017ebc:	8ef577bc 	lw	s5,30652(s7)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80017ec0:	00021140 	sll	v0,v0,0x5
ptep_get_perm():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:89
	*ptep &= (~PTE_W);
}

static inline pte_perm_t ptep_get_perm(pte_t * ptep, pte_perm_t perm)
{
	return (*ptep) & perm;
80017ec4:	30740007 	andi	s4,v1,0x7
copy_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:460
				pte_perm_t perm = ptep_get_perm(ptep, PTE_USER);
				struct Page *page = pte2page(*ptep);
				if (!share && ptep_s_write(ptep)) {
80017ec8:	16c00004 	bnez	s6,80017edc <copy_range+0x14c>
80017ecc:	02a2a821 	addu	s5,s5,v0
ptep_s_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
80017ed0:	30620002 	andi	v0,v1,0x2
copy_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:460
80017ed4:	14400019 	bnez	v0,80017f3c <copy_range+0x1ac>
80017ed8:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:469
					ptep_set_perm(&perm_with_swap_stat,
						      perm);
					page_insert(from, page, start,
						    perm_with_swap_stat);
				}
				ret = page_insert(to, page, start, perm);
80017edc:	02602021 	move	a0,s3
80017ee0:	02a02821 	move	a1,s5
80017ee4:	02003021 	move	a2,s0
80017ee8:	0c005dd5 	jal	80017754 <page_insert>
80017eec:	02803821 	move	a3,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:470
				assert(ret == 0);
80017ef0:	5040ffcc 	beqzl	v0,80017e24 <copy_range+0x94>
80017ef4:	26101000 	addiu	s0,s0,4096
80017ef8:	3c048002 	lui	a0,0x8002
80017efc:	3c068002 	lui	a2,0x8002
80017f00:	3c078002 	lui	a3,0x8002
80017f04:	24843a18 	addiu	a0,a0,14872
80017f08:	240501d6 	li	a1,470
80017f0c:	24c60e48 	addiu	a2,a2,3656
80017f10:	0c006b13 	jal	8001ac4c <__panic>
80017f14:	24e73a80 	addiu	a3,a3,14976
get_pgd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:16
 * Page table operations
 **************************************************/

pgd_t *get_pgd(pgd_t * pgdir, uintptr_t la, bool create)
{
	return &pgdir[PGX(la)];
80017f18:	00101582 	srl	v0,s0,0x16
80017f1c:	00021080 	sll	v0,v0,0x2
80017f20:	02421021 	addu	v0,s2,v0
copy_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:418
	assert(USER_ACCESS(start, end));

	do {
		pte_t *ptep = get_pte(from, start, 0), *nptep;
		if (ptep == NULL) {
			if (get_pud(from, start, 0) == NULL) {
80017f24:	1040000c 	beqz	v0,80017f58 <copy_range+0x1c8>
80017f28:	3c050040 	lui	a1,0x40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:423
				start = ROUNDDOWN(start + PUSIZE, PUSIZE);
			} else if (get_pmd(from, start, 0) == NULL) {
				start = ROUNDDOWN(start + PMSIZE, PMSIZE);
			} else {
				start = ROUNDDOWN(start + PTSIZE, PTSIZE);
80017f2c:	02058021 	addu	s0,s0,a1
80017f30:	3c02ffc0 	lui	v0,0xffc0
80017f34:	08005f89 	j	80017e24 <copy_range+0x94>
80017f38:	02028024 	and	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:466
					ptep_unset_s_write(&perm);
					pte_perm_t perm_with_swap_stat =
					    ptep_get_perm(ptep, PTE_SWAP);
					ptep_set_perm(&perm_with_swap_stat,
						      perm);
					page_insert(from, page, start,
80017f3c:	02a02821 	move	a1,s5
80017f40:	02003021 	move	a2,s0
80017f44:	30670065 	andi	a3,v1,0x65
80017f48:	0c005dd5 	jal	80017754 <page_insert>
80017f4c:	30740005 	andi	s4,v1,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:469
						    perm_with_swap_stat);
				}
				ret = page_insert(to, page, start, perm);
80017f50:	08005fb8 	j	80017ee0 <copy_range+0x150>
80017f54:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:419

	do {
		pte_t *ptep = get_pte(from, start, 0), *nptep;
		if (ptep == NULL) {
			if (get_pud(from, start, 0) == NULL) {
				start = ROUNDDOWN(start + PUSIZE, PUSIZE);
80017f58:	3c020040 	lui	v0,0x40
80017f5c:	02028021 	addu	s0,s0,v0
80017f60:	3c02ffc0 	lui	v0,0xffc0
80017f64:	08005f89 	j	80017e24 <copy_range+0x94>
80017f68:	02028024 	and	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:433
			if ((nptep = get_pte(to, start, 1)) == NULL) {
				return -E_NO_MEM;
			}
			int ret;
			//kprintf("%08x %08x %08x\n", nptep, *nptep, start);
			assert(*ptep != 0 && *nptep == 0);
80017f6c:	3c068002 	lui	a2,0x8002
80017f70:	3c078002 	lui	a3,0x8002
80017f74:	24843a18 	addiu	a0,a0,14872
80017f78:	240501b1 	li	a1,433
80017f7c:	24c60e48 	addiu	a2,a2,3656
80017f80:	0c006b13 	jal	8001ac4c <__panic>
80017f84:	24e73a64 	addiu	a3,a3,14948
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:475
				assert(ret == 0);
			}
#endif /* ARCH_ARM */
			else {
#ifndef UCONFIG_SWAP
				assert(0);
80017f88:	3c068002 	lui	a2,0x8002
80017f8c:	3c078002 	lui	a3,0x8002
80017f90:	24843a18 	addiu	a0,a0,14872
80017f94:	240501db 	li	a1,475
80017f98:	24c60e48 	addiu	a2,a2,3656
80017f9c:	0c006b13 	jal	8001ac4c <__panic>
80017fa0:	24e72434 	addiu	a3,a3,9268
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80017fa4:	0c007f78 	jal	8001fde0 <pa2page.part.7>
80017fa8:	00000000 	nop
copy_range():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:413
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
	assert(USER_ACCESS(start, end));
80017fac:	3c048002 	lui	a0,0x8002
80017fb0:	3c068002 	lui	a2,0x8002
80017fb4:	3c078002 	lui	a3,0x8002
80017fb8:	24843a18 	addiu	a0,a0,14872
80017fbc:	2405019d 	li	a1,413
80017fc0:	24c60e48 	addiu	a2,a2,3656
80017fc4:	0c006b13 	jal	8001ac4c <__panic>
80017fc8:	24e73a20 	addiu	a3,a3,14880
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/pmm.c:412
 * READONLY, a write will be handled in pgfault
 */
int
copy_range(pgd_t * to, pgd_t * from, uintptr_t start, uintptr_t end, bool share)
{
	assert(start % PGSIZE == 0 && end % PGSIZE == 0);
80017fcc:	3c048002 	lui	a0,0x8002
80017fd0:	3c068002 	lui	a2,0x8002
80017fd4:	3c078002 	lui	a3,0x8002
80017fd8:	24843a18 	addiu	a0,a0,14872
80017fdc:	2405019c 	li	a1,412
80017fe0:	24c60e48 	addiu	a2,a2,3656
80017fe4:	0c006b13 	jal	8001ac4c <__panic>
80017fe8:	24e73164 	addiu	a3,a3,12644

80017fec <event_box_init>:
event_box_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:17
#define current (pls_read(current))
#define idleproc (pls_read(idleproc))

void event_box_init(event_t * event_box)
{
	wait_queue_init(&(event_box->wait_queue));
80017fec:	08006953 	j	8001a54c <wait_queue_init>
80017ff0:	24840004 	addiu	a0,a0,4

80017ff4 <ipc_event_send>:
ipc_event_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:44
	}
	return 0;
}

int ipc_event_send(int pid, int event, unsigned int timeout)
{
80017ff4:	27bdffa0 	addiu	sp,sp,-96
80017ff8:	afb00048 	sw	s0,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:46
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) == NULL || proc->state == PROC_ZOMBIE) {
80017ffc:	afa50044 	sw	a1,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:44
	}
	return 0;
}

int ipc_event_send(int pid, int event, unsigned int timeout)
{
80018000:	afbf005c 	sw	ra,92(sp)
80018004:	afb40058 	sw	s4,88(sp)
80018008:	afb30054 	sw	s3,84(sp)
8001800c:	afb20050 	sw	s2,80(sp)
80018010:	afb1004c 	sw	s1,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:46
	struct proc_struct *proc;
	if ((proc = find_proc(pid)) == NULL || proc->state == PROC_ZOMBIE) {
80018014:	0c003b4c 	jal	8000ed30 <find_proc>
80018018:	00c08021 	move	s0,a2
8001801c:	1040007f 	beqz	v0,8001821c <ipc_event_send+0x228>
80018020:	8fa50044 	lw	a1,68(sp)
80018024:	8c440000 	lw	a0,0(v0)
80018028:	24030003 	li	v1,3
8001802c:	1083007b 	beq	a0,v1,8001821c <ipc_event_send+0x228>
80018030:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:49
		return -E_INVAL;
	}
	if (proc == current || proc == idleproc || proc == initproc
80018034:	8e2377a4 	lw	v1,30628(s1)
80018038:	10430078 	beq	v0,v1,8001821c <ipc_event_send+0x228>
8001803c:	3c048015 	lui	a0,0x8015
80018040:	8c8477a8 	lw	a0,30632(a0)
80018044:	10440075 	beq	v0,a0,8001821c <ipc_event_send+0x228>
80018048:	3c048015 	lui	a0,0x8015
8001804c:	8c847798 	lw	a0,30616(a0)
80018050:	10440072 	beq	v0,a0,8001821c <ipc_event_send+0x228>
80018054:	3c048015 	lui	a0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:50
	    || proc == kswapd) {
80018058:	8c8477b4 	lw	a0,30644(a0)
8001805c:	1044006f 	beq	v0,a0,8001821c <ipc_event_send+0x228>
80018060:	3c048000 	lui	a0,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:53
		return -E_INVAL;
	}
	if (proc->wait_state == WT_EVENT_RECV) {
80018064:	8c460084 	lw	a2,132(v0)
80018068:	24840111 	addiu	a0,a0,273
8001806c:	10c40065 	beq	a2,a0,80018204 <ipc_event_send+0x210>
80018070:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:56
		wakeup_proc(proc);
	}
	current->event_box.event = event;
80018074:	ac6500b0 	sw	a1,176(v1)
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
80018078:	1600003d 	bnez	s0,80018170 <ipc_event_send+0x17c>
8001807c:	00009821 	move	s3,zero
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018080:	40036000 	mfc0	v1,c0_status
80018084:	30630001 	andi	v1,v1,0x1
80018088:	10600005 	beqz	v1,800180a0 <ipc_event_send+0xac>
8001808c:	0000a021 	move	s4,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80018090:	0c006d0c 	jal	8001b430 <intr_disable>
80018094:	afa20040 	sw	v0,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80018098:	8fa20040 	lw	v0,64(sp)
8001809c:	24140001 	li	s4,1
send_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:25
static uint32_t send_event(struct proc_struct *proc, timer_t * timer)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	wait_t __wait, *wait = &__wait;
	wait_queue_t *wait_queue = &(proc->event_box.wait_queue);
800180a0:	245100b4 	addiu	s1,v0,180
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:26
	wait_current_set(wait_queue, wait, WT_EVENT_SEND);
800180a4:	3c068000 	lui	a2,0x8000
800180a8:	02202021 	move	a0,s1
800180ac:	27a50010 	addiu	a1,sp,16
800180b0:	0c006a08 	jal	8001a820 <wait_current_set>
800180b4:	24c60110 	addiu	a2,a2,272
ipc_add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
800180b8:	12600003 	beqz	s3,800180c8 <ipc_event_send+0xd4>
800180bc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
800180c0:	0c0005e5 	jal	80001794 <add_timer>
800180c4:	02602021 	move	a0,s3
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800180c8:	1680004a 	bnez	s4,800181f4 <ipc_event_send+0x200>
800180cc:	00000000 	nop
send_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:30
	ipc_add_timer(timer);
	local_intr_restore(intr_flag);

	schedule();
800180d0:	0c00059f 	jal	8000167c <schedule>
800180d4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800180d8:	40026000 	mfc0	v0,c0_status
800180dc:	30420001 	andi	v0,v0,0x1
800180e0:	1440002d 	bnez	v0,80018198 <ipc_event_send+0x1a4>
800180e4:	0000a021 	move	s4,zero
ipc_del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
800180e8:	12600003 	beqz	s3,800180f8 <ipc_event_send+0x104>
800180ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
800180f0:	0c00062d 	jal	800018b4 <del_timer>
800180f4:	02602021 	move	a0,s3
send_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:34

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(wait_queue, wait);
800180f8:	0c0069be 	jal	8001a6f8 <wait_in_queue>
800180fc:	27a40010 	addiu	a0,sp,16
80018100:	14400029 	bnez	v0,800181a8 <ipc_event_send+0x1b4>
80018104:	02202021 	move	a0,s1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018108:	1680002b 	bnez	s4,800181b8 <ipc_event_send+0x1c4>
8001810c:	8fa20014 	lw	v0,20(sp)
send_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:37
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != WT_EVENT_SEND) {
80018110:	3c038000 	lui	v1,0x8000
80018114:	24640110 	addiu	a0,v1,272
80018118:	1044002e 	beq	v0,a0,800181d4 <ipc_event_send+0x1e0>
8001811c:	8fbf005c 	lw	ra,92(sp)
ipc_event_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:63
	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	uint32_t flags;
	if ((flags = send_event(proc, timer)) == 0) {
80018120:	1040002c 	beqz	v0,800181d4 <ipc_event_send+0x1e0>
80018124:	8fbf005c 	lw	ra,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:66
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
80018128:	1443003e 	bne	v0,v1,80018224 <ipc_event_send+0x230>
8001812c:	3c048002 	lui	a0,0x8002
ipc_check_timeout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
80018130:	12000008 	beqz	s0,80018154 <ipc_event_send+0x160>
80018134:	2402ffff 	li	v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
80018138:	3c038015 	lui	v1,0x8015
8001813c:	8c6377ac 	lw	v1,30636(v1)
80018140:	00729023 	subu	s2,v1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
80018144:	0250802b 	sltu	s0,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
80018148:	2403fff0 	li	v1,-16
8001814c:	0070100a 	movz	v0,v1,s0
ipc_event_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:68
	return ipc_check_timeout(timeout, saved_ticks);
}
80018150:	8fbf005c 	lw	ra,92(sp)
80018154:	8fb40058 	lw	s4,88(sp)
80018158:	8fb30054 	lw	s3,84(sp)
8001815c:	8fb20050 	lw	s2,80(sp)
80018160:	8fb1004c 	lw	s1,76(sp)
80018164:	8fb00048 	lw	s0,72(sp)
80018168:	03e00008 	jr	ra
8001816c:	27bd0060 	addiu	sp,sp,96
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
80018170:	3c048015 	lui	a0,0x8015
timer_init():

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
80018174:	afa30028 	sw	v1,40(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80018178:	27a30038 	addiu	v1,sp,56
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
8001817c:	8c9277ac 	lw	s2,30636(a0)
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80018180:	afb00024 	sw	s0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
80018184:	afa0002c 	sw	zero,44(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80018188:	afa3003c 	sw	v1,60(sp)
8001818c:	afa30038 	sw	v1,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:60
	}
	current->event_box.event = event;

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
80018190:	08006020 	j	80018080 <ipc_event_send+0x8c>
80018194:	27b30024 	addiu	s3,sp,36
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018198:	0c006d0c 	jal	8001b430 <intr_disable>
8001819c:	24140001 	li	s4,1
800181a0:	0800603a 	j	800180e8 <ipc_event_send+0xf4>
800181a4:	00000000 	nop
send_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:34

	schedule();

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(wait_queue, wait);
800181a8:	0c00696e 	jal	8001a5b8 <wait_queue_del>
800181ac:	27a50010 	addiu	a1,sp,16
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800181b0:	1280ffd7 	beqz	s4,80018110 <ipc_event_send+0x11c>
800181b4:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800181b8:	0c006d08 	jal	8001b420 <intr_enable>
800181bc:	00000000 	nop
send_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:37
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != WT_EVENT_SEND) {
800181c0:	8fa20014 	lw	v0,20(sp)
800181c4:	3c038000 	lui	v1,0x8000
800181c8:	24640110 	addiu	a0,v1,272
800181cc:	1444ffd4 	bne	v0,a0,80018120 <ipc_event_send+0x12c>
800181d0:	8fbf005c 	lw	ra,92(sp)
ipc_event_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:64
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	uint32_t flags;
	if ((flags = send_event(proc, timer)) == 0) {
		return 0;
800181d4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:68
	}
	assert(flags == WT_INTERRUPTED);
	return ipc_check_timeout(timeout, saved_ticks);
}
800181d8:	8fb40058 	lw	s4,88(sp)
800181dc:	8fb30054 	lw	s3,84(sp)
800181e0:	8fb20050 	lw	s2,80(sp)
800181e4:	8fb1004c 	lw	s1,76(sp)
800181e8:	8fb00048 	lw	s0,72(sp)
800181ec:	03e00008 	jr	ra
800181f0:	27bd0060 	addiu	sp,sp,96
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
800181f4:	0c006d08 	jal	8001b420 <intr_enable>
800181f8:	00000000 	nop
800181fc:	08006034 	j	800180d0 <ipc_event_send+0xdc>
80018200:	00000000 	nop
ipc_event_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:54
	if (proc == current || proc == idleproc || proc == initproc
	    || proc == kswapd) {
		return -E_INVAL;
	}
	if (proc->wait_state == WT_EVENT_RECV) {
		wakeup_proc(proc);
80018204:	0c0004f8 	jal	800013e0 <wakeup_proc>
80018208:	afa20040 	sw	v0,64(sp)
8001820c:	8e2377a4 	lw	v1,30628(s1)
80018210:	8fa50044 	lw	a1,68(sp)
80018214:	0800601d 	j	80018074 <ipc_event_send+0x80>
80018218:	8fa20040 	lw	v0,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:51
	if ((proc = find_proc(pid)) == NULL || proc->state == PROC_ZOMBIE) {
		return -E_INVAL;
	}
	if (proc == current || proc == idleproc || proc == initproc
	    || proc == kswapd) {
		return -E_INVAL;
8001821c:	08006054 	j	80018150 <ipc_event_send+0x15c>
80018220:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:66

	uint32_t flags;
	if ((flags = send_event(proc, timer)) == 0) {
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
80018224:	3c068002 	lui	a2,0x8002
80018228:	3c078002 	lui	a3,0x8002
8001822c:	24843a8c 	addiu	a0,a0,14988
80018230:	24050042 	li	a1,66
80018234:	24c60e48 	addiu	a2,a2,3656
80018238:	0c006b13 	jal	8001ac4c <__panic>
8001823c:	24e73a94 	addiu	a3,a3,14996

80018240 <ipc_event_recv>:
ipc_event_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:101
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_event_recv(int *pid_store, int *event_store, unsigned int timeout)
{
80018240:	27bdffa0 	addiu	sp,sp,-96
80018244:	afb60054 	sw	s6,84(sp)
80018248:	afb4004c 	sw	s4,76(sp)
8001824c:	afb30048 	sw	s3,72(sp)
80018250:	afb0003c 	sw	s0,60(sp)
80018254:	afbf005c 	sw	ra,92(sp)
80018258:	afb70058 	sw	s7,88(sp)
8001825c:	afb50050 	sw	s5,80(sp)
80018260:	afb20044 	sw	s2,68(sp)
80018264:	afb10040 	sw	s1,64(sp)
80018268:	00a0b021 	move	s6,a1
8001826c:	0080a021 	move	s4,a0
80018270:	00c09821 	move	s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:102
	if (event_store == NULL) {
80018274:	10a00052 	beqz	a1,800183c0 <ipc_event_recv+0x180>
80018278:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:106
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
8001827c:	3c128015 	lui	s2,0x8015
80018280:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:107
	if (pid_store != NULL) {
80018284:	10800008 	beqz	a0,800182a8 <ipc_event_recv+0x68>
80018288:	8c510020 	lw	s1,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:108
		if (!user_mem_check(mm, (uintptr_t) pid_store, sizeof(int), 1)) {
8001828c:	02202021 	move	a0,s1
80018290:	02802821 	move	a1,s4
80018294:	24060004 	li	a2,4
80018298:	0c00507f 	jal	800141fc <user_mem_check>
8001829c:	24070001 	li	a3,1
800182a0:	10400048 	beqz	v0,800183c4 <ipc_event_recv+0x184>
800182a4:	8fbf005c 	lw	ra,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:112
			return -E_INVAL;
		}
	}
	if (!user_mem_check(mm, (uintptr_t) event_store, sizeof(int), 1)) {
800182a8:	02202021 	move	a0,s1
800182ac:	02c02821 	move	a1,s6
800182b0:	24060004 	li	a2,4
800182b4:	0c00507f 	jal	800141fc <user_mem_check>
800182b8:	24070001 	li	a3,1
800182bc:	10400040 	beqz	v0,800183c0 <ipc_event_recv+0x180>
800182c0:	2410ffea 	li	s0,-22
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
800182c4:	1660004a 	bnez	s3,800183f0 <ipc_event_recv+0x1b0>
800182c8:	00008021 	move	s0,zero
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800182cc:	40026000 	mfc0	v0,c0_status
800182d0:	30420001 	andi	v0,v0,0x1
800182d4:	10400003 	beqz	v0,800182e4 <ipc_event_recv+0xa4>
800182d8:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800182dc:	0c006d0c 	jal	8001b430 <intr_disable>
800182e0:	24150001 	li	s5,1
recv_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:74

static int recv_event(int *pid_store, int *event_store, timer_t * timer)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	wait_queue_t *wait_queue = &(current->event_box.wait_queue);
800182e4:	8e5277a4 	lw	s2,30628(s2)
800182e8:	265200b4 	addiu	s2,s2,180
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:75
	if (wait_queue_empty(wait_queue)) {
800182ec:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
800182f0:	02402021 	move	a0,s2
800182f4:	10400016 	beqz	v0,80018350 <ipc_event_recv+0x110>
800182f8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:76
		current->state = PROC_SLEEPING;
800182fc:	8c4277a4 	lw	v0,30628(v0)
80018300:	24030001 	li	v1,1
80018304:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:77
		current->wait_state = WT_EVENT_RECV;
80018308:	3c038000 	lui	v1,0x8000
8001830c:	24630111 	addiu	v1,v1,273
ipc_add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80018310:	12000003 	beqz	s0,80018320 <ipc_event_recv+0xe0>
80018314:	ac430084 	sw	v1,132(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80018318:	0c0005e5 	jal	80001794 <add_timer>
8001831c:	02002021 	move	a0,s0
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018320:	16a00065 	bnez	s5,800184b8 <ipc_event_recv+0x278>
80018324:	00000000 	nop
recv_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:81
		ipc_add_timer(timer);
		local_intr_restore(intr_flag);

		schedule();
80018328:	0c00059f 	jal	8000167c <schedule>
8001832c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018330:	40026000 	mfc0	v0,c0_status
80018334:	30420001 	andi	v0,v0,0x1
80018338:	1440005b 	bnez	v0,800184a8 <ipc_event_recv+0x268>
8001833c:	0000a821 	move	s5,zero
ipc_del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80018340:	12000003 	beqz	s0,80018350 <ipc_event_recv+0x110>
80018344:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80018348:	0c00062d 	jal	800018b4 <del_timer>
8001834c:	02002021 	move	a0,s0
recv_event():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:90
	}

	int ret = -1;

	wait_t *wait;
	if ((wait = wait_queue_first(wait_queue)) != NULL) {
80018350:	0c0069b0 	jal	8001a6c0 <wait_queue_first>
80018354:	02402021 	move	a0,s2
80018358:	1040000d 	beqz	v0,80018390 <ipc_event_recv+0x150>
8001835c:	2410ffff 	li	s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:91
		struct proc_struct *proc = wait->proc;
80018360:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:94
		*pid_store = proc->pid, *event_store =
		    proc->event_box.event, ret = 0;
		wakeup_wait(wait_queue, wait, WT_EVENT_SEND, 1);
80018364:	3c068000 	lui	a2,0x8000
80018368:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:92
	int ret = -1;

	wait_t *wait;
	if ((wait = wait_queue_first(wait_queue)) != NULL) {
		struct proc_struct *proc = wait->proc;
		*pid_store = proc->pid, *event_store =
8001836c:	8c680004 	lw	t0,4(v1)
80018370:	8c6300b0 	lw	v1,176(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:94
		    proc->event_box.event, ret = 0;
		wakeup_wait(wait_queue, wait, WT_EVENT_SEND, 1);
80018374:	00402821 	move	a1,v0
80018378:	24c60110 	addiu	a2,a2,272
8001837c:	24070001 	li	a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:92
	int ret = -1;

	wait_t *wait;
	if ((wait = wait_queue_first(wait_queue)) != NULL) {
		struct proc_struct *proc = wait->proc;
		*pid_store = proc->pid, *event_store =
80018380:	afa80014 	sw	t0,20(sp)
80018384:	afa30010 	sw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:94
		    proc->event_box.event, ret = 0;
		wakeup_wait(wait_queue, wait, WT_EVENT_SEND, 1);
80018388:	0c0069c3 	jal	8001a70c <wakeup_wait>
8001838c:	00008021 	move	s0,zero
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018390:	16a00022 	bnez	s5,8001841c <ipc_event_recv+0x1dc>
80018394:	00000000 	nop
ipc_event_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:121
	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	int pid, event, ret;
	if ((ret = recv_event(&pid, &event, timer)) == 0) {
80018398:	12000024 	beqz	s0,8001842c <ipc_event_recv+0x1ec>
8001839c:	00000000 	nop
ipc_check_timeout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
800183a0:	12600007 	beqz	s3,800183c0 <ipc_event_recv+0x180>
800183a4:	2410ffff 	li	s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
800183a8:	3c028015 	lui	v0,0x8015
800183ac:	8c4277ac 	lw	v0,30636(v0)
800183b0:	0057b823 	subu	s7,v0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
800183b4:	02f3982b 	sltu	s3,s7,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
800183b8:	2402fff0 	li	v0,-16
800183bc:	0053800a 	movz	s0,v0,s3
ipc_event_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:137
		}
		unlock_mm(mm);
		return ret;
	}
	return ipc_check_timeout(timeout, saved_ticks);
}
800183c0:	8fbf005c 	lw	ra,92(sp)
800183c4:	02001021 	move	v0,s0
800183c8:	8fb70058 	lw	s7,88(sp)
800183cc:	8fb60054 	lw	s6,84(sp)
800183d0:	8fb50050 	lw	s5,80(sp)
800183d4:	8fb4004c 	lw	s4,76(sp)
800183d8:	8fb30048 	lw	s3,72(sp)
800183dc:	8fb20044 	lw	s2,68(sp)
800183e0:	8fb10040 	lw	s1,64(sp)
800183e4:	8fb0003c 	lw	s0,60(sp)
800183e8:	03e00008 	jr	ra
800183ec:	27bd0060 	addiu	sp,sp,96
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:30
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
		return timer_init(timer, pls_read(current), timeout);
800183f0:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
800183f4:	3c038015 	lui	v1,0x8015
800183f8:	8c7777ac 	lw	s7,30636(v1)
timer_init():

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
800183fc:	afa2001c 	sw	v0,28(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80018400:	27a2002c 	addiu	v0,sp,44
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80018404:	afb30018 	sw	s3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
80018408:	afa00020 	sw	zero,32(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001840c:	afa20030 	sw	v0,48(sp)
80018410:	afa2002c 	sw	v0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:118
		return -E_INVAL;
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
80018414:	080060b3 	j	800182cc <ipc_event_recv+0x8c>
80018418:	27b00018 	addiu	s0,sp,24
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001841c:	0c006d08 	jal	8001b420 <intr_enable>
80018420:	00000000 	nop
ipc_event_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:121

	int pid, event, ret;
	if ((ret = recv_event(&pid, &event, timer)) == 0) {
80018424:	1600ffde 	bnez	s0,800183a0 <ipc_event_recv+0x160>
80018428:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:122
		lock_mm(mm);
8001842c:	0c004c2e 	jal	800130b8 <lock_mm>
80018430:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:125
		{
			ret = -E_INVAL;
			if (pid_store == NULL
80018434:	12800007 	beqz	s4,80018454 <ipc_event_recv+0x214>
80018438:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:126
			    || copy_to_user(mm, pid_store, &pid, sizeof(int))) {
8001843c:	02202021 	move	a0,s1
80018440:	27a60014 	addiu	a2,sp,20
80018444:	0c007950 	jal	8001e540 <copy_to_user>
80018448:	24070004 	li	a3,4
8001844c:	10400008 	beqz	v0,80018470 <ipc_event_recv+0x230>
80018450:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:128
				if (copy_to_user
				    (mm, event_store, &event, sizeof(int))) {
80018454:	02202021 	move	a0,s1
80018458:	02c02821 	move	a1,s6
8001845c:	27a60010 	addiu	a2,sp,16
80018460:	0c007950 	jal	8001e540 <copy_to_user>
80018464:	24070004 	li	a3,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:124

	int pid, event, ret;
	if ((ret = recv_event(&pid, &event, timer)) == 0) {
		lock_mm(mm);
		{
			ret = -E_INVAL;
80018468:	2410ffea 	li	s0,-22
8001846c:	0002800b 	movn	s0,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:133
				    (mm, event_store, &event, sizeof(int))) {
					ret = 0;
				}
			}
		}
		unlock_mm(mm);
80018470:	0c004c3f 	jal	800130fc <unlock_mm>
80018474:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/event.c:137
		return ret;
	}
	return ipc_check_timeout(timeout, saved_ticks);
}
80018478:	8fbf005c 	lw	ra,92(sp)
8001847c:	02001021 	move	v0,s0
80018480:	8fb70058 	lw	s7,88(sp)
80018484:	8fb60054 	lw	s6,84(sp)
80018488:	8fb50050 	lw	s5,80(sp)
8001848c:	8fb4004c 	lw	s4,76(sp)
80018490:	8fb30048 	lw	s3,72(sp)
80018494:	8fb20044 	lw	s2,68(sp)
80018498:	8fb10040 	lw	s1,64(sp)
8001849c:	8fb0003c 	lw	s0,60(sp)
800184a0:	03e00008 	jr	ra
800184a4:	27bd0060 	addiu	sp,sp,96
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800184a8:	0c006d0c 	jal	8001b430 <intr_disable>
800184ac:	24150001 	li	s5,1
800184b0:	080060d0 	j	80018340 <ipc_event_recv+0x100>
800184b4:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
800184b8:	0c006d08 	jal	8001b420 <intr_enable>
800184bc:	00000000 	nop
800184c0:	080060ca 	j	80018328 <ipc_event_recv+0xe8>
800184c4:	00000000 	nop

800184c8 <mbox_free>:
mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:89
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
800184c8:	8c830008 	lw	v1,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:88
	}
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
800184cc:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:89
	assert(mbox->state == CLOSING && mbox->inuse == 0);
800184d0:	24020002 	li	v0,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:88
	}
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
800184d4:	afb00014 	sw	s0,20(sp)
800184d8:	afbf001c 	sw	ra,28(sp)
800184dc:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:89
	assert(mbox->state == CLOSING && mbox->inuse == 0);
800184e0:	1462001d 	bne	v1,v0,80018558 <mbox_free+0x90>
800184e4:	00808021 	move	s0,a0
800184e8:	8c820004 	lw	v0,4(a0)
800184ec:	1440001a 	bnez	v0,80018558 <mbox_free+0x90>
800184f0:	24910014 	addiu	s1,a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:90
	assert(list_empty(&(mbox->msg_link)));
800184f4:	8c820018 	lw	v0,24(a0)
800184f8:	5622002e 	bnel	s1,v0,800185b4 <mbox_free+0xec>
800184fc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:91
	assert(wait_queue_empty(&(mbox->senders)));
80018500:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80018504:	2484001c 	addiu	a0,a0,28
80018508:	10400023 	beqz	v0,80018598 <mbox_free+0xd0>
8001850c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:92
	assert(wait_queue_empty(&(mbox->receivers)));
80018510:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80018514:	26040024 	addiu	a0,s0,36
80018518:	10400017 	beqz	v0,80018578 <mbox_free+0xb0>
8001851c:	3c028015 	lui	v0,0x8015
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80018520:	8c436d00 	lw	v1,27904(v0)
mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:96
	mbox->state = CLOSED;
	mbox->max_slots = mbox->slots = 0;
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}
80018524:	8fbf001c 	lw	ra,28(sp)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80018528:	24446d00 	addiu	a0,v0,27904
mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:93
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
	assert(list_empty(&(mbox->msg_link)));
	assert(wait_queue_empty(&(mbox->senders)));
	assert(wait_queue_empty(&(mbox->receivers)));
	mbox->state = CLOSED;
8001852c:	ae000008 	sw	zero,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:94
	mbox->max_slots = mbox->slots = 0;
80018530:	ae000010 	sw	zero,16(s0)
80018534:	ae00000c 	sw	zero,12(s0)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80018538:	ac516d00 	sw	s1,27904(v0)
8001853c:	ac710004 	sw	s1,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
80018540:	ae030014 	sw	v1,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
80018544:	ae040018 	sw	a0,24(s0)
mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:96
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}
80018548:	8fb10018 	lw	s1,24(sp)
8001854c:	8fb00014 	lw	s0,20(sp)
80018550:	03e00008 	jr	ra
80018554:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:89
	return NULL;
}

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
80018558:	3c048002 	lui	a0,0x8002
8001855c:	3c068002 	lui	a2,0x8002
80018560:	3c078002 	lui	a3,0x8002
80018564:	24843aac 	addiu	a0,a0,15020
80018568:	24050059 	li	a1,89
8001856c:	24c60e48 	addiu	a2,a2,3656
80018570:	0c006b13 	jal	8001ac4c <__panic>
80018574:	24e73ab4 	addiu	a3,a3,15028
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:92
	assert(list_empty(&(mbox->msg_link)));
	assert(wait_queue_empty(&(mbox->senders)));
	assert(wait_queue_empty(&(mbox->receivers)));
80018578:	3c048002 	lui	a0,0x8002
8001857c:	3c068002 	lui	a2,0x8002
80018580:	3c078002 	lui	a3,0x8002
80018584:	24843aac 	addiu	a0,a0,15020
80018588:	2405005c 	li	a1,92
8001858c:	24c60e48 	addiu	a2,a2,3656
80018590:	0c006b13 	jal	8001ac4c <__panic>
80018594:	24e73b24 	addiu	a3,a3,15140
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:91

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
	assert(list_empty(&(mbox->msg_link)));
	assert(wait_queue_empty(&(mbox->senders)));
80018598:	3c068002 	lui	a2,0x8002
8001859c:	3c078002 	lui	a3,0x8002
800185a0:	24843aac 	addiu	a0,a0,15020
800185a4:	2405005b 	li	a1,91
800185a8:	24c60e48 	addiu	a2,a2,3656
800185ac:	0c006b13 	jal	8001ac4c <__panic>
800185b0:	24e73b00 	addiu	a3,a3,15104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:90
}

static void mbox_free(struct msg_mbox *mbox)
{
	assert(mbox->state == CLOSING && mbox->inuse == 0);
	assert(list_empty(&(mbox->msg_link)));
800185b4:	3c068002 	lui	a2,0x8002
800185b8:	3c078002 	lui	a3,0x8002
800185bc:	24843aac 	addiu	a0,a0,15020
800185c0:	2405005a 	li	a1,90
800185c4:	24c60e48 	addiu	a2,a2,3656
800185c8:	0c006b13 	jal	8001ac4c <__panic>
800185cc:	24e73ae0 	addiu	a3,a3,15072

800185d0 <free_seg>:
free_seg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:190
	up(&sem_mbox_map);
	return ret;
}

static void free_seg(struct msg_seg *seg)
{
800185d0:	27bdffe8 	addiu	sp,sp,-24
800185d4:	afb00010 	sw	s0,16(sp)
800185d8:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:191
	if (seg->next != NULL) {
800185dc:	8c840000 	lw	a0,0(a0)
800185e0:	10800003 	beqz	a0,800185f0 <free_seg+0x20>
800185e4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:192
		free_seg(seg->next);
800185e8:	0c006174 	jal	800185d0 <free_seg>
800185ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:194
	}
	kfree(seg);
800185f0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:195
}
800185f4:	8fbf0014 	lw	ra,20(sp)
800185f8:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:194
static void free_seg(struct msg_seg *seg)
{
	if (seg->next != NULL) {
		free_seg(seg->next);
	}
	kfree(seg);
800185fc:	080054b9 	j	800152e4 <kfree>
80018600:	27bd0018 	addiu	sp,sp,24

80018604 <free_msg>:
free_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:198
}

static void free_msg(struct msg_msg *msg)
{
80018604:	27bdffe8 	addiu	sp,sp,-24
80018608:	afb00010 	sw	s0,16(sp)
8001860c:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:199
	if (msg->next != NULL) {
80018610:	8c840008 	lw	a0,8(a0)
80018614:	10800003 	beqz	a0,80018624 <free_msg+0x20>
80018618:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:200
		free_seg(msg->next);
8001861c:	0c006174 	jal	800185d0 <free_seg>
80018620:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:202
	}
	kfree(msg);
80018624:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:203
}
80018628:	8fbf0014 	lw	ra,20(sp)
8001862c:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:202
static void free_msg(struct msg_msg *msg)
{
	if (msg->next != NULL) {
		free_seg(msg->next);
	}
	kfree(msg);
80018630:	080054b9 	j	800152e4 <kfree>
80018634:	27bd0018 	addiu	sp,sp,24

80018638 <add_msg>:
add_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:100
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
	assert(mbox->state == OPENED);
80018638:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:99
	mbox->max_slots = mbox->slots = 0;
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
8001863c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:100
	assert(mbox->state == OPENED);
80018640:	24030001 	li	v1,1
80018644:	1443001f 	bne	v0,v1,800186c4 <add_msg+0x8c>
80018648:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:101
	mbox->slots++;
8001864c:	8c830010 	lw	v1,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:102
	list_entry_t *list = &(mbox->msg_link), *le = &(msg->msg_link);
80018650:	24870014 	addiu	a3,a0,20
80018654:	24a2000c 	addiu	v0,a1,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:101
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
	assert(mbox->state == OPENED);
	mbox->slots++;
80018658:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:103
	list_entry_t *list = &(mbox->msg_link), *le = &(msg->msg_link);
	if (append) {
8001865c:	14c0000d 	bnez	a2,80018694 <add_msg+0x5c>
80018660:	ac830010 	sw	v1,16(a0)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80018664:	8c830018 	lw	v1,24(a0)
add_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:109
		list_add_before(list, le);
	} else {
		list_add_after(list, le);
	}
	wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
}
80018668:	8fbf0014 	lw	ra,20(sp)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001866c:	ac820018 	sw	v0,24(a0)
80018670:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80018674:	aca30010 	sw	v1,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80018678:	aca7000c 	sw	a3,12(a1)
add_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:108
	if (append) {
		list_add_before(list, le);
	} else {
		list_add_after(list, le);
	}
	wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
8001867c:	3c058000 	lui	a1,0x8000
80018680:	24840024 	addiu	a0,a0,36
80018684:	24a50121 	addiu	a1,a1,289
80018688:	24060001 	li	a2,1
8001868c:	080069d1 	j	8001a744 <wakeup_first>
80018690:	27bd0018 	addiu	sp,sp,24
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80018694:	8c830014 	lw	v1,20(a0)
add_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:109
}
80018698:	8fbf0014 	lw	ra,20(sp)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001869c:	ac820014 	sw	v0,20(a0)
800186a0:	ac620004 	sw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
800186a4:	aca3000c 	sw	v1,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
800186a8:	aca70010 	sw	a3,16(a1)
add_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:108
	if (append) {
		list_add_before(list, le);
	} else {
		list_add_after(list, le);
	}
	wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
800186ac:	3c058000 	lui	a1,0x8000
800186b0:	24840024 	addiu	a0,a0,36
800186b4:	24a50121 	addiu	a1,a1,289
800186b8:	24060001 	li	a2,1
800186bc:	080069d1 	j	8001a744 <wakeup_first>
800186c0:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:100
	list_add_before(&(free_mbox_list), &(mbox->msg_link));
}

static void add_msg(struct msg_mbox *mbox, struct msg_msg *msg, bool append)
{
	assert(mbox->state == OPENED);
800186c4:	3c048002 	lui	a0,0x8002
800186c8:	3c068002 	lui	a2,0x8002
800186cc:	3c078002 	lui	a3,0x8002
800186d0:	24843aac 	addiu	a0,a0,15020
800186d4:	24050064 	li	a1,100
800186d8:	24c60e48 	addiu	a2,a2,3656
800186dc:	0c006b13 	jal	8001ac4c <__panic>
800186e0:	24e73b4c 	addiu	a3,a3,15180

800186e4 <mbox_init>:
mbox_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:63
static struct msg_mbox *mbox_map[MAX_MBOX_PAGES];
static list_entry_t free_mbox_list;
static semaphore_t sem_mbox_map;

void mbox_init(void)
{
800186e4:	3c028015 	lui	v0,0x8015
800186e8:	27bdffe8 	addiu	sp,sp,-24
800186ec:	24426b88 	addiu	v0,v0,27528
800186f0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:62

static struct msg_mbox *mbox_map[MAX_MBOX_PAGES];
static list_entry_t free_mbox_list;
static semaphore_t sem_mbox_map;

void mbox_init(void)
800186f4:	24430164 	addiu	v1,v0,356
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:66
{
	int i;
	for (i = 0; i < MAX_MBOX_PAGES; i++) {
		mbox_map[i] = NULL;
800186f8:	ac400000 	sw	zero,0(v0)
800186fc:	24420004 	addiu	v0,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:65
static semaphore_t sem_mbox_map;

void mbox_init(void)
{
	int i;
	for (i = 0; i < MAX_MBOX_PAGES; i++) {
80018700:	5443fffe 	bnel	v0,v1,800186fc <mbox_init+0x18>
80018704:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:68
		mbox_map[i] = NULL;
	}
	sem_init(&sem_mbox_map, 1);
80018708:	3c048015 	lui	a0,0x8015
8001870c:	24846cec 	addiu	a0,a0,27884
80018710:	0c00671f 	jal	80019c7c <sem_init>
80018714:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:71
	list_init(&free_mbox_list);
	static_assert(MBOX_P_PAGE != 0);
}
80018718:	8fbf0014 	lw	ra,20(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001871c:	3c038015 	lui	v1,0x8015
80018720:	24626d00 	addiu	v0,v1,27904
80018724:	ac420004 	sw	v0,4(v0)
80018728:	ac626d00 	sw	v0,27904(v1)
mbox_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:71
8001872c:	03e00008 	jr	ra
80018730:	27bd0018 	addiu	sp,sp,24

80018734 <ipc_mbox_init>:
ipc_mbox_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:176
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
{
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
80018734:	2482ffff 	addiu	v0,a0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:175
	local_intr_restore(intr_flag);
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
{
80018738:	27bdffc0 	addiu	sp,sp,-64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:176
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
8001873c:	2c421000 	sltiu	v0,v0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:175
	local_intr_restore(intr_flag);
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
{
80018740:	afb30024 	sw	s3,36(sp)
80018744:	afbf003c 	sw	ra,60(sp)
80018748:	afbe0038 	sw	s8,56(sp)
8001874c:	afb70034 	sw	s7,52(sp)
80018750:	afb60030 	sw	s6,48(sp)
80018754:	afb5002c 	sw	s5,44(sp)
80018758:	afb40028 	sw	s4,40(sp)
8001875c:	afb20020 	sw	s2,32(sp)
80018760:	afb1001c 	sw	s1,28(sp)
80018764:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:176
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
80018768:	10400085 	beqz	v0,80018980 <ipc_mbox_init+0x24c>
8001876c:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:181
		return -E_INVAL;
	}
	int ret = -E_NO_MEM;
	struct msg_mbox *mbox;
	down(&sem_mbox_map);
80018770:	3c148015 	lui	s4,0x8015
80018774:	0c006727 	jal	80019c9c <down>
80018778:	26846cec 	addiu	a0,s4,27884
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001877c:	40026000 	mfc0	v0,c0_status
80018780:	30420001 	andi	v0,v0,0x1
80018784:	10400005 	beqz	v0,8001879c <ipc_mbox_init+0x68>
80018788:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001878c:	0c006d0c 	jal	8001b430 <intr_disable>
80018790:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80018794:	24020001 	li	v0,1
80018798:	afa20010 	sw	v0,16(sp)
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001879c:	3c108015 	lui	s0,0x8015
800187a0:	26116d00 	addiu	s1,s0,27904
800187a4:	8e220004 	lw	v0,4(s1)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:131
static struct msg_mbox *new_mbox(unsigned int max_slots)
{
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
800187a8:	10510023 	beq	v0,s1,80018838 <ipc_mbox_init+0x104>
800187ac:	3c168015 	lui	s6,0x8015
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
800187b0:	8c430004 	lw	v1,4(v0)
800187b4:	8c440000 	lw	a0,0(v0)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:164
		} else if (list_empty(&free_mbox_list)) {
			goto out;
		}
	}
	assert(!list_empty(&free_mbox_list));
	mbox = le2mbox(list_next(&free_mbox_list), msg_link);
800187b8:	2450ffec 	addiu	s0,v0,-20
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800187bc:	ac830004 	sw	v1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
800187c0:	ac640000 	sw	a0,0(v1)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:166
	list_del_init(&(mbox->msg_link));
	mbox->state = OPENED;
800187c4:	24030001 	li	v1,1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
800187c8:	ac420004 	sw	v0,4(v0)
800187cc:	ac420000 	sw	v0,0(v0)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:166
800187d0:	ac43fff4 	sw	v1,-12(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:167
	mbox->max_slots = max_slots;
800187d4:	ac53fff8 	sw	s3,-8(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800187d8:	8fa20010 	lw	v0,16(sp)
800187dc:	10400003 	beqz	v0,800187ec <ipc_mbox_init+0xb8>
800187e0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800187e4:	0c006d08 	jal	8001b420 <intr_enable>
800187e8:	00000000 	nop
ipc_mbox_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:182
		return -E_INVAL;
	}
	int ret = -E_NO_MEM;
	struct msg_mbox *mbox;
	down(&sem_mbox_map);
	if ((mbox = new_mbox(max_slots)) != NULL) {
800187ec:	12000002 	beqz	s0,800187f8 <ipc_mbox_init+0xc4>
800187f0:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:183
		ret = mbox->id;
800187f4:	8e020000 	lw	v0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:185
	}
	up(&sem_mbox_map);
800187f8:	26846cec 	addiu	a0,s4,27884
800187fc:	0c006725 	jal	80019c94 <up>
80018800:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:186
	return ret;
80018804:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:187
}
80018808:	8fbf003c 	lw	ra,60(sp)
8001880c:	8fbe0038 	lw	s8,56(sp)
80018810:	8fb70034 	lw	s7,52(sp)
80018814:	8fb60030 	lw	s6,48(sp)
80018818:	8fb5002c 	lw	s5,44(sp)
8001881c:	8fb40028 	lw	s4,40(sp)
80018820:	8fb30024 	lw	s3,36(sp)
80018824:	8fb20020 	lw	s2,32(sp)
80018828:	8fb1001c 	lw	s1,28(sp)
8001882c:	8fb00018 	lw	s0,24(sp)
80018830:	03e00008 	jr	ra
80018834:	27bd0040 	addiu	sp,sp,64
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:134
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
		int i, id;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			if (mbox_map[i] == NULL) {
80018838:	8ec26b88 	lw	v0,27528(s6)
8001883c:	1040005f 	beqz	v0,800189bc <ipc_mbox_init+0x288>
80018840:	3c028015 	lui	v0,0x8015
80018844:	24426b8c 	addiu	v0,v0,27532
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:133
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
		int i, id;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
80018848:	24150001 	li	s5,1
8001884c:	24120001 	li	s2,1
80018850:	08006219 	j	80018864 <ipc_mbox_init+0x130>
80018854:	24040059 	li	a0,89
80018858:	0240a821 	move	s5,s2
8001885c:	12440050 	beq	s2,a0,800189a0 <ipc_mbox_init+0x26c>
80018860:	24420004 	addiu	v0,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:134
			if (mbox_map[i] == NULL) {
80018864:	8c430000 	lw	v1,0(v0)
80018868:	5460fffb 	bnezl	v1,80018858 <ipc_mbox_init+0x124>
8001886c:	26520001 	addiu	s2,s2,1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018870:	8fa30010 	lw	v1,16(sp)
80018874:	10600003 	beqz	v1,80018884 <ipc_mbox_init+0x150>
80018878:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001887c:	0c006d08 	jal	8001b420 <intr_enable>
80018880:	00000000 	nop
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:143
		if (i == MAX_MBOX_PAGES) {
			goto out;
		}
		local_intr_restore(intr_flag);

		struct Page *page = alloc_page();
80018884:	0c00742d 	jal	8001d0b4 <alloc_pages>
80018888:	24040001 	li	a0,1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001888c:	40036000 	mfc0	v1,c0_status
80018890:	30630001 	andi	v1,v1,0x1
80018894:	1460003c 	bnez	v1,80018988 <ipc_mbox_init+0x254>
80018898:	afa00010 	sw	zero,16(sp)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:146

		local_intr_save(intr_flag);
		if (page != NULL) {
8001889c:	10400042 	beqz	v0,800189a8 <ipc_mbox_init+0x274>
800188a0:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800188a4:	8c6477bc 	lw	a0,30652(v1)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800188a8:	3c038015 	lui	v1,0x8015
800188ac:	8c637770 	lw	v1,30576(v1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
800188b0:	00441023 	subu	v0,v0,a0
800188b4:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800188b8:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800188bc:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
800188c0:	3c078000 	lui	a3,0x8000
800188c4:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
800188c8:	0083182b 	sltu	v1,a0,v1
800188cc:	1060003e 	beqz	v1,800189c8 <ipc_mbox_init+0x294>
800188d0:	00473821 	addu	a3,v0,a3
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:147
			id = i * MBOX_P_PAGE;
800188d4:	0015b840 	sll	s7,s5,0x1
800188d8:	02f5a821 	addu	s5,s7,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:148
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
800188dc:	00121080 	sll	v0,s2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:147

		struct Page *page = alloc_page();

		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
800188e0:	0015b940 	sll	s7,s5,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:148
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
800188e4:	26d66b88 	addiu	s6,s6,27528
800188e8:	0056b021 	addu	s6,v0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:147

		struct Page *page = alloc_page();

		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
800188ec:	02f5b823 	subu	s7,s7,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:148
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
800188f0:	aec70000 	sw	a3,0(s6)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
800188f4:	00e09021 	move	s2,a3
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:174
out:
	local_intr_restore(intr_flag);
	return mbox;
}

int ipc_mbox_init(unsigned int max_slots)
800188f8:	24f60018 	addiu	s6,a3,24
800188fc:	26fe005d 	addiu	s8,s7,93
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:153
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
			for (i = 0; i < MBOX_P_PAGE; i++, id++, mbox++) {
				mbox->id = id, mbox->inuse = 0;
				mbox->state = CLOSED;
				mbox->max_slots = mbox->slots = 0;
				list_init(&(mbox->msg_link));
80018900:	26550014 	addiu	s5,s2,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:150
		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
			for (i = 0; i < MBOX_P_PAGE; i++, id++, mbox++) {
				mbox->id = id, mbox->inuse = 0;
80018904:	ae570000 	sw	s7,0(s2)
80018908:	ae400004 	sw	zero,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:151
				mbox->state = CLOSED;
8001890c:	ae400008 	sw	zero,8(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:152
				mbox->max_slots = mbox->slots = 0;
80018910:	ae400010 	sw	zero,16(s2)
80018914:	ae40000c 	sw	zero,12(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:154
				list_init(&(mbox->msg_link));
				wait_queue_init(&(mbox->senders));
80018918:	2644001c 	addiu	a0,s2,28
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001891c:	aed50000 	sw	s5,0(s6)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:154
80018920:	0c006953 	jal	8001a54c <wait_queue_init>
80018924:	aed5fffc 	sw	s5,-4(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:155
				wait_queue_init(&(mbox->receivers));
80018928:	0c006953 	jal	8001a54c <wait_queue_init>
8001892c:	26440024 	addiu	a0,s2,36
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
80018930:	8e026d00 	lw	v0,27904(s0)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:149

		local_intr_save(intr_flag);
		if (page != NULL) {
			id = i * MBOX_P_PAGE;
			mbox = mbox_map[i] = (struct msg_mbox *)page2kva(page);
			for (i = 0; i < MBOX_P_PAGE; i++, id++, mbox++) {
80018934:	26f70001 	addiu	s7,s7,1
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80018938:	ae156d00 	sw	s5,27904(s0)
8001893c:	ac550004 	sw	s5,4(v0)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:149
80018940:	2652002c 	addiu	s2,s2,44
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80018944:	aed10000 	sw	s1,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80018948:	aec2fffc 	sw	v0,-4(s6)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:149
8001894c:	16feffec 	bne	s7,s8,80018900 <ipc_mbox_init+0x1cc>
80018950:	26d6002c 	addiu	s6,s6,44
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
80018954:	8e220004 	lw	v0,4(s1)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:163
			}
		} else if (list_empty(&free_mbox_list)) {
			goto out;
		}
	}
	assert(!list_empty(&free_mbox_list));
80018958:	5451ff96 	bnel	v0,s1,800187b4 <ipc_mbox_init+0x80>
8001895c:	8c430004 	lw	v1,4(v0)
80018960:	3c048002 	lui	a0,0x8002
80018964:	3c068002 	lui	a2,0x8002
80018968:	3c078002 	lui	a3,0x8002
8001896c:	24843aac 	addiu	a0,a0,15020
80018970:	240500a3 	li	a1,163
80018974:	24c60e48 	addiu	a2,a2,3656
80018978:	0c006b13 	jal	8001ac4c <__panic>
8001897c:	24e73b64 	addiu	a3,a3,15204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:177
}

int ipc_mbox_init(unsigned int max_slots)
{
	if (max_slots == 0 || max_slots > MAX_MSG_SLOTS) {
		return -E_INVAL;
80018980:	08006202 	j	80018808 <ipc_mbox_init+0xd4>
80018984:	2402ffea 	li	v0,-22
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80018988:	0c006d0c 	jal	8001b430 <intr_disable>
8001898c:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80018990:	24030001 	li	v1,1
80018994:	afa30010 	sw	v1,16(sp)
80018998:	08006227 	j	8001889c <ipc_mbox_init+0x168>
8001899c:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:129
}

static struct msg_mbox *new_mbox(unsigned int max_slots)
{
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
800189a0:	080061f6 	j	800187d8 <ipc_mbox_init+0xa4>
800189a4:	00008021 	move	s0,zero
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
800189a8:	8e220004 	lw	v0,4(s1)
new_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:159
				wait_queue_init(&(mbox->senders));
				wait_queue_init(&(mbox->receivers));
				list_add_before(&(free_mbox_list),
						&(mbox->msg_link));
			}
		} else if (list_empty(&free_mbox_list)) {
800189ac:	1451ff80 	bne	v0,s1,800187b0 <ipc_mbox_init+0x7c>
800189b0:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800189b4:	080061f7 	j	800187dc <ipc_mbox_init+0xa8>
800189b8:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:133
	bool intr_flag;
	struct msg_mbox *mbox = NULL;
	local_intr_save(intr_flag);
	if (list_empty(&free_mbox_list)) {
		int i, id;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
800189bc:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:134
			if (mbox_map[i] == NULL) {
800189c0:	0800621c 	j	80018870 <ipc_mbox_init+0x13c>
800189c4:	00009021 	move	s2,zero
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
800189c8:	3c048002 	lui	a0,0x8002
800189cc:	3c068002 	lui	a2,0x8002
800189d0:	24842a0c 	addiu	a0,a0,10764
800189d4:	2405006a 	li	a1,106
800189d8:	0c006b13 	jal	8001ac4c <__panic>
800189dc:	24c62a94 	addiu	a2,a2,10900

800189e0 <ipc_mbox_send>:
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:289
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_send(int id, struct mboxbuf *buf, unsigned int timeout)
{
800189e0:	27bdff70 	addiu	sp,sp,-144
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
800189e4:	2c822000 	sltiu	v0,a0,8192
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:289
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_send(int id, struct mboxbuf *buf, unsigned int timeout)
{
800189e8:	afb40078 	sw	s4,120(sp)
800189ec:	afb30074 	sw	s3,116(sp)
800189f0:	afb20070 	sw	s2,112(sp)
800189f4:	afbf008c 	sw	ra,140(sp)
800189f8:	afbe0088 	sw	s8,136(sp)
800189fc:	afb70084 	sw	s7,132(sp)
80018a00:	afb60080 	sw	s6,128(sp)
80018a04:	afb5007c 	sw	s5,124(sp)
80018a08:	afb1006c 	sw	s1,108(sp)
80018a0c:	afb00068 	sw	s0,104(sp)
80018a10:	00a09821 	move	s3,a1
80018a14:	00c0a021 	move	s4,a2
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80018a18:	1040001c 	beqz	v0,80018a8c <ipc_mbox_send+0xac>
80018a1c:	2412ffea 	li	s2,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018a20:	3c02b02c 	lui	v0,0xb02c
80018a24:	24420b03 	addiu	v0,v0,2819
80018a28:	00820019 	multu	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80018a2c:	3c058015 	lui	a1,0x8015
80018a30:	24a56b88 	addiu	a1,a1,27528
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018a34:	00001010 	mfhi	v0
80018a38:	00021182 	srl	v0,v0,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80018a3c:	00021880 	sll	v1,v0,0x2
80018a40:	afa30058 	sw	v1,88(sp)
80018a44:	00a31821 	addu	v1,a1,v1
80018a48:	8c630000 	lw	v1,0(v1)
80018a4c:	1060000f 	beqz	v1,80018a8c <ipc_mbox_send+0xac>
80018a50:	00022840 	sll	a1,v0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018a54:	00a21021 	addu	v0,a1,v0
80018a58:	00022940 	sll	a1,v0,0x5
80018a5c:	00a21023 	subu	v0,a1,v0
80018a60:	00822023 	subu	a0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
80018a64:	00041080 	sll	v0,a0,0x2
80018a68:	0004f100 	sll	s8,a0,0x4
80018a6c:	03c2f023 	subu	s8,s8,v0
80018a70:	03c42023 	subu	a0,s8,a0
80018a74:	0004f080 	sll	s8,a0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80018a78:	007e1821 	addu	v1,v1,s8
80018a7c:	8c630008 	lw	v1,8(v1)
80018a80:	24020001 	li	v0,1
80018a84:	1062000e 	beq	v1,v0,80018ac0 <ipc_mbox_send+0xe0>
80018a88:	3c118015 	lui	s1,0x8015
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018a8c:	8fbf008c 	lw	ra,140(sp)
80018a90:	02401021 	move	v0,s2
80018a94:	8fbe0088 	lw	s8,136(sp)
80018a98:	8fb70084 	lw	s7,132(sp)
80018a9c:	8fb60080 	lw	s6,128(sp)
80018aa0:	8fb5007c 	lw	s5,124(sp)
80018aa4:	8fb40078 	lw	s4,120(sp)
80018aa8:	8fb30074 	lw	s3,116(sp)
80018aac:	8fb20070 	lw	s2,112(sp)
80018ab0:	8fb1006c 	lw	s1,108(sp)
80018ab4:	8fb00068 	lw	s0,104(sp)
80018ab8:	03e00008 	jr	ra
80018abc:	27bd0090 	addiu	sp,sp,144
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:296
		return -E_INVAL;
	}

	struct msg_msg *msg;
	struct msg_mbox *mbox;
	struct mm_struct *mm = current->mm;
80018ac0:	8e2277a4 	lw	v0,30628(s1)
80018ac4:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:301
	struct mboxbuf __local_buf, *local_buf = &__local_buf;

	int ret = -E_INVAL;

	lock_mm(mm);
80018ac8:	0c004c2e 	jal	800130b8 <lock_mm>
80018acc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:304
	{
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 0)) {
80018ad0:	02002021 	move	a0,s0
80018ad4:	27a50018 	addiu	a1,sp,24
80018ad8:	02603021 	move	a2,s3
80018adc:	24070010 	li	a3,16
80018ae0:	0c007936 	jal	8001e4d8 <copy_from_user>
80018ae4:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:303

	int ret = -E_INVAL;

	lock_mm(mm);
	{
		if (copy_from_user
80018ae8:	10400006 	beqz	v0,80018b04 <ipc_mbox_send+0x124>
80018aec:	8fb7001c 	lw	s7,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:306
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 0)) {
			size_t len = local_buf->len;
			if (0 < len && len <= MAX_MSG_BYTES) {
80018af0:	3c020001 	lui	v0,0x1
80018af4:	26e3ffff 	addiu	v1,s7,-1
80018af8:	0062102b 	sltu	v0,v1,v0
80018afc:	14400010 	bnez	v0,80018b40 <ipc_mbox_send+0x160>
80018b00:	8fb60024 	lw	s6,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:318
					     NULL) ? 0 : -E_NO_MEM;
				}
			}
		}
	}
	unlock_mm(mm);
80018b04:	0c004c3f 	jal	800130fc <unlock_mm>
80018b08:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018b0c:	8fbf008c 	lw	ra,140(sp)
80018b10:	02401021 	move	v0,s2
80018b14:	8fbe0088 	lw	s8,136(sp)
80018b18:	8fb70084 	lw	s7,132(sp)
80018b1c:	8fb60080 	lw	s6,128(sp)
80018b20:	8fb5007c 	lw	s5,124(sp)
80018b24:	8fb40078 	lw	s4,120(sp)
80018b28:	8fb30074 	lw	s3,116(sp)
80018b2c:	8fb20070 	lw	s2,112(sp)
80018b30:	8fb1006c 	lw	s1,108(sp)
80018b34:	8fb00068 	lw	s0,104(sp)
80018b38:	03e00008 	jr	ra
80018b3c:	27bd0090 	addiu	sp,sp,144
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:308
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 0)) {
			size_t len = local_buf->len;
			if (0 < len && len <= MAX_MSG_BYTES) {
				void *src = local_buf->data;
				if (user_mem_check(mm, (uintptr_t) src, len, 0)) {
80018b40:	02002021 	move	a0,s0
80018b44:	02e03021 	move	a2,s7
80018b48:	02c02821 	move	a1,s6
80018b4c:	0c00507f 	jal	800141fc <user_mem_check>
80018b50:	00003821 	move	a3,zero
80018b54:	1040ffeb 	beqz	v0,80018b04 <ipc_mbox_send+0x124>
80018b58:	2ee201ed 	sltiu	v0,s7,493
80018b5c:	241201ec 	li	s2,492
80018b60:	02e2900b 	movn	s2,s7,v0
load_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:212
	size_t alen, bytes = len;
	if ((alen = len) > MAX_MSG_DATALEN) {
		alen = MAX_MSG_DATALEN;
	}
	struct msg_msg *msg;
	if ((msg = kmalloc(sizeof(struct msg_msg) + alen)) == NULL) {
80018b64:	0c00548e 	jal	80015238 <kmalloc>
80018b68:	26440014 	addiu	a0,s2,20
80018b6c:	104000d5 	beqz	v0,80018ec4 <ipc_mbox_send+0x4e4>
80018b70:	afa2005c 	sw	v0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:216
		return NULL;
	}

	struct msg_seg **segp = &(msg->next);
80018b74:	24550008 	addiu	s5,v0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:218

	void *dst = msg + 1;
80018b78:	24450014 	addiu	a1,v0,20
80018b7c:	080062eb 	j	80018bac <ipc_mbox_send+0x1cc>
80018b80:	02e09821 	move	s3,s7
80018b84:	2e7201ed 	sltiu	s2,s3,493
80018b88:	240601ec 	li	a2,492
80018b8c:	0272300b 	movn	a2,s3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:226
	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		struct msg_seg *seg;
		if ((seg = kmalloc(sizeof(struct msg_seg) + alen)) == NULL) {
80018b90:	24c40004 	addiu	a0,a2,4
80018b94:	0c00548e 	jal	80015238 <kmalloc>
80018b98:	00c09021 	move	s2,a2
80018b9c:	104000c7 	beqz	v0,80018ebc <ipc_mbox_send+0x4dc>
80018ba0:	24450004 	addiu	a1,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:229
			goto failed;
		}
		*segp = seg, segp = &(seg->next);
80018ba4:	aea20000 	sw	v0,0(s5)
80018ba8:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:232
		dst = seg + 1;
inside:
		copy_from_user(current->mm, dst, src, alen, 0);
80018bac:	8e2277a4 	lw	v0,30628(s1)
80018bb0:	3c038015 	lui	v1,0x8015
80018bb4:	02c03021 	move	a2,s6
80018bb8:	8c440020 	lw	a0,32(v0)
80018bbc:	02403821 	move	a3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:233
		len -= alen, src = ((char *)src) + alen;
80018bc0:	02729823 	subu	s3,s3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:232
			goto failed;
		}
		*segp = seg, segp = &(seg->next);
		dst = seg + 1;
inside:
		copy_from_user(current->mm, dst, src, alen, 0);
80018bc4:	afa30064 	sw	v1,100(sp)
80018bc8:	afa00010 	sw	zero,16(sp)
80018bcc:	0c007936 	jal	8001e4d8 <copy_from_user>
80018bd0:	02d2b021 	addu	s6,s6,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:234
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
80018bd4:	aea00000 	sw	zero,0(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:221
	struct msg_seg **segp = &(msg->next);

	void *dst = msg + 1;
	goto inside;

	while (len > 0) {
80018bd8:	1660ffea 	bnez	s3,80018b84 <ipc_mbox_send+0x1a4>
80018bdc:	8fa30064 	lw	v1,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:238
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
	}

	msg->bytes = bytes;
	msg->pid = current->pid;
80018be0:	8c6277a4 	lw	v0,30628(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:237
		copy_from_user(current->mm, dst, src, alen, 0);
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
	}

	msg->bytes = bytes;
80018be4:	8fa4005c 	lw	a0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:238
	msg->pid = current->pid;
80018be8:	8fa5005c 	lw	a1,92(sp)
80018bec:	8c420004 	lw	v0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:237
		copy_from_user(current->mm, dst, src, alen, 0);
		len -= alen, src = ((char *)src) + alen;
		*segp = NULL;
	}

	msg->bytes = bytes;
80018bf0:	ac970004 	sw	s7,4(a0)
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:318
					     NULL) ? 0 : -E_NO_MEM;
				}
			}
		}
	}
	unlock_mm(mm);
80018bf4:	02002021 	move	a0,s0
80018bf8:	0c004c3f 	jal	800130fc <unlock_mm>
80018bfc:	aca20000 	sw	v0,0(a1)
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
80018c00:	8fa40058 	lw	a0,88(sp)
80018c04:	3c068015 	lui	a2,0x8015
80018c08:	24c66b88 	addiu	a2,a2,27528
80018c0c:	00c41021 	addu	v0,a2,a0
80018c10:	8c420000 	lw	v0,0(v0)
80018c14:	8fa30064 	lw	v1,100(sp)
80018c18:	10400006 	beqz	v0,80018c34 <ipc_mbox_send+0x254>
80018c1c:	2412ffea 	li	s2,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:78
			struct msg_mbox *mbox = mbox_map[i] + j;
80018c20:	005ef021 	addu	s8,v0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80018c24:	8fc40008 	lw	a0,8(s8)
80018c28:	24020001 	li	v0,1
80018c2c:	10820010 	beq	a0,v0,80018c70 <ipc_mbox_send+0x290>
80018c30:	00000000 	nop
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:334
				return 0;
			}
			assert(flags == WT_INTERRUPTED);
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
80018c34:	0c006181 	jal	80018604 <free_msg>
80018c38:	8fa4005c 	lw	a0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:337
	}
	return ret;
}
80018c3c:	8fbf008c 	lw	ra,140(sp)
80018c40:	02401021 	move	v0,s2
80018c44:	8fbe0088 	lw	s8,136(sp)
80018c48:	8fb70084 	lw	s7,132(sp)
80018c4c:	8fb60080 	lw	s6,128(sp)
80018c50:	8fb5007c 	lw	s5,124(sp)
80018c54:	8fb40078 	lw	s4,120(sp)
80018c58:	8fb30074 	lw	s3,116(sp)
80018c5c:	8fb20070 	lw	s2,112(sp)
80018c60:	8fb1006c 	lw	s1,108(sp)
80018c64:	8fb00068 	lw	s0,104(sp)
80018c68:	03e00008 	jr	ra
80018c6c:	27bd0090 	addiu	sp,sp,144
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
80018c70:	1280000c 	beqz	s4,80018ca4 <ipc_mbox_send+0x2c4>
80018c74:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:30
		*saved_ticks = ticks;
		return timer_init(timer, pls_read(current), timeout);
80018c78:	8c6277a4 	lw	v0,30628(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
80018c7c:	3c038015 	lui	v1,0x8015
80018c80:	8c6377ac 	lw	v1,30636(v1)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80018c84:	27a50050 	addiu	a1,sp,80
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80018c88:	afb4003c 	sw	s4,60(sp)
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
80018c8c:	afa30060 	sw	v1,96(sp)
timer_init():
	timer->proc = proc;
80018c90:	afa20040 	sw	v0,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->linux_timer.linux_timer = NULL;
80018c94:	afa00044 	sw	zero,68(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80018c98:	afa50054 	sw	a1,84(sp)
80018c9c:	afa50050 	sw	a1,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:325
	if (ret == 0) {
		ret = -E_INVAL;
		if ((mbox = get_mbox(id)) != NULL) {
			unsigned long saved_ticks;
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);
80018ca0:	27b0003c 	addiu	s0,sp,60
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018ca4:	40026000 	mfc0	v0,c0_status
80018ca8:	30420001 	andi	v0,v0,0x1
80018cac:	14400075 	bnez	v0,80018e84 <ipc_mbox_send+0x4a4>
80018cb0:	00000000 	nop
80018cb4:	24160001 	li	s6,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:13
		return 0;
80018cb8:	00008821 	move	s1,zero
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:252
send_msg(struct msg_mbox *mbox, struct msg_msg *msg, timer_t * timer)
{
	uint32_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
80018cbc:	8fc20004 	lw	v0,4(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:256
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
		wait_current_set(&(mbox->senders), wait, WT_MBOX_SEND);
80018cc0:	3c138000 	lui	s3,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:255
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
80018cc4:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:252
send_msg(struct msg_mbox *mbox, struct msg_msg *msg, timer_t * timer)
{
	uint32_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
80018cc8:	24420001 	addiu	v0,v0,1
80018ccc:	afc20004 	sw	v0,4(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:256
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
		wait_current_set(&(mbox->senders), wait, WT_MBOX_SEND);
80018cd0:	27d5001c 	addiu	s5,s8,28
80018cd4:	26730120 	addiu	s3,s3,288
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:254
	uint32_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
80018cd8:	8fc2000c 	lw	v0,12(s8)
80018cdc:	8fc30010 	lw	v1,16(s8)
80018ce0:	0062202b 	sltu	a0,v1,v0
80018ce4:	1480006b 	bnez	a0,80018e94 <ipc_mbox_send+0x4b4>
80018ce8:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:255
		assert(mbox->state == OPENED);
80018cec:	16d20077 	bne	s6,s2,80018ecc <ipc_mbox_send+0x4ec>
80018cf0:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:256
		wait_current_set(&(mbox->senders), wait, WT_MBOX_SEND);
80018cf4:	27a50028 	addiu	a1,sp,40
80018cf8:	0c006a08 	jal	8001a820 <wait_current_set>
80018cfc:	02603021 	move	a2,s3
ipc_add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80018d00:	12000003 	beqz	s0,80018d10 <ipc_mbox_send+0x330>
80018d04:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80018d08:	0c0005e5 	jal	80001794 <add_timer>
80018d0c:	02002021 	move	a0,s0
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018d10:	12200003 	beqz	s1,80018d20 <ipc_mbox_send+0x340>
80018d14:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80018d18:	0c006d08 	jal	8001b420 <intr_enable>
80018d1c:	00000000 	nop
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:260
		ipc_add_timer(timer);
		local_intr_restore(intr_flag);

		schedule();
80018d20:	0c00059f 	jal	8000167c <schedule>
80018d24:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80018d28:	40026000 	mfc0	v0,c0_status
80018d2c:	30420001 	andi	v0,v0,0x1
80018d30:	1440002b 	bnez	v0,80018de0 <ipc_mbox_send+0x400>
80018d34:	00008821 	move	s1,zero
ipc_del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80018d38:	12000003 	beqz	s0,80018d48 <ipc_mbox_send+0x368>
80018d3c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80018d40:	0c00062d 	jal	800018b4 <del_timer>
80018d44:	02002021 	move	a0,s0
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:264

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->senders), wait);
80018d48:	0c0069be 	jal	8001a6f8 <wait_in_queue>
80018d4c:	27a40028 	addiu	a0,sp,40
80018d50:	5440003f 	bnezl	v0,80018e50 <ipc_mbox_send+0x470>
80018d54:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:265
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_SEND) {
80018d58:	8fc20008 	lw	v0,8(s8)
80018d5c:	14520041 	bne	v0,s2,80018e64 <ipc_mbox_send+0x484>
80018d60:	8fb7002c 	lw	s7,44(sp)
80018d64:	52f3ffdd 	beql	s7,s3,80018cdc <ipc_mbox_send+0x2fc>
80018d68:	8fc2000c 	lw	v0,12(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:277
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);

	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
80018d6c:	8fc30004 	lw	v1,4(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:278
	if (mbox->state != OPENED) {
80018d70:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:277
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);

	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
80018d74:	2463ffff 	addiu	v1,v1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:278
	if (mbox->state != OPENED) {
80018d78:	10440008 	beq	v0,a0,80018d9c <ipc_mbox_send+0x3bc>
80018d7c:	afc30004 	sw	v1,4(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:279
		assert(ret != 0 && mbox->state == CLOSING);
80018d80:	12e0005a 	beqz	s7,80018eec <ipc_mbox_send+0x50c>
80018d84:	3c048002 	lui	a0,0x8002
80018d88:	24040002 	li	a0,2
80018d8c:	54440057 	bnel	v0,a0,80018eec <ipc_mbox_send+0x50c>
80018d90:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:280
		if (mbox->inuse == 0) {
80018d94:	10600028 	beqz	v1,80018e38 <ipc_mbox_send+0x458>
80018d98:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018d9c:	16200014 	bnez	s1,80018df0 <ipc_mbox_send+0x410>
80018da0:	00000000 	nop
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:328
			unsigned long saved_ticks;
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
80018da4:	12e00017 	beqz	s7,80018e04 <ipc_mbox_send+0x424>
80018da8:	8fbf008c 	lw	ra,140(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:331
				return 0;
			}
			assert(flags == WT_INTERRUPTED);
80018dac:	3c028000 	lui	v0,0x8000
80018db0:	16e20055 	bne	s7,v0,80018f08 <ipc_mbox_send+0x528>
80018db4:	3c048002 	lui	a0,0x8002
ipc_check_timeout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
80018db8:	1280ff9e 	beqz	s4,80018c34 <ipc_mbox_send+0x254>
80018dbc:	2412ffff 	li	s2,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
80018dc0:	3c028015 	lui	v0,0x8015
80018dc4:	8c4277ac 	lw	v0,30636(v0)
80018dc8:	8fa30060 	lw	v1,96(sp)
80018dcc:	00431023 	subu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
80018dd0:	0054a02b 	sltu	s4,v0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
80018dd4:	2402fff0 	li	v0,-16
80018dd8:	0800630d 	j	80018c34 <ipc_mbox_send+0x254>
80018ddc:	0054900a 	movz	s2,v0,s4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018de0:	0c006d0c 	jal	8001b430 <intr_disable>
80018de4:	24110001 	li	s1,1
80018de8:	0800634e 	j	80018d38 <ipc_mbox_send+0x358>
80018dec:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80018df0:	0c006d08 	jal	8001b420 <intr_enable>
80018df4:	00000000 	nop
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:328
			unsigned long saved_ticks;
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
80018df8:	16e0ffed 	bnez	s7,80018db0 <ipc_mbox_send+0x3d0>
80018dfc:	3c028000 	lui	v0,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018e00:	8fbf008c 	lw	ra,140(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:329
			timer_t __timer, *timer =
			    ipc_timer_init(timeout, &saved_ticks, &__timer);

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
				return 0;
80018e04:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:337
			ret = ipc_check_timeout(timeout, saved_ticks);
		}
		free_msg(msg);
	}
	return ret;
}
80018e08:	02401021 	move	v0,s2
80018e0c:	8fbe0088 	lw	s8,136(sp)
80018e10:	8fb70084 	lw	s7,132(sp)
80018e14:	8fb60080 	lw	s6,128(sp)
80018e18:	8fb5007c 	lw	s5,124(sp)
80018e1c:	8fb40078 	lw	s4,120(sp)
80018e20:	8fb30074 	lw	s3,116(sp)
80018e24:	8fb20070 	lw	s2,112(sp)
80018e28:	8fb1006c 	lw	s1,108(sp)
80018e2c:	8fb00068 	lw	s0,104(sp)
80018e30:	03e00008 	jr	ra
80018e34:	27bd0090 	addiu	sp,sp,144
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:281
out:
	mbox->inuse--;
	if (mbox->state != OPENED) {
		assert(ret != 0 && mbox->state == CLOSING);
		if (mbox->inuse == 0) {
			mbox_free(mbox);
80018e38:	0c006132 	jal	800184c8 <mbox_free>
80018e3c:	03c02021 	move	a0,s8
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80018e40:	1220ffd8 	beqz	s1,80018da4 <ipc_mbox_send+0x3c4>
80018e44:	00000000 	nop
80018e48:	0800637c 	j	80018df0 <ipc_mbox_send+0x410>
80018e4c:	00000000 	nop
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:264

		schedule();

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->senders), wait);
80018e50:	0c00696e 	jal	8001a5b8 <wait_queue_del>
80018e54:	27a50028 	addiu	a1,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:265
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_SEND) {
80018e58:	8fc20008 	lw	v0,8(s8)
80018e5c:	1052ffc1 	beq	v0,s2,80018d64 <ipc_mbox_send+0x384>
80018e60:	8fb7002c 	lw	s7,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:266
			if ((ret = wait->wakeup_flags) == WT_MBOX_SEND) {
80018e64:	3c038000 	lui	v1,0x8000
80018e68:	24630120 	addiu	v1,v1,288
80018e6c:	16e3ffc0 	bne	s7,v1,80018d70 <ipc_mbox_send+0x390>
80018e70:	8fc30004 	lw	v1,4(s8)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:267
				ret = WT_INTERRUPTED;
80018e74:	3c178000 	lui	s7,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:277
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);

	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
80018e78:	2463ffff 	addiu	v1,v1,-1
80018e7c:	08006362 	j	80018d88 <ipc_mbox_send+0x3a8>
80018e80:	afc30004 	sw	v1,4(s8)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80018e84:	0c006d0c 	jal	8001b430 <intr_disable>
80018e88:	24110001 	li	s1,1
80018e8c:	0800632f 	j	80018cbc <ipc_mbox_send+0x2dc>
80018e90:	8fd60008 	lw	s6,8(s8)
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:272
				ret = WT_INTERRUPTED;
			}
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);
80018e94:	16c40023 	bne	s6,a0,80018f24 <ipc_mbox_send+0x544>
80018e98:	0062102b 	sltu	v0,v1,v0
80018e9c:	10400021 	beqz	v0,80018f24 <ipc_mbox_send+0x544>
80018ea0:	8fa5005c 	lw	a1,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:274

	ret = 0, add_msg(mbox, msg, 1);
80018ea4:	03c02021 	move	a0,s8
80018ea8:	0c00618e 	jal	80018638 <add_msg>
80018eac:	24060001 	li	a2,1
80018eb0:	0000b821 	move	s7,zero
80018eb4:	0800635b 	j	80018d6c <ipc_mbox_send+0x38c>
80018eb8:	8fc20008 	lw	v0,8(s8)
load_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:242
	msg->bytes = bytes;
	msg->pid = current->pid;
	return msg;

failed:
	free_msg(msg);
80018ebc:	0c006181 	jal	80018604 <free_msg>
80018ec0:	8fa4005c 	lw	a0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:313
				if (user_mem_check(mm, (uintptr_t) src, len, 0)) {
					ret =
					    ((msg =
					      load_msg(src,
						       len)) !=
					     NULL) ? 0 : -E_NO_MEM;
80018ec4:	080062c1 	j	80018b04 <ipc_mbox_send+0x124>
80018ec8:	2412fff4 	li	s2,-12
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:255
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->max_slots <= mbox->slots) {
		assert(mbox->state == OPENED);
80018ecc:	3c048002 	lui	a0,0x8002
80018ed0:	3c068002 	lui	a2,0x8002
80018ed4:	3c078002 	lui	a3,0x8002
80018ed8:	24843aac 	addiu	a0,a0,15020
80018edc:	240500ff 	li	a1,255
80018ee0:	24c60e48 	addiu	a2,a2,3656
80018ee4:	0c006b13 	jal	8001ac4c <__panic>
80018ee8:	24e73b4c 	addiu	a3,a3,15180
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:279
	ret = 0, add_msg(mbox, msg, 1);

out:
	mbox->inuse--;
	if (mbox->state != OPENED) {
		assert(ret != 0 && mbox->state == CLOSING);
80018eec:	3c068002 	lui	a2,0x8002
80018ef0:	3c078002 	lui	a3,0x8002
80018ef4:	24843aac 	addiu	a0,a0,15020
80018ef8:	24050117 	li	a1,279
80018efc:	24c60e48 	addiu	a2,a2,3656
80018f00:	0c006b13 	jal	8001ac4c <__panic>
80018f04:	24e73bbc 	addiu	a3,a3,15292
ipc_mbox_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:331

			uint32_t flags;
			if ((flags = send_msg(mbox, msg, timer)) == 0) {
				return 0;
			}
			assert(flags == WT_INTERRUPTED);
80018f08:	3c068002 	lui	a2,0x8002
80018f0c:	3c078002 	lui	a3,0x8002
80018f10:	24843aac 	addiu	a0,a0,15020
80018f14:	2405014b 	li	a1,331
80018f18:	24c60e48 	addiu	a2,a2,3656
80018f1c:	0c006b13 	jal	8001ac4c <__panic>
80018f20:	24e73a94 	addiu	a3,a3,14996
send_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:272
				ret = WT_INTERRUPTED;
			}
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->max_slots > mbox->slots);
80018f24:	3c048002 	lui	a0,0x8002
80018f28:	3c068002 	lui	a2,0x8002
80018f2c:	3c078002 	lui	a3,0x8002
80018f30:	24843aac 	addiu	a0,a0,15020
80018f34:	24050110 	li	a1,272
80018f38:	24c60e48 	addiu	a2,a2,3656
80018f3c:	0c006b13 	jal	8001ac4c <__panic>
80018f40:	24e73b84 	addiu	a3,a3,15236

80018f44 <ipc_mbox_recv>:
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:407
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_recv(int id, struct mboxbuf *buf, unsigned int timeout)
{
80018f44:	27bdff68 	addiu	sp,sp,-152
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80018f48:	2c822000 	sltiu	v0,a0,8192
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:407
	local_intr_restore(intr_flag);
	return ret;
}

int ipc_mbox_recv(int id, struct mboxbuf *buf, unsigned int timeout)
{
80018f4c:	afbe0090 	sw	s8,144(sp)
80018f50:	afb3007c 	sw	s3,124(sp)
80018f54:	afb20078 	sw	s2,120(sp)
80018f58:	afbf0094 	sw	ra,148(sp)
80018f5c:	afb7008c 	sw	s7,140(sp)
80018f60:	afb60088 	sw	s6,136(sp)
80018f64:	afb50084 	sw	s5,132(sp)
80018f68:	afb40080 	sw	s4,128(sp)
80018f6c:	afb10074 	sw	s1,116(sp)
80018f70:	afb00070 	sw	s0,112(sp)
80018f74:	00a09821 	move	s3,a1
80018f78:	00c09021 	move	s2,a2
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80018f7c:	1040001d 	beqz	v0,80018ff4 <ipc_mbox_recv+0xb0>
80018f80:	241effea 	li	s8,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018f84:	3c02b02c 	lui	v0,0xb02c
80018f88:	24420b03 	addiu	v0,v0,2819
80018f8c:	00820019 	multu	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80018f90:	3c178015 	lui	s7,0x8015
80018f94:	26f76b88 	addiu	s7,s7,27528
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018f98:	00001010 	mfhi	v0
80018f9c:	00021182 	srl	v0,v0,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80018fa0:	00021880 	sll	v1,v0,0x2
80018fa4:	afa30064 	sw	v1,100(sp)
80018fa8:	02e31821 	addu	v1,s7,v1
80018fac:	afa3005c 	sw	v1,92(sp)
80018fb0:	8c630000 	lw	v1,0(v1)
80018fb4:	1060000f 	beqz	v1,80018ff4 <ipc_mbox_recv+0xb0>
80018fb8:	00022840 	sll	a1,v0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80018fbc:	00a21021 	addu	v0,a1,v0
80018fc0:	00022940 	sll	a1,v0,0x5
80018fc4:	00a21023 	subu	v0,a1,v0
80018fc8:	00822023 	subu	a0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
80018fcc:	00041080 	sll	v0,a0,0x2
80018fd0:	0004a900 	sll	s5,a0,0x4
80018fd4:	02a2a823 	subu	s5,s5,v0
80018fd8:	02a42023 	subu	a0,s5,a0
80018fdc:	0004a880 	sll	s5,a0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80018fe0:	00751821 	addu	v1,v1,s5
80018fe4:	8c630008 	lw	v1,8(v1)
80018fe8:	24020001 	li	v0,1
80018fec:	1062000e 	beq	v1,v0,80019028 <ipc_mbox_recv+0xe4>
80018ff0:	afa30058 	sw	v1,88(sp)
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
80018ff4:	8fbf0094 	lw	ra,148(sp)
80018ff8:	03c01021 	move	v0,s8
80018ffc:	8fb7008c 	lw	s7,140(sp)
80019000:	8fbe0090 	lw	s8,144(sp)
80019004:	8fb60088 	lw	s6,136(sp)
80019008:	8fb50084 	lw	s5,132(sp)
8001900c:	8fb40080 	lw	s4,128(sp)
80019010:	8fb3007c 	lw	s3,124(sp)
80019014:	8fb20078 	lw	s2,120(sp)
80019018:	8fb10074 	lw	s1,116(sp)
8001901c:	8fb00070 	lw	s0,112(sp)
80019020:	03e00008 	jr	ra
80019024:	27bd0098 	addiu	sp,sp,152
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:415
	}

	size_t size;
	struct msg_msg *msg;
	struct msg_mbox *mbox;
	struct mm_struct *mm = current->mm;
80019028:	3c118015 	lui	s1,0x8015
8001902c:	8e2277a4 	lw	v0,30628(s1)
80019030:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:420
	struct mboxbuf __local_buf, *local_buf = &__local_buf;

	int ret = -E_INVAL;

	lock_mm(mm);
80019034:	0c004c2e 	jal	800130b8 <lock_mm>
80019038:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:423
	{
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
8001903c:	8fa30058 	lw	v1,88(sp)
80019040:	02002021 	move	a0,s0
80019044:	27a50018 	addiu	a1,sp,24
80019048:	02603021 	move	a2,s3
8001904c:	24070010 	li	a3,16
80019050:	0c007936 	jal	8001e4d8 <copy_from_user>
80019054:	afa30010 	sw	v1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:422

	int ret = -E_INVAL;

	lock_mm(mm);
	{
		if (copy_from_user
80019058:	10400003 	beqz	v0,80019068 <ipc_mbox_recv+0x124>
8001905c:	8fb40020 	lw	s4,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:424
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
			if ((size = local_buf->size) > 0) {
80019060:	16800011 	bnez	s4,800190a8 <ipc_mbox_recv+0x164>
80019064:	8fa50024 	lw	a1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:433
					ret = 0;
				}
			}
		}
	}
	unlock_mm(mm);
80019068:	0c004c3f 	jal	800130fc <unlock_mm>
8001906c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
80019070:	8fbf0094 	lw	ra,148(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:436
		}
	}
	unlock_mm(mm);

	if (ret != 0 || (mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
80019074:	241effea 	li	s8,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
80019078:	03c01021 	move	v0,s8
8001907c:	8fb7008c 	lw	s7,140(sp)
80019080:	8fbe0090 	lw	s8,144(sp)
80019084:	8fb60088 	lw	s6,136(sp)
80019088:	8fb50084 	lw	s5,132(sp)
8001908c:	8fb40080 	lw	s4,128(sp)
80019090:	8fb3007c 	lw	s3,124(sp)
80019094:	8fb20078 	lw	s2,120(sp)
80019098:	8fb10074 	lw	s1,116(sp)
8001909c:	8fb00070 	lw	s0,112(sp)
800190a0:	03e00008 	jr	ra
800190a4:	27bd0098 	addiu	sp,sp,152
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:427
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
			if ((size = local_buf->size) > 0) {
				void *dst = local_buf->data;
				if (user_mem_check
				    (mm, (uintptr_t) dst, size, 1)) {
800190a8:	02002021 	move	a0,s0
800190ac:	02803021 	move	a2,s4
800190b0:	0c00507f 	jal	800141fc <user_mem_check>
800190b4:	24070001 	li	a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:426
	{
		if (copy_from_user
		    (mm, local_buf, buf, sizeof(struct mboxbuf), 1)) {
			if ((size = local_buf->size) > 0) {
				void *dst = local_buf->data;
				if (user_mem_check
800190b8:	1040ffeb 	beqz	v0,80019068 <ipc_mbox_recv+0x124>
800190bc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:433
					ret = 0;
				}
			}
		}
	}
	unlock_mm(mm);
800190c0:	0c004c3f 	jal	800130fc <unlock_mm>
800190c4:	02002021 	move	a0,s0
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
800190c8:	8fa3005c 	lw	v1,92(sp)
800190cc:	8c620000 	lw	v0,0(v1)
800190d0:	1040ffc8 	beqz	v0,80018ff4 <ipc_mbox_recv+0xb0>
800190d4:	00551021 	addu	v0,v0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:78
			struct msg_mbox *mbox = mbox_map[i] + j;
800190d8:	afa2005c 	sw	v0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
800190dc:	8fa30058 	lw	v1,88(sp)
800190e0:	8c420008 	lw	v0,8(v0)
800190e4:	1443ffc4 	bne	v0,v1,80018ff8 <ipc_mbox_recv+0xb4>
800190e8:	8fbf0094 	lw	ra,148(sp)
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
800190ec:	1240000c 	beqz	s2,80019120 <ipc_mbox_recv+0x1dc>
800190f0:	0000f021 	move	s8,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
		*saved_ticks = ticks;
800190f4:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:30
		return timer_init(timer, pls_read(current), timeout);
800190f8:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
800190fc:	8c6377ac 	lw	v1,30636(v1)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80019100:	27a40050 	addiu	a0,sp,80
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
80019104:	afb2003c 	sw	s2,60(sp)
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
80019108:	afa30068 	sw	v1,104(sp)
timer_init():
	timer->proc = proc;
8001910c:	afa20040 	sw	v0,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->linux_timer.linux_timer = NULL;
80019110:	afa00044 	sw	zero,68(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
80019114:	afa40054 	sw	a0,84(sp)
80019118:	afa40050 	sw	a0,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:441
		return -E_INVAL;
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
8001911c:	27be003c 	addiu	s8,sp,60
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019120:	40026000 	mfc0	v0,c0_status
80019124:	30420001 	andi	v0,v0,0x1
80019128:	144000ab 	bnez	v0,800193d8 <ipc_mbox_recv+0x494>
8001912c:	00000000 	nop
80019130:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:13
		return 0;
80019134:	afa00058 	sw	zero,88(sp)
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:370
	 timer_t * timer)
{
	int ret = -1;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
80019138:	8fa4005c 	lw	a0,92(sp)
8001913c:	8c830004 	lw	v1,4(a0)
80019140:	24630001 	addiu	v1,v1,1
80019144:	ac830004 	sw	v1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:374
	wait_t __wait, *wait = &__wait;
	while (mbox->slots == 0) {
		assert(mbox->state == OPENED);
		wait_current_set(&(mbox->receivers), wait, WT_MBOX_RECV);
80019148:	24830024 	addiu	v1,a0,36
8001914c:	afa30060 	sw	v1,96(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:372
	int ret = -1;
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->slots == 0) {
80019150:	8fa3005c 	lw	v1,92(sp)
80019154:	8c640010 	lw	a0,16(v1)
80019158:	148000a6 	bnez	a0,800193f4 <ipc_mbox_recv+0x4b0>
8001915c:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:373
		assert(mbox->state == OPENED);
80019160:	24040001 	li	a0,1
80019164:	144400f7 	bne	v0,a0,80019544 <ipc_mbox_recv+0x600>
80019168:	8fa40060 	lw	a0,96(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:374
		wait_current_set(&(mbox->receivers), wait, WT_MBOX_RECV);
8001916c:	3c068000 	lui	a2,0x8000
80019170:	27a50028 	addiu	a1,sp,40
80019174:	0c006a08 	jal	8001a820 <wait_current_set>
80019178:	34c60121 	ori	a2,a2,0x121
ipc_add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
8001917c:	13c00004 	beqz	s8,80019190 <ipc_mbox_recv+0x24c>
80019180:	8fa30058 	lw	v1,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80019184:	0c0005e5 	jal	80001794 <add_timer>
80019188:	03c02021 	move	a0,s8
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001918c:	8fa30058 	lw	v1,88(sp)
80019190:	10600003 	beqz	v1,800191a0 <ipc_mbox_recv+0x25c>
80019194:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019198:	0c006d08 	jal	8001b420 <intr_enable>
8001919c:	00000000 	nop
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:378
		ipc_add_timer(timer);
		local_intr_restore(intr_flag);

		schedule();
800191a0:	0c00059f 	jal	8000167c <schedule>
800191a4:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800191a8:	40026000 	mfc0	v0,c0_status
800191ac:	30420001 	andi	v0,v0,0x1
800191b0:	14400033 	bnez	v0,80019280 <ipc_mbox_recv+0x33c>
800191b4:	afa00058 	sw	zero,88(sp)
ipc_del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
800191b8:	13c00003 	beqz	s8,800191c8 <ipc_mbox_recv+0x284>
800191bc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
800191c0:	0c00062d 	jal	800018b4 <del_timer>
800191c4:	03c02021 	move	a0,s8
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:382

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->receivers), wait);
800191c8:	0c0069be 	jal	8001a6f8 <wait_in_queue>
800191cc:	27a40028 	addiu	a0,sp,40
800191d0:	14400073 	bnez	v0,800193a0 <ipc_mbox_recv+0x45c>
800191d4:	8fa3005c 	lw	v1,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:383
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
800191d8:	24040001 	li	a0,1
800191dc:	8c620008 	lw	v0,8(v1)
800191e0:	14440078 	bne	v0,a0,800193c4 <ipc_mbox_recv+0x480>
800191e4:	8fa4005c 	lw	a0,92(sp)
800191e8:	8fa3002c 	lw	v1,44(sp)
800191ec:	3c058000 	lui	a1,0x8000
800191f0:	34a50121 	ori	a1,a1,0x121
800191f4:	1065ffd7 	beq	v1,a1,80019154 <ipc_mbox_recv+0x210>
800191f8:	8fa3005c 	lw	v1,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:367

static int
recv_msg(struct msg_mbox *mbox, size_t max_bytes, struct msg_msg **msg_store,
	 timer_t * timer)
{
	int ret = -1;
800191fc:	241effff 	li	s8,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
80019200:	8c620004 	lw	v0,4(v1)
80019204:	2442ffff 	addiu	v0,v0,-1
80019208:	ac620004 	sw	v0,4(v1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001920c:	8fa30058 	lw	v1,88(sp)
80019210:	14600020 	bnez	v1,80019294 <ipc_mbox_recv+0x350>
80019214:	00000000 	nop
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:442
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
	if ((ret = recv_msg(mbox, size, &msg, timer)) != 0) {
80019218:	13c00022 	beqz	s8,800192a4 <ipc_mbox_recv+0x360>
8001921c:	2402ffff 	li	v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:443
		if (ret == -1) {
80019220:	17c2ff75 	bne	s8,v0,80018ff8 <ipc_mbox_recv+0xb4>
80019224:	8fbf0094 	lw	ra,148(sp)
ipc_check_timeout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
80019228:	1240ff74 	beqz	s2,80018ffc <ipc_mbox_recv+0xb8>
8001922c:	03c01021 	move	v0,s8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
80019230:	3c028015 	lui	v0,0x8015
80019234:	8fa30068 	lw	v1,104(sp)
80019238:	8c4277ac 	lw	v0,30636(v0)
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
8001923c:	8fbf0094 	lw	ra,148(sp)
80019240:	8fb7008c 	lw	s7,140(sp)
ipc_check_timeout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:39
80019244:	00431023 	subu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
80019248:	0052902b 	sltu	s2,v0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:41
			return -E_TIMEOUT;
8001924c:	2402fff0 	li	v0,-16
80019250:	0052f00a 	movz	s8,v0,s2
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
80019254:	03c01021 	move	v0,s8
80019258:	8fb60088 	lw	s6,136(sp)
8001925c:	8fbe0090 	lw	s8,144(sp)
80019260:	8fb50084 	lw	s5,132(sp)
80019264:	8fb40080 	lw	s4,128(sp)
80019268:	8fb3007c 	lw	s3,124(sp)
8001926c:	8fb20078 	lw	s2,120(sp)
80019270:	8fb10074 	lw	s1,116(sp)
80019274:	8fb00070 	lw	s0,112(sp)
80019278:	03e00008 	jr	ra
8001927c:	27bd0098 	addiu	sp,sp,152
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80019280:	0c006d0c 	jal	8001b430 <intr_disable>
80019284:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80019288:	24030001 	li	v1,1
8001928c:	0800646e 	j	800191b8 <ipc_mbox_recv+0x274>
80019290:	afa30058 	sw	v1,88(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80019294:	0c006d08 	jal	8001b420 <intr_enable>
80019298:	00000000 	nop
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:442
	}

	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);
	if ((ret = recv_msg(mbox, size, &msg, timer)) != 0) {
8001929c:	17c0ffe0 	bnez	s8,80019220 <ipc_mbox_recv+0x2dc>
800192a0:	2402ffff 	li	v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:451
		return ret;
	}

	ret = -E_INVAL;

	lock_mm(mm);
800192a4:	0c004c2e 	jal	800130b8 <lock_mm>
800192a8:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:454
	{
		size_t len;
		local_buf->len = len = msg->bytes, local_buf->from = msg->pid;
800192ac:	8ec20000 	lw	v0,0(s6)
800192b0:	8ed20004 	lw	s2,4(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:455
		if (copy_to_user(mm, buf, local_buf, sizeof(struct mboxbuf))) {
800192b4:	02002021 	move	a0,s0
800192b8:	02602821 	move	a1,s3
800192bc:	27a60018 	addiu	a2,sp,24
800192c0:	24070010 	li	a3,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:454
	ret = -E_INVAL;

	lock_mm(mm);
	{
		size_t len;
		local_buf->len = len = msg->bytes, local_buf->from = msg->pid;
800192c4:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:455
		if (copy_to_user(mm, buf, local_buf, sizeof(struct mboxbuf))) {
800192c8:	0c007950 	jal	8001e540 <copy_to_user>
800192cc:	afa20018 	sw	v0,24(sp)
800192d0:	10400073 	beqz	v0,800194a0 <ipc_mbox_recv+0x55c>
800192d4:	8fa30024 	lw	v1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:457
			void *dst = local_buf->data;
			if (user_mem_check(mm, (uintptr_t) dst, len, 1)) {
800192d8:	02002021 	move	a0,s0
800192dc:	02403021 	move	a2,s2
800192e0:	00602821 	move	a1,v1
800192e4:	24070001 	li	a3,1
800192e8:	0c00507f 	jal	800141fc <user_mem_check>
800192ec:	afa3006c 	sw	v1,108(sp)
800192f0:	1040006b 	beqz	v0,800194a0 <ipc_mbox_recv+0x55c>
800192f4:	8fa3006c 	lw	v1,108(sp)
store_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:341
	return ret;
}

static void store_msg(struct msg_msg *msg, void *dst)
{
	size_t alen, len = msg->bytes;
800192f8:	8ed20004 	lw	s2,4(s6)
800192fc:	241301ec 	li	s3,492
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:346
	if ((alen = len) > MAX_MSG_DATALEN) {
		alen = MAX_MSG_DATALEN;
	}

	struct msg_seg *seg = msg->next;
80019300:	8ed40008 	lw	s4,8(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:341
	return ret;
}

static void store_msg(struct msg_msg *msg, void *dst)
{
	size_t alen, len = msg->bytes;
80019304:	2e4201ed 	sltiu	v0,s2,493
80019308:	0242980b 	movn	s3,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:348
		alen = MAX_MSG_DATALEN;
	}

	struct msg_seg *seg = msg->next;

	const void *src = msg + 1;
8001930c:	26c60014 	addiu	a2,s6,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
80019310:	080064cd 	j	80019334 <ipc_mbox_recv+0x3f0>
80019314:	241501ec 	li	s5,492
80019318:	128000a1 	beqz	s4,800195a0 <ipc_mbox_recv+0x65c>
8001931c:	2e5301ed 	sltiu	s3,s2,493
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:356
		src = seg + 1, seg = seg->next;
80019320:	26860004 	addiu	a2,s4,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
80019324:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:356
		src = seg + 1, seg = seg->next;
80019328:	8e940000 	lw	s4,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
8001932c:	0253200b 	movn	a0,s2,s3
80019330:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:358
		src = seg + 1, seg = seg->next;
inside:
		copy_to_user(current->mm, dst, src, alen);
80019334:	8e2277a4 	lw	v0,30628(s1)
80019338:	00602821 	move	a1,v1
8001933c:	02603821 	move	a3,s3
80019340:	8c440020 	lw	a0,32(v0)
80019344:	afa3006c 	sw	v1,108(sp)
80019348:	0c007950 	jal	8001e540 <copy_to_user>
8001934c:	02539023 	subu	s2,s2,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:359
		len -= alen, dst = ((char *)dst) + alen;
80019350:	8fa3006c 	lw	v1,108(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:351
	struct msg_seg *seg = msg->next;

	const void *src = msg + 1;
	goto inside;

	while (len > 0) {
80019354:	1640fff0 	bnez	s2,80019318 <ipc_mbox_recv+0x3d4>
80019358:	00731821 	addu	v1,v1,s3
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:462
			if (user_mem_check(mm, (uintptr_t) dst, len, 1)) {
				ret = 0, store_msg(msg, dst);
			}
		}
	}
	unlock_mm(mm);
8001935c:	0c004c3f 	jal	800130fc <unlock_mm>
80019360:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:473
			add_msg(mbox, msg, 0);
		}
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
80019364:	0c006181 	jal	80018604 <free_msg>
80019368:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
	return ret;
}
8001936c:	8fbf0094 	lw	ra,148(sp)
80019370:	03c01021 	move	v0,s8
80019374:	8fb7008c 	lw	s7,140(sp)
80019378:	8fbe0090 	lw	s8,144(sp)
8001937c:	8fb60088 	lw	s6,136(sp)
80019380:	8fb50084 	lw	s5,132(sp)
80019384:	8fb40080 	lw	s4,128(sp)
80019388:	8fb3007c 	lw	s3,124(sp)
8001938c:	8fb20078 	lw	s2,120(sp)
80019390:	8fb10074 	lw	s1,116(sp)
80019394:	8fb00070 	lw	s0,112(sp)
80019398:	03e00008 	jr	ra
8001939c:	27bd0098 	addiu	sp,sp,152
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:382

		schedule();

		local_intr_save(intr_flag);
		ipc_del_timer(timer);
		wait_current_del(&(mbox->receivers), wait);
800193a0:	8fa40060 	lw	a0,96(sp)
800193a4:	0c00696e 	jal	8001a5b8 <wait_queue_del>
800193a8:	27a50028 	addiu	a1,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:383
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
800193ac:	8fa3005c 	lw	v1,92(sp)
800193b0:	24040001 	li	a0,1
800193b4:	8c620008 	lw	v0,8(v1)
800193b8:	5044ff8c 	beql	v0,a0,800191ec <ipc_mbox_recv+0x2a8>
800193bc:	8fa3002c 	lw	v1,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
800193c0:	8fa4005c 	lw	a0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:367

static int
recv_msg(struct msg_mbox *mbox, size_t max_bytes, struct msg_msg **msg_store,
	 timer_t * timer)
{
	int ret = -1;
800193c4:	241effff 	li	s8,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
800193c8:	8c830004 	lw	v1,4(a0)
800193cc:	2463ffff 	addiu	v1,v1,-1
800193d0:	0800651f 	j	8001947c <ipc_mbox_recv+0x538>
800193d4:	ac830004 	sw	v1,4(a0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800193d8:	0c006d0c 	jal	8001b430 <intr_disable>
800193dc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
800193e0:	24030001 	li	v1,1
800193e4:	afa30058 	sw	v1,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
800193e8:	8fa3005c 	lw	v1,92(sp)
800193ec:	0800644e 	j	80019138 <ipc_mbox_recv+0x1f4>
800193f0:	8c620008 	lw	v0,8(v1)
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:387
		wait_current_del(&(mbox->receivers), wait);
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
800193f4:	14430062 	bne	v0,v1,80019580 <ipc_mbox_recv+0x63c>
800193f8:	8fa3005c 	lw	v1,92(sp)
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
800193fc:	8c620018 	lw	v0,24(v1)
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:388
	assert(!list_empty(&(mbox->msg_link)));
80019400:	24630014 	addiu	v1,v1,20
80019404:	50430057 	beql	v0,v1,80019564 <ipc_mbox_recv+0x620>
80019408:	3c048002 	lui	a0,0x8002
pick_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:117
pick_msg(struct msg_mbox *mbox, size_t max_bytes, struct msg_msg **msg_store)
{
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));
	struct msg_msg *msg = le2msg(list_next(&(mbox->msg_link)), msg_link);
	if (max_bytes < msg->bytes) {
8001940c:	8c43fff8 	lw	v1,-8(v0)
80019410:	0283a02b 	sltu	s4,s4,v1
80019414:	1680003f 	bnez	s4,80019514 <ipc_mbox_recv+0x5d0>
80019418:	2484ffff 	addiu	a0,a0,-1
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001941c:	8c450000 	lw	a1,0(v0)
80019420:	8c430004 	lw	v1,4(v0)
pick_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:120
		return -E_TOO_BIG;
	}
	mbox->slots--, *msg_store = msg;
80019424:	8fa6005c 	lw	a2,92(sp)
80019428:	2456fff4 	addiu	s6,v0,-12
8001942c:	acc40010 	sw	a0,16(a2)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80019430:	aca30004 	sw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
80019434:	ac650000 	sw	a1,0(v1)
pick_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:122
	list_del(&(msg->msg_link));
	wakeup_first(&(mbox->senders), WT_MBOX_SEND, 1);
80019438:	3c058000 	lui	a1,0x8000
8001943c:	24c4001c 	addiu	a0,a2,28
80019440:	24a50120 	addiu	a1,a1,288
80019444:	0c0069d1 	jal	8001a744 <wakeup_first>
80019448:	24060001 	li	a2,1
8001944c:	8fa3005c 	lw	v1,92(sp)
80019450:	0000f021 	move	s8,zero
80019454:	8c620008 	lw	v0,8(v1)
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:395
	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
	}

out:
	mbox->inuse--;
80019458:	8fa4005c 	lw	a0,92(sp)
8001945c:	8c830004 	lw	v1,4(a0)
80019460:	2463ffff 	addiu	v1,v1,-1
80019464:	ac830004 	sw	v1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:396
	if (mbox->state != OPENED) {
80019468:	24040001 	li	a0,1
8001946c:	5044ff68 	beql	v0,a0,80019210 <ipc_mbox_recv+0x2cc>
80019470:	8fa30058 	lw	v1,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:397
		assert(ret != 0 && mbox->state == CLOSING);
80019474:	13c00052 	beqz	s8,800195c0 <ipc_mbox_recv+0x67c>
80019478:	3c048002 	lui	a0,0x8002
8001947c:	24040002 	li	a0,2
80019480:	1444004f 	bne	v0,a0,800195c0 <ipc_mbox_recv+0x67c>
80019484:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:398
		if (mbox->inuse == 0) {
80019488:	5460ff61 	bnezl	v1,80019210 <ipc_mbox_recv+0x2cc>
8001948c:	8fa30058 	lw	v1,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:399
			mbox_free(mbox);
80019490:	0c006132 	jal	800184c8 <mbox_free>
80019494:	8fa4005c 	lw	a0,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019498:	08006484 	j	80019210 <ipc_mbox_recv+0x2cc>
8001949c:	8fa30058 	lw	v1,88(sp)
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:462
			if (user_mem_check(mm, (uintptr_t) dst, len, 1)) {
				ret = 0, store_msg(msg, dst);
			}
		}
	}
	unlock_mm(mm);
800194a0:	0c004c3f 	jal	800130fc <unlock_mm>
800194a4:	02002021 	move	a0,s0
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
800194a8:	8fa30064 	lw	v1,100(sp)
800194ac:	02e3b821 	addu	s7,s7,v1
800194b0:	8ee40000 	lw	a0,0(s7)
800194b4:	10800021 	beqz	a0,8001953c <ipc_mbox_recv+0x5f8>
800194b8:	00952021 	addu	a0,a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			struct msg_mbox *mbox = mbox_map[i] + j;
			if (mbox->state == OPENED) {
800194bc:	8c830008 	lw	v1,8(a0)
800194c0:	24020001 	li	v0,1
800194c4:	1462ffa7 	bne	v1,v0,80019364 <ipc_mbox_recv+0x420>
800194c8:	241effea 	li	s8,-22
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
800194cc:	40026000 	mfc0	v0,c0_status
800194d0:	30420001 	andi	v0,v0,0x1
800194d4:	14400005 	bnez	v0,800194ec <ipc_mbox_recv+0x5a8>
800194d8:	02c02821 	move	a1,s6
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:468

	if (ret != 0 && (mbox = get_mbox(id)) != NULL) {
		bool local_intr;
		local_intr_save(local_intr);
		{
			add_msg(mbox, msg, 0);
800194dc:	0c00618e 	jal	80018638 <add_msg>
800194e0:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
800194e4:	080063fe 	j	80018ff8 <ipc_mbox_recv+0xb4>
800194e8:	8fbf0094 	lw	ra,148(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
800194ec:	0c006d0c 	jal	8001b430 <intr_disable>
800194f0:	afa4006c 	sw	a0,108(sp)
ipc_mbox_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:468

	if (ret != 0 && (mbox = get_mbox(id)) != NULL) {
		bool local_intr;
		local_intr_save(local_intr);
		{
			add_msg(mbox, msg, 0);
800194f4:	8fa4006c 	lw	a0,108(sp)
800194f8:	02c02821 	move	a1,s6
800194fc:	0c00618e 	jal	80018638 <add_msg>
80019500:	00003021 	move	a2,zero
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80019504:	0c006d08 	jal	8001b420 <intr_enable>
80019508:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:475
		local_intr_restore(local_intr);
		return ret;
	}
	free_msg(msg);
	return ret;
}
8001950c:	080063fe 	j	80018ff8 <ipc_mbox_recv+0xb4>
80019510:	8fbf0094 	lw	ra,148(sp)
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:391
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));

	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
80019514:	8fa3005c 	lw	v1,92(sp)
80019518:	3c058000 	lui	a1,0x8000
8001951c:	24a50121 	addiu	a1,a1,289
80019520:	24640024 	addiu	a0,v1,36
80019524:	0c0069d1 	jal	8001a744 <wakeup_first>
80019528:	24060001 	li	a2,1
8001952c:	8fa3005c 	lw	v1,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:118
{
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));
	struct msg_msg *msg = le2msg(list_next(&(mbox->msg_link)), msg_link);
	if (max_bytes < msg->bytes) {
		return -E_TOO_BIG;
80019530:	241effe5 	li	s8,-27
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:391
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));

	if ((ret = pick_msg(mbox, max_bytes, msg_store)) != 0) {
		wakeup_first(&(mbox->receivers), WT_MBOX_RECV, 1);
80019534:	08006516 	j	80019458 <ipc_mbox_recv+0x514>
80019538:	8c620008 	lw	v0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
		if (mbox_map[i] != NULL) {
8001953c:	080064d9 	j	80019364 <ipc_mbox_recv+0x420>
80019540:	241effea 	li	s8,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:373
	bool intr_flag;
	local_intr_save(intr_flag);
	mbox->inuse++;
	wait_t __wait, *wait = &__wait;
	while (mbox->slots == 0) {
		assert(mbox->state == OPENED);
80019544:	3c048002 	lui	a0,0x8002
80019548:	3c068002 	lui	a2,0x8002
8001954c:	3c078002 	lui	a3,0x8002
80019550:	24843aac 	addiu	a0,a0,15020
80019554:	24050175 	li	a1,373
80019558:	24c60e48 	addiu	a2,a2,3656
8001955c:	0c006b13 	jal	8001ac4c <__panic>
80019560:	24e73b4c 	addiu	a3,a3,15180
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:388
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
	assert(!list_empty(&(mbox->msg_link)));
80019564:	3c068002 	lui	a2,0x8002
80019568:	3c078002 	lui	a3,0x8002
8001956c:	24843aac 	addiu	a0,a0,15020
80019570:	24050184 	li	a1,388
80019574:	24c60e48 	addiu	a2,a2,3656
80019578:	0c006b13 	jal	8001ac4c <__panic>
8001957c:	24e73c0c 	addiu	a3,a3,15372
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:387
		wait_current_del(&(mbox->receivers), wait);
		if (mbox->state != OPENED || wait->wakeup_flags != WT_MBOX_RECV) {
			goto out;
		}
	}
	assert(mbox->state == OPENED && mbox->slots > 0);
80019580:	3c048002 	lui	a0,0x8002
80019584:	3c068002 	lui	a2,0x8002
80019588:	3c078002 	lui	a3,0x8002
8001958c:	24843aac 	addiu	a0,a0,15020
80019590:	24050183 	li	a1,387
80019594:	24c60e48 	addiu	a2,a2,3656
80019598:	0c006b13 	jal	8001ac4c <__panic>
8001959c:	24e73be0 	addiu	a3,a3,15328
store_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:355

	while (len > 0) {
		if ((alen = len) > MAX_MSG_DATALEN) {
			alen = MAX_MSG_DATALEN;
		}
		assert(seg != NULL);
800195a0:	3c048002 	lui	a0,0x8002
800195a4:	3c068002 	lui	a2,0x8002
800195a8:	3c078002 	lui	a3,0x8002
800195ac:	24843aac 	addiu	a0,a0,15020
800195b0:	24050163 	li	a1,355
800195b4:	24c60e48 	addiu	a2,a2,3656
800195b8:	0c006b13 	jal	8001ac4c <__panic>
800195bc:	24e73c2c 	addiu	a3,a3,15404
recv_msg():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:397
	}

out:
	mbox->inuse--;
	if (mbox->state != OPENED) {
		assert(ret != 0 && mbox->state == CLOSING);
800195c0:	3c068002 	lui	a2,0x8002
800195c4:	3c078002 	lui	a3,0x8002
800195c8:	24843aac 	addiu	a0,a0,15020
800195cc:	2405018d 	li	a1,397
800195d0:	24c60e48 	addiu	a2,a2,3656
800195d4:	0c006b13 	jal	8001ac4c <__panic>
800195d8:	24e73bbc 	addiu	a3,a3,15292

800195dc <ipc_mbox_free>:
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:478
	free_msg(msg);
	return ret;
}

int ipc_mbox_free(int id)
{
800195dc:	27bdffd8 	addiu	sp,sp,-40
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
800195e0:	2c832000 	sltiu	v1,a0,8192
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:478
	free_msg(msg);
	return ret;
}

int ipc_mbox_free(int id)
{
800195e4:	afbf0024 	sw	ra,36(sp)
800195e8:	afb20020 	sw	s2,32(sp)
800195ec:	afb1001c 	sw	s1,28(sp)
800195f0:	afb00018 	sw	s0,24(sp)
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
800195f4:	1060001b 	beqz	v1,80019664 <ipc_mbox_free+0x88>
800195f8:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
800195fc:	3c03b02c 	lui	v1,0xb02c
80019600:	24630b03 	addiu	v1,v1,2819
80019604:	00830019 	multu	a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80019608:	3c058015 	lui	a1,0x8015
8001960c:	24a56b88 	addiu	a1,a1,27528
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80019610:	00001810 	mfhi	v1
80019614:	00031982 	srl	v1,v1,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80019618:	00033080 	sll	a2,v1,0x2
8001961c:	00c52821 	addu	a1,a2,a1
80019620:	8ca50000 	lw	a1,0(a1)
80019624:	10a0000f 	beqz	a1,80019664 <ipc_mbox_free+0x88>
80019628:	00033040 	sll	a2,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
8001962c:	00c31821 	addu	v1,a2,v1
80019630:	00033140 	sll	a2,v1,0x5
80019634:	00c31823 	subu	v1,a2,v1
80019638:	00832023 	subu	a0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
8001963c:	00041880 	sll	v1,a0,0x2
80019640:	00048100 	sll	s0,a0,0x4
80019644:	02038023 	subu	s0,s0,v1
80019648:	02042023 	subu	a0,s0,a0
8001964c:	00048080 	sll	s0,a0,0x2
80019650:	00b08021 	addu	s0,a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
80019654:	8e040008 	lw	a0,8(s0)
80019658:	24030001 	li	v1,1
8001965c:	10830007 	beq	a0,v1,8001967c <ipc_mbox_free+0xa0>
80019660:	00000000 	nop
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:502
			mbox_free(mbox);
		}
	}
	local_intr_restore(intr_flag);
	return 0;
}
80019664:	8fbf0024 	lw	ra,36(sp)
80019668:	8fb20020 	lw	s2,32(sp)
8001966c:	8fb1001c 	lw	s1,28(sp)
80019670:	8fb00018 	lw	s0,24(sp)
80019674:	03e00008 	jr	ra
80019678:	27bd0028 	addiu	sp,sp,40
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001967c:	40026000 	mfc0	v0,c0_status
80019680:	30420001 	andi	v0,v0,0x1
80019684:	10400003 	beqz	v0,80019694 <ipc_mbox_free+0xb8>
80019688:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001968c:	0c006d0c 	jal	8001b430 <intr_disable>
80019690:	24110001 	li	s1,1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019694:	8e040018 	lw	a0,24(s0)
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:486
		return -E_INVAL;
	}
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		mbox->state = CLOSING;
80019698:	24020002 	li	v0,2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:488

		list_entry_t *list = &(mbox->msg_link), *le;
8001969c:	26120014 	addiu	s2,s0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:489
		while ((le = list_next(list)) != list) {
800196a0:	1244000a 	beq	s2,a0,800196cc <ipc_mbox_free+0xf0>
800196a4:	ae020008 	sw	v0,8(s0)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
800196a8:	8c830000 	lw	v1,0(a0)
800196ac:	8c820004 	lw	v0,4(a0)
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:491
			list_del(le);
			free_msg(le2msg(le, msg_link));
800196b0:	2484fff4 	addiu	a0,a0,-12
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
800196b4:	ac620004 	sw	v0,4(v1)
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:491
800196b8:	0c006181 	jal	80018604 <free_msg>
800196bc:	ac430000 	sw	v1,0(v0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
800196c0:	8e040018 	lw	a0,24(s0)
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:489
	local_intr_save(intr_flag);
	{
		mbox->state = CLOSING;

		list_entry_t *list = &(mbox->msg_link), *le;
		while ((le = list_next(list)) != list) {
800196c4:	5644fff9 	bnel	s2,a0,800196ac <ipc_mbox_free+0xd0>
800196c8:	8c830000 	lw	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:493
			list_del(le);
			free_msg(le2msg(le, msg_link));
		}
		wakeup_queue(&(mbox->senders), WT_INTERRUPTED, 1);
800196cc:	2604001c 	addiu	a0,s0,28
800196d0:	3c058000 	lui	a1,0x8000
800196d4:	0c0069dc 	jal	8001a770 <wakeup_queue>
800196d8:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:494
		wakeup_queue(&(mbox->receivers), WT_INTERRUPTED, 1);
800196dc:	26040024 	addiu	a0,s0,36
800196e0:	3c058000 	lui	a1,0x8000
800196e4:	0c0069dc 	jal	8001a770 <wakeup_queue>
800196e8:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:496

		if (mbox->inuse == 0) {
800196ec:	8e020004 	lw	v0,4(s0)
800196f0:	1040000c 	beqz	v0,80019724 <ipc_mbox_free+0x148>
800196f4:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
800196f8:	1220ffda 	beqz	s1,80019664 <ipc_mbox_free+0x88>
800196fc:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019700:	0c006d08 	jal	8001b420 <intr_enable>
80019704:	afa20010 	sw	v0,16(sp)
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:502
			mbox_free(mbox);
		}
	}
	local_intr_restore(intr_flag);
	return 0;
}
80019708:	8fbf0024 	lw	ra,36(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
8001970c:	8fa20010 	lw	v0,16(sp)
ipc_mbox_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:502
80019710:	8fb20020 	lw	s2,32(sp)
80019714:	8fb1001c 	lw	s1,28(sp)
80019718:	8fb00018 	lw	s0,24(sp)
8001971c:	03e00008 	jr	ra
80019720:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:497
		}
		wakeup_queue(&(mbox->senders), WT_INTERRUPTED, 1);
		wakeup_queue(&(mbox->receivers), WT_INTERRUPTED, 1);

		if (mbox->inuse == 0) {
			mbox_free(mbox);
80019724:	0c006132 	jal	800184c8 <mbox_free>
80019728:	02002021 	move	a0,s0
8001972c:	080065be 	j	800196f8 <ipc_mbox_free+0x11c>
80019730:	00000000 	nop

80019734 <ipc_mbox_info>:
ipc_mbox_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:505
	local_intr_restore(intr_flag);
	return 0;
}

int ipc_mbox_info(int id, struct mboxinfo *info)
{
80019734:	27bdffc0 	addiu	sp,sp,-64
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
80019738:	2c822000 	sltiu	v0,a0,8192
ipc_mbox_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:505
	local_intr_restore(intr_flag);
	return 0;
}

int ipc_mbox_info(int id, struct mboxinfo *info)
{
8001973c:	afb00030 	sw	s0,48(sp)
80019740:	afbf003c 	sw	ra,60(sp)
80019744:	afb20038 	sw	s2,56(sp)
80019748:	afb10034 	sw	s1,52(sp)
get_mbox():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:75
	static_assert(MBOX_P_PAGE != 0);
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
8001974c:	1040001b 	beqz	v0,800197bc <ipc_mbox_info+0x88>
80019750:	2410ffea 	li	s0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80019754:	3c02b02c 	lui	v0,0xb02c
80019758:	24420b03 	addiu	v0,v0,2819
8001975c:	00820019 	multu	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80019760:	3c038015 	lui	v1,0x8015
80019764:	24636b88 	addiu	v1,v1,27528
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80019768:	00001010 	mfhi	v0
8001976c:	00021182 	srl	v0,v0,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:77
		if (mbox_map[i] != NULL) {
80019770:	00023080 	sll	a2,v0,0x2
80019774:	00c31821 	addu	v1,a2,v1
80019778:	8c630000 	lw	v1,0(v1)
8001977c:	1060000f 	beqz	v1,800197bc <ipc_mbox_info+0x88>
80019780:	00023040 	sll	a2,v0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:76
}

static struct msg_mbox *get_mbox(int id)
{
	if (id >= 0 && id < MAX_MBOX_NUM) {
		int i = id / MBOX_P_PAGE, j = id % MBOX_P_PAGE;
80019784:	00c21021 	addu	v0,a2,v0
80019788:	00029140 	sll	s2,v0,0x5
8001978c:	02421023 	subu	v0,s2,v0
80019790:	00822023 	subu	a0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:78
		if (mbox_map[i] != NULL) {
			struct msg_mbox *mbox = mbox_map[i] + j;
80019794:	00041080 	sll	v0,a0,0x2
80019798:	00049100 	sll	s2,a0,0x4
8001979c:	02429023 	subu	s2,s2,v0
800197a0:	02442023 	subu	a0,s2,a0
800197a4:	00049080 	sll	s2,a0,0x2
800197a8:	00729021 	addu	s2,v1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:79
			if (mbox->state == OPENED) {
800197ac:	8e430008 	lw	v1,8(s2)
800197b0:	24020001 	li	v0,1
800197b4:	50620008 	beql	v1,v0,800197d8 <ipc_mbox_info+0xa4>
800197b8:	8e420004 	lw	v0,4(s2)
ipc_mbox_info():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:531
		     (mm, info, local_info,
		      sizeof(struct mboxinfo))) ? 0 : -E_INVAL;
	}
	unlock_mm(mm);
	return ret;
}
800197bc:	8fbf003c 	lw	ra,60(sp)
800197c0:	02001021 	move	v0,s0
800197c4:	8fb20038 	lw	s2,56(sp)
800197c8:	8fb10034 	lw	s1,52(sp)
800197cc:	8fb00030 	lw	s0,48(sp)
800197d0:	03e00008 	jr	ra
800197d4:	27bd0040 	addiu	sp,sp,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:511
	struct msg_mbox *mbox;
	if ((mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
800197d8:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:514
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
800197dc:	8e460010 	lw	a2,16(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:511
	struct msg_mbox *mbox;
	if ((mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
800197e0:	8c6777a4 	lw	a3,30628(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:515
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
	local_info->max_slots = mbox->max_slots;
800197e4:	8e43000c 	lw	v1,12(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:517
	local_info->inuse = (mbox->inuse != 0);
	local_info->has_sender = !wait_queue_empty(&(mbox->senders));
800197e8:	2644001c 	addiu	a0,s2,28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:516
	struct mm_struct *mm = current->mm;
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
	local_info->max_slots = mbox->max_slots;
	local_info->inuse = (mbox->inuse != 0);
800197ec:	0002102b 	sltu	v0,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:511
	struct msg_mbox *mbox;
	if ((mbox = get_mbox(id)) == NULL) {
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
800197f0:	8cf10020 	lw	s1,32(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:515
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
	local_info->max_slots = mbox->max_slots;
800197f4:	afa30014 	sw	v1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:514
	}

	struct mm_struct *mm = current->mm;
	struct mboxinfo __local_info, *local_info = &__local_info;

	local_info->slots = mbox->slots;
800197f8:	afa60010 	sw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:517
	local_info->max_slots = mbox->max_slots;
	local_info->inuse = (mbox->inuse != 0);
	local_info->has_sender = !wait_queue_empty(&(mbox->senders));
800197fc:	afa50028 	sw	a1,40(sp)
80019800:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80019804:	afa20018 	sw	v0,24(sp)
80019808:	2c420001 	sltiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:518
	local_info->has_receiver = !wait_queue_empty(&(mbox->receivers));
8001980c:	26440024 	addiu	a0,s2,36
80019810:	0c0069ba 	jal	8001a6e8 <wait_queue_empty>
80019814:	afa2001c 	sw	v0,28(sp)
80019818:	2c420001 	sltiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:522

	int ret;

	lock_mm(mm);
8001981c:	02202021 	move	a0,s1
80019820:	0c004c2e 	jal	800130b8 <lock_mm>
80019824:	afa20020 	sw	v0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:526
	{
		ret =
		    (copy_to_user
		     (mm, info, local_info,
80019828:	8fa50028 	lw	a1,40(sp)
8001982c:	02202021 	move	a0,s1
80019830:	27a60010 	addiu	a2,sp,16
80019834:	0c007950 	jal	8001e540 <copy_to_user>
80019838:	24070014 	li	a3,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:529
		      sizeof(struct mboxinfo))) ? 0 : -E_INVAL;
	}
	unlock_mm(mm);
8001983c:	02202021 	move	a0,s1
80019840:	0c004c3f 	jal	800130fc <unlock_mm>
80019844:	0002800b 	movn	s0,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:531
	return ret;
}
80019848:	8fbf003c 	lw	ra,60(sp)
8001984c:	02001021 	move	v0,s0
80019850:	8fb20038 	lw	s2,56(sp)
80019854:	8fb10034 	lw	s1,52(sp)
80019858:	8fb00030 	lw	s0,48(sp)
8001985c:	03e00008 	jr	ra
80019860:	27bd0040 	addiu	sp,sp,64

80019864 <mbox_cleanup>:
mbox_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:534

void mbox_cleanup(void)
{
80019864:	27bdffd0 	addiu	sp,sp,-48
80019868:	afbf002c 	sw	ra,44(sp)
8001986c:	afb60028 	sw	s6,40(sp)
80019870:	afb50024 	sw	s5,36(sp)
80019874:	afb40020 	sw	s4,32(sp)
80019878:	afb3001c 	sw	s3,28(sp)
8001987c:	afb20018 	sw	s2,24(sp)
80019880:	afb10014 	sw	s1,20(sp)
80019884:	afb00010 	sw	s0,16(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019888:	40026000 	mfc0	v0,c0_status
8001988c:	30420001 	andi	v0,v0,0x1
80019890:	10400003 	beqz	v0,800198a0 <mbox_cleanup+0x3c>
80019894:	0000b021 	move	s6,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019898:	0c006d0c 	jal	8001b430 <intr_disable>
8001989c:	24160001 	li	s6,1
800198a0:	3c108015 	lui	s0,0x8015
800198a4:	26106b88 	addiu	s0,s0,27528
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
800198a8:	3c158000 	lui	s5,0x8000
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:533
	}
	unlock_mm(mm);
	return ret;
}

void mbox_cleanup(void)
800198ac:	26110164 	addiu	s1,s0,356
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
800198b0:	26b51000 	addiu	s5,s5,4096
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
800198b4:	3c147fff 	lui	s4,0x7fff
800198b8:	3c138015 	lui	s3,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
800198bc:	3c128015 	lui	s2,0x8015
mbox_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:541
	local_intr_save(intr_flag);
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			struct msg_mbox *mbox;
			if ((mbox = mbox_map[i]) != NULL) {
800198c0:	8e040000 	lw	a0,0(s0)
800198c4:	5080000d 	beqzl	a0,800198fc <mbox_cleanup+0x98>
800198c8:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:543
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
					if (mbox->state != CLOSED) {
800198cc:	8c820008 	lw	v0,8(a0)
800198d0:	5440000a 	bnezl	v0,800198fc <mbox_cleanup+0x98>
800198d4:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:542
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			struct msg_mbox *mbox;
			if ((mbox = mbox_map[i]) != NULL) {
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
800198d8:	2482002c 	addiu	v0,a0,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:533
	}
	unlock_mm(mm);
	return ret;
}

void mbox_cleanup(void)
800198dc:	0800663b 	j	800198ec <mbox_cleanup+0x88>
800198e0:	24850ffc 	addiu	a1,a0,4092
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:542
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
			struct msg_mbox *mbox;
			if ((mbox = mbox_map[i]) != NULL) {
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
800198e4:	10450012 	beq	v0,a1,80019930 <mbox_cleanup+0xcc>
800198e8:	24860014 	addiu	a2,a0,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:543
					if (mbox->state != CLOSED) {
800198ec:	8c430008 	lw	v1,8(v0)
800198f0:	5060fffc 	beqzl	v1,800198e4 <mbox_cleanup+0x80>
800198f4:	2442002c 	addiu	v0,v0,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:555
				mbox = mbox_map[i];
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
					list_del(&(mbox->msg_link));
				}
				mbox = mbox_map[i], mbox_map[i] = NULL;
				free_page(kva2page(mbox));
800198f8:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:539
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
800198fc:	5611fff1 	bnel	s0,s1,800198c4 <mbox_cleanup+0x60>
80019900:	8e040000 	lw	a0,0(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019904:	16c00028 	bnez	s6,800199a8 <mbox_cleanup+0x144>
80019908:	8fbf002c 	lw	ra,44(sp)
mbox_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:560
				free_page(kva2page(mbox));
			}
		}
	}
	local_intr_restore(intr_flag);
}
8001990c:	8fb60028 	lw	s6,40(sp)
80019910:	8fb50024 	lw	s5,36(sp)
80019914:	8fb40020 	lw	s4,32(sp)
80019918:	8fb3001c 	lw	s3,28(sp)
8001991c:	8fb20018 	lw	s2,24(sp)
80019920:	8fb10014 	lw	s1,20(sp)
80019924:	8fb00010 	lw	s0,16(sp)
80019928:	03e00008 	jr	ra
8001992c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:533
	}
	unlock_mm(mm);
	return ret;
}

void mbox_cleanup(void)
80019930:	24871010 	addiu	a3,a0,4112
__intr_save():
80019934:	00c01021 	move	v0,a2
mbox_cleanup():
80019938:	00441823 	subu	v1,v0,a0
8001993c:	00661821 	addu	v1,v1,a2
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80019940:	8c65ffec 	lw	a1,-20(v1)
80019944:	8c63fff0 	lw	v1,-16(v1)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
	next->prev = prev;
80019948:	2442002c 	addiu	v0,v0,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001994c:	aca30004 	sw	v1,4(a1)
mbox_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:551
				}
				if (j != MBOX_P_PAGE) {
					continue;
				}
				mbox = mbox_map[i];
				for (j = 0; j < MBOX_P_PAGE; j++, mbox++) {
80019950:	1447fff9 	bne	v0,a3,80019938 <mbox_cleanup+0xd4>
80019954:	ac650000 	sw	a1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:554
					list_del(&(mbox->msg_link));
				}
				mbox = mbox_map[i], mbox_map[i] = NULL;
80019958:	8e070000 	lw	a3,0(s0)
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
8001995c:	00f5102b 	sltu	v0,a3,s5
80019960:	1440001a 	bnez	v0,800199cc <mbox_cleanup+0x168>
80019964:	ae000000 	sw	zero,0(s0)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
80019968:	3682f000 	ori	v0,s4,0xf000
8001996c:	8e637770 	lw	v1,30576(s3)
80019970:	00e21021 	addu	v0,a3,v0
80019974:	00021302 	srl	v0,v0,0xc
80019978:	0043182b 	sltu	v1,v0,v1
8001997c:	10600019 	beqz	v1,800199e4 <mbox_cleanup+0x180>
80019980:	8e4477bc 	lw	a0,30652(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
80019984:	00021140 	sll	v0,v0,0x5
mbox_cleanup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:555
				free_page(kva2page(mbox));
80019988:	24050001 	li	a1,1
8001998c:	00822021 	addu	a0,a0,v0
80019990:	0c007449 	jal	8001d124 <free_pages>
80019994:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:539
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		int i, j;
		for (i = 0; i < MAX_MBOX_PAGES; i++) {
80019998:	5611ffca 	bnel	s0,s1,800198c4 <mbox_cleanup+0x60>
8001999c:	8e040000 	lw	a0,0(s0)
800199a0:	08006641 	j	80019904 <mbox_cleanup+0xa0>
800199a4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/mbox.c:560
				free_page(kva2page(mbox));
			}
		}
	}
	local_intr_restore(intr_flag);
}
800199a8:	8fb60028 	lw	s6,40(sp)
800199ac:	8fb50024 	lw	s5,36(sp)
800199b0:	8fb40020 	lw	s4,32(sp)
800199b4:	8fb3001c 	lw	s3,28(sp)
800199b8:	8fb20018 	lw	s2,24(sp)
800199bc:	8fb10014 	lw	s1,20(sp)
800199c0:	8fb00010 	lw	s0,16(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
800199c4:	08006d08 	j	8001b420 <intr_enable>
800199c8:	27bd0030 	addiu	sp,sp,48
kva2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:111
	return KADDR(page2pa(page));
}

static inline struct Page *kva2page(void *kva)
{
	return pa2page(PADDR(kva));
800199cc:	3c048002 	lui	a0,0x8002
800199d0:	3c068002 	lui	a2,0x8002
800199d4:	24842a0c 	addiu	a0,a0,10764
800199d8:	2405006f 	li	a1,111
800199dc:	0c006b13 	jal	8001ac4c <__panic>
800199e0:	24c62a50 	addiu	a2,a2,10832
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
800199e4:	3c048002 	lui	a0,0x8002
800199e8:	3c068002 	lui	a2,0x8002
800199ec:	24842a0c 	addiu	a0,a0,10764
800199f0:	24050063 	li	a1,99
800199f4:	0c006b13 	jal	8001ac4c <__panic>
800199f8:	24c62a74 	addiu	a2,a2,10868

800199fc <__down>:
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:97

static uint32_t
    __attribute__ ((noinline)) __down(semaphore_t * sem, uint32_t wait_state,
				      timer_t * timer)
{
	assert(sem->valid);
800199fc:	8c820004 	lw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:96
}

static uint32_t
    __attribute__ ((noinline)) __down(semaphore_t * sem, uint32_t wait_state,
				      timer_t * timer)
{
80019a00:	27bdffb8 	addiu	sp,sp,-72
80019a04:	afb30040 	sw	s3,64(sp)
80019a08:	afb00034 	sw	s0,52(sp)
80019a0c:	afbf0044 	sw	ra,68(sp)
80019a10:	afb2003c 	sw	s2,60(sp)
80019a14:	afb10038 	sw	s1,56(sp)
80019a18:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:97
	assert(sem->valid);
80019a1c:	10400051 	beqz	v0,80019b64 <__down+0x168>
80019a20:	00c09821 	move	s3,a2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019a24:	40026000 	mfc0	v0,c0_status
80019a28:	30420001 	andi	v0,v0,0x1
80019a2c:	10400005 	beqz	v0,80019a44 <__down+0x48>
80019a30:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019a34:	0c006d0c 	jal	8001b430 <intr_disable>
80019a38:	afa40028 	sw	a0,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80019a3c:	8fa40028 	lw	a0,40(sp)
80019a40:	24120001 	li	s2,1
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:100
	bool intr_flag;
	local_intr_save(intr_flag);
	if (sem->value > 0) {
80019a44:	8c820000 	lw	v0,0(a0)
80019a48:	18400015 	blez	v0,80019aa0 <__down+0xa4>
80019a4c:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:101
		sem->value--;
80019a50:	ac820000 	sw	v0,0(a0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019a54:	16400008 	bnez	s2,80019a78 <__down+0x7c>
80019a58:	00001021 	move	v0,zero
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:121

	if (wait->wakeup_flags != wait_state) {
		return wait->wakeup_flags;
	}
	return 0;
}
80019a5c:	8fbf0044 	lw	ra,68(sp)
80019a60:	8fb30040 	lw	s3,64(sp)
80019a64:	8fb2003c 	lw	s2,60(sp)
80019a68:	8fb10038 	lw	s1,56(sp)
80019a6c:	8fb00034 	lw	s0,52(sp)
80019a70:	03e00008 	jr	ra
80019a74:	27bd0048 	addiu	sp,sp,72
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019a78:	0c006d08 	jal	8001b420 <intr_enable>
80019a7c:	afa20028 	sw	v0,40(sp)
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:121
80019a80:	8fbf0044 	lw	ra,68(sp)
80019a84:	8fa20028 	lw	v0,40(sp)
80019a88:	8fb30040 	lw	s3,64(sp)
80019a8c:	8fb2003c 	lw	s2,60(sp)
80019a90:	8fb10038 	lw	s1,56(sp)
80019a94:	8fb00034 	lw	s0,52(sp)
80019a98:	03e00008 	jr	ra
80019a9c:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:106
		sem->value--;
		local_intr_restore(intr_flag);
		return 0;
	}
	wait_t __wait, *wait = &__wait;
	wait_current_set(&(sem->wait_queue), wait, wait_state);
80019aa0:	2491000c 	addiu	s1,a0,12
80019aa4:	02202021 	move	a0,s1
80019aa8:	27a50010 	addiu	a1,sp,16
80019aac:	0c006a08 	jal	8001a820 <wait_current_set>
80019ab0:	02003021 	move	a2,s0
ipc_add_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:12
#include <sched.h>
#include <error.h>

static inline void ipc_add_timer(timer_t * timer)
{
	if (timer != NULL) {
80019ab4:	12600003 	beqz	s3,80019ac4 <__down+0xc8>
80019ab8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:13
		add_timer(timer);
80019abc:	0c0005e5 	jal	80001794 <add_timer>
80019ac0:	02602021 	move	a0,s3
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019ac4:	12400003 	beqz	s2,80019ad4 <__down+0xd8>
80019ac8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019acc:	0c006d08 	jal	8001b420 <intr_enable>
80019ad0:	00000000 	nop
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:110
	ipc_add_timer(timer);
	local_intr_restore(intr_flag);

	schedule();
80019ad4:	0c00059f 	jal	8000167c <schedule>
80019ad8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019adc:	40026000 	mfc0	v0,c0_status
80019ae0:	30420001 	andi	v0,v0,0x1
80019ae4:	14400017 	bnez	v0,80019b44 <__down+0x148>
80019ae8:	00009021 	move	s2,zero
ipc_del_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:19
	}
}

static inline void ipc_del_timer(timer_t * timer)
{
	if (timer != NULL) {
80019aec:	12600003 	beqz	s3,80019afc <__down+0x100>
80019af0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:20
		del_timer(timer);
80019af4:	0c00062d 	jal	800018b4 <del_timer>
80019af8:	02602021 	move	a0,s3
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:114

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(&(sem->wait_queue), wait);
80019afc:	0c0069be 	jal	8001a6f8 <wait_in_queue>
80019b00:	27a40010 	addiu	a0,sp,16
80019b04:	54400013 	bnezl	v0,80019b54 <__down+0x158>
80019b08:	02202021 	move	a0,s1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019b0c:	12400004 	beqz	s2,80019b20 <__down+0x124>
80019b10:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019b14:	0c006d08 	jal	8001b420 <intr_enable>
80019b18:	00000000 	nop
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:117
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != wait_state) {
80019b1c:	8fa20014 	lw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:121
		return wait->wakeup_flags;
	}
	return 0;
}
80019b20:	8fbf0044 	lw	ra,68(sp)
80019b24:	8fb30040 	lw	s3,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:120
	local_intr_restore(intr_flag);

	if (wait->wakeup_flags != wait_state) {
		return wait->wakeup_flags;
	}
	return 0;
80019b28:	00508026 	xor	s0,v0,s0
80019b2c:	0010100a 	movz	v0,zero,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:121
}
80019b30:	8fb2003c 	lw	s2,60(sp)
80019b34:	8fb10038 	lw	s1,56(sp)
80019b38:	8fb00034 	lw	s0,52(sp)
80019b3c:	03e00008 	jr	ra
80019b40:	27bd0048 	addiu	sp,sp,72
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
80019b44:	0c006d0c 	jal	8001b430 <intr_disable>
80019b48:	24120001 	li	s2,1
80019b4c:	080066bb 	j	80019aec <__down+0xf0>
80019b50:	00000000 	nop
__down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:114

	schedule();

	local_intr_save(intr_flag);
	ipc_del_timer(timer);
	wait_current_del(&(sem->wait_queue), wait);
80019b54:	0c00696e 	jal	8001a5b8 <wait_queue_del>
80019b58:	27a50010 	addiu	a1,sp,16
80019b5c:	080066c3 	j	80019b0c <__down+0x110>
80019b60:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:97

static uint32_t
    __attribute__ ((noinline)) __down(semaphore_t * sem, uint32_t wait_state,
				      timer_t * timer)
{
	assert(sem->valid);
80019b64:	3c048002 	lui	a0,0x8002
80019b68:	3c068002 	lui	a2,0x8002
80019b6c:	3c078002 	lui	a3,0x8002
80019b70:	24843c38 	addiu	a0,a0,15416
80019b74:	24050061 	li	a1,97
80019b78:	24c60e48 	addiu	a2,a2,3656
80019b7c:	0c006b13 	jal	8001ac4c <__panic>
80019b80:	24e73c40 	addiu	a3,a3,15424

80019b84 <__up>:
__up():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:78
#endif //UCONFIG_BIONIC_LIBC

static void
    __attribute__ ((noinline)) __up(semaphore_t * sem, uint32_t wait_state)
{
	assert(sem->valid);
80019b84:	8c820004 	lw	v0,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:77
}
#endif //UCONFIG_BIONIC_LIBC

static void
    __attribute__ ((noinline)) __up(semaphore_t * sem, uint32_t wait_state)
{
80019b88:	27bdffd8 	addiu	sp,sp,-40
80019b8c:	afb2001c 	sw	s2,28(sp)
80019b90:	afb10018 	sw	s1,24(sp)
80019b94:	afbf0024 	sw	ra,36(sp)
80019b98:	afb30020 	sw	s3,32(sp)
80019b9c:	afb00014 	sw	s0,20(sp)
80019ba0:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:78
	assert(sem->valid);
80019ba4:	10400025 	beqz	v0,80019c3c <__up+0xb8>
80019ba8:	00a09021 	move	s2,a1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019bac:	40026000 	mfc0	v0,c0_status
80019bb0:	30420001 	andi	v0,v0,0x1
80019bb4:	10400003 	beqz	v0,80019bc4 <__up+0x40>
80019bb8:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019bbc:	0c006d0c 	jal	8001b430 <intr_disable>
80019bc0:	24100001 	li	s0,1
__up():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:83
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		wait_t *wait;
		if ((wait = wait_queue_first(&(sem->wait_queue))) == NULL) {
80019bc4:	2633000c 	addiu	s3,s1,12
80019bc8:	0c0069b0 	jal	8001a6c0 <wait_queue_first>
80019bcc:	02602021 	move	a0,s3
80019bd0:	50400017 	beqzl	v0,80019c30 <__up+0xac>
80019bd4:	8e220000 	lw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:86
			sem->value++;
		} else {
			assert(wait->proc->wait_state == wait_state);
80019bd8:	8c430000 	lw	v1,0(v0)
80019bdc:	8c630084 	lw	v1,132(v1)
80019be0:	1472001e 	bne	v1,s2,80019c5c <__up+0xd8>
80019be4:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:87
			wakeup_wait(&(sem->wait_queue), wait, wait_state, 1);
80019be8:	00402821 	move	a1,v0
80019bec:	02403021 	move	a2,s2
80019bf0:	0c0069c3 	jal	8001a70c <wakeup_wait>
80019bf4:	24070001 	li	a3,1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019bf8:	16000007 	bnez	s0,80019c18 <__up+0x94>
80019bfc:	8fbf0024 	lw	ra,36(sp)
__up():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:91
		}
	}
	local_intr_restore(intr_flag);
}
80019c00:	8fb30020 	lw	s3,32(sp)
80019c04:	8fb2001c 	lw	s2,28(sp)
80019c08:	8fb10018 	lw	s1,24(sp)
80019c0c:	8fb00014 	lw	s0,20(sp)
80019c10:	03e00008 	jr	ra
80019c14:	27bd0028 	addiu	sp,sp,40
80019c18:	8fb30020 	lw	s3,32(sp)
80019c1c:	8fb2001c 	lw	s2,28(sp)
80019c20:	8fb10018 	lw	s1,24(sp)
80019c24:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019c28:	08006d08 	j	8001b420 <intr_enable>
80019c2c:	27bd0028 	addiu	sp,sp,40
__up():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:84
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		wait_t *wait;
		if ((wait = wait_queue_first(&(sem->wait_queue))) == NULL) {
			sem->value++;
80019c30:	24420001 	addiu	v0,v0,1
80019c34:	080066fe 	j	80019bf8 <__up+0x74>
80019c38:	ae220000 	sw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:78
#endif //UCONFIG_BIONIC_LIBC

static void
    __attribute__ ((noinline)) __up(semaphore_t * sem, uint32_t wait_state)
{
	assert(sem->valid);
80019c3c:	3c048002 	lui	a0,0x8002
80019c40:	3c068002 	lui	a2,0x8002
80019c44:	3c078002 	lui	a3,0x8002
80019c48:	24843c38 	addiu	a0,a0,15416
80019c4c:	2405004e 	li	a1,78
80019c50:	24c60e48 	addiu	a2,a2,3656
80019c54:	0c006b13 	jal	8001ac4c <__panic>
80019c58:	24e73c40 	addiu	a3,a3,15424
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:86
	{
		wait_t *wait;
		if ((wait = wait_queue_first(&(sem->wait_queue))) == NULL) {
			sem->value++;
		} else {
			assert(wait->proc->wait_state == wait_state);
80019c5c:	3c048002 	lui	a0,0x8002
80019c60:	3c068002 	lui	a2,0x8002
80019c64:	3c078002 	lui	a3,0x8002
80019c68:	24843c38 	addiu	a0,a0,15416
80019c6c:	24050056 	li	a1,86
80019c70:	24c60e48 	addiu	a2,a2,3656
80019c74:	0c006b13 	jal	8001ac4c <__panic>
80019c78:	24e73c4c 	addiu	a3,a3,15436

80019c7c <sem_init>:
sem_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:56
    ((sem_t)((uintptr_t)(sem) - PBASE))

void sem_init(semaphore_t * sem, int value)
{
	sem->value = value;
	sem->valid = 1;
80019c7c:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:55
#define sem2semid(sem)                          \
    ((sem_t)((uintptr_t)(sem) - PBASE))

void sem_init(semaphore_t * sem, int value)
{
	sem->value = value;
80019c80:	ac850000 	sw	a1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:56
	sem->valid = 1;
80019c84:	ac820004 	sw	v0,4(a0)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
80019c88:	ac800008 	sw	zero,8(a0)
sem_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:61
#ifdef UCONFIG_BIONIC_LIBC
	sem->addr = 0;		//-1 : // Not for futex
#endif //UCONFIG_BIONIC_LIBC
	set_sem_count(sem, 0);
	wait_queue_init(&(sem->wait_queue));
80019c8c:	08006953 	j	8001a54c <wait_queue_init>
80019c90:	2484000c 	addiu	a0,a0,12

80019c94 <up>:
up():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:125
	return 0;
}

void up(semaphore_t * sem)
{
	__up(sem, WT_KSEM);
80019c94:	080066e1 	j	80019b84 <__up>
80019c98:	24050100 	li	a1,256

80019c9c <down>:
down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:129
}

void down(semaphore_t * sem)
{
80019c9c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:130
	uint32_t flags = __down(sem, WT_KSEM, NULL);
80019ca0:	24050100 	li	a1,256
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:129
{
	__up(sem, WT_KSEM);
}

void down(semaphore_t * sem)
{
80019ca4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:130
	uint32_t flags = __down(sem, WT_KSEM, NULL);
80019ca8:	0c00667f 	jal	800199fc <__down>
80019cac:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:131
	assert(flags == 0);
80019cb0:	14400003 	bnez	v0,80019cc0 <down+0x24>
80019cb4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:132
}
80019cb8:	03e00008 	jr	ra
80019cbc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:131
}

void down(semaphore_t * sem)
{
	uint32_t flags = __down(sem, WT_KSEM, NULL);
	assert(flags == 0);
80019cc0:	3c048002 	lui	a0,0x8002
80019cc4:	3c068002 	lui	a2,0x8002
80019cc8:	3c078002 	lui	a3,0x8002
80019ccc:	24843c38 	addiu	a0,a0,15416
80019cd0:	24050083 	li	a1,131
80019cd4:	24c60e48 	addiu	a2,a2,3656
80019cd8:	0c006b13 	jal	8001ac4c <__panic>
80019cdc:	24e73c74 	addiu	a3,a3,15476

80019ce0 <try_down>:
try_down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:135
}

bool try_down(semaphore_t * sem)
{
80019ce0:	27bdffe0 	addiu	sp,sp,-32
80019ce4:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019ce8:	40026000 	mfc0	v0,c0_status
80019cec:	30420001 	andi	v0,v0,0x1
80019cf0:	10400005 	beqz	v0,80019d08 <try_down+0x28>
80019cf4:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019cf8:	0c006d0c 	jal	8001b430 <intr_disable>
80019cfc:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
80019d00:	8fa40010 	lw	a0,16(sp)
80019d04:	24050001 	li	a1,1
try_down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:138
	bool intr_flag, ret = 0;
	local_intr_save(intr_flag);
	if (sem->value > 0) {
80019d08:	8c830000 	lw	v1,0(a0)
80019d0c:	18600004 	blez	v1,80019d20 <try_down+0x40>
80019d10:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:139
		sem->value--, ret = 1;
80019d14:	2463ffff 	addiu	v1,v1,-1
80019d18:	ac830000 	sw	v1,0(a0)
80019d1c:	24020001 	li	v0,1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
80019d20:	10a00005 	beqz	a1,80019d38 <try_down+0x58>
80019d24:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
80019d28:	0c006d08 	jal	8001b420 <intr_enable>
80019d2c:	afa20010 	sw	v0,16(sp)
80019d30:	8fa20010 	lw	v0,16(sp)
try_down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:143
	}
	local_intr_restore(intr_flag);
	return ret;
}
80019d34:	8fbf001c 	lw	ra,28(sp)
80019d38:	03e00008 	jr	ra
80019d3c:	27bd0020 	addiu	sp,sp,32

80019d40 <sem_queue_create>:
sem_queue_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:166
	assert(flags == WT_INTERRUPTED);
	return ipc_check_timeout(timeout, saved_ticks);
}

sem_queue_t *sem_queue_create(void)
{
80019d40:	27bdffe0 	addiu	sp,sp,-32
80019d44:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:168
	sem_queue_t *sem_queue;
	if ((sem_queue = kmalloc(sizeof(sem_queue_t))) != NULL) {
80019d48:	0c00548e 	jal	80015238 <kmalloc>
80019d4c:	24040020 	li	a0,32
80019d50:	10400009 	beqz	v0,80019d78 <sem_queue_create+0x38>
80019d54:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:169
		sem_init(&(sem_queue->sem), 1);
80019d58:	24050001 	li	a1,1
80019d5c:	0c00671f 	jal	80019c7c <sem_init>
80019d60:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:171
		set_sem_queue_count(sem_queue, 0);
		list_init(&(sem_queue->semu_list));
80019d64:	8fa20010 	lw	v0,16(sp)
80019d68:	24430018 	addiu	v1,v0,24
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
80019d6c:	ac400014 	sw	zero,20(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
80019d70:	ac43001c 	sw	v1,28(v0)
80019d74:	ac430018 	sw	v1,24(v0)
sem_queue_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:174
	}
	return sem_queue;
}
80019d78:	8fbf001c 	lw	ra,28(sp)
80019d7c:	03e00008 	jr	ra
80019d80:	27bd0020 	addiu	sp,sp,32

80019d84 <sem_queue_destroy>:
sem_queue_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:178

void sem_queue_destroy(sem_queue_t * sem_queue)
{
	kfree(sem_queue);
80019d84:	080054b9 	j	800152e4 <kfree>
80019d88:	00000000 	nop

80019d8c <semu_create>:
semu_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:202
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

sem_undo_t *semu_create(semaphore_t * sem, int value)
{
80019d8c:	27bdffd8 	addiu	sp,sp,-40
80019d90:	afb0001c 	sw	s0,28(sp)
80019d94:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:204
	sem_undo_t *semu;
	if ((semu = kmalloc(sizeof(sem_undo_t))) != NULL) {
80019d98:	2404000c 	li	a0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:202
	return NULL;
}
#endif //UCONFIG_BIONIC_LIBC

sem_undo_t *semu_create(semaphore_t * sem, int value)
{
80019d9c:	afb10020 	sw	s1,32(sp)
80019da0:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:204
	sem_undo_t *semu;
	if ((semu = kmalloc(sizeof(sem_undo_t))) != NULL) {
80019da4:	0c00548e 	jal	80015238 <kmalloc>
80019da8:	afa50010 	sw	a1,16(sp)
80019dac:	1040000c 	beqz	v0,80019de0 <semu_create+0x54>
80019db0:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:205
		if (sem == NULL && (sem = kmalloc(sizeof(semaphore_t))) != NULL) {
80019db4:	12000019 	beqz	s0,80019e1c <semu_create+0x90>
80019db8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019dbc:	40026000 	mfc0	v0,c0_status
80019dc0:	30420001 	andi	v0,v0,0x1
80019dc4:	1440000c 	bnez	v0,80019df8 <semu_create+0x6c>
80019dc8:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80019dcc:	8e020008 	lw	v0,8(s0)
80019dd0:	24420001 	addiu	v0,v0,1
80019dd4:	ae020008 	sw	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80019dd8:	8e020008 	lw	v0,8(s0)
semu_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:210
			sem_init(sem, value);
		}
		if (sem != NULL) {
			sem_count_inc(sem);
			semu->sem = sem;
80019ddc:	ae300000 	sw	s0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:216
			return semu;
		}
		kfree(semu);
	}
	return NULL;
}
80019de0:	8fbf0024 	lw	ra,36(sp)
80019de4:	02201021 	move	v0,s1
80019de8:	8fb0001c 	lw	s0,28(sp)
80019dec:	8fb10020 	lw	s1,32(sp)
80019df0:	03e00008 	jr	ra
80019df4:	27bd0028 	addiu	sp,sp,40
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019df8:	0c006d0c 	jal	8001b430 <intr_disable>
80019dfc:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80019e00:	8e020008 	lw	v0,8(s0)
80019e04:	24420001 	addiu	v0,v0,1
80019e08:	ae020008 	sw	v0,8(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80019e0c:	0c006d08 	jal	8001b420 <intr_enable>
80019e10:	00000000 	nop
80019e14:	08006776 	j	80019dd8 <semu_create+0x4c>
80019e18:	00000000 	nop
semu_create():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:205

sem_undo_t *semu_create(semaphore_t * sem, int value)
{
	sem_undo_t *semu;
	if ((semu = kmalloc(sizeof(sem_undo_t))) != NULL) {
		if (sem == NULL && (sem = kmalloc(sizeof(semaphore_t))) != NULL) {
80019e1c:	0c00548e 	jal	80015238 <kmalloc>
80019e20:	24040014 	li	a0,20
80019e24:	00408021 	move	s0,v0
80019e28:	10400005 	beqz	v0,80019e40 <semu_create+0xb4>
80019e2c:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:206
			sem_init(sem, value);
80019e30:	0c00671f 	jal	80019c7c <sem_init>
80019e34:	00402021 	move	a0,v0
80019e38:	0800676f 	j	80019dbc <semu_create+0x30>
80019e3c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:213
		if (sem != NULL) {
			sem_count_inc(sem);
			semu->sem = sem;
			return semu;
		}
		kfree(semu);
80019e40:	0c0054b9 	jal	800152e4 <kfree>
80019e44:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:215
	}
	return NULL;
80019e48:	08006778 	j	80019de0 <semu_create+0x54>
80019e4c:	00008821 	move	s1,zero

80019e50 <semu_destroy>:
semu_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:219
}

void semu_destroy(sem_undo_t * semu)
{
80019e50:	27bdffe0 	addiu	sp,sp,-32
80019e54:	afb10018 	sw	s1,24(sp)
80019e58:	afb00014 	sw	s0,20(sp)
80019e5c:	afbf001c 	sw	ra,28(sp)
80019e60:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:220
	if (sem_count_dec(semu->sem) == 0) {
80019e64:	8c910000 	lw	s1,0(a0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
80019e68:	40026000 	mfc0	v0,c0_status
80019e6c:	30420001 	andi	v0,v0,0x1
80019e70:	1440000f 	bnez	v0,80019eb0 <semu_destroy+0x60>
80019e74:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
80019e78:	8e220008 	lw	v0,8(s1)
80019e7c:	2442ffff 	addiu	v0,v0,-1
80019e80:	ae220008 	sw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:157
	local_intr_restore(intr_flag);
	return v->counter;
80019e84:	8e220008 	lw	v0,8(s1)
semu_destroy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:220
80019e88:	14400004 	bnez	v0,80019e9c <semu_destroy+0x4c>
80019e8c:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:221
		kfree(semu->sem);
80019e90:	0c0054b9 	jal	800152e4 <kfree>
80019e94:	8e040000 	lw	a0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:223
	}
	kfree(semu);
80019e98:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:224
}
80019e9c:	8fbf001c 	lw	ra,28(sp)
80019ea0:	8fb10018 	lw	s1,24(sp)
80019ea4:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:223
void semu_destroy(sem_undo_t * semu)
{
	if (sem_count_dec(semu->sem) == 0) {
		kfree(semu->sem);
	}
	kfree(semu);
80019ea8:	080054b9 	j	800152e4 <kfree>
80019eac:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
80019eb0:	0c006d0c 	jal	8001b430 <intr_disable>
80019eb4:	00000000 	nop
atomic_add_return():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:155
 * */
static __always_inline int atomic_add_return(atomic_t * v, int i)
{
	int intr_flag;
	local_intr_save(intr_flag);
	v->counter += i;
80019eb8:	8e220008 	lw	v0,8(s1)
80019ebc:	2442ffff 	addiu	v0,v0,-1
80019ec0:	ae220008 	sw	v0,8(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
80019ec4:	0c006d08 	jal	8001b420 <intr_enable>
80019ec8:	00000000 	nop
80019ecc:	080067a1 	j	80019e84 <semu_destroy+0x34>
80019ed0:	00000000 	nop

80019ed4 <semu_list_search>:
semu_list_search():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:254
	}
}

static sem_undo_t *semu_list_search(list_entry_t * list, sem_t sem_id)
{
	if (VALID_SEMID(sem_id)) {
80019ed4:	3c038000 	lui	v1,0x8000
80019ed8:	24631000 	addiu	v1,v1,4096
80019edc:	00a31821 	addu	v1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:253
		semu_destroy(le2semu(le, semu_link));
	}
}

static sem_undo_t *semu_list_search(list_entry_t * list, sem_t sem_id)
{
80019ee0:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:254
	if (VALID_SEMID(sem_id)) {
80019ee4:	00a3282b 	sltu	a1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:253
		semu_destroy(le2semu(le, semu_link));
	}
}

static sem_undo_t *semu_list_search(list_entry_t * list, sem_t sem_id)
{
80019ee8:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:254
	if (VALID_SEMID(sem_id)) {
80019eec:	10a00014 	beqz	a1,80019f40 <semu_list_search+0x6c>
80019ef0:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:257
		semaphore_t *sem = semid2sem(sem_id);
		list_entry_t *le = list;
		while ((le = list_next(le)) != list) {
80019ef4:	00802821 	move	a1,a0
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019ef8:	8ca50004 	lw	a1,4(a1)
semu_list_search():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:257
80019efc:	10850013 	beq	a0,a1,80019f4c <semu_list_search+0x78>
80019f00:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:259
			sem_undo_t *semu = le2semu(le, semu_link);
			if (semu->sem == sem) {
80019f04:	8ca2fffc 	lw	v0,-4(a1)
80019f08:	5443fffc 	bnel	v0,v1,80019efc <semu_list_search+0x28>
80019f0c:	8ca50004 	lw	a1,4(a1)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
80019f10:	8ca70000 	lw	a3,0(a1)
80019f14:	8ca60004 	lw	a2,4(a1)
semu_list_search():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:261
				list_del(le);
				if (sem->valid) {
80019f18:	8c630004 	lw	v1,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:258
{
	if (VALID_SEMID(sem_id)) {
		semaphore_t *sem = semid2sem(sem_id);
		list_entry_t *le = list;
		while ((le = list_next(le)) != list) {
			sem_undo_t *semu = le2semu(le, semu_link);
80019f1c:	24a2fffc 	addiu	v0,a1,-4
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
80019f20:	ace60004 	sw	a2,4(a3)
semu_list_search():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:261
			if (semu->sem == sem) {
				list_del(le);
				if (sem->valid) {
80019f24:	1060000c 	beqz	v1,80019f58 <semu_list_search+0x84>
80019f28:	acc70000 	sw	a3,0(a2)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80019f2c:	8c830004 	lw	v1,4(a0)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80019f30:	ac850004 	sw	a1,4(a0)
80019f34:	ac650000 	sw	a1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80019f38:	aca30004 	sw	v1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
80019f3c:	aca40000 	sw	a0,0(a1)
semu_list_search():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:272
				}
			}
		}
	}
	return NULL;
}
80019f40:	8fbf0014 	lw	ra,20(sp)
80019f44:	03e00008 	jr	ra
80019f48:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:271
					return NULL;
				}
			}
		}
	}
	return NULL;
80019f4c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:272
}
80019f50:	03e00008 	jr	ra
80019f54:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:265
				list_del(le);
				if (sem->valid) {
					list_add_after(list, le);
					return semu;
				} else {
					semu_destroy(semu);
80019f58:	0c006794 	jal	80019e50 <semu_destroy>
80019f5c:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:266
					return NULL;
80019f60:	080067d0 	j	80019f40 <semu_list_search+0x6c>
80019f64:	00001021 	move	v0,zero

80019f68 <dup_sem_queue>:
dup_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:227
	}
	kfree(semu);
}

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
80019f68:	27bdffd8 	addiu	sp,sp,-40
80019f6c:	afb2001c 	sw	s2,28(sp)
80019f70:	afbf0024 	sw	ra,36(sp)
80019f74:	afb30020 	sw	s3,32(sp)
80019f78:	afb10018 	sw	s1,24(sp)
80019f7c:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:228
	assert(to != NULL && from != NULL);
80019f80:	10800027 	beqz	a0,8001a020 <dup_sem_queue+0xb8>
80019f84:	00809021 	move	s2,a0
80019f88:	10a00025 	beqz	a1,8001a020 <dup_sem_queue+0xb8>
80019f8c:	24b10018 	addiu	s1,a1,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:229
	list_entry_t *list = &(from->semu_list), *le = list;
80019f90:	02208021 	move	s0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:236
		sem_undo_t *semu = le2semu(le, semu_link);
		if (semu->sem->valid) {
			if ((semu = semu_create(semu->sem, 0)) == NULL) {
				return -E_NO_MEM;
			}
			list_add(&(to->semu_list), &(semu->semu_link));
80019f94:	24930018 	addiu	s3,a0,24
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019f98:	8e100004 	lw	s0,4(s0)
dup_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:230

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
	assert(to != NULL && from != NULL);
	list_entry_t *list = &(from->semu_list), *le = list;
	while ((le = list_next(le)) != list) {
80019f9c:	12300011 	beq	s1,s0,80019fe4 <dup_sem_queue+0x7c>
80019fa0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:232
		sem_undo_t *semu = le2semu(le, semu_link);
		if (semu->sem->valid) {
80019fa4:	8e04fffc 	lw	a0,-4(s0)
80019fa8:	8c820004 	lw	v0,4(a0)
80019fac:	5040fffb 	beqzl	v0,80019f9c <dup_sem_queue+0x34>
80019fb0:	8e100004 	lw	s0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:233
			if ((semu = semu_create(semu->sem, 0)) == NULL) {
80019fb4:	0c006763 	jal	80019d8c <semu_create>
80019fb8:	00002821 	move	a1,zero
80019fbc:	10400010 	beqz	v0,8001a000 <dup_sem_queue+0x98>
80019fc0:	24440004 	addiu	a0,v0,4
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
80019fc4:	8e43001c 	lw	v1,28(s2)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80019fc8:	ae44001c 	sw	a0,28(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
80019fcc:	ac430008 	sw	v1,8(v0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
80019fd0:	8e100004 	lw	s0,4(s0)
list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
80019fd4:	ac640000 	sw	a0,0(v1)
dup_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:230

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
	assert(to != NULL && from != NULL);
	list_entry_t *list = &(from->semu_list), *le = list;
	while ((le = list_next(le)) != list) {
80019fd8:	1630fff2 	bne	s1,s0,80019fa4 <dup_sem_queue+0x3c>
80019fdc:	ac530004 	sw	s3,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:240
			}
			list_add(&(to->semu_list), &(semu->semu_link));
		}
	}
	return 0;
}
80019fe0:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:239
				return -E_NO_MEM;
			}
			list_add(&(to->semu_list), &(semu->semu_link));
		}
	}
	return 0;
80019fe4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:240
}
80019fe8:	8fb30020 	lw	s3,32(sp)
80019fec:	8fb2001c 	lw	s2,28(sp)
80019ff0:	8fb10018 	lw	s1,24(sp)
80019ff4:	8fb00014 	lw	s0,20(sp)
80019ff8:	03e00008 	jr	ra
80019ffc:	27bd0028 	addiu	sp,sp,40
8001a000:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:234
	list_entry_t *list = &(from->semu_list), *le = list;
	while ((le = list_next(le)) != list) {
		sem_undo_t *semu = le2semu(le, semu_link);
		if (semu->sem->valid) {
			if ((semu = semu_create(semu->sem, 0)) == NULL) {
				return -E_NO_MEM;
8001a004:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:240
			}
			list_add(&(to->semu_list), &(semu->semu_link));
		}
	}
	return 0;
}
8001a008:	8fb30020 	lw	s3,32(sp)
8001a00c:	8fb2001c 	lw	s2,28(sp)
8001a010:	8fb10018 	lw	s1,24(sp)
8001a014:	8fb00014 	lw	s0,20(sp)
8001a018:	03e00008 	jr	ra
8001a01c:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:228
	kfree(semu);
}

int dup_sem_queue(sem_queue_t * to, sem_queue_t * from)
{
	assert(to != NULL && from != NULL);
8001a020:	3c048002 	lui	a0,0x8002
8001a024:	3c068002 	lui	a2,0x8002
8001a028:	3c078002 	lui	a3,0x8002
8001a02c:	24843c38 	addiu	a0,a0,15416
8001a030:	240500e4 	li	a1,228
8001a034:	24c60e48 	addiu	a2,a2,3656
8001a038:	0c006b13 	jal	8001ac4c <__panic>
8001a03c:	24e728b0 	addiu	a3,a3,10416

8001a040 <exit_sem_queue>:
exit_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:243
	}
	return 0;
}

void exit_sem_queue(sem_queue_t * sem_queue)
{
8001a040:	27bdffe0 	addiu	sp,sp,-32
8001a044:	afb00014 	sw	s0,20(sp)
8001a048:	afbf001c 	sw	ra,28(sp)
8001a04c:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:244
	assert(sem_queue != NULL && sem_queue_count(sem_queue) == 0);
8001a050:	10800015 	beqz	a0,8001a0a8 <exit_sem_queue+0x68>
8001a054:	00808021 	move	s0,a0
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001a058:	8c820014 	lw	v0,20(a0)
exit_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:244
8001a05c:	14400012 	bnez	v0,8001a0a8 <exit_sem_queue+0x68>
8001a060:	26110018 	addiu	s1,s0,24
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a064:	8c84001c 	lw	a0,28(a0)
exit_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:246
	list_entry_t *list = &(sem_queue->semu_list), *le = list;
	while ((le = list_next(list)) != list) {
8001a068:	1224000b 	beq	s1,a0,8001a098 <exit_sem_queue+0x58>
8001a06c:	8fbf001c 	lw	ra,28(sp)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001a070:	8c830000 	lw	v1,0(a0)
8001a074:	8c820004 	lw	v0,4(a0)
exit_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:248
		list_del(le);
		semu_destroy(le2semu(le, semu_link));
8001a078:	2484fffc 	addiu	a0,a0,-4
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001a07c:	ac620004 	sw	v0,4(v1)
exit_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:248
8001a080:	0c006794 	jal	80019e50 <semu_destroy>
8001a084:	ac430000 	sw	v1,0(v0)
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a088:	8e04001c 	lw	a0,28(s0)
exit_sem_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:246

void exit_sem_queue(sem_queue_t * sem_queue)
{
	assert(sem_queue != NULL && sem_queue_count(sem_queue) == 0);
	list_entry_t *list = &(sem_queue->semu_list), *le = list;
	while ((le = list_next(list)) != list) {
8001a08c:	5624fff9 	bnel	s1,a0,8001a074 <exit_sem_queue+0x34>
8001a090:	8c830000 	lw	v1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:250
		list_del(le);
		semu_destroy(le2semu(le, semu_link));
	}
}
8001a094:	8fbf001c 	lw	ra,28(sp)
8001a098:	8fb10018 	lw	s1,24(sp)
8001a09c:	8fb00014 	lw	s0,20(sp)
8001a0a0:	03e00008 	jr	ra
8001a0a4:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:244
	return 0;
}

void exit_sem_queue(sem_queue_t * sem_queue)
{
	assert(sem_queue != NULL && sem_queue_count(sem_queue) == 0);
8001a0a8:	3c048002 	lui	a0,0x8002
8001a0ac:	3c068002 	lui	a2,0x8002
8001a0b0:	3c078002 	lui	a3,0x8002
8001a0b4:	24843c38 	addiu	a0,a0,15416
8001a0b8:	240500f4 	li	a1,244
8001a0bc:	24c60e48 	addiu	a2,a2,3656
8001a0c0:	0c006b13 	jal	8001ac4c <__panic>
8001a0c4:	24e73c80 	addiu	a3,a3,15488

8001a0c8 <ipc_sem_init>:
ipc_sem_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:313
	return sem2semid(semu->sem);
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_init(int value)
{
8001a0c8:	27bdffe0 	addiu	sp,sp,-32
8001a0cc:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:314
	assert(current->sem_queue != NULL);
8001a0d0:	3c108015 	lui	s0,0x8015
8001a0d4:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:313
	return sem2semid(semu->sem);
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_init(int value)
{
8001a0d8:	afbf001c 	sw	ra,28(sp)
8001a0dc:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:314
	assert(current->sem_queue != NULL);
8001a0e0:	8c4200ac 	lw	v0,172(v0)
8001a0e4:	1040001c 	beqz	v0,8001a158 <ipc_sem_init+0x90>
8001a0e8:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:317

	sem_undo_t *semu;
	if ((semu = semu_create(NULL, value)) == NULL) {
8001a0ec:	0c006763 	jal	80019d8c <semu_create>
8001a0f0:	00002021 	move	a0,zero
8001a0f4:	00408821 	move	s1,v0
8001a0f8:	12200012 	beqz	s1,8001a144 <ipc_sem_init+0x7c>
8001a0fc:	2402fff4 	li	v0,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:321
		return -E_NO_MEM;
	}

	sem_queue_t *sem_queue = current->sem_queue;
8001a100:	8e0277a4 	lw	v0,30628(s0)
8001a104:	8c5000ac 	lw	s0,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:322
	down(&(sem_queue->sem));
8001a108:	0c006727 	jal	80019c9c <down>
8001a10c:	02002021 	move	a0,s0
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001a110:	8e02001c 	lw	v0,28(s0)
ipc_sem_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:323
	list_add_after(&(sem_queue->semu_list), &(semu->semu_link));
8001a114:	26230004 	addiu	v1,s1,4
8001a118:	26040018 	addiu	a0,s0,24
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001a11c:	ac430000 	sw	v1,0(v0)
8001a120:	ae03001c 	sw	v1,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8001a124:	ae240004 	sw	a0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
	elm->next = next;
8001a128:	ae220008 	sw	v0,8(s1)
ipc_sem_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:324
	up(&(sem_queue->sem));
8001a12c:	0c006725 	jal	80019c94 <up>
8001a130:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:325
	return sem2semid(semu->sem);
8001a134:	8e230000 	lw	v1,0(s1)
8001a138:	3c027fff 	lui	v0,0x7fff
8001a13c:	3442f000 	ori	v0,v0,0xf000
8001a140:	00621021 	addu	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:326
}
8001a144:	8fbf001c 	lw	ra,28(sp)
8001a148:	8fb10018 	lw	s1,24(sp)
8001a14c:	8fb00014 	lw	s0,20(sp)
8001a150:	03e00008 	jr	ra
8001a154:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:314
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_init(int value)
{
	assert(current->sem_queue != NULL);
8001a158:	3c048002 	lui	a0,0x8002
8001a15c:	3c068002 	lui	a2,0x8002
8001a160:	3c078002 	lui	a3,0x8002
8001a164:	24843c38 	addiu	a0,a0,15416
8001a168:	2405013a 	li	a1,314
8001a16c:	24c60e48 	addiu	a2,a2,3656
8001a170:	0c006b13 	jal	8001ac4c <__panic>
8001a174:	24e73cb8 	addiu	a3,a3,15544

8001a178 <ipc_sem_post>:
ipc_sem_post():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:330
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a178:	3c028015 	lui	v0,0x8015
8001a17c:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:329
	up(&(sem_queue->sem));
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
8001a180:	27bdffd8 	addiu	sp,sp,-40
8001a184:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:330
	assert(current->sem_queue != NULL);
8001a188:	8c5000ac 	lw	s0,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:329
	up(&(sem_queue->sem));
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
8001a18c:	afbf0024 	sw	ra,36(sp)
8001a190:	afb10020 	sw	s1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:330
	assert(current->sem_queue != NULL);
8001a194:	12000016 	beqz	s0,8001a1f0 <ipc_sem_post+0x78>
8001a198:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:334

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
8001a19c:	02002021 	move	a0,s0
8001a1a0:	0c006727 	jal	80019c9c <down>
8001a1a4:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:335
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a1a8:	8fa50010 	lw	a1,16(sp)
8001a1ac:	0c0067b5 	jal	80019ed4 <semu_list_search>
8001a1b0:	26040018 	addiu	a0,s0,24
8001a1b4:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:336
	up(&(sem_queue->sem));
8001a1b8:	0c006725 	jal	80019c94 <up>
8001a1bc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:337
	if (semu != NULL) {
8001a1c0:	12200006 	beqz	s1,8001a1dc <ipc_sem_post+0x64>
8001a1c4:	2402ffea 	li	v0,-22
usem_up():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:147
	return ret;
}

static int usem_up(semaphore_t * sem)
{
	__up(sem, WT_USEM);
8001a1c8:	8e240000 	lw	a0,0(s1)
8001a1cc:	3c058000 	lui	a1,0x8000
8001a1d0:	0c0066e1 	jal	80019b84 <__up>
8001a1d4:	24a50101 	addiu	a1,a1,257
ipc_sem_post():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:338
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
	up(&(sem_queue->sem));
	if (semu != NULL) {
		return usem_up(semu->sem);
8001a1d8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:341
	}
	return -E_INVAL;
}
8001a1dc:	8fbf0024 	lw	ra,36(sp)
8001a1e0:	8fb10020 	lw	s1,32(sp)
8001a1e4:	8fb0001c 	lw	s0,28(sp)
8001a1e8:	03e00008 	jr	ra
8001a1ec:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:330
	return sem2semid(semu->sem);
}

int ipc_sem_post(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a1f0:	3c048002 	lui	a0,0x8002
8001a1f4:	3c068002 	lui	a2,0x8002
8001a1f8:	3c078002 	lui	a3,0x8002
8001a1fc:	24843c38 	addiu	a0,a0,15416
8001a200:	2405014a 	li	a1,330
8001a204:	24c60e48 	addiu	a2,a2,3656
8001a208:	0c006b13 	jal	8001ac4c <__panic>
8001a20c:	24e73cb8 	addiu	a3,a3,15544

8001a210 <ipc_sem_wait>:
ipc_sem_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:369
	return -E_INVAL;
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
8001a210:	27bdffb0 	addiu	sp,sp,-80
8001a214:	afb30044 	sw	s3,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:370
	assert(current->sem_queue != NULL);
8001a218:	3c138015 	lui	s3,0x8015
8001a21c:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:369
	return -E_INVAL;
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
8001a220:	afb1003c 	sw	s1,60(sp)
8001a224:	afb40048 	sw	s4,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:370
	assert(current->sem_queue != NULL);
8001a228:	8c5100ac 	lw	s1,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:369
	return -E_INVAL;
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
8001a22c:	afb00038 	sw	s0,56(sp)
8001a230:	afbf004c 	sw	ra,76(sp)
8001a234:	afb20040 	sw	s2,64(sp)
8001a238:	0080a021 	move	s4,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:370
	assert(current->sem_queue != NULL);
8001a23c:	12200031 	beqz	s1,8001a304 <ipc_sem_wait+0xf4>
8001a240:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:374

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
8001a244:	0c006727 	jal	80019c9c <down>
8001a248:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:375
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a24c:	26240018 	addiu	a0,s1,24
8001a250:	0c0067b5 	jal	80019ed4 <semu_list_search>
8001a254:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:376
	up(&(sem_queue->sem));
8001a258:	02202021 	move	a0,s1
8001a25c:	0c006725 	jal	80019c94 <up>
8001a260:	afa20030 	sw	v0,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:377
	if (semu != NULL) {
8001a264:	8fa20030 	lw	v0,48(sp)
8001a268:	5040001e 	beqzl	v0,8001a2e4 <ipc_sem_wait+0xd4>
8001a26c:	2402ffea 	li	v0,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:378
		return usem_down(semu->sem, timeout);
8001a270:	8c440000 	lw	a0,0(v0)
ipc_timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:28

static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
8001a274:	1200000b 	beqz	s0,8001a2a4 <ipc_sem_wait+0x94>
8001a278:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:30
		*saved_ticks = ticks;
		return timer_init(timer, pls_read(current), timeout);
8001a27c:	8e6277a4 	lw	v0,30628(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:29
static inline timer_t *ipc_timer_init(unsigned int timeout,
				      unsigned long *saved_ticks,
				      timer_t * timer)
{
	if (timeout != 0) {
		*saved_ticks = ticks;
8001a280:	3c038015 	lui	v1,0x8015
8001a284:	8c7277ac 	lw	s2,30636(v1)
timer_init():

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
	timer->proc = proc;
8001a288:	afa20014 	sw	v0,20(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001a28c:	27a20024 	addiu	v0,sp,36
timer_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:28
    to_struct((le), timer_t, member)

static inline timer_t *timer_init(timer_t * timer, struct proc_struct *proc,
				  int expires)
{
	timer->expires = expires;
8001a290:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/schedule/sched.h:30
	timer->proc = proc;
	timer->linux_timer.linux_timer = NULL;
8001a294:	afa00018 	sw	zero,24(sp)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001a298:	afa20028 	sw	v0,40(sp)
8001a29c:	afa20024 	sw	v0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:30
		return timer_init(timer, pls_read(current), timeout);
8001a2a0:	27a60010 	addiu	a2,sp,16
usem_down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:158
	unsigned long saved_ticks;
	timer_t __timer, *timer =
	    ipc_timer_init(timeout, &saved_ticks, &__timer);

	uint32_t flags;
	if ((flags = __down(sem, WT_USEM, timer)) == 0) {
8001a2a4:	3c118000 	lui	s1,0x8000
8001a2a8:	0c00667f 	jal	800199fc <__down>
8001a2ac:	26250101 	addiu	a1,s1,257
8001a2b0:	00401821 	move	v1,v0
8001a2b4:	1060000b 	beqz	v1,8001a2e4 <ipc_sem_wait+0xd4>
8001a2b8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:161
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
8001a2bc:	14710019 	bne	v1,s1,8001a324 <ipc_sem_wait+0x114>
8001a2c0:	3c048002 	lui	a0,0x8002
ipc_check_timeout():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:38
}

static inline int
ipc_check_timeout(unsigned int timeout, unsigned long saved_ticks)
{
	if (timeout != 0) {
8001a2c4:	12000007 	beqz	s0,8001a2e4 <ipc_sem_wait+0xd4>
8001a2c8:	2402ffff 	li	v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:39
		unsigned long delt = (unsigned long)(ticks - saved_ticks);
8001a2cc:	3c038015 	lui	v1,0x8015
8001a2d0:	8c6377ac 	lw	v1,30636(v1)
8001a2d4:	00729023 	subu	s2,v1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:40
		if (delt >= timeout) {
8001a2d8:	0250802b 	sltu	s0,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/ipc.h:44
			return -E_TIMEOUT;
		}
	}
	return -1;
8001a2dc:	2403fff0 	li	v1,-16
8001a2e0:	0070100a 	movz	v0,v1,s0
ipc_sem_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:381
	up(&(sem_queue->sem));
	if (semu != NULL) {
		return usem_down(semu->sem, timeout);
	}
	return -E_INVAL;
}
8001a2e4:	8fbf004c 	lw	ra,76(sp)
8001a2e8:	8fb40048 	lw	s4,72(sp)
8001a2ec:	8fb30044 	lw	s3,68(sp)
8001a2f0:	8fb20040 	lw	s2,64(sp)
8001a2f4:	8fb1003c 	lw	s1,60(sp)
8001a2f8:	8fb00038 	lw	s0,56(sp)
8001a2fc:	03e00008 	jr	ra
8001a300:	27bd0050 	addiu	sp,sp,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:370
}
#endif //UCONFIG_BIONIC_LIBC

int ipc_sem_wait(sem_t sem_id, unsigned int timeout)
{
	assert(current->sem_queue != NULL);
8001a304:	3c048002 	lui	a0,0x8002
8001a308:	3c068002 	lui	a2,0x8002
8001a30c:	3c078002 	lui	a3,0x8002
8001a310:	24843c38 	addiu	a0,a0,15416
8001a314:	24050172 	li	a1,370
8001a318:	24c60e48 	addiu	a2,a2,3656
8001a31c:	0c006b13 	jal	8001ac4c <__panic>
8001a320:	24e73cb8 	addiu	a3,a3,15544
usem_down():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:161

	uint32_t flags;
	if ((flags = __down(sem, WT_USEM, timer)) == 0) {
		return 0;
	}
	assert(flags == WT_INTERRUPTED);
8001a324:	3c068002 	lui	a2,0x8002
8001a328:	3c078002 	lui	a3,0x8002
8001a32c:	24843c38 	addiu	a0,a0,15416
8001a330:	240500a1 	li	a1,161
8001a334:	24c60e48 	addiu	a2,a2,3656
8001a338:	0c006b13 	jal	8001ac4c <__panic>
8001a33c:	24e73a94 	addiu	a3,a3,14996

8001a340 <ipc_sem_free>:
ipc_sem_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:385
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a340:	3c028015 	lui	v0,0x8015
8001a344:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:384
	}
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
8001a348:	27bdffd8 	addiu	sp,sp,-40
8001a34c:	afb0001c 	sw	s0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:385
	assert(current->sem_queue != NULL);
8001a350:	8c5000ac 	lw	s0,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:384
	}
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
8001a354:	afbf0024 	sw	ra,36(sp)
8001a358:	afb10020 	sw	s1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:385
	assert(current->sem_queue != NULL);
8001a35c:	1200002b 	beqz	s0,8001a40c <ipc_sem_free+0xcc>
8001a360:	00802821 	move	a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:389

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
	down(&(sem_queue->sem));
8001a364:	02002021 	move	a0,s0
8001a368:	0c006727 	jal	80019c9c <down>
8001a36c:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:390
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a370:	8fa50010 	lw	a1,16(sp)
8001a374:	0c0067b5 	jal	80019ed4 <semu_list_search>
8001a378:	26040018 	addiu	a0,s0,24
8001a37c:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:391
	up(&(sem_queue->sem));
8001a380:	0c006725 	jal	80019c94 <up>
8001a384:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:394

	int ret = -E_INVAL;
	if (semu != NULL) {
8001a388:	1220000b 	beqz	s1,8001a3b8 <ipc_sem_free+0x78>
8001a38c:	2402ffea 	li	v0,-22
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001a390:	40026000 	mfc0	v0,c0_status
8001a394:	30420001 	andi	v0,v0,0x1
8001a398:	1440000c 	bnez	v0,8001a3cc <ipc_sem_free+0x8c>
8001a39c:	3c058000 	lui	a1,0x8000
ipc_sem_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:398
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
8001a3a0:	8e240000 	lw	a0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:400
			sem->valid = 0, ret = 0;
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
8001a3a4:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:399
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
			sem->valid = 0, ret = 0;
8001a3a8:	ac800004 	sw	zero,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:400
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
8001a3ac:	0c0069dc 	jal	8001a770 <wakeup_queue>
8001a3b0:	2484000c 	addiu	a0,a0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:399
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
			sem->valid = 0, ret = 0;
8001a3b4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:405
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
		}
		local_intr_restore(intr_flag);
	}
	return ret;
}
8001a3b8:	8fbf0024 	lw	ra,36(sp)
8001a3bc:	8fb10020 	lw	s1,32(sp)
8001a3c0:	8fb0001c 	lw	s0,28(sp)
8001a3c4:	03e00008 	jr	ra
8001a3c8:	27bd0028 	addiu	sp,sp,40
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001a3cc:	0c006d0c 	jal	8001b430 <intr_disable>
8001a3d0:	00000000 	nop
ipc_sem_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:398
	int ret = -E_INVAL;
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
8001a3d4:	8e220000 	lw	v0,0(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:400
			sem->valid = 0, ret = 0;
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
8001a3d8:	3c058000 	lui	a1,0x8000
8001a3dc:	24060001 	li	a2,1
8001a3e0:	2444000c 	addiu	a0,v0,12
8001a3e4:	0c0069dc 	jal	8001a770 <wakeup_queue>
8001a3e8:	ac400004 	sw	zero,4(v0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001a3ec:	0c006d08 	jal	8001b420 <intr_enable>
8001a3f0:	00000000 	nop
ipc_sem_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:405
		}
		local_intr_restore(intr_flag);
	}
	return ret;
}
8001a3f4:	8fbf0024 	lw	ra,36(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:399
	if (semu != NULL) {
		bool intr_flag;
		local_intr_save(intr_flag);
		{
			semaphore_t *sem = semu->sem;
			sem->valid = 0, ret = 0;
8001a3f8:	00001021 	move	v0,zero
ipc_sem_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:405
			wakeup_queue(&(sem->wait_queue), WT_INTERRUPTED, 1);
		}
		local_intr_restore(intr_flag);
	}
	return ret;
}
8001a3fc:	8fb10020 	lw	s1,32(sp)
8001a400:	8fb0001c 	lw	s0,28(sp)
8001a404:	03e00008 	jr	ra
8001a408:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:385
	return -E_INVAL;
}

int ipc_sem_free(sem_t sem_id)
{
	assert(current->sem_queue != NULL);
8001a40c:	3c048002 	lui	a0,0x8002
8001a410:	3c068002 	lui	a2,0x8002
8001a414:	3c078002 	lui	a3,0x8002
8001a418:	24843c38 	addiu	a0,a0,15416
8001a41c:	24050181 	li	a1,385
8001a420:	24c60e48 	addiu	a2,a2,3656
8001a424:	0c006b13 	jal	8001ac4c <__panic>
8001a428:	24e73cb8 	addiu	a3,a3,15544

8001a42c <ipc_sem_get_value>:
ipc_sem_get_value():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:408
	}
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
8001a42c:	27bdffc8 	addiu	sp,sp,-56
8001a430:	afb20028 	sw	s2,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:409
	assert(current->sem_queue != NULL);
8001a434:	3c128015 	lui	s2,0x8015
8001a438:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:408
	}
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
8001a43c:	afb40030 	sw	s4,48(sp)
8001a440:	afb3002c 	sw	s3,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:409
	assert(current->sem_queue != NULL);
8001a444:	8c4300ac 	lw	v1,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:408
	}
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
8001a448:	afbf0034 	sw	ra,52(sp)
8001a44c:	afb10024 	sw	s1,36(sp)
8001a450:	afb00020 	sw	s0,32(sp)
8001a454:	0080a021 	move	s4,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:409
	assert(current->sem_queue != NULL);
8001a458:	1060002b 	beqz	v1,8001a508 <ipc_sem_get_value+0xdc>
8001a45c:	00a09821 	move	s3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:410
	if (value_store == NULL) {
8001a460:	10a00020 	beqz	a1,8001a4e4 <ipc_sem_get_value+0xb8>
8001a464:	2411ffea 	li	s1,-22
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:414
		return -E_INVAL;
	}

	struct mm_struct *mm = current->mm;
8001a468:	8c500020 	lw	s0,32(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:415
	if (!user_mem_check(mm, (uintptr_t) value_store, sizeof(int), 1)) {
8001a46c:	24060004 	li	a2,4
8001a470:	24070001 	li	a3,1
8001a474:	0c00507f 	jal	800141fc <user_mem_check>
8001a478:	02002021 	move	a0,s0
8001a47c:	10400019 	beqz	v0,8001a4e4 <ipc_sem_get_value+0xb8>
8001a480:	8e4277a4 	lw	v0,30628(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:420
		return -E_INVAL;
	}

	sem_undo_t *semu;
	sem_queue_t *sem_queue = current->sem_queue;
8001a484:	8c5200ac 	lw	s2,172(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:421
	down(&(sem_queue->sem));
8001a488:	0c006727 	jal	80019c9c <down>
8001a48c:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:422
	semu = semu_list_search(&(sem_queue->semu_list), sem_id);
8001a490:	26440018 	addiu	a0,s2,24
8001a494:	0c0067b5 	jal	80019ed4 <semu_list_search>
8001a498:	02802821 	move	a1,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:423
	up(&(sem_queue->sem));
8001a49c:	02402021 	move	a0,s2
8001a4a0:	0c006725 	jal	80019c94 <up>
8001a4a4:	afa20018 	sw	v0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:426

	int ret = -E_INVAL;
	if (semu != NULL) {
8001a4a8:	8fa20018 	lw	v0,24(sp)
8001a4ac:	1040000d 	beqz	v0,8001a4e4 <ipc_sem_get_value+0xb8>
8001a4b0:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:427
		int value = semu->sem->value;
8001a4b4:	8c420000 	lw	v0,0(v0)
8001a4b8:	8c420000 	lw	v0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:428
		lock_mm(mm);
8001a4bc:	0c004c2e 	jal	800130b8 <lock_mm>
8001a4c0:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:430
		{
			if (copy_to_user(mm, value_store, &value, sizeof(int))) {
8001a4c4:	02002021 	move	a0,s0
8001a4c8:	02602821 	move	a1,s3
8001a4cc:	27a60010 	addiu	a2,sp,16
8001a4d0:	0c007950 	jal	8001e540 <copy_to_user>
8001a4d4:	24070004 	li	a3,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:434
				ret = 0;
			}
		}
		unlock_mm(mm);
8001a4d8:	02002021 	move	a0,s0
8001a4dc:	0c004c3f 	jal	800130fc <unlock_mm>
8001a4e0:	0002880b 	movn	s1,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:437
	}
	return ret;
}
8001a4e4:	8fbf0034 	lw	ra,52(sp)
8001a4e8:	02201021 	move	v0,s1
8001a4ec:	8fb40030 	lw	s4,48(sp)
8001a4f0:	8fb3002c 	lw	s3,44(sp)
8001a4f4:	8fb20028 	lw	s2,40(sp)
8001a4f8:	8fb10024 	lw	s1,36(sp)
8001a4fc:	8fb00020 	lw	s0,32(sp)
8001a500:	03e00008 	jr	ra
8001a504:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sem.c:409
	return ret;
}

int ipc_sem_get_value(sem_t sem_id, int *value_store)
{
	assert(current->sem_queue != NULL);
8001a508:	3c048002 	lui	a0,0x8002
8001a50c:	3c068002 	lui	a2,0x8002
8001a510:	3c078002 	lui	a3,0x8002
8001a514:	24843c38 	addiu	a0,a0,15416
8001a518:	24050199 	li	a1,409
8001a51c:	24c60e48 	addiu	a2,a2,3656
8001a520:	0c006b13 	jal	8001ac4c <__panic>
8001a524:	24e73cb8 	addiu	a3,a3,15544

8001a528 <sync_init>:
sync_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/sync.c:6
#include <sync.h>
#include <mbox.h>

void sync_init(void)
{
	mbox_init();
8001a528:	080061b9 	j	800186e4 <mbox_init>
8001a52c:	00000000 	nop

8001a530 <wait_init>:
wait_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:15

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
	list_init(&(wait->wait_link));
8001a530:	2482000c 	addiu	v0,a0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:14
#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
8001a534:	3c038000 	lui	v1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:13

#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
8001a538:	ac850000 	sw	a1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:14
	wait->wakeup_flags = WT_INTERRUPTED;
8001a53c:	ac830004 	sw	v1,4(a0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001a540:	ac820010 	sw	v0,16(a0)
wait_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:16
	list_init(&(wait->wait_link));
}
8001a544:	03e00008 	jr	ra
8001a548:	ac82000c 	sw	v0,12(a0)

8001a54c <wait_queue_init>:
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001a54c:	ac840004 	sw	a0,4(a0)
wait_queue_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:21

void wait_queue_init(wait_queue_t * queue)
{
	list_init(&(queue->wait_head));
}
8001a550:	03e00008 	jr	ra
8001a554:	ac840000 	sw	a0,0(a0)

8001a558 <wait_queue_add>:
wait_queue_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:25

void wait_queue_add(wait_queue_t * queue, wait_t * wait)
{
	assert(list_empty(&(wait->wait_link)) && wait->proc != NULL);
8001a558:	8ca30010 	lw	v1,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:24
{
	list_init(&(queue->wait_head));
}

void wait_queue_add(wait_queue_t * queue, wait_t * wait)
{
8001a55c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:25
	assert(list_empty(&(wait->wait_link)) && wait->proc != NULL);
8001a560:	24a2000c 	addiu	v0,a1,12
8001a564:	1443000c 	bne	v0,v1,8001a598 <wait_queue_add+0x40>
8001a568:	afbf0014 	sw	ra,20(sp)
8001a56c:	8ca30000 	lw	v1,0(a1)
8001a570:	10600009 	beqz	v1,8001a598 <wait_queue_add+0x40>
8001a574:	8fbf0014 	lw	ra,20(sp)
list_add_before():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:80
 * Insert the new element @elm *before* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_before(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm->prev, listelm);
8001a578:	8c830000 	lw	v1,0(a0)
wait_queue_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:26
	wait->wait_queue = queue;
8001a57c:	aca40008 	sw	a0,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:28
	list_add_before(&(queue->wait_head), &(wait->wait_link));
}
8001a580:	27bd0018 	addiu	sp,sp,24
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001a584:	ac820000 	sw	v0,0(a0)
8001a588:	ac620004 	sw	v0,4(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->next = next;
	elm->prev = prev;
8001a58c:	aca3000c 	sw	v1,12(a1)
wait_queue_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:28
8001a590:	03e00008 	jr	ra
8001a594:	aca40010 	sw	a0,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:25
	list_init(&(queue->wait_head));
}

void wait_queue_add(wait_queue_t * queue, wait_t * wait)
{
	assert(list_empty(&(wait->wait_link)) && wait->proc != NULL);
8001a598:	3c048002 	lui	a0,0x8002
8001a59c:	3c068002 	lui	a2,0x8002
8001a5a0:	3c078002 	lui	a3,0x8002
8001a5a4:	24843cd4 	addiu	a0,a0,15572
8001a5a8:	24050019 	li	a1,25
8001a5ac:	24c60e48 	addiu	a2,a2,3656
8001a5b0:	0c006b13 	jal	8001ac4c <__panic>
8001a5b4:	24e73cdc 	addiu	a3,a3,15580

8001a5b8 <wait_queue_del>:
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001a5b8:	8ca30010 	lw	v1,16(a1)
wait_queue_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:31
	wait->wait_queue = queue;
	list_add_before(&(queue->wait_head), &(wait->wait_link));
}

void wait_queue_del(wait_queue_t * queue, wait_t * wait)
{
8001a5bc:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:32
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a5c0:	24a2000c 	addiu	v0,a1,12
8001a5c4:	1043000b 	beq	v0,v1,8001a5f4 <wait_queue_del+0x3c>
8001a5c8:	afbf0014 	sw	ra,20(sp)
8001a5cc:	8ca60008 	lw	a2,8(a1)
8001a5d0:	14c40008 	bne	a2,a0,8001a5f4 <wait_queue_del+0x3c>
8001a5d4:	8fbf0014 	lw	ra,20(sp)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001a5d8:	8ca4000c 	lw	a0,12(a1)
wait_queue_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:34
	list_del_init(&(wait->wait_link));
}
8001a5dc:	27bd0018 	addiu	sp,sp,24
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001a5e0:	ac830004 	sw	v1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8001a5e4:	ac640000 	sw	a0,0(v1)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001a5e8:	aca20010 	sw	v0,16(a1)
wait_queue_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:34
8001a5ec:	03e00008 	jr	ra
8001a5f0:	aca2000c 	sw	v0,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:32
	list_add_before(&(queue->wait_head), &(wait->wait_link));
}

void wait_queue_del(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a5f4:	3c048002 	lui	a0,0x8002
8001a5f8:	3c068002 	lui	a2,0x8002
8001a5fc:	3c078002 	lui	a3,0x8002
8001a600:	24843cd4 	addiu	a0,a0,15572
8001a604:	24050020 	li	a1,32
8001a608:	24c60e48 	addiu	a2,a2,3656
8001a60c:	0c006b13 	jal	8001ac4c <__panic>
8001a610:	24e73d14 	addiu	a3,a3,15636

8001a614 <wait_queue_next>:
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001a614:	8ca30010 	lw	v1,16(a1)
wait_queue_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:37
	list_del_init(&(wait->wait_link));
}

wait_t *wait_queue_next(wait_queue_t * queue, wait_t * wait)
{
8001a618:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:38
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a61c:	24a2000c 	addiu	v0,a1,12
8001a620:	10620009 	beq	v1,v0,8001a648 <wait_queue_next+0x34>
8001a624:	afbf0014 	sw	ra,20(sp)
8001a628:	8ca50008 	lw	a1,8(a1)
8001a62c:	14a40006 	bne	a1,a0,8001a648 <wait_queue_next+0x34>
8001a630:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:41
	list_entry_t *le = list_next(&(wait->wait_link));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a634:	2462fff4 	addiu	v0,v1,-12
8001a638:	00a31826 	xor	v1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:44
	}
	return NULL;
}
8001a63c:	0003100a 	movz	v0,zero,v1
8001a640:	03e00008 	jr	ra
8001a644:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:38
	list_del_init(&(wait->wait_link));
}

wait_t *wait_queue_next(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a648:	3c048002 	lui	a0,0x8002
8001a64c:	3c068002 	lui	a2,0x8002
8001a650:	3c078002 	lui	a3,0x8002
8001a654:	24843cd4 	addiu	a0,a0,15572
8001a658:	24050026 	li	a1,38
8001a65c:	24c60e48 	addiu	a2,a2,3656
8001a660:	0c006b13 	jal	8001ac4c <__panic>
8001a664:	24e73d14 	addiu	a3,a3,15636

8001a668 <wait_queue_prev>:
wait_queue_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:48
	return NULL;
}

wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a668:	8ca30010 	lw	v1,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:47
	}
	return NULL;
}

wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
8001a66c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:48
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a670:	24a2000c 	addiu	v0,a1,12
8001a674:	1062000a 	beq	v1,v0,8001a6a0 <wait_queue_prev+0x38>
8001a678:	afbf0014 	sw	ra,20(sp)
8001a67c:	8ca60008 	lw	a2,8(a1)
8001a680:	14c40007 	bne	a2,a0,8001a6a0 <wait_queue_prev+0x38>
8001a684:	8fbf0014 	lw	ra,20(sp)
list_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
8001a688:	8ca3000c 	lw	v1,12(a1)
wait_queue_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:54
	list_entry_t *le = list_prev(&(wait->wait_link));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
	}
	return NULL;
}
8001a68c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:51
wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
	list_entry_t *le = list_prev(&(wait->wait_link));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a690:	2462fff4 	addiu	v0,v1,-12
8001a694:	00c31826 	xor	v1,a2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:54
	}
	return NULL;
}
8001a698:	03e00008 	jr	ra
8001a69c:	0003100a 	movz	v0,zero,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:48
	return NULL;
}

wait_t *wait_queue_prev(wait_queue_t * queue, wait_t * wait)
{
	assert(!list_empty(&(wait->wait_link)) && wait->wait_queue == queue);
8001a6a0:	3c048002 	lui	a0,0x8002
8001a6a4:	3c068002 	lui	a2,0x8002
8001a6a8:	3c078002 	lui	a3,0x8002
8001a6ac:	24843cd4 	addiu	a0,a0,15572
8001a6b0:	24050030 	li	a1,48
8001a6b4:	24c60e48 	addiu	a2,a2,3656
8001a6b8:	0c006b13 	jal	8001ac4c <__panic>
8001a6bc:	24e73d14 	addiu	a3,a3,15636

8001a6c0 <wait_queue_first>:
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a6c0:	8c830004 	lw	v1,4(a0)
wait_queue_first():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:60

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a6c4:	2462fff4 	addiu	v0,v1,-12
8001a6c8:	00831826 	xor	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:63
	}
	return NULL;
}
8001a6cc:	03e00008 	jr	ra
8001a6d0:	0003100a 	movz	v0,zero,v1

8001a6d4 <wait_queue_last>:
list_prev():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:144
 * list_prev - get the previous entry
 * @listelm:    the list head
 **/
static list_entry_t *list_prev(list_entry_t * listelm)
{
	return listelm->prev;
8001a6d4:	8c830000 	lw	v1,0(a0)
wait_queue_last():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:69

wait_t *wait_queue_last(wait_queue_t * queue)
{
	list_entry_t *le = list_prev(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
		return le2wait(le, wait_link);
8001a6d8:	2462fff4 	addiu	v0,v1,-12
8001a6dc:	00831826 	xor	v1,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:72
	}
	return NULL;
}
8001a6e0:	03e00008 	jr	ra
8001a6e4:	0003100a 	movz	v0,zero,v1

8001a6e8 <wait_queue_empty>:
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001a6e8:	8c820004 	lw	v0,4(a0)
8001a6ec:	00441026 	xor	v0,v0,a0
wait_queue_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:77

bool wait_queue_empty(wait_queue_t * queue)
{
	return list_empty(&(queue->wait_head));
}
8001a6f0:	03e00008 	jr	ra
8001a6f4:	2c420001 	sltiu	v0,v0,1

8001a6f8 <wait_in_queue>:
wait_in_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:81

bool wait_in_queue(wait_t * wait)
{
	return !list_empty(&(wait->wait_link));
8001a6f8:	8c820010 	lw	v0,16(a0)
8001a6fc:	2484000c 	addiu	a0,a0,12
8001a700:	00441026 	xor	v0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:82
}
8001a704:	03e00008 	jr	ra
8001a708:	0002102b 	sltu	v0,zero,v0

8001a70c <wakeup_wait>:
wakeup_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:87

void
wakeup_wait(wait_queue_t * queue, wait_t * wait, uint32_t wakeup_flags,
	    bool del)
{
8001a70c:	27bdffe0 	addiu	sp,sp,-32
8001a710:	afb00018 	sw	s0,24(sp)
8001a714:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:88
	if (del) {
8001a718:	10e00004 	beqz	a3,8001a72c <wakeup_wait+0x20>
8001a71c:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:89
		wait_queue_del(queue, wait);
8001a720:	0c00696e 	jal	8001a5b8 <wait_queue_del>
8001a724:	afa60010 	sw	a2,16(sp)
8001a728:	8fa60010 	lw	a2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:92
	}
	wait->wakeup_flags = wakeup_flags;
	wakeup_proc(wait->proc);
8001a72c:	8e040000 	lw	a0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:91
	    bool del)
{
	if (del) {
		wait_queue_del(queue, wait);
	}
	wait->wakeup_flags = wakeup_flags;
8001a730:	ae060004 	sw	a2,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:93
	wakeup_proc(wait->proc);
}
8001a734:	8fbf001c 	lw	ra,28(sp)
8001a738:	8fb00018 	lw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:92
{
	if (del) {
		wait_queue_del(queue, wait);
	}
	wait->wakeup_flags = wakeup_flags;
	wakeup_proc(wait->proc);
8001a73c:	080004f8 	j	800013e0 <wakeup_proc>
8001a740:	27bd0020 	addiu	sp,sp,32

8001a744 <wakeup_first>:
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001a744:	8c830004 	lw	v1,4(a0)
wakeup_first():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:96
}

void wakeup_first(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
8001a748:	00a04021 	move	t0,a1
wait_queue_first():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:59
}

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
8001a74c:	10640006 	beq	v1,a0,8001a768 <wakeup_first+0x24>
8001a750:	00c03821 	move	a3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:60
		return le2wait(le, wait_link);
8001a754:	2465fff4 	addiu	a1,v1,-12
wakeup_first():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:98
}

void wakeup_first(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
8001a758:	10a00003 	beqz	a1,8001a768 <wakeup_first+0x24>
8001a75c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:99
		wakeup_wait(queue, wait, wakeup_flags, del);
8001a760:	080069c3 	j	8001a70c <wakeup_wait>
8001a764:	01003021 	move	a2,t0
8001a768:	03e00008 	jr	ra
8001a76c:	00000000 	nop

8001a770 <wakeup_queue>:
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8001a770:	8c820004 	lw	v0,4(a0)
wakeup_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:104
	}
}

void wakeup_queue(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
8001a774:	27bdffd8 	addiu	sp,sp,-40
8001a778:	afb10020 	sw	s1,32(sp)
8001a77c:	afb0001c 	sw	s0,28(sp)
8001a780:	afbf0024 	sw	ra,36(sp)
8001a784:	00808021 	move	s0,a0
wait_queue_first():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:59
}

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
8001a788:	10440011 	beq	v0,a0,8001a7d0 <wakeup_queue+0x60>
8001a78c:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:60
		return le2wait(le, wait_link);
8001a790:	2442fff4 	addiu	v0,v0,-12
wakeup_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:106
}

void wakeup_queue(wait_queue_t * queue, uint32_t wakeup_flags, bool del)
{
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
8001a794:	1040000f 	beqz	v0,8001a7d4 <wakeup_queue+0x64>
8001a798:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:107
		if (del) {
8001a79c:	14c00014 	bnez	a2,8001a7f0 <wakeup_queue+0x80>
8001a7a0:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:113
			do {
				wakeup_wait(queue, wait, wakeup_flags, 1);
			} while ((wait = wait_queue_first(queue)) != NULL);
		} else {
			do {
				wakeup_wait(queue, wait, wakeup_flags, 0);
8001a7a4:	02002021 	move	a0,s0
8001a7a8:	02203021 	move	a2,s1
8001a7ac:	00003821 	move	a3,zero
8001a7b0:	0c0069c3 	jal	8001a70c <wakeup_wait>
8001a7b4:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:114
			} while ((wait = wait_queue_next(queue, wait)) != NULL);
8001a7b8:	8fa20010 	lw	v0,16(sp)
8001a7bc:	02002021 	move	a0,s0
8001a7c0:	0c006985 	jal	8001a614 <wait_queue_next>
8001a7c4:	00402821 	move	a1,v0
8001a7c8:	5440fff6 	bnezl	v0,8001a7a4 <wakeup_queue+0x34>
8001a7cc:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:117
		}
	}
}
8001a7d0:	8fbf0024 	lw	ra,36(sp)
8001a7d4:	8fb10020 	lw	s1,32(sp)
8001a7d8:	8fb0001c 	lw	s0,28(sp)
8001a7dc:	03e00008 	jr	ra
8001a7e0:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:110
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
		if (del) {
			do {
				wakeup_wait(queue, wait, wakeup_flags, 1);
			} while ((wait = wait_queue_first(queue)) != NULL);
8001a7e4:	1040fffb 	beqz	v0,8001a7d4 <wakeup_queue+0x64>
8001a7e8:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:109
{
	wait_t *wait;
	if ((wait = wait_queue_first(queue)) != NULL) {
		if (del) {
			do {
				wakeup_wait(queue, wait, wakeup_flags, 1);
8001a7ec:	00402821 	move	a1,v0
8001a7f0:	02002021 	move	a0,s0
8001a7f4:	02203021 	move	a2,s1
8001a7f8:	0c0069c3 	jal	8001a70c <wakeup_wait>
8001a7fc:	24070001 	li	a3,1
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8001a800:	8e030004 	lw	v1,4(s0)
wait_queue_first():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:59
}

wait_t *wait_queue_first(wait_queue_t * queue)
{
	list_entry_t *le = list_next(&(queue->wait_head));
	if (le != &(queue->wait_head)) {
8001a804:	1603fff7 	bne	s0,v1,8001a7e4 <wakeup_queue+0x74>
8001a808:	2462fff4 	addiu	v0,v1,-12
wakeup_queue():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:117
			do {
				wakeup_wait(queue, wait, wakeup_flags, 0);
			} while ((wait = wait_queue_next(queue, wait)) != NULL);
		}
	}
}
8001a80c:	8fbf0024 	lw	ra,36(sp)
8001a810:	8fb10020 	lw	s1,32(sp)
8001a814:	8fb0001c 	lw	s0,28(sp)
8001a818:	03e00008 	jr	ra
8001a81c:	27bd0028 	addiu	sp,sp,40

8001a820 <wait_current_set>:
wait_current_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:121

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
8001a820:	3c028015 	lui	v0,0x8015
8001a824:	8c4377a4 	lw	v1,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:120
		}
	}
}

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
8001a828:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:121
	assert(current != NULL);
8001a82c:	1060000d 	beqz	v1,8001a864 <wait_current_set+0x44>
8001a830:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:126
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
	current->wait_state = wait_state;
	wait_queue_add(queue, wait);
}
8001a834:	8fbf0014 	lw	ra,20(sp)
wait_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:15

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
	list_init(&(wait->wait_link));
8001a838:	24a7000c 	addiu	a3,a1,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:14
#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
	wait->wakeup_flags = WT_INTERRUPTED;
8001a83c:	3c088000 	lui	t0,0x8000
wait_current_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:123

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
8001a840:	24020001 	li	v0,1
wait_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:13

#define current (pls_read(current))

void wait_init(wait_t * wait, struct proc_struct *proc)
{
	wait->proc = proc;
8001a844:	aca30000 	sw	v1,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:14
	wait->wakeup_flags = WT_INTERRUPTED;
8001a848:	aca80004 	sw	t0,4(a1)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001a84c:	aca70010 	sw	a3,16(a1)
8001a850:	aca7000c 	sw	a3,12(a1)
wait_current_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:126
	assert(current != NULL);
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
	current->wait_state = wait_state;
	wait_queue_add(queue, wait);
}
8001a854:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:123

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
	wait_init(wait, current);
	current->state = PROC_SLEEPING;
8001a858:	ac620000 	sw	v0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:125
	current->wait_state = wait_state;
	wait_queue_add(queue, wait);
8001a85c:	08006956 	j	8001a558 <wait_queue_add>
8001a860:	ac660084 	sw	a2,132(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/sync/wait.c:121
	}
}

void wait_current_set(wait_queue_t * queue, wait_t * wait, uint32_t wait_state)
{
	assert(current != NULL);
8001a864:	3c048002 	lui	a0,0x8002
8001a868:	3c068002 	lui	a2,0x8002
8001a86c:	3c078002 	lui	a3,0x8002
8001a870:	24843cd4 	addiu	a0,a0,15572
8001a874:	24050079 	li	a1,121
8001a878:	24c60e48 	addiu	a2,a2,3656
8001a87c:	0c006b13 	jal	8001ac4c <__panic>
8001a880:	24e73358 	addiu	a3,a3,13144

8001a884 <print_kerninfo>:
print_kerninfo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:20
 * address of free memory and how many memory that kernel has used.
 * */
void print_kerninfo(void)
{
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n");
8001a884:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:18
 * print_kerninfo - print the information about kernel, including the location
 * of kernel entry, the start addresses of data and text segements, the start
 * address of free memory and how many memory that kernel has used.
 * */
void print_kerninfo(void)
{
8001a888:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:20
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n");
8001a88c:	24843d54 	addiu	a0,a0,15700
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:18
 * print_kerninfo - print the information about kernel, including the location
 * of kernel entry, the start addresses of data and text segements, the start
 * address of free memory and how many memory that kernel has used.
 * */
void print_kerninfo(void)
{
8001a890:	afbf001c 	sw	ra,28(sp)
8001a894:	afb20018 	sw	s2,24(sp)
8001a898:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:20
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n");
8001a89c:	0c007aa6 	jal	8001ea98 <kprintf>
8001a8a0:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:21
	kprintf("  entry  0x");
8001a8a4:	3c048002 	lui	a0,0x8002
8001a8a8:	0c007aa6 	jal	8001ea98 <kprintf>
8001a8ac:	24843d70 	addiu	a0,a0,15728
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:22
	printhex((unsigned int)kern_init);
8001a8b0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:23
	kprintf(" (phys)\n");
8001a8b4:	3c108002 	lui	s0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:22
void print_kerninfo(void)
{
	extern char etext[], edata[], end[], kern_init[];
	kprintf("Special kernel symbols:\n");
	kprintf("  entry  0x");
	printhex((unsigned int)kern_init);
8001a8b8:	0c007ab2 	jal	8001eac8 <printhex>
8001a8bc:	2484bbb0 	addiu	a0,a0,-17488
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:23
	kprintf(" (phys)\n");
8001a8c0:	0c007aa6 	jal	8001ea98 <kprintf>
8001a8c4:	26043d7c 	addiu	a0,s0,15740
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:24
	kprintf("  etext\t0x");
8001a8c8:	3c048002 	lui	a0,0x8002
8001a8cc:	24843d88 	addiu	a0,a0,15752
8001a8d0:	0c007aa6 	jal	8001ea98 <kprintf>
8001a8d4:	3c118002 	lui	s1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:25
	printhex((unsigned int)etext);
8001a8d8:	0c007ab2 	jal	8001eac8 <printhex>
8001a8dc:	26245400 	addiu	a0,s1,21504
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:26
	kprintf(" (phys)\n");
8001a8e0:	0c007aa6 	jal	8001ea98 <kprintf>
8001a8e4:	26043d7c 	addiu	a0,s0,15740
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:27
	kprintf("  edata\t0x");
8001a8e8:	3c048002 	lui	a0,0x8002
8001a8ec:	0c007aa6 	jal	8001ea98 <kprintf>
8001a8f0:	24843d94 	addiu	a0,a0,15764
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:28
	printhex((unsigned int)edata);
8001a8f4:	3c048015 	lui	a0,0x8015
8001a8f8:	0c007ab2 	jal	8001eac8 <printhex>
8001a8fc:	24843450 	addiu	a0,a0,13392
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:29
	kprintf(" (phys)\n");
8001a900:	0c007aa6 	jal	8001ea98 <kprintf>
8001a904:	26043d7c 	addiu	a0,s0,15740
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:30
	kprintf("  end\t0x");
8001a908:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:31
	printhex((unsigned int)end);
8001a90c:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:30
	printhex((unsigned int)etext);
	kprintf(" (phys)\n");
	kprintf("  edata\t0x");
	printhex((unsigned int)edata);
	kprintf(" (phys)\n");
	kprintf("  end\t0x");
8001a910:	0c007aa6 	jal	8001ea98 <kprintf>
8001a914:	24843da0 	addiu	a0,a0,15776
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:31
	printhex((unsigned int)end);
8001a918:	0c007ab2 	jal	8001eac8 <printhex>
8001a91c:	264477c0 	addiu	a0,s2,30656
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:32
	kprintf(" (phys)\n");
8001a920:	0c007aa6 	jal	8001ea98 <kprintf>
8001a924:	26043d7c 	addiu	a0,s0,15740
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:33
	kprintf("Kernel executable memory footprint: ");
8001a928:	3c048002 	lui	a0,0x8002
8001a92c:	0c007aa6 	jal	8001ea98 <kprintf>
8001a930:	24843dac 	addiu	a0,a0,15788
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:34
	printbase10((end - etext + 1023) >> 10);
8001a934:	264477c0 	addiu	a0,s2,30656
8001a938:	26315400 	addiu	s1,s1,21504
8001a93c:	248403ff 	addiu	a0,a0,1023
8001a940:	00912023 	subu	a0,a0,s1
8001a944:	0c007ac5 	jal	8001eb14 <printbase10>
8001a948:	00042283 	sra	a0,a0,0xa
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:36
	kprintf("KB\n");
}
8001a94c:	8fbf001c 	lw	ra,28(sp)
8001a950:	8fb20018 	lw	s2,24(sp)
8001a954:	8fb10014 	lw	s1,20(sp)
8001a958:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:35
	kprintf("  end\t0x");
	printhex((unsigned int)end);
	kprintf(" (phys)\n");
	kprintf("Kernel executable memory footprint: ");
	printbase10((end - etext + 1023) >> 10);
	kprintf("KB\n");
8001a95c:	3c048002 	lui	a0,0x8002
8001a960:	24843dd4 	addiu	a0,a0,15828
8001a964:	08007aa6 	j	8001ea98 <kprintf>
8001a968:	27bd0020 	addiu	sp,sp,32

8001a96c <print_debuginfo>:
print_debuginfo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:44
 * print_debuginfo - read and print the stat information for the address @eip,
 * and info.eip_fn_addr should be the first address of the related function.
 * */
void print_debuginfo(uintptr_t eip)
{
	panic("Unimpl");
8001a96c:	3c048002 	lui	a0,0x8002
8001a970:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:43
/* *
 * print_debuginfo - read and print the stat information for the address @eip,
 * and info.eip_fn_addr should be the first address of the related function.
 * */
void print_debuginfo(uintptr_t eip)
{
8001a974:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:44
	panic("Unimpl");
8001a978:	24843dd8 	addiu	a0,a0,15832
8001a97c:	2405002c 	li	a1,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:43
/* *
 * print_debuginfo - read and print the stat information for the address @eip,
 * and info.eip_fn_addr should be the first address of the related function.
 * */
void print_debuginfo(uintptr_t eip)
{
8001a980:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:44
	panic("Unimpl");
8001a984:	0c006b13 	jal	8001ac4c <__panic>
8001a988:	24c63de4 	addiu	a2,a2,15844

8001a98c <print_stackframe>:
print_stackframe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:84
 * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
 * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
 * */
void print_stackframe(void)
{
	panic("Unimpl");
8001a98c:	3c048002 	lui	a0,0x8002
8001a990:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:83
 *
 * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
 * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
 * */
void print_stackframe(void)
{
8001a994:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:84
	panic("Unimpl");
8001a998:	24843dd8 	addiu	a0,a0,15832
8001a99c:	24050054 	li	a1,84
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:83
 *
 * Note that, the length of ebp-chain is limited. In boot/bootasm.S, before jumping
 * to the kernel entry, the value of ebp has been set to zero, that's the boundary.
 * */
void print_stackframe(void)
{
8001a9a0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/kdebug.c:84
	panic("Unimpl");
8001a9a4:	0c006b13 	jal	8001ac4c <__panic>
8001a9a8:	24c63de4 	addiu	a2,a2,15844

8001a9ac <mon_kerninfo>:
mon_kerninfo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:121
/* *
 * mon_kerninfo - call print_kerninfo in kern/debug/kdebug.c to
 * print the memory occupancy in kernel.
 * */
int mon_kerninfo(int argc, char **argv, struct trapframe *tf)
{
8001a9ac:	27bdffe8 	addiu	sp,sp,-24
8001a9b0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:122
	print_kerninfo();
8001a9b4:	0c006a21 	jal	8001a884 <print_kerninfo>
8001a9b8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:124
	return 0;
}
8001a9bc:	8fbf0014 	lw	ra,20(sp)
8001a9c0:	00001021 	move	v0,zero
8001a9c4:	03e00008 	jr	ra
8001a9c8:	27bd0018 	addiu	sp,sp,24

8001a9cc <mon_help>:
mon_help():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:105
	}
}

/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
8001a9cc:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:108
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a9d0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:105
	}
}

/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
8001a9d4:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:108
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a9d8:	24843dec 	addiu	a0,a0,15852
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:109
		kprintf(" - ");
8001a9dc:	3c118002 	lui	s1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:105
	}
}

/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
8001a9e0:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:108
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001a9e4:	0c007aa6 	jal	8001ea98 <kprintf>
8001a9e8:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:109
		kprintf(" - ");
8001a9ec:	0c007aa6 	jal	8001ea98 <kprintf>
8001a9f0:	26243df4 	addiu	a0,s1,15860
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:110
		kprintf(commands[i].desc);
8001a9f4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:111
		kprintf("\n");
8001a9f8:	3c108002 	lui	s0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:110
{
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
		kprintf(" - ");
		kprintf(commands[i].desc);
8001a9fc:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa00:	24843df8 	addiu	a0,a0,15864
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:111
		kprintf("\n");
8001aa04:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa08:	26043f4c 	addiu	a0,s0,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:108
/* mon_help - print the information about mon_* functions */
int mon_help(int argc, char **argv, struct trapframe *tf)
{
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		kprintf(commands[i].name);
8001aa0c:	3c048002 	lui	a0,0x8002
8001aa10:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa14:	24843e18 	addiu	a0,a0,15896
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:109
		kprintf(" - ");
8001aa18:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa1c:	26243df4 	addiu	a0,s1,15860
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:110
		kprintf(commands[i].desc);
8001aa20:	3c048002 	lui	a0,0x8002
8001aa24:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa28:	24843e24 	addiu	a0,a0,15908
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:111
		kprintf("\n");
8001aa2c:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa30:	26043f4c 	addiu	a0,s0,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:114
	}
	return 0;
}
8001aa34:	8fbf001c 	lw	ra,28(sp)
8001aa38:	00001021 	move	v0,zero
8001aa3c:	8fb10018 	lw	s1,24(sp)
8001aa40:	8fb00014 	lw	s0,20(sp)
8001aa44:	03e00008 	jr	ra
8001aa48:	27bd0020 	addiu	sp,sp,32

8001aa4c <monitor>:
monitor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:85
}

/***** Implementations of basic kernel monitor commands *****/

void monitor(struct trapframe *tf)
{
8001aa4c:	27bdff78 	addiu	sp,sp,-136
8001aa50:	afb7007c 	sw	s7,124(sp)
8001aa54:	0080b821 	move	s7,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:86
	kprintf("Welcome to the kernel debug monitor!!\n");
8001aa58:	3c048002 	lui	a0,0x8002
8001aa5c:	24843e4c 	addiu	a0,a0,15948
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:85
}

/***** Implementations of basic kernel monitor commands *****/

void monitor(struct trapframe *tf)
{
8001aa60:	afbf0084 	sw	ra,132(sp)
8001aa64:	afbe0080 	sw	s8,128(sp)
8001aa68:	afb60078 	sw	s6,120(sp)
8001aa6c:	afb50074 	sw	s5,116(sp)
8001aa70:	afb40070 	sw	s4,112(sp)
8001aa74:	afb3006c 	sw	s3,108(sp)
8001aa78:	afb20068 	sw	s2,104(sp)
8001aa7c:	afb10064 	sw	s1,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:86
	kprintf("Welcome to the kernel debug monitor!!\n");
8001aa80:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa84:	afb00060 	sw	s0,96(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:87
	kprintf("Type 'help' for a list of commands.\n");
8001aa88:	3c048002 	lui	a0,0x8002
8001aa8c:	0c007aa6 	jal	8001ea98 <kprintf>
8001aa90:	24843e74 	addiu	a0,a0,15988
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:89

	if (tf != NULL) {
8001aa94:	12e00004 	beqz	s7,8001aaa8 <monitor+0x5c>
8001aa98:	3c028002 	lui	v0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:90
		print_trapframe(tf);
8001aa9c:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001aaa0:	02e02021 	move	a0,s7
8001aaa4:	3c028002 	lui	v0,0x8002
8001aaa8:	24420204 	addiu	v0,v0,516
parse():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aaac:	3c108002 	lui	s0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:49
		if (*buf == '\0') {
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
8001aab0:	3c128002 	lui	s2,0x8002
runcmd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:76
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
			return commands[i].func(argc - 1, argv + 1, tf);
		}
	}
	kprintf("Unknown command '");
8001aab4:	3c168002 	lui	s6,0x8002
8001aab8:	3c118002 	lui	s1,0x8002
8001aabc:	3c138002 	lui	s3,0x8002
8001aac0:	afa20054 	sw	v0,84(sp)
8001aac4:	27be0014 	addiu	s8,sp,20
parse():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aac8:	26103ea0 	addiu	s0,s0,16032
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:49
		if (*buf == '\0') {
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
8001aacc:	26523ea8 	addiu	s2,s2,16040
runcmd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:72
	if (!argc) {
		return 0;
	}
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
8001aad0:	3c148002 	lui	s4,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:76
			return commands[i].func(argc - 1, argv + 1, tf);
		}
	}
	kprintf("Unknown command '");
8001aad4:	26d63ec0 	addiu	s6,s6,16064
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:78
	kprintf(argv[0]);
	kprintf("'\n");
8001aad8:	3c158002 	lui	s5,0x8002
monitor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:95
		print_trapframe(tf);
	}

	char *buf;
	while (1) {
		if ((buf = readline("K> ")) != NULL) {
8001aadc:	0c0058d3 	jal	8001634c <readline>
8001aae0:	26243e9c 	addiu	a0,s1,16028
8001aae4:	1040fffd 	beqz	v0,8001aadc <monitor+0x90>
8001aae8:	00401821 	move	v1,v0
8001aaec:	90450000 	lbu	a1,0(v0)
8001aaf0:	afa00050 	sw	zero,80(sp)
parse():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001aaf4:	14a00015 	bnez	a1,8001ab4c <monitor+0x100>
8001aaf8:	02002021 	move	a0,s0
runcmd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:67
 * */
static int runcmd(char *buf, struct trapframe *tf)
{
	char *argv[MAXARGS];
	int argc = parse(buf, argv);
	if (!argc) {
8001aafc:	8fa30050 	lw	v1,80(sp)
8001ab00:	1060fff6 	beqz	v1,8001aadc <monitor+0x90>
8001ab04:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:72
		return 0;
	}
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
8001ab08:	0c005bc0 	jal	80016f00 <strcmp>
8001ab0c:	26643dec 	addiu	a0,s3,15852
8001ab10:	10400036 	beqz	v0,8001abec <monitor+0x1a0>
8001ab14:	00001821 	move	v1,zero
8001ab18:	8fa50010 	lw	a1,16(sp)
8001ab1c:	0c005bc0 	jal	80016f00 <strcmp>
8001ab20:	26843e18 	addiu	a0,s4,15896
8001ab24:	10400031 	beqz	v0,8001abec <monitor+0x1a0>
8001ab28:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:76
			return commands[i].func(argc - 1, argv + 1, tf);
		}
	}
	kprintf("Unknown command '");
8001ab2c:	0c007aa6 	jal	8001ea98 <kprintf>
8001ab30:	02c02021 	move	a0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:77
	kprintf(argv[0]);
8001ab34:	0c007aa6 	jal	8001ea98 <kprintf>
8001ab38:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:78
	kprintf("'\n");
8001ab3c:	0c007aa6 	jal	8001ea98 <kprintf>
8001ab40:	26a43ed4 	addiu	a0,s5,16084
8001ab44:	08006ab7 	j	8001aadc <monitor+0x90>
8001ab48:	00000000 	nop
parse():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:41
static int parse(char *buf, char **argv)
{
	int argc = 0;
	while (1) {
		// find global whitespace
		while (*buf != '\0' && strchr(WHITESPACE, *buf) != NULL) {
8001ab4c:	0c005be7 	jal	80016f9c <strchr>
8001ab50:	afa30058 	sw	v1,88(sp)
8001ab54:	10400005 	beqz	v0,8001ab6c <monitor+0x120>
8001ab58:	8fa30058 	lw	v1,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:42
			*buf++ = '\0';
8001ab5c:	a0600000 	sb	zero,0(v1)
8001ab60:	90650001 	lbu	a1,1(v1)
8001ab64:	08006abd 	j	8001aaf4 <monitor+0xa8>
8001ab68:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:44
		}
		if (*buf == '\0') {
8001ab6c:	90620000 	lbu	v0,0(v1)
8001ab70:	1040ffe2 	beqz	v0,8001aafc <monitor+0xb0>
8001ab74:	8fa40050 	lw	a0,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:48
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
8001ab78:	2402000f 	li	v0,15
8001ab7c:	10820017 	beq	a0,v0,8001abdc <monitor+0x190>
8001ab80:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:51
			kprintf("Too many arguments.\n");
		}
		argv[argc++] = buf;
8001ab84:	8fa40050 	lw	a0,80(sp)
8001ab88:	00041080 	sll	v0,a0,0x2
8001ab8c:	27a40010 	addiu	a0,sp,16
8001ab90:	00821021 	addu	v0,a0,v0
8001ab94:	ac430000 	sw	v1,0(v0)
8001ab98:	8fa20050 	lw	v0,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:52
		while (*buf != '\0' && strchr(WHITESPACE, *buf) == NULL) {
8001ab9c:	90650000 	lbu	a1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:51
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
		}
		argv[argc++] = buf;
8001aba0:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:52
		while (*buf != '\0' && strchr(WHITESPACE, *buf) == NULL) {
8001aba4:	14a00006 	bnez	a1,8001abc0 <monitor+0x174>
8001aba8:	afa20050 	sw	v0,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:67
 * */
static int runcmd(char *buf, struct trapframe *tf)
{
	char *argv[MAXARGS];
	int argc = parse(buf, argv);
	if (!argc) {
8001abac:	08006ac0 	j	8001ab00 <monitor+0xb4>
8001abb0:	8fa30050 	lw	v1,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:52
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
		}
		argv[argc++] = buf;
		while (*buf != '\0' && strchr(WHITESPACE, *buf) == NULL) {
8001abb4:	90650001 	lbu	a1,1(v1)
8001abb8:	10a0ffd0 	beqz	a1,8001aafc <monitor+0xb0>
8001abbc:	24630001 	addiu	v1,v1,1
8001abc0:	02002021 	move	a0,s0
8001abc4:	0c005be7 	jal	80016f9c <strchr>
8001abc8:	afa30058 	sw	v1,88(sp)
8001abcc:	1040fff9 	beqz	v0,8001abb4 <monitor+0x168>
8001abd0:	8fa30058 	lw	v1,88(sp)
8001abd4:	08006abd 	j	8001aaf4 <monitor+0xa8>
8001abd8:	90650000 	lbu	a1,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:49
		if (*buf == '\0') {
			break;
		}
		// save and scan past next arg
		if (argc == MAXARGS - 1) {
			kprintf("Too many arguments.\n");
8001abdc:	0c007aa6 	jal	8001ea98 <kprintf>
8001abe0:	02402021 	move	a0,s2
8001abe4:	08006ae1 	j	8001ab84 <monitor+0x138>
8001abe8:	8fa30058 	lw	v1,88(sp)
runcmd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:73
		return 0;
	}
	int i;
	for (i = 0; i < NCOMMANDS; i++) {
		if (!strcmp(commands[i].name, argv[0])) {
			return commands[i].func(argc - 1, argv + 1, tf);
8001abec:	00031080 	sll	v0,v1,0x2
8001abf0:	00031900 	sll	v1,v1,0x4
8001abf4:	00621023 	subu	v0,v1,v0
8001abf8:	8fa30054 	lw	v1,84(sp)
8001abfc:	03c02821 	move	a1,s8
8001ac00:	02e03021 	move	a2,s7
8001ac04:	00621021 	addu	v0,v1,v0
8001ac08:	8fa30050 	lw	v1,80(sp)
8001ac0c:	8c420008 	lw	v0,8(v0)
8001ac10:	0040f809 	jalr	v0
8001ac14:	2464ffff 	addiu	a0,v1,-1
monitor():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:96
	}

	char *buf;
	while (1) {
		if ((buf = readline("K> ")) != NULL) {
			if (runcmd(buf, tf) < 0) {
8001ac18:	0441ffb0 	bgez	v0,8001aadc <monitor+0x90>
8001ac1c:	8fbf0084 	lw	ra,132(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/monitor.c:101
				break;
			}
		}
	}
}
8001ac20:	8fbe0080 	lw	s8,128(sp)
8001ac24:	8fb7007c 	lw	s7,124(sp)
8001ac28:	8fb60078 	lw	s6,120(sp)
8001ac2c:	8fb50074 	lw	s5,116(sp)
8001ac30:	8fb40070 	lw	s4,112(sp)
8001ac34:	8fb3006c 	lw	s3,108(sp)
8001ac38:	8fb20068 	lw	s2,104(sp)
8001ac3c:	8fb10064 	lw	s1,100(sp)
8001ac40:	8fb00060 	lw	s0,96(sp)
8001ac44:	03e00008 	jr	ra
8001ac48:	27bd0088 	addiu	sp,sp,136

8001ac4c <__panic>:
__panic():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:14
 * __panic - __panic is called on unresolvable fatal errors. it prints
 * "panic: 'message'", and then enters the kernel monitor.
 * */
void __panic(const char *file, int line, const char *fmt, ...)
{
	if (is_panic) {
8001ac4c:	3c028015 	lui	v0,0x8015
8001ac50:	8c436d08 	lw	v1,27912(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:13
/* *
 * __panic - __panic is called on unresolvable fatal errors. it prints
 * "panic: 'message'", and then enters the kernel monitor.
 * */
void __panic(const char *file, int line, const char *fmt, ...)
{
8001ac54:	27bdffe0 	addiu	sp,sp,-32
8001ac58:	afb00018 	sw	s0,24(sp)
8001ac5c:	afbf001c 	sw	ra,28(sp)
8001ac60:	00a04021 	move	t0,a1
8001ac64:	afa7002c 	sw	a3,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:14
	if (is_panic) {
8001ac68:	10600007 	beqz	v1,8001ac88 <__panic+0x3c>
8001ac6c:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:28
	vkprintf(fmt, ap);
	kprintf("\n");
	va_end(ap);

panic_dead:
	intr_disable();
8001ac70:	0c006d0c 	jal	8001b430 <intr_disable>
8001ac74:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:30
	while (1) {
		monitor(NULL);
8001ac78:	0c006a93 	jal	8001aa4c <monitor>
8001ac7c:	00002021 	move	a0,zero
8001ac80:	08006b1e 	j	8001ac78 <__panic+0x2c>
8001ac84:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:17
void __panic(const char *file, int line, const char *fmt, ...)
{
	if (is_panic) {
		goto panic_dead;
	}
	is_panic = 1;
8001ac88:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:22

	// print the 'message'
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel panic at %s:%d:\n    ", file, line);
8001ac8c:	00802821 	move	a1,a0
8001ac90:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:17
void __panic(const char *file, int line, const char *fmt, ...)
{
	if (is_panic) {
		goto panic_dead;
	}
	is_panic = 1;
8001ac94:	ac436d08 	sw	v1,27912(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:22

	// print the 'message'
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel panic at %s:%d:\n    ", file, line);
8001ac98:	01003021 	move	a2,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:21
	}
	is_panic = 1;

	// print the 'message'
	va_list ap;
	va_start(ap, fmt);
8001ac9c:	27a2002c 	addiu	v0,sp,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:22
	kprintf("kernel panic at %s:%d:\n    ", file, line);
8001aca0:	24843ed8 	addiu	a0,a0,16088
8001aca4:	0c007aa6 	jal	8001ea98 <kprintf>
8001aca8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:23
	vkprintf(fmt, ap);
8001acac:	8fa50010 	lw	a1,16(sp)
8001acb0:	0c007a97 	jal	8001ea5c <vkprintf>
8001acb4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:24
	kprintf("\n");
8001acb8:	3c048002 	lui	a0,0x8002
8001acbc:	0c007aa6 	jal	8001ea98 <kprintf>
8001acc0:	24843f4c 	addiu	a0,a0,16204
8001acc4:	08006b1c 	j	8001ac70 <__panic+0x24>
8001acc8:	00000000 	nop

8001accc <__warn>:
__warn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001accc:	27bdffe0 	addiu	sp,sp,-32
8001acd0:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001acd4:	00802821 	move	a1,a0
8001acd8:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001acdc:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001ace0:	24843ef4 	addiu	a0,a0,16116
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001ace4:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001ace8:	00403021 	move	a2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:38

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
	va_list ap;
	va_start(ap, fmt);
8001acec:	27a2002c 	addiu	v0,sp,44
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:36
	}
}

/* __warn - like panic, but don't */
void __warn(const char *file, int line, const char *fmt, ...)
{
8001acf0:	afbf001c 	sw	ra,28(sp)
8001acf4:	afa7002c 	sw	a3,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:39
	va_list ap;
	va_start(ap, fmt);
	kprintf("kernel warning at %s:%d:\n    ", file, line);
8001acf8:	0c007aa6 	jal	8001ea98 <kprintf>
8001acfc:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:40
	vkprintf(fmt, ap);
8001ad00:	8fa50010 	lw	a1,16(sp)
8001ad04:	0c007a97 	jal	8001ea5c <vkprintf>
8001ad08:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:41
	kprintf("\n");
8001ad0c:	3c048002 	lui	a0,0x8002
8001ad10:	0c007aa6 	jal	8001ea98 <kprintf>
8001ad14:	24843f4c 	addiu	a0,a0,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:43
	va_end(ap);
}
8001ad18:	8fbf001c 	lw	ra,28(sp)
8001ad1c:	8fb00018 	lw	s0,24(sp)
8001ad20:	03e00008 	jr	ra
8001ad24:	27bd0020 	addiu	sp,sp,32

8001ad28 <is_kernel_panic>:
is_kernel_panic():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:47

bool is_kernel_panic(void)
{
	return is_panic;
8001ad28:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/debug/panic.c:48
}
8001ad2c:	03e00008 	jr	ra
8001ad30:	8c426d08 	lw	v0,27912(v0)

8001ad34 <clock_int_handler>:
clock_int_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:21
	write_c0_compare(counter);
}

int clock_int_handler(void *data)
{
	ticks++;
8001ad34:	3c028015 	lui	v0,0x8015
8001ad38:	8c4377ac 	lw	v1,30636(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:20
	counter += TIMER0_INTERVAL;
	write_c0_compare(counter);
}

int clock_int_handler(void *data)
{
8001ad3c:	27bdffe8 	addiu	sp,sp,-24
8001ad40:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:21
	ticks++;
8001ad44:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:24
//  if( (ticks & 0x1F) == 0)
//    cons_putc('A');
	run_timer_list();
8001ad48:	0c000650 	jal	80001940 <run_timer_list>
8001ad4c:	ac4377ac 	sw	v1,30636(v0)
reload_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:14

#define TIMER0_INTERVAL  1000000

static void reload_timer()
{
	uint32_t counter = read_c0_count();
8001ad50:	40024800 	mfc0	v0,c0_count
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:15
	counter += TIMER0_INTERVAL;
8001ad54:	3c03000f 	lui	v1,0xf
8001ad58:	24634240 	addiu	v1,v1,16960
8001ad5c:	00431021 	addu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:16
	write_c0_compare(counter);
8001ad60:	40825800 	mtc0	v0,c0_compare
clock_int_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:27
//  if( (ticks & 0x1F) == 0)
//    cons_putc('A');
	run_timer_list();
	reload_timer();
	return 0;
}
8001ad64:	8fbf0014 	lw	ra,20(sp)
8001ad68:	00001021 	move	v0,zero
8001ad6c:	03e00008 	jr	ra
8001ad70:	27bd0018 	addiu	sp,sp,24

8001ad74 <clock_init>:
clock_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:30

void clock_init(void)
{
8001ad74:	27bdffe8 	addiu	sp,sp,-24
8001ad78:	afbf0014 	sw	ra,20(sp)
reload_timer():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:14

#define TIMER0_INTERVAL  1000000

static void reload_timer()
{
	uint32_t counter = read_c0_count();
8001ad7c:	40024800 	mfc0	v0,c0_count
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:15
	counter += TIMER0_INTERVAL;
8001ad80:	3c03000f 	lui	v1,0xf
8001ad84:	24634240 	addiu	v1,v1,16960
8001ad88:	00431021 	addu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:16
	write_c0_compare(counter);
8001ad8c:	40825800 	mtc0	v0,c0_compare
clock_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:32
}

void clock_init(void)
{
	reload_timer();
	pic_enable(TIMER0_IRQ);
8001ad90:	0c006d11 	jal	8001b444 <pic_enable>
8001ad94:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:34
	kprintf("++setup timer interrupts\n");
}
8001ad98:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/clock.c:33

void clock_init(void)
{
	reload_timer();
	pic_enable(TIMER0_IRQ);
	kprintf("++setup timer interrupts\n");
8001ad9c:	3c048002 	lui	a0,0x8002
8001ada0:	24843f14 	addiu	a0,a0,16148
8001ada4:	08007aa6 	j	8001ea98 <kprintf>
8001ada8:	27bd0018 	addiu	sp,sp,24

8001adac <serial_putc_sub>:
inw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
	*((volatile uint8_t *)port) = data;
}

static inline uint32_t inw(uint32_t port)
{
	uint32_t data = *((volatile uintptr_t *)port);
8001adac:	3c02b040 	lui	v0,0xb040
8001adb0:	8c421004 	lw	v0,4100(v0)
serial_putc_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:95

static void serial_putc_sub(int c)
{

	//TODO
	if ((inw(COM1 + COM_IER) & COM_IER_RDI) == 0) delay();
8001adb4:	30420001 	andi	v0,v0,0x1
8001adb8:	1440000d 	bnez	v0,8001adf0 <serial_putc_sub+0x44>
8001adbc:	27bdfff8 	addiu	sp,sp,-8
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001adc0:	afa00000 	sw	zero,0(sp)
8001adc4:	8fa20000 	lw	v0,0(sp)
8001adc8:	2c4203e8 	sltiu	v0,v0,1000
8001adcc:	10400009 	beqz	v0,8001adf4 <serial_putc_sub+0x48>
8001add0:	3c02b040 	lui	v0,0xb040
8001add4:	8fa20000 	lw	v0,0(sp)
8001add8:	24420001 	addiu	v0,v0,1
8001addc:	afa20000 	sw	v0,0(sp)
8001ade0:	8fa20000 	lw	v0,0(sp)
8001ade4:	2c4203e8 	sltiu	v0,v0,1000
8001ade8:	1440fffa 	bnez	v0,8001add4 <serial_putc_sub+0x28>
8001adec:	00000000 	nop
outw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
	return data;
}

static inline void outw(uint32_t port, uint32_t data)
{
	*((volatile uintptr_t *)port) = data;
8001adf0:	3c02b040 	lui	v0,0xb040
serial_putc_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:97
{

	//TODO
	if ((inw(COM1 + COM_IER) & COM_IER_RDI) == 0) delay();
	//delay();
	outw(COM1 + COM_THR, c & 0xFF);
8001adf4:	308400ff 	andi	a0,a0,0xff
outw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
8001adf8:	ac441000 	sw	a0,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001adfc:	afa00000 	sw	zero,0(sp)
8001ae00:	8fa20000 	lw	v0,0(sp)
8001ae04:	2c4203e8 	sltiu	v0,v0,1000
8001ae08:	10400008 	beqz	v0,8001ae2c <serial_putc_sub+0x80>
8001ae0c:	00000000 	nop
8001ae10:	8fa20000 	lw	v0,0(sp)
8001ae14:	24420001 	addiu	v0,v0,1
8001ae18:	afa20000 	sw	v0,0(sp)
8001ae1c:	8fa20000 	lw	v0,0(sp)
8001ae20:	2c4203e8 	sltiu	v0,v0,1000
8001ae24:	1440fffa 	bnez	v0,8001ae10 <serial_putc_sub+0x64>
8001ae28:	00000000 	nop
serial_putc_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:100
	if ((inw(COM1 + COM_IER) & COM_IER_RDI) == 0) delay();
	//delay();
	outw(COM1 + COM_THR, c & 0xFF);
	delay();

}
8001ae2c:	03e00008 	jr	ra
8001ae30:	27bd0008 	addiu	sp,sp,8

8001ae34 <delay>:
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:13
#include <memlayout.h>
#include <sync.h>
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
8001ae34:	27bdfff8 	addiu	sp,sp,-8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ae38:	afa00000 	sw	zero,0(sp)
8001ae3c:	8fa20000 	lw	v0,0(sp)
8001ae40:	2c4203e8 	sltiu	v0,v0,1000
8001ae44:	10400008 	beqz	v0,8001ae68 <delay+0x34>
8001ae48:	00000000 	nop
8001ae4c:	8fa20000 	lw	v0,0(sp)
8001ae50:	24420001 	addiu	v0,v0,1
8001ae54:	afa20000 	sw	v0,0(sp)
8001ae58:	8fa20000 	lw	v0,0(sp)
8001ae5c:	2c4203e8 	sltiu	v0,v0,1000
8001ae60:	1440fffa 	bnez	v0,8001ae4c <delay+0x18>
8001ae64:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:16
}
8001ae68:	03e00008 	jr	ra
8001ae6c:	27bd0008 	addiu	sp,sp,8

8001ae70 <serial_intr>:
serial_intr():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:199
}

/* serial_intr - try to feed input characters from serial port */
void serial_intr(void)
{
	if (serial_exists) {
8001ae70:	3c028015 	lui	v0,0x8015
8001ae74:	8c426d0c 	lw	v0,27916(v0)
8001ae78:	1040003e 	beqz	v0,8001af74 <serial_intr+0x104>
8001ae7c:	27bdfff8 	addiu	sp,sp,-8
cons_intr():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001ae80:	3c068015 	lui	a2,0x8015
inw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
	*((volatile uint8_t *)port) = data;
}

static inline uint32_t inw(uint32_t port)
{
	uint32_t data = *((volatile uintptr_t *)port);
8001ae84:	3c04b040 	lui	a0,0xb040
serial_proc_data():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:127
		return -1;
	delay();
	c = inw(COM1 + COM_RBR) & 0xFF;
	delay();

	if (c == 127) {
8001ae88:	2405007f 	li	a1,127
cons_intr():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001ae8c:	24c66d10 	addiu	a2,a2,27920
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:189
			if (cons.wpos == CONSBUFSIZE) {
8001ae90:	24070200 	li	a3,512
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001ae94:	afa00000 	sw	zero,0(sp)
8001ae98:	8fa20000 	lw	v0,0(sp)
8001ae9c:	2c4203e8 	sltiu	v0,v0,1000
8001aea0:	10400008 	beqz	v0,8001aec4 <serial_intr+0x54>
8001aea4:	00000000 	nop
8001aea8:	8fa20000 	lw	v0,0(sp)
8001aeac:	24420001 	addiu	v0,v0,1
8001aeb0:	afa20000 	sw	v0,0(sp)
8001aeb4:	8fa20000 	lw	v0,0(sp)
8001aeb8:	2c4203e8 	sltiu	v0,v0,1000
8001aebc:	1440fffa 	bnez	v0,8001aea8 <serial_intr+0x38>
8001aec0:	00000000 	nop
inw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
8001aec4:	8c821014 	lw	v0,4116(a0)
serial_proc_data():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:121
{
	int c;

	//TODO
	delay();
	if ((inw(COM1 + COM_LSR) & COM_LSR_DATA) == 0)
8001aec8:	30420001 	andi	v0,v0,0x1
8001aecc:	10400029 	beqz	v0,8001af74 <serial_intr+0x104>
8001aed0:	00000000 	nop
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001aed4:	afa00000 	sw	zero,0(sp)
8001aed8:	8fa20000 	lw	v0,0(sp)
8001aedc:	2c4203e8 	sltiu	v0,v0,1000
8001aee0:	10400008 	beqz	v0,8001af04 <serial_intr+0x94>
8001aee4:	00000000 	nop
8001aee8:	8fa20000 	lw	v0,0(sp)
8001aeec:	24420001 	addiu	v0,v0,1
8001aef0:	afa20000 	sw	v0,0(sp)
8001aef4:	8fa20000 	lw	v0,0(sp)
8001aef8:	2c4203e8 	sltiu	v0,v0,1000
8001aefc:	1440fffa 	bnez	v0,8001aee8 <serial_intr+0x78>
8001af00:	00000000 	nop
inw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:72
8001af04:	8c831000 	lw	v1,4096(a0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
8001af08:	afa00000 	sw	zero,0(sp)
8001af0c:	8fa20000 	lw	v0,0(sp)
8001af10:	2c4203e8 	sltiu	v0,v0,1000
8001af14:	10400008 	beqz	v0,8001af38 <serial_intr+0xc8>
8001af18:	306300ff 	andi	v1,v1,0xff
8001af1c:	8fa20000 	lw	v0,0(sp)
8001af20:	24420001 	addiu	v0,v0,1
8001af24:	afa20000 	sw	v0,0(sp)
8001af28:	8fa20000 	lw	v0,0(sp)
8001af2c:	2c4203e8 	sltiu	v0,v0,1000
8001af30:	1440fffa 	bnez	v0,8001af1c <serial_intr+0xac>
8001af34:	00000000 	nop
serial_proc_data():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:127
		return -1;
	delay();
	c = inw(COM1 + COM_RBR) & 0xFF;
	delay();

	if (c == 127) {
8001af38:	50650005 	beql	v1,a1,8001af50 <serial_intr+0xe0>
8001af3c:	24030008 	li	v1,8
cons_intr():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:187
 * */
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
8001af40:	1060ffd4 	beqz	v1,8001ae94 <serial_intr+0x24>
8001af44:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:188
			cons.buf[cons.wpos++] = c;
8001af48:	08006bd5 	j	8001af54 <serial_intr+0xe4>
8001af4c:	8cc80204 	lw	t0,516(a2)
8001af50:	8cc80204 	lw	t0,516(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af54:	00005021 	move	t2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001af58:	25020001 	addiu	v0,t0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af5c:	00474826 	xor	t1,v0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001af60:	01064021 	addu	t0,t0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af64:	0049500b 	movn	t2,v0,t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:188
static void cons_intr(int (*proc) (void))
{
	int c;
	while ((c = (*proc) ()) != -1) {
		if (c != 0) {
			cons.buf[cons.wpos++] = c;
8001af68:	a1030000 	sb	v1,0(t0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:190
			if (cons.wpos == CONSBUFSIZE) {
				cons.wpos = 0;
8001af6c:	08006ba5 	j	8001ae94 <serial_intr+0x24>
8001af70:	acca0204 	sw	t2,516(a2)
serial_intr():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:202
void serial_intr(void)
{
	if (serial_exists) {
		cons_intr(serial_proc_data);
	}
}
8001af74:	03e00008 	jr	ra
8001af78:	27bd0008 	addiu	sp,sp,8

8001af7c <cons_init>:
cons_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:206

/* cons_init - initializes the console devices */
void cons_init(void)
{
8001af7c:	27bdffe0 	addiu	sp,sp,-32
8001af80:	afb00018 	sw	s0,24(sp)
serial_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:58
static bool serial_exists = 0;

static void serial_init(void)
{
	volatile unsigned char *uart = (unsigned char *)COM1;
	if (serial_exists)
8001af84:	3c108015 	lui	s0,0x8015
8001af88:	8e026d0c 	lw	v0,27916(s0)
8001af8c:	1440007b 	bnez	v0,8001b17c <cons_init+0x200>
8001af90:	afbf001c 	sw	ra,28(sp)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001af94:	afa00010 	sw	zero,16(sp)
8001af98:	8fa20010 	lw	v0,16(sp)
serial_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:60
static void serial_init(void)
{
	volatile unsigned char *uart = (unsigned char *)COM1;
	if (serial_exists)
		return;
	serial_exists = 1;
8001af9c:	24030001 	li	v1,1
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001afa0:	2c4203e8 	sltiu	v0,v0,1000
8001afa4:	10400008 	beqz	v0,8001afc8 <cons_init+0x4c>
8001afa8:	ae036d0c 	sw	v1,27916(s0)
8001afac:	8fa20010 	lw	v0,16(sp)
8001afb0:	24420001 	addiu	v0,v0,1
8001afb4:	afa20010 	sw	v0,16(sp)
8001afb8:	8fa20010 	lw	v0,16(sp)
8001afbc:	2c4203e8 	sltiu	v0,v0,1000
8001afc0:	1440fffa 	bnez	v0,8001afac <cons_init+0x30>
8001afc4:	00000000 	nop
serial_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:70
	//outw(COM1 + COM_DLM, 0);
	//outw(COM1 + COM_LCR, COM_LCR_WLEN8);
	//outw(COM1 + COM_IER, 0);
	//*WRITE_IO(COM1 + COM_IER)=0x00000000;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000a;
8001afc8:	3c02b040 	lui	v0,0xb040
8001afcc:	2403000a 	li	v1,10
8001afd0:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001afd4:	afa00010 	sw	zero,16(sp)
8001afd8:	8fa20010 	lw	v0,16(sp)
8001afdc:	2c4203e8 	sltiu	v0,v0,1000
8001afe0:	10400008 	beqz	v0,8001b004 <cons_init+0x88>
8001afe4:	3c02b040 	lui	v0,0xb040
8001afe8:	8fa20010 	lw	v0,16(sp)
8001afec:	24420001 	addiu	v0,v0,1
8001aff0:	afa20010 	sw	v0,16(sp)
8001aff4:	8fa20010 	lw	v0,16(sp)
8001aff8:	2c4203e8 	sltiu	v0,v0,1000
8001affc:	1440fffa 	bnez	v0,8001afe8 <cons_init+0x6c>
8001b000:	3c02b040 	lui	v0,0xb040
serial_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:72
	//outw(COM1 + COM_IER, 0);
	//*WRITE_IO(COM1 + COM_IER)=0x00000000;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000a;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000d;
8001b004:	2403000d 	li	v1,13
8001b008:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001b00c:	afa00010 	sw	zero,16(sp)
8001b010:	8fa20010 	lw	v0,16(sp)
8001b014:	2c4203e8 	sltiu	v0,v0,1000
8001b018:	10400008 	beqz	v0,8001b03c <cons_init+0xc0>
8001b01c:	3c02b040 	lui	v0,0xb040
8001b020:	8fa20010 	lw	v0,16(sp)
8001b024:	24420001 	addiu	v0,v0,1
8001b028:	afa20010 	sw	v0,16(sp)
8001b02c:	8fa20010 	lw	v0,16(sp)
8001b030:	2c4203e8 	sltiu	v0,v0,1000
8001b034:	1440fffa 	bnez	v0,8001b020 <cons_init+0xa4>
8001b038:	3c02b040 	lui	v0,0xb040
serial_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:74
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000a;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x0000000d;
	delay();
	*WRITE_IO(COM1 + COM_THR)=0x00000055;
8001b03c:	24030055 	li	v1,85
8001b040:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
//#include <vga.h>

/* stupid I/O delay routine necessitated by historical PC design flaws */
void delay() {
	volatile unsigned int j;
	for (j = 0; j < (1000); j++) ; // delay
8001b044:	afa00010 	sw	zero,16(sp)
8001b048:	8fa20010 	lw	v0,16(sp)
8001b04c:	2c4203e8 	sltiu	v0,v0,1000
8001b050:	10400008 	beqz	v0,8001b074 <cons_init+0xf8>
8001b054:	3c02b040 	lui	v0,0xb040
8001b058:	8fa20010 	lw	v0,16(sp)
8001b05c:	24420001 	addiu	v0,v0,1
8001b060:	afa20010 	sw	v0,16(sp)
8001b064:	8fa20010 	lw	v0,16(sp)
8001b068:	2c4203e8 	sltiu	v0,v0,1000
8001b06c:	1440fffa 	bnez	v0,8001b058 <cons_init+0xdc>
8001b070:	3c02b040 	lui	v0,0xb040
outw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
	return data;
}

static inline void outw(uint32_t port, uint32_t data)
{
	*((volatile uintptr_t *)port) = data;
8001b074:	24030061 	li	v1,97
8001b078:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
8001b07c:	afa00010 	sw	zero,16(sp)
8001b080:	8fa20010 	lw	v0,16(sp)
8001b084:	2c4203e8 	sltiu	v0,v0,1000
8001b088:	10400008 	beqz	v0,8001b0ac <cons_init+0x130>
8001b08c:	3c02b040 	lui	v0,0xb040
8001b090:	8fa20010 	lw	v0,16(sp)
8001b094:	24420001 	addiu	v0,v0,1
8001b098:	afa20010 	sw	v0,16(sp)
8001b09c:	8fa20010 	lw	v0,16(sp)
8001b0a0:	2c4203e8 	sltiu	v0,v0,1000
8001b0a4:	1440fffa 	bnez	v0,8001b090 <cons_init+0x114>
8001b0a8:	3c02b040 	lui	v0,0xb040
outw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
8001b0ac:	24030072 	li	v1,114
8001b0b0:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
8001b0b4:	afa00010 	sw	zero,16(sp)
8001b0b8:	8fa20010 	lw	v0,16(sp)
8001b0bc:	2c4203e8 	sltiu	v0,v0,1000
8001b0c0:	10400008 	beqz	v0,8001b0e4 <cons_init+0x168>
8001b0c4:	3c02b040 	lui	v0,0xb040
8001b0c8:	8fa20010 	lw	v0,16(sp)
8001b0cc:	24420001 	addiu	v0,v0,1
8001b0d0:	afa20010 	sw	v0,16(sp)
8001b0d4:	8fa20010 	lw	v0,16(sp)
8001b0d8:	2c4203e8 	sltiu	v0,v0,1000
8001b0dc:	1440fffa 	bnez	v0,8001b0c8 <cons_init+0x14c>
8001b0e0:	3c02b040 	lui	v0,0xb040
outw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
8001b0e4:	24030074 	li	v1,116
8001b0e8:	ac431000 	sw	v1,4096(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
8001b0ec:	afa00010 	sw	zero,16(sp)
8001b0f0:	8fa20010 	lw	v0,16(sp)
8001b0f4:	2c4203e8 	sltiu	v0,v0,1000
8001b0f8:	10400008 	beqz	v0,8001b11c <cons_init+0x1a0>
8001b0fc:	3c02b040 	lui	v0,0xb040
8001b100:	8fa20010 	lw	v0,16(sp)
8001b104:	24420001 	addiu	v0,v0,1
8001b108:	afa20010 	sw	v0,16(sp)
8001b10c:	8fa20010 	lw	v0,16(sp)
8001b110:	2c4203e8 	sltiu	v0,v0,1000
8001b114:	1440fffa 	bnez	v0,8001b100 <cons_init+0x184>
8001b118:	3c02b040 	lui	v0,0xb040
outw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:78
8001b11c:	24030001 	li	v1,1
8001b120:	ac431004 	sw	v1,4100(v0)
delay():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:15
8001b124:	afa00010 	sw	zero,16(sp)
8001b128:	8fa20010 	lw	v0,16(sp)
8001b12c:	2c4203e8 	sltiu	v0,v0,1000
8001b130:	10400008 	beqz	v0,8001b154 <cons_init+0x1d8>
8001b134:	00000000 	nop
8001b138:	8fa20010 	lw	v0,16(sp)
8001b13c:	24420001 	addiu	v0,v0,1
8001b140:	afa20010 	sw	v0,16(sp)
8001b144:	8fa20010 	lw	v0,16(sp)
8001b148:	2c4203e8 	sltiu	v0,v0,1000
8001b14c:	1440fffa 	bnez	v0,8001b138 <cons_init+0x1bc>
8001b150:	00000000 	nop
serial_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:86
	delay();
	outw(COM1 + COM_IER, COM_IER_RDI);
	delay();


	pic_enable(COM1_IRQ);
8001b154:	0c006d11 	jal	8001b444 <pic_enable>
8001b158:	24040004 	li	a0,4
cons_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:212
	serial_init();
//#ifdef MACH_FPGA
//	vga_init();
//#endif
	//cons.rpos = cons.wpos = 0;
	if (!serial_exists) {
8001b15c:	8e026d0c 	lw	v0,27916(s0)
8001b160:	14400006 	bnez	v0,8001b17c <cons_init+0x200>
8001b164:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:215
		kprintf("serial port does not exist!!\n");
	}
}
8001b168:	8fb00018 	lw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:213
//#ifdef MACH_FPGA
//	vga_init();
//#endif
	//cons.rpos = cons.wpos = 0;
	if (!serial_exists) {
		kprintf("serial port does not exist!!\n");
8001b16c:	3c048002 	lui	a0,0x8002
8001b170:	24843f30 	addiu	a0,a0,16176
8001b174:	08007aa6 	j	8001ea98 <kprintf>
8001b178:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:215
	}
}
8001b17c:	8fbf001c 	lw	ra,28(sp)
8001b180:	8fb00018 	lw	s0,24(sp)
8001b184:	03e00008 	jr	ra
8001b188:	27bd0020 	addiu	sp,sp,32

8001b18c <cons_putc>:
cons_putc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:219

/* cons_putc - print a single character @c to console devices */
void cons_putc(int c)
{
8001b18c:	27bdffe0 	addiu	sp,sp,-32
8001b190:	afbf001c 	sw	ra,28(sp)
8001b194:	afb00018 	sw	s0,24(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001b198:	40026000 	mfc0	v0,c0_status
8001b19c:	30420001 	andi	v0,v0,0x1
8001b1a0:	1440000e 	bnez	v0,8001b1dc <cons_putc+0x50>
8001b1a4:	00008021 	move	s0,zero
serial_putc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:105
}

/* serial_putc - print character to serial port */
static void serial_putc(int c)
{
	if (c == '\b') {
8001b1a8:	24020008 	li	v0,8
8001b1ac:	10820011 	beq	a0,v0,8001b1f4 <cons_putc+0x68>
8001b1b0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:110
		serial_putc_sub('\b');
		serial_putc_sub(' ');
		serial_putc_sub('\b');
	} else {
		serial_putc_sub(c);
8001b1b4:	0c006b6b 	jal	8001adac <serial_putc_sub>
8001b1b8:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001b1bc:	16000004 	bnez	s0,8001b1d0 <cons_putc+0x44>
8001b1c0:	8fbf001c 	lw	ra,28(sp)
cons_putc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:229
//#ifdef MACH_FPGA
//		vga_putch(c);
//#endif
	}
	local_intr_restore(intr_flag);
}
8001b1c4:	8fb00018 	lw	s0,24(sp)
8001b1c8:	03e00008 	jr	ra
8001b1cc:	27bd0020 	addiu	sp,sp,32
8001b1d0:	8fb00018 	lw	s0,24(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001b1d4:	08006d08 	j	8001b420 <intr_enable>
8001b1d8:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001b1dc:	0c006d0c 	jal	8001b430 <intr_disable>
8001b1e0:	afa40010 	sw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:16
	return 1;
8001b1e4:	8fa40010 	lw	a0,16(sp)
serial_putc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:105
}

/* serial_putc - print character to serial port */
static void serial_putc(int c)
{
	if (c == '\b') {
8001b1e8:	24020008 	li	v0,8
8001b1ec:	1482fff1 	bne	a0,v0,8001b1b4 <cons_putc+0x28>
8001b1f0:	24100001 	li	s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:106
		serial_putc_sub('\b');
8001b1f4:	0c006b6b 	jal	8001adac <serial_putc_sub>
8001b1f8:	24040008 	li	a0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:107
		serial_putc_sub(' ');
8001b1fc:	0c006b6b 	jal	8001adac <serial_putc_sub>
8001b200:	24040020 	li	a0,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:108
		serial_putc_sub('\b');
8001b204:	0c006b6b 	jal	8001adac <serial_putc_sub>
8001b208:	24040008 	li	a0,8
8001b20c:	08006c6f 	j	8001b1bc <cons_putc+0x30>
8001b210:	00000000 	nop

8001b214 <cons_getc>:
cons_getc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:236
/* *
 * cons_getc - return the next input character from console,
 * or 0 if none waiting.
 * */
int cons_getc(void)
{
8001b214:	27bdffe0 	addiu	sp,sp,-32
8001b218:	afbf001c 	sw	ra,28(sp)
8001b21c:	afb00018 	sw	s0,24(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001b220:	40026000 	mfc0	v0,c0_status
8001b224:	30420001 	andi	v0,v0,0x1
8001b228:	1440001a 	bnez	v0,8001b294 <cons_getc+0x80>
8001b22c:	00008021 	move	s0,zero
cons_getc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:244
	local_intr_save(intr_flag);
	{
		// poll for any pending input characters,
		// so that this function works even when interrupts are disabled
		// (e.g., when called from the kernel monitor).
		serial_intr();
8001b230:	0c006b9c 	jal	8001ae70 <serial_intr>
8001b234:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:247

		// grab the next character from the input buffer.
		if (cons.rpos != cons.wpos) {
8001b238:	3c038015 	lui	v1,0x8015
8001b23c:	24636d10 	addiu	v1,v1,27920
8001b240:	8c640200 	lw	a0,512(v1)
8001b244:	8c650204 	lw	a1,516(v1)
8001b248:	10850007 	beq	a0,a1,8001b268 <cons_getc+0x54>
8001b24c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:248
			c = cons.buf[cons.rpos++];
8001b250:	00831021 	addu	v0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:249
			if (cons.rpos == CONSBUFSIZE) {
8001b254:	24050200 	li	a1,512
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:248
		// (e.g., when called from the kernel monitor).
		serial_intr();

		// grab the next character from the input buffer.
		if (cons.rpos != cons.wpos) {
			c = cons.buf[cons.rpos++];
8001b258:	24840001 	addiu	a0,a0,1
8001b25c:	90420000 	lbu	v0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:249
			if (cons.rpos == CONSBUFSIZE) {
8001b260:	1085000a 	beq	a0,a1,8001b28c <cons_getc+0x78>
8001b264:	ac640200 	sw	a0,512(v1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:21
	return 1;
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
8001b268:	12000005 	beqz	s0,8001b280 <cons_getc+0x6c>
8001b26c:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
		intr_enable();
8001b270:	0c006d08 	jal	8001b420 <intr_enable>
8001b274:	afa20010 	sw	v0,16(sp)
8001b278:	8fa20010 	lw	v0,16(sp)
cons_getc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:259
	local_intr_restore(intr_flag);
#ifdef DEBUG_COM1
	if (c) kprintf("cons_get(0x%x)\n", c);
#endif
	return c;
}
8001b27c:	8fbf001c 	lw	ra,28(sp)
8001b280:	8fb00018 	lw	s0,24(sp)
8001b284:	03e00008 	jr	ra
8001b288:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:250

		// grab the next character from the input buffer.
		if (cons.rpos != cons.wpos) {
			c = cons.buf[cons.rpos++];
			if (cons.rpos == CONSBUFSIZE) {
				cons.rpos = 0;
8001b28c:	08006c9a 	j	8001b268 <cons_getc+0x54>
8001b290:	ac600200 	sw	zero,512(v1)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001b294:	0c006d0c 	jal	8001b430 <intr_disable>
8001b298:	24100001 	li	s0,1
8001b29c:	08006c8c 	j	8001b230 <cons_getc+0x1c>
8001b2a0:	00000000 	nop

8001b2a4 <serial_int_handler>:
serial_int_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:134
	}
	return c;
}

void serial_int_handler(void *opaque)
{
8001b2a4:	27bdffe8 	addiu	sp,sp,-24
8001b2a8:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:137

	//int c = serial_proc_data();
	int c = cons_getc();//c);
8001b2ac:	0c006c85 	jal	8001b214 <cons_getc>
8001b2b0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:140
	extern void dev_stdin_write(char c);
	dev_stdin_write(c);
}
8001b2b4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/console.c:139
{

	//int c = serial_proc_data();
	int c = cons_getc();//c);
	extern void dev_stdin_write(char c);
	dev_stdin_write(c);
8001b2b8:	304400ff 	andi	a0,v0,0xff
8001b2bc:	08000a9b 	j	80002a6c <dev_stdin_write>
8001b2c0:	27bd0018 	addiu	sp,sp,24

8001b2c4 <ide_init>:
ide_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b2c4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:33
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
8001b2c8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b2cc:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:36
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
8001b2d0:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b2d4:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:36
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
8001b2d8:	26246f98 	addiu	a0,s1,28568
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:33
// TODO: check if ramdisk are there
void ide_init(void)
{
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
8001b2dc:	24506f18 	addiu	s0,v0,28440
8001b2e0:	ac406f18 	sw	zero,28440(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:30
	return 0;
}

// TODO: check if ramdisk are there
void ide_init(void)
{
8001b2e4:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:33
	int i;
	for (i = 0; i < MAX_IDE; i++)
		ide_devices[i].valid = 0;
8001b2e8:	ae000040 	sw	zero,64(s0)
8001b2ec:	ae000080 	sw	zero,128(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:36
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
8001b2f0:	0c006d83 	jal	8001b60c <ramdisk_init_struct>
8001b2f4:	ae0000c0 	sw	zero,192(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:37
	if (CHECK_CALL(devno, init))
8001b2f8:	8e020080 	lw	v0,128(s0)
8001b2fc:	10400009 	beqz	v0,8001b324 <ide_init+0x60>
8001b300:	8fbf001c 	lw	ra,28(sp)
8001b304:	8e1900b4 	lw	t9,180(s0)
8001b308:	13200006 	beqz	t9,8001b324 <ide_init+0x60>
8001b30c:	26246f98 	addiu	a0,s1,28568
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:40
		ide_devices[devno].init(&ide_devices[devno]);

}
8001b310:	8fbf001c 	lw	ra,28(sp)
8001b314:	8fb10018 	lw	s1,24(sp)
8001b318:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:38
		ide_devices[i].valid = 0;
	int devno = DISK0_DEV_NO;
	assert(devno < MAX_IDE);
	ramdisk_init_struct(&ide_devices[devno]);
	if (CHECK_CALL(devno, init))
		ide_devices[devno].init(&ide_devices[devno]);
8001b31c:	03200008 	jr	t9
8001b320:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:40

}
8001b324:	8fb10018 	lw	s1,24(sp)
8001b328:	8fb00014 	lw	s0,20(sp)
8001b32c:	03e00008 	jr	ra
8001b330:	27bd0020 	addiu	sp,sp,32

8001b334 <ide_device_valid>:
ide_device_valid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:44

bool ide_device_valid(unsigned int ideno)
{
	return VALID_IDE(ideno);
8001b334:	2c830004 	sltiu	v1,a0,4
8001b338:	10600007 	beqz	v1,8001b358 <ide_device_valid+0x24>
8001b33c:	00001021 	move	v0,zero
8001b340:	3c028015 	lui	v0,0x8015
8001b344:	24426f18 	addiu	v0,v0,28440
8001b348:	00042180 	sll	a0,a0,0x6
8001b34c:	00822021 	addu	a0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:42
	if (CHECK_CALL(devno, init))
		ide_devices[devno].init(&ide_devices[devno]);

}

bool ide_device_valid(unsigned int ideno)
8001b350:	8c820000 	lw	v0,0(a0)
8001b354:	0002102b 	sltu	v0,zero,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:45
{
	return VALID_IDE(ideno);
}
8001b358:	03e00008 	jr	ra
8001b35c:	00000000 	nop

8001b360 <ide_device_size>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:44

}

bool ide_device_valid(unsigned int ideno)
{
	return VALID_IDE(ideno);
8001b360:	2c830004 	sltiu	v1,a0,4
8001b364:	10600008 	beqz	v1,8001b388 <ide_device_size+0x28>
8001b368:	00001021 	move	v0,zero
8001b36c:	3c038015 	lui	v1,0x8015
8001b370:	24636f18 	addiu	v1,v1,28440
8001b374:	00042180 	sll	a0,a0,0x6
8001b378:	00832021 	addu	a0,a0,v1
8001b37c:	8c830000 	lw	v1,0(a0)
8001b380:	54600001 	bnezl	v1,8001b388 <ide_device_size+0x28>
8001b384:	8c820008 	lw	v0,8(a0)
ide_device_size():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:53
{
	if (ide_device_valid(ideno)) {
		return ide_devices[ideno].size;
	}
	return 0;
}
8001b388:	03e00008 	jr	ra
8001b38c:	00000000 	nop

8001b390 <ide_read_secs>:
ide_read_secs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:57

int ide_read_secs(unsigned int ideno, uint32_t secno, void *dst, size_t nsecs)
{
	if (CHECK_CALL(ideno, read_secs))
8001b390:	2c820004 	sltiu	v0,a0,4
8001b394:	1040000c 	beqz	v0,8001b3c8 <ide_read_secs+0x38>
8001b398:	00042180 	sll	a0,a0,0x6
8001b39c:	3c028015 	lui	v0,0x8015
8001b3a0:	24426f18 	addiu	v0,v0,28440
8001b3a4:	00822021 	addu	a0,a0,v0
8001b3a8:	8c820000 	lw	v0,0(a0)
8001b3ac:	10400008 	beqz	v0,8001b3d0 <ide_read_secs+0x40>
8001b3b0:	00001021 	move	v0,zero
8001b3b4:	8c990038 	lw	t9,56(a0)
8001b3b8:	13200005 	beqz	t9,8001b3d0 <ide_read_secs+0x40>
8001b3bc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:58
		return ide_devices[ideno].read_secs(&ide_devices[ideno], secno,
8001b3c0:	03200008 	jr	t9
8001b3c4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:61
						    dst, nsecs);
	return 0;
}
8001b3c8:	03e00008 	jr	ra
8001b3cc:	00001021 	move	v0,zero
8001b3d0:	03e00008 	jr	ra
8001b3d4:	00000000 	nop

8001b3d8 <ide_write_secs>:
ide_write_secs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:67

int
ide_write_secs(unsigned int ideno, uint32_t secno, const void *src,
	       size_t nsecs)
{
	if (CHECK_CALL(ideno, write_secs))
8001b3d8:	2c820004 	sltiu	v0,a0,4
8001b3dc:	1040000c 	beqz	v0,8001b410 <ide_write_secs+0x38>
8001b3e0:	00042180 	sll	a0,a0,0x6
8001b3e4:	3c028015 	lui	v0,0x8015
8001b3e8:	24426f18 	addiu	v0,v0,28440
8001b3ec:	00822021 	addu	a0,a0,v0
8001b3f0:	8c820000 	lw	v0,0(a0)
8001b3f4:	10400008 	beqz	v0,8001b418 <ide_write_secs+0x40>
8001b3f8:	00001021 	move	v0,zero
8001b3fc:	8c99003c 	lw	t9,60(a0)
8001b400:	13200005 	beqz	t9,8001b418 <ide_write_secs+0x40>
8001b404:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:68
		return ide_devices[ideno].write_secs(&ide_devices[ideno], secno,
8001b408:	03200008 	jr	t9
8001b40c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ide.c:71
						     src, nsecs);
	return 0;
}
8001b410:	03e00008 	jr	ra
8001b414:	00001021 	move	v0,zero
8001b418:	03e00008 	jr	ra
8001b41c:	00000000 	nop

8001b420 <intr_enable>:
intr_enable():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.c:12

/* intr_enable - enable irq interrupt */
void intr_enable(void)
{
	uint32_t x;
	get_status(x);
8001b420:	40026000 	mfc0	v0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.c:13
	x |= ST0_IE;
8001b424:	34420001 	ori	v0,v0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.c:16
	set_status(x);

}
8001b428:	03e00008 	jr	ra
8001b42c:	40826000 	mtc0	v0,c0_status

8001b430 <intr_disable>:
intr_disable():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.c:22

/* intr_disable - disable irq interrupt */
void intr_disable(void)
{
	uint32_t x;
	get_status(x);
8001b430:	40036000 	mfc0	v1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.c:23
	x &= ~ST0_IE;
8001b434:	2402fffe 	li	v0,-2
8001b438:	00621024 	and	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.c:25
	set_status(x);
}
8001b43c:	03e00008 	jr	ra
8001b440:	40826000 	mtc0	v0,c0_status

8001b444 <pic_enable>:
pic_enable():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:10
#include <asm/mipsregs.h>

static bool did_init = 0;

void pic_enable(unsigned int irq)
{
8001b444:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:11
	assert(irq < 8);
8001b448:	2c820008 	sltiu	v0,a0,8
8001b44c:	1040000a 	beqz	v0,8001b478 <pic_enable+0x34>
8001b450:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:12
	uint32_t sr = read_c0_status();
8001b454:	40036000 	mfc0	v1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:13
	sr |= 1 << (irq + STATUSB_IP0);
8001b458:	24020001 	li	v0,1
8001b45c:	24840008 	addiu	a0,a0,8
8001b460:	00821004 	sllv	v0,v0,a0
8001b464:	00622025 	or	a0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:14
	write_c0_status(sr);
8001b468:	40846000 	mtc0	a0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:15
}
8001b46c:	8fbf0014 	lw	ra,20(sp)
8001b470:	03e00008 	jr	ra
8001b474:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:11

static bool did_init = 0;

void pic_enable(unsigned int irq)
{
	assert(irq < 8);
8001b478:	3c048002 	lui	a0,0x8002
8001b47c:	3c068002 	lui	a2,0x8002
8001b480:	3c078002 	lui	a3,0x8002
8001b484:	24843f50 	addiu	a0,a0,16208
8001b488:	2405000b 	li	a1,11
8001b48c:	24c60e48 	addiu	a2,a2,3656
8001b490:	0c006b13 	jal	8001ac4c <__panic>
8001b494:	24e73f5c 	addiu	a3,a3,16220

8001b498 <pic_disable>:
pic_disable():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:18
	sr |= 1 << (irq + STATUSB_IP0);
	write_c0_status(sr);
}

void pic_disable(unsigned int irq)
{
8001b498:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:19
	assert(irq < 8);
8001b49c:	2c820008 	sltiu	v0,a0,8
8001b4a0:	1040000b 	beqz	v0,8001b4d0 <pic_disable+0x38>
8001b4a4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:20
	uint32_t sr = read_c0_status();
8001b4a8:	40036000 	mfc0	v1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:21
	sr &= ~(1 << (irq + STATUSB_IP0));
8001b4ac:	24020001 	li	v0,1
8001b4b0:	24840008 	addiu	a0,a0,8
8001b4b4:	00821004 	sllv	v0,v0,a0
8001b4b8:	00021027 	nor	v0,zero,v0
8001b4bc:	00622024 	and	a0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:22
	write_c0_status(sr);
8001b4c0:	40846000 	mtc0	a0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:23
}
8001b4c4:	8fbf0014 	lw	ra,20(sp)
8001b4c8:	03e00008 	jr	ra
8001b4cc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:19
	write_c0_status(sr);
}

void pic_disable(unsigned int irq)
{
	assert(irq < 8);
8001b4d0:	3c048002 	lui	a0,0x8002
8001b4d4:	3c068002 	lui	a2,0x8002
8001b4d8:	3c078002 	lui	a3,0x8002
8001b4dc:	24843f50 	addiu	a0,a0,16208
8001b4e0:	24050013 	li	a1,19
8001b4e4:	24c60e48 	addiu	a2,a2,3656
8001b4e8:	0c006b13 	jal	8001ac4c <__panic>
8001b4ec:	24e73f5c 	addiu	a3,a3,16220

8001b4f0 <pic_init>:
pic_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:27
	write_c0_status(sr);
}

void pic_init(void)
{
	uint32_t sr = read_c0_status();
8001b4f0:	40026000 	mfc0	v0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:29
	/* disable all */
	sr &= ~ST0_IM;
8001b4f4:	3c03ffff 	lui	v1,0xffff
8001b4f8:	246300ff 	addiu	v1,v1,255
8001b4fc:	00431024 	and	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:30
	write_c0_status(sr);
8001b500:	40826000 	mtc0	v0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:31
	did_init = 1;
8001b504:	24030001 	li	v1,1
8001b508:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/picirq.c:32
}
8001b50c:	03e00008 	jr	ra
8001b510:	ac437018 	sw	v1,28696(v0)

8001b514 <ramdisk_write>:
ramdisk_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:58

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
	//kprintf("%08x(%d) %08x(%d)\n", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
8001b514:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:61
	if (nsecs < 0)
		return -1;
	memcpy((void *)(dev->iobase + secno * SECTSIZE), src, nsecs * SECTSIZE);
8001b518:	8c83000c 	lw	v1,12(a0)
8001b51c:	00052240 	sll	a0,a1,0x9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:58

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
	//kprintf("%08x(%d) %08x(%d)\n", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
8001b520:	00451023 	subu	v0,v0,a1
8001b524:	0047402b 	sltu	t0,v0,a3
8001b528:	0048380b 	movn	a3,v0,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:56
	return 0;
}

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
8001b52c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:61
	//kprintf("%08x(%d) %08x(%d)\n", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
	if (nsecs < 0)
		return -1;
	memcpy((void *)(dev->iobase + secno * SECTSIZE), src, nsecs * SECTSIZE);
8001b530:	00c02821 	move	a1,a2
8001b534:	00832021 	addu	a0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:56
	return 0;
}

static int ramdisk_write(struct ide_device *dev, size_t secno, const void *src,
			 size_t nsecs)
{
8001b538:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:61
	//kprintf("%08x(%d) %08x(%d)\n", dev->size, dev->size, secno, secno);
	nsecs = MIN(nsecs, dev->size - secno);
	if (nsecs < 0)
		return -1;
	memcpy((void *)(dev->iobase + secno * SECTSIZE), src, nsecs * SECTSIZE);
8001b53c:	0c005c84 	jal	80017210 <memcpy>
8001b540:	00073240 	sll	a2,a3,0x9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:63
	return 0;
}
8001b544:	8fbf0014 	lw	ra,20(sp)
8001b548:	00001021 	move	v0,zero
8001b54c:	03e00008 	jr	ra
8001b550:	27bd0018 	addiu	sp,sp,24

8001b554 <ramdisk_read>:
ramdisk_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:47
}

static int ramdisk_read(struct ide_device *dev, size_t secno, void *dst,
			size_t nsecs)
{
	nsecs = MIN(nsecs, dev->size - secno);
8001b554:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:50
	if (nsecs < 0)
		return -1;
	memcpy(dst, (void *)(dev->iobase + secno * SECTSIZE), nsecs * SECTSIZE);
8001b558:	8c83000c 	lw	v1,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:46
	return 1;
}

static int ramdisk_read(struct ide_device *dev, size_t secno, void *dst,
			size_t nsecs)
{
8001b55c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:47
	nsecs = MIN(nsecs, dev->size - secno);
8001b560:	00451023 	subu	v0,v0,a1
8001b564:	0047202b 	sltu	a0,v0,a3
8001b568:	0044380b 	movn	a3,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:50
	if (nsecs < 0)
		return -1;
	memcpy(dst, (void *)(dev->iobase + secno * SECTSIZE), nsecs * SECTSIZE);
8001b56c:	00052a40 	sll	a1,a1,0x9
8001b570:	00c02021 	move	a0,a2
8001b574:	00a32821 	addu	a1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:46
	return 1;
}

static int ramdisk_read(struct ide_device *dev, size_t secno, void *dst,
			size_t nsecs)
{
8001b578:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:50
	nsecs = MIN(nsecs, dev->size - secno);
	if (nsecs < 0)
		return -1;
	memcpy(dst, (void *)(dev->iobase + secno * SECTSIZE), nsecs * SECTSIZE);
8001b57c:	0c005c84 	jal	80017210 <memcpy>
8001b580:	00073240 	sll	a2,a3,0x9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:52
	return 0;
}
8001b584:	8fbf0014 	lw	ra,20(sp)
8001b588:	00001021 	move	v0,zero
8001b58c:	03e00008 	jr	ra
8001b590:	27bd0018 	addiu	sp,sp,24

8001b594 <ramdisk_init>:
ramdisk_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:67
	return 0;
}

static void ramdisk_init(struct ide_device *dev)
{
	kprintf("ramdisk_init(): initrd found, magic: 0x%08x, 0x%08x secs\n",
8001b594:	8c82000c 	lw	v0,12(a0)
8001b598:	8c860008 	lw	a2,8(a0)
8001b59c:	3c048002 	lui	a0,0x8002
8001b5a0:	8c450000 	lw	a1,0(v0)
8001b5a4:	08007aa6 	j	8001ea98 <kprintf>
8001b5a8:	24843f64 	addiu	a0,a0,16228

8001b5ac <check_initrd>:
check_initrd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:33

//char initrd_begin[], initrd_end[];

bool check_initrd()
{
	if (_initrd_begin == _initrd_end) {
8001b5ac:	3c028002 	lui	v0,0x8002
8001b5b0:	3c078015 	lui	a3,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:32
#define MIN(x,y) (((x)<(y))?(x):(y))

//char initrd_begin[], initrd_end[];

bool check_initrd()
{
8001b5b4:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:33
	if (_initrd_begin == _initrd_end) {
8001b5b8:	24457450 	addiu	a1,v0,29776
8001b5bc:	24e73450 	addiu	a3,a3,13392
8001b5c0:	14a70008 	bne	a1,a3,8001b5e4 <check_initrd+0x38>
8001b5c4:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:34
		kprintf("Warning: No Initrd!\n");
8001b5c8:	3c048002 	lui	a0,0x8002
8001b5cc:	0c007aa6 	jal	8001ea98 <kprintf>
8001b5d0:	24843fa0 	addiu	a0,a0,16288
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:35
		return 0;
8001b5d4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:42

	kprintf("Initrd: 0x%08x - 0x%08x, size: 0x%08x, magic: 0x%08x\n",
		_initrd_begin, _initrd_end - 1, _initrd_end - _initrd_begin,
		*(uint32_t *) _initrd_begin);
	return 1;
}
8001b5d8:	8fbf001c 	lw	ra,28(sp)
8001b5dc:	03e00008 	jr	ra
8001b5e0:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:38
	if (_initrd_begin == _initrd_end) {
		kprintf("Warning: No Initrd!\n");
		return 0;
	}

	kprintf("Initrd: 0x%08x - 0x%08x, size: 0x%08x, magic: 0x%08x\n",
8001b5e4:	8c427450 	lw	v0,29776(v0)
8001b5e8:	3c048002 	lui	a0,0x8002
8001b5ec:	3c068015 	lui	a2,0x8015
8001b5f0:	24843fb8 	addiu	a0,a0,16312
8001b5f4:	24c6344f 	addiu	a2,a2,13391
8001b5f8:	00e53823 	subu	a3,a3,a1
8001b5fc:	0c007aa6 	jal	8001ea98 <kprintf>
8001b600:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:41
		_initrd_begin, _initrd_end - 1, _initrd_end - _initrd_begin,
		*(uint32_t *) _initrd_begin);
	return 1;
8001b604:	08006d76 	j	8001b5d8 <check_initrd+0x2c>
8001b608:	24020001 	li	v0,1

8001b60c <ramdisk_init_struct>:
ramdisk_init_struct():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:73
		*(uint32_t *) (dev->iobase), dev->size);

}

void ramdisk_init_struct(struct ide_device *dev)
{
8001b60c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:74
	memset(dev, 0, sizeof(struct ide_device));
8001b610:	00002821 	move	a1,zero
8001b614:	24060040 	li	a2,64
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:73
		*(uint32_t *) (dev->iobase), dev->size);

}

void ramdisk_init_struct(struct ide_device *dev)
{
8001b618:	afb00010 	sw	s0,16(sp)
8001b61c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:74
	memset(dev, 0, sizeof(struct ide_device));
8001b620:	0c005c5a 	jal	80017168 <memset>
8001b624:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:75
	assert(INITRD_SIZE() % SECTSIZE == 0);
8001b628:	3c048015 	lui	a0,0x8015
8001b62c:	3c038002 	lui	v1,0x8002
8001b630:	24843450 	addiu	a0,a0,13392
8001b634:	24637450 	addiu	v1,v1,29776
8001b638:	00831023 	subu	v0,a0,v1
8001b63c:	304501ff 	andi	a1,v0,0x1ff
8001b640:	10a00008 	beqz	a1,8001b664 <ramdisk_init_struct+0x58>
8001b644:	3c068002 	lui	a2,0x8002
8001b648:	3c048002 	lui	a0,0x8002
8001b64c:	3c078002 	lui	a3,0x8002
8001b650:	24843ff0 	addiu	a0,a0,16368
8001b654:	2405004b 	li	a1,75
8001b658:	24c60e48 	addiu	a2,a2,3656
8001b65c:	0c006b13 	jal	8001ac4c <__panic>
8001b660:	24e73ffc 	addiu	a3,a3,16380
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:76
	if (CHECK_INITRD_EXIST()) {
8001b664:	10830017 	beq	a0,v1,8001b6c4 <ramdisk_init_struct+0xb8>
8001b668:	244401ff 	addiu	a0,v0,511
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:79
		dev->valid = 1;
		dev->sets = ~0;
		dev->size = INITRD_SIZE() / SECTSIZE;
8001b66c:	28450000 	slti	a1,v0,0
8001b670:	0085100b 	movn	v0,a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:77
void ramdisk_init_struct(struct ide_device *dev)
{
	memset(dev, 0, sizeof(struct ide_device));
	assert(INITRD_SIZE() % SECTSIZE == 0);
	if (CHECK_INITRD_EXIST()) {
		dev->valid = 1;
8001b674:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:79
		dev->sets = ~0;
		dev->size = INITRD_SIZE() / SECTSIZE;
8001b678:	00021243 	sra	v0,v0,0x9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:77
void ramdisk_init_struct(struct ide_device *dev)
{
	memset(dev, 0, sizeof(struct ide_device));
	assert(INITRD_SIZE() % SECTSIZE == 0);
	if (CHECK_INITRD_EXIST()) {
		dev->valid = 1;
8001b67c:	ae040000 	sw	a0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:81
		dev->sets = ~0;
		dev->size = INITRD_SIZE() / SECTSIZE;
		dev->iobase = (uintptr_t) _initrd_begin;
		strcpy(dev->model, "KERN_INITRD");
8001b680:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:78
{
	memset(dev, 0, sizeof(struct ide_device));
	assert(INITRD_SIZE() % SECTSIZE == 0);
	if (CHECK_INITRD_EXIST()) {
		dev->valid = 1;
		dev->sets = ~0;
8001b684:	2404ffff 	li	a0,-1
8001b688:	ae040004 	sw	a0,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:79
		dev->size = INITRD_SIZE() / SECTSIZE;
8001b68c:	ae020008 	sw	v0,8(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:80
		dev->iobase = (uintptr_t) _initrd_begin;
8001b690:	ae03000c 	sw	v1,12(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:81
		strcpy(dev->model, "KERN_INITRD");
8001b694:	26040014 	addiu	a0,s0,20
8001b698:	0c005b9a 	jal	80016e68 <strcpy>
8001b69c:	24a5401c 	addiu	a1,a1,16412
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:82
		dev->init = ramdisk_init;
8001b6a0:	3c028002 	lui	v0,0x8002
8001b6a4:	2442b594 	addiu	v0,v0,-19052
8001b6a8:	ae020034 	sw	v0,52(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:83
		dev->read_secs = ramdisk_read;
8001b6ac:	3c028002 	lui	v0,0x8002
8001b6b0:	2442b554 	addiu	v0,v0,-19116
8001b6b4:	ae020038 	sw	v0,56(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:84
		dev->write_secs = ramdisk_write;
8001b6b8:	3c028002 	lui	v0,0x8002
8001b6bc:	2442b514 	addiu	v0,v0,-19180
8001b6c0:	ae02003c 	sw	v0,60(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/ramdisk.c:86
	}
}
8001b6c4:	8fbf0014 	lw	ra,20(sp)
8001b6c8:	8fb00010 	lw	s0,16(sp)
8001b6cc:	03e00008 	jr	ra
8001b6d0:	27bd0018 	addiu	sp,sp,24

8001b6d4 <render_char>:
render_char():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:30
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
8001b6d4:	3c078015 	lui	a3,0x8015
8001b6d8:	24e7733c 	addiu	a3,a3,29500
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b6dc:	000518c0 	sll	v1,a1,0x3
8001b6e0:	00051140 	sll	v0,a1,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:30
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
8001b6e4:	00054880 	sll	t1,a1,0x2
8001b6e8:	01274821 	addu	t1,t1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b6ec:	00624021 	addu	t0,v1,v0
8001b6f0:	3c078015 	lui	a3,0x8015
8001b6f4:	01064021 	addu	t0,t0,a2
8001b6f8:	24e7738c 	addiu	a3,a3,29580
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:30
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
8001b6fc:	8d2a0000 	lw	t2,0(t1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b700:	00e84821 	addu	t1,a3,t0
8001b704:	91290000 	lbu	t1,0(t1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:28
static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
	if (ch < ' ' || ch > 127)
8001b708:	2488ffe0 	addiu	t0,a0,-32
8001b70c:	2d080060 	sltiu	t0,t0,96
8001b710:	24180020 	li	t8,32
8001b714:	0088c00b 	movn	t8,a0,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:30
		ch = ' ';
	buf[row][col] = ch;
8001b718:	01465021 	addu	t2,t2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:31
	if (actual_screen[row][col] == ch)
8001b71c:	1138002a 	beq	t1,t8,8001b7c8 <render_char+0xf4>
8001b720:	a1580000 	sb	t8,0(t2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:37
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b724:	00065840 	sll	t3,a2,0x1
8001b728:	00055240 	sll	t2,a1,0x9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b72c:	00182100 	sll	a0,t8,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b730:	000648c0 	sll	t1,a2,0x3
8001b734:	00052b40 	sll	a1,a1,0xd
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b738:	00184080 	sll	t0,t8,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b73c:	01694821 	addu	t1,t3,t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b740:	01044021 	addu	t0,t0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b744:	00aa2823 	subu	a1,a1,t2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b748:	3c0c8002 	lui	t4,0x8002
8001b74c:	2508fd80 	addiu	t0,t0,-640
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b750:	01252821 	addu	a1,t1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b754:	258c021c 	addiu	t4,t4,540
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:37
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
8001b758:	00052880 	sll	a1,a1,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:33
	if (ch < ' ' || ch > 127)
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
8001b75c:	01886021 	addu	t4,t4,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:36
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
8001b760:	3c04ba00 	lui	a0,0xba00
8001b764:	00a42021 	addu	a0,a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:34
		ch = ' ';
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
8001b768:	8d850000 	lw	a1,0(t4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:27

static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
8001b76c:	248f7800 	addiu	t7,a0,30720
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:35
	buf[row][col] = ch;
	if (actual_screen[row][col] == ch)
		return;
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
8001b770:	00004021 	move	t0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:40
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
			if (pos == 32) {
8001b774:	240b0020 	li	t3,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:45
				pos = 0;
				cur_bitmap = *(++ bitmap);
			}
			if (cur_bitmap & 1)
				*dest = COLOR;
8001b778:	240d00ff 	li	t5,255
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:27

static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
8001b77c:	00807021 	move	t6,a0
8001b780:	248a0028 	addiu	t2,a0,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:40
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
			if (pos == 32) {
8001b784:	510b0015 	beql	t0,t3,8001b7dc <render_char+0x108>
8001b788:	8d850004 	lw	a1,4(t4)
8001b78c:	25080001 	addiu	t0,t0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:44
				pos = 0;
				cur_bitmap = *(++ bitmap);
			}
			if (cur_bitmap & 1)
8001b790:	30a90001 	andi	t1,a1,0x1
8001b794:	1120000e 	beqz	t1,8001b7d0 <render_char+0xfc>
8001b798:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:45
				*dest = COLOR;
8001b79c:	ac8d0000 	sw	t5,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:48
			else
				*dest = 0;
			dest ++;
8001b7a0:	24840004 	addiu	a0,a0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:39
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
8001b7a4:	148afff7 	bne	a0,t2,8001b784 <render_char+0xb0>
8001b7a8:	00052842 	srl	a1,a1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:27

static char buf_mem[NR_ROW][NR_COL], actual_screen[NR_ROW][NR_COL],
			*buf[NR_ROW];
static int row, col;

static void render_char(int ch, int row, int col) {
8001b7ac:	25c40800 	addiu	a0,t6,2048
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:38
	const unsigned *bitmap = CHAR_FONT_BITMAP[ch - ' '];
	unsigned cur_bitmap = bitmap[0];
	int i, j, pos = 0;
	mem_ptr_t dest = vga +
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
8001b7b0:	15e4fff3 	bne	t7,a0,8001b780 <render_char+0xac>
8001b7b4:	00807021 	move	t6,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:53
			dest ++;
			cur_bitmap >>= 1;
		}
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
8001b7b8:	00621021 	addu	v0,v1,v0
8001b7bc:	00463021 	addu	a2,v0,a2
8001b7c0:	00e63821 	addu	a3,a3,a2
8001b7c4:	a0f80000 	sb	t8,0(a3)
8001b7c8:	03e00008 	jr	ra
8001b7cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:47
				cur_bitmap = *(++ bitmap);
			}
			if (cur_bitmap & 1)
				*dest = COLOR;
			else
				*dest = 0;
8001b7d0:	ac800000 	sw	zero,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:48
			dest ++;
8001b7d4:	08006de9 	j	8001b7a4 <render_char+0xd0>
8001b7d8:	24840004 	addiu	a0,a0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:42
		row * VGA_MEM_NRCOL * CHAR_HEIGHT + col * CHAR_WIDTH;
	for (i = 0; i < CHAR_HEIGHT; i ++) {
		for (j = 0; j < CHAR_WIDTH; j ++, pos ++) {
			if (pos == 32) {
				pos = 0;
				cur_bitmap = *(++ bitmap);
8001b7dc:	24080001 	li	t0,1
8001b7e0:	08006de4 	j	8001b790 <render_char+0xbc>
8001b7e4:	258c0004 	addiu	t4,t4,4

8001b7e8 <vga_init>:
vga_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b7e8:	27bdffc8 	addiu	sp,sp,-56
8001b7ec:	afbe0030 	sw	s8,48(sp)
8001b7f0:	afb10014 	sw	s1,20(sp)
8001b7f4:	3c1e8015 	lui	s8,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b7f8:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b7fc:	afb60028 	sw	s6,40(sp)
8001b800:	2631701c 	addiu	s1,s1,28700
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b804:	3c168015 	lui	s6,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b808:	27de738c 	addiu	s8,s8,29580
8001b80c:	afb7002c 	sw	s7,44(sp)
8001b810:	afb50024 	sw	s5,36(sp)
8001b814:	afb40020 	sw	s4,32(sp)
8001b818:	afb20018 	sw	s2,24(sp)
8001b81c:	afbf0034 	sw	ra,52(sp)
8001b820:	afb3001c 	sw	s3,28(sp)
8001b824:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b828:	26d6733c 	addiu	s6,s6,29500
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:58
	actual_screen[row][col] = ch;
}

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
8001b82c:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b830:	03d1f023 	subu	s8,s8,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:62
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
8001b834:	2415ffff 	li	s5,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b838:	24140028 	li	s4,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:58
	actual_screen[row][col] = ch;
}

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
8001b83c:	24170014 	li	s7,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:59
		buf[i] = buf_mem[i];
8001b840:	aed10000 	sw	s1,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60
		for (j = 0; j < NR_COL; j ++) {
8001b844:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:56
		dest += VGA_MEM_NRCOL - CHAR_WIDTH;
	}
	actual_screen[row][col] = ch;
}

void vga_init() {
8001b848:	03d19821 	addu	s3,s8,s1
8001b84c:	02301821 	addu	v1,s1,s0
8001b850:	02701021 	addu	v0,s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:63
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
			render_char(0, i, j);
8001b854:	02003021 	move	a2,s0
8001b858:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b85c:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:63
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
			render_char(0, i, j);
8001b860:	02402821 	move	a1,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:61
void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
			buf_mem[i][j] = 0;
8001b864:	a0600000 	sb	zero,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:63
			actual_screen[i][j] = -1;
			render_char(0, i, j);
8001b868:	0c006db5 	jal	8001b6d4 <render_char>
8001b86c:	a0550000 	sb	s5,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:60

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
		buf[i] = buf_mem[i];
		for (j = 0; j < NR_COL; j ++) {
8001b870:	1614fff7 	bne	s0,s4,8001b850 <vga_init+0x68>
8001b874:	02301821 	addu	v1,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:58
	actual_screen[row][col] = ch;
}

void vga_init() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++) {
8001b878:	26520001 	addiu	s2,s2,1
8001b87c:	26310028 	addiu	s1,s1,40
8001b880:	1657ffef 	bne	s2,s7,8001b840 <vga_init+0x58>
8001b884:	26d60004 	addiu	s6,s6,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:69
		}
	}
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}
8001b888:	8fbf0034 	lw	ra,52(sp)
8001b88c:	8fbe0030 	lw	s8,48(sp)
8001b890:	8fb7002c 	lw	s7,44(sp)
8001b894:	8fb60028 	lw	s6,40(sp)
8001b898:	8fb50024 	lw	s5,36(sp)
8001b89c:	8fb40020 	lw	s4,32(sp)
8001b8a0:	8fb3001c 	lw	s3,28(sp)
8001b8a4:	8fb20018 	lw	s2,24(sp)
8001b8a8:	8fb10014 	lw	s1,20(sp)
8001b8ac:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:66
			buf_mem[i][j] = 0;
			actual_screen[i][j] = -1;
			render_char(0, i, j);
		}
	}
	row = 0;
8001b8b0:	3c028015 	lui	v0,0x8015
8001b8b4:	ac4076ac 	sw	zero,30380(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:68
	col = 0;
	render_char('_', 0, 0);
8001b8b8:	2404005f 	li	a0,95
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:67
			actual_screen[i][j] = -1;
			render_char(0, i, j);
		}
	}
	row = 0;
	col = 0;
8001b8bc:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:68
	render_char('_', 0, 0);
8001b8c0:	00002821 	move	a1,zero
8001b8c4:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:69
}
8001b8c8:	27bd0038 	addiu	sp,sp,56
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:68
			render_char(0, i, j);
		}
	}
	row = 0;
	col = 0;
	render_char('_', 0, 0);
8001b8cc:	08006db5 	j	8001b6d4 <render_char>
8001b8d0:	ac4076b0 	sw	zero,30384(v0)

8001b8d4 <vga_redraw>:
vga_redraw():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:71
}

void vga_redraw() {
8001b8d4:	27bdffc8 	addiu	sp,sp,-56
8001b8d8:	afb6002c 	sw	s6,44(sp)
8001b8dc:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:73
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b8e0:	3c168015 	lui	s6,0x8015
8001b8e4:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:71
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}

void vga_redraw() {
8001b8e8:	afb70030 	sw	s7,48(sp)
8001b8ec:	afb50028 	sw	s5,40(sp)
8001b8f0:	afb40024 	sw	s4,36(sp)
8001b8f4:	afb10018 	sw	s1,24(sp)
8001b8f8:	afbf0034 	sw	ra,52(sp)
8001b8fc:	afb30020 	sw	s3,32(sp)
8001b900:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:73
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b904:	26d6733c 	addiu	s6,s6,29500
8001b908:	2652738c 	addiu	s2,s2,29580
8001b90c:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:75
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
8001b910:	2415ffff 	li	s5,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:74
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
8001b914:	24140028 	li	s4,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:73
	render_char('_', 0, 0);
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b918:	24170014 	li	s7,20
8001b91c:	8ed30000 	lw	s3,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:71
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}

void vga_redraw() {
8001b920:	00008021 	move	s0,zero
8001b924:	02501021 	addu	v0,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:75
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
8001b928:	a0550000 	sb	s5,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:71
	row = 0;
	col = 0;
	render_char('_', 0, 0);
}

void vga_redraw() {
8001b92c:	02701021 	addu	v0,s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:76
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
8001b930:	90440000 	lbu	a0,0(v0)
8001b934:	02003021 	move	a2,s0
8001b938:	02202821 	move	a1,s1
8001b93c:	0c006db5 	jal	8001b6d4 <render_char>
8001b940:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:74
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
		for (j = 0; j < NR_COL; j ++) {
8001b944:	1614fff8 	bne	s0,s4,8001b928 <vga_redraw+0x54>
8001b948:	02501021 	addu	v0,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:73
	render_char('_', 0, 0);
}

void vga_redraw() {
	int i, j;
	for (i = 0; i < NR_ROW; i ++)
8001b94c:	26310001 	addiu	s1,s1,1
8001b950:	26d60004 	addiu	s6,s6,4
8001b954:	1637fff1 	bne	s1,s7,8001b91c <vga_redraw+0x48>
8001b958:	26520028 	addiu	s2,s2,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:78
		for (j = 0; j < NR_COL; j ++) {
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}
8001b95c:	8fbf0034 	lw	ra,52(sp)
8001b960:	8fb70030 	lw	s7,48(sp)
8001b964:	8fb6002c 	lw	s6,44(sp)
8001b968:	8fb50028 	lw	s5,40(sp)
8001b96c:	8fb40024 	lw	s4,36(sp)
8001b970:	8fb30020 	lw	s3,32(sp)
8001b974:	8fb2001c 	lw	s2,28(sp)
8001b978:	8fb10018 	lw	s1,24(sp)
8001b97c:	8fb00014 	lw	s0,20(sp)
8001b980:	03e00008 	jr	ra
8001b984:	27bd0038 	addiu	sp,sp,56

8001b988 <vga_putch>:
vga_putch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:82

void vga_putch(int ch) {
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b988:	3c028015 	lui	v0,0x8015
8001b98c:	8c4376b4 	lw	v1,30388(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001b990:	27bdffd0 	addiu	sp,sp,-48
8001b994:	afb00010 	sw	s0,16(sp)
8001b998:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:82
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b99c:	2404000d 	li	a0,13
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001b9a0:	afbf002c 	sw	ra,44(sp)
8001b9a4:	afb60028 	sw	s6,40(sp)
8001b9a8:	afb50024 	sw	s5,36(sp)
8001b9ac:	afb40020 	sw	s4,32(sp)
8001b9b0:	afb3001c 	sw	s3,28(sp)
8001b9b4:	afb20018 	sw	s2,24(sp)
8001b9b8:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:82
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001b9bc:	10640028 	beq	v1,a0,8001ba60 <vga_putch+0xd8>
8001b9c0:	ac5076b4 	sw	s0,30388(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:87
		prev_ch = ch;
		return;
	}
	prev_ch = ch;
	if (ch == '\b') {
8001b9c4:	24020008 	li	v0,8
8001b9c8:	12020032 	beq	s0,v0,8001ba94 <vga_putch+0x10c>
8001b9cc:	3c118015 	lui	s1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:94
		if (col)
			col --;
		render_char('_', row, col);
		return;
	}
	render_char(ch, row, col);
8001b9d0:	3c138015 	lui	s3,0x8015
8001b9d4:	8e3276b0 	lw	s2,30384(s1)
8001b9d8:	8e7576ac 	lw	s5,30380(s3)
8001b9dc:	02002021 	move	a0,s0
8001b9e0:	02403021 	move	a2,s2
8001b9e4:	0c006db5 	jal	8001b6d4 <render_char>
8001b9e8:	02a02821 	move	a1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:95
	col ++;
8001b9ec:	26460001 	addiu	a2,s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:96
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
8001b9f0:	2402000d 	li	v0,13
8001b9f4:	12020012 	beq	s0,v0,8001ba40 <vga_putch+0xb8>
8001b9f8:	ae2676b0 	sw	a2,30384(s1)
8001b9fc:	2402000a 	li	v0,10
8001ba00:	1202000f 	beq	s0,v0,8001ba40 <vga_putch+0xb8>
8001ba04:	24020028 	li	v0,40
8001ba08:	10c2000e 	beq	a2,v0,8001ba44 <vga_putch+0xbc>
8001ba0c:	26a20001 	addiu	v0,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:114
			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
8001ba10:	02a02821 	move	a1,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:115
}
8001ba14:	8fbf002c 	lw	ra,44(sp)
8001ba18:	8fb60028 	lw	s6,40(sp)
8001ba1c:	8fb50024 	lw	s5,36(sp)
8001ba20:	8fb40020 	lw	s4,32(sp)
8001ba24:	8fb3001c 	lw	s3,28(sp)
8001ba28:	8fb20018 	lw	s2,24(sp)
8001ba2c:	8fb10014 	lw	s1,20(sp)
8001ba30:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:114
			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
8001ba34:	2404005f 	li	a0,95
8001ba38:	08006db5 	j	8001b6d4 <render_char>
8001ba3c:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:97
		return;
	}
	render_char(ch, row, col);
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
8001ba40:	26a20001 	addiu	v0,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:99
		col = 0;
		if (row == NR_ROW) {
8001ba44:	24030014 	li	v1,20
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:97
		return;
	}
	render_char(ch, row, col);
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
8001ba48:	ae6276ac 	sw	v0,30380(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:99
		col = 0;
		if (row == NR_ROW) {
8001ba4c:	10430029 	beq	v0,v1,8001baf4 <vga_putch+0x16c>
8001ba50:	ae2076b0 	sw	zero,30384(s1)
8001ba54:	0040a821 	move	s5,v0
8001ba58:	08006e84 	j	8001ba10 <vga_putch+0x88>
8001ba5c:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:82
		}
}

void vga_putch(int ch) {
	static int prev_ch;
	if (prev_ch == '\r' && ch == '\n') {
8001ba60:	2403000a 	li	v1,10
8001ba64:	1603ffd8 	bne	s0,v1,8001b9c8 <vga_putch+0x40>
8001ba68:	24020008 	li	v0,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:115
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
}
8001ba6c:	8fbf002c 	lw	ra,44(sp)
8001ba70:	8fb60028 	lw	s6,40(sp)
8001ba74:	8fb50024 	lw	s5,36(sp)
8001ba78:	8fb40020 	lw	s4,32(sp)
8001ba7c:	8fb3001c 	lw	s3,28(sp)
8001ba80:	8fb20018 	lw	s2,24(sp)
8001ba84:	8fb10014 	lw	s1,20(sp)
8001ba88:	8fb00010 	lw	s0,16(sp)
8001ba8c:	03e00008 	jr	ra
8001ba90:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:88
		prev_ch = ch;
		return;
	}
	prev_ch = ch;
	if (ch == '\b') {
		render_char(' ', row, col);
8001ba94:	3c028015 	lui	v0,0x8015
8001ba98:	3c128015 	lui	s2,0x8015
8001ba9c:	8c5176ac 	lw	s1,30380(v0)
8001baa0:	8e5076b0 	lw	s0,30384(s2)
8001baa4:	24040020 	li	a0,32
8001baa8:	02202821 	move	a1,s1
8001baac:	0c006db5 	jal	8001b6d4 <render_char>
8001bab0:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:89
		if (col)
8001bab4:	12000003 	beqz	s0,8001bac4 <vga_putch+0x13c>
8001bab8:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:90
			col --;
8001babc:	2606ffff 	addiu	a2,s0,-1
8001bac0:	ae4676b0 	sw	a2,30384(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:91
		render_char('_', row, col);
8001bac4:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:115
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
}
8001bac8:	8fbf002c 	lw	ra,44(sp)
8001bacc:	8fb60028 	lw	s6,40(sp)
8001bad0:	8fb50024 	lw	s5,36(sp)
8001bad4:	8fb40020 	lw	s4,32(sp)
8001bad8:	8fb3001c 	lw	s3,28(sp)
8001badc:	8fb20018 	lw	s2,24(sp)
8001bae0:	8fb10014 	lw	s1,20(sp)
8001bae4:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:91
	prev_ch = ch;
	if (ch == '\b') {
		render_char(' ', row, col);
		if (col)
			col --;
		render_char('_', row, col);
8001bae8:	2404005f 	li	a0,95
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:114
			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
		}
	}
	render_char('_', row, col);
8001baec:	08006db5 	j	8001b6d4 <render_char>
8001baf0:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:101
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
8001baf4:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:100
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
8001baf8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:101
			char *tmp = buf[0];
8001bafc:	8e84733c 	lw	a0,29500(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:100
	col ++;
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
8001bb00:	ac5576ac 	sw	s5,30380(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001bb04:	2694733c 	addiu	s4,s4,29500
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:101
	if (ch == '\r' || ch == '\n' || col == NR_COL) {
		row ++;
		col = 0;
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
8001bb08:	3c028015 	lui	v0,0x8015
8001bb0c:	24427340 	addiu	v0,v0,29504
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001bb10:	26850050 	addiu	a1,s4,80
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:104
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
			int i, j;
			for (i = 1; i < NR_ROW; i ++)
				buf[i - 1] = buf[i];
8001bb14:	8c430000 	lw	v1,0(v0)
8001bb18:	ac43fffc 	sw	v1,-4(v0)
8001bb1c:	24420004 	addiu	v0,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:103
		col = 0;
		if (row == NR_ROW) {
			row --;
			char *tmp = buf[0];
			int i, j;
			for (i = 1; i < NR_ROW; i ++)
8001bb20:	5445fffd 	bnel	v0,a1,8001bb18 <vga_putch+0x190>
8001bb24:	8c430000 	lw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:105
				buf[i - 1] = buf[i];
			buf[row] = tmp;
8001bb28:	00151080 	sll	v0,s5,0x2
8001bb2c:	00541021 	addu	v0,v0,s4
8001bb30:	ac440000 	sw	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:106
			for (i = 0; i < NR_COL; i ++)
8001bb34:	24050028 	li	a1,40
8001bb38:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001bb3c:	00821821 	addu	v1,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:106
			char *tmp = buf[0];
			int i, j;
			for (i = 1; i < NR_ROW; i ++)
				buf[i - 1] = buf[i];
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
8001bb40:	24420001 	addiu	v0,v0,1
8001bb44:	1445fffd 	bne	v0,a1,8001bb3c <vga_putch+0x1b4>
8001bb48:	a0600000 	sb	zero,0(v1)
8001bb4c:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:110
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
8001bb50:	24130028 	li	s3,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:109
				buf[i - 1] = buf[i];
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
8001bb54:	24160014 	li	s6,20
8001bb58:	8e920000 	lw	s2,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:80
			actual_screen[i][j] = -1;
			render_char(buf[i][j], i, j);
		}
}

void vga_putch(int ch) {
8001bb5c:	00008021 	move	s0,zero
8001bb60:	02501021 	addu	v0,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:111
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
					render_char(buf[i][j], i, j);
8001bb64:	90440000 	lbu	a0,0(v0)
8001bb68:	02003021 	move	a2,s0
8001bb6c:	02202821 	move	a1,s1
8001bb70:	0c006db5 	jal	8001b6d4 <render_char>
8001bb74:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:110
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
				for (j = 0; j < NR_COL; j ++)
8001bb78:	1613fffa 	bne	s0,s3,8001bb64 <vga_putch+0x1dc>
8001bb7c:	02501021 	addu	v0,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/vga.c:109
				buf[i - 1] = buf[i];
			buf[row] = tmp;
			for (i = 0; i < NR_COL; i ++)
				tmp[i] = 0;

			for (i = 0; i < NR_ROW; i ++)
8001bb80:	26310001 	addiu	s1,s1,1
8001bb84:	1636fff4 	bne	s1,s6,8001bb58 <vga_putch+0x1d0>
8001bb88:	26940004 	addiu	s4,s4,4
8001bb8c:	08006e84 	j	8001ba10 <vga_putch+0x88>
8001bb90:	00003021 	move	a2,zero

8001bb94 <setup_exception_vector>:
setup_exception_vector():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:21
void setup_exception_vector()
{
	//for QEMU sim
	extern unsigned char __exception_vector, __exception_vector_end;
	memcpy((unsigned int *)0xBFC00000, &__exception_vector,
	       &__exception_vector_end - &__exception_vector);
8001bb94:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:20

void setup_exception_vector()
{
	//for QEMU sim
	extern unsigned char __exception_vector, __exception_vector_end;
	memcpy((unsigned int *)0xBFC00000, &__exception_vector,
8001bb98:	3c068002 	lui	a2,0x8002
8001bb9c:	24a55000 	addiu	a1,a1,20480
8001bba0:	24c65400 	addiu	a2,a2,21504
8001bba4:	3c04bfc0 	lui	a0,0xbfc0
8001bba8:	08005c84 	j	80017210 <memcpy>
8001bbac:	00c53023 	subu	a2,a2,a1

8001bbb0 <kern_init>:
kern_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:25
	       &__exception_vector_end - &__exception_vector);
}

void __noreturn kern_init(void)
{
8001bbb0:	27bdffe8 	addiu	sp,sp,-24
8001bbb4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:27
	//setup_exception_vector();
	tlb_invalidate_all();
8001bbb8:	0c007924 	jal	8001e490 <tlb_invalidate_all>
8001bbbc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:29
	char *p = 0x7ffff000;
	mp_init();
8001bbc0:	0c007c87 	jal	8001f21c <mp_init>
8001bbc4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:30
	pic_init();		// init interrupt controller
8001bbc8:	0c006d3c 	jal	8001b4f0 <pic_init>
8001bbcc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:31
	cons_init();		// init the console
8001bbd0:	0c006bdf 	jal	8001af7c <cons_init>
8001bbd4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:32
	clock_init();		// init clock interrupt
8001bbd8:	0c006b5d 	jal	8001ad74 <clock_init>
8001bbdc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:34

	check_initrd();
8001bbe0:	0c006d6b 	jal	8001b5ac <check_initrd>
8001bbe4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:37

	const char *message = "(THU.CST) os is loading ...\n\r\n\r";
	kprintf(message);
8001bbe8:	3c048002 	lui	a0,0x8002
8001bbec:	0c007aa6 	jal	8001ea98 <kprintf>
8001bbf0:	24844028 	addiu	a0,a0,16424
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:38
	print_kerninfo();
8001bbf4:	0c006a21 	jal	8001a884 <print_kerninfo>
8001bbf8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:46
	kprintf("EX\n\r");
	__asm__ volatile ("syscall");
	kprintf("EX RET\n\r");
#endif

	pmm_init();		// init physical memory management
8001bbfc:	0c007559 	jal	8001d564 <pmm_init>
8001bc00:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:49

/* SZY comments: heavy commented here.*/
	vmm_init();		// init virtual memory management
8001bc04:	0c004d8b 	jal	8001362c <vmm_init>
8001bc08:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:51

	sched_init();
8001bc0c:	0c000492 	jal	80001248 <sched_init>
8001bc10:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:52
	proc_init();		// init process table
8001bc14:	0c004401 	jal	80011004 <proc_init>
8001bc18:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:53
	ide_init();
8001bc1c:	0c006cb1 	jal	8001b2c4 <ide_init>
8001bc20:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:54
	fs_init();
8001bc24:	0c00326d 	jal	8000c9b4 <fs_init>
8001bc28:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:55
	intr_enable();		// enable irq interrupt
8001bc2c:	0c006d08 	jal	8001b420 <intr_enable>
8001bc30:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/init/init.c:59
	//*(int*)(0x00124) = 0x432;
	//asm volatile("divu $1, $1, $1");
//*p = 1;
	cpu_idle();
8001bc34:	0c007a31 	jal	8001e8c4 <cpu_idle>
8001bc38:	00000000 	nop

8001bc3c <buddy_init>:
buddy_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:47

//buddy_init - init the free_list(0 ~ MAX_ORDER) & reset nr_free(0 ~ MAX_ORDER)
static void buddy_init(void)
{
	int i;
	for (i = 0; i <= MAX_ORDER; i++) {
8001bc3c:	3c048015 	lui	a0,0x8015
8001bc40:	3c078015 	lui	a3,0x8015
8001bc44:	248476e8 	addiu	a0,a0,30440
8001bc48:	00001021 	move	v0,zero
8001bc4c:	24e776e0 	addiu	a3,a3,30432
8001bc50:	2406000b 	li	a2,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:48
		list_init(&free_list(i));
8001bc54:	00021880 	sll	v1,v0,0x2
8001bc58:	00022900 	sll	a1,v0,0x4
8001bc5c:	00a31823 	subu	v1,a1,v1
8001bc60:	00e31821 	addu	v1,a3,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:47

//buddy_init - init the free_list(0 ~ MAX_ORDER) & reset nr_free(0 ~ MAX_ORDER)
static void buddy_init(void)
{
	int i;
	for (i = 0; i <= MAX_ORDER; i++) {
8001bc64:	24420001 	addiu	v0,v0,1
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
8001bc68:	ac630004 	sw	v1,4(v1)
8001bc6c:	ac630000 	sw	v1,0(v1)
buddy_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:49
		list_init(&free_list(i));
		nr_free(i) = 0;
8001bc70:	ac800000 	sw	zero,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:47

//buddy_init - init the free_list(0 ~ MAX_ORDER) & reset nr_free(0 ~ MAX_ORDER)
static void buddy_init(void)
{
	int i;
	for (i = 0; i <= MAX_ORDER; i++) {
8001bc74:	1446fff7 	bne	v0,a2,8001bc54 <buddy_init+0x18>
8001bc78:	2484000c 	addiu	a0,a0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:51
		list_init(&free_list(i));
		nr_free(i) = 0;
	}
}
8001bc7c:	03e00008 	jr	ra
8001bc80:	00000000 	nop

8001bc84 <buddy_nr_free_pages>:
buddy_nr_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:225
}

//buddy_nr_free_pages - get the nr: the number of free pages
static size_t buddy_nr_free_pages(void)
{
	size_t ret = 0, order = 0;
8001bc84:	3c048015 	lui	a0,0x8015
8001bc88:	248476e8 	addiu	a0,a0,30440
8001bc8c:	00001821 	move	v1,zero
8001bc90:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:226
	for (; order <= MAX_ORDER; order++) {
8001bc94:	2406000b 	li	a2,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:227
		ret += nr_free(order) * (1 << order);
8001bc98:	8c850000 	lw	a1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:226

//buddy_nr_free_pages - get the nr: the number of free pages
static size_t buddy_nr_free_pages(void)
{
	size_t ret = 0, order = 0;
	for (; order <= MAX_ORDER; order++) {
8001bc9c:	2484000c 	addiu	a0,a0,12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:227
		ret += nr_free(order) * (1 << order);
8001bca0:	00652804 	sllv	a1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:226

//buddy_nr_free_pages - get the nr: the number of free pages
static size_t buddy_nr_free_pages(void)
{
	size_t ret = 0, order = 0;
	for (; order <= MAX_ORDER; order++) {
8001bca4:	24630001 	addiu	v1,v1,1
8001bca8:	1466fffb 	bne	v1,a2,8001bc98 <buddy_nr_free_pages+0x14>
8001bcac:	00451021 	addu	v0,v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:230
		ret += nr_free(order) * (1 << order);
	}
	return ret;
}
8001bcb0:	03e00008 	jr	ra
8001bcb4:	00000000 	nop

8001bcb8 <buddy_init_memmap>:
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:55
	}
}

//buddy_init_memmap - build free_list for Page base follow  n continuous pages.
static void buddy_init_memmap(struct Page *base, size_t n)
{
8001bcb8:	27bdffc8 	addiu	sp,sp,-56
8001bcbc:	afb10018 	sw	s1,24(sp)
8001bcc0:	afb00014 	sw	s0,20(sp)
8001bcc4:	afbf0034 	sw	ra,52(sp)
8001bcc8:	afb70030 	sw	s7,48(sp)
8001bccc:	afb6002c 	sw	s6,44(sp)
8001bcd0:	afb50028 	sw	s5,40(sp)
8001bcd4:	afb40024 	sw	s4,36(sp)
8001bcd8:	afb30020 	sw	s3,32(sp)
8001bcdc:	afb2001c 	sw	s2,28(sp)
8001bce0:	00a08021 	move	s0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:57
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
8001bce4:	10a00074 	beqz	a1,8001beb8 <buddy_init_memmap+0x200>
8001bce8:	00808821 	move	s1,a0
8001bcec:	3c148015 	lui	s4,0x8015
8001bcf0:	8e827764 	lw	v0,30564(s4)
8001bcf4:	2843000a 	slti	v1,v0,10
8001bcf8:	1060006f 	beqz	v1,8001beb8 <buddy_init_memmap+0x200>
8001bcfc:	0005a940 	sll	s5,a1,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:59
	struct Page *p = base;
	for (; p != base + n; p++) {
8001bd00:	0095a821 	addu	s5,a0,s5
8001bd04:	10950010 	beq	a0,s5,8001bd48 <buddy_init_memmap+0x90>
8001bd08:	00809021 	move	s2,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001bd0c:	40026000 	mfc0	v0,c0_status
8001bd10:	30420001 	andi	v0,v0,0x1
8001bd14:	14400059 	bnez	v0,8001be7c <buddy_init_memmap+0x1c4>
8001bd18:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001bd1c:	8e530004 	lw	s3,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001bd20:	32730001 	andi	s3,s3,0x1
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:60
		assert(PageReserved(p));
8001bd24:	1260005c 	beqz	s3,8001be98 <buddy_init_memmap+0x1e0>
8001bd28:	8e827764 	lw	v0,30564(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:61
		p->flags = p->property = 0;
8001bd2c:	ae400008 	sw	zero,8(s2)
8001bd30:	ae400004 	sw	zero,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:62
		p->zone_num = zone_num;
8001bd34:	ae42000c 	sw	v0,12(s2)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8001bd38:	ae400000 	sw	zero,0(s2)
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:59
static void buddy_init_memmap(struct Page *base, size_t n)
{
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
	struct Page *p = base;
	for (; p != base + n; p++) {
8001bd3c:	26520020 	addiu	s2,s2,32
8001bd40:	1655fff2 	bne	s2,s5,8001bd0c <buddy_init_memmap+0x54>
8001bd44:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:65
		assert(PageReserved(p));
		p->flags = p->property = 0;
		p->zone_num = zone_num;
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
8001bd48:	3c038015 	lui	v1,0x8015
8001bd4c:	00022080 	sll	a0,v0,0x2
8001bd50:	246376b8 	addiu	v1,v1,30392
8001bd54:	24420001 	addiu	v0,v0,1
8001bd58:	00831821 	addu	v1,a0,v1
8001bd5c:	ae827764 	sw	v0,30564(s4)
8001bd60:	3c178015 	lui	s7,0x8015
8001bd64:	3c148015 	lui	s4,0x8015
8001bd68:	ac710000 	sw	s1,0(v1)
8001bd6c:	26947760 	addiu	s4,s4,30560
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:66
	size_t order = MAX_ORDER, order_size = (1 << order);
8001bd70:	24130400 	li	s3,1024
8001bd74:	2415000a 	li	s5,10
8001bd78:	26f776e0 	addiu	s7,s7,30432
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
	while (n != 0) {
		while (n >= order_size) {
8001bd7c:	0213102b 	sltu	v0,s0,s3
8001bd80:	1440002f 	bnez	v0,8001be40 <buddy_init_memmap+0x188>
8001bd84:	00151100 	sll	v0,s5,0x4
8001bd88:	00159080 	sll	s2,s5,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
8001bd8c:	00529023 	subu	s2,v0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bd90:	0013b140 	sll	s6,s3,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
8001bd94:	08006f77 	j	8001bddc <buddy_init_memmap+0x124>
8001bd98:	02f29021 	addu	s2,s7,s2
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001bd9c:	8e220004 	lw	v0,4(s1)
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
8001bda0:	26230010 	addiu	v1,s1,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			n -= order_size, p += order_size;
8001bda4:	02138023 	subu	s0,s0,s3
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bda8:	34420002 	ori	v0,v0,0x2
8001bdac:	ae220004 	sw	v0,4(s1)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001bdb0:	8e420004 	lw	v0,4(s2)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001bdb4:	ae430004 	sw	v1,4(s2)
8001bdb8:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001bdbc:	ae220014 	sw	v0,20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001bdc0:	ae320010 	sw	s2,16(s1)
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			nr_free(order)++;
8001bdc4:	8e830000 	lw	v1,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bdc8:	0213102b 	sltu	v0,s0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
8001bdcc:	02368821 	addu	s1,s1,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			nr_free(order)++;
8001bdd0:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001bdd4:	1440001a 	bnez	v0,8001be40 <buddy_init_memmap+0x188>
8001bdd8:	ae830000 	sw	v1,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:69
			p->property = order;
8001bddc:	ae350008 	sw	s5,8(s1)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001bde0:	40026000 	mfc0	v0,c0_status
8001bde4:	30420001 	andi	v0,v0,0x1
8001bde8:	1040ffec 	beqz	v0,8001bd9c <buddy_init_memmap+0xe4>
8001bdec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001bdf0:	0c006d0c 	jal	8001b430 <intr_disable>
8001bdf4:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001bdf8:	8e220004 	lw	v0,4(s1)
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
8001bdfc:	02138023 	subu	s0,s0,s3
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001be00:	34420002 	ori	v0,v0,0x2
8001be04:	ae220004 	sw	v0,4(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001be08:	0c006d08 	jal	8001b420 <intr_enable>
8001be0c:	00000000 	nop
list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001be10:	8e420004 	lw	v0,4(s2)
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:71
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
8001be14:	26230010 	addiu	v1,s1,16
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001be18:	ae430004 	sw	v1,4(s2)
8001be1c:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001be20:	ae220014 	sw	v0,20(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001be24:	ae320010 	sw	s2,16(s1)
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			n -= order_size, p += order_size;
			nr_free(order)++;
8001be28:	8e830000 	lw	v1,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001be2c:	0213102b 	sltu	v0,s0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:72
			p->property = order;
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
8001be30:	02368821 	addu	s1,s1,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:73
			nr_free(order)++;
8001be34:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:68
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
		while (n >= order_size) {
8001be38:	1040ffe8 	beqz	v0,8001bddc <buddy_init_memmap+0x124>
8001be3c:	ae830000 	sw	v1,0(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:75
			SetPageProperty(p);
			list_add(&free_list(order), &(p->page_link));
			n -= order_size, p += order_size;
			nr_free(order)++;
		}
		order--;
8001be40:	26b5ffff 	addiu	s5,s5,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:76
		order_size >>= 1;
8001be44:	00139842 	srl	s3,s3,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:67
		p->zone_num = zone_num;
		set_page_ref(p, 0);
	}
	p = zones[zone_num++].mem_base = base;
	size_t order = MAX_ORDER, order_size = (1 << order);
	while (n != 0) {
8001be48:	1600ffcc 	bnez	s0,8001bd7c <buddy_init_memmap+0xc4>
8001be4c:	2694fff4 	addiu	s4,s4,-12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:78
			nr_free(order)++;
		}
		order--;
		order_size >>= 1;
	}
}
8001be50:	8fbf0034 	lw	ra,52(sp)
8001be54:	8fb70030 	lw	s7,48(sp)
8001be58:	8fb6002c 	lw	s6,44(sp)
8001be5c:	8fb50028 	lw	s5,40(sp)
8001be60:	8fb40024 	lw	s4,36(sp)
8001be64:	8fb30020 	lw	s3,32(sp)
8001be68:	8fb2001c 	lw	s2,28(sp)
8001be6c:	8fb10018 	lw	s1,24(sp)
8001be70:	8fb00014 	lw	s0,20(sp)
8001be74:	03e00008 	jr	ra
8001be78:	27bd0038 	addiu	sp,sp,56
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001be7c:	0c006d0c 	jal	8001b430 <intr_disable>
8001be80:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001be84:	8e530004 	lw	s3,4(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001be88:	0c006d08 	jal	8001b420 <intr_enable>
8001be8c:	32730001 	andi	s3,s3,0x1
8001be90:	08006f49 	j	8001bd24 <buddy_init_memmap+0x6c>
8001be94:	00000000 	nop
buddy_init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:60
{
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
	struct Page *p = base;
	for (; p != base + n; p++) {
		assert(PageReserved(p));
8001be98:	3c048002 	lui	a0,0x8002
8001be9c:	3c068002 	lui	a2,0x8002
8001bea0:	3c078002 	lui	a3,0x8002
8001bea4:	24844048 	addiu	a0,a0,16456
8001bea8:	2405003c 	li	a1,60
8001beac:	24c60e48 	addiu	a2,a2,3656
8001beb0:	0c006b13 	jal	8001ac4c <__panic>
8001beb4:	24e74078 	addiu	a3,a3,16504
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:57

//buddy_init_memmap - build free_list for Page base follow  n continuous pages.
static void buddy_init_memmap(struct Page *base, size_t n)
{
	static int zone_num = 0;
	assert(n > 0 && zone_num < MAX_ZONE_NUM);
8001beb8:	3c048002 	lui	a0,0x8002
8001bebc:	3c068002 	lui	a2,0x8002
8001bec0:	3c078002 	lui	a3,0x8002
8001bec4:	24844048 	addiu	a0,a0,16456
8001bec8:	24050039 	li	a1,57
8001becc:	24c60e48 	addiu	a2,a2,3656
8001bed0:	0c006b13 	jal	8001ac4c <__panic>
8001bed4:	24e74054 	addiu	a3,a3,16468

8001bed8 <buddy_alloc_pages>:
buddy_alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:125
	return NULL;
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
{
8001bed8:	27bdffc0 	addiu	sp,sp,-64
8001bedc:	afbf003c 	sw	ra,60(sp)
8001bee0:	afbe0038 	sw	s8,56(sp)
8001bee4:	afb70034 	sw	s7,52(sp)
8001bee8:	afb60030 	sw	s6,48(sp)
8001beec:	afb5002c 	sw	s5,44(sp)
8001bef0:	afb40028 	sw	s4,40(sp)
8001bef4:	afb30024 	sw	s3,36(sp)
8001bef8:	afb20020 	sw	s2,32(sp)
8001befc:	afb1001c 	sw	s1,28(sp)
8001bf00:	afb00018 	sw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:126
	assert(n > 0);
8001bf04:	1080009c 	beqz	a0,8001c178 <buddy_alloc_pages+0x2a0>
8001bf08:	00803821 	move	a3,a0
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001bf0c:	2c820002 	sltiu	v0,a0,2
8001bf10:	14400096 	bnez	v0,8001c16c <buddy_alloc_pages+0x294>
8001bf14:	24020002 	li	v0,2
8001bf18:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:84

//getorder - return order, the minmal 2^order >= n
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
8001bf1c:	2404000b 	li	a0,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001bf20:	0047182b 	sltu	v1,v0,a3
8001bf24:	1060000a 	beqz	v1,8001bf50 <buddy_alloc_pages+0x78>
8001bf28:	24110001 	li	s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:85
//getorder - return order, the minmal 2^order >= n
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
8001bf2c:	26520001 	addiu	s2,s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:84

//getorder - return order, the minmal 2^order >= n
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
8001bf30:	1644fffb 	bne	s2,a0,8001bf20 <buddy_alloc_pages+0x48>
8001bf34:	00021040 	sll	v0,v0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:90
	     order++, order_size <<= 1) {
		if (n <= order_size) {
			return order;
		}
	}
	panic("getorder failed. %d\n", n);
8001bf38:	3c048002 	lui	a0,0x8002
8001bf3c:	3c068002 	lui	a2,0x8002
8001bf40:	24844048 	addiu	a0,a0,16456
8001bf44:	2405005a 	li	a1,90
8001bf48:	0c006b13 	jal	8001ac4c <__panic>
8001bf4c:	24c633ec 	addiu	a2,a2,13292
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001bf50:	02518804 	sllv	s1,s1,s2
8001bf54:	3c178015 	lui	s7,0x8015
8001bf58:	02401021 	move	v0,s2
8001bf5c:	26f776e0 	addiu	s7,s7,30432
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:99
//                      - the remaining free parts insert to other free list
static inline struct Page *buddy_alloc_pages_sub(size_t order)
{
	assert(order <= MAX_ORDER);
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
8001bf60:	2405000b 	li	a1,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:100
		if (!list_empty(&free_list(cur_order))) {
8001bf64:	00021880 	sll	v1,v0,0x2
8001bf68:	00022100 	sll	a0,v0,0x4
8001bf6c:	00831823 	subu	v1,a0,v1
8001bf70:	02e31821 	addu	v1,s7,v1
list_empty():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:126
 * list_empty - tests whether a list is empty
 * @list:       the list to test.
 * */
static inline bool list_empty(list_entry_t * list)
{
	return list->next == list;
8001bf74:	8c750004 	lw	s5,4(v1)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:100
8001bf78:	54750012 	bnel	v1,s5,8001bfc4 <buddy_alloc_pages+0xec>
8001bf7c:	8c680008 	lw	t0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:99
//                      - the remaining free parts insert to other free list
static inline struct Page *buddy_alloc_pages_sub(size_t order)
{
	assert(order <= MAX_ORDER);
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
8001bf80:	24420001 	addiu	v0,v0,1
8001bf84:	5445fff8 	bnel	v0,a1,8001bf68 <buddy_alloc_pages+0x90>
8001bf88:	00021880 	sll	v1,v0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:120
			}
			ClearPageProperty(page);
			return page;
		}
	}
	return NULL;
8001bf8c:	00008021 	move	s0,zero
buddy_alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:133
	struct Page *page = buddy_alloc_pages_sub(order);
	if (page != NULL && n != order_size) {
		free_pages(page + n, order_size - n);
	}
	return page;
}
8001bf90:	8fbf003c 	lw	ra,60(sp)
8001bf94:	02001021 	move	v0,s0
8001bf98:	8fbe0038 	lw	s8,56(sp)
8001bf9c:	8fb70034 	lw	s7,52(sp)
8001bfa0:	8fb60030 	lw	s6,48(sp)
8001bfa4:	8fb5002c 	lw	s5,44(sp)
8001bfa8:	8fb40028 	lw	s4,40(sp)
8001bfac:	8fb30024 	lw	s3,36(sp)
8001bfb0:	8fb20020 	lw	s2,32(sp)
8001bfb4:	8fb1001c 	lw	s1,28(sp)
8001bfb8:	8fb00018 	lw	s0,24(sp)
8001bfbc:	03e00008 	jr	ra
8001bfc0:	27bd0040 	addiu	sp,sp,64
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001bfc4:	8ea50000 	lw	a1,0(s5)
8001bfc8:	8ea40004 	lw	a0,4(s5)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:103
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
8001bfcc:	2508ffff 	addiu	t0,t0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001bfd0:	0242302b 	sltu	a2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:103
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
8001bfd4:	ac680008 	sw	t0,8(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:102
	assert(order <= MAX_ORDER);
	size_t cur_order;
	for (cur_order = order; cur_order <= MAX_ORDER; cur_order++) {
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
8001bfd8:	26b0fff0 	addiu	s0,s5,-16
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001bfdc:	aca40004 	sw	a0,4(a1)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001bfe0:	10c0003c 	beqz	a2,8001c0d4 <buddy_alloc_pages+0x1fc>
8001bfe4:	ac850000 	sw	a1,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001bfe8:	2454ffff 	addiu	s4,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:124
	}
	return NULL;
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
8001bfec:	00141880 	sll	v1,s4,0x2
8001bff0:	0014b100 	sll	s6,s4,0x4
8001bff4:	02c3b023 	subu	s6,s6,v1
8001bff8:	26d60008 	addiu	s6,s6,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:105
		if (!list_empty(&free_list(cur_order))) {
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
8001bffc:	241e0001 	li	s8,1
8001c000:	005ef004 	sllv	s8,s8,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:124
	}
	return NULL;
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
8001c004:	08007016 	j	8001c058 <buddy_alloc_pages+0x180>
8001c008:	02f6b021 	addu	s6,s7,s6
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001c00c:	8e620004 	lw	v0,4(s3)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
				list_add(&free_list(cur_order),
8001c010:	00142080 	sll	a0,s4,0x2
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001c014:	34420002 	ori	v0,v0,0x2
8001c018:	ae620004 	sw	v0,4(s3)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001c01c:	8ec30000 	lw	v1,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001c020:	00141100 	sll	v0,s4,0x4
8001c024:	00441023 	subu	v0,v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001c028:	24630001 	addiu	v1,v1,1
8001c02c:	aec30000 	sw	v1,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001c030:	02e21021 	addu	v0,s7,v0
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001c034:	8c430004 	lw	v1,4(v0)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
8001c038:	26640010 	addiu	a0,s3,16
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001c03c:	ac440004 	sw	a0,4(v0)
8001c040:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001c044:	ae630014 	sw	v1,20(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001c048:	ae620010 	sw	v0,16(s3)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001c04c:	12920021 	beq	s4,s2,8001c0d4 <buddy_alloc_pages+0x1fc>
8001c050:	26d6fff4 	addiu	s6,s6,-12
8001c054:	2694ffff 	addiu	s4,s4,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:108
				cur_order--;
				size >>= 1;
8001c058:	001ef042 	srl	s8,s8,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:109
				struct Page *buddy = page + size;
8001c05c:	001e9940 	sll	s3,s8,0x5
8001c060:	02139821 	addu	s3,s0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:110
				buddy->property = cur_order;
8001c064:	ae740008 	sw	s4,8(s3)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001c068:	40026000 	mfc0	v0,c0_status
8001c06c:	30420001 	andi	v0,v0,0x1
8001c070:	1040ffe6 	beqz	v0,8001c00c <buddy_alloc_pages+0x134>
8001c074:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001c078:	0c006d0c 	jal	8001b430 <intr_disable>
8001c07c:	afa70010 	sw	a3,16(sp)
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001c080:	8e620004 	lw	v0,4(s3)
8001c084:	34420002 	ori	v0,v0,0x2
8001c088:	ae620004 	sw	v0,4(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c08c:	0c006d08 	jal	8001b420 <intr_enable>
8001c090:	00000000 	nop
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001c094:	8ec30000 	lw	v1,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001c098:	00142080 	sll	a0,s4,0x2
8001c09c:	00141100 	sll	v0,s4,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001c0a0:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001c0a4:	00441023 	subu	v0,v0,a0
8001c0a8:	8fa70010 	lw	a3,16(sp)
8001c0ac:	02e21021 	addu	v0,s7,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:112
				cur_order--;
				size >>= 1;
				struct Page *buddy = page + size;
				buddy->property = cur_order;
				SetPageProperty(buddy);
				nr_free(cur_order)++;
8001c0b0:	aec30000 	sw	v1,0(s6)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001c0b4:	8c430004 	lw	v1,4(v0)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:113
				list_add(&free_list(cur_order),
8001c0b8:	26640010 	addiu	a0,s3,16
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001c0bc:	ac440004 	sw	a0,4(v0)
8001c0c0:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001c0c4:	ae630014 	sw	v1,20(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001c0c8:	ae620010 	sw	v0,16(s3)
buddy_alloc_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:106
			list_entry_t *le = list_next(&free_list(cur_order));
			struct Page *page = le2page(le, page_link);
			nr_free(cur_order)--;
			list_del(le);
			size_t size = 1 << cur_order;
			while (cur_order > order) {
8001c0cc:	1692ffe1 	bne	s4,s2,8001c054 <buddy_alloc_pages+0x17c>
8001c0d0:	26d6fff4 	addiu	s6,s6,-12
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001c0d4:	40026000 	mfc0	v0,c0_status
8001c0d8:	30420001 	andi	v0,v0,0x1
8001c0dc:	14400019 	bnez	v0,8001c144 <buddy_alloc_pages+0x26c>
8001c0e0:	00000000 	nop
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
8001c0e4:	8ea3fff4 	lw	v1,-12(s5)
8001c0e8:	2402fffd 	li	v0,-3
8001c0ec:	00621024 	and	v0,v1,v0
8001c0f0:	aea2fff4 	sw	v0,-12(s5)
buddy_alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:129
static struct Page *buddy_alloc_pages(size_t n)
{
	assert(n > 0);
	size_t order = getorder(n), order_size = (1 << order);
	struct Page *page = buddy_alloc_pages_sub(order);
	if (page != NULL && n != order_size) {
8001c0f4:	1200ffa7 	beqz	s0,8001bf94 <buddy_alloc_pages+0xbc>
8001c0f8:	8fbf003c 	lw	ra,60(sp)
8001c0fc:	10f1ffa5 	beq	a3,s1,8001bf94 <buddy_alloc_pages+0xbc>
8001c100:	00072140 	sll	a0,a3,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:130
		free_pages(page + n, order_size - n);
8001c104:	02042021 	addu	a0,s0,a0
8001c108:	0c007449 	jal	8001d124 <free_pages>
8001c10c:	02272823 	subu	a1,s1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:133
	}
	return page;
}
8001c110:	8fbf003c 	lw	ra,60(sp)
8001c114:	02001021 	move	v0,s0
8001c118:	8fbe0038 	lw	s8,56(sp)
8001c11c:	8fb70034 	lw	s7,52(sp)
8001c120:	8fb60030 	lw	s6,48(sp)
8001c124:	8fb5002c 	lw	s5,44(sp)
8001c128:	8fb40028 	lw	s4,40(sp)
8001c12c:	8fb30024 	lw	s3,36(sp)
8001c130:	8fb20020 	lw	s2,32(sp)
8001c134:	8fb1001c 	lw	s1,28(sp)
8001c138:	8fb00018 	lw	s0,24(sp)
8001c13c:	03e00008 	jr	ra
8001c140:	27bd0040 	addiu	sp,sp,64
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001c144:	0c006d0c 	jal	8001b430 <intr_disable>
8001c148:	afa70010 	sw	a3,16(sp)
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
8001c14c:	8ea3fff4 	lw	v1,-12(s5)
8001c150:	2402fffd 	li	v0,-3
8001c154:	00621024 	and	v0,v1,v0
8001c158:	aea2fff4 	sw	v0,-12(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c15c:	0c006d08 	jal	8001b420 <intr_enable>
8001c160:	00000000 	nop
8001c164:	0800703d 	j	8001c0f4 <buddy_alloc_pages+0x21c>
8001c168:	8fa70010 	lw	a3,16(sp)
getorder():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:86
static inline size_t getorder(size_t n)
{
	size_t order, order_size;
	for (order = 0, order_size = 1; order <= MAX_ORDER;
	     order++, order_size <<= 1) {
		if (n <= order_size) {
8001c16c:	24110001 	li	s1,1
8001c170:	08006fd5 	j	8001bf54 <buddy_alloc_pages+0x7c>
8001c174:	00009021 	move	s2,zero
buddy_alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:126
}

//buddy_alloc_pages - call buddy_alloc_pages_sub to alloc 2^order>=n pages
static struct Page *buddy_alloc_pages(size_t n)
{
	assert(n > 0);
8001c178:	3c048002 	lui	a0,0x8002
8001c17c:	3c068002 	lui	a2,0x8002
8001c180:	3c078002 	lui	a3,0x8002
8001c184:	24844048 	addiu	a0,a0,16456
8001c188:	2405007e 	li	a1,126
8001c18c:	24c60e48 	addiu	a2,a2,3656
8001c190:	0c006b13 	jal	8001ac4c <__panic>
8001c194:	24e74088 	addiu	a3,a3,16520

8001c198 <buddy_check>:
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:234
	return ret;
}

//buddy_check - check the correctness of buddy system
static void buddy_check(void)
{
8001c198:	27bdff38 	addiu	sp,sp,-200
8001c19c:	afb400b0 	sw	s4,176(sp)
8001c1a0:	3c148015 	lui	s4,0x8015
8001c1a4:	afbe00c0 	sw	s8,192(sp)
8001c1a8:	afb500b4 	sw	s5,180(sp)
8001c1ac:	afb100a4 	sw	s1,164(sp)
8001c1b0:	afb000a0 	sw	s0,160(sp)
8001c1b4:	afbf00c4 	sw	ra,196(sp)
8001c1b8:	afb700bc 	sw	s7,188(sp)
8001c1bc:	afb600b8 	sw	s6,184(sp)
8001c1c0:	afb300ac 	sw	s3,172(sp)
8001c1c4:	afb200a8 	sw	s2,168(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:236
	int i;
	int count = 0, total = 0;
8001c1c8:	00008021 	move	s0,zero
8001c1cc:	00008821 	move	s1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:237
	for (i = 0; i <= MAX_ORDER; i++) {
8001c1d0:	0000a821 	move	s5,zero
8001c1d4:	269476e0 	addiu	s4,s4,30432
8001c1d8:	241e000b 	li	s8,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:238
		list_entry_t *list = &free_list(i), *le = list;
8001c1dc:	0015b080 	sll	s6,s5,0x2
8001c1e0:	00151100 	sll	v0,s5,0x4
8001c1e4:	0056b023 	subu	s6,v0,s6
8001c1e8:	0296b021 	addu	s6,s4,s6
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001c1ec:	8ed20004 	lw	s2,4(s6)
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:239
		while ((le = list_next(le)) != list) {
8001c1f0:	12d20011 	beq	s6,s2,8001c238 <buddy_check+0xa0>
8001c1f4:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:242
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count++, total += (1 << i);
8001c1f8:	02a2b804 	sllv	s7,v0,s5
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001c1fc:	40026000 	mfc0	v0,c0_status
8001c200:	30420001 	andi	v0,v0,0x1
8001c204:	14400119 	bnez	v0,8001c66c <buddy_check+0x4d4>
8001c208:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c20c:	8e53fff4 	lw	s3,-12(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c210:	7e730040 	ext	s3,s3,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:241
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c214:	1260011d 	beqz	s3,8001c68c <buddy_check+0x4f4>
8001c218:	3c048002 	lui	a0,0x8002
8001c21c:	8e42fff8 	lw	v0,-8(s2)
8001c220:	1455011a 	bne	v0,s5,8001c68c <buddy_check+0x4f4>
8001c224:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8001c228:	8e520004 	lw	s2,4(s2)
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:242
			count++, total += (1 << i);
8001c22c:	26310001 	addiu	s1,s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:239
{
	int i;
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
8001c230:	16d2fff2 	bne	s6,s2,8001c1fc <buddy_check+0x64>
8001c234:	02178021 	addu	s0,s0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:237
//buddy_check - check the correctness of buddy system
static void buddy_check(void)
{
	int i;
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
8001c238:	26b50001 	addiu	s5,s5,1
8001c23c:	56beffe8 	bnel	s5,s8,8001c1e0 <buddy_check+0x48>
8001c240:	0015b080 	sll	s6,s5,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:245
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count++, total += (1 << i);
		}
	}
	assert(total == nr_free_pages());
8001c244:	0c007467 	jal	8001d19c <nr_free_pages>
8001c248:	00000000 	nop
8001c24c:	1602017e 	bne	s0,v0,8001c848 <buddy_check+0x6b0>
8001c250:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:247

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;
8001c254:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c258:	24040008 	li	a0,8
8001c25c:	24040008 	li	a0,8
8001c260:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c264:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:249

	assert(p0 != NULL);
8001c268:	12a0016f 	beqz	s5,8001c828 <buddy_check+0x690>
8001c26c:	0040b821 	move	s7,v0
page2idx():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001c270:	8ea3000c 	lw	v1,12(s5)
8001c274:	3c028015 	lui	v0,0x8015
8001c278:	244276b8 	addiu	v0,v0,30392
8001c27c:	00031880 	sll	v1,v1,0x2
8001c280:	00621021 	addu	v0,v1,v0
8001c284:	8c420000 	lw	v0,0(v0)
8001c288:	02a21023 	subu	v0,s5,v0
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:250
	assert(total == nr_free_pages());

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
	assert((page2idx(p0) & 7) == 0);
8001c28c:	7c421140 	ext	v0,v0,0x5,0x3
8001c290:	1440015e 	bnez	v0,8001c80c <buddy_check+0x674>
8001c294:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c298:	40026000 	mfc0	v0,c0_status
8001c29c:	30420001 	andi	v0,v0,0x1
8001c2a0:	14400101 	bnez	v0,8001c6a8 <buddy_check+0x510>
8001c2a4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c2a8:	8eb20004 	lw	s2,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c2ac:	7e520040 	ext	s2,s2,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:251
	assert(!PageProperty(p0));
8001c2b0:	16400168 	bnez	s2,8001c854 <buddy_check+0x6bc>
8001c2b4:	27b2003c 	addiu	s2,sp,60
8001c2b8:	27b30010 	addiu	s3,sp,16
8001c2bc:	3c028015 	lui	v0,0x8015
8001c2c0:	244276e8 	addiu	v0,v0,30440
8001c2c4:	02603021 	move	a2,s3
8001c2c8:	02402821 	move	a1,s2
8001c2cc:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:256

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
8001c2d0:	2409000b 	li	t1,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:258
		free_lists_store[i] = free_list(i);
		list_init(&free_list(i));
8001c2d4:	00033900 	sll	a3,v1,0x4
8001c2d8:	00032080 	sll	a0,v1,0x2
8001c2dc:	00e42023 	subu	a0,a3,a0
8001c2e0:	02842021 	addu	a0,s4,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:257

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
		free_lists_store[i] = free_list(i);
8001c2e4:	8c48fff8 	lw	t0,-8(v0)
8001c2e8:	8c47fffc 	lw	a3,-4(v0)
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001c2ec:	ac840004 	sw	a0,4(a0)
8001c2f0:	ac840000 	sw	a0,0(a0)
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:260
		list_init(&free_list(i));
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
8001c2f4:	8c440000 	lw	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:256
	assert(!PageProperty(p0));

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
8001c2f8:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:257
		free_lists_store[i] = free_list(i);
8001c2fc:	aca80000 	sw	t0,0(a1)
8001c300:	aca70004 	sw	a3,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:260
		list_init(&free_list(i));
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
8001c304:	acc40000 	sw	a0,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:261
		nr_free(i) = 0;
8001c308:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:256
	assert(!PageProperty(p0));

	list_entry_t free_lists_store[MAX_ORDER + 1];
	unsigned int nr_free_store[MAX_ORDER + 1];

	for (i = 0; i <= MAX_ORDER; i++) {
8001c30c:	24a50008 	addiu	a1,a1,8
8001c310:	2442000c 	addiu	v0,v0,12
8001c314:	1469ffef 	bne	v1,t1,8001c2d4 <buddy_check+0x13c>
8001c318:	24c60004 	addiu	a2,a2,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:264
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
		nr_free(i) = 0;
	}

	assert(nr_free_pages() == 0);
8001c31c:	0c007467 	jal	8001d19c <nr_free_pages>
8001c320:	00000000 	nop
8001c324:	14400153 	bnez	v0,8001c874 <buddy_check+0x6dc>
8001c328:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:265
	assert(alloc_page() == NULL);
8001c32c:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c330:	24040001 	li	a0,1
8001c334:	14400156 	bnez	v0,8001c890 <buddy_check+0x6f8>
8001c338:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:266
	free_pages(p0, 8);
8001c33c:	0c007449 	jal	8001d124 <free_pages>
8001c340:	24050008 	li	a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:267
	assert(nr_free_pages() == 8);
8001c344:	0c007467 	jal	8001d19c <nr_free_pages>
8001c348:	00000000 	nop
8001c34c:	24030008 	li	v1,8
8001c350:	14430157 	bne	v0,v1,8001c8b0 <buddy_check+0x718>
8001c354:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c358:	40026000 	mfc0	v0,c0_status
8001c35c:	30420001 	andi	v0,v0,0x1
8001c360:	1440010d 	bnez	v0,8001c798 <buddy_check+0x600>
8001c364:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c368:	8eb60004 	lw	s6,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c36c:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:268
	assert(PageProperty(p0) && p0->property == 3);
8001c370:	12c00156 	beqz	s6,8001c8cc <buddy_check+0x734>
8001c374:	24020003 	li	v0,3
8001c378:	8ea30008 	lw	v1,8(s5)
8001c37c:	14620154 	bne	v1,v0,8001c8d0 <buddy_check+0x738>
8001c380:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:269
	assert((p0 = alloc_pages(6)) != NULL && !PageProperty(p0)
8001c384:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c388:	24040006 	li	a0,6
8001c38c:	10400157 	beqz	v0,8001c8ec <buddy_check+0x754>
8001c390:	0040a821 	move	s5,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c394:	40026000 	mfc0	v0,c0_status
8001c398:	30420001 	andi	v0,v0,0x1
8001c39c:	144000f7 	bnez	v0,8001c77c <buddy_check+0x5e4>
8001c3a0:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c3a4:	8eb60004 	lw	s6,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c3a8:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:269
8001c3ac:	16c00150 	bnez	s6,8001c8f0 <buddy_check+0x758>
8001c3b0:	3c048002 	lui	a0,0x8002
8001c3b4:	0c007467 	jal	8001d19c <nr_free_pages>
8001c3b8:	00000000 	nop
8001c3bc:	24030002 	li	v1,2
8001c3c0:	1443014b 	bne	v0,v1,8001c8f0 <buddy_check+0x758>
8001c3c4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:272
	       && nr_free_pages() == 2);

	assert((p1 = alloc_pages(2)) != NULL && p1 == p0 + 6);
8001c3c8:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c3cc:	24040002 	li	a0,2
8001c3d0:	1040014e 	beqz	v0,8001c90c <buddy_check+0x774>
8001c3d4:	0040b021 	move	s6,v0
8001c3d8:	26a200c0 	addiu	v0,s5,192
8001c3dc:	16c2014c 	bne	s6,v0,8001c910 <buddy_check+0x778>
8001c3e0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:273
	assert(nr_free_pages() == 0);
8001c3e4:	0c007467 	jal	8001d19c <nr_free_pages>
8001c3e8:	00000000 	nop
8001c3ec:	1440014f 	bnez	v0,8001c92c <buddy_check+0x794>
8001c3f0:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:275

	free_pages(p0, 3);
8001c3f4:	02a02021 	move	a0,s5
8001c3f8:	0c007449 	jal	8001d124 <free_pages>
8001c3fc:	24050003 	li	a1,3
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c400:	40026000 	mfc0	v0,c0_status
8001c404:	30420001 	andi	v0,v0,0x1
8001c408:	144000d5 	bnez	v0,8001c760 <buddy_check+0x5c8>
8001c40c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c410:	8ebe0004 	lw	s8,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c414:	7fde0040 	ext	s8,s8,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:276
	assert(PageProperty(p0) && p0->property == 1);
8001c418:	13c00147 	beqz	s8,8001c938 <buddy_check+0x7a0>
8001c41c:	24020001 	li	v0,1
8001c420:	8ea30008 	lw	v1,8(s5)
8001c424:	14620145 	bne	v1,v0,8001c93c <buddy_check+0x7a4>
8001c428:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c42c:	40026000 	mfc0	v0,c0_status
8001c430:	30420001 	andi	v0,v0,0x1
8001c434:	144000c3 	bnez	v0,8001c744 <buddy_check+0x5ac>
8001c438:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c43c:	8ebe0044 	lw	s8,68(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c440:	7fde0040 	ext	s8,s8,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:277
	assert(PageProperty(p0 + 2) && p0[2].property == 0);
8001c444:	13c00144 	beqz	s8,8001c958 <buddy_check+0x7c0>
8001c448:	3c048002 	lui	a0,0x8002
8001c44c:	8ea20048 	lw	v0,72(s5)
8001c450:	14400142 	bnez	v0,8001c95c <buddy_check+0x7c4>
8001c454:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:279

	free_pages(p0 + 3, 3);
8001c458:	26a40060 	addiu	a0,s5,96
8001c45c:	0c007449 	jal	8001d124 <free_pages>
8001c460:	24050003 	li	a1,3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:280
	free_pages(p1, 2);
8001c464:	02c02021 	move	a0,s6
8001c468:	0c007449 	jal	8001d124 <free_pages>
8001c46c:	24050002 	li	a1,2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c470:	40026000 	mfc0	v0,c0_status
8001c474:	30420001 	andi	v0,v0,0x1
8001c478:	144000ab 	bnez	v0,8001c728 <buddy_check+0x590>
8001c47c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c480:	8eb60004 	lw	s6,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c484:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:282

	assert(PageProperty(p0) && p0->property == 3);
8001c488:	12c0013a 	beqz	s6,8001c974 <buddy_check+0x7dc>
8001c48c:	24020003 	li	v0,3
8001c490:	8ea30008 	lw	v1,8(s5)
8001c494:	14620138 	bne	v1,v0,8001c978 <buddy_check+0x7e0>
8001c498:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:284

	assert((p0 = alloc_pages(6)) != NULL);
8001c49c:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c4a0:	24040006 	li	a0,6
8001c4a4:	10400137 	beqz	v0,8001c984 <buddy_check+0x7ec>
8001c4a8:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:285
	assert((p1 = alloc_pages(2)) != NULL);
8001c4ac:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c4b0:	24040002 	li	a0,2
8001c4b4:	5040013b 	beqzl	v0,8001c9a4 <buddy_check+0x80c>
8001c4b8:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:286
	free_pages(p0 + 4, 2);
8001c4bc:	26a40080 	addiu	a0,s5,128
8001c4c0:	24050002 	li	a1,2
8001c4c4:	0c007449 	jal	8001d124 <free_pages>
8001c4c8:	afa20098 	sw	v0,152(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:287
	free_pages(p1, 2);
8001c4cc:	8fa20098 	lw	v0,152(sp)
8001c4d0:	24050002 	li	a1,2
8001c4d4:	0c007449 	jal	8001d124 <free_pages>
8001c4d8:	00402021 	move	a0,v0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c4dc:	40026000 	mfc0	v0,c0_status
8001c4e0:	30420001 	andi	v0,v0,0x1
8001c4e4:	14400089 	bnez	v0,8001c70c <buddy_check+0x574>
8001c4e8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c4ec:	8eb60084 	lw	s6,132(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c4f0:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:290

	p1 = p0 + 4;
	assert(PageProperty(p1) && p1->property == 2);
8001c4f4:	12c00132 	beqz	s6,8001c9c0 <buddy_check+0x828>
8001c4f8:	24020002 	li	v0,2
8001c4fc:	8ea30088 	lw	v1,136(s5)
8001c500:	14620130 	bne	v1,v0,8001c9c4 <buddy_check+0x82c>
8001c504:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:291
	free_pages(p0, 4);
8001c508:	02a02021 	move	a0,s5
8001c50c:	0c007449 	jal	8001d124 <free_pages>
8001c510:	24050004 	li	a1,4
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c514:	40026000 	mfc0	v0,c0_status
8001c518:	30420001 	andi	v0,v0,0x1
8001c51c:	14400074 	bnez	v0,8001c6f0 <buddy_check+0x558>
8001c520:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c524:	8eb60004 	lw	s6,4(s5)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c528:	7ed60040 	ext	s6,s6,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:292
	assert(PageProperty(p0) && p0->property == 3);
8001c52c:	12c0012c 	beqz	s6,8001c9e0 <buddy_check+0x848>
8001c530:	24020003 	li	v0,3
8001c534:	8ea30008 	lw	v1,8(s5)
8001c538:	1462012a 	bne	v1,v0,8001c9e4 <buddy_check+0x84c>
8001c53c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:294

	assert((p0 = alloc_pages(8)) != NULL);
8001c540:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c544:	24040008 	li	a0,8
8001c548:	10400129 	beqz	v0,8001c9f0 <buddy_check+0x858>
8001c54c:	0040a821 	move	s5,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:295
	assert(alloc_page() == NULL && nr_free_pages() == 0);
8001c550:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001c554:	24040001 	li	a0,1
8001c558:	1440012e 	bnez	v0,8001ca14 <buddy_check+0x87c>
8001c55c:	3c048002 	lui	a0,0x8002
8001c560:	0c007467 	jal	8001d19c <nr_free_pages>
8001c564:	00000000 	nop
8001c568:	14400129 	bnez	v0,8001ca10 <buddy_check+0x878>
8001c56c:	02801021 	move	v0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:233
	}
	return ret;
}

//buddy_check - check the correctness of buddy system
static void buddy_check(void)
8001c570:	26860084 	addiu	a2,s4,132
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:298

	assert((p0 = alloc_pages(8)) != NULL);
	assert(alloc_page() == NULL && nr_free_pages() == 0);

	for (i = 0; i <= MAX_ORDER; i++) {
		free_list(i) = free_lists_store[i];
8001c574:	8e450000 	lw	a1,0(s2)
8001c578:	8e440004 	lw	a0,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:299
		nr_free(i) = nr_free_store[i];
8001c57c:	8e630000 	lw	v1,0(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:298

	assert((p0 = alloc_pages(8)) != NULL);
	assert(alloc_page() == NULL && nr_free_pages() == 0);

	for (i = 0; i <= MAX_ORDER; i++) {
		free_list(i) = free_lists_store[i];
8001c580:	ac450000 	sw	a1,0(v0)
8001c584:	ac440004 	sw	a0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:299
		nr_free(i) = nr_free_store[i];
8001c588:	ac430008 	sw	v1,8(v0)
8001c58c:	2442000c 	addiu	v0,v0,12
8001c590:	26520008 	addiu	s2,s2,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:297
	assert(PageProperty(p0) && p0->property == 3);

	assert((p0 = alloc_pages(8)) != NULL);
	assert(alloc_page() == NULL && nr_free_pages() == 0);

	for (i = 0; i <= MAX_ORDER; i++) {
8001c594:	1446fff7 	bne	v0,a2,8001c574 <buddy_check+0x3dc>
8001c598:	26730004 	addiu	s3,s3,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:302
		free_list(i) = free_lists_store[i];
		nr_free(i) = nr_free_store[i];
	}

	free_pages(p0, 8);
8001c59c:	24050008 	li	a1,8
8001c5a0:	0c007449 	jal	8001d124 <free_pages>
8001c5a4:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:303
	free_pages(buddy, 8);
8001c5a8:	02e02021 	move	a0,s7
8001c5ac:	0c007449 	jal	8001d124 <free_pages>
8001c5b0:	24050008 	li	a1,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:305

	assert(total == nr_free_pages());
8001c5b4:	0c007467 	jal	8001d19c <nr_free_pages>
8001c5b8:	00009021 	move	s2,zero
8001c5bc:	1602007d 	bne	s0,v0,8001c7b4 <buddy_check+0x61c>
8001c5c0:	241e000b 	li	s8,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:308

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
8001c5c4:	0012b080 	sll	s6,s2,0x2
8001c5c8:	00121100 	sll	v0,s2,0x4
8001c5cc:	0056b023 	subu	s6,v0,s6
8001c5d0:	0296b021 	addu	s6,s4,s6
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
 * list_next - get the next entry
 * @listelm:    the list head
 **/
static list_entry_t *list_next(list_entry_t * listelm)
{
	return listelm->next;
8001c5d4:	8ed30004 	lw	s3,4(s6)
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:309
		while ((le = list_next(le)) != list) {
8001c5d8:	12d30012 	beq	s6,s3,8001c624 <buddy_check+0x48c>
8001c5dc:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:312
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count--, total -= (1 << i);
8001c5e0:	0242b804 	sllv	s7,v0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:233
	}
	return ret;
}

//buddy_check - check the correctness of buddy system
static void buddy_check(void)
8001c5e4:	0017b823 	negu	s7,s7
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001c5e8:	40026000 	mfc0	v0,c0_status
8001c5ec:	30420001 	andi	v0,v0,0x1
8001c5f0:	14400034 	bnez	v0,8001c6c4 <buddy_check+0x52c>
8001c5f4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c5f8:	8e75fff4 	lw	s5,-12(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001c5fc:	7eb50040 	ext	s5,s5,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:311

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c600:	12a00038 	beqz	s5,8001c6e4 <buddy_check+0x54c>
8001c604:	3c048002 	lui	a0,0x8002
8001c608:	8e62fff8 	lw	v0,-8(s3)
8001c60c:	14520035 	bne	v0,s2,8001c6e4 <buddy_check+0x54c>
8001c610:	3c048002 	lui	a0,0x8002
list_next():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:135
8001c614:	8e730004 	lw	s3,4(s3)
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:312
			count--, total -= (1 << i);
8001c618:	2631ffff 	addiu	s1,s1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:309

	assert(total == nr_free_pages());

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
8001c61c:	16d3fff2 	bne	s6,s3,8001c5e8 <buddy_check+0x450>
8001c620:	02178021 	addu	s0,s0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:307
	free_pages(p0, 8);
	free_pages(buddy, 8);

	assert(total == nr_free_pages());

	for (i = 0; i <= MAX_ORDER; i++) {
8001c624:	26520001 	addiu	s2,s2,1
8001c628:	565effe7 	bnel	s2,s8,8001c5c8 <buddy_check+0x430>
8001c62c:	0012b080 	sll	s6,s2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:315
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count--, total -= (1 << i);
		}
	}
	assert(count == 0);
8001c630:	16200068 	bnez	s1,8001c7d4 <buddy_check+0x63c>
8001c634:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:316
	assert(total == 0);
8001c638:	1600006d 	bnez	s0,8001c7f0 <buddy_check+0x658>
8001c63c:	8fbf00c4 	lw	ra,196(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:317
}
8001c640:	8fbe00c0 	lw	s8,192(sp)
8001c644:	8fb700bc 	lw	s7,188(sp)
8001c648:	8fb600b8 	lw	s6,184(sp)
8001c64c:	8fb500b4 	lw	s5,180(sp)
8001c650:	8fb400b0 	lw	s4,176(sp)
8001c654:	8fb300ac 	lw	s3,172(sp)
8001c658:	8fb200a8 	lw	s2,168(sp)
8001c65c:	8fb100a4 	lw	s1,164(sp)
8001c660:	8fb000a0 	lw	s0,160(sp)
8001c664:	03e00008 	jr	ra
8001c668:	27bd00c8 	addiu	sp,sp,200
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001c66c:	0c006d0c 	jal	8001b430 <intr_disable>
8001c670:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001c674:	8e53fff4 	lw	s3,-12(s2)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c678:	0c006d08 	jal	8001b420 <intr_enable>
8001c67c:	7e730040 	ext	s3,s3,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:241
	int count = 0, total = 0;
	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c680:	5660fee7 	bnezl	s3,8001c220 <buddy_check+0x88>
8001c684:	8e42fff8 	lw	v0,-8(s2)
8001c688:	3c048002 	lui	a0,0x8002
8001c68c:	24844048 	addiu	a0,a0,16456
8001c690:	240500f1 	li	a1,241
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:311

	for (i = 0; i <= MAX_ORDER; i++) {
		list_entry_t *list = &free_list(i), *le = list;
		while ((le = list_next(le)) != list) {
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
8001c694:	3c068002 	lui	a2,0x8002
8001c698:	3c078002 	lui	a3,0x8002
8001c69c:	24c60e48 	addiu	a2,a2,3656
8001c6a0:	0c006b13 	jal	8001ac4c <__panic>
8001c6a4:	24e74090 	addiu	a3,a3,16528
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c6a8:	0c006d0c 	jal	8001b430 <intr_disable>
8001c6ac:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c6b0:	8eb20004 	lw	s2,4(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c6b4:	0c006d08 	jal	8001b420 <intr_enable>
8001c6b8:	7e520040 	ext	s2,s2,0x1,0x1
8001c6bc:	080070ac 	j	8001c2b0 <buddy_check+0x118>
8001c6c0:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c6c4:	0c006d0c 	jal	8001b430 <intr_disable>
8001c6c8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c6cc:	8e75fff4 	lw	s5,-12(s3)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c6d0:	0c006d08 	jal	8001b420 <intr_enable>
8001c6d4:	7eb50040 	ext	s5,s5,0x1,0x1
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:311
8001c6d8:	56a0ffcc 	bnezl	s5,8001c60c <buddy_check+0x474>
8001c6dc:	8e62fff8 	lw	v0,-8(s3)
8001c6e0:	3c048002 	lui	a0,0x8002
8001c6e4:	24844048 	addiu	a0,a0,16456
8001c6e8:	080071a5 	j	8001c694 <buddy_check+0x4fc>
8001c6ec:	24050137 	li	a1,311
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c6f0:	0c006d0c 	jal	8001b430 <intr_disable>
8001c6f4:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c6f8:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c6fc:	0c006d08 	jal	8001b420 <intr_enable>
8001c700:	7ed60040 	ext	s6,s6,0x1,0x1
8001c704:	0800714b 	j	8001c52c <buddy_check+0x394>
8001c708:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c70c:	0c006d0c 	jal	8001b430 <intr_disable>
8001c710:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c714:	8eb60084 	lw	s6,132(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c718:	0c006d08 	jal	8001b420 <intr_enable>
8001c71c:	7ed60040 	ext	s6,s6,0x1,0x1
8001c720:	0800713d 	j	8001c4f4 <buddy_check+0x35c>
8001c724:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c728:	0c006d0c 	jal	8001b430 <intr_disable>
8001c72c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c730:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c734:	0c006d08 	jal	8001b420 <intr_enable>
8001c738:	7ed60040 	ext	s6,s6,0x1,0x1
8001c73c:	08007122 	j	8001c488 <buddy_check+0x2f0>
8001c740:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c744:	0c006d0c 	jal	8001b430 <intr_disable>
8001c748:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c74c:	8ebe0044 	lw	s8,68(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c750:	0c006d08 	jal	8001b420 <intr_enable>
8001c754:	7fde0040 	ext	s8,s8,0x1,0x1
8001c758:	08007111 	j	8001c444 <buddy_check+0x2ac>
8001c75c:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c760:	0c006d0c 	jal	8001b430 <intr_disable>
8001c764:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c768:	8ebe0004 	lw	s8,4(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c76c:	0c006d08 	jal	8001b420 <intr_enable>
8001c770:	7fde0040 	ext	s8,s8,0x1,0x1
8001c774:	08007106 	j	8001c418 <buddy_check+0x280>
8001c778:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c77c:	0c006d0c 	jal	8001b430 <intr_disable>
8001c780:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c784:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c788:	0c006d08 	jal	8001b420 <intr_enable>
8001c78c:	7ed60040 	ext	s6,s6,0x1,0x1
8001c790:	080070eb 	j	8001c3ac <buddy_check+0x214>
8001c794:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001c798:	0c006d0c 	jal	8001b430 <intr_disable>
8001c79c:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001c7a0:	8eb60004 	lw	s6,4(s5)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001c7a4:	0c006d08 	jal	8001b420 <intr_enable>
8001c7a8:	7ed60040 	ext	s6,s6,0x1,0x1
8001c7ac:	080070dc 	j	8001c370 <buddy_check+0x1d8>
8001c7b0:	00000000 	nop
buddy_check():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:305
	}

	free_pages(p0, 8);
	free_pages(buddy, 8);

	assert(total == nr_free_pages());
8001c7b4:	3c048002 	lui	a0,0x8002
8001c7b8:	24844048 	addiu	a0,a0,16456
8001c7bc:	24050131 	li	a1,305
8001c7c0:	3c068002 	lui	a2,0x8002
8001c7c4:	3c078002 	lui	a3,0x8002
8001c7c8:	24c60e48 	addiu	a2,a2,3656
8001c7cc:	0c006b13 	jal	8001ac4c <__panic>
8001c7d0:	24e740b4 	addiu	a3,a3,16564
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:315
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count--, total -= (1 << i);
		}
	}
	assert(count == 0);
8001c7d4:	3c068002 	lui	a2,0x8002
8001c7d8:	3c078002 	lui	a3,0x8002
8001c7dc:	24844048 	addiu	a0,a0,16456
8001c7e0:	2405013b 	li	a1,315
8001c7e4:	24c60e48 	addiu	a2,a2,3656
8001c7e8:	0c006b13 	jal	8001ac4c <__panic>
8001c7ec:	24e742e8 	addiu	a3,a3,17128
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:316
	assert(total == 0);
8001c7f0:	3c068002 	lui	a2,0x8002
8001c7f4:	3c078002 	lui	a3,0x8002
8001c7f8:	24844048 	addiu	a0,a0,16456
8001c7fc:	2405013c 	li	a1,316
8001c800:	24c60e48 	addiu	a2,a2,3656
8001c804:	0c006b13 	jal	8001ac4c <__panic>
8001c808:	24e742f4 	addiu	a3,a3,17140
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:250
	assert(total == nr_free_pages());

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
	assert((page2idx(p0) & 7) == 0);
8001c80c:	3c068002 	lui	a2,0x8002
8001c810:	3c078002 	lui	a3,0x8002
8001c814:	24844048 	addiu	a0,a0,16456
8001c818:	240500fa 	li	a1,250
8001c81c:	24c60e48 	addiu	a2,a2,3656
8001c820:	0c006b13 	jal	8001ac4c <__panic>
8001c824:	24e740dc 	addiu	a3,a3,16604
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:249
	}
	assert(total == nr_free_pages());

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
8001c828:	3c048002 	lui	a0,0x8002
8001c82c:	3c068002 	lui	a2,0x8002
8001c830:	3c078002 	lui	a3,0x8002
8001c834:	24844048 	addiu	a0,a0,16456
8001c838:	240500f9 	li	a1,249
8001c83c:	24c60e48 	addiu	a2,a2,3656
8001c840:	0c006b13 	jal	8001ac4c <__panic>
8001c844:	24e740d0 	addiu	a3,a3,16592
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:245
			struct Page *p = le2page(le, page_link);
			assert(PageProperty(p) && p->property == i);
			count++, total += (1 << i);
		}
	}
	assert(total == nr_free_pages());
8001c848:	24844048 	addiu	a0,a0,16456
8001c84c:	080071f0 	j	8001c7c0 <buddy_check+0x628>
8001c850:	240500f5 	li	a1,245
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:251

	struct Page *p0 = alloc_pages(8), *buddy = alloc_pages(8), *p1;

	assert(p0 != NULL);
	assert((page2idx(p0) & 7) == 0);
	assert(!PageProperty(p0));
8001c854:	3c048002 	lui	a0,0x8002
8001c858:	3c068002 	lui	a2,0x8002
8001c85c:	3c078002 	lui	a3,0x8002
8001c860:	24844048 	addiu	a0,a0,16456
8001c864:	240500fb 	li	a1,251
8001c868:	24c60e48 	addiu	a2,a2,3656
8001c86c:	0c006b13 	jal	8001ac4c <__panic>
8001c870:	24e740f4 	addiu	a3,a3,16628
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:264
		assert(list_empty(&free_list(i)));
		nr_free_store[i] = nr_free(i);
		nr_free(i) = 0;
	}

	assert(nr_free_pages() == 0);
8001c874:	24844048 	addiu	a0,a0,16456
8001c878:	24050108 	li	a1,264
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:273
	assert(PageProperty(p0) && p0->property == 3);
	assert((p0 = alloc_pages(6)) != NULL && !PageProperty(p0)
	       && nr_free_pages() == 2);

	assert((p1 = alloc_pages(2)) != NULL && p1 == p0 + 6);
	assert(nr_free_pages() == 0);
8001c87c:	3c068002 	lui	a2,0x8002
8001c880:	3c078002 	lui	a3,0x8002
8001c884:	24c60e48 	addiu	a2,a2,3656
8001c888:	0c006b13 	jal	8001ac4c <__panic>
8001c88c:	24e742d0 	addiu	a3,a3,17104
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:265
		nr_free_store[i] = nr_free(i);
		nr_free(i) = 0;
	}

	assert(nr_free_pages() == 0);
	assert(alloc_page() == NULL);
8001c890:	3c048002 	lui	a0,0x8002
8001c894:	3c068002 	lui	a2,0x8002
8001c898:	3c078002 	lui	a3,0x8002
8001c89c:	24844048 	addiu	a0,a0,16456
8001c8a0:	24050109 	li	a1,265
8001c8a4:	24c60e48 	addiu	a2,a2,3656
8001c8a8:	0c006b13 	jal	8001ac4c <__panic>
8001c8ac:	24e74108 	addiu	a3,a3,16648
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:267
	free_pages(p0, 8);
	assert(nr_free_pages() == 8);
8001c8b0:	3c068002 	lui	a2,0x8002
8001c8b4:	3c078002 	lui	a3,0x8002
8001c8b8:	24844048 	addiu	a0,a0,16456
8001c8bc:	2405010b 	li	a1,267
8001c8c0:	24c60e48 	addiu	a2,a2,3656
8001c8c4:	0c006b13 	jal	8001ac4c <__panic>
8001c8c8:	24e74120 	addiu	a3,a3,16672
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:268
	assert(PageProperty(p0) && p0->property == 3);
8001c8cc:	3c048002 	lui	a0,0x8002
8001c8d0:	24844048 	addiu	a0,a0,16456
8001c8d4:	2405010c 	li	a1,268
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:282
	assert(PageProperty(p0 + 2) && p0[2].property == 0);

	free_pages(p0 + 3, 3);
	free_pages(p1, 2);

	assert(PageProperty(p0) && p0->property == 3);
8001c8d8:	3c068002 	lui	a2,0x8002
8001c8dc:	3c078002 	lui	a3,0x8002
8001c8e0:	24c60e48 	addiu	a2,a2,3656
8001c8e4:	0c006b13 	jal	8001ac4c <__panic>
8001c8e8:	24e74138 	addiu	a3,a3,16696
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:269
	assert(nr_free_pages() == 0);
	assert(alloc_page() == NULL);
	free_pages(p0, 8);
	assert(nr_free_pages() == 8);
	assert(PageProperty(p0) && p0->property == 3);
	assert((p0 = alloc_pages(6)) != NULL && !PageProperty(p0)
8001c8ec:	3c048002 	lui	a0,0x8002
8001c8f0:	3c068002 	lui	a2,0x8002
8001c8f4:	3c078002 	lui	a3,0x8002
8001c8f8:	24844048 	addiu	a0,a0,16456
8001c8fc:	2405010e 	li	a1,270
8001c900:	24c60e48 	addiu	a2,a2,3656
8001c904:	0c006b13 	jal	8001ac4c <__panic>
8001c908:	24e74160 	addiu	a3,a3,16736
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:272
	       && nr_free_pages() == 2);

	assert((p1 = alloc_pages(2)) != NULL && p1 == p0 + 6);
8001c90c:	3c048002 	lui	a0,0x8002
8001c910:	3c068002 	lui	a2,0x8002
8001c914:	3c078002 	lui	a3,0x8002
8001c918:	24844048 	addiu	a0,a0,16456
8001c91c:	24050110 	li	a1,272
8001c920:	24c60e48 	addiu	a2,a2,3656
8001c924:	0c006b13 	jal	8001ac4c <__panic>
8001c928:	24e741ac 	addiu	a3,a3,16812
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:273
	assert(nr_free_pages() == 0);
8001c92c:	24844048 	addiu	a0,a0,16456
8001c930:	0800721f 	j	8001c87c <buddy_check+0x6e4>
8001c934:	24050111 	li	a1,273
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:276

	free_pages(p0, 3);
	assert(PageProperty(p0) && p0->property == 1);
8001c938:	3c048002 	lui	a0,0x8002
8001c93c:	3c068002 	lui	a2,0x8002
8001c940:	3c078002 	lui	a3,0x8002
8001c944:	24844048 	addiu	a0,a0,16456
8001c948:	24050114 	li	a1,276
8001c94c:	24c60e48 	addiu	a2,a2,3656
8001c950:	0c006b13 	jal	8001ac4c <__panic>
8001c954:	24e741dc 	addiu	a3,a3,16860
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:277
	assert(PageProperty(p0 + 2) && p0[2].property == 0);
8001c958:	3c068002 	lui	a2,0x8002
8001c95c:	3c078002 	lui	a3,0x8002
8001c960:	24844048 	addiu	a0,a0,16456
8001c964:	24050115 	li	a1,277
8001c968:	24c60e48 	addiu	a2,a2,3656
8001c96c:	0c006b13 	jal	8001ac4c <__panic>
8001c970:	24e74204 	addiu	a3,a3,16900
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:282

	free_pages(p0 + 3, 3);
	free_pages(p1, 2);

	assert(PageProperty(p0) && p0->property == 3);
8001c974:	3c048002 	lui	a0,0x8002
8001c978:	24844048 	addiu	a0,a0,16456
8001c97c:	08007236 	j	8001c8d8 <buddy_check+0x740>
8001c980:	2405011a 	li	a1,282
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:284

	assert((p0 = alloc_pages(6)) != NULL);
8001c984:	3c048002 	lui	a0,0x8002
8001c988:	3c068002 	lui	a2,0x8002
8001c98c:	3c078002 	lui	a3,0x8002
8001c990:	24844048 	addiu	a0,a0,16456
8001c994:	2405011c 	li	a1,284
8001c998:	24c60e48 	addiu	a2,a2,3656
8001c99c:	0c006b13 	jal	8001ac4c <__panic>
8001c9a0:	24e74230 	addiu	a3,a3,16944
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:285
	assert((p1 = alloc_pages(2)) != NULL);
8001c9a4:	3c068002 	lui	a2,0x8002
8001c9a8:	3c078002 	lui	a3,0x8002
8001c9ac:	24844048 	addiu	a0,a0,16456
8001c9b0:	2405011d 	li	a1,285
8001c9b4:	24c60e48 	addiu	a2,a2,3656
8001c9b8:	0c006b13 	jal	8001ac4c <__panic>
8001c9bc:	24e74250 	addiu	a3,a3,16976
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:290
	free_pages(p0 + 4, 2);
	free_pages(p1, 2);

	p1 = p0 + 4;
	assert(PageProperty(p1) && p1->property == 2);
8001c9c0:	3c048002 	lui	a0,0x8002
8001c9c4:	3c068002 	lui	a2,0x8002
8001c9c8:	3c078002 	lui	a3,0x8002
8001c9cc:	24844048 	addiu	a0,a0,16456
8001c9d0:	24050122 	li	a1,290
8001c9d4:	24c60e48 	addiu	a2,a2,3656
8001c9d8:	0c006b13 	jal	8001ac4c <__panic>
8001c9dc:	24e74270 	addiu	a3,a3,17008
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:292
	free_pages(p0, 4);
	assert(PageProperty(p0) && p0->property == 3);
8001c9e0:	3c048002 	lui	a0,0x8002
8001c9e4:	24844048 	addiu	a0,a0,16456
8001c9e8:	08007236 	j	8001c8d8 <buddy_check+0x740>
8001c9ec:	24050124 	li	a1,292
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:294

	assert((p0 = alloc_pages(8)) != NULL);
8001c9f0:	3c048002 	lui	a0,0x8002
8001c9f4:	3c068002 	lui	a2,0x8002
8001c9f8:	3c078002 	lui	a3,0x8002
8001c9fc:	24844048 	addiu	a0,a0,16456
8001ca00:	24050126 	li	a1,294
8001ca04:	24c60e48 	addiu	a2,a2,3656
8001ca08:	0c006b13 	jal	8001ac4c <__panic>
8001ca0c:	24e74298 	addiu	a3,a3,17048
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:295
	assert(alloc_page() == NULL && nr_free_pages() == 0);
8001ca10:	3c048002 	lui	a0,0x8002
8001ca14:	3c068002 	lui	a2,0x8002
8001ca18:	3c078002 	lui	a3,0x8002
8001ca1c:	24844048 	addiu	a0,a0,16456
8001ca20:	24050127 	li	a1,295
8001ca24:	24c60e48 	addiu	a2,a2,3656
8001ca28:	0c006b13 	jal	8001ac4c <__panic>
8001ca2c:	24e742b8 	addiu	a3,a3,17080

8001ca30 <buddy_free_pages_sub>:
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001ca30:	27bdffb0 	addiu	sp,sp,-80
8001ca34:	afb00028 	sw	s0,40(sp)
page2idx():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001ca38:	8c90000c 	lw	s0,12(a0)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001ca3c:	afb30034 	sw	s3,52(sp)
page2idx():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001ca40:	3c138015 	lui	s3,0x8015
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001ca44:	afb20030 	sw	s2,48(sp)
page2idx():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001ca48:	267376b8 	addiu	s3,s3,30392
8001ca4c:	00109080 	sll	s2,s0,0x2
8001ca50:	02721021 	addu	v0,s3,s2
8001ca54:	8c420000 	lw	v0,0(v0)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001ca58:	afbe0048 	sw	s8,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001ca5c:	241e0001 	li	s8,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001ca60:	afb60040 	sw	s6,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001ca64:	00bef004 	sllv	s8,s8,a1
page2idx():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001ca68:	0082b023 	subu	s6,a0,v0
8001ca6c:	0016b143 	sra	s6,s6,0x5
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001ca70:	27c3ffff 	addiu	v1,s8,-1
8001ca74:	00761824 	and	v1,v1,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:163
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
8001ca78:	afb5003c 	sw	s5,60(sp)
8001ca7c:	afb1002c 	sw	s1,44(sp)
8001ca80:	afbf004c 	sw	ra,76(sp)
8001ca84:	afb70044 	sw	s7,68(sp)
8001ca88:	afb40038 	sw	s4,56(sp)
8001ca8c:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001ca90:	146000ee 	bnez	v1,8001ce4c <buddy_free_pages_sub+0x41c>
8001ca94:	00a0a821 	move	s5,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:167
	struct Page *p = base;
	for (; p != base + (1 << order); p++) {
8001ca98:	24170020 	li	s7,32
8001ca9c:	00b7b804 	sllv	s7,s7,a1
8001caa0:	0097b821 	addu	s7,a0,s7
8001caa4:	1097001a 	beq	a0,s7,8001cb10 <buddy_free_pages_sub+0xe0>
8001caa8:	0080a021 	move	s4,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001caac:	40026000 	mfc0	v0,c0_status
8001cab0:	30420001 	andi	v0,v0,0x1
8001cab4:	1440004b 	bnez	v0,8001cbe4 <buddy_free_pages_sub+0x1b4>
8001cab8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001cabc:	8e900004 	lw	s0,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cac0:	32100001 	andi	s0,s0,0x1
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:168
		assert(!PageReserved(p) && !PageProperty(p));
8001cac4:	160000da 	bnez	s0,8001ce30 <buddy_free_pages_sub+0x400>
8001cac8:	3c048002 	lui	a0,0x8002
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001cacc:	40026000 	mfc0	v0,c0_status
8001cad0:	30420001 	andi	v0,v0,0x1
8001cad4:	1440004a 	bnez	v0,8001cc00 <buddy_free_pages_sub+0x1d0>
8001cad8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cadc:	8e900004 	lw	s0,4(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cae0:	7e100040 	ext	s0,s0,0x1,0x1
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:168
8001cae4:	160000d2 	bnez	s0,8001ce30 <buddy_free_pages_sub+0x400>
8001cae8:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:169
		p->flags = 0;
8001caec:	ae800004 	sw	zero,4(s4)
atomic_set():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:34
 *
 * Atomically sets the value of @v to @i.
 * */
static __always_inline void atomic_set(atomic_t * v, int i)
{
	v->counter = i;
8001caf0:	ae800000 	sw	zero,0(s4)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:167
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
	struct Page *p = base;
	for (; p != base + (1 << order); p++) {
8001caf4:	26940020 	addiu	s4,s4,32
8001caf8:	1697ffec 	bne	s4,s7,8001caac <buddy_free_pages_sub+0x7c>
8001cafc:	00000000 	nop
8001cb00:	8e30000c 	lw	s0,12(s1)
8001cb04:	00109080 	sll	s2,s0,0x2
8001cb08:	02721021 	addu	v0,s3,s2
8001cb0c:	8c420000 	lw	v0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cb10:	2ea3000a 	sltiu	v1,s5,10
8001cb14:	1060000c 	beqz	v1,8001cb48 <buddy_free_pages_sub+0x118>
8001cb18:	3c178015 	lui	s7,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		buddy_idx = page_idx ^ (1 << order);
8001cb1c:	02dea026 	xor	s4,s6,s8
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001cb20:	8ee377bc 	lw	v1,30652(s7)
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cb24:	00148940 	sll	s1,s4,0x5
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139

//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
8001cb28:	3c1e8015 	lui	s8,0x8015
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cb2c:	00518821 	addu	s1,v0,s1
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139

//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
8001cb30:	8fc47770 	lw	a0,30576(s8)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
8001cb34:	02231823 	subu	v1,s1,v1
8001cb38:	00031943 	sra	v1,v1,0x5
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139
8001cb3c:	0064182b 	sltu	v1,v1,a0
8001cb40:	54600036 	bnezl	v1,8001cc1c <buddy_free_pages_sub+0x1ec>
8001cb44:	8e23000c 	lw	v1,12(s1)
8001cb48:	3c038015 	lui	v1,0x8015
8001cb4c:	246376e0 	addiu	v1,v1,30432
8001cb50:	afa30010 	sw	v1,16(sp)
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cb54:	0016b140 	sll	s6,s6,0x5
8001cb58:	0056b021 	addu	s6,v0,s6
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:186
		ClearPageProperty(buddy);
		page_idx &= buddy_idx;
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
8001cb5c:	aed50008 	sw	s5,8(s6)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001cb60:	40026000 	mfc0	v0,c0_status
8001cb64:	30420001 	andi	v0,v0,0x1
8001cb68:	1440004a 	bnez	v0,8001cc94 <buddy_free_pages_sub+0x264>
8001cb6c:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001cb70:	8ec20004 	lw	v0,4(s6)
8001cb74:	34420002 	ori	v0,v0,0x2
8001cb78:	aec20004 	sw	v0,4(s6)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
	SetPageProperty(page);
	nr_free(order)++;
8001cb7c:	00151080 	sll	v0,s5,0x2
8001cb80:	0015a900 	sll	s5,s5,0x4
8001cb84:	02a2a823 	subu	s5,s5,v0
8001cb88:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:190
	list_add(&free_list(order), &(page->page_link));
}
8001cb8c:	8fbf004c 	lw	ra,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:189
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
	SetPageProperty(page);
	nr_free(order)++;
	list_add(&free_list(order), &(page->page_link));
8001cb90:	26c30010 	addiu	v1,s6,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
	SetPageProperty(page);
	nr_free(order)++;
8001cb94:	0055a821 	addu	s5,v0,s5
8001cb98:	8ea40008 	lw	a0,8(s5)
list_add_after():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:93
 * Insert the new element @elm *after* the element @listelm which
 * is already in the list.
 * */
static inline void list_add_after(list_entry_t * listelm, list_entry_t * elm)
{
	__list_add(elm, listelm, listelm->next);
8001cb9c:	8ea20004 	lw	v0,4(s5)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:190
	list_add(&free_list(order), &(page->page_link));
}
8001cba0:	8fbe0048 	lw	s8,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
	SetPageProperty(page);
	nr_free(order)++;
8001cba4:	24840001 	addiu	a0,a0,1
8001cba8:	aea40008 	sw	a0,8(s5)
__list_add():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:156
 * the prev/next entries already!
 * */
static inline void
__list_add(list_entry_t * elm, list_entry_t * prev, list_entry_t * next)
{
	prev->next = next->prev = elm;
8001cbac:	aea30004 	sw	v1,4(s5)
8001cbb0:	ac430000 	sw	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:157
	elm->next = next;
8001cbb4:	aec20014 	sw	v0,20(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:158
	elm->prev = prev;
8001cbb8:	aed50010 	sw	s5,16(s6)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:190
	list_add(&free_list(order), &(page->page_link));
}
8001cbbc:	8fb70044 	lw	s7,68(sp)
8001cbc0:	8fb60040 	lw	s6,64(sp)
8001cbc4:	8fb5003c 	lw	s5,60(sp)
8001cbc8:	8fb40038 	lw	s4,56(sp)
8001cbcc:	8fb30034 	lw	s3,52(sp)
8001cbd0:	8fb20030 	lw	s2,48(sp)
8001cbd4:	8fb1002c 	lw	s1,44(sp)
8001cbd8:	8fb00028 	lw	s0,40(sp)
8001cbdc:	03e00008 	jr	ra
8001cbe0:	27bd0050 	addiu	sp,sp,80
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001cbe4:	0c006d0c 	jal	8001b430 <intr_disable>
8001cbe8:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cbec:	8e900004 	lw	s0,4(s4)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cbf0:	0c006d08 	jal	8001b420 <intr_enable>
8001cbf4:	32100001 	andi	s0,s0,0x1
8001cbf8:	080072b1 	j	8001cac4 <buddy_free_pages_sub+0x94>
8001cbfc:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001cc00:	0c006d0c 	jal	8001b430 <intr_disable>
8001cc04:	00000000 	nop
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001cc08:	8e900004 	lw	s0,4(s4)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cc0c:	0c006d08 	jal	8001b420 <intr_enable>
8001cc10:	7e100040 	ext	s0,s0,0x1,0x1
8001cc14:	080072b9 	j	8001cae4 <buddy_free_pages_sub+0xb4>
8001cc18:	00000000 	nop
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:140
//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
		if (page->zone_num == zone_num) {
8001cc1c:	1603ffcb 	bne	s0,v1,8001cb4c <buddy_free_pages_sub+0x11c>
8001cc20:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:162
	return zones[zone_num].mem_base + idx;
}

//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
8001cc24:	00151080 	sll	v0,s5,0x2
8001cc28:	00152100 	sll	a0,s5,0x4
8001cc2c:	00822023 	subu	a0,a0,v0
8001cc30:	3c028015 	lui	v0,0x8015
8001cc34:	244276e0 	addiu	v0,v0,30432
8001cc38:	24840008 	addiu	a0,a0,8
8001cc3c:	afa20010 	sw	v0,16(sp)
8001cc40:	00442021 	addu	a0,v0,a0
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cc44:	2403000a 	li	v1,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		buddy_idx = page_idx ^ (1 << order);
8001cc48:	24060001 	li	a2,1
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cc4c:	02722821 	addu	a1,s3,s2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001cc50:	40026000 	mfc0	v0,c0_status
8001cc54:	30420001 	andi	v0,v0,0x1
8001cc58:	54400048 	bnezl	v0,8001cd7c <buddy_free_pages_sub+0x34c>
8001cc5c:	afa3001c 	sw	v1,28(sp)
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
8001cc60:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cc64:	30420001 	andi	v0,v0,0x1
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:141
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
		if (page->zone_num == zone_num) {
			return !PageReserved(page) && PageProperty(page)
8001cc68:	10400013 	beqz	v0,8001ccb8 <buddy_free_pages_sub+0x288>
8001cc6c:	00000000 	nop
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cc70:	02729021 	addu	s2,s3,s2
8001cc74:	8e420000 	lw	v0,0(s2)
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cc78:	0016b140 	sll	s6,s6,0x5
8001cc7c:	0056b021 	addu	s6,v0,s6
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:186
		ClearPageProperty(buddy);
		page_idx &= buddy_idx;
		order++;
	}
	struct Page *page = idx2page(zone_num, page_idx);
	page->property = order;
8001cc80:	aed50008 	sw	s5,8(s6)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001cc84:	40026000 	mfc0	v0,c0_status
8001cc88:	30420001 	andi	v0,v0,0x1
8001cc8c:	1040ffb8 	beqz	v0,8001cb70 <buddy_free_pages_sub+0x140>
8001cc90:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001cc94:	0c006d0c 	jal	8001b430 <intr_disable>
8001cc98:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001cc9c:	8ec20004 	lw	v0,4(s6)
8001cca0:	34420002 	ori	v0,v0,0x2
8001cca4:	aec20004 	sw	v0,4(s6)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cca8:	0c006d08 	jal	8001b420 <intr_enable>
8001ccac:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:188
	SetPageProperty(page);
	nr_free(order)++;
8001ccb0:	080072e0 	j	8001cb80 <buddy_free_pages_sub+0x150>
8001ccb4:	00151080 	sll	v0,s5,0x2
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001ccb8:	40026000 	mfc0	v0,c0_status
8001ccbc:	30420001 	andi	v0,v0,0x1
8001ccc0:	5440003e 	bnezl	v0,8001cdbc <buddy_free_pages_sub+0x38c>
8001ccc4:	afa3001c 	sw	v1,28(sp)
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001ccc8:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cccc:	7c420040 	ext	v0,v0,0x1,0x1
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:141
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
		if (page->zone_num == zone_num) {
			return !PageReserved(page) && PageProperty(page)
8001ccd0:	5040ffe8 	beqzl	v0,8001cc74 <buddy_free_pages_sub+0x244>
8001ccd4:	02729021 	addu	s2,s3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:142
			    && page->property == order;
8001ccd8:	8e220008 	lw	v0,8(s1)
8001ccdc:	56a2ffe5 	bnel	s5,v0,8001cc74 <buddy_free_pages_sub+0x244>
8001cce0:	02729021 	addu	s2,s3,s2
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:179
		buddy_idx = page_idx ^ (1 << order);
		struct Page *buddy = idx2page(zone_num, buddy_idx);
		if (!page_is_buddy(buddy, order, zone_num)) {
			break;
		}
		nr_free(order)--;
8001cce4:	8c820000 	lw	v0,0(a0)
8001cce8:	2442ffff 	addiu	v0,v0,-1
8001ccec:	ac820000 	sw	v0,0(a0)
list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:105
 * Note: list_empty() on @listelm does not return true after this, the entry is
 * in an undefined state.
 * */
static inline void list_del(list_entry_t * listelm)
{
	__list_del(listelm->prev, listelm->next);
8001ccf0:	8e270010 	lw	a3,16(s1)
8001ccf4:	8e220014 	lw	v0,20(s1)
__list_del():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:169
 * This is only for internal list manipulation where we know
 * the prev/next entries already!
 * */
static inline void __list_del(list_entry_t * prev, list_entry_t * next)
{
	prev->next = next;
8001ccf8:	ace20004 	sw	v0,4(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:170
	next->prev = prev;
8001ccfc:	ac470000 	sw	a3,0(v0)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001cd00:	40026000 	mfc0	v0,c0_status
8001cd04:	30420001 	andi	v0,v0,0x1
8001cd08:	5440003a 	bnezl	v0,8001cdf4 <buddy_free_pages_sub+0x3c4>
8001cd0c:	afa3001c 	sw	v1,28(sp)
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
8001cd10:	8e220004 	lw	v0,4(s1)
8001cd14:	2407fffd 	li	a3,-3
8001cd18:	00471024 	and	v0,v0,a3
8001cd1c:	ae220004 	sw	v0,4(s1)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:183
		list_del(&(buddy->page_link));
		ClearPageProperty(buddy);
		page_idx &= buddy_idx;
		order++;
8001cd20:	26b50001 	addiu	s5,s5,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:173
		assert(!PageReserved(p) && !PageProperty(p));
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
8001cd24:	12a3ffd2 	beq	s5,v1,8001cc70 <buddy_free_pages_sub+0x240>
8001cd28:	02d4b024 	and	s6,s6,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		buddy_idx = page_idx ^ (1 << order);
8001cd2c:	02a6a004 	sllv	s4,a2,s5
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cd30:	8ca20000 	lw	v0,0(a1)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:174
		p->flags = 0;
		set_page_ref(p, 0);
	}
	int zone_num = base->zone_num;
	while (order < MAX_ORDER) {
		buddy_idx = page_idx ^ (1 << order);
8001cd34:	0296a026 	xor	s4,s4,s6
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
8001cd38:	8ee777bc 	lw	a3,30652(s7)
idx2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:157
}

//idx2page - get the related page according to the index number idx of continuous page block 
static struct Page *idx2page(int zone_num, ppn_t idx)
{
	return zones[zone_num].mem_base + idx;
8001cd3c:	00148940 	sll	s1,s4,0x5
8001cd40:	00518821 	addu	s1,v0,s1
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139

//page_is_buddy - Does this page belong to the No. zone_num Zone & this page
//              -  be in the continuous page block whose size is 2^order pages?
static inline bool page_is_buddy(struct Page *page, size_t order, int zone_num)
{
	if (page2ppn(page) < npage) {
8001cd44:	8fc87770 	lw	t0,30576(s8)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
8001cd48:	02273823 	subu	a3,s1,a3
8001cd4c:	00073943 	sra	a3,a3,0x5
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:139
8001cd50:	00e8382b 	sltu	a3,a3,t0
8001cd54:	50e0ff80 	beqzl	a3,8001cb58 <buddy_free_pages_sub+0x128>
8001cd58:	0016b140 	sll	s6,s6,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:140
		if (page->zone_num == zone_num) {
8001cd5c:	8e27000c 	lw	a3,12(s1)
8001cd60:	1607ff7c 	bne	s0,a3,8001cb54 <buddy_free_pages_sub+0x124>
8001cd64:	2484000c 	addiu	a0,a0,12
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
8001cd68:	40026000 	mfc0	v0,c0_status
8001cd6c:	30420001 	andi	v0,v0,0x1
8001cd70:	1040ffbb 	beqz	v0,8001cc60 <buddy_free_pages_sub+0x230>
8001cd74:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001cd78:	afa3001c 	sw	v1,28(sp)
8001cd7c:	afa40018 	sw	a0,24(sp)
8001cd80:	afa50024 	sw	a1,36(sp)
8001cd84:	0c006d0c 	jal	8001b430 <intr_disable>
8001cd88:	afa60020 	sw	a2,32(sp)
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cd8c:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cd90:	30420001 	andi	v0,v0,0x1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cd94:	0c006d08 	jal	8001b420 <intr_enable>
8001cd98:	afa20014 	sw	v0,20(sp)
8001cd9c:	8fa20014 	lw	v0,20(sp)
8001cda0:	8fa3001c 	lw	v1,28(sp)
8001cda4:	8fa40018 	lw	a0,24(sp)
8001cda8:	8fa50024 	lw	a1,36(sp)
page_is_buddy():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:141
			return !PageReserved(page) && PageProperty(page)
8001cdac:	1440ffb0 	bnez	v0,8001cc70 <buddy_free_pages_sub+0x240>
8001cdb0:	8fa60020 	lw	a2,32(sp)
8001cdb4:	0800732e 	j	8001ccb8 <buddy_free_pages_sub+0x288>
8001cdb8:	00000000 	nop
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001cdbc:	afa40018 	sw	a0,24(sp)
8001cdc0:	afa50024 	sw	a1,36(sp)
8001cdc4:	0c006d0c 	jal	8001b430 <intr_disable>
8001cdc8:	afa60020 	sw	a2,32(sp)
test_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:288
	int intr_flag;
	local_intr_save(intr_flag);
	if (*addr & (1 << nr))
8001cdcc:	8e220004 	lw	v0,4(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:285
 * @nr:     the bit to test
 * @addr:   the address to count from
 * */
static __always_inline bool test_bit(int nr, volatile uint32_t * addr)
{
	unsigned char c = 0;
8001cdd0:	7c420040 	ext	v0,v0,0x1,0x1
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001cdd4:	0c006d08 	jal	8001b420 <intr_enable>
8001cdd8:	afa20014 	sw	v0,20(sp)
8001cddc:	8fa20014 	lw	v0,20(sp)
8001cde0:	8fa3001c 	lw	v1,28(sp)
8001cde4:	8fa40018 	lw	a0,24(sp)
8001cde8:	8fa50024 	lw	a1,36(sp)
8001cdec:	08007334 	j	8001ccd0 <buddy_free_pages_sub+0x2a0>
8001cdf0:	8fa60020 	lw	a2,32(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
		return 0;
	}
	intr_disable();
8001cdf4:	afa40018 	sw	a0,24(sp)
8001cdf8:	afa50024 	sw	a1,36(sp)
8001cdfc:	0c006d0c 	jal	8001b430 <intr_disable>
8001ce00:	afa60020 	sw	a2,32(sp)
clear_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:199
 * */
static __always_inline void clear_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr &= ~(1 << nr);
8001ce04:	8e220004 	lw	v0,4(s1)
8001ce08:	2407fffd 	li	a3,-3
8001ce0c:	00471024 	and	v0,v0,a3
8001ce10:	ae220004 	sw	v0,4(s1)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001ce14:	0c006d08 	jal	8001b420 <intr_enable>
8001ce18:	26b50001 	addiu	s5,s5,1
8001ce1c:	8fa3001c 	lw	v1,28(sp)
8001ce20:	8fa40018 	lw	a0,24(sp)
8001ce24:	8fa50024 	lw	a1,36(sp)
8001ce28:	08007349 	j	8001cd24 <buddy_free_pages_sub+0x2f4>
8001ce2c:	8fa60020 	lw	a2,32(sp)
buddy_free_pages_sub():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:168
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
	struct Page *p = base;
	for (; p != base + (1 << order); p++) {
		assert(!PageReserved(p) && !PageProperty(p));
8001ce30:	3c068002 	lui	a2,0x8002
8001ce34:	3c078002 	lui	a3,0x8002
8001ce38:	24844048 	addiu	a0,a0,16456
8001ce3c:	240500a8 	li	a1,168
8001ce40:	24c60e48 	addiu	a2,a2,3656
8001ce44:	0c006b13 	jal	8001ac4c <__panic>
8001ce48:	24e74328 	addiu	a3,a3,17192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:165
//buddy_free_pages_sub - the actual free implimentation, should consider how to 
//                     - merge the adjacent buddy block
static void buddy_free_pages_sub(struct Page *base, size_t order)
{
	ppn_t buddy_idx, page_idx = page2idx(base);
	assert((page_idx & ((1 << order) - 1)) == 0);
8001ce4c:	3c048002 	lui	a0,0x8002
8001ce50:	3c068002 	lui	a2,0x8002
8001ce54:	3c078002 	lui	a3,0x8002
8001ce58:	24844048 	addiu	a0,a0,16456
8001ce5c:	240500a5 	li	a1,165
8001ce60:	24c60e48 	addiu	a2,a2,3656
8001ce64:	0c006b13 	jal	8001ac4c <__panic>
8001ce68:	24e74300 	addiu	a3,a3,17152

8001ce6c <buddy_free_pages>:
buddy_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:194
	list_add(&free_list(order), &(page->page_link));
}

//buddy_free_pages - call buddy_free_pages_sub to free n continuous page block
static void buddy_free_pages(struct Page *base, size_t n)
{
8001ce6c:	27bdffd0 	addiu	sp,sp,-48
8001ce70:	afb30020 	sw	s3,32(sp)
8001ce74:	afb2001c 	sw	s2,28(sp)
8001ce78:	afbf002c 	sw	ra,44(sp)
8001ce7c:	afb50028 	sw	s5,40(sp)
8001ce80:	afb40024 	sw	s4,36(sp)
8001ce84:	afb10018 	sw	s1,24(sp)
8001ce88:	afb00014 	sw	s0,20(sp)
8001ce8c:	00a09021 	move	s2,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:195
	assert(n > 0);
8001ce90:	10a0004b 	beqz	a1,8001cfc0 <buddy_free_pages+0x154>
8001ce94:	00809821 	move	s3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:196
	if (n == 1) {
8001ce98:	24020001 	li	v0,1
8001ce9c:	10a2003e 	beq	a1,v0,8001cf98 <buddy_free_pages+0x12c>
8001cea0:	3c148015 	lui	s4,0x8015
8001cea4:	24100001 	li	s0,1
8001cea8:	00008821 	move	s1,zero
8001ceac:	269476b8 	addiu	s4,s4,30392
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:201
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
8001ceb0:	080073b3 	j	8001cecc <buddy_free_pages+0x60>
8001ceb4:	2415000b 	li	s5,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:200
	assert(n > 0);
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
8001ceb8:	0250102b 	sltu	v0,s2,s0
8001cebc:	14400016 	bnez	v0,8001cf18 <buddy_free_pages+0xac>
8001cec0:	26310001 	addiu	s1,s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:201
			assert(order <= MAX_ORDER);
8001cec4:	1235002d 	beq	s1,s5,8001cf7c <buddy_free_pages+0x110>
8001cec8:	3c048002 	lui	a0,0x8002
page2idx():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:151
}

//page2idx - get the related index number idx of continuous page block which this page belongs to 
static ppn_t page2idx(struct Page *page)
{
	return page - zones[page->zone_num].mem_base;
8001cecc:	8e62000c 	lw	v0,12(s3)
8001ced0:	00021080 	sll	v0,v0,0x2
8001ced4:	02821021 	addu	v0,s4,v0
8001ced8:	8c420000 	lw	v0,0(v0)
8001cedc:	02621023 	subu	v0,s3,v0
8001cee0:	00021143 	sra	v0,v0,0x5
buddy_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:202
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
			if ((page2idx(base) & order_size) != 0) {
8001cee4:	00501024 	and	v0,v0,s0
8001cee8:	5040fff3 	beqzl	v0,8001ceb8 <buddy_free_pages+0x4c>
8001ceec:	00108040 	sll	s0,s0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:203
				buddy_free_pages_sub(base, order);
8001cef0:	02602021 	move	a0,s3
8001cef4:	02202821 	move	a1,s1
8001cef8:	0c00728c 	jal	8001ca30 <buddy_free_pages_sub>
8001cefc:	02509023 	subu	s2,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:204
				base += order_size;
8001cf00:	00101140 	sll	v0,s0,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:208
				n -= order_size;
			}
			order++;
			order_size <<= 1;
8001cf04:	00108040 	sll	s0,s0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:204
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
			if ((page2idx(base) & order_size) != 0) {
				buddy_free_pages_sub(base, order);
				base += order_size;
8001cf08:	02629821 	addu	s3,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:200
	assert(n > 0);
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
8001cf0c:	0250102b 	sltu	v0,s2,s0
8001cf10:	1040ffec 	beqz	v0,8001cec4 <buddy_free_pages+0x58>
8001cf14:	26310001 	addiu	s1,s1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:210
				n -= order_size;
			}
			order++;
			order_size <<= 1;
		}
		while (n != 0) {
8001cf18:	12400010 	beqz	s2,8001cf5c <buddy_free_pages+0xf0>
8001cf1c:	8fbf002c 	lw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:211
			while (n < order_size) {
8001cf20:	0250102b 	sltu	v0,s2,s0
8001cf24:	10400006 	beqz	v0,8001cf40 <buddy_free_pages+0xd4>
8001cf28:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:213
				order--;
				order_size >>= 1;
8001cf2c:	00108042 	srl	s0,s0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:211
			}
			order++;
			order_size <<= 1;
		}
		while (n != 0) {
			while (n < order_size) {
8001cf30:	0250102b 	sltu	v0,s2,s0
8001cf34:	1440fffd 	bnez	v0,8001cf2c <buddy_free_pages+0xc0>
8001cf38:	2631ffff 	addiu	s1,s1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:215
				order--;
				order_size >>= 1;
			}
			buddy_free_pages_sub(base, order);
8001cf3c:	02602021 	move	a0,s3
8001cf40:	0c00728c 	jal	8001ca30 <buddy_free_pages_sub>
8001cf44:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:217
			base += order_size;
			n -= order_size;
8001cf48:	02509023 	subu	s2,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:216
			while (n < order_size) {
				order--;
				order_size >>= 1;
			}
			buddy_free_pages_sub(base, order);
			base += order_size;
8001cf4c:	00101140 	sll	v0,s0,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:210
				n -= order_size;
			}
			order++;
			order_size <<= 1;
		}
		while (n != 0) {
8001cf50:	1640fff3 	bnez	s2,8001cf20 <buddy_free_pages+0xb4>
8001cf54:	02629821 	addu	s3,s3,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:220
			buddy_free_pages_sub(base, order);
			base += order_size;
			n -= order_size;
		}
	}
}
8001cf58:	8fbf002c 	lw	ra,44(sp)
8001cf5c:	8fb50028 	lw	s5,40(sp)
8001cf60:	8fb40024 	lw	s4,36(sp)
8001cf64:	8fb30020 	lw	s3,32(sp)
8001cf68:	8fb2001c 	lw	s2,28(sp)
8001cf6c:	8fb10018 	lw	s1,24(sp)
8001cf70:	8fb00014 	lw	s0,20(sp)
8001cf74:	03e00008 	jr	ra
8001cf78:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:201
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
	} else {
		size_t order = 0, order_size = 1;
		while (n >= order_size) {
			assert(order <= MAX_ORDER);
8001cf7c:	3c068002 	lui	a2,0x8002
8001cf80:	3c078002 	lui	a3,0x8002
8001cf84:	24844048 	addiu	a0,a0,16456
8001cf88:	240500c9 	li	a1,201
8001cf8c:	24c60e48 	addiu	a2,a2,3656
8001cf90:	0c006b13 	jal	8001ac4c <__panic>
8001cf94:	24e74350 	addiu	a3,a3,17232
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:220
			buddy_free_pages_sub(base, order);
			base += order_size;
			n -= order_size;
		}
	}
}
8001cf98:	8fbf002c 	lw	ra,44(sp)
8001cf9c:	8fb50028 	lw	s5,40(sp)
8001cfa0:	8fb40024 	lw	s4,36(sp)
8001cfa4:	8fb30020 	lw	s3,32(sp)
8001cfa8:	8fb2001c 	lw	s2,28(sp)
8001cfac:	8fb10018 	lw	s1,24(sp)
8001cfb0:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:197
//buddy_free_pages - call buddy_free_pages_sub to free n continuous page block
static void buddy_free_pages(struct Page *base, size_t n)
{
	assert(n > 0);
	if (n == 1) {
		buddy_free_pages_sub(base, 0);
8001cfb4:	00002821 	move	a1,zero
8001cfb8:	0800728c 	j	8001ca30 <buddy_free_pages_sub>
8001cfbc:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/buddy_pmm.c:195
}

//buddy_free_pages - call buddy_free_pages_sub to free n continuous page block
static void buddy_free_pages(struct Page *base, size_t n)
{
	assert(n > 0);
8001cfc0:	3c048002 	lui	a0,0x8002
8001cfc4:	3c068002 	lui	a2,0x8002
8001cfc8:	3c078002 	lui	a3,0x8002
8001cfcc:	24844048 	addiu	a0,a0,16456
8001cfd0:	240500c3 	li	a1,195
8001cfd4:	24c60e48 	addiu	a2,a2,3656
8001cfd8:	0c006b13 	jal	8001ac4c <__panic>
8001cfdc:	24e74088 	addiu	a3,a3,16520

8001cfe0 <get_pgtable_items.isra.0.part.1.constprop.3>:
get_pgtable_items():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:392
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
		return 0;
	}
	while (start < right && !(table[start] & PTE_P)) {
8001cfe0:	2c830400 	sltiu	v1,a0,1024
8001cfe4:	10600014 	beqz	v1,8001d038 <get_pgtable_items.isra.0.part.1.constprop.3+0x58>
8001cfe8:	00001021 	move	v0,zero
8001cfec:	00044080 	sll	t0,a0,0x2
8001cff0:	00a84021 	addu	t0,a1,t0
8001cff4:	8d020000 	lw	v0,0(t0)
8001cff8:	30420001 	andi	v0,v0,0x1
8001cffc:	14400010 	bnez	v0,8001d040 <get_pgtable_items.isra.0.part.1.constprop.3+0x60>
8001d000:	24820001 	addiu	v0,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:386
//  table:       the beginning addr of table
//  left_store:  the pointer of the high side of table's next range
//  right_store: the pointer of the low side of table's next range
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
8001d004:	00021880 	sll	v1,v0,0x2
8001d008:	00a31821 	addu	v1,a1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:392
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
		return 0;
	}
	while (start < right && !(table[start] & PTE_P)) {
8001d00c:	0800740a 	j	8001d028 <get_pgtable_items.isra.0.part.1.constprop.3+0x48>
8001d010:	240a0400 	li	t2,1024
8001d014:	8c690000 	lw	t1,0(v1)
8001d018:	24420001 	addiu	v0,v0,1
8001d01c:	31290001 	andi	t1,t1,0x1
8001d020:	15200007 	bnez	t1,8001d040 <get_pgtable_items.isra.0.part.1.constprop.3+0x60>
8001d024:	24630004 	addiu	v1,v1,4
8001d028:	00604021 	move	t0,v1
8001d02c:	144afff9 	bne	v0,t2,8001d014 <get_pgtable_items.isra.0.part.1.constprop.3+0x34>
8001d030:	00402021 	move	a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:408
		if (right_store != NULL) {
			*right_store = start;
		}
		return perm;
	}
	return 0;
8001d034:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:409
}
8001d038:	03e00008 	jr	ra
8001d03c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:396
	}
	while (start < right && !(table[start] & PTE_P)) {
		start++;
	}
	if (start < right) {
		if (left_store != NULL) {
8001d040:	54c00001 	bnezl	a2,8001d048 <get_pgtable_items.isra.0.part.1.constprop.3+0x68>
8001d044:	acc40000 	sw	a0,0(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:399
			*left_store = start;
		}
		int perm = (table[start++] & PTE_USER);
8001d048:	8d020000 	lw	v0,0(t0)
8001d04c:	24830001 	addiu	v1,a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:400
		while (start < right && (table[start] & PTE_USER) == perm) {
8001d050:	24060400 	li	a2,1024
8001d054:	10660010 	beq	v1,a2,8001d098 <get_pgtable_items.isra.0.part.1.constprop.3+0xb8>
8001d058:	30420007 	andi	v0,v0,0x7
8001d05c:	00033080 	sll	a2,v1,0x2
8001d060:	00a63021 	addu	a2,a1,a2
8001d064:	8cc60000 	lw	a2,0(a2)
8001d068:	30c60007 	andi	a2,a2,0x7
8001d06c:	14c2000a 	bne	a2,v0,8001d098 <get_pgtable_items.isra.0.part.1.constprop.3+0xb8>
8001d070:	00042080 	sll	a0,a0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:386
//  table:       the beginning addr of table
//  left_store:  the pointer of the high side of table's next range
//  right_store: the pointer of the low side of table's next range
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
8001d074:	00a42821 	addu	a1,a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:400
	if (start < right) {
		if (left_store != NULL) {
			*left_store = start;
		}
		int perm = (table[start++] & PTE_USER);
		while (start < right && (table[start] & PTE_USER) == perm) {
8001d078:	08007423 	j	8001d08c <get_pgtable_items.isra.0.part.1.constprop.3+0xac>
8001d07c:	24080400 	li	t0,1024
8001d080:	30840007 	andi	a0,a0,0x7
8001d084:	14860004 	bne	a0,a2,8001d098 <get_pgtable_items.isra.0.part.1.constprop.3+0xb8>
8001d088:	24a50004 	addiu	a1,a1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:401
			start++;
8001d08c:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:400
	if (start < right) {
		if (left_store != NULL) {
			*left_store = start;
		}
		int perm = (table[start++] & PTE_USER);
		while (start < right && (table[start] & PTE_USER) == perm) {
8001d090:	5468fffb 	bnel	v1,t0,8001d080 <get_pgtable_items.isra.0.part.1.constprop.3+0xa0>
8001d094:	8ca40008 	lw	a0,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:403
			start++;
		}
		if (right_store != NULL) {
8001d098:	10e0ffe7 	beqz	a3,8001d038 <get_pgtable_items.isra.0.part.1.constprop.3+0x58>
8001d09c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:404
			*right_store = start;
8001d0a0:	03e00008 	jr	ra
8001d0a4:	ace30000 	sw	v1,0(a3)

8001d0a8 <lcr3>:
lcr3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:37
static void check_pgdir(void);
static void check_boot_pgdir(void);

void lcr3(uintptr_t cr3)
{
	current_pgdir = (pde_t *) cr3;
8001d0a8:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:38
}
8001d0ac:	03e00008 	jr	ra
8001d0b0:	ac447768 	sw	a0,30568(v0)

8001d0b4 <alloc_pages>:
alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:58
	pmm_manager->init_memmap(base, n);
}

//alloc_pages - call pmm->alloc_pages to allocate a continuous n*PAGESIZE memory 
struct Page *alloc_pages(size_t n)
{
8001d0b4:	27bdffe0 	addiu	sp,sp,-32
8001d0b8:	afb00018 	sw	s0,24(sp)
8001d0bc:	afbf001c 	sw	ra,28(sp)
8001d0c0:	00808021 	move	s0,a0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d0c4:	40026000 	mfc0	v0,c0_status
8001d0c8:	30420001 	andi	v0,v0,0x1
8001d0cc:	14400007 	bnez	v0,8001d0ec <alloc_pages+0x38>
8001d0d0:	3c028015 	lui	v0,0x8015
alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:63
	struct Page *page;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		page = pmm_manager->alloc_pages(n);
8001d0d4:	8c427794 	lw	v0,30612(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:67
	}
	local_intr_restore(intr_flag);
	return page;
}
8001d0d8:	8fbf001c 	lw	ra,28(sp)
8001d0dc:	8fb00018 	lw	s0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:63
{
	struct Page *page;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		page = pmm_manager->alloc_pages(n);
8001d0e0:	8c59000c 	lw	t9,12(v0)
8001d0e4:	03200008 	jr	t9
8001d0e8:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d0ec:	0c006d0c 	jal	8001b430 <intr_disable>
8001d0f0:	00000000 	nop
alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:63
8001d0f4:	3c028015 	lui	v0,0x8015
8001d0f8:	8c427794 	lw	v0,30612(v0)
8001d0fc:	8c42000c 	lw	v0,12(v0)
8001d100:	0040f809 	jalr	v0
8001d104:	02002021 	move	a0,s0
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d108:	0c006d08 	jal	8001b420 <intr_enable>
8001d10c:	afa20010 	sw	v0,16(sp)
alloc_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:67
	}
	local_intr_restore(intr_flag);
	return page;
}
8001d110:	8fbf001c 	lw	ra,28(sp)
8001d114:	8fa20010 	lw	v0,16(sp)
8001d118:	8fb00018 	lw	s0,24(sp)
8001d11c:	03e00008 	jr	ra
8001d120:	27bd0020 	addiu	sp,sp,32

8001d124 <free_pages>:
free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:71

//free_pages - call pmm->free_pages to free a continuous n*PAGESIZE memory 
void free_pages(struct Page *base, size_t n)
{
8001d124:	27bdffe0 	addiu	sp,sp,-32
8001d128:	afb10018 	sw	s1,24(sp)
8001d12c:	afb00014 	sw	s0,20(sp)
8001d130:	afbf001c 	sw	ra,28(sp)
8001d134:	00808821 	move	s1,a0
8001d138:	00a08021 	move	s0,a1
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d13c:	40026000 	mfc0	v0,c0_status
8001d140:	30420001 	andi	v0,v0,0x1
8001d144:	14400008 	bnez	v0,8001d168 <free_pages+0x44>
8001d148:	3c028015 	lui	v0,0x8015
free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:75
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		pmm_manager->free_pages(base, n);
8001d14c:	8c427794 	lw	v0,30612(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:78
	}
	local_intr_restore(intr_flag);
}
8001d150:	8fbf001c 	lw	ra,28(sp)
8001d154:	8fb10018 	lw	s1,24(sp)
8001d158:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:75
void free_pages(struct Page *base, size_t n)
{
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		pmm_manager->free_pages(base, n);
8001d15c:	8c590010 	lw	t9,16(v0)
8001d160:	03200008 	jr	t9
8001d164:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d168:	0c006d0c 	jal	8001b430 <intr_disable>
8001d16c:	00000000 	nop
free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:75
8001d170:	3c028015 	lui	v0,0x8015
8001d174:	8c427794 	lw	v0,30612(v0)
8001d178:	02202021 	move	a0,s1
8001d17c:	8c420010 	lw	v0,16(v0)
8001d180:	0040f809 	jalr	v0
8001d184:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:78
	}
	local_intr_restore(intr_flag);
}
8001d188:	8fbf001c 	lw	ra,28(sp)
8001d18c:	8fb10018 	lw	s1,24(sp)
8001d190:	8fb00014 	lw	s0,20(sp)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d194:	08006d08 	j	8001b420 <intr_enable>
8001d198:	27bd0020 	addiu	sp,sp,32

8001d19c <nr_free_pages>:
nr_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:83

//nr_free_pages - call pmm->nr_free_pages to get the size (nr*PAGESIZE) 
//of current free memory
size_t nr_free_pages(void)
{
8001d19c:	27bdffe0 	addiu	sp,sp,-32
8001d1a0:	afbf001c 	sw	ra,28(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d1a4:	40026000 	mfc0	v0,c0_status
8001d1a8:	30420001 	andi	v0,v0,0x1
8001d1ac:	14400006 	bnez	v0,8001d1c8 <nr_free_pages+0x2c>
8001d1b0:	3c028015 	lui	v0,0x8015
nr_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:88
	size_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		ret = pmm_manager->nr_free_pages();
8001d1b4:	8c427794 	lw	v0,30612(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:92
	}
	local_intr_restore(intr_flag);
	return ret;
}
8001d1b8:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:88
{
	size_t ret;
	bool intr_flag;
	local_intr_save(intr_flag);
	{
		ret = pmm_manager->nr_free_pages();
8001d1bc:	8c590014 	lw	t9,20(v0)
8001d1c0:	03200008 	jr	t9
8001d1c4:	27bd0020 	addiu	sp,sp,32
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d1c8:	0c006d0c 	jal	8001b430 <intr_disable>
8001d1cc:	00000000 	nop
nr_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:88
8001d1d0:	3c028015 	lui	v0,0x8015
8001d1d4:	8c427794 	lw	v0,30612(v0)
8001d1d8:	8c420014 	lw	v0,20(v0)
8001d1dc:	0040f809 	jalr	v0
8001d1e0:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d1e4:	0c006d08 	jal	8001b420 <intr_enable>
8001d1e8:	afa20010 	sw	v0,16(sp)
nr_free_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:92
	}
	local_intr_restore(intr_flag);
	return ret;
}
8001d1ec:	8fbf001c 	lw	ra,28(sp)
8001d1f0:	8fa20010 	lw	v0,16(sp)
8001d1f4:	03e00008 	jr	ra
8001d1f8:	27bd0020 	addiu	sp,sp,32

8001d1fc <print_pgdir>:
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:416
#define PRINT_PTE(s0, a0,a1,a2,a3,s1) kprintf(s0);printhex(a0);\
  kprintf(") ");printhex(a1);kprintf("-");printhex(a2);kprintf(" ");\
  printhex(a3);kprintf(" ");kprintf(s1);kprintf("\n");
//print_pgdir - print the PDT&PT
void print_pgdir(void)
{
8001d1fc:	27bdffa8 	addiu	sp,sp,-88
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:418
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
8001d200:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:416
#define PRINT_PTE(s0, a0,a1,a2,a3,s1) kprintf(s0);printhex(a0);\
  kprintf(") ");printhex(a1);kprintf("-");printhex(a2);kprintf(" ");\
  printhex(a3);kprintf(" ");kprintf(s1);kprintf("\n");
//print_pgdir - print the PDT&PT
void print_pgdir(void)
{
8001d204:	afb60048 	sw	s6,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:418
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
8001d208:	24844378 	addiu	a0,a0,17272
8001d20c:	3c168015 	lui	s6,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:416
#define PRINT_PTE(s0, a0,a1,a2,a3,s1) kprintf(s0);printhex(a0);\
  kprintf(") ");printhex(a1);kprintf("-");printhex(a2);kprintf(" ");\
  printhex(a3);kprintf(" ");kprintf(s1);kprintf("\n");
//print_pgdir - print the PDT&PT
void print_pgdir(void)
{
8001d210:	afbe0050 	sw	s8,80(sp)
8001d214:	afb00030 	sw	s0,48(sp)
8001d218:	afbf0054 	sw	ra,84(sp)
8001d21c:	afb7004c 	sw	s7,76(sp)
8001d220:	afb50044 	sw	s5,68(sp)
8001d224:	afb40040 	sw	s4,64(sp)
8001d228:	afb3003c 	sw	s3,60(sp)
8001d22c:	afb20038 	sw	s2,56(sp)
8001d230:	afb10034 	sw	s1,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:418
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
8001d234:	0c007aa6 	jal	8001ea98 <kprintf>
8001d238:	afa00018 	sw	zero,24(sp)
8001d23c:	8fa40018 	lw	a0,24(sp)
8001d240:	8ec57768 	lw	a1,30568(s6)
perm2str():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d244:	3c1e8015 	lui	s8,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:368
	str[1] = 'r';
8001d248:	27d07774 	addiu	s0,s8,30580
get_pgtable_items():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d24c:	2c820400 	sltiu	v0,a0,1024
8001d250:	14400010 	bnez	v0,8001d294 <print_pgdir+0x98>
8001d254:	27a6001c 	addiu	a2,sp,28
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:461
					count_ref_l = r;
				}
			}
		}
	}
	kprintf("---------------- PAGE Directory END ------------------\n");
8001d258:	3c048002 	lui	a0,0x8002
8001d25c:	0c007aa6 	jal	8001ea98 <kprintf>
8001d260:	248443cc 	addiu	a0,a0,17356
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:462
}
8001d264:	8fbf0054 	lw	ra,84(sp)
8001d268:	8fbe0050 	lw	s8,80(sp)
8001d26c:	8fb7004c 	lw	s7,76(sp)
8001d270:	8fb60048 	lw	s6,72(sp)
8001d274:	8fb50044 	lw	s5,68(sp)
8001d278:	8fb40040 	lw	s4,64(sp)
8001d27c:	8fb3003c 	lw	s3,60(sp)
8001d280:	8fb20038 	lw	s2,56(sp)
8001d284:	8fb10034 	lw	s1,52(sp)
8001d288:	8fb00030 	lw	s0,48(sp)
8001d28c:	03e00008 	jr	ra
8001d290:	27bd0058 	addiu	sp,sp,88
get_pgtable_items():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d294:	0c0073f8 	jal	8001cfe0 <get_pgtable_items.isra.0.part.1.constprop.3>
8001d298:	27a70018 	addiu	a3,sp,24
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:420
void print_pgdir(void)
{
	size_t left, right = 0, perm;
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
8001d29c:	1040ffee 	beqz	v0,8001d258 <print_pgdir+0x5c>
8001d2a0:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:423
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d2a4:	3c028002 	lui	v0,0x8002
8001d2a8:	0c007aa6 	jal	8001ea98 <kprintf>
8001d2ac:	244443b0 	addiu	a0,v0,17328
8001d2b0:	8fa2001c 	lw	v0,28(sp)
8001d2b4:	8fa40018 	lw	a0,24(sp)
8001d2b8:	3c138002 	lui	s3,0x8002
8001d2bc:	3c158002 	lui	s5,0x8002
8001d2c0:	0c007ab2 	jal	8001eac8 <printhex>
8001d2c4:	00822023 	subu	a0,a0,v0
8001d2c8:	3c048002 	lui	a0,0x8002
8001d2cc:	0c007aa6 	jal	8001ea98 <kprintf>
8001d2d0:	248443b8 	addiu	a0,a0,17336
8001d2d4:	8fa4001c 	lw	a0,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:429
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
						    (pte_t *)
						    PDE_ADDR(current_pgdir
8001d2d8:	3c128015 	lui	s2,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:423
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d2dc:	0c007ab2 	jal	8001eac8 <printhex>
8001d2e0:	00042580 	sll	a0,a0,0x16
8001d2e4:	3c038002 	lui	v1,0x8002
8001d2e8:	0c007aa6 	jal	8001ea98 <kprintf>
8001d2ec:	246443bc 	addiu	a0,v1,17340
8001d2f0:	8fa40018 	lw	a0,24(sp)
8001d2f4:	0c007ab2 	jal	8001eac8 <printhex>
8001d2f8:	00042580 	sll	a0,a0,0x16
8001d2fc:	0c007aa6 	jal	8001ea98 <kprintf>
8001d300:	26643f10 	addiu	a0,s3,16144
8001d304:	8fa2001c 	lw	v0,28(sp)
8001d308:	8fa40018 	lw	a0,24(sp)
8001d30c:	00822023 	subu	a0,a0,v0
8001d310:	0c007ab2 	jal	8001eac8 <printhex>
8001d314:	00042580 	sll	a0,a0,0x16
8001d318:	0c007aa6 	jal	8001ea98 <kprintf>
8001d31c:	26643f10 	addiu	a0,s3,16144
perm2str():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d320:	32240004 	andi	a0,s1,0x4
8001d324:	2403002d 	li	v1,45
8001d328:	24020075 	li	v0,117
8001d32c:	0064100a 	movz	v0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[1] = 'r';
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d330:	32310002 	andi	s1,s1,0x2
8001d334:	24040077 	li	a0,119
8001d338:	0091180b 	movn	v1,a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d33c:	a3c27774 	sb	v0,30580(s8)
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:423
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d340:	02002021 	move	a0,s0
perm2str():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:368
//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
	str[1] = 'r';
8001d344:	24020072 	li	v0,114
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d348:	a2030002 	sb	v1,2(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:368
//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
	str[1] = 'r';
8001d34c:	a2020001 	sb	v0,1(s0)
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:423
	kprintf("---------------- PAGE Directory BEGIN ----------------\n");
/* SZY comments: why this shows empty in QEMU emulator? */
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
8001d350:	0c007aa6 	jal	8001ea98 <kprintf>
8001d354:	a2000003 	sb	zero,3(s0)
8001d358:	0c007aa6 	jal	8001ea98 <kprintf>
8001d35c:	26a43f4c 	addiu	a0,s5,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:429
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
						    (pte_t *)
						    PDE_ADDR(current_pgdir
8001d360:	8fa2001c 	lw	v0,28(sp)
8001d364:	8ec37768 	lw	v1,30568(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:425
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;
8001d368:	afa00010 	sw	zero,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:429

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
						    (pte_t *)
						    PDE_ADDR(current_pgdir
8001d36c:	00021080 	sll	v0,v0,0x2
8001d370:	00621021 	addu	v0,v1,v0
8001d374:	8c450000 	lw	a1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:425
	while ((perm =
		get_pgtable_items(0, NPDEENTRY, right, current_pgdir, &left,
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;
8001d378:	2402f000 	li	v0,-4096
8001d37c:	00002021 	move	a0,zero
8001d380:	00a22824 	and	a1,a1,v0
8001d384:	27a60014 	addiu	a2,sp,20
8001d388:	0c0073f8 	jal	8001cfe0 <get_pgtable_items.isra.0.part.1.constprop.3>
8001d38c:	27a70010 	addiu	a3,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:434
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
8001d390:	8fa4001c 	lw	a0,28(sp)
8001d394:	8fa30018 	lw	v1,24(sp)
8001d398:	1083ffac 	beq	a0,v1,8001d24c <print_pgdir+0x50>
8001d39c:	8e457768 	lw	a1,30568(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:427
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
8001d3a0:	00408821 	move	s1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:433
						    (pte_t *)
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
8001d3a4:	0000a021 	move	s4,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:427
				  &right)) != 0) {
		PRINT_PTE("PDE(", right - left, left * PTSIZE, right * PTSIZE,
			  (right - left) * PTSIZE, perm2str(perm));
		size_t l, r = 0;

		size_t perm_ref = get_pgtable_items(0, NPTEENTRY, r,
8001d3a8:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:432
						    (pte_t *)
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
8001d3ac:	0000b821 	move	s7,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:434
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
8001d3b0:	00009021 	move	s2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:444
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
8001d3b4:	3c03003f 	lui	v1,0x3f
8001d3b8:	3463ffff 	ori	v1,v1,0xffff
8001d3bc:	02431821 	addu	v1,s2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:435
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
8001d3c0:	afa00010 	sw	zero,16(sp)
8001d3c4:	afa00014 	sw	zero,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:436
			while ((perm =
8001d3c8:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:444
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
8001d3cc:	afa30024 	sw	v1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:438
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
			while ((perm =
				get_pgtable_items(0, NPTEENTRY, r, (pte_t *)
						  PDE_ADDR(current_pgdir
8001d3d0:	00521821 	addu	v1,v0,s2
8001d3d4:	00031880 	sll	v1,v1,0x2
8001d3d8:	00a31821 	addu	v1,a1,v1
get_pgtable_items():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d3dc:	2c860400 	sltiu	a2,a0,1024
8001d3e0:	14c00009 	bnez	a2,8001d408 <print_pgdir+0x20c>
8001d3e4:	8c630000 	lw	v1,0(v1)
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:434
						    PDE_ADDR(current_pgdir
							     [left]),
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
8001d3e8:	8fa40018 	lw	a0,24(sp)
8001d3ec:	26520001 	addiu	s2,s2,1
8001d3f0:	00821823 	subu	v1,a0,v0
8001d3f4:	0243182b 	sltu	v1,s2,v1
8001d3f8:	5060ff95 	beqzl	v1,8001d250 <print_pgdir+0x54>
8001d3fc:	2c820400 	sltiu	v0,a0,1024
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:444
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
8001d400:	080074ee 	j	8001d3b8 <print_pgdir+0x1bc>
8001d404:	3c03003f 	lui	v1,0x3f
get_pgtable_items():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:389
// return value: 0 - not a invalid item range, perm - a valid item range with perm permission
static int
get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t * table,
		  size_t * left_store, size_t * right_store)
{
	if (start >= right) {
8001d408:	2402f000 	li	v0,-4096
8001d40c:	27a60014 	addiu	a2,sp,20
8001d410:	00622824 	and	a1,v1,v0
8001d414:	0c0073f8 	jal	8001cfe0 <get_pgtable_items.isra.0.part.1.constprop.3>
8001d418:	27a70010 	addiu	a3,sp,16
8001d41c:	00401821 	move	v1,v0
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d420:	8fa20024 	lw	v0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:447
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d424:	3c048002 	lui	a0,0x8002
8001d428:	248443c0 	addiu	a0,a0,17344
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d42c:	00573023 	subu	a2,v0,s7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:436
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
			while ((perm =
8001d430:	10600049 	beqz	v1,8001d558 <print_pgdir+0x35c>
8001d434:	00063280 	sll	a2,a2,0xa
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:441
				get_pgtable_items(0, NPTEENTRY, r, (pte_t *)
						  PDE_ADDR(current_pgdir
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
8001d438:	1471000b 	bne	v1,s1,8001d468 <print_pgdir+0x26c>
8001d43c:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:442
				    || count == right - left - 1) {
8001d440:	8fa50018 	lw	a1,24(sp)
8001d444:	8fa2001c 	lw	v0,28(sp)
8001d448:	24a5ffff 	addiu	a1,a1,-1
8001d44c:	00a22823 	subu	a1,a1,v0
8001d450:	50b20005 	beql	a1,s2,8001d468 <print_pgdir+0x26c>
8001d454:	8fa20010 	lw	v0,16(sp)
8001d458:	8fa40010 	lw	a0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:456
						  r * PGSIZE,
						  total_entries * PGSIZE,
						  perm2str(perm_ref));
					perm_ref = perm;
					count_ref = count;
					count_ref_l = r;
8001d45c:	8ec57768 	lw	a1,30568(s6)
8001d460:	080074f4 	j	8001d3d0 <print_pgdir+0x1d4>
8001d464:	00608821 	move	s1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d468:	8fa50014 	lw	a1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:447
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d46c:	afa30028 	sw	v1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:445
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
8001d470:	24420400 	addiu	v0,v0,1024
8001d474:	00451023 	subu	v0,v0,a1
8001d478:	00541023 	subu	v0,v0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:443
						  PDE_ADDR(current_pgdir
							   [left + count]), &l,
						  &r)) != 0) {
				if (perm != perm_ref
				    || count == right - left - 1) {
					size_t total_entries =
8001d47c:	00463021 	addu	a2,v0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:447
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d480:	0c007aa6 	jal	8001ea98 <kprintf>
8001d484:	afa60020 	sw	a2,32(sp)
8001d488:	0c007ab2 	jal	8001eac8 <printhex>
8001d48c:	8fa40020 	lw	a0,32(sp)
8001d490:	3c048002 	lui	a0,0x8002
8001d494:	0c007aa6 	jal	8001ea98 <kprintf>
8001d498:	248443b8 	addiu	a0,a0,17336
8001d49c:	8fa2001c 	lw	v0,28(sp)
8001d4a0:	02e2b821 	addu	s7,s7,v0
8001d4a4:	0017ba80 	sll	s7,s7,0xa
8001d4a8:	02f4a021 	addu	s4,s7,s4
8001d4ac:	0c007ab2 	jal	8001eac8 <printhex>
8001d4b0:	00142300 	sll	a0,s4,0xc
8001d4b4:	3c028002 	lui	v0,0x8002
8001d4b8:	0c007aa6 	jal	8001ea98 <kprintf>
8001d4bc:	244443bc 	addiu	a0,v0,17340
8001d4c0:	8fa4001c 	lw	a0,28(sp)
8001d4c4:	8fa20010 	lw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:456
						  r * PGSIZE,
						  total_entries * PGSIZE,
						  perm2str(perm_ref));
					perm_ref = perm;
					count_ref = count;
					count_ref_l = r;
8001d4c8:	0240b821 	move	s7,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:447
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d4cc:	02442021 	addu	a0,s2,a0
8001d4d0:	00042280 	sll	a0,a0,0xa
8001d4d4:	00822021 	addu	a0,a0,v0
8001d4d8:	0c007ab2 	jal	8001eac8 <printhex>
8001d4dc:	00042300 	sll	a0,a0,0xc
8001d4e0:	0c007aa6 	jal	8001ea98 <kprintf>
8001d4e4:	26643f10 	addiu	a0,s3,16144
8001d4e8:	8fa20020 	lw	v0,32(sp)
8001d4ec:	0c007ab2 	jal	8001eac8 <printhex>
8001d4f0:	00022300 	sll	a0,v0,0xc
8001d4f4:	0c007aa6 	jal	8001ea98 <kprintf>
8001d4f8:	26643f10 	addiu	a0,s3,16144
perm2str():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d4fc:	32260004 	andi	a2,s1,0x4
8001d500:	2404002d 	li	a0,45
8001d504:	24050075 	li	a1,117
8001d508:	0086280a 	movz	a1,a0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[1] = 'r';
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d50c:	32310002 	andi	s1,s1,0x2
8001d510:	24020077 	li	v0,119
8001d514:	0091100a 	movz	v0,a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:367

//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
8001d518:	a3c57774 	sb	a1,30580(s8)
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:447
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d51c:	02002021 	move	a0,s0
perm2str():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:368
//perm2str - use string 'u,r,w,-' to present the permission
static const char *perm2str(int perm)
{
	static char str[4];
	str[0] = (perm & PTE_U) ? 'u' : '-';
	str[1] = 'r';
8001d520:	24050072 	li	a1,114
8001d524:	a2050001 	sb	a1,1(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:369
	str[2] = (perm & PTE_W) ? 'w' : '-';
8001d528:	a2020002 	sb	v0,2(s0)
print_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:447
				    || count == right - left - 1) {
					size_t total_entries =
					    (count - count_ref -
					     1) * NPTEENTRY + (r - l) +
					    (NPTEENTRY - count_ref_l);
					PRINT_PTE("  |-- PTE(", total_entries,
8001d52c:	0c007aa6 	jal	8001ea98 <kprintf>
8001d530:	a2000003 	sb	zero,3(s0)
8001d534:	0c007aa6 	jal	8001ea98 <kprintf>
8001d538:	26a43f4c 	addiu	a0,s5,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:456
						  r * PGSIZE,
						  total_entries * PGSIZE,
						  perm2str(perm_ref));
					perm_ref = perm;
					count_ref = count;
					count_ref_l = r;
8001d53c:	8fb40010 	lw	s4,16(sp)
8001d540:	8fa30028 	lw	v1,40(sp)
8001d544:	8fa2001c 	lw	v0,28(sp)
8001d548:	02802021 	move	a0,s4
8001d54c:	8ec57768 	lw	a1,30568(s6)
8001d550:	080074f4 	j	8001d3d0 <print_pgdir+0x1d4>
8001d554:	00608821 	move	s1,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:436
						    &l, &r);
		size_t count, count_ref = 0;
		size_t count_ref_l = 0;
		for (count = 0; count < right - left; count++) {
			l = r = 0;
			while ((perm =
8001d558:	8fa2001c 	lw	v0,28(sp)
8001d55c:	080074fa 	j	8001d3e8 <print_pgdir+0x1ec>
8001d560:	8ec57768 	lw	a1,30568(s6)

8001d564 <pmm_init>:
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:175
}

//pmm_init - setup a pmm to manage physical memory, build PDT&PT to setup paging mechanism 
//         - check the correctness of pmm & paging mechanism, print PDT&PT
void pmm_init(void)
{
8001d564:	27bdffc8 	addiu	sp,sp,-56
init_pmm_manager():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:44

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
8001d568:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:43
}

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
8001d56c:	3c028002 	lui	v0,0x8002
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:175
}

//pmm_init - setup a pmm to manage physical memory, build PDT&PT to setup paging mechanism 
//         - check the correctness of pmm & paging mechanism, print PDT&PT
void pmm_init(void)
{
8001d570:	afb40020 	sw	s4,32(sp)
init_pmm_manager():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:44

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
8001d574:	24844404 	addiu	a0,a0,17412
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:43
}

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
8001d578:	3c148015 	lui	s4,0x8015
8001d57c:	24420988 	addiu	v0,v0,2440
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:175
}

//pmm_init - setup a pmm to manage physical memory, build PDT&PT to setup paging mechanism 
//         - check the correctness of pmm & paging mechanism, print PDT&PT
void pmm_init(void)
{
8001d580:	afbf0034 	sw	ra,52(sp)
8001d584:	afb60028 	sw	s6,40(sp)
8001d588:	afb50024 	sw	s5,36(sp)
8001d58c:	afb3001c 	sw	s3,28(sp)
8001d590:	afb10014 	sw	s1,20(sp)
8001d594:	afbe0030 	sw	s8,48(sp)
8001d598:	afb7002c 	sw	s7,44(sp)
8001d59c:	afb20018 	sw	s2,24(sp)
8001d5a0:	afb00010 	sw	s0,16(sp)
init_pmm_manager():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:44

//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
8001d5a4:	0c007aa6 	jal	8001ea98 <kprintf>
8001d5a8:	ae827794 	sw	v0,30612(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:45
	kprintf(pmm_manager->name);
8001d5ac:	8e827794 	lw	v0,30612(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:46
	kprintf("\n\r");
8001d5b0:	3c158002 	lui	s5,0x8002
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:109
	kprintf(", 0x");
	printhex(KERNTOP);
	kprintf("]\n\r\n\r");

	maxpa = KERNTOP;
	npage = KMEMSIZE >> PGSHIFT;
8001d5b4:	3c118015 	lui	s1,0x8015
init_pmm_manager():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:45
//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
	kprintf(pmm_manager->name);
8001d5b8:	8c440000 	lw	a0,0(v0)
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:114
	npage = KMEMSIZE >> PGSHIFT;

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d5bc:	3c138015 	lui	s3,0x8015
init_pmm_manager():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:45
//init_pmm_manager - initialize a pmm_manager instance
static void init_pmm_manager(void)
{
	pmm_manager = &buddy_pmm_manager;
	kprintf("memory management: ");
	kprintf(pmm_manager->name);
8001d5c0:	0c007aa6 	jal	8001ea98 <kprintf>
8001d5c4:	0000b021 	move	s6,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:46
	kprintf("\n\r");
8001d5c8:	0c007aa6 	jal	8001ea98 <kprintf>
8001d5cc:	26a4476c 	addiu	a0,s5,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:47
	pmm_manager->init();
8001d5d0:	8e827794 	lw	v0,30612(s4)
8001d5d4:	8c420004 	lw	v0,4(v0)
8001d5d8:	0040f809 	jalr	v0
8001d5dc:	00000000 	nop
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:101
{
	uint32_t maxpa;
	int i;

	//panic("unimpl");
	kprintf("memory map:\n\r");
8001d5e0:	3c048002 	lui	a0,0x8002
8001d5e4:	0c007aa6 	jal	8001ea98 <kprintf>
8001d5e8:	24844418 	addiu	a0,a0,17432
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:102
	kprintf("    [0x");
8001d5ec:	3c048002 	lui	a0,0x8002
8001d5f0:	0c007aa6 	jal	8001ea98 <kprintf>
8001d5f4:	24844428 	addiu	a0,a0,17448
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:103
	printhex(KERNBASE);
8001d5f8:	3c048000 	lui	a0,0x8000
8001d5fc:	0c007ab2 	jal	8001eac8 <printhex>
8001d600:	24841000 	addiu	a0,a0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:104
	kprintf(", 0x");
8001d604:	3c048002 	lui	a0,0x8002
8001d608:	0c007aa6 	jal	8001ea98 <kprintf>
8001d60c:	24844430 	addiu	a0,a0,17456
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:105
	printhex(KERNTOP);
8001d610:	3c048200 	lui	a0,0x8200
8001d614:	0c007ab2 	jal	8001eac8 <printhex>
8001d618:	24841000 	addiu	a0,a0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:106
	kprintf("]\n\r\n\r");
8001d61c:	3c048002 	lui	a0,0x8002
8001d620:	0c007aa6 	jal	8001ea98 <kprintf>
8001d624:	24844438 	addiu	a0,a0,17464
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:114
	npage = KMEMSIZE >> PGSHIFT;

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d628:	3c058016 	lui	a1,0x8016
8001d62c:	24a587bf 	addiu	a1,a1,-30785
8001d630:	00052b02 	srl	a1,a1,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:109
	kprintf(", 0x");
	printhex(KERNTOP);
	kprintf("]\n\r\n\r");

	maxpa = KERNTOP;
	npage = KMEMSIZE >> PGSHIFT;
8001d634:	24022000 	li	v0,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:114

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d638:	00052b00 	sll	a1,a1,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:109
	kprintf(", 0x");
	printhex(KERNTOP);
	kprintf("]\n\r\n\r");

	maxpa = KERNTOP;
	npage = KMEMSIZE >> PGSHIFT;
8001d63c:	ae227770 	sw	v0,30576(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:114

	// end address of kernel
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);
8001d640:	ae6577bc 	sw	a1,30652(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117

	//reserve kernel pages, kernel space is reserved!
	for (i = 0; i < npage; i++) {
8001d644:	0800759c 	j	8001d670 <pmm_init+0x10c>
8001d648:	00001021 	move	v0,zero
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
 * */
static __always_inline void set_bit(int nr, volatile uint32_t * addr)
{
	int intr_flag;
	local_intr_save(intr_flag);
	*addr |= (1 << nr);
8001d64c:	8e020004 	lw	v0,4(s0)
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d650:	8e237770 	lw	v1,30576(s1)
8001d654:	26d60001 	addiu	s6,s6,1
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d658:	34420001 	ori	v0,v0,0x1
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d65c:	02c3202b 	sltu	a0,s6,v1
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d660:	ae020004 	sw	v0,4(s0)
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d664:	02c01021 	move	v0,s6
8001d668:	10800014 	beqz	a0,8001d6bc <pmm_init+0x158>
8001d66c:	3c108015 	lui	s0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:118
		SetPageReserved(pages + i);
8001d670:	00028140 	sll	s0,v0,0x5
8001d674:	00b08021 	addu	s0,a1,s0
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001d678:	40026000 	mfc0	v0,c0_status
8001d67c:	30420001 	andi	v0,v0,0x1
8001d680:	1040fff2 	beqz	v0,8001d64c <pmm_init+0xe8>
8001d684:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001d688:	0c006d0c 	jal	8001b430 <intr_disable>
8001d68c:	00000000 	nop
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d690:	8e020004 	lw	v0,4(s0)
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117
	extern char end[];
	// put page structure table at the end of kernel
	pages = (struct Page *)ROUNDUP_2N((void *)end, PGSHIFT);

	//reserve kernel pages, kernel space is reserved!
	for (i = 0; i < npage; i++) {
8001d694:	26d60001 	addiu	s6,s6,1
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:185
8001d698:	34420001 	ori	v0,v0,0x1
8001d69c:	ae020004 	sw	v0,4(s0)
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001d6a0:	0c006d08 	jal	8001b420 <intr_enable>
8001d6a4:	3c108015 	lui	s0,0x8015
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d6a8:	8e237770 	lw	v1,30576(s1)
set_bit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
8001d6ac:	8e6577bc 	lw	a1,30652(s3)
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:117
8001d6b0:	02c3202b 	sltu	a0,s6,v1
8001d6b4:	1480ffee 	bnez	a0,8001d670 <pmm_init+0x10c>
8001d6b8:	02c01021 	move	v0,s6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:122
		SetPageReserved(pages + i);
	}

	uintptr_t freemem =
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
8001d6bc:	00039140 	sll	s2,v1,0x5
8001d6c0:	3c168000 	lui	s6,0x8000
8001d6c4:	00b29021 	addu	s2,a1,s2
8001d6c8:	26d61000 	addiu	s6,s6,4096
8001d6cc:	0256102b 	sltu	v0,s2,s6
8001d6d0:	144002f7 	bnez	v0,8001e2b0 <pmm_init+0xd4c>
8001d6d4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:123
	kprintf( "freemem start at:%x\n\r", freemem );
8001d6d8:	02402821 	move	a1,s2
8001d6dc:	0c007aa6 	jal	8001ea98 <kprintf>
8001d6e0:	24844440 	addiu	a0,a0,17472
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:125

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
8001d6e4:	26420fff 	addiu	v0,s2,4095
8001d6e8:	00021302 	srl	v0,v0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:127
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
8001d6ec:	3c128200 	lui	s2,0x8200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:125

	uintptr_t freemem =
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
	kprintf( "freemem start at:%x\n\r", freemem );

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
8001d6f0:	00021300 	sll	v0,v0,0xc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:127
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
8001d6f4:	26521000 	addiu	s2,s2,4096
8001d6f8:	0052182b 	sltu	v1,v0,s2
8001d6fc:	106002e4 	beqz	v1,8001e290 <pmm_init+0xd2c>
8001d700:	3c177fff 	lui	s7,0x7fff
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d704:	36f7f000 	ori	s7,s7,0xf000
8001d708:	8e047770 	lw	a0,30576(s0)
8001d70c:	00571821 	addu	v1,v0,s7
8001d710:	00031b02 	srl	v1,v1,0xc
8001d714:	0064202b 	sltu	a0,v1,a0
8001d718:	108002db 	beqz	a0,8001e288 <pmm_init+0xd24>
8001d71c:	8e857794 	lw	a1,30612(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d720:	8e6477bc 	lw	a0,30652(s3)
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:128
	init_memmap(pa2page(mbegin), (mend - mbegin) >> PGSHIFT);
8001d724:	02429023 	subu	s2,s2,v0
init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:53
}

//init_memmap - call pmm->init_memmap to build Page struct for free memory  
static void init_memmap(struct Page *base, size_t n)
{
	pmm_manager->init_memmap(base, n);
8001d728:	8ca20008 	lw	v0,8(a1)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
8001d72c:	00031940 	sll	v1,v1,0x5
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:128
	kprintf( "freemem start at:%x\n\r", freemem );

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
	init_memmap(pa2page(mbegin), (mend - mbegin) >> PGSHIFT);
8001d730:	00129302 	srl	s2,s2,0xc
init_memmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:53
}

//init_memmap - call pmm->init_memmap to build Page struct for free memory  
static void init_memmap(struct Page *base, size_t n)
{
	pmm_manager->init_memmap(base, n);
8001d734:	02402821 	move	a1,s2
8001d738:	0040f809 	jalr	v0
8001d73c:	00832021 	addu	a0,a0,v1
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:129

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
	init_memmap(pa2page(mbegin), (mend - mbegin) >> PGSHIFT);
	PRINT_HEX("free pages: ", (mend - mbegin) >> PGSHIFT);
8001d740:	3c048002 	lui	a0,0x8002
8001d744:	0c007aa6 	jal	8001ea98 <kprintf>
8001d748:	24844468 	addiu	a0,a0,17512
8001d74c:	02402021 	move	a0,s2
8001d750:	0c007ab2 	jal	8001eac8 <printhex>
8001d754:	3c128002 	lui	s2,0x8002
8001d758:	0c007aa6 	jal	8001ea98 <kprintf>
8001d75c:	26443f4c 	addiu	a0,s2,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:130
	PRINT_HEX("page structure size: ", sizeof(struct Page));
8001d760:	3c048002 	lui	a0,0x8002
8001d764:	0c007aa6 	jal	8001ea98 <kprintf>
8001d768:	24844478 	addiu	a0,a0,17528
8001d76c:	0c007ab2 	jal	8001eac8 <printhex>
8001d770:	24040020 	li	a0,32
8001d774:	0c007aa6 	jal	8001ea98 <kprintf>
8001d778:	26443f4c 	addiu	a0,s2,16204
check_alloc_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:250

extern int swap_init_ok;

static void check_alloc_page(void)
{
	pmm_manager->check();
8001d77c:	8e827794 	lw	v0,30612(s4)
8001d780:	8c420018 	lw	v0,24(v0)
8001d784:	0040f809 	jalr	v0
8001d788:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:251
	kprintf("check_alloc_page() succeeded!\n\r");
8001d78c:	3c048002 	lui	a0,0x8002
8001d790:	0c007aa6 	jal	8001ea98 <kprintf>
8001d794:	24844490 	addiu	a0,a0,17552
boot_alloc_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:165
//boot_alloc_page - allocate one page using pmm->alloc_pages(1) 
// return value: the kernel virtual address of this allocated page
//note: this function is used to get the memory for PDT(Page Directory Table)&PT(Page Table)
static void *boot_alloc_page(void)
{
	struct Page *p = alloc_page();
8001d798:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001d79c:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:166
	if (p == NULL) {
8001d7a0:	104002b3 	beqz	v0,8001e270 <pmm_init+0xd0c>
8001d7a4:	3c038015 	lui	v1,0x8015
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001d7a8:	8c6477bc 	lw	a0,30652(v1)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001d7ac:	8e037770 	lw	v1,30576(s0)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001d7b0:	00441023 	subu	v0,v0,a0
8001d7b4:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001d7b8:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001d7bc:	00022302 	srl	a0,v0,0xc
8001d7c0:	0083182b 	sltu	v1,a0,v1
8001d7c4:	106002a3 	beqz	v1,8001e254 <pmm_init+0xcf0>
8001d7c8:	0057b823 	subu	s7,v0,s7
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:191

	//use pmm->check to verify the correctness of the alloc/free function in a pmm
	check_alloc_page();

	// create boot_pgdir, an initial page directory(Page Directory Table, PDT)
	boot_pgdir = boot_alloc_page();
8001d7cc:	3c148015 	lui	s4,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:192
	memset(boot_pgdir, 0, PGSIZE);
8001d7d0:	02e02021 	move	a0,s7
8001d7d4:	00002821 	move	a1,zero
8001d7d8:	24061000 	li	a2,4096
8001d7dc:	0c005c5a 	jal	80017168 <memset>
8001d7e0:	ae97776c 	sw	s7,30572(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:193
	boot_cr3 = PADDR(boot_pgdir);
8001d7e4:	8e87776c 	lw	a3,30572(s4)
8001d7e8:	00f6b02b 	sltu	s6,a3,s6
8001d7ec:	16c00293 	bnez	s6,8001e23c <pmm_init+0xcd8>
8001d7f0:	8e027770 	lw	v0,30576(s0)
8001d7f4:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:194
	current_pgdir = boot_pgdir;
8001d7f8:	3c058015 	lui	a1,0x8015
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:256
	kprintf("check_alloc_page() succeeded!\n\r");
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
8001d7fc:	2c422001 	sltiu	v0,v0,8193
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:193
	check_alloc_page();

	// create boot_pgdir, an initial page directory(Page Directory Table, PDT)
	boot_pgdir = boot_alloc_page();
	memset(boot_pgdir, 0, PGSIZE);
	boot_cr3 = PADDR(boot_pgdir);
8001d800:	ac67779c 	sw	a3,30620(v1)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:256
	kprintf("check_alloc_page() succeeded!\n\r");
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
8001d804:	10400285 	beqz	v0,8001e21c <pmm_init+0xcb8>
8001d808:	aca77768 	sw	a3,30568(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:257
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
8001d80c:	10e0027b 	beqz	a3,8001e1fc <pmm_init+0xc98>
8001d810:	30e20fff 	andi	v0,a3,0xfff
8001d814:	14400279 	bnez	v0,8001e1fc <pmm_init+0xc98>
8001d818:	00e02021 	move	a0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:258
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);
8001d81c:	00002821 	move	a1,zero
8001d820:	0c005d26 	jal	80017498 <get_page>
8001d824:	00003021 	move	a2,zero
8001d828:	1440026d 	bnez	v0,8001e1e0 <pmm_init+0xc7c>
8001d82c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:261

	struct Page *p1, *p2;
	p1 = alloc_page();
8001d830:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001d834:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:262
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);
8001d838:	8e84776c 	lw	a0,30572(s4)
8001d83c:	00402821 	move	a1,v0
8001d840:	00003021 	move	a2,zero
8001d844:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:261
	assert(npage <= KMEMSIZE / PGSIZE);
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);

	struct Page *p1, *p2;
	p1 = alloc_page();
8001d848:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:262
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);
8001d84c:	0c005dd5 	jal	80017754 <page_insert>
8001d850:	3c168015 	lui	s6,0x8015
8001d854:	1440025a 	bnez	v0,8001e1c0 <pmm_init+0xc5c>
8001d858:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:265

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
8001d85c:	8ec4776c 	lw	a0,30572(s6)
8001d860:	0c005cd4 	jal	80017350 <get_pte>
8001d864:	00003021 	move	a2,zero
8001d868:	1040024d 	beqz	v0,8001e1a0 <pmm_init+0xc3c>
8001d86c:	3c037fff 	lui	v1,0x7fff
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d870:	8c440000 	lw	a0,0(v0)
8001d874:	3463f000 	ori	v1,v1,0xf000
8001d878:	8e227770 	lw	v0,30576(s1)
8001d87c:	00832021 	addu	a0,a0,v1
8001d880:	00042302 	srl	a0,a0,0xc
8001d884:	0082282b 	sltu	a1,a0,v0
8001d888:	10a0027f 	beqz	a1,8001e288 <pmm_init+0xd24>
8001d88c:	8e6577bc 	lw	a1,30652(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d890:	00042140 	sll	a0,a0,0x5
8001d894:	00a42021 	addu	a0,a1,a0
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:266
	assert(pa2page(*ptep) == p1);
8001d898:	1604023e 	bne	s0,a0,8001e194 <pmm_init+0xc30>
8001d89c:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
 *
 * Atomically reads the value of @v.
 * */
static __always_inline int atomic_read(const atomic_t * v)
{
	return v->counter;
8001d8a0:	8e050000 	lw	a1,0(s0)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:267
	assert(page_ref(p1) == 1);
8001d8a4:	24040001 	li	a0,1
8001d8a8:	14a40236 	bne	a1,a0,8001e184 <pmm_init+0xc20>
8001d8ac:	8ec4776c 	lw	a0,30572(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:269

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
8001d8b0:	2405f000 	li	a1,-4096
8001d8b4:	8c920000 	lw	s2,0(a0)
8001d8b8:	02459024 	and	s2,s2,a1
8001d8bc:	02431821 	addu	v1,s2,v1
8001d8c0:	00031b02 	srl	v1,v1,0xc
8001d8c4:	0062102b 	sltu	v0,v1,v0
8001d8c8:	50400228 	beqzl	v0,8001e16c <pmm_init+0xc08>
8001d8cc:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:270
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);
8001d8d0:	24051000 	li	a1,4096
8001d8d4:	0c005cd4 	jal	80017350 <get_pte>
8001d8d8:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:269
	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
8001d8dc:	26520004 	addiu	s2,s2,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:270
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);
8001d8e0:	1452021b 	bne	v0,s2,8001e150 <pmm_init+0xbec>
8001d8e4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:272

	p2 = alloc_page();
8001d8e8:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001d8ec:	24040001 	li	a0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:273
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
8001d8f0:	8ec4776c 	lw	a0,30572(s6)
8001d8f4:	00402821 	move	a1,v0
8001d8f8:	24061000 	li	a2,4096
8001d8fc:	24070006 	li	a3,6
8001d900:	0c005dd5 	jal	80017754 <page_insert>
8001d904:	00409021 	move	s2,v0
8001d908:	1440020a 	bnez	v0,8001e134 <pmm_init+0xbd0>
8001d90c:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:274
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001d910:	8ec4776c 	lw	a0,30572(s6)
8001d914:	24051000 	li	a1,4096
8001d918:	0c005cd4 	jal	80017350 <get_pte>
8001d91c:	00003021 	move	a2,zero
8001d920:	10400201 	beqz	v0,8001e128 <pmm_init+0xbc4>
8001d924:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:275
	assert(*ptep & PTE_U);
8001d928:	8c420000 	lw	v0,0(v0)
8001d92c:	30430004 	andi	v1,v0,0x4
8001d930:	106001f6 	beqz	v1,8001e10c <pmm_init+0xba8>
8001d934:	30420002 	andi	v0,v0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:276
	assert(*ptep & PTE_W);
8001d938:	504001ee 	beqzl	v0,8001e0f4 <pmm_init+0xb90>
8001d93c:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:277
	assert(boot_pgdir[0] & PTE_U);
8001d940:	8e84776c 	lw	a0,30572(s4)
8001d944:	8c820000 	lw	v0,0(a0)
8001d948:	30420004 	andi	v0,v0,0x4
8001d94c:	504001e2 	beqzl	v0,8001e0d8 <pmm_init+0xb74>
8001d950:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d954:	8e430000 	lw	v1,0(s2)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:278
	assert(page_ref(p2) == 1);
8001d958:	24020001 	li	v0,1
8001d95c:	546201d7 	bnel	v1,v0,8001e0bc <pmm_init+0xb58>
8001d960:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:280

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
8001d964:	02002821 	move	a1,s0
8001d968:	24061000 	li	a2,4096
8001d96c:	0c005dd5 	jal	80017754 <page_insert>
8001d970:	00003821 	move	a3,zero
8001d974:	144001ca 	bnez	v0,8001e0a0 <pmm_init+0xb3c>
8001d978:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d97c:	8e030000 	lw	v1,0(s0)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:281
	assert(page_ref(p1) == 2);
8001d980:	24020002 	li	v0,2
8001d984:	146201c0 	bne	v1,v0,8001e088 <pmm_init+0xb24>
8001d988:	3c068002 	lui	a2,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d98c:	8e420000 	lw	v0,0(s2)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:282
	assert(page_ref(p2) == 0);
8001d990:	144001ba 	bnez	v0,8001e07c <pmm_init+0xb18>
8001d994:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:283
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001d998:	8c44776c 	lw	a0,30572(v0)
8001d99c:	24051000 	li	a1,4096
8001d9a0:	0c005cd4 	jal	80017350 <get_pte>
8001d9a4:	00003021 	move	a2,zero
8001d9a8:	104001ac 	beqz	v0,8001e05c <pmm_init+0xaf8>
8001d9ac:	3c037fff 	lui	v1,0x7fff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:284
	assert(pa2page(*ptep) == p1);
8001d9b0:	8c420000 	lw	v0,0(v0)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001d9b4:	8e247770 	lw	a0,30576(s1)
8001d9b8:	3463f000 	ori	v1,v1,0xf000
8001d9bc:	00431821 	addu	v1,v0,v1
8001d9c0:	00031b02 	srl	v1,v1,0xc
8001d9c4:	0064202b 	sltu	a0,v1,a0
8001d9c8:	1080022f 	beqz	a0,8001e288 <pmm_init+0xd24>
8001d9cc:	8e6477bc 	lw	a0,30652(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001d9d0:	00031940 	sll	v1,v1,0x5
8001d9d4:	00831821 	addu	v1,a0,v1
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:284
8001d9d8:	16030198 	bne	s0,v1,8001e03c <pmm_init+0xad8>
8001d9dc:	30420004 	andi	v0,v0,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:285
	assert((*ptep & PTE_U) == 0);
8001d9e0:	1440018e 	bnez	v0,8001e01c <pmm_init+0xab8>
8001d9e4:	8e84776c 	lw	a0,30572(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:287

	page_remove(boot_pgdir, 0x0);
8001d9e8:	00002821 	move	a1,zero
8001d9ec:	0c005e3f 	jal	800178fc <page_remove>
8001d9f0:	3c168015 	lui	s6,0x8015
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001d9f4:	8e170000 	lw	s7,0(s0)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:288
	assert(page_ref(p1) == 1);
8001d9f8:	24020001 	li	v0,1
8001d9fc:	16e20180 	bne	s7,v0,8001e000 <pmm_init+0xa9c>
8001da00:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001da04:	8e420000 	lw	v0,0(s2)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:289
	assert(page_ref(p2) == 0);
8001da08:	14400179 	bnez	v0,8001dff0 <pmm_init+0xa8c>
8001da0c:	8ec4776c 	lw	a0,30572(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:291

	page_remove(boot_pgdir, PGSIZE);
8001da10:	0c005e3f 	jal	800178fc <page_remove>
8001da14:	24051000 	li	a1,4096
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001da18:	8e020000 	lw	v0,0(s0)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:292
	assert(page_ref(p1) == 0);
8001da1c:	1440016d 	bnez	v0,8001dfd4 <pmm_init+0xa70>
8001da20:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001da24:	8e420000 	lw	v0,0(s2)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:293
	assert(page_ref(p2) == 0);
8001da28:	14400163 	bnez	v0,8001dfb8 <pmm_init+0xa54>
8001da2c:	8ec2776c 	lw	v0,30572(s6)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001da30:	3c107fff 	lui	s0,0x7fff
8001da34:	3610f000 	ori	s0,s0,0xf000
8001da38:	8c420000 	lw	v0,0(v0)
8001da3c:	8e237770 	lw	v1,30576(s1)
8001da40:	00501021 	addu	v0,v0,s0
8001da44:	00021302 	srl	v0,v0,0xc
8001da48:	0043182b 	sltu	v1,v0,v1
8001da4c:	1060020e 	beqz	v1,8001e288 <pmm_init+0xd24>
8001da50:	8e6477bc 	lw	a0,30652(s3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001da54:	00021140 	sll	v0,v0,0x5
8001da58:	00822021 	addu	a0,a0,v0
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001da5c:	8c820000 	lw	v0,0(a0)
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:295

	assert(page_ref(pa2page(boot_pgdir[0])) == 1);
8001da60:	5457014e 	bnel	v0,s7,8001df9c <pmm_init+0xa38>
8001da64:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:296
	free_page(pa2page(boot_pgdir[0]));
8001da68:	0c007449 	jal	8001d124 <free_pages>
8001da6c:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:297
	boot_pgdir[0] = 0;
8001da70:	8ec2776c 	lw	v0,30572(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:299

	kprintf("check_pgdir() succeeded!\n\r");
8001da74:	3c048002 	lui	a0,0x8002
8001da78:	24844754 	addiu	a0,a0,18260
8001da7c:	0c007aa6 	jal	8001ea98 <kprintf>
8001da80:	ac400000 	sw	zero,0(v0)
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:198
	boot_cr3 = PADDR(boot_pgdir);
	current_pgdir = boot_pgdir;

	check_pgdir();
	//FPGA
	boot_map_segment(boot_pgdir, KERNBASE, KMEMSIZE, 0, PTE_W);
8001da84:	8ed6776c 	lw	s6,30572(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:151
boot_map_segment(pde_t * pgdir, uintptr_t la, size_t size, uintptr_t pa,
		 uint32_t perm)
{
	assert(PGOFF(la) == PGOFF(pa));
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
8001da88:	3c128000 	lui	s2,0x8000
boot_map_segment():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:153
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
8001da8c:	3c178200 	lui	s7,0x8200
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:151
boot_map_segment(pde_t * pgdir, uintptr_t la, size_t size, uintptr_t pa,
		 uint32_t perm)
{
	assert(PGOFF(la) == PGOFF(pa));
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
8001da90:	26521000 	addiu	s2,s2,4096
boot_map_segment():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:153
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
8001da94:	26f71000 	addiu	s7,s7,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:154
		pte_t *ptep = get_pte(pgdir, la, 1);
8001da98:	02c02021 	move	a0,s6
8001da9c:	02402821 	move	a1,s2
8001daa0:	0c005cd4 	jal	80017350 <get_pte>
8001daa4:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:155
		assert(ptep != NULL);
8001daa8:	10400134 	beqz	v0,8001df7c <pmm_init+0xa18>
8001daac:	02501821 	addu	v1,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:156
		*ptep = pa | PTE_P | perm;
8001dab0:	34630003 	ori	v1,v1,0x3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:153
{
	assert(PGOFF(la) == PGOFF(pa));
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
8001dab4:	26521000 	addiu	s2,s2,4096
8001dab8:	1657fff7 	bne	s2,s7,8001da98 <pmm_init+0x534>
8001dabc:	ac430000 	sw	v1,0(v0)
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:205
	/* SZY comments: 1: 0x80000000 (KERNBASE) and up should be mapped to physical pages with exactly the same physical address? */
	/* 2: 0x80000000 = (KERNBASE) 2GB? 
	one root page table entry covers 1024 4KB pages, which means 4MB, low virtual address here. 
	what's your purpose here? */
	//virtual_addr 3G~3G+4M = linear_addr 0~4M = linear_addr 3G~3G+4M = phy_addr 0~4M
	boot_pgdir[0] = boot_pgdir[PDX(KERNBASE)];
8001dac0:	8e82776c 	lw	v0,30572(s4)
lcr3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:37
static void check_pgdir(void);
static void check_boot_pgdir(void);

void lcr3(uintptr_t cr3)
{
	current_pgdir = (pde_t *) cr3;
8001dac4:	3c058015 	lui	a1,0x8015
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:311
//unsigned int k;
	//assert(PDE_ADDR(boot_pgdir[PDX(VPT)]) == PADDR(boot_pgdir));

	assert(boot_pgdir[0] == 0);
	struct Page *p;
	p = alloc_page();
8001dac8:	24040001 	li	a0,1
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:205
	/* SZY comments: 1: 0x80000000 (KERNBASE) and up should be mapped to physical pages with exactly the same physical address? */
	/* 2: 0x80000000 = (KERNBASE) 2GB? 
	one root page table entry covers 1024 4KB pages, which means 4MB, low virtual address here. 
	what's your purpose here? */
	//virtual_addr 3G~3G+4M = linear_addr 0~4M = linear_addr 3G~3G+4M = phy_addr 0~4M
	boot_pgdir[0] = boot_pgdir[PDX(KERNBASE)];
8001dacc:	8c430800 	lw	v1,2048(v0)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dad0:	3c1e8015 	lui	s8,0x8015
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dad4:	3c178015 	lui	s7,0x8015
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:205
8001dad8:	ac430000 	sw	v1,0(v0)
lcr3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:37
static void check_pgdir(void);
static void check_boot_pgdir(void);

void lcr3(uintptr_t cr3)
{
	current_pgdir = (pde_t *) cr3;
8001dadc:	8ca3779c 	lw	v1,30620(a1)
8001dae0:	3c058015 	lui	a1,0x8015
8001dae4:	aca37768 	sw	v1,30568(a1)
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:311
//unsigned int k;
	//assert(PDE_ADDR(boot_pgdir[PDX(VPT)]) == PADDR(boot_pgdir));

	assert(boot_pgdir[0] == 0);
	struct Page *p;
	p = alloc_page();
8001dae8:	0c00742d 	jal	8001d0b4 <alloc_pages>
8001daec:	ac400000 	sw	zero,0(v0)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001daf0:	8e6777bc 	lw	a3,30652(s3)
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:311
8001daf4:	00409021 	move	s2,v0
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001daf8:	8e227770 	lw	v0,30576(s1)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dafc:	02473823 	subu	a3,s2,a3
8001db00:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001db04:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001db08:	00071b02 	srl	v1,a3,0xc
8001db0c:	0062102b 	sltu	v0,v1,v0
8001db10:	10400229 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001db14:	00f03823 	subu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:313
	*(int *)(page2kva(p) + 0x100) = 0x1234;
	kprintf("page2kva(p):0x%08x",page2kva(p));
8001db18:	3c028002 	lui	v0,0x8002
8001db1c:	24444770 	addiu	a0,v0,18288
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:312
	//assert(PDE_ADDR(boot_pgdir[PDX(VPT)]) == PADDR(boot_pgdir));

	assert(boot_pgdir[0] == 0);
	struct Page *p;
	p = alloc_page();
	*(int *)(page2kva(p) + 0x100) = 0x1234;
8001db20:	24021234 	li	v0,4660
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:313
	kprintf("page2kva(p):0x%08x",page2kva(p));
8001db24:	00e02821 	move	a1,a3
8001db28:	0c007aa6 	jal	8001ea98 <kprintf>
8001db2c:	ace20100 	sw	v0,256(a3)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:314
	kprintf("\n\r");
8001db30:	0c007aa6 	jal	8001ea98 <kprintf>
8001db34:	26a4476c 	addiu	a0,s5,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001db38:	8fc777bc 	lw	a3,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001db3c:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001db40:	02473823 	subu	a3,s2,a3
8001db44:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001db48:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001db4c:	00071b02 	srl	v1,a3,0xc
8001db50:	0062102b 	sltu	v0,v1,v0
8001db54:	10400218 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001db58:	00f03823 	subu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:315
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
8001db5c:	8ce50100 	lw	a1,256(a3)
8001db60:	3c168002 	lui	s6,0x8002
8001db64:	0c007aa6 	jal	8001ea98 <kprintf>
8001db68:	26c44784 	addiu	a0,s6,18308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:317

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
8001db6c:	3c038015 	lui	v1,0x8015
8001db70:	8c64776c 	lw	a0,30572(v1)
8001db74:	02402821 	move	a1,s2
8001db78:	24060100 	li	a2,256
8001db7c:	0c005dd5 	jal	80017754 <page_insert>
8001db80:	24070002 	li	a3,2
8001db84:	14400205 	bnez	v0,8001e39c <pmm_init+0xe38>
8001db88:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001db8c:	8e430000 	lw	v1,0(s2)
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:318
	assert(page_ref(p) == 1);
8001db90:	24020001 	li	v0,1
8001db94:	146201fa 	bne	v1,v0,8001e380 <pmm_init+0xe1c>
8001db98:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001db9c:	8fc777bc 	lw	a3,30652(s8)
8001dba0:	02473823 	subu	a3,s2,a3
8001dba4:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dba8:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dbac:	00071b02 	srl	v1,a3,0xc
8001dbb0:	0062102b 	sltu	v0,v1,v0
8001dbb4:	10400200 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001dbb8:	00f03823 	subu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:319
	kprintf("page2kva(p):0x%08x",page2kva(p));
8001dbbc:	3c058002 	lui	a1,0x8002
8001dbc0:	24a44770 	addiu	a0,a1,18288
8001dbc4:	0c007aa6 	jal	8001ea98 <kprintf>
8001dbc8:	00e02821 	move	a1,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:320
	kprintf("\n\r");
8001dbcc:	3c028002 	lui	v0,0x8002
8001dbd0:	0c007aa6 	jal	8001ea98 <kprintf>
8001dbd4:	2444476c 	addiu	a0,v0,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dbd8:	8fc277bc 	lw	v0,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dbdc:	8ee37770 	lw	v1,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dbe0:	02421023 	subu	v0,s2,v0
8001dbe4:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dbe8:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dbec:	00022302 	srl	a0,v0,0xc
8001dbf0:	0083182b 	sltu	v1,a0,v1
8001dbf4:	106001db 	beqz	v1,8001e364 <pmm_init+0xe00>
8001dbf8:	00508023 	subu	s0,v0,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:321
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
8001dbfc:	8e050100 	lw	a1,256(s0)
8001dc00:	0c007aa6 	jal	8001ea98 <kprintf>
8001dc04:	26c44784 	addiu	a0,s6,18308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:322
	kprintf("\n\r");
8001dc08:	3c038002 	lui	v1,0x8002
8001dc0c:	0c007aa6 	jal	8001ea98 <kprintf>
8001dc10:	2464476c 	addiu	a0,v1,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:323
	kprintf("*(int*)(0x100):0x%08x",*(int*)(0x100));
8001dc14:	8c050100 	lw	a1,256(zero)
8001dc18:	3c048002 	lui	a0,0x8002
8001dc1c:	0c007aa6 	jal	8001ea98 <kprintf>
8001dc20:	248447ec 	addiu	a0,a0,18412
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:324
	assert(page_insert(boot_pgdir, p, 0x100 + PGSIZE, PTE_W) == 0);
8001dc24:	3c058015 	lui	a1,0x8015
8001dc28:	8ca4776c 	lw	a0,30572(a1)
8001dc2c:	24061100 	li	a2,4352
8001dc30:	02402821 	move	a1,s2
8001dc34:	0c005dd5 	jal	80017754 <page_insert>
8001dc38:	24070002 	li	a3,2
8001dc3c:	544001c2 	bnezl	v0,8001e348 <pmm_init+0xde4>
8001dc40:	3c048002 	lui	a0,0x8002
atomic_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/atomic.h:22
8001dc44:	8e430000 	lw	v1,0(s2)
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:325
	assert(page_ref(p) == 2);
8001dc48:	24020002 	li	v0,2
8001dc4c:	546201b7 	bnel	v1,v0,8001e32c <pmm_init+0xdc8>
8001dc50:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:327

	kprintf("\n\rHERE\n\r");
8001dc54:	3c048002 	lui	a0,0x8002
8001dc58:	0c007aa6 	jal	8001ea98 <kprintf>
8001dc5c:	24844850 	addiu	a0,a0,18512
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dc60:	8e6777bc 	lw	a3,30652(s3)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dc64:	8e227770 	lw	v0,30576(s1)
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dc68:	3c108000 	lui	s0,0x8000
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dc6c:	02473823 	subu	a3,s2,a3
8001dc70:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dc74:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dc78:	00071b02 	srl	v1,a3,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dc7c:	26101000 	addiu	s0,s0,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dc80:	0062102b 	sltu	v0,v1,v0
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dc84:	3c1e8015 	lui	s8,0x8015
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dc88:	00f03821 	addu	a3,a3,s0
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dc8c:	104001ca 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001dc90:	3c178015 	lui	s7,0x8015
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:328
	kprintf("page2kva(p):0x%08x",page2kva(p));
8001dc94:	3c028002 	lui	v0,0x8002
8001dc98:	00e02821 	move	a1,a3
8001dc9c:	0c007aa6 	jal	8001ea98 <kprintf>
8001dca0:	24444770 	addiu	a0,v0,18288
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:329
	kprintf("\n\r");
8001dca4:	0c007aa6 	jal	8001ea98 <kprintf>
8001dca8:	26a4476c 	addiu	a0,s5,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dcac:	8fc777bc 	lw	a3,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dcb0:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dcb4:	02473823 	subu	a3,s2,a3
8001dcb8:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dcbc:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dcc0:	00071b02 	srl	v1,a3,0xc
8001dcc4:	0062102b 	sltu	v0,v1,v0
8001dcc8:	104001bb 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001dccc:	00f03821 	addu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:330
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
8001dcd0:	8ce50100 	lw	a1,256(a3)
8001dcd4:	0c007aa6 	jal	8001ea98 <kprintf>
8001dcd8:	26c44784 	addiu	a0,s6,18308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:332
	//for(k=0x0;k<0x02000000;k+=0x1000)
	kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
8001dcdc:	8c050100 	lw	a1,256(zero)
8001dce0:	3c038002 	lui	v1,0x8002
8001dce4:	0c007aa6 	jal	8001ea98 <kprintf>
8001dce8:	2464485c 	addiu	a0,v1,18524
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:333
	kprintf("\n\r");
8001dcec:	3c058002 	lui	a1,0x8002
8001dcf0:	0c007aa6 	jal	8001ea98 <kprintf>
8001dcf4:	24a4476c 	addiu	a0,a1,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dcf8:	8fc777bc 	lw	a3,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dcfc:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dd00:	02473823 	subu	a3,s2,a3
8001dd04:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dd08:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dd0c:	00071b02 	srl	v1,a3,0xc
8001dd10:	0062102b 	sltu	v0,v1,v0
8001dd14:	104001a8 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001dd18:	00f03821 	addu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:335
	
	kprintf("page2kva(p):0x%08x",page2kva(p));
8001dd1c:	3c028002 	lui	v0,0x8002
8001dd20:	00e02821 	move	a1,a3
8001dd24:	0c007aa6 	jal	8001ea98 <kprintf>
8001dd28:	24444770 	addiu	a0,v0,18288
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:336
	kprintf("\n\r");
8001dd2c:	3c038002 	lui	v1,0x8002
8001dd30:	0c007aa6 	jal	8001ea98 <kprintf>
8001dd34:	2464476c 	addiu	a0,v1,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dd38:	8fc777bc 	lw	a3,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dd3c:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001dd40:	02473823 	subu	a3,s2,a3
8001dd44:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001dd48:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dd4c:	00071b02 	srl	v1,a3,0xc
8001dd50:	0062102b 	sltu	v0,v1,v0
8001dd54:	10400198 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001dd58:	00f03821 	addu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:337
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
8001dd5c:	8ce50100 	lw	a1,256(a3)
8001dd60:	3c028002 	lui	v0,0x8002
8001dd64:	0c007aa6 	jal	8001ea98 <kprintf>
8001dd68:	24444784 	addiu	a0,v0,18308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:338
	assert(*(int *)0x100 == 0x1234);
8001dd6c:	8c030100 	lw	v1,256(zero)
8001dd70:	24021234 	li	v0,4660
8001dd74:	14620165 	bne	v1,v0,8001e30c <pmm_init+0xda8>
8001dd78:	3c058002 	lui	a1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:340
	const char *str = "ucore: Hello world!!";
	strcpy((void *)0x100, str);
8001dd7c:	24040100 	li	a0,256
8001dd80:	0c005b9a 	jal	80016e68 <strcpy>
8001dd84:	24a5488c 	addiu	a1,a1,18572
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:341
	kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
8001dd88:	8c050100 	lw	a1,256(zero)
8001dd8c:	3c038002 	lui	v1,0x8002
8001dd90:	0c007aa6 	jal	8001ea98 <kprintf>
8001dd94:	2464485c 	addiu	a0,v1,18524
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:342
	kprintf("\n\r");
8001dd98:	3c058002 	lui	a1,0x8002
8001dd9c:	0c007aa6 	jal	8001ea98 <kprintf>
8001dda0:	24a4476c 	addiu	a0,a1,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:343
	assert(strcmp((void *)0x100, (void *)(0x100 + PGSIZE)) == 0);
8001dda4:	24040100 	li	a0,256
8001dda8:	0c005bc0 	jal	80016f00 <strcmp>
8001ddac:	24051100 	li	a1,4352
8001ddb0:	1440014e 	bnez	v0,8001e2ec <pmm_init+0xd88>
8001ddb4:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001ddb8:	8fc777bc 	lw	a3,30652(s8)
8001ddbc:	02473823 	subu	a3,s2,a3
8001ddc0:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001ddc4:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001ddc8:	00071b02 	srl	v1,a3,0xc
8001ddcc:	0062102b 	sltu	v0,v1,v0
8001ddd0:	10400179 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001ddd4:	00f03821 	addu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:345
	
	kprintf("page2kva(p):0x%08x",page2kva(p));
8001ddd8:	3c028002 	lui	v0,0x8002
8001dddc:	00e02821 	move	a1,a3
8001dde0:	0c007aa6 	jal	8001ea98 <kprintf>
8001dde4:	24444770 	addiu	a0,v0,18288
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:346
	kprintf("\n\r");
8001dde8:	3c038002 	lui	v1,0x8002
8001ddec:	0c007aa6 	jal	8001ea98 <kprintf>
8001ddf0:	2464476c 	addiu	a0,v1,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001ddf4:	8fc777bc 	lw	a3,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001ddf8:	8ee27770 	lw	v0,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001ddfc:	02473823 	subu	a3,s2,a3
8001de00:	00073943 	sra	a3,a3,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001de04:	00073b00 	sll	a3,a3,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001de08:	00071b02 	srl	v1,a3,0xc
8001de0c:	0062102b 	sltu	v0,v1,v0
8001de10:	10400169 	beqz	v0,8001e3b8 <pmm_init+0xe54>
8001de14:	00f03821 	addu	a3,a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:347
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
8001de18:	8ce50100 	lw	a1,256(a3)
8001de1c:	3c028002 	lui	v0,0x8002
8001de20:	0c007aa6 	jal	8001ea98 <kprintf>
8001de24:	24444784 	addiu	a0,v0,18308
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:348
	kprintf("\n\r");
8001de28:	3c038002 	lui	v1,0x8002
8001de2c:	0c007aa6 	jal	8001ea98 <kprintf>
8001de30:	2464476c 	addiu	a0,v1,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001de34:	8fc277bc 	lw	v0,30652(s8)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001de38:	8ee37770 	lw	v1,30576(s7)
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001de3c:	02421023 	subu	v0,s2,v0
8001de40:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001de44:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001de48:	00022302 	srl	a0,v0,0xc
8001de4c:	0083182b 	sltu	v1,a0,v1
8001de50:	10600144 	beqz	v1,8001e364 <pmm_init+0xe00>
8001de54:	00508021 	addu	s0,v0,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:349
	*(char *)(page2kva(p) + 0x100) = '\0';
8001de58:	a2000100 	sb	zero,256(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:350
	assert(strlen((const char *)0x100) == 0);
8001de5c:	0c005b81 	jal	80016e04 <strlen>
8001de60:	24040100 	li	a0,256
8001de64:	14400119 	bnez	v0,8001e2cc <pmm_init+0xd68>
8001de68:	3c028002 	lui	v0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:351
	kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
8001de6c:	8c050100 	lw	a1,256(zero)
8001de70:	0c007aa6 	jal	8001ea98 <kprintf>
8001de74:	2444485c 	addiu	a0,v0,18524
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:352
	kprintf("\n\r");
8001de78:	0c007aa6 	jal	8001ea98 <kprintf>
8001de7c:	26a4476c 	addiu	a0,s5,18284
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001de80:	8e6277bc 	lw	v0,30652(s3)
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001de84:	8e237770 	lw	v1,30576(s1)
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001de88:	3c078000 	lui	a3,0x8000
page2ppn():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:88
extern struct Page *pages;
extern size_t npage;

static inline ppn_t page2ppn(struct Page *page)
{
	return page - pages;
8001de8c:	02421023 	subu	v0,s2,v0
8001de90:	00021143 	sra	v0,v0,0x5
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001de94:	00021300 	sll	v0,v0,0xc
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001de98:	00022302 	srl	a0,v0,0xc
page2pa():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:93
	return page - pages;
}

static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
8001de9c:	24e71000 	addiu	a3,a3,4096
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001dea0:	0083182b 	sltu	v1,a0,v1
8001dea4:	10600144 	beqz	v1,8001e3b8 <pmm_init+0xe54>
8001dea8:	00473821 	addu	a3,v0,a3
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:353
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
8001deac:	8ce50100 	lw	a1,256(a3)
8001deb0:	26c44784 	addiu	a0,s6,18308
8001deb4:	0c007aa6 	jal	8001ea98 <kprintf>
8001deb8:	3c108015 	lui	s0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:354
	kprintf("\n\r");
8001debc:	3c048002 	lui	a0,0x8002
8001dec0:	0c007aa6 	jal	8001ea98 <kprintf>
8001dec4:	2484476c 	addiu	a0,a0,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:355
	free_page(p);
8001dec8:	02402021 	move	a0,s2
8001decc:	0c007449 	jal	8001d124 <free_pages>
8001ded0:	24050001 	li	a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:356
	free_page(pa2page(PDE_ADDR(boot_pgdir[0])));
8001ded4:	8e82776c 	lw	v0,30572(s4)
8001ded8:	8c440000 	lw	a0,0(v0)
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001dedc:	3c028015 	lui	v0,0x8015
8001dee0:	8c437770 	lw	v1,30576(v0)
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:356
8001dee4:	2402f000 	li	v0,-4096
8001dee8:	00821024 	and	v0,a0,v0
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
8001deec:	3c047fff 	lui	a0,0x7fff
8001def0:	3484f000 	ori	a0,a0,0xf000
8001def4:	00441021 	addu	v0,v0,a0
8001def8:	00021302 	srl	v0,v0,0xc
8001defc:	0043182b 	sltu	v1,v0,v1
8001df00:	106000e1 	beqz	v1,8001e288 <pmm_init+0xd24>
8001df04:	3c038015 	lui	v1,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:101
		panic("pa2page called with invalid pa");
	}
	return &pages[PPN(pa)];
8001df08:	8c6477bc 	lw	a0,30652(v1)
8001df0c:	00021140 	sll	v0,v0,0x5
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:356
8001df10:	24050001 	li	a1,1
8001df14:	0c007449 	jal	8001d124 <free_pages>
8001df18:	00822021 	addu	a0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:357
	boot_pgdir[0] = 0;
8001df1c:	8e02776c 	lw	v0,30572(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:358
	tlb_invalidate_all();
8001df20:	0c007924 	jal	8001e490 <tlb_invalidate_all>
8001df24:	ac400000 	sw	zero,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:360

	kprintf("check_boot_pgdir() succeeded!\n\r");
8001df28:	3c048002 	lui	a0,0x8002
8001df2c:	0c007aa6 	jal	8001ea98 <kprintf>
8001df30:	24844900 	addiu	a0,a0,18688
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:217
	//~YX
	//now the basic virtual memory map(see memlayout.h) is established.
	//check the correctness of the basic virtual memory map.
	check_boot_pgdir();

	memset(boot_pgdir, 0, PGSIZE);
8001df34:	8e04776c 	lw	a0,30572(s0)
8001df38:	00002821 	move	a1,zero
8001df3c:	0c005c5a 	jal	80017168 <memset>
8001df40:	24061000 	li	a2,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:218
	print_pgdir();
8001df44:	0c00747f 	jal	8001d1fc <print_pgdir>
8001df48:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:224
	
/* SZY comments, what's the purpose of allocating space for slab? really store the symbols? */
	kmalloc_init();
	//slab_init();
	//kprintf("kmalloc_init() succeeded!\n");
}
8001df4c:	8fbf0034 	lw	ra,52(sp)
8001df50:	8fbe0030 	lw	s8,48(sp)
8001df54:	8fb7002c 	lw	s7,44(sp)
8001df58:	8fb60028 	lw	s6,40(sp)
8001df5c:	8fb50024 	lw	s5,36(sp)
8001df60:	8fb40020 	lw	s4,32(sp)
8001df64:	8fb3001c 	lw	s3,28(sp)
8001df68:	8fb20018 	lw	s2,24(sp)
8001df6c:	8fb10014 	lw	s1,20(sp)
8001df70:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:221

	memset(boot_pgdir, 0, PGSIZE);
	print_pgdir();
	
/* SZY comments, what's the purpose of allocating space for slab? really store the symbols? */
	kmalloc_init();
8001df74:	08005451 	j	80015144 <kmalloc_init>
8001df78:	27bd0038 	addiu	sp,sp,56
boot_map_segment():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:155
	size_t n = ROUNDUP_2N(size + PGOFF(la), PGSHIFT) >> PGSHIFT;
	la = ROUNDDOWN_2N(la, PGSHIFT);
	pa = ROUNDDOWN_2N(pa, PGSHIFT);
	for (; n > 0; n--, la += PGSIZE, pa += PGSIZE) {
		pte_t *ptep = get_pte(pgdir, la, 1);
		assert(ptep != NULL);
8001df7c:	3c048002 	lui	a0,0x8002
8001df80:	3c068002 	lui	a2,0x8002
8001df84:	3c078002 	lui	a3,0x8002
8001df88:	24843a18 	addiu	a0,a0,14872
8001df8c:	2405009b 	li	a1,155
8001df90:	24c60e48 	addiu	a2,a2,3656
8001df94:	0c006b13 	jal	8001ac4c <__panic>
8001df98:	24e730a4 	addiu	a3,a3,12452
check_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:295

	page_remove(boot_pgdir, PGSIZE);
	assert(page_ref(p1) == 0);
	assert(page_ref(p2) == 0);

	assert(page_ref(pa2page(boot_pgdir[0])) == 1);
8001df9c:	3c068002 	lui	a2,0x8002
8001dfa0:	3c078002 	lui	a3,0x8002
8001dfa4:	24843a18 	addiu	a0,a0,14872
8001dfa8:	24050127 	li	a1,295
8001dfac:	24c60e48 	addiu	a2,a2,3656
8001dfb0:	0c006b13 	jal	8001ac4c <__panic>
8001dfb4:	24e7472c 	addiu	a3,a3,18220
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:293
	assert(page_ref(p1) == 1);
	assert(page_ref(p2) == 0);

	page_remove(boot_pgdir, PGSIZE);
	assert(page_ref(p1) == 0);
	assert(page_ref(p2) == 0);
8001dfb8:	24843a18 	addiu	a0,a0,14872
8001dfbc:	24050125 	li	a1,293
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:289
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);

	page_remove(boot_pgdir, 0x0);
	assert(page_ref(p1) == 1);
	assert(page_ref(p2) == 0);
8001dfc0:	3c068002 	lui	a2,0x8002
8001dfc4:	3c078002 	lui	a3,0x8002
8001dfc8:	24c60e48 	addiu	a2,a2,3656
8001dfcc:	0c006b13 	jal	8001ac4c <__panic>
8001dfd0:	24e746ec 	addiu	a3,a3,18156
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:292

	page_remove(boot_pgdir, PGSIZE);
	assert(page_ref(p1) == 0);
8001dfd4:	3c068002 	lui	a2,0x8002
8001dfd8:	3c078002 	lui	a3,0x8002
8001dfdc:	24843a18 	addiu	a0,a0,14872
8001dfe0:	24050124 	li	a1,292
8001dfe4:	24c60e48 	addiu	a2,a2,3656
8001dfe8:	0c006b13 	jal	8001ac4c <__panic>
8001dfec:	24e74718 	addiu	a3,a3,18200
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:289
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);

	page_remove(boot_pgdir, 0x0);
	assert(page_ref(p1) == 1);
	assert(page_ref(p2) == 0);
8001dff0:	3c048002 	lui	a0,0x8002
8001dff4:	24843a18 	addiu	a0,a0,14872
8001dff8:	080077f0 	j	8001dfc0 <pmm_init+0xa5c>
8001dffc:	24050121 	li	a1,289
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:288
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);

	page_remove(boot_pgdir, 0x0);
	assert(page_ref(p1) == 1);
8001e000:	24843a18 	addiu	a0,a0,14872
8001e004:	24050120 	li	a1,288
8001e008:	3c068002 	lui	a2,0x8002
8001e00c:	3c078002 	lui	a3,0x8002
8001e010:	24c60e48 	addiu	a2,a2,3656
8001e014:	0c006b13 	jal	8001ac4c <__panic>
8001e018:	24e745bc 	addiu	a3,a3,17852
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:285
	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert((*ptep & PTE_U) == 0);
8001e01c:	3c048002 	lui	a0,0x8002
8001e020:	3c068002 	lui	a2,0x8002
8001e024:	3c078002 	lui	a3,0x8002
8001e028:	24843a18 	addiu	a0,a0,14872
8001e02c:	2405011d 	li	a1,285
8001e030:	24c60e48 	addiu	a2,a2,3656
8001e034:	0c006b13 	jal	8001ac4c <__panic>
8001e038:	24e74700 	addiu	a3,a3,18176
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:284

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
8001e03c:	3c048002 	lui	a0,0x8002
8001e040:	24843a18 	addiu	a0,a0,14872
8001e044:	2405011c 	li	a1,284
8001e048:	3c068002 	lui	a2,0x8002
8001e04c:	3c078002 	lui	a3,0x8002
8001e050:	24c60e48 	addiu	a2,a2,3656
8001e054:	0c006b13 	jal	8001ac4c <__panic>
8001e058:	24e745a4 	addiu	a3,a3,17828
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:283
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001e05c:	3c048002 	lui	a0,0x8002
8001e060:	24843a18 	addiu	a0,a0,14872
8001e064:	2405011b 	li	a1,283
8001e068:	3c068002 	lui	a2,0x8002
8001e06c:	3c078002 	lui	a3,0x8002
8001e070:	24c60e48 	addiu	a2,a2,3656
8001e074:	0c006b13 	jal	8001ac4c <__panic>
8001e078:	24e74630 	addiu	a3,a3,17968
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:282
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
	assert(page_ref(p2) == 0);
8001e07c:	24843a18 	addiu	a0,a0,14872
8001e080:	080077f0 	j	8001dfc0 <pmm_init+0xa5c>
8001e084:	2405011a 	li	a1,282
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:281
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
	assert(page_ref(p1) == 2);
8001e088:	3c078002 	lui	a3,0x8002
8001e08c:	24843a18 	addiu	a0,a0,14872
8001e090:	24050119 	li	a1,281
8001e094:	24c60e48 	addiu	a2,a2,3656
8001e098:	0c006b13 	jal	8001ac4c <__panic>
8001e09c:	24e746d8 	addiu	a3,a3,18136
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:280
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);

	assert(page_insert(boot_pgdir, p1, PGSIZE, 0) == 0);
8001e0a0:	3c068002 	lui	a2,0x8002
8001e0a4:	3c078002 	lui	a3,0x8002
8001e0a8:	24843a18 	addiu	a0,a0,14872
8001e0ac:	24050118 	li	a1,280
8001e0b0:	24c60e48 	addiu	a2,a2,3656
8001e0b4:	0c006b13 	jal	8001ac4c <__panic>
8001e0b8:	24e746ac 	addiu	a3,a3,18092
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:278
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
	assert(page_ref(p2) == 1);
8001e0bc:	3c068002 	lui	a2,0x8002
8001e0c0:	3c078002 	lui	a3,0x8002
8001e0c4:	24843a18 	addiu	a0,a0,14872
8001e0c8:	24050116 	li	a1,278
8001e0cc:	24c60e48 	addiu	a2,a2,3656
8001e0d0:	0c006b13 	jal	8001ac4c <__panic>
8001e0d4:	24e74698 	addiu	a3,a3,18072
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:277
	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
	assert(boot_pgdir[0] & PTE_U);
8001e0d8:	3c068002 	lui	a2,0x8002
8001e0dc:	3c078002 	lui	a3,0x8002
8001e0e0:	24843a18 	addiu	a0,a0,14872
8001e0e4:	24050115 	li	a1,277
8001e0e8:	24c60e48 	addiu	a2,a2,3656
8001e0ec:	0c006b13 	jal	8001ac4c <__panic>
8001e0f0:	24e74680 	addiu	a3,a3,18048
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:276

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
	assert(*ptep & PTE_W);
8001e0f4:	3c078002 	lui	a3,0x8002
8001e0f8:	24843a18 	addiu	a0,a0,14872
8001e0fc:	24050114 	li	a1,276
8001e100:	24c60e48 	addiu	a2,a2,3656
8001e104:	0c006b13 	jal	8001ac4c <__panic>
8001e108:	24e74670 	addiu	a3,a3,18032
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:275
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
	assert(*ptep & PTE_U);
8001e10c:	3c068002 	lui	a2,0x8002
8001e110:	3c078002 	lui	a3,0x8002
8001e114:	24843a18 	addiu	a0,a0,14872
8001e118:	24050113 	li	a1,275
8001e11c:	24c60e48 	addiu	a2,a2,3656
8001e120:	0c006b13 	jal	8001ac4c <__panic>
8001e124:	24e74660 	addiu	a3,a3,18016
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:274
	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
	assert((ptep = get_pte(boot_pgdir, PGSIZE, 0)) != NULL);
8001e128:	24843a18 	addiu	a0,a0,14872
8001e12c:	0800781a 	j	8001e068 <pmm_init+0xb04>
8001e130:	24050112 	li	a1,274
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:273

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);

	p2 = alloc_page();
	assert(page_insert(boot_pgdir, p2, PGSIZE, PTE_U | PTE_W) == 0);
8001e134:	3c068002 	lui	a2,0x8002
8001e138:	3c078002 	lui	a3,0x8002
8001e13c:	24843a18 	addiu	a0,a0,14872
8001e140:	24050111 	li	a1,273
8001e144:	24c60e48 	addiu	a2,a2,3656
8001e148:	0c006b13 	jal	8001ac4c <__panic>
8001e14c:	24e745f8 	addiu	a3,a3,17912
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:270
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
	assert(get_pte(boot_pgdir, PGSIZE, 0) == ptep);
8001e150:	3c068002 	lui	a2,0x8002
8001e154:	3c078002 	lui	a3,0x8002
8001e158:	24843a18 	addiu	a0,a0,14872
8001e15c:	2405010e 	li	a1,270
8001e160:	24c60e48 	addiu	a2,a2,3656
8001e164:	0c006b13 	jal	8001ac4c <__panic>
8001e168:	24e745d0 	addiu	a3,a3,17872
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:269
	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);

	ptep = &((pte_t *) KADDR(PDE_ADDR(boot_pgdir[0])))[1];
8001e16c:	3c068002 	lui	a2,0x8002
8001e170:	24843a18 	addiu	a0,a0,14872
8001e174:	2405010d 	li	a1,269
8001e178:	24c62a94 	addiu	a2,a2,10900
8001e17c:	0c006b13 	jal	8001ac4c <__panic>
8001e180:	02403821 	move	a3,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:267
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
	assert(page_ref(p1) == 1);
8001e184:	3c048002 	lui	a0,0x8002
8001e188:	24843a18 	addiu	a0,a0,14872
8001e18c:	08007802 	j	8001e008 <pmm_init+0xaa4>
8001e190:	2405010b 	li	a1,267
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:266
	p1 = alloc_page();
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
	assert(pa2page(*ptep) == p1);
8001e194:	24843a18 	addiu	a0,a0,14872
8001e198:	08007812 	j	8001e048 <pmm_init+0xae4>
8001e19c:	2405010a 	li	a1,266
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:265
	struct Page *p1, *p2;
	p1 = alloc_page();
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);

	pte_t *ptep;
	assert((ptep = get_pte(boot_pgdir, 0x0, 0)) != NULL);
8001e1a0:	3c048002 	lui	a0,0x8002
8001e1a4:	3c068002 	lui	a2,0x8002
8001e1a8:	3c078002 	lui	a3,0x8002
8001e1ac:	24843a18 	addiu	a0,a0,14872
8001e1b0:	24050109 	li	a1,265
8001e1b4:	24c60e48 	addiu	a2,a2,3656
8001e1b8:	0c006b13 	jal	8001ac4c <__panic>
8001e1bc:	24e74574 	addiu	a3,a3,17780
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:262
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);

	struct Page *p1, *p2;
	p1 = alloc_page();
	assert(page_insert(boot_pgdir, p1, 0x0, 0) == 0);
8001e1c0:	3c048002 	lui	a0,0x8002
8001e1c4:	3c068002 	lui	a2,0x8002
8001e1c8:	3c078002 	lui	a3,0x8002
8001e1cc:	24843a18 	addiu	a0,a0,14872
8001e1d0:	24050106 	li	a1,262
8001e1d4:	24c60e48 	addiu	a2,a2,3656
8001e1d8:	0c006b13 	jal	8001ac4c <__panic>
8001e1dc:	24e74548 	addiu	a3,a3,17736
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:258

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
	assert(get_page(boot_pgdir, 0x0, NULL) == NULL);
8001e1e0:	3c068002 	lui	a2,0x8002
8001e1e4:	3c078002 	lui	a3,0x8002
8001e1e8:	24843a18 	addiu	a0,a0,14872
8001e1ec:	24050102 	li	a1,258
8001e1f0:	24c60e48 	addiu	a2,a2,3656
8001e1f4:	0c006b13 	jal	8001ac4c <__panic>
8001e1f8:	24e74520 	addiu	a3,a3,17696
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:257
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
	assert(boot_pgdir != NULL && (uint32_t) PGOFF(boot_pgdir) == 0);
8001e1fc:	3c048002 	lui	a0,0x8002
8001e200:	3c068002 	lui	a2,0x8002
8001e204:	3c078002 	lui	a3,0x8002
8001e208:	24843a18 	addiu	a0,a0,14872
8001e20c:	24050101 	li	a1,257
8001e210:	24c60e48 	addiu	a2,a2,3656
8001e214:	0c006b13 	jal	8001ac4c <__panic>
8001e218:	24e744e8 	addiu	a3,a3,17640
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:256
	kprintf("check_alloc_page() succeeded!\n\r");
}

static void check_pgdir(void)
{
	assert(npage <= KMEMSIZE / PGSIZE);
8001e21c:	3c048002 	lui	a0,0x8002
8001e220:	3c068002 	lui	a2,0x8002
8001e224:	3c078002 	lui	a3,0x8002
8001e228:	24843a18 	addiu	a0,a0,14872
8001e22c:	24050100 	li	a1,256
8001e230:	24c60e48 	addiu	a2,a2,3656
8001e234:	0c006b13 	jal	8001ac4c <__panic>
8001e238:	24e744cc 	addiu	a3,a3,17612
pmm_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:193
	check_alloc_page();

	// create boot_pgdir, an initial page directory(Page Directory Table, PDT)
	boot_pgdir = boot_alloc_page();
	memset(boot_pgdir, 0, PGSIZE);
	boot_cr3 = PADDR(boot_pgdir);
8001e23c:	3c048002 	lui	a0,0x8002
8001e240:	3c068002 	lui	a2,0x8002
8001e244:	24843a18 	addiu	a0,a0,14872
8001e248:	240500c1 	li	a1,193
8001e24c:	0c006b13 	jal	8001ac4c <__panic>
8001e250:	24c62a50 	addiu	a2,a2,10832
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001e254:	3c048002 	lui	a0,0x8002
8001e258:	3c068002 	lui	a2,0x8002
8001e25c:	24842a0c 	addiu	a0,a0,10764
8001e260:	2405006a 	li	a1,106
8001e264:	24c62a94 	addiu	a2,a2,10900
8001e268:	0c006b13 	jal	8001ac4c <__panic>
8001e26c:	02e03821 	move	a3,s7
boot_alloc_page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:167
//note: this function is used to get the memory for PDT(Page Directory Table)&PT(Page Table)
static void *boot_alloc_page(void)
{
	struct Page *p = alloc_page();
	if (p == NULL) {
		panic("boot_alloc_page failed.\n\r");
8001e270:	3c048002 	lui	a0,0x8002
8001e274:	3c068002 	lui	a2,0x8002
8001e278:	24843a18 	addiu	a0,a0,14872
8001e27c:	240500a7 	li	a1,167
8001e280:	0c006b13 	jal	8001ac4c <__panic>
8001e284:	24c644b0 	addiu	a2,a2,17584
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:98
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
8001e288:	0c007f80 	jal	8001fe00 <pa2page.part.2>
8001e28c:	00000000 	nop
page_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:127
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
	kprintf( "freemem start at:%x\n\r", freemem );

	uint32_t mbegin = ROUNDUP_2N(freemem, PGSHIFT);
	uint32_t mend = ROUNDDOWN_2N(KERNTOP, PGSHIFT);
	assert(mbegin < mend);
8001e290:	3c048002 	lui	a0,0x8002
8001e294:	3c068002 	lui	a2,0x8002
8001e298:	3c078002 	lui	a3,0x8002
8001e29c:	24843a18 	addiu	a0,a0,14872
8001e2a0:	2405007f 	li	a1,127
8001e2a4:	24c60e48 	addiu	a2,a2,3656
8001e2a8:	0c006b13 	jal	8001ac4c <__panic>
8001e2ac:	24e74458 	addiu	a3,a3,17496
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:122
	for (i = 0; i < npage; i++) {
		SetPageReserved(pages + i);
	}

	uintptr_t freemem =
	    PADDR((uintptr_t) pages + sizeof(struct Page) * npage);
8001e2b0:	3c048002 	lui	a0,0x8002
8001e2b4:	3c068002 	lui	a2,0x8002
8001e2b8:	24843a18 	addiu	a0,a0,14872
8001e2bc:	2405007a 	li	a1,122
8001e2c0:	24c62a50 	addiu	a2,a2,10832
8001e2c4:	0c006b13 	jal	8001ac4c <__panic>
8001e2c8:	02403821 	move	a3,s2
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:350
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");
	*(char *)(page2kva(p) + 0x100) = '\0';
	assert(strlen((const char *)0x100) == 0);
8001e2cc:	3c048002 	lui	a0,0x8002
8001e2d0:	3c068002 	lui	a2,0x8002
8001e2d4:	3c078002 	lui	a3,0x8002
8001e2d8:	24843a18 	addiu	a0,a0,14872
8001e2dc:	2405015e 	li	a1,350
8001e2e0:	24c60e48 	addiu	a2,a2,3656
8001e2e4:	0c006b13 	jal	8001ac4c <__panic>
8001e2e8:	24e748dc 	addiu	a3,a3,18652
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:343
	assert(*(int *)0x100 == 0x1234);
	const char *str = "ucore: Hello world!!";
	strcpy((void *)0x100, str);
	kprintf("\n\r*(int*)(0x100):0x%08x",*(int*)(0x100));
	kprintf("\n\r");
	assert(strcmp((void *)0x100, (void *)(0x100 + PGSIZE)) == 0);
8001e2ec:	3c048002 	lui	a0,0x8002
8001e2f0:	3c068002 	lui	a2,0x8002
8001e2f4:	3c078002 	lui	a3,0x8002
8001e2f8:	24843a18 	addiu	a0,a0,14872
8001e2fc:	24050157 	li	a1,343
8001e300:	24c60e48 	addiu	a2,a2,3656
8001e304:	0c006b13 	jal	8001ac4c <__panic>
8001e308:	24e748a4 	addiu	a3,a3,18596
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:338
	kprintf("\n\r");
	
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	assert(*(int *)0x100 == 0x1234);
8001e30c:	3c048002 	lui	a0,0x8002
8001e310:	3c068002 	lui	a2,0x8002
8001e314:	3c078002 	lui	a3,0x8002
8001e318:	24843a18 	addiu	a0,a0,14872
8001e31c:	24050152 	li	a1,338
8001e320:	24c60e48 	addiu	a2,a2,3656
8001e324:	0c006b13 	jal	8001ac4c <__panic>
8001e328:	24e74874 	addiu	a3,a3,18548
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:325
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");
	kprintf("*(int*)(0x100):0x%08x",*(int*)(0x100));
	assert(page_insert(boot_pgdir, p, 0x100 + PGSIZE, PTE_W) == 0);
	assert(page_ref(p) == 2);
8001e32c:	3c068002 	lui	a2,0x8002
8001e330:	3c078002 	lui	a3,0x8002
8001e334:	24843a18 	addiu	a0,a0,14872
8001e338:	24050145 	li	a1,325
8001e33c:	24c60e48 	addiu	a2,a2,3656
8001e340:	0c006b13 	jal	8001ac4c <__panic>
8001e344:	24e7483c 	addiu	a3,a3,18492
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:324
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));
	kprintf("\n\r");
	kprintf("*(int*)(0x100):0x%08x",*(int*)(0x100));
	assert(page_insert(boot_pgdir, p, 0x100 + PGSIZE, PTE_W) == 0);
8001e348:	3c068002 	lui	a2,0x8002
8001e34c:	3c078002 	lui	a3,0x8002
8001e350:	24843a18 	addiu	a0,a0,14872
8001e354:	24050144 	li	a1,324
8001e358:	24c60e48 	addiu	a2,a2,3656
8001e35c:	0c006b13 	jal	8001ac4c <__panic>
8001e360:	24e74804 	addiu	a3,a3,18436
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
	return &pages[PPN(pa)];
}

static inline void *page2kva(struct Page *page)
{
	return KADDR(page2pa(page));
8001e364:	3c048002 	lui	a0,0x8002
8001e368:	3c068002 	lui	a2,0x8002
8001e36c:	24842a0c 	addiu	a0,a0,10764
8001e370:	2405006a 	li	a1,106
8001e374:	24c62a94 	addiu	a2,a2,10900
8001e378:	0c006b13 	jal	8001ac4c <__panic>
8001e37c:	02003821 	move	a3,s0
check_boot_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:318
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
	assert(page_ref(p) == 1);
8001e380:	3c068002 	lui	a2,0x8002
8001e384:	3c078002 	lui	a3,0x8002
8001e388:	24843a18 	addiu	a0,a0,14872
8001e38c:	2405013e 	li	a1,318
8001e390:	24c60e48 	addiu	a2,a2,3656
8001e394:	0c006b13 	jal	8001ac4c <__panic>
8001e398:	24e747d8 	addiu	a3,a3,18392
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:317
	*(int *)(page2kva(p) + 0x100) = 0x1234;
	kprintf("page2kva(p):0x%08x",page2kva(p));
	kprintf("\n\r");
	kprintf("*(int*)(page2kva(p)+0x100):0x%08x",*(int*)(page2kva(p)+0x100));

	assert(page_insert(boot_pgdir, p, 0x100, PTE_W) == 0);
8001e39c:	3c068002 	lui	a2,0x8002
8001e3a0:	3c078002 	lui	a3,0x8002
8001e3a4:	24843a18 	addiu	a0,a0,14872
8001e3a8:	2405013d 	li	a1,317
8001e3ac:	24c60e48 	addiu	a2,a2,3656
8001e3b0:	0c006b13 	jal	8001ac4c <__panic>
8001e3b4:	24e747a8 	addiu	a3,a3,18344
page2kva():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:106
8001e3b8:	3c048002 	lui	a0,0x8002
8001e3bc:	3c068002 	lui	a2,0x8002
8001e3c0:	24842a0c 	addiu	a0,a0,10764
8001e3c4:	2405006a 	li	a1,106
8001e3c8:	0c006b13 	jal	8001ac4c <__panic>
8001e3cc:	24c62a94 	addiu	a2,a2,10900

8001e3d0 <load_rsp0>:
load_rsp0():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:469
//added by HHL

void load_rsp0(uintptr_t esp0)
{

}
8001e3d0:	03e00008 	jr	ra
8001e3d4:	00000000 	nop

8001e3d8 <map_pgdir>:
map_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:474

void map_pgdir(pde_t * pgdir)
{
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001e3d8:	3c028000 	lui	v0,0x8000
8001e3dc:	24421000 	addiu	v0,v0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:472
{

}

void map_pgdir(pde_t * pgdir)
{
8001e3e0:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:474
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001e3e4:	0082102b 	sltu	v0,a0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:472
{

}

void map_pgdir(pde_t * pgdir)
{
8001e3e8:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:474
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001e3ec:	14400006 	bnez	v0,8001e408 <map_pgdir+0x30>
8001e3f0:	00803821 	move	a3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:475
}
8001e3f4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:474
}

void map_pgdir(pde_t * pgdir)
{
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001e3f8:	34820003 	ori	v0,a0,0x3
8001e3fc:	ac820fac 	sw	v0,4012(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:475
}
8001e400:	03e00008 	jr	ra
8001e404:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:474
}

void map_pgdir(pde_t * pgdir)
{
#define VPT                 0xFAC00000
	pgdir[PDX(VPT)] = PADDR(pgdir) | PTE_P | PTE_W;
8001e408:	3c048002 	lui	a0,0x8002
8001e40c:	3c068002 	lui	a2,0x8002
8001e410:	24843a18 	addiu	a0,a0,14872
8001e414:	240501da 	li	a1,474
8001e418:	0c006b13 	jal	8001ac4c <__panic>
8001e41c:	24c62a50 	addiu	a2,a2,10832

8001e420 <set_pgdir>:
set_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:481

/**
 * set_pgdir - save the physical address of the current pgdir
 */
void set_pgdir(struct proc_struct *proc, pde_t * pgdir)
{
8001e420:	27bdffe8 	addiu	sp,sp,-24
8001e424:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:482
	assert(proc != NULL);
8001e428:	10800009 	beqz	a0,8001e450 <set_pgdir+0x30>
8001e42c:	00a03821 	move	a3,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:483
	proc->cr3 = PADDR(pgdir);
8001e430:	3c028000 	lui	v0,0x8000
8001e434:	24421000 	addiu	v0,v0,4096
8001e438:	00a2102b 	sltu	v0,a1,v0
8001e43c:	1440000c 	bnez	v0,8001e470 <set_pgdir+0x50>
8001e440:	8fbf0014 	lw	ra,20(sp)
8001e444:	ac850058 	sw	a1,88(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:484
}
8001e448:	03e00008 	jr	ra
8001e44c:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:482
/**
 * set_pgdir - save the physical address of the current pgdir
 */
void set_pgdir(struct proc_struct *proc, pde_t * pgdir)
{
	assert(proc != NULL);
8001e450:	3c048002 	lui	a0,0x8002
8001e454:	3c068002 	lui	a2,0x8002
8001e458:	3c078002 	lui	a3,0x8002
8001e45c:	24843a18 	addiu	a0,a0,14872
8001e460:	240501e2 	li	a1,482
8001e464:	24c60e48 	addiu	a2,a2,3656
8001e468:	0c006b13 	jal	8001ac4c <__panic>
8001e46c:	24e73d04 	addiu	a3,a3,15620
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:483
	proc->cr3 = PADDR(pgdir);
8001e470:	3c048002 	lui	a0,0x8002
8001e474:	3c068002 	lui	a2,0x8002
8001e478:	24843a18 	addiu	a0,a0,14872
8001e47c:	240501e3 	li	a1,483
8001e480:	0c006b13 	jal	8001ac4c <__panic>
8001e484:	24c62a50 	addiu	a2,a2,10832

8001e488 <nr_used_pages>:
nr_used_pages():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.c:489
}

size_t nr_used_pages(void)
{
	return 0;
}
8001e488:	03e00008 	jr	ra
8001e48c:	00001021 	move	v0,zero

8001e490 <tlb_invalidate_all>:
tlb_invalidate_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:42
{				//kprintf("\n\n\n\ntlb_invalidate_all()\n\n\n\n");
	unsigned int i;
	unsigned int te;
	//kprintf("\n\rbegin tlb_invalidate_all()\n\r");
	//dump_tlb_all();
	for (i = 0; i < 16; i++)// 
8001e490:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:44
	{
		te=0x80000000 + (i << 20);
8001e494:	3c058000 	lui	a1,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:42
{				//kprintf("\n\n\n\ntlb_invalidate_all()\n\n\n\n");
	unsigned int i;
	unsigned int te;
	//kprintf("\n\rbegin tlb_invalidate_all()\n\r");
	//dump_tlb_all();
	for (i = 0; i < 16; i++)// 
8001e498:	24040010 	li	a0,16
write_one_tlb():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:90
}
static inline void write_one_tlb(int index, unsigned int pagemask,
				 unsigned int hi, unsigned int low0,
				 unsigned int low1)
{
	write_c0_entrylo0(low0);
8001e49c:	40801000 	mtc0	zero,c0_entrylo0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:91
	write_c0_pagemask(pagemask);
8001e4a0:	40802800 	mtc0	zero,c0_pagemask
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:92
	write_c0_entrylo1(low1);
8001e4a4:	40801800 	mtc0	zero,c0_entrylo1
tlb_invalidate_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:44
	{
		te=0x80000000 + (i << 20);
8001e4a8:	00021d00 	sll	v1,v0,0x14
8001e4ac:	00651821 	addu	v1,v1,a1
write_one_tlb():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:94
	
	write_c0_entryhi(hi);
8001e4b0:	40835000 	mtc0	v1,c0_entryhi
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:95
	write_c0_index(index);
8001e4b4:	40820000 	mtc0	v0,c0_index
tlb_write_indexed():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/asm/mipsregs.h:1302
#endif
}

static inline void tlb_write_indexed(void)
{
	__asm__ __volatile__(
8001e4b8:	42000002 	tlbwi
tlb_invalidate_all():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:42
{				//kprintf("\n\n\n\ntlb_invalidate_all()\n\n\n\n");
	unsigned int i;
	unsigned int te;
	//kprintf("\n\rbegin tlb_invalidate_all()\n\r");
	//dump_tlb_all();
	for (i = 0; i < 16; i++)// 
8001e4bc:	24420001 	addiu	v0,v0,1
8001e4c0:	1444fff6 	bne	v0,a0,8001e49c <tlb_invalidate_all+0xc>
8001e4c4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:52
	}
	//dump_tlb_all();
	//kprintf("\n\rend");

	return ;
}
8001e4c8:	03e00008 	jr	ra
8001e4cc:	00000000 	nop

8001e4d0 <tlb_invalidate>:
tlb_invalidate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/thumips_tlb.c:32

// invalidate both TLB 
// (clean and flush, meaning we write the data back)
void tlb_invalidate(pde_t * pgdir, uintptr_t la)
{
	tlb_invalidate_all();
8001e4d0:	08007924 	j	8001e490 <tlb_invalidate_all>
8001e4d4:	00000000 	nop

8001e4d8 <copy_from_user>:
copy_from_user():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:56
}

bool
copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len,
	       bool writable)
{
8001e4d8:	27bdffe0 	addiu	sp,sp,-32
8001e4dc:	afb00010 	sw	s0,16(sp)
8001e4e0:	00e08021 	move	s0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:57
	if (!user_mem_check(mm, (uintptr_t) src, len, writable)) {
8001e4e4:	8fa70030 	lw	a3,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:56
}

bool
copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len,
	       bool writable)
{
8001e4e8:	afb10014 	sw	s1,20(sp)
8001e4ec:	00c08821 	move	s1,a2
8001e4f0:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:57
	if (!user_mem_check(mm, (uintptr_t) src, len, writable)) {
8001e4f4:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:56
}

bool
copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len,
	       bool writable)
{
8001e4f8:	00a09021 	move	s2,a1
8001e4fc:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:57
	if (!user_mem_check(mm, (uintptr_t) src, len, writable)) {
8001e500:	0c00507f 	jal	800141fc <user_mem_check>
8001e504:	02202821 	move	a1,s1
8001e508:	10400006 	beqz	v0,8001e524 <copy_from_user+0x4c>
8001e50c:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:60
		return 0;
	}
	memcpy(dst, src, len);
8001e510:	02402021 	move	a0,s2
8001e514:	02202821 	move	a1,s1
8001e518:	0c005c84 	jal	80017210 <memcpy>
8001e51c:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:61
	return 1;
8001e520:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:62
}
8001e524:	8fbf001c 	lw	ra,28(sp)
8001e528:	00601021 	move	v0,v1
8001e52c:	8fb20018 	lw	s2,24(sp)
8001e530:	8fb10014 	lw	s1,20(sp)
8001e534:	8fb00010 	lw	s0,16(sp)
8001e538:	03e00008 	jr	ra
8001e53c:	27bd0020 	addiu	sp,sp,32

8001e540 <copy_to_user>:
copy_to_user():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:65

bool copy_to_user(struct mm_struct * mm, void *dst, const void *src, size_t len)
{
8001e540:	27bdffe0 	addiu	sp,sp,-32
8001e544:	afb00010 	sw	s0,16(sp)
8001e548:	00e08021 	move	s0,a3
8001e54c:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:66
	if (!user_mem_check(mm, (uintptr_t) dst, len, 1)) {
8001e550:	24070001 	li	a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:65
	memcpy(dst, src, len);
	return 1;
}

bool copy_to_user(struct mm_struct * mm, void *dst, const void *src, size_t len)
{
8001e554:	00c08821 	move	s1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:66
	if (!user_mem_check(mm, (uintptr_t) dst, len, 1)) {
8001e558:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:65
	memcpy(dst, src, len);
	return 1;
}

bool copy_to_user(struct mm_struct * mm, void *dst, const void *src, size_t len)
{
8001e55c:	afb20018 	sw	s2,24(sp)
8001e560:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:66
	if (!user_mem_check(mm, (uintptr_t) dst, len, 1)) {
8001e564:	0c00507f 	jal	800141fc <user_mem_check>
8001e568:	00a09021 	move	s2,a1
8001e56c:	10400006 	beqz	v0,8001e588 <copy_to_user+0x48>
8001e570:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:69
		return 0;
	}
	memcpy(dst, src, len);
8001e574:	02402021 	move	a0,s2
8001e578:	02202821 	move	a1,s1
8001e57c:	0c005c84 	jal	80017210 <memcpy>
8001e580:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:70
	return 1;
8001e584:	24030001 	li	v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:71
}
8001e588:	8fbf001c 	lw	ra,28(sp)
8001e58c:	00601021 	move	v0,v1
8001e590:	8fb20018 	lw	s2,24(sp)
8001e594:	8fb10014 	lw	s1,20(sp)
8001e598:	8fb00010 	lw	s0,16(sp)
8001e59c:	03e00008 	jr	ra
8001e5a0:	27bd0020 	addiu	sp,sp,32

8001e5a4 <copy_string>:
copy_string():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:183
/* SZY comments: Why does this statement no show up? why I cannot see any statements related with the pgfault handler?*/
	kprintf("check_pgfault() succeeded!\n");
}

bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn)
{
8001e5a4:	27bdffd8 	addiu	sp,sp,-40
8001e5a8:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:185
	size_t alen, part =
	    ROUNDDOWN_2N((uintptr_t) src + PGSIZE, PGSHIFT) - (uintptr_t) src;
8001e5ac:	2402f000 	li	v0,-4096
8001e5b0:	24d01000 	addiu	s0,a2,4096
8001e5b4:	02028024 	and	s0,s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:183
/* SZY comments: Why does this statement no show up? why I cannot see any statements related with the pgfault handler?*/
	kprintf("check_pgfault() succeeded!\n");
}

bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn)
{
8001e5b8:	afb40020 	sw	s4,32(sp)
8001e5bc:	afb3001c 	sw	s3,28(sp)
8001e5c0:	afb20018 	sw	s2,24(sp)
8001e5c4:	afb10014 	sw	s1,20(sp)
8001e5c8:	afbf0024 	sw	ra,36(sp)
8001e5cc:	00c08821 	move	s1,a2
8001e5d0:	0080a021 	move	s4,a0
8001e5d4:	00a09821 	move	s3,a1
8001e5d8:	00e09021 	move	s2,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:184
	size_t alen, part =
8001e5dc:	08007986 	j	8001e618 <copy_string+0x74>
8001e5e0:	02068023 	subu	s0,s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:193
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
8001e5e4:	0c005b8b 	jal	80016e2c <strnlen>
8001e5e8:	00000000 	nop
8001e5ec:	0050182b 	sltu	v1,v0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:200
			return 1;
		}
		if (part == maxn) {
			return 0;
		}
		memcpy(dst, src, part);
8001e5f0:	02602021 	move	a0,s3
8001e5f4:	02202821 	move	a1,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:193
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
8001e5f8:	1460001a 	bnez	v1,8001e664 <copy_string+0xc0>
8001e5fc:	02003021 	move	a2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:197
			memcpy(dst, src, alen + 1);
			return 1;
		}
		if (part == maxn) {
8001e600:	1250000f 	beq	s2,s0,8001e640 <copy_string+0x9c>
8001e604:	02709821 	addu	s3,s3,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:201
			return 0;
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
8001e608:	02308821 	addu	s1,s1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:200
			return 1;
		}
		if (part == maxn) {
			return 0;
		}
		memcpy(dst, src, part);
8001e60c:	0c005c84 	jal	80017210 <memcpy>
8001e610:	02509023 	subu	s2,s2,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:202
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
8001e614:	24101000 	li	s0,4096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:184
	kprintf("check_pgfault() succeeded!\n");
}

bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn)
{
	size_t alen, part =
8001e618:	0250102b 	sltu	v0,s2,s0
8001e61c:	0242800b 	movn	s0,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:190
	    ROUNDDOWN_2N((uintptr_t) src + PGSIZE, PGSHIFT) - (uintptr_t) src;
	while (1) {
		if (part > maxn) {
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
8001e620:	02802021 	move	a0,s4
8001e624:	02202821 	move	a1,s1
8001e628:	02003021 	move	a2,s0
8001e62c:	0c00507f 	jal	800141fc <user_mem_check>
8001e630:	00003821 	move	a3,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:193
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
8001e634:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:190
	    ROUNDDOWN_2N((uintptr_t) src + PGSIZE, PGSHIFT) - (uintptr_t) src;
	while (1) {
		if (part > maxn) {
			part = maxn;
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
8001e638:	1440ffea 	bnez	v0,8001e5e4 <copy_string+0x40>
8001e63c:	02002821 	move	a1,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e640:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:198
		if ((alen = strnlen(src, part)) < part) {
			memcpy(dst, src, alen + 1);
			return 1;
		}
		if (part == maxn) {
			return 0;
8001e644:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e648:	8fb40020 	lw	s4,32(sp)
8001e64c:	8fb3001c 	lw	s3,28(sp)
8001e650:	8fb20018 	lw	s2,24(sp)
8001e654:	8fb10014 	lw	s1,20(sp)
8001e658:	8fb00010 	lw	s0,16(sp)
8001e65c:	03e00008 	jr	ra
8001e660:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:194
		}
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
			memcpy(dst, src, alen + 1);
8001e664:	0c005c84 	jal	80017210 <memcpy>
8001e668:	24460001 	addiu	a2,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e66c:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:195
		if (!user_mem_check(mm, (uintptr_t) src, part, 0)) {
			return 0;
		}
		if ((alen = strnlen(src, part)) < part) {
			memcpy(dst, src, alen + 1);
			return 1;
8001e670:	24020001 	li	v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/vmm.c:204
		}
		memcpy(dst, src, part);
		dst += part, src += part, maxn -= part;
		part = PGSIZE;
	}
}
8001e674:	8fb40020 	lw	s4,32(sp)
8001e678:	8fb3001c 	lw	s3,28(sp)
8001e67c:	8fb20018 	lw	s2,24(sp)
8001e680:	8fb10014 	lw	s1,20(sp)
8001e684:	8fb00010 	lw	s0,16(sp)
8001e688:	03e00008 	jr	ra
8001e68c:	27bd0028 	addiu	sp,sp,40

8001e690 <forkret>:
forkret():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:185
{				//kprintf(" [forkrets pid=%d epc=%x] ", current->pid, current->tf->tf_epc);
/*    kprintf("{");
    int i;
    for (i = 0; i < 10; ++i) kprintf("%x:%x ", (current->tf->tf_epc + i * 4), *(uint32_t*)(current->tf->tf_epc + i * 4));
    kprintf("} ");*/
	forkrets(current->tf);
8001e690:	3c028015 	lui	v0,0x8015
8001e694:	8c4277a4 	lw	v0,30628(v0)
8001e698:	08007f28 	j	8001fca0 <forkrets>
8001e69c:	8c440054 	lw	a0,84(v0)

8001e6a0 <alloc_proc>:
alloc_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:85
void forkrets(struct trapframe *tf);
void switch_to(struct context *from, struct context *to);

// alloc_proc - alloc a proc_struct and init all fields of proc_struct
struct proc_struct *alloc_proc(void)
{
8001e6a0:	27bdffe8 	addiu	sp,sp,-24
8001e6a4:	afb00010 	sw	s0,16(sp)
8001e6a8:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:86
	struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
8001e6ac:	0c00548e 	jal	80015238 <kmalloc>
8001e6b0:	240400f8 	li	a0,248
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:87
	if (proc != NULL) {
8001e6b4:	10400028 	beqz	v0,8001e758 <alloc_proc+0xb8>
8001e6b8:	00408021 	move	s0,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:98
		proc->parent = NULL;
		proc->mm = NULL;
		proc->tf = NULL;
		proc->flags = 0;
		proc->need_resched = 0;
		proc->cr3 = boot_cr3;
8001e6bc:	3c028015 	lui	v0,0x8015
8001e6c0:	8c42779c 	lw	v0,30620(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:89
struct proc_struct *alloc_proc(void)
{
	struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
	if (proc != NULL) {
		proc->state = PROC_UNINIT;
		proc->pid = -1;
8001e6c4:	2403ffff 	li	v1,-1
8001e6c8:	ae030004 	sw	v1,4(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:92
		proc->runs = 0;
		proc->kstack = 0;
		proc->need_resched = 0;
8001e6cc:	ae000018 	sw	zero,24(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:99
		proc->mm = NULL;
		proc->tf = NULL;
		proc->flags = 0;
		proc->need_resched = 0;
		proc->cr3 = boot_cr3;
		memset(&(proc->context), 0, sizeof(struct context));
8001e6d0:	26040024 	addiu	a0,s0,36
8001e6d4:	00002821 	move	a1,zero
8001e6d8:	24060030 	li	a2,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:88
// alloc_proc - alloc a proc_struct and init all fields of proc_struct
struct proc_struct *alloc_proc(void)
{
	struct proc_struct *proc = kmalloc(sizeof(struct proc_struct));
	if (proc != NULL) {
		proc->state = PROC_UNINIT;
8001e6dc:	ae000000 	sw	zero,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:90
		proc->pid = -1;
		proc->runs = 0;
8001e6e0:	ae000010 	sw	zero,16(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:91
		proc->kstack = 0;
8001e6e4:	ae000014 	sw	zero,20(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:93
		proc->need_resched = 0;
		proc->parent = NULL;
8001e6e8:	ae00001c 	sw	zero,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:94
		proc->mm = NULL;
8001e6ec:	ae000020 	sw	zero,32(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:95
		proc->tf = NULL;
8001e6f0:	ae000054 	sw	zero,84(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:96
		proc->flags = 0;
8001e6f4:	ae00005c 	sw	zero,92(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:97
		proc->need_resched = 0;
8001e6f8:	ae000018 	sw	zero,24(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:99
		proc->cr3 = boot_cr3;
		memset(&(proc->context), 0, sizeof(struct context));
8001e6fc:	0c005c5a 	jal	80017168 <memset>
8001e700:	ae020058 	sw	v0,88(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:100
		memset(proc->name, 0, PROC_NAME_LEN);
8001e704:	00002821 	move	a1,zero
8001e708:	2406000f 	li	a2,15
8001e70c:	0c005c5a 	jal	80017168 <memset>
8001e710:	26040060 	addiu	a0,s0,96
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:103
		proc->exit_code = 0;
		proc->wait_state = 0;
		list_init(&(proc->run_link));
8001e714:	260300a0 	addiu	v1,s0,160
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:104
		list_init(&(proc->list_link));
8001e718:	26020070 	addiu	v0,s0,112
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:107
		proc->time_slice = 0;
		proc->cptr = proc->yptr = proc->optr = NULL;
		event_box_init(&(proc->event_box));
8001e71c:	260400b0 	addiu	a0,s0,176
list_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/glue-ucore/libs/list.h:54
 * list_init - initialize a new entry
 * @elm:        new entry to be initialized
 * */
static inline void list_init(list_entry_t * elm)
{
	elm->prev = elm->next = elm;
8001e720:	ae0300a4 	sw	v1,164(s0)
8001e724:	ae0300a0 	sw	v1,160(s0)
8001e728:	ae020074 	sw	v0,116(s0)
8001e72c:	ae020070 	sw	v0,112(s0)
alloc_proc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:101
		proc->flags = 0;
		proc->need_resched = 0;
		proc->cr3 = boot_cr3;
		memset(&(proc->context), 0, sizeof(struct context));
		memset(proc->name, 0, PROC_NAME_LEN);
		proc->exit_code = 0;
8001e730:	ae000080 	sw	zero,128(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:102
		proc->wait_state = 0;
8001e734:	ae000084 	sw	zero,132(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:105
		list_init(&(proc->run_link));
		list_init(&(proc->list_link));
		proc->time_slice = 0;
8001e738:	ae0000a8 	sw	zero,168(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:106
		proc->cptr = proc->yptr = proc->optr = NULL;
8001e73c:	ae000090 	sw	zero,144(s0)
8001e740:	ae00008c 	sw	zero,140(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:107
		event_box_init(&(proc->event_box));
8001e744:	0c005ffb 	jal	80017fec <event_box_init>
8001e748:	ae000088 	sw	zero,136(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:109
		proc->fs_struct = NULL;
		proc->sem_queue = sem_queue_create();
8001e74c:	0c006750 	jal	80019d40 <sem_queue_create>
8001e750:	ae0000bc 	sw	zero,188(s0)
8001e754:	ae0200ac 	sw	v0,172(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:112
	}
	return proc;
}
8001e758:	8fbf0014 	lw	ra,20(sp)
8001e75c:	02001021 	move	v0,s0
8001e760:	8fb00010 	lw	s0,16(sp)
8001e764:	03e00008 	jr	ra
8001e768:	27bd0018 	addiu	sp,sp,24

8001e76c <kernel_thread>:
kernel_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:204

// kernel_thread - create a kernel thread using "fn" function
// NOTE: the contents of temp trapframe tf will be copied to 
//       proc->tf in do_fork-->copy_thread function
int kernel_thread(int (*fn) (void *), void *arg, uint32_t clone_flags)
{
8001e76c:	27bdff48 	addiu	sp,sp,-184
8001e770:	afb200b0 	sw	s2,176(sp)
8001e774:	afb100ac 	sw	s1,172(sp)
8001e778:	afb000a8 	sw	s0,168(sp)
8001e77c:	00808821 	move	s1,a0
8001e780:	00a09021 	move	s2,a1
8001e784:	00c08021 	move	s0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:206
	struct trapframe tf;
	memset(&tf, 0, sizeof(struct trapframe));
8001e788:	27a40010 	addiu	a0,sp,16
8001e78c:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:204

// kernel_thread - create a kernel thread using "fn" function
// NOTE: the contents of temp trapframe tf will be copied to 
//       proc->tf in do_fork-->copy_thread function
int kernel_thread(int (*fn) (void *), void *arg, uint32_t clone_flags)
{
8001e790:	afbf00b4 	sw	ra,180(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:206
	struct trapframe tf;
	memset(&tf, 0, sizeof(struct trapframe));
8001e794:	0c005c5a 	jal	80017168 <memset>
8001e798:	24060094 	li	a2,148
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:207
	tf.tf_regs.reg_r[MIPS_REG_A0] = (uint32_t) arg;
8001e79c:	afb20034 	sw	s2,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:208
	tf.tf_regs.reg_r[MIPS_REG_A1] = (uint32_t) fn;
8001e7a0:	afb10038 	sw	s1,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:209
	tf.tf_regs.reg_r[MIPS_REG_V0] = 0;
8001e7a4:	afa0002c 	sw	zero,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:211
	//TODO
	tf.tf_status = read_c0_status();
8001e7a8:	40036000 	mfc0	v1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:212
	tf.tf_status &= ~ST0_KSU;
8001e7ac:	2402ffe7 	li	v0,-25
8001e7b0:	00621024 	and	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:214
	tf.tf_status |= ST0_IE;
	tf.tf_status |= ST0_EXL;
8001e7b4:	34420003 	ori	v0,v0,0x3
8001e7b8:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:215
	tf.tf_regs.reg_r[MIPS_REG_GP] = __read_reg($28);
8001e7bc:	03801021 	move	v0,gp
8001e7c0:	afa20094 	sw	v0,148(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:216
	tf.tf_epc = (uint32_t) kernel_thread_entry;
8001e7c4:	3c028002 	lui	v0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:217
	return do_fork(clone_flags | CLONE_VM, 0, &tf);
8001e7c8:	36040100 	ori	a0,s0,0x100
8001e7cc:	27a60010 	addiu	a2,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:216
	tf.tf_status = read_c0_status();
	tf.tf_status &= ~ST0_KSU;
	tf.tf_status |= ST0_IE;
	tf.tf_status |= ST0_EXL;
	tf.tf_regs.reg_r[MIPS_REG_GP] = __read_reg($28);
	tf.tf_epc = (uint32_t) kernel_thread_entry;
8001e7d0:	2442fcac 	addiu	v0,v0,-852
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:217
	return do_fork(clone_flags | CLONE_VM, 0, &tf);
8001e7d4:	00002821 	move	a1,zero
8001e7d8:	0c003b75 	jal	8000edd4 <do_fork>
8001e7dc:	afa200a0 	sw	v0,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:218
}
8001e7e0:	8fbf00b4 	lw	ra,180(sp)
8001e7e4:	8fb200b0 	lw	s2,176(sp)
8001e7e8:	8fb100ac 	lw	s1,172(sp)
8001e7ec:	8fb000a8 	lw	s0,168(sp)
8001e7f0:	03e00008 	jr	ra
8001e7f4:	27bd00b8 	addiu	sp,sp,184

8001e7f8 <copy_thread>:
copy_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:311
//             - setup the kernel entry point and stack of process
int
copy_thread(uint32_t clone_flags, struct proc_struct *proc, uintptr_t esp,
	    struct trapframe *tf)
{
	proc->tf = (struct trapframe *)(proc->kstack + KSTACKSIZE) - 1;
8001e7f8:	8ca20014 	lw	v0,20(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:312
	*(proc->tf) = *tf;
8001e7fc:	24e40090 	addiu	a0,a3,144
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:311
//             - setup the kernel entry point and stack of process
int
copy_thread(uint32_t clone_flags, struct proc_struct *proc, uintptr_t esp,
	    struct trapframe *tf)
{
	proc->tf = (struct trapframe *)(proc->kstack + KSTACKSIZE) - 1;
8001e800:	24421f6c 	addiu	v0,v0,8044
8001e804:	aca20054 	sw	v0,84(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:312
	*(proc->tf) = *tf;
8001e808:	00401821 	move	v1,v0
8001e80c:	8ceb0000 	lw	t3,0(a3)
8001e810:	8cea0004 	lw	t2,4(a3)
8001e814:	8ce90008 	lw	t1,8(a3)
8001e818:	8ce8000c 	lw	t0,12(a3)
8001e81c:	24e70010 	addiu	a3,a3,16
8001e820:	ac6b0000 	sw	t3,0(v1)
8001e824:	ac6a0004 	sw	t2,4(v1)
8001e828:	ac690008 	sw	t1,8(v1)
8001e82c:	ac68000c 	sw	t0,12(v1)
8001e830:	14e4fff6 	bne	a3,a0,8001e80c <copy_thread+0x14>
8001e834:	24630010 	addiu	v1,v1,16
8001e838:	8ce40000 	lw	a0,0(a3)
8001e83c:	ac640000 	sw	a0,0(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:313
	proc->tf->tf_regs.reg_r[MIPS_REG_V0] = 0;
8001e840:	ac40001c 	sw	zero,28(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:314
	if (esp == 0)		//a kernel thread
8001e844:	14c00003 	bnez	a2,8001e854 <copy_thread+0x5c>
8001e848:	2443ffe0 	addiu	v1,v0,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:315
		esp = (uintptr_t) proc->tf - 32;
8001e84c:	2446ffe0 	addiu	a2,v0,-32
8001e850:	00c01821 	move	v1,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:317
	proc->tf->tf_regs.reg_r[MIPS_REG_SP] = esp;
	proc->context.sf_ra = (uintptr_t) forkret;
8001e854:	3c048002 	lui	a0,0x8002
8001e858:	2484e690 	addiu	a0,a0,-6512
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:316
	proc->tf = (struct trapframe *)(proc->kstack + KSTACKSIZE) - 1;
	*(proc->tf) = *tf;
	proc->tf->tf_regs.reg_r[MIPS_REG_V0] = 0;
	if (esp == 0)		//a kernel thread
		esp = (uintptr_t) proc->tf - 32;
	proc->tf->tf_regs.reg_r[MIPS_REG_SP] = esp;
8001e85c:	ac460088 	sw	a2,136(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:320
	proc->context.sf_ra = (uintptr_t) forkret;
	proc->context.sf_sp = (uintptr_t) (proc->tf) - 32;
	return 0;
}
8001e860:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:317
	*(proc->tf) = *tf;
	proc->tf->tf_regs.reg_r[MIPS_REG_V0] = 0;
	if (esp == 0)		//a kernel thread
		esp = (uintptr_t) proc->tf - 32;
	proc->tf->tf_regs.reg_r[MIPS_REG_SP] = esp;
	proc->context.sf_ra = (uintptr_t) forkret;
8001e864:	aca4004c 	sw	a0,76(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:320
	proc->context.sf_sp = (uintptr_t) (proc->tf) - 32;
	return 0;
}
8001e868:	03e00008 	jr	ra
8001e86c:	aca30050 	sw	v1,80(a1)

8001e870 <kernel_execve>:
kernel_execve():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:404
// kernel_execve - do SYS_exec syscall to exec a user program scalled by user_main kernel_thread
int kernel_execve(const char *name, const char **argv, const char **kenvp)
{
	int argc = 0, ret;

	while (argv[argc] != NULL) {
8001e870:	8ca20000 	lw	v0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:401
	return ret;
}

// kernel_execve - do SYS_exec syscall to exec a user program scalled by user_main kernel_thread
int kernel_execve(const char *name, const char **argv, const char **kenvp)
{
8001e874:	00a04021 	move	t0,a1
8001e878:	00804821 	move	t1,a0
8001e87c:	00c05021 	move	t2,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:404
	int argc = 0, ret;

	while (argv[argc] != NULL) {
8001e880:	10400006 	beqz	v0,8001e89c <kernel_execve+0x2c>
8001e884:	00001821 	move	v1,zero
8001e888:	00a01021 	move	v0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:405
		argc++;
8001e88c:	24420004 	addiu	v0,v0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:404
// kernel_execve - do SYS_exec syscall to exec a user program scalled by user_main kernel_thread
int kernel_execve(const char *name, const char **argv, const char **kenvp)
{
	int argc = 0, ret;

	while (argv[argc] != NULL) {
8001e890:	8c440000 	lw	a0,0(v0)
8001e894:	1480fffd 	bnez	a0,8001e88c <kernel_execve+0x1c>
8001e898:	24630001 	addiu	v1,v1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:408
		argc++;
	}
	//panic("unimpl");
	asm volatile ("la $v0, %1;\n"	/* syscall no. */
8001e89c:	24020004 	li	v0,4
8001e8a0:	01202021 	move	a0,t1
8001e8a4:	01002821 	move	a1,t0
8001e8a8:	01403021 	move	a2,t2
8001e8ac:	00603821 	move	a3,v1
8001e8b0:	0000000c 	syscall
8001e8b4:	00000000 	nop
8001e8b8:	00401821 	move	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:418
		      "syscall;\n" "nop;\n" "move %0, $v0;\n":"=r" (ret)
		      :"i"( /*T_SYSCALL+ */ SYS_exec), "r"(name), "r"(argv),
		      "r"(kenvp), "r"(argc)
		      :"a0", "a1", "a2", "a3", "v0");
	return ret;
}
8001e8bc:	03e00008 	jr	ra
8001e8c0:	00601021 	move	v0,v1

8001e8c4 <cpu_idle>:
cpu_idle():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:437

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// cpu_idle - at the end of kern_init, the first kernel thread idleproc will do below works
void cpu_idle(void)
{
8001e8c4:	27bdffe8 	addiu	sp,sp,-24
8001e8c8:	afb00010 	sw	s0,16(sp)
8001e8cc:	afbf0014 	sw	ra,20(sp)
8001e8d0:	3c108015 	lui	s0,0x8015
8001e8d4:	8e0377a4 	lw	v1,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:441
	while (1) {
	//kprintf("current->need_resched=%d \n\r",current->need_resched);
	//current->need_resched = 1;
		if (current->need_resched) {
8001e8d8:	8c620018 	lw	v0,24(v1)
8001e8dc:	1040fffe 	beqz	v0,8001e8d8 <cpu_idle+0x14>
8001e8e0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:442
			schedule();
8001e8e4:	0c00059f 	jal	8000167c <schedule>
8001e8e8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:437

#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)

// cpu_idle - at the end of kern_init, the first kernel thread idleproc will do below works
void cpu_idle(void)
{
8001e8ec:	08007a36 	j	8001e8d8 <cpu_idle+0x14>
8001e8f0:	8e0377a4 	lw	v1,30628(s0)

8001e8f4 <ucore_kernel_thread>:
ucore_kernel_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:450
}

//added by HHL
int ucore_kernel_thread(int (*fn) (void *), void *arg, uint32_t clone_flags)
{
	kernel_thread(fn, arg, clone_flags);
8001e8f4:	080079db 	j	8001e76c <kernel_thread>
8001e8f8:	00000000 	nop

8001e8fc <de_thread_arch_hook>:
de_thread_arch_hook():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:455
}

void de_thread_arch_hook(struct proc_struct *proc)
{
}
8001e8fc:	03e00008 	jr	ra
8001e900:	00000000 	nop

8001e904 <init_new_context>:
init_new_context():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:460

int
init_new_context(struct proc_struct *proc, struct elfhdr *elf,
		 int argc, char **kargv, int envc, char **kenvp)
{
8001e904:	27bdffc8 	addiu	sp,sp,-56
8001e908:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:462

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
8001e90c:	00061300 	sll	v0,a2,0xc
8001e910:	3c128000 	lui	s2,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:460
}

int
init_new_context(struct proc_struct *proc, struct elfhdr *elf,
		 int argc, char **kargv, int envc, char **kenvp)
{
8001e914:	afb30020 	sw	s3,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:462

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
8001e918:	02429023 	subu	s2,s2,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:463
	char **uargv = (char **)(stacktop - argc * sizeof(char *));
8001e91c:	00069880 	sll	s3,a2,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:460
}

int
init_new_context(struct proc_struct *proc, struct elfhdr *elf,
		 int argc, char **kargv, int envc, char **kenvp)
{
8001e920:	afb40024 	sw	s4,36(sp)
8001e924:	afb10018 	sw	s1,24(sp)
8001e928:	afb00014 	sw	s0,20(sp)
8001e92c:	afbf0034 	sw	ra,52(sp)
8001e930:	afb70030 	sw	s7,48(sp)
8001e934:	afb6002c 	sw	s6,44(sp)
8001e938:	afb50028 	sw	s5,40(sp)
8001e93c:	00c08021 	move	s0,a2
8001e940:	0080a021 	move	s4,a0
8001e944:	00a08821 	move	s1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:465

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
	char **uargv = (char **)(stacktop - argc * sizeof(char *));
	int i;
	for (i = 0; i < argc; i++) {
8001e948:	18c0000d 	blez	a2,8001e980 <init_new_context+0x7c>
8001e94c:	02539823 	subu	s3,s2,s3
8001e950:	00e0b821 	move	s7,a3
8001e954:	0260b021 	move	s6,s3
8001e958:	0000a821 	move	s5,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:466
		uargv[i] = strcpy((char *)(stacktop + i * PGSIZE), kargv[i]);
8001e95c:	8ee50000 	lw	a1,0(s7)
8001e960:	02402021 	move	a0,s2
8001e964:	0c005b9a 	jal	80016e68 <strcpy>
8001e968:	26b50001 	addiu	s5,s5,1
8001e96c:	aec20000 	sw	v0,0(s6)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:465
{

	uintptr_t stacktop = USTACKTOP - argc * PGSIZE;
	char **uargv = (char **)(stacktop - argc * sizeof(char *));
	int i;
	for (i = 0; i < argc; i++) {
8001e970:	26f70004 	addiu	s7,s7,4
8001e974:	26521000 	addiu	s2,s2,4096
8001e978:	16b0fff8 	bne	s5,s0,8001e95c <init_new_context+0x58>
8001e97c:	26d60004 	addiu	s6,s6,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:470
		uargv[i] = strcpy((char *)(stacktop + i * PGSIZE), kargv[i]);
	}
	//stacktop = (uintptr_t)uargv - sizeof(int);
	//*(int *)stacktop = argc;
	struct trapframe *tf = proc->tf;
8001e980:	8e920054 	lw	s2,84(s4)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:471
	memset(tf, 0, sizeof(struct trapframe));
8001e984:	00002821 	move	a1,zero
8001e988:	24060094 	li	a2,148
8001e98c:	0c005c5a 	jal	80017168 <memset>
8001e990:	02402021 	move	a0,s2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:472
	tf->tf_epc = elf->e_entry;
8001e994:	8e220018 	lw	v0,24(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:473
	tf->tf_regs.reg_r[MIPS_REG_SP] = USTACKTOP;
8001e998:	3c038000 	lui	v1,0x8000
8001e99c:	ae430088 	sw	v1,136(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:472
	}
	//stacktop = (uintptr_t)uargv - sizeof(int);
	//*(int *)stacktop = argc;
	struct trapframe *tf = proc->tf;
	memset(tf, 0, sizeof(struct trapframe));
	tf->tf_epc = elf->e_entry;
8001e9a0:	ae420090 	sw	v0,144(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:474
	tf->tf_regs.reg_r[MIPS_REG_SP] = USTACKTOP;
	uint32_t status = read_c0_status();
8001e9a4:	40036000 	mfc0	v1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:475
	status &= ~ST0_KSU;
8001e9a8:	2402ffe7 	li	v0,-25
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:483
	tf->tf_status = status;
	tf->tf_regs.reg_r[MIPS_REG_A0] = argc;
	tf->tf_regs.reg_r[MIPS_REG_A1] = (uint32_t) uargv;

	return 0;
}
8001e9ac:	8fbf0034 	lw	ra,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:475
	struct trapframe *tf = proc->tf;
	memset(tf, 0, sizeof(struct trapframe));
	tf->tf_epc = elf->e_entry;
	tf->tf_regs.reg_r[MIPS_REG_SP] = USTACKTOP;
	uint32_t status = read_c0_status();
	status &= ~ST0_KSU;
8001e9b0:	00621024 	and	v0,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:477
	status |= KSU_USER;
	status |= ST0_EXL;
8001e9b4:	34420012 	ori	v0,v0,0x12
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:478
	tf->tf_status = status;
8001e9b8:	ae420004 	sw	v0,4(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:479
	tf->tf_regs.reg_r[MIPS_REG_A0] = argc;
8001e9bc:	ae500024 	sw	s0,36(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:480
	tf->tf_regs.reg_r[MIPS_REG_A1] = (uint32_t) uargv;
8001e9c0:	ae530028 	sw	s3,40(s2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:483

	return 0;
}
8001e9c4:	00001021 	move	v0,zero
8001e9c8:	8fb70030 	lw	s7,48(sp)
8001e9cc:	8fb6002c 	lw	s6,44(sp)
8001e9d0:	8fb50028 	lw	s5,40(sp)
8001e9d4:	8fb40024 	lw	s4,36(sp)
8001e9d8:	8fb30020 	lw	s3,32(sp)
8001e9dc:	8fb2001c 	lw	s2,28(sp)
8001e9e0:	8fb10018 	lw	s1,24(sp)
8001e9e4:	8fb00014 	lw	s0,20(sp)
8001e9e8:	03e00008 	jr	ra
8001e9ec:	27bd0038 	addiu	sp,sp,56

8001e9f0 <do_execve_arch_hook>:
do_execve_arch_hook():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/proc.c:488

int do_execve_arch_hook(int argc, char **kargv)
{
	return 0;
}
8001e9f0:	03e00008 	jr	ra
8001e9f4:	00001021 	move	v0,zero

8001e9f8 <__sig_setup_frame>:
__sig_setup_frame():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/signal.c:7
#include <assert.h>

int __sig_setup_frame(int sign, struct sigaction *act, sigset_t oldset,
		      struct trapframe *tf)
{
	warn("%s not implemented yet.", __func__);
8001e9f8:	3c048002 	lui	a0,0x8002
8001e9fc:	3c068002 	lui	a2,0x8002
8001ea00:	3c078002 	lui	a3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/signal.c:6
#include <proc.h>
#include <assert.h>

int __sig_setup_frame(int sign, struct sigaction *act, sigset_t oldset,
		      struct trapframe *tf)
{
8001ea04:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/signal.c:7
	warn("%s not implemented yet.", __func__);
8001ea08:	24842fd4 	addiu	a0,a0,12244
8001ea0c:	24050007 	li	a1,7
8001ea10:	24c64920 	addiu	a2,a2,18720
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/signal.c:6
#include <proc.h>
#include <assert.h>

int __sig_setup_frame(int sign, struct sigaction *act, sigset_t oldset,
		      struct trapframe *tf)
{
8001ea14:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/signal.c:7
	warn("%s not implemented yet.", __func__);
8001ea18:	0c006b33 	jal	8001accc <__warn>
8001ea1c:	24e709a4 	addiu	a3,a3,2468
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/signal.c:9
	return -1;
}
8001ea20:	8fbf0014 	lw	ra,20(sp)
8001ea24:	2402ffff 	li	v0,-1
8001ea28:	03e00008 	jr	ra
8001ea2c:	27bd0018 	addiu	sp,sp,24

8001ea30 <cputch>:
cputch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:15
/* *
 * cputch - writes a single character @c to stdout, and it will
 * increace the value of counter pointed by @cnt.
 * */
static void cputch(int c, int *cnt)
{
8001ea30:	27bdffe0 	addiu	sp,sp,-32
8001ea34:	afbf001c 	sw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:16
	cons_putc(c);
8001ea38:	0c006c63 	jal	8001b18c <cons_putc>
8001ea3c:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:17
	(*cnt)++;
8001ea40:	8fa50010 	lw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:18
}
8001ea44:	8fbf001c 	lw	ra,28(sp)
8001ea48:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:17
 * increace the value of counter pointed by @cnt.
 * */
static void cputch(int c, int *cnt)
{
	cons_putc(c);
	(*cnt)++;
8001ea4c:	8ca20000 	lw	v0,0(a1)
8001ea50:	24420001 	addiu	v0,v0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:18
}
8001ea54:	03e00008 	jr	ra
8001ea58:	aca20000 	sw	v0,0(a1)

8001ea5c <vkprintf>:
vkprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:52
 *
 * Call this function if you are already dealing with a va_list.
 * Or you probably want kprintf() instead.
 * */
int vkprintf(const char *fmt, va_list ap)
{
8001ea5c:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:54
	int cnt = 0;
	vprintfmt((void *)cputch, NO_FD, &cnt, fmt, ap);
8001ea60:	afa50010 	sw	a1,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:52
 *
 * Call this function if you are already dealing with a va_list.
 * Or you probably want kprintf() instead.
 * */
int vkprintf(const char *fmt, va_list ap)
{
8001ea64:	00803821 	move	a3,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:54
	int cnt = 0;
	vprintfmt((void *)cputch, NO_FD, &cnt, fmt, ap);
8001ea68:	3c05ffff 	lui	a1,0xffff
8001ea6c:	3c048002 	lui	a0,0x8002
8001ea70:	27a60018 	addiu	a2,sp,24
8001ea74:	2484ea30 	addiu	a0,a0,-5584
8001ea78:	24a56ad9 	addiu	a1,a1,27353
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:52
 *
 * Call this function if you are already dealing with a va_list.
 * Or you probably want kprintf() instead.
 * */
int vkprintf(const char *fmt, va_list ap)
{
8001ea7c:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:54
	int cnt = 0;
	vprintfmt((void *)cputch, NO_FD, &cnt, fmt, ap);
8001ea80:	0c0059cc 	jal	80016730 <vprintfmt>
8001ea84:	afa00018 	sw	zero,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:56
	return cnt;
}
8001ea88:	8fbf0024 	lw	ra,36(sp)
8001ea8c:	8fa20018 	lw	v0,24(sp)
8001ea90:	03e00008 	jr	ra
8001ea94:	27bd0028 	addiu	sp,sp,40

8001ea98 <kprintf>:
kprintf():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:65
 *
 * The return value is the number of characters which would be
 * written to stdout.
 * */
int kprintf(const char *fmt, ...)
{
8001ea98:	27bdffe0 	addiu	sp,sp,-32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:68
	va_list ap;
	int cnt;
	va_start(ap, fmt);
8001ea9c:	27a20024 	addiu	v0,sp,36
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:65
 *
 * The return value is the number of characters which would be
 * written to stdout.
 * */
int kprintf(const char *fmt, ...)
{
8001eaa0:	afa50024 	sw	a1,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:69
	va_list ap;
	int cnt;
	va_start(ap, fmt);
	cnt = vkprintf(fmt, ap);
8001eaa4:	00402821 	move	a1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:65
 *
 * The return value is the number of characters which would be
 * written to stdout.
 * */
int kprintf(const char *fmt, ...)
{
8001eaa8:	afbf001c 	sw	ra,28(sp)
8001eaac:	afa60028 	sw	a2,40(sp)
8001eab0:	afa7002c 	sw	a3,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:69
	va_list ap;
	int cnt;
	va_start(ap, fmt);
	cnt = vkprintf(fmt, ap);
8001eab4:	0c007a97 	jal	8001ea5c <vkprintf>
8001eab8:	afa20010 	sw	v0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:72
	va_end(ap);
	return cnt;
}
8001eabc:	8fbf001c 	lw	ra,28(sp)
8001eac0:	03e00008 	jr	ra
8001eac4:	27bd0020 	addiu	sp,sp,32

8001eac8 <printhex>:
printhex():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:76

static const char *hexdigits = "0123456789ABCDEF";
void printhex(unsigned int x)
{
8001eac8:	27bdffd8 	addiu	sp,sp,-40
8001eacc:	3c058002 	lui	a1,0x8002
8001ead0:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:79
	char tmp[9];
	int i = 0;
	tmp[8] = 0;
8001ead4:	a3a00018 	sb	zero,24(sp)
8001ead8:	27a20017 	addiu	v0,sp,23
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:75
	va_end(ap);
	return cnt;
}

static const char *hexdigits = "0123456789ABCDEF";
void printhex(unsigned int x)
8001eadc:	27a6000f 	addiu	a2,sp,15
8001eae0:	24a54938 	addiu	a1,a1,18744
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:81
{
	char tmp[9];
	int i = 0;
	tmp[8] = 0;
	for (i = 7; i >= 0; i--) {
		tmp[i] = hexdigits[x & 0xf];
8001eae4:	3083000f 	andi	v1,a0,0xf
8001eae8:	00a31821 	addu	v1,a1,v1
8001eaec:	90630000 	lbu	v1,0(v1)
8001eaf0:	a0430000 	sb	v1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:82
		x = x >> 4;
8001eaf4:	2442ffff 	addiu	v0,v0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:80
void printhex(unsigned int x)
{
	char tmp[9];
	int i = 0;
	tmp[8] = 0;
	for (i = 7; i >= 0; i--) {
8001eaf8:	1446fffa 	bne	v0,a2,8001eae4 <printhex+0x1c>
8001eafc:	00042102 	srl	a0,a0,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:84
		tmp[i] = hexdigits[x & 0xf];
		x = x >> 4;
	}
	kprintf(tmp);
8001eb00:	0c007aa6 	jal	8001ea98 <kprintf>
8001eb04:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:85
}
8001eb08:	8fbf0024 	lw	ra,36(sp)
8001eb0c:	03e00008 	jr	ra
8001eb10:	27bd0028 	addiu	sp,sp,40

8001eb14 <printbase10>:
printbase10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:88

void printbase10(int x)
{
8001eb14:	27bdffd0 	addiu	sp,sp,-48
8001eb18:	afb00024 	sw	s0,36(sp)
8001eb1c:	afbf002c 	sw	ra,44(sp)
8001eb20:	afb10028 	sw	s1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:92
	unsigned int t;
	int i = 0;
	char buf[16];
	if (x < 0)
8001eb24:	04800036 	bltz	a0,8001ec00 <printbase10+0xec>
8001eb28:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:94
		kputchar('-');
	x = (x < 0) ? -x : x;
8001eb2c:	00101fc3 	sra	v1,s0,0x1f
8001eb30:	00701026 	xor	v0,v1,s0
8001eb34:	00431023 	subu	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:95
	while (x >= 10) {
8001eb38:	2843000a 	slti	v1,v0,10
8001eb3c:	00002821 	move	a1,zero
8001eb40:	1460001d 	bnez	v1,8001ebb8 <printbase10+0xa4>
8001eb44:	27a80010 	addiu	t0,sp,16
__divu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:32
/* __divu* routines are from the book, Hacker's Delight */

static inline unsigned int __divu10(unsigned int n)
{
	unsigned int q, r;
	q = (n >> 1) + (n >> 2);
8001eb48:	00021842 	srl	v1,v0,0x1
8001eb4c:	00022082 	srl	a0,v0,0x2
8001eb50:	00832021 	addu	a0,a0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:33
	q = q + (q >> 4);
8001eb54:	00041902 	srl	v1,a0,0x4
8001eb58:	00642021 	addu	a0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:34
	q = q + (q >> 8);
8001eb5c:	00041a02 	srl	v1,a0,0x8
8001eb60:	00642021 	addu	a0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:35
	q = q + (q >> 16);
8001eb64:	00041c02 	srl	v1,a0,0x10
8001eb68:	00642021 	addu	a0,v1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:36
	q = q >> 3;
8001eb6c:	000420c2 	srl	a0,a0,0x3
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001eb70:	24460006 	addiu	a2,v0,6
8001eb74:	00041840 	sll	v1,a0,0x1
__divu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:37
	q = (n >> 1) + (n >> 2);
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
8001eb78:	00c31823 	subu	v1,a2,v1
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001eb7c:	000430c0 	sll	a2,a0,0x3
__divu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:38
	q = q + (q >> 4);
	q = q + (q >> 8);
	q = q + (q >> 16);
	q = q >> 3;
	r = n - __mulu10(q);
	return q + ((r + 6) >> 4);
8001eb80:	00661823 	subu	v1,v1,a2
8001eb84:	00031902 	srl	v1,v1,0x4
8001eb88:	00641821 	addu	v1,v1,a0
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
    __res;\
    })

static inline unsigned int __mulu10(unsigned int n)
{
	return (n << 3) + (n << 1);
8001eb8c:	000320c0 	sll	a0,v1,0x3
8001eb90:	00033040 	sll	a2,v1,0x1
printbase10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:97
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
8001eb94:	24470030 	addiu	a3,v0,48
__mulu10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/arch.h:24
8001eb98:	00c43021 	addu	a2,a2,a0
printbase10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:98
		x = t;
8001eb9c:	00601021 	move	v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:87
		x = x >> 4;
	}
	kprintf(tmp);
}

void printbase10(int x)
8001eba0:	01052021 	addu	a0,t0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:97
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
	while (x >= 10) {
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
8001eba4:	00e63023 	subu	a2,a3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:95
	int i = 0;
	char buf[16];
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
	while (x >= 10) {
8001eba8:	2863000a 	slti	v1,v1,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:97
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
8001ebac:	a0860000 	sb	a2,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:95
	int i = 0;
	char buf[16];
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
	while (x >= 10) {
8001ebb0:	1060ffe5 	beqz	v1,8001eb48 <printbase10+0x34>
8001ebb4:	24a50001 	addiu	a1,a1,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:100
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
8001ebb8:	24420030 	addiu	v0,v0,48
8001ebbc:	304400ff 	andi	a0,v0,0xff
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:87
		x = x >> 4;
	}
	kprintf(tmp);
}

void printbase10(int x)
8001ebc0:	24b0ffff 	addiu	s0,a1,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:100
	while (x >= 10) {
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
8001ebc4:	01051021 	addu	v0,t0,a1
8001ebc8:	a0440000 	sb	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:87
		x = x >> 4;
	}
	kprintf(tmp);
}

void printbase10(int x)
8001ebcc:	01108021 	addu	s0,t0,s0
8001ebd0:	08007af7 	j	8001ebdc <printbase10+0xc8>
8001ebd4:	27b1000f 	addiu	s1,sp,15
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:101
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
	for (; i >= 0; i--) {
8001ebd8:	2610ffff 	addiu	s0,s0,-1
kputchar():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:109
}

/* kputchar - writes a single character to stdout */
void kputchar(int c)
{
	cons_putc(c);
8001ebdc:	0c006c63 	jal	8001b18c <cons_putc>
8001ebe0:	00000000 	nop
printbase10():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:101
		t = __divu10(x);
		buf[i++] = ('0' + (x - __mulu10(t)));
		x = t;
	}
	buf[i] = ('0' + x);
	for (; i >= 0; i--) {
8001ebe4:	5611fffc 	bnel	s0,s1,8001ebd8 <printbase10+0xc4>
8001ebe8:	92040000 	lbu	a0,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:104
		kputchar(buf[i]);
	}
}
8001ebec:	8fbf002c 	lw	ra,44(sp)
8001ebf0:	8fb10028 	lw	s1,40(sp)
8001ebf4:	8fb00024 	lw	s0,36(sp)
8001ebf8:	03e00008 	jr	ra
8001ebfc:	27bd0030 	addiu	sp,sp,48
kputchar():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:109

/* kputchar - writes a single character to stdout */
void kputchar(int c)
{
	cons_putc(c);
8001ec00:	0c006c63 	jal	8001b18c <cons_putc>
8001ec04:	2404002d 	li	a0,45
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:94
	unsigned int t;
	int i = 0;
	char buf[16];
	if (x < 0)
		kputchar('-');
	x = (x < 0) ? -x : x;
8001ec08:	08007acc 	j	8001eb30 <printbase10+0x1c>
8001ec0c:	00101fc3 	sra	v1,s0,0x1f

8001ec10 <kputchar>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:109
}

/* kputchar - writes a single character to stdout */
void kputchar(int c)
{
	cons_putc(c);
8001ec10:	08006c63 	j	8001b18c <cons_putc>
8001ec14:	00000000 	nop

8001ec18 <kputs>:
kputs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:117
/* *
 * kputs- writes the string pointed by @str to stdout and
 * appends a newline character.
 * */
int kputs(const char *str)
{
8001ec18:	27bdffe0 	addiu	sp,sp,-32
8001ec1c:	afb00018 	sw	s0,24(sp)
8001ec20:	afbf001c 	sw	ra,28(sp)
8001ec24:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:120
	int cnt = 0;
	char c;
	while ((c = *str++) != '\0') {
8001ec28:	90840000 	lbu	a0,0(a0)
8001ec2c:	10800007 	beqz	a0,8001ec4c <kputs+0x34>
8001ec30:	afa00010 	sw	zero,16(sp)
8001ec34:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:121
		cputch(c, &cnt);
8001ec38:	0c007a8c 	jal	8001ea30 <cputch>
8001ec3c:	27a50010 	addiu	a1,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:120
 * */
int kputs(const char *str)
{
	int cnt = 0;
	char c;
	while ((c = *str++) != '\0') {
8001ec40:	92040000 	lbu	a0,0(s0)
8001ec44:	1480fffc 	bnez	a0,8001ec38 <kputs+0x20>
8001ec48:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:123
		cputch(c, &cnt);
	}
	cputch('\n', &cnt);
8001ec4c:	27a50010 	addiu	a1,sp,16
8001ec50:	0c007a8c 	jal	8001ea30 <cputch>
8001ec54:	2404000a 	li	a0,10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:125
	return cnt;
}
8001ec58:	8fbf001c 	lw	ra,28(sp)
8001ec5c:	8fa20010 	lw	v0,16(sp)
8001ec60:	8fb00018 	lw	s0,24(sp)
8001ec64:	03e00008 	jr	ra
8001ec68:	27bd0020 	addiu	sp,sp,32

8001ec6c <getchar>:
getchar():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:129

/* getchar - reads a single non-zero character from stdin */
int getchar(void)
{
8001ec6c:	27bdffe8 	addiu	sp,sp,-24
8001ec70:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:131
	int c;
	while ((c = cons_getc()) == 0)
8001ec74:	0c006c85 	jal	8001b214 <cons_getc>
8001ec78:	00000000 	nop
8001ec7c:	1040fffd 	beqz	v0,8001ec74 <getchar+0x8>
8001ec80:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/mips_io.c:134
		/* do nothing */ ;
	return c;
}
8001ec84:	03e00008 	jr	ra
8001ec88:	27bd0018 	addiu	sp,sp,24

8001ec8c <udivmodsi4>:
udivmodsi4():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:29
unsigned long udivmodsi4(unsigned long num, unsigned long den, int modwanted)
{
	unsigned long bit = 1;
	unsigned long res = 0;

	while (den < num && bit && !(den & (1L << 31))) {
8001ec8c:	00a4182b 	sltu	v1,a1,a0
8001ec90:	50600010 	beqzl	v1,8001ecd4 <udivmodsi4+0x48>
8001ec94:	24030001 	li	v1,1
8001ec98:	04a0001b 	bltz	a1,8001ed08 <udivmodsi4+0x7c>
8001ec9c:	24070020 	li	a3,32
8001eca0:	08007b2e 	j	8001ecb8 <udivmodsi4+0x2c>
8001eca4:	24030001 	li	v1,1
8001eca8:	10e00015 	beqz	a3,8001ed00 <udivmodsi4+0x74>
8001ecac:	00001021 	move	v0,zero
8001ecb0:	04a2000a 	bltzl	a1,8001ecdc <udivmodsi4+0x50>
8001ecb4:	0085382b 	sltu	a3,a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:30
		den <<= 1;
8001ecb8:	00052840 	sll	a1,a1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:29
unsigned long udivmodsi4(unsigned long num, unsigned long den, int modwanted)
{
	unsigned long bit = 1;
	unsigned long res = 0;

	while (den < num && bit && !(den & (1L << 31))) {
8001ecbc:	00a4402b 	sltu	t0,a1,a0
8001ecc0:	24e7ffff 	addiu	a3,a3,-1
8001ecc4:	1500fff8 	bnez	t0,8001eca8 <udivmodsi4+0x1c>
8001ecc8:	00031840 	sll	v1,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:33
		den <<= 1;
		bit <<= 1;
	}
	while (bit) {
8001eccc:	1060000c 	beqz	v1,8001ed00 <udivmodsi4+0x74>
8001ecd0:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:31
	unsigned long bit = 1;
	unsigned long res = 0;

	while (den < num && bit && !(den & (1L << 31))) {
		den <<= 1;
		bit <<= 1;
8001ecd4:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:34
	}
	while (bit) {
		if (num >= den) {
8001ecd8:	0085382b 	sltu	a3,a0,a1
8001ecdc:	54e00004 	bnezl	a3,8001ecf0 <udivmodsi4+0x64>
8001ece0:	00031842 	srl	v1,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:35
			num -= den;
8001ece4:	00852023 	subu	a0,a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:36
			res |= bit;
8001ece8:	00431025 	or	v0,v0,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:38
		}
		bit >>= 1;
8001ecec:	00031842 	srl	v1,v1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:33

	while (den < num && bit && !(den & (1L << 31))) {
		den <<= 1;
		bit <<= 1;
	}
	while (bit) {
8001ecf0:	1460fff9 	bnez	v1,8001ecd8 <udivmodsi4+0x4c>
8001ecf4:	00052842 	srl	a1,a1,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:44
		den >>= 1;
	}
	if (modwanted)
		return num;
	return res;
}
8001ecf8:	03e00008 	jr	ra
8001ecfc:	0086100b 	movn	v0,a0,a2
8001ed00:	03e00008 	jr	ra
8001ed04:	0086100b 	movn	v0,a0,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmodsi4.c:26
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */

unsigned long udivmodsi4(unsigned long num, unsigned long den, int modwanted)
{
	unsigned long bit = 1;
8001ed08:	08007b35 	j	8001ecd4 <udivmodsi4+0x48>
8001ed0c:	24030001 	li	v1,1

8001ed10 <__udivsi3>:
__udivsi3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmod.c:28

long udivmodsi4();

long __udivsi3(long a, long b)
{
	return udivmodsi4(a, b, 0);
8001ed10:	08007b23 	j	8001ec8c <udivmodsi4>
8001ed14:	00003021 	move	a2,zero

8001ed18 <__umodsi3>:
__umodsi3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/udivmod.c:33
}

long __umodsi3(long a, long b)
{
	return udivmodsi4(a, b, 1);
8001ed18:	08007b23 	j	8001ec8c <udivmodsi4>
8001ed1c:	24060001 	li	a2,1

8001ed20 <__divsi3>:
__divsi3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:27
<http://www.gnu.org/licenses/>.  */

long udivmodsi4();

long __divsi3(long a, long b)
{
8001ed20:	27bdffe8 	addiu	sp,sp,-24
8001ed24:	afb00010 	sw	s0,16(sp)
8001ed28:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:31
	int neg = 0;
	long res;

	if (a < 0) {
8001ed2c:	0480000b 	bltz	a0,8001ed5c <__divsi3+0x3c>
8001ed30:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:36
		a = -a;
		neg = !neg;
	}

	if (b < 0) {
8001ed34:	04a2000d 	bltzl	a1,8001ed6c <__divsi3+0x4c>
8001ed38:	00052823 	negu	a1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:41
		b = -b;
		neg = !neg;
	}

	res = udivmodsi4(a, b, 0);
8001ed3c:	0c007b23 	jal	8001ec8c <udivmodsi4>
8001ed40:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:47

	if (neg)
		res = -res;

	return res;
}
8001ed44:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:44
	}

	res = udivmodsi4(a, b, 0);

	if (neg)
		res = -res;
8001ed48:	00021823 	negu	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:47

	return res;
}
8001ed4c:	0070100b 	movn	v0,v1,s0
8001ed50:	8fb00010 	lw	s0,16(sp)
8001ed54:	03e00008 	jr	ra
8001ed58:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:32
{
	int neg = 0;
	long res;

	if (a < 0) {
		a = -a;
8001ed5c:	00042023 	negu	a0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:36
		neg = !neg;
	}

	if (b < 0) {
8001ed60:	04a1fff6 	bgez	a1,8001ed3c <__divsi3+0x1c>
8001ed64:	24100001 	li	s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:37
		b = -b;
8001ed68:	00052823 	negu	a1,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:41
		neg = !neg;
	}

	res = udivmodsi4(a, b, 0);
8001ed6c:	0c007b23 	jal	8001ec8c <udivmodsi4>
8001ed70:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:47

	if (neg)
		res = -res;

	return res;
}
8001ed74:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:38
		neg = !neg;
	}

	if (b < 0) {
		b = -b;
		neg = !neg;
8001ed78:	3a100001 	xori	s0,s0,0x1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:44
	}

	res = udivmodsi4(a, b, 0);

	if (neg)
		res = -res;
8001ed7c:	00021823 	negu	v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:47

	return res;
}
8001ed80:	0070100b 	movn	v0,v1,s0
8001ed84:	8fb00010 	lw	s0,16(sp)
8001ed88:	03e00008 	jr	ra
8001ed8c:	27bd0018 	addiu	sp,sp,24

8001ed90 <__modsi3>:
__modsi3():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:50

long __modsi3(long a, long b)
{
8001ed90:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:54
	int neg = 0;
	long res;

	if (a < 0) {
8001ed94:	04800008 	bltz	a0,8001edb8 <__modsi3+0x28>
8001ed98:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:62
	}

	if (b < 0)
		b = -b;

	res = udivmodsi4(a, b, 1);
8001ed9c:	000517c3 	sra	v0,a1,0x1f
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:68

	if (neg)
		res = -res;

	return res;
}
8001eda0:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:62
	}

	if (b < 0)
		b = -b;

	res = udivmodsi4(a, b, 1);
8001eda4:	00452826 	xor	a1,v0,a1
8001eda8:	00a22823 	subu	a1,a1,v0
8001edac:	24060001 	li	a2,1
8001edb0:	08007b23 	j	8001ec8c <udivmodsi4>
8001edb4:	27bd0018 	addiu	sp,sp,24
8001edb8:	00051fc3 	sra	v1,a1,0x1f
8001edbc:	00652826 	xor	a1,v1,a1
8001edc0:	00042023 	negu	a0,a0
8001edc4:	00a32823 	subu	a1,a1,v1
8001edc8:	0c007b23 	jal	8001ec8c <udivmodsi4>
8001edcc:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/libs/divmod.c:68

	if (neg)
		res = -res;

	return res;
}
8001edd0:	8fbf0014 	lw	ra,20(sp)
8001edd4:	00021023 	negu	v0,v0
8001edd8:	03e00008 	jr	ra
8001eddc:	27bd0018 	addiu	sp,sp,24

8001ede0 <sys_gettime>:
sys_gettime():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:82
    return do_kill(pid, -E_KILLED);
}

static uint32_t
sys_gettime(uint32_t arg[]) {
    return (int)ticks;
8001ede0:	3c028015 	lui	v0,0x8015
8001ede4:	8c4277ac 	lw	v0,30636(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:83
}
8001ede8:	03e00008 	jr	ra
8001edec:	00000000 	nop

8001edf0 <sys_getpid>:
sys_getpid():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:87

static uint32_t
sys_getpid(uint32_t arg[]) {
    return pls_read(current)->pid;
8001edf0:	3c028015 	lui	v0,0x8015
8001edf4:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:88
}
8001edf8:	03e00008 	jr	ra
8001edfc:	8c420004 	lw	v0,4(v0)

8001ee00 <sys_redraw_console>:
sys_redraw_console():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:297
    uint32_t open_flags = (uint32_t)arg[1];
    return sysfile_mkfifo(name, open_flags);
}

static int
sys_redraw_console(uint32_t arg[]) {
8001ee00:	27bdffe8 	addiu	sp,sp,-24
8001ee04:	afbf0014 	sw	ra,20(sp)
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:12
void intr_enable(void);
void intr_disable(void);

static inline bool __intr_save(void)
{
	if (!(read_c0_status() & ST0_IE)) {
8001ee08:	40026000 	mfc0	v0,c0_status
8001ee0c:	30420001 	andi	v0,v0,0x1
8001ee10:	14400007 	bnez	v0,8001ee30 <sys_redraw_console+0x30>
8001ee14:	00000000 	nop
sys_redraw_console():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:300
    bool intr_flag;
    local_intr_save(intr_flag);
    vga_redraw();
8001ee18:	0c006e35 	jal	8001b8d4 <vga_redraw>
8001ee1c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:303
    local_intr_restore(intr_flag);
	return 0;
}
8001ee20:	8fbf0014 	lw	ra,20(sp)
8001ee24:	00001021 	move	v0,zero
8001ee28:	03e00008 	jr	ra
8001ee2c:	27bd0018 	addiu	sp,sp,24
__intr_save():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:15
		return 0;
	}
	intr_disable();
8001ee30:	0c006d0c 	jal	8001b430 <intr_disable>
8001ee34:	00000000 	nop
sys_redraw_console():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:300

static int
sys_redraw_console(uint32_t arg[]) {
    bool intr_flag;
    local_intr_save(intr_flag);
    vga_redraw();
8001ee38:	0c006e35 	jal	8001b8d4 <vga_redraw>
8001ee3c:	00000000 	nop
__intr_restore():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/driver/intr.h:22
}

static inline void __intr_restore(bool flag)
{
	if (flag) {
		intr_enable();
8001ee40:	0c006d08 	jal	8001b420 <intr_enable>
8001ee44:	00000000 	nop
sys_redraw_console():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:303
    local_intr_restore(intr_flag);
	return 0;
}
8001ee48:	8fbf0014 	lw	ra,20(sp)
8001ee4c:	00001021 	move	v0,zero
8001ee50:	03e00008 	jr	ra
8001ee54:	27bd0018 	addiu	sp,sp,24

8001ee58 <sys_mkfifo>:
sys_mkfifo():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:290
    int *fd_store = (int *)arg[0];
    return sysfile_pipe(fd_store);
}

static uint32_t
sys_mkfifo(uint32_t arg[]) {
8001ee58:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:293
    const char *name = (const char *)arg[0];
    uint32_t open_flags = (uint32_t)arg[1];
    return sysfile_mkfifo(name, open_flags);
8001ee5c:	8c450004 	lw	a1,4(v0)
8001ee60:	08003735 	j	8000dcd4 <sysfile_mkfifo>
8001ee64:	8c840000 	lw	a0,0(a0)

8001ee68 <sys_pipe>:
sys_pipe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:286
}

static uint32_t
sys_pipe(uint32_t arg[]) {
    int *fd_store = (int *)arg[0];
    return sysfile_pipe(fd_store);
8001ee68:	080036fb 	j	8000dbec <sysfile_pipe>
8001ee6c:	8c840000 	lw	a0,0(a0)

8001ee70 <sys_dup>:
sys_dup():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:277
    struct dirent *direntp = (struct dirent *)arg[1];
    return sysfile_getdirentry(fd, direntp, NULL);
}

static uint32_t
sys_dup(uint32_t arg[]) {
8001ee70:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:280
    int fd1 = (int)arg[0];
    int fd2 = (int)arg[1];
    return sysfile_dup(fd1, fd2);
8001ee74:	8c450004 	lw	a1,4(v0)
8001ee78:	080036f9 	j	8000dbe4 <sysfile_dup>
8001ee7c:	8c840000 	lw	a0,0(a0)

8001ee80 <sys_getdirentry>:
sys_getdirentry():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:270
    const char *name = (const char *)arg[0];
    return sysfile_unlink(name);
}

static uint32_t
sys_getdirentry(uint32_t arg[]) {
8001ee80:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:273
    int fd = (int)arg[0];
    struct dirent *direntp = (struct dirent *)arg[1];
    return sysfile_getdirentry(fd, direntp, NULL);
8001ee84:	8c450004 	lw	a1,4(v0)
8001ee88:	8c840000 	lw	a0,0(a0)
8001ee8c:	080036b1 	j	8000dac4 <sysfile_getdirentry>
8001ee90:	00003021 	move	a2,zero

8001ee94 <sys_unlink>:
sys_unlink():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:266
}

static uint32_t
sys_unlink(uint32_t arg[]) {
    const char *name = (const char *)arg[0];
    return sysfile_unlink(name);
8001ee94:	0800367b 	j	8000d9ec <sysfile_unlink>
8001ee98:	8c840000 	lw	a0,0(a0)

8001ee9c <sys_rename>:
sys_rename():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:257
    const char *path2 = (const char *)arg[1];
    return sysfile_link(path1, path2);
}

static uint32_t
sys_rename(uint32_t arg[]) {
8001ee9c:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:260
    const char *path1 = (const char *)arg[0];
    const char *path2 = (const char *)arg[1];
    return sysfile_rename(path1, path2);
8001eea0:	8c450004 	lw	a1,4(v0)
8001eea4:	08003656 	j	8000d958 <sysfile_rename>
8001eea8:	8c840000 	lw	a0,0(a0)

8001eeac <sys_link>:
sys_link():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:250
    const char *path = (const char *)arg[0];
    return sysfile_mkdir(path);
}

static uint32_t
sys_link(uint32_t arg[]) {
8001eeac:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:253
    const char *path1 = (const char *)arg[0];
    const char *path2 = (const char *)arg[1];
    return sysfile_link(path1, path2);
8001eeb0:	8c450004 	lw	a1,4(v0)
8001eeb4:	08003631 	j	8000d8c4 <sysfile_link>
8001eeb8:	8c840000 	lw	a0,0(a0)

8001eebc <sys_mkdir>:
sys_mkdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:246
}

static uint32_t
sys_mkdir(uint32_t arg[]) {
    const char *path = (const char *)arg[0];
    return sysfile_mkdir(path);
8001eebc:	08003621 	j	8000d884 <sysfile_mkdir>
8001eec0:	8c840000 	lw	a0,0(a0)

8001eec4 <sys_getcwd>:
sys_getcwd():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:237
    const char *path = (const char *)arg[0];
    return sysfile_chdir(path);
}

static uint32_t
sys_getcwd(uint32_t arg[]) {
8001eec4:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:240
    char *buf = (char *)arg[0];
    size_t len = (size_t)arg[1];
    return sysfile_getcwd(buf, len);
8001eec8:	8c450004 	lw	a1,4(v0)
8001eecc:	0800368b 	j	8000da2c <sysfile_getcwd>
8001eed0:	8c840000 	lw	a0,0(a0)

8001eed4 <sys_chdir>:
sys_chdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:233
}

static uint32_t
sys_chdir(uint32_t arg[]) {
    const char *path = (const char *)arg[0];
    return sysfile_chdir(path);
8001eed4:	08003611 	j	8000d844 <sysfile_chdir>
8001eed8:	8c840000 	lw	a0,0(a0)

8001eedc <sys_fsync>:
sys_fsync():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:227
}

static uint32_t
sys_fsync(uint32_t arg[]) {
    int fd = (int)arg[0];
    return sysfile_fsync(fd);
8001eedc:	0800360f 	j	8000d83c <sysfile_fsync>
8001eee0:	8c840000 	lw	a0,0(a0)

8001eee4 <sys_fstat>:
sys_fstat():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:218
    int whence = (int)arg[2];
    return sysfile_seek(fd, pos, whence);
}

static uint32_t
sys_fstat(uint32_t arg[]) {
8001eee4:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:221
    int fd = (int)arg[0];
    struct stat *stat = (struct stat *)arg[1];
    return sysfile_fstat(fd, stat);
8001eee8:	8c450004 	lw	a1,4(v0)
8001eeec:	08003540 	j	8000d500 <sysfile_fstat>
8001eef0:	8c840000 	lw	a0,0(a0)

8001eef4 <sys_seek>:
sys_seek():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:210
    size_t len = (size_t)arg[2];
    return sysfile_write(fd, base, len);
}

static uint32_t
sys_seek(uint32_t arg[]) {
8001eef4:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:214
    int fd = (int)arg[0];
    off_t pos = (off_t)arg[1];
    int whence = (int)arg[2];
    return sysfile_seek(fd, pos, whence);
8001eef8:	8c450004 	lw	a1,4(v0)
8001eefc:	8c840000 	lw	a0,0(a0)
8001ef00:	0800353e 	j	8000d4f8 <sysfile_seek>
8001ef04:	8c460008 	lw	a2,8(v0)

8001ef08 <sys_write>:
sys_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:202
    size_t len = (size_t)arg[2];
    return sysfile_read(fd, base, len);
}

static uint32_t
sys_write(uint32_t arg[]) {
8001ef08:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:206
    int fd = (int)arg[0];
    void *base = (void *)arg[1];
    size_t len = (size_t)arg[2];
    return sysfile_write(fd, base, len);
8001ef0c:	8c450004 	lw	a1,4(v0)
8001ef10:	8c840000 	lw	a0,0(a0)
8001ef14:	08003483 	j	8000d20c <sysfile_write>
8001ef18:	8c460008 	lw	a2,8(v0)

8001ef1c <sys_read>:
sys_read():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:194
    int fd = (int)arg[0];
    return sysfile_close(fd);
}

static uint32_t
sys_read(uint32_t arg[]) {
8001ef1c:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:198
    int fd = (int)arg[0];
    void *base = (void *)arg[1];
    size_t len = (size_t)arg[2];
    return sysfile_read(fd, base, len);
8001ef20:	8c450004 	lw	a1,4(v0)
8001ef24:	8c840000 	lw	a0,0(a0)
8001ef28:	080033f5 	j	8000cfd4 <sysfile_read>
8001ef2c:	8c460008 	lw	a2,8(v0)

8001ef30 <sys_close>:
sys_close():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:190
}

static uint32_t
sys_close(uint32_t arg[]) {
    int fd = (int)arg[0];
    return sysfile_close(fd);
8001ef30:	080033f3 	j	8000cfcc <sysfile_close>
8001ef34:	8c840000 	lw	a0,0(a0)

8001ef38 <sys_open>:
sys_open():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:181
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_recv(pid_store, event_store, timeout);
}

static uint32_t
sys_open(uint32_t arg[]) {
8001ef38:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:184
    const char *path = (const char *)arg[0];
    uint32_t open_flags = (uint32_t)arg[1];
    return sysfile_open(path, open_flags);
8001ef3c:	8c450004 	lw	a1,4(v0)
8001ef40:	080033de 	j	8000cf78 <sysfile_open>
8001ef44:	8c840000 	lw	a0,0(a0)

8001ef48 <sys_event_recv>:
sys_event_recv():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:173
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_send(pid, event, timeout);
}

static uint32_t
sys_event_recv(uint32_t arg[]) {
8001ef48:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:177
    int *pid_store = (int *)arg[0];
    int *event_store = (int *)arg[1];
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_recv(pid_store, event_store, timeout);
8001ef4c:	8c450004 	lw	a1,4(v0)
8001ef50:	8c840000 	lw	a0,0(a0)
8001ef54:	08006090 	j	80018240 <ipc_event_recv>
8001ef58:	8c460008 	lw	a2,8(v0)

8001ef5c <sys_event_send>:
sys_event_send():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:165
    int *value_store = (int *)arg[1];
    return ipc_sem_get_value(sem_id, value_store);
}

static uint32_t
sys_event_send(uint32_t arg[]) {
8001ef5c:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:169
    int pid = (int)arg[0];
    int event = (int)arg[1];
    unsigned int timeout = (unsigned int)arg[2];
    return ipc_event_send(pid, event, timeout);
8001ef60:	8c450004 	lw	a1,4(v0)
8001ef64:	8c840000 	lw	a0,0(a0)
8001ef68:	08005ffd 	j	80017ff4 <ipc_event_send>
8001ef6c:	8c460008 	lw	a2,8(v0)

8001ef70 <sys_sem_get_value>:
sys_sem_get_value():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:158
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_free(sem_id);
}

static uint32_t
sys_sem_get_value(uint32_t arg[]) {
8001ef70:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:161
    sem_t sem_id = (sem_t)arg[0];
    int *value_store = (int *)arg[1];
    return ipc_sem_get_value(sem_id, value_store);
8001ef74:	8c450004 	lw	a1,4(v0)
8001ef78:	0800690b 	j	8001a42c <ipc_sem_get_value>
8001ef7c:	8c840000 	lw	a0,0(a0)

8001ef80 <sys_sem_free>:
sys_sem_free():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:154
}

static uint32_t
sys_sem_free(uint32_t arg[]) {
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_free(sem_id);
8001ef80:	080068d0 	j	8001a340 <ipc_sem_free>
8001ef84:	8c840000 	lw	a0,0(a0)

8001ef88 <sys_sem_wait>:
sys_sem_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:145
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_post(sem_id);
}

static uint32_t
sys_sem_wait(uint32_t arg[]) {
8001ef88:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:148
    sem_t sem_id = (sem_t)arg[0];
    unsigned int timeout = (unsigned int)arg[1];
    return ipc_sem_wait(sem_id, timeout);
8001ef8c:	8c450004 	lw	a1,4(v0)
8001ef90:	08006884 	j	8001a210 <ipc_sem_wait>
8001ef94:	8c840000 	lw	a0,0(a0)

8001ef98 <sys_sem_post>:
sys_sem_post():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:141
}

static uint32_t
sys_sem_post(uint32_t arg[]) {
    sem_t sem_id = (sem_t)arg[0];
    return ipc_sem_post(sem_id);
8001ef98:	0800685e 	j	8001a178 <ipc_sem_post>
8001ef9c:	8c840000 	lw	a0,0(a0)

8001efa0 <sys_sem_init>:
sys_sem_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:135
}

static uint32_t
sys_sem_init(uint32_t arg[]) {
    int value = (int)arg[0];
    return ipc_sem_init(value);
8001efa0:	08006832 	j	8001a0c8 <ipc_sem_init>
8001efa4:	8c840000 	lw	a0,0(a0)

8001efa8 <sys_pgdir>:
sys_pgdir():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:127
    kputchar(c);
    return 0;
}

static uint32_t
sys_pgdir(uint32_t arg[]) {
8001efa8:	27bdffe8 	addiu	sp,sp,-24
8001efac:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:128
    print_pgdir();
8001efb0:	0c00747f 	jal	8001d1fc <print_pgdir>
8001efb4:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:130
    return 0;
}
8001efb8:	8fbf0014 	lw	ra,20(sp)
8001efbc:	00001021 	move	v0,zero
8001efc0:	03e00008 	jr	ra
8001efc4:	27bd0018 	addiu	sp,sp,24

8001efc8 <sys_putc>:
sys_putc():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:122
}

static uint32_t
sys_putc(uint32_t arg[]) {
    int c = (int)arg[0];
    kputchar(c);
8001efc8:	8c840000 	lw	a0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:120
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_shmem(addr_store, len, mmap_flags);
}

static uint32_t
sys_putc(uint32_t arg[]) {
8001efcc:	27bdffe8 	addiu	sp,sp,-24
8001efd0:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:122
    int c = (int)arg[0];
    kputchar(c);
8001efd4:	0c007b04 	jal	8001ec10 <kputchar>
8001efd8:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:124
    return 0;
}
8001efdc:	8fbf0014 	lw	ra,20(sp)
8001efe0:	00001021 	move	v0,zero
8001efe4:	03e00008 	jr	ra
8001efe8:	27bd0018 	addiu	sp,sp,24

8001efec <sys_shmem>:
sys_shmem():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:112
    size_t len = (size_t)arg[1];
    return do_munmap(addr, len);
}

static uint32_t
sys_shmem(uint32_t arg[]) {
8001efec:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:116
    uintptr_t *addr_store = (uintptr_t *)arg[0];
    size_t len = (size_t)arg[1];
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_shmem(addr_store, len, mmap_flags);
8001eff0:	8c450004 	lw	a1,4(v0)
8001eff4:	8c840000 	lw	a0,0(a0)
8001eff8:	08004395 	j	80010e54 <do_shmem>
8001effc:	8c460008 	lw	a2,8(v0)

8001f000 <sys_munmap>:
sys_munmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:105
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_mmap(addr_store, len, mmap_flags);
}

static uint32_t
sys_munmap(uint32_t arg[]) {
8001f000:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:108
    uintptr_t addr = (uintptr_t)arg[0];
    size_t len = (size_t)arg[1];
    return do_munmap(addr, len);
8001f004:	8c450004 	lw	a1,4(v0)
8001f008:	08004374 	j	80010dd0 <do_munmap>
8001f00c:	8c840000 	lw	a0,0(a0)

8001f010 <sys_mmap>:
sys_mmap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:97
    uintptr_t *brk_store = (uintptr_t *)arg[0];
    return do_brk(brk_store);
}

static uint32_t
sys_mmap(uint32_t arg[]) {
8001f010:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:101
    uintptr_t *addr_store = (uintptr_t *)arg[0];
    size_t len = (size_t)arg[1];
    uint32_t mmap_flags = (uint32_t)arg[2];
    return do_mmap(addr_store, len, mmap_flags);
8001f014:	8c450004 	lw	a1,4(v0)
8001f018:	8c840000 	lw	a0,0(a0)
8001f01c:	0800431e 	j	80010c78 <do_mmap>
8001f020:	8c460008 	lw	a2,8(v0)

8001f024 <sys_brk>:
sys_brk():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:93
}

static uint32_t
sys_brk(uint32_t arg[]) {
    uintptr_t *brk_store = (uintptr_t *)arg[0];
    return do_brk(brk_store);
8001f024:	080041a2 	j	80010688 <do_brk>
8001f028:	8c840000 	lw	a0,0(a0)

8001f02c <sys_kill>:
sys_kill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:77
}

static uint32_t
sys_kill(uint32_t arg[]) {
    int pid = (int)arg[0];
    return do_kill(pid, -E_KILLED);
8001f02c:	8c840000 	lw	a0,0(a0)
8001f030:	08004187 	j	8001061c <do_kill>
8001f034:	2405ffdb 	li	a1,-37

8001f038 <sys_sleep>:
sys_sleep():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:71
}

static uint32_t
sys_sleep(uint32_t arg[]) {
    unsigned int time = (unsigned int)arg[0];
    return do_sleep(time);
8001f038:	0800424a 	j	80010928 <do_sleep>
8001f03c:	8c840000 	lw	a0,0(a0)

8001f040 <sys_yield>:
sys_yield():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:65
    return do_exit_thread(error_code);
}

static uint32_t
sys_yield(uint32_t arg[]) {
    return do_yield();
8001f040:	08003fd6 	j	8000ff58 <do_yield>
8001f044:	00000000 	nop

8001f048 <sys_exit_thread>:
sys_exit_thread():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:60
}

static uint32_t
sys_exit_thread(uint32_t arg[]) {
    int error_code = (int)arg[0];
    return do_exit_thread(error_code);
8001f048:	08003d44 	j	8000f510 <do_exit_thread>
8001f04c:	8c840000 	lw	a0,0(a0)

8001f050 <sys_clone>:
sys_clone():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:48
    return do_execve(name, argv, envp);
}

static uint32_t
sys_clone(uint32_t arg[]) {
    struct trapframe *tf = pls_read(current)->tf;
8001f050:	3c028015 	lui	v0,0x8015
8001f054:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:50
    uint32_t clone_flags = (uint32_t)arg[0];
    uintptr_t stack = (uintptr_t)arg[1];
8001f058:	8c850004 	lw	a1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:49
}

static uint32_t
sys_clone(uint32_t arg[]) {
    struct trapframe *tf = pls_read(current)->tf;
    uint32_t clone_flags = (uint32_t)arg[0];
8001f05c:	8c840000 	lw	a0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:51
    uintptr_t stack = (uintptr_t)arg[1];
    if (stack == 0) {
8001f060:	14a00002 	bnez	a1,8001f06c <sys_clone+0x1c>
8001f064:	8c460054 	lw	a2,84(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:52
        stack = tf->tf_regs.reg_r[MIPS_REG_SP];
8001f068:	8cc50088 	lw	a1,136(a2)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:54
    }
    return do_fork(clone_flags, stack, tf);
8001f06c:	08003b75 	j	8000edd4 <do_fork>
8001f070:	00000000 	nop

8001f074 <sys_fork>:
sys_fork():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:26
    return do_exit(error_code);
}

static uint32_t
sys_fork(uint32_t arg[]) {
    struct trapframe *tf = current->tf;
8001f074:	3c028015 	lui	v0,0x8015
8001f078:	8c4277a4 	lw	v0,30628(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:28
    uintptr_t stack = tf->tf_regs.reg_r[MIPS_REG_SP];
    return do_fork(0, stack, tf);
8001f07c:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:26
    return do_exit(error_code);
}

static uint32_t
sys_fork(uint32_t arg[]) {
    struct trapframe *tf = current->tf;
8001f080:	8c460054 	lw	a2,84(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:28
    uintptr_t stack = tf->tf_regs.reg_r[MIPS_REG_SP];
    return do_fork(0, stack, tf);
8001f084:	08003b75 	j	8000edd4 <do_fork>
8001f088:	8cc50088 	lw	a1,136(a2)

8001f08c <sys_exec>:
sys_exec():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:39
    int *store = (int *)arg[1];
    return do_wait(pid, store);
}

static uint32_t
sys_exec(uint32_t arg[]) {
8001f08c:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:43
    const char *name = (const char *)arg[0];
    const char **argv = (const char **)arg[1];
    const char **envp = (const char **)arg[2];
    return do_execve(name, argv, envp);
8001f090:	8c450004 	lw	a1,4(v0)
8001f094:	8c840000 	lw	a0,0(a0)
8001f098:	08003d6c 	j	8000f5b0 <do_execve>
8001f09c:	8c460008 	lw	a2,8(v0)

8001f0a0 <sys_wait>:
sys_wait():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:32
    uintptr_t stack = tf->tf_regs.reg_r[MIPS_REG_SP];
    return do_fork(0, stack, tf);
}

static uint32_t
sys_wait(uint32_t arg[]) {
8001f0a0:	00801021 	move	v0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:35
    int pid = (int)arg[0];
    int *store = (int *)arg[1];
    return do_wait(pid, store);
8001f0a4:	8c450004 	lw	a1,4(v0)
8001f0a8:	08003fdd 	j	8000ff74 <do_wait>
8001f0ac:	8c840000 	lw	a0,0(a0)

8001f0b0 <sys_exit>:
sys_exit():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:21
extern volatile int ticks;

static uint32_t
sys_exit(uint32_t arg[]) {
    int error_code = (int)arg[0];
    return do_exit(error_code);
8001f0b0:	08003d4a 	j	8000f528 <do_exit>
8001f0b4:	8c840000 	lw	a0,0(a0)

8001f0b8 <syscall>:
syscall():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:353
};

#define NUM_SYSCALLS        ((sizeof(syscalls)) / (sizeof(syscalls[0])))

void syscall(void)
{
8001f0b8:	27bdffb8 	addiu	sp,sp,-72
8001f0bc:	afb10040 	sw	s1,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:354
	assert(current != NULL);
8001f0c0:	3c118015 	lui	s1,0x8015
8001f0c4:	8e2277a4 	lw	v0,30628(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:353
};

#define NUM_SYSCALLS        ((sizeof(syscalls)) / (sizeof(syscalls[0])))

void syscall(void)
{
8001f0c8:	afbf0044 	sw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:354
	assert(current != NULL);
8001f0cc:	1040002d 	beqz	v0,8001f184 <syscall+0xcc>
8001f0d0:	afb0003c 	sw	s0,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:355
	struct trapframe *tf = current->tf;
8001f0d4:	8c500054 	lw	s0,84(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:357
	uint32_t arg[5];
	int num = tf->tf_regs.reg_r[MIPS_REG_V0];
8001f0d8:	8e07001c 	lw	a3,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:360
	//num -= T_SYSCALL;
	//kprintf("$ %d %d\n",current->pid, num);
	if (num >= 0 && num < NUM_SYSCALLS) {
8001f0dc:	2ce200f3 	sltiu	v0,a3,243
8001f0e0:	10400019 	beqz	v0,8001f148 <syscall+0x90>
8001f0e4:	3c038002 	lui	v1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:361
		if (syscalls[num] != NULL) {
8001f0e8:	00071080 	sll	v0,a3,0x2
8001f0ec:	246309b8 	addiu	v1,v1,2488
8001f0f0:	00431021 	addu	v0,v0,v1
8001f0f4:	8c420000 	lw	v0,0(v0)
8001f0f8:	50400014 	beqzl	v0,8001f14c <syscall+0x94>
8001f0fc:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:365
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
8001f100:	8e040030 	lw	a0,48(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:362
	int num = tf->tf_regs.reg_r[MIPS_REG_V0];
	//num -= T_SYSCALL;
	//kprintf("$ %d %d\n",current->pid, num);
	if (num >= 0 && num < NUM_SYSCALLS) {
		if (syscalls[num] != NULL) {
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
8001f104:	8e070024 	lw	a3,36(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:363
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
8001f108:	8e060028 	lw	a2,40(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:364
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
8001f10c:	8e05002c 	lw	a1,44(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:366
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
8001f110:	8e030034 	lw	v1,52(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:365
	if (num >= 0 && num < NUM_SYSCALLS) {
		if (syscalls[num] != NULL) {
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
8001f114:	afa40024 	sw	a0,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:362
	int num = tf->tf_regs.reg_r[MIPS_REG_V0];
	//num -= T_SYSCALL;
	//kprintf("$ %d %d\n",current->pid, num);
	if (num >= 0 && num < NUM_SYSCALLS) {
		if (syscalls[num] != NULL) {
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
8001f118:	afa70018 	sw	a3,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:363
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
8001f11c:	afa6001c 	sw	a2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:364
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
8001f120:	afa50020 	sw	a1,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:366
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
8001f124:	afa30028 	sw	v1,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:367
			tf->tf_regs.reg_r[MIPS_REG_V0] = syscalls[num] (arg);
8001f128:	0040f809 	jalr	v0
8001f12c:	27a40018 	addiu	a0,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:374
		}
	}
	print_trapframe(tf);
	panic("undefined syscall %d, pid = %d, name = %s.\n",
	      num, current->pid, current->name);
}
8001f130:	8fbf0044 	lw	ra,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:367
			arg[0] = tf->tf_regs.reg_r[MIPS_REG_A0];
			arg[1] = tf->tf_regs.reg_r[MIPS_REG_A1];
			arg[2] = tf->tf_regs.reg_r[MIPS_REG_A2];
			arg[3] = tf->tf_regs.reg_r[MIPS_REG_A3];
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
			tf->tf_regs.reg_r[MIPS_REG_V0] = syscalls[num] (arg);
8001f134:	ae02001c 	sw	v0,28(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:374
		}
	}
	print_trapframe(tf);
	panic("undefined syscall %d, pid = %d, name = %s.\n",
	      num, current->pid, current->name);
}
8001f138:	8fb10040 	lw	s1,64(sp)
8001f13c:	8fb0003c 	lw	s0,60(sp)
8001f140:	03e00008 	jr	ra
8001f144:	27bd0048 	addiu	sp,sp,72
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:371
			arg[4] = tf->tf_regs.reg_r[MIPS_REG_T0];
			tf->tf_regs.reg_r[MIPS_REG_V0] = syscalls[num] (arg);
			return;
		}
	}
	print_trapframe(tf);
8001f148:	02002021 	move	a0,s0
8001f14c:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f150:	afa70030 	sw	a3,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:372
	panic("undefined syscall %d, pid = %d, name = %s.\n",
8001f154:	8e2277a4 	lw	v0,30628(s1)
8001f158:	8fa70030 	lw	a3,48(sp)
8001f15c:	3c048002 	lui	a0,0x8002
8001f160:	8c430004 	lw	v1,4(v0)
8001f164:	3c068002 	lui	a2,0x8002
8001f168:	24420060 	addiu	v0,v0,96
8001f16c:	2484494c 	addiu	a0,a0,18764
8001f170:	24050175 	li	a1,373
8001f174:	24c64958 	addiu	a2,a2,18776
8001f178:	afa30010 	sw	v1,16(sp)
8001f17c:	0c006b13 	jal	8001ac4c <__panic>
8001f180:	afa20014 	sw	v0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/syscall/syscall.c:354

#define NUM_SYSCALLS        ((sizeof(syscalls)) / (sizeof(syscalls[0])))

void syscall(void)
{
	assert(current != NULL);
8001f184:	3c048002 	lui	a0,0x8002
8001f188:	3c068002 	lui	a2,0x8002
8001f18c:	3c078002 	lui	a3,0x8002
8001f190:	2484494c 	addiu	a0,a0,18764
8001f194:	24050162 	li	a1,354
8001f198:	24c60e48 	addiu	a2,a2,3656
8001f19c:	0c006b13 	jal	8001ac4c <__panic>
8001f1a0:	24e73358 	addiu	a3,a3,13144

8001f1a4 <mp_set_mm_pagetable>:
mp_set_mm_pagetable():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:11

PLS int pls_lapic_id;
PLS int pls_lcpu_idx;
PLS int pls_lcpu_count;
void mp_set_mm_pagetable(struct mm_struct *mm)
{
8001f1a4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:12
	if (mm != NULL && mm->pgdir != NULL)
8001f1a8:	1080000d 	beqz	a0,8001f1e0 <mp_set_mm_pagetable+0x3c>
8001f1ac:	afbf0014 	sw	ra,20(sp)
8001f1b0:	8c870010 	lw	a3,16(a0)
8001f1b4:	10e0000a 	beqz	a3,8001f1e0 <mp_set_mm_pagetable+0x3c>
8001f1b8:	3c028000 	lui	v0,0x8000
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:13
		lcr3(PADDR(mm->pgdir));
8001f1bc:	24421000 	addiu	v0,v0,4096
8001f1c0:	00e2102b 	sltu	v0,a3,v0
8001f1c4:	1440000c 	bnez	v0,8001f1f8 <mp_set_mm_pagetable+0x54>
8001f1c8:	3c048002 	lui	a0,0x8002
8001f1cc:	0c00742a 	jal	8001d0a8 <lcr3>
8001f1d0:	00e02021 	move	a0,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:17
	else
		lcr3(boot_cr3);
	tlb_invalidate_all();
}
8001f1d4:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:16
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
	else
		lcr3(boot_cr3);
	tlb_invalidate_all();
8001f1d8:	08007924 	j	8001e490 <tlb_invalidate_all>
8001f1dc:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:15
void mp_set_mm_pagetable(struct mm_struct *mm)
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
	else
		lcr3(boot_cr3);
8001f1e0:	3c028015 	lui	v0,0x8015
8001f1e4:	0c00742a 	jal	8001d0a8 <lcr3>
8001f1e8:	8c44779c 	lw	a0,30620(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:17
	tlb_invalidate_all();
}
8001f1ec:	8fbf0014 	lw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:16
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
	else
		lcr3(boot_cr3);
	tlb_invalidate_all();
8001f1f0:	08007924 	j	8001e490 <tlb_invalidate_all>
8001f1f4:	27bd0018 	addiu	sp,sp,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:13
PLS int pls_lcpu_idx;
PLS int pls_lcpu_count;
void mp_set_mm_pagetable(struct mm_struct *mm)
{
	if (mm != NULL && mm->pgdir != NULL)
		lcr3(PADDR(mm->pgdir));
8001f1f8:	3c068002 	lui	a2,0x8002
8001f1fc:	24844984 	addiu	a0,a0,18820
8001f200:	2405000d 	li	a1,13
8001f204:	0c006b13 	jal	8001ac4c <__panic>
8001f208:	24c62a50 	addiu	a2,a2,10832

8001f20c <mp_tlb_invalidate>:
mp_tlb_invalidate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:21
	tlb_invalidate_all();
}

void mp_tlb_invalidate(pgd_t * pgdir, uintptr_t la)
{
	tlb_invalidate_all();
8001f20c:	08007924 	j	8001e490 <tlb_invalidate_all>
8001f210:	00000000 	nop

8001f214 <mp_tlb_update>:
mp_tlb_update():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:26
}

void mp_tlb_update(pgd_t * pgdir, uintptr_t la)
{
	tlb_invalidate_all();
8001f214:	08007924 	j	8001e490 <tlb_invalidate_all>
8001f218:	00000000 	nop

8001f21c <mp_init>:
mp_init():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:31
}

int mp_init(void)
{
	pls_write(lapic_id, 0);
8001f21c:	3c028015 	lui	v0,0x8015
8001f220:	ac4077b0 	sw	zero,30640(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:32
	pls_write(lcpu_idx, 0);
8001f224:	3c028015 	lui	v0,0x8015
8001f228:	ac407790 	sw	zero,30608(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:33
	pls_write(lcpu_count, 1);
8001f22c:	24030001 	li	v1,1
8001f230:	3c028015 	lui	v0,0x8015
8001f234:	ac4377a0 	sw	v1,30624(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/mp.c:36

	return 0;
}
8001f238:	03e00008 	jr	ra
8001f23c:	00001021 	move	v0,zero

8001f240 <trap_in_kernel>:
trap_in_kernel():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f240:	8c820004 	lw	v0,4(a0)
8001f244:	30420010 	andi	v0,v0,0x10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:58
}
8001f248:	03e00008 	jr	ra
8001f24c:	2c420001 	sltiu	v0,v0,1

8001f250 <print_regs>:
print_regs():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:61

void print_regs(struct pushregs *regs)
{
8001f250:	27bdffd0 	addiu	sp,sp,-48
8001f254:	afb50028 	sw	s5,40(sp)
8001f258:	afb40024 	sw	s4,36(sp)
8001f25c:	afb30020 	sw	s3,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:64
	int i;
	for (i = 0; i < 30; i++) {
		kprintf(" $");
8001f260:	3c158002 	lui	s5,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:66
		printbase10(i + 1);
		kprintf("\t: ");
8001f264:	3c148002 	lui	s4,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:68
		printhex(regs->reg_r[i]);
		kprintf("\n\r");
8001f268:	3c138002 	lui	s3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:61
{
	return !(tf->tf_status & KSU_USER);
}

void print_regs(struct pushregs *regs)
{
8001f26c:	afb2001c 	sw	s2,28(sp)
8001f270:	afb10018 	sw	s1,24(sp)
8001f274:	afb00014 	sw	s0,20(sp)
8001f278:	afbf002c 	sw	ra,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:63
	int i;
	for (i = 0; i < 30; i++) {
8001f27c:	00808821 	move	s1,a0
8001f280:	00008021 	move	s0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:64
		kprintf(" $");
8001f284:	26b5498c 	addiu	s5,s5,18828
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:66
		printbase10(i + 1);
		kprintf("\t: ");
8001f288:	26944990 	addiu	s4,s4,18832
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:68
		printhex(regs->reg_r[i]);
		kprintf("\n\r");
8001f28c:	2673476c 	addiu	s3,s3,18284
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:63
}

void print_regs(struct pushregs *regs)
{
	int i;
	for (i = 0; i < 30; i++) {
8001f290:	2412001e 	li	s2,30
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:64
		kprintf(" $");
8001f294:	02a02021 	move	a0,s5
8001f298:	0c007aa6 	jal	8001ea98 <kprintf>
8001f29c:	26100001 	addiu	s0,s0,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:65
		printbase10(i + 1);
8001f2a0:	0c007ac5 	jal	8001eb14 <printbase10>
8001f2a4:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:66
		kprintf("\t: ");
8001f2a8:	0c007aa6 	jal	8001ea98 <kprintf>
8001f2ac:	02802021 	move	a0,s4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:67
		printhex(regs->reg_r[i]);
8001f2b0:	8e240000 	lw	a0,0(s1)
8001f2b4:	0c007ab2 	jal	8001eac8 <printhex>
8001f2b8:	26310004 	addiu	s1,s1,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:68
		kprintf("\n\r");
8001f2bc:	0c007aa6 	jal	8001ea98 <kprintf>
8001f2c0:	02602021 	move	a0,s3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:63
}

void print_regs(struct pushregs *regs)
{
	int i;
	for (i = 0; i < 30; i++) {
8001f2c4:	5612fff4 	bnel	s0,s2,8001f298 <print_regs+0x48>
8001f2c8:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:70
		printbase10(i + 1);
		kprintf("\t: ");
		printhex(regs->reg_r[i]);
		kprintf("\n\r");
	}
}
8001f2cc:	8fbf002c 	lw	ra,44(sp)
8001f2d0:	8fb50028 	lw	s5,40(sp)
8001f2d4:	8fb40024 	lw	s4,36(sp)
8001f2d8:	8fb30020 	lw	s3,32(sp)
8001f2dc:	8fb2001c 	lw	s2,28(sp)
8001f2e0:	8fb10018 	lw	s1,24(sp)
8001f2e4:	8fb00014 	lw	s0,20(sp)
8001f2e8:	03e00008 	jr	ra
8001f2ec:	27bd0030 	addiu	sp,sp,48

8001f2f0 <print_trapframe>:
print_trapframe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:73

void print_trapframe(struct trapframe *tf)
{
8001f2f0:	27bdffe0 	addiu	sp,sp,-32
8001f2f4:	afb00014 	sw	s0,20(sp)
8001f2f8:	00808021 	move	s0,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:74
	PRINT_HEX("trapframe at ", tf);
8001f2fc:	3c048002 	lui	a0,0x8002
8001f300:	2484499c 	addiu	a0,a0,18844
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:73
		kprintf("\n\r");
	}
}

void print_trapframe(struct trapframe *tf)
{
8001f304:	afbf001c 	sw	ra,28(sp)
8001f308:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:74
	PRINT_HEX("trapframe at ", tf);
8001f30c:	0c007aa6 	jal	8001ea98 <kprintf>
8001f310:	3c118002 	lui	s1,0x8002
8001f314:	0c007ab2 	jal	8001eac8 <printhex>
8001f318:	02002021 	move	a0,s0
8001f31c:	0c007aa6 	jal	8001ea98 <kprintf>
8001f320:	26243f4c 	addiu	a0,s1,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:75
	print_regs(&tf->tf_regs);
8001f324:	0c007c94 	jal	8001f250 <print_regs>
8001f328:	26040018 	addiu	a0,s0,24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:76
	PRINT_HEX("\r\n $ra: ", tf->tf_ra);
8001f32c:	3c048002 	lui	a0,0x8002
8001f330:	0c007aa6 	jal	8001ea98 <kprintf>
8001f334:	248449ac 	addiu	a0,a0,18860
8001f338:	0c007ab2 	jal	8001eac8 <printhex>
8001f33c:	8e040014 	lw	a0,20(s0)
8001f340:	0c007aa6 	jal	8001ea98 <kprintf>
8001f344:	26243f4c 	addiu	a0,s1,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:77
	PRINT_HEX("\r\n BadVA: ", tf->tf_vaddr);
8001f348:	3c048002 	lui	a0,0x8002
8001f34c:	0c007aa6 	jal	8001ea98 <kprintf>
8001f350:	248449b8 	addiu	a0,a0,18872
8001f354:	0c007ab2 	jal	8001eac8 <printhex>
8001f358:	8e040000 	lw	a0,0(s0)
8001f35c:	0c007aa6 	jal	8001ea98 <kprintf>
8001f360:	26243f4c 	addiu	a0,s1,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:78
	PRINT_HEX("\r\n Status: ", tf->tf_status);
8001f364:	3c048002 	lui	a0,0x8002
8001f368:	0c007aa6 	jal	8001ea98 <kprintf>
8001f36c:	248449c4 	addiu	a0,a0,18884
8001f370:	0c007ab2 	jal	8001eac8 <printhex>
8001f374:	8e040004 	lw	a0,4(s0)
8001f378:	0c007aa6 	jal	8001ea98 <kprintf>
8001f37c:	26243f4c 	addiu	a0,s1,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:79
	PRINT_HEX("\r\n Cause: ", tf->tf_cause);
8001f380:	3c048002 	lui	a0,0x8002
8001f384:	0c007aa6 	jal	8001ea98 <kprintf>
8001f388:	248449d0 	addiu	a0,a0,18896
8001f38c:	0c007ab2 	jal	8001eac8 <printhex>
8001f390:	8e040008 	lw	a0,8(s0)
8001f394:	0c007aa6 	jal	8001ea98 <kprintf>
8001f398:	26243f4c 	addiu	a0,s1,16204
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:80
	PRINT_HEX("\r\n EPC ", tf->tf_epc);
8001f39c:	3c048002 	lui	a0,0x8002
8001f3a0:	0c007aa6 	jal	8001ea98 <kprintf>
8001f3a4:	248449dc 	addiu	a0,a0,18908
8001f3a8:	0c007ab2 	jal	8001eac8 <printhex>
8001f3ac:	8e040090 	lw	a0,144(s0)
8001f3b0:	0c007aa6 	jal	8001ea98 <kprintf>
8001f3b4:	26243f4c 	addiu	a0,s1,16204
trap_in_kernel():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f3b8:	8e020004 	lw	v0,4(s0)
8001f3bc:	30420010 	andi	v0,v0,0x10
print_trapframe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:81
	PRINT_HEX("\r\n $ra: ", tf->tf_ra);
	PRINT_HEX("\r\n BadVA: ", tf->tf_vaddr);
	PRINT_HEX("\r\n Status: ", tf->tf_status);
	PRINT_HEX("\r\n Cause: ", tf->tf_cause);
	PRINT_HEX("\r\n EPC ", tf->tf_epc);
	if (!trap_in_kernel(tf)) {
8001f3c0:	50400016 	beqzl	v0,8001f41c <print_trapframe+0x12c>
8001f3c4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:82
		kprintf("\r\nTrap in usermode: ");
8001f3c8:	3c048002 	lui	a0,0x8002
8001f3cc:	0c007aa6 	jal	8001ea98 <kprintf>
8001f3d0:	248449e4 	addiu	a0,a0,18916
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:86
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001f3d4:	8e020008 	lw	v0,8(s0)
8001f3d8:	7c422080 	ext	v0,v0,0x2,0x5
trapname():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:49
		"Breakpoint",
		"Reserved (illegal) instruction",
		"Coprocessor unusable",
		"Arithmetic overflow",
	};
	if (trapno <= 12)
8001f3dc:	2843000d 	slti	v1,v0,13
8001f3e0:	50600016 	beqzl	v1,8001f43c <print_trapframe+0x14c>
8001f3e4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:50
		return excnames[trapno];
8001f3e8:	3c038002 	lui	v1,0x8002
8001f3ec:	24630db0 	addiu	v1,v1,3504
8001f3f0:	00021080 	sll	v0,v0,0x2
8001f3f4:	00431021 	addu	v0,v0,v1
print_trapframe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:86
	if (!trap_in_kernel(tf)) {
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001f3f8:	0c007aa6 	jal	8001ea98 <kprintf>
8001f3fc:	8c440000 	lw	a0,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:88
	kprintf("\n\r");
}
8001f400:	8fbf001c 	lw	ra,28(sp)
8001f404:	8fb10018 	lw	s1,24(sp)
8001f408:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:87
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
	kprintf("\n\r");
8001f40c:	3c048002 	lui	a0,0x8002
8001f410:	2484476c 	addiu	a0,a0,18284
8001f414:	08007aa6 	j	8001ea98 <kprintf>
8001f418:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:84
	PRINT_HEX("\r\n Cause: ", tf->tf_cause);
	PRINT_HEX("\r\n EPC ", tf->tf_epc);
	if (!trap_in_kernel(tf)) {
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
8001f41c:	0c007aa6 	jal	8001ea98 <kprintf>
8001f420:	248449fc 	addiu	a0,a0,18940
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:86
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001f424:	8e020008 	lw	v0,8(s0)
8001f428:	7c422080 	ext	v0,v0,0x2,0x5
trapname():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:49
		"Breakpoint",
		"Reserved (illegal) instruction",
		"Coprocessor unusable",
		"Arithmetic overflow",
	};
	if (trapno <= 12)
8001f42c:	2843000d 	slti	v1,v0,13
8001f430:	1460ffee 	bnez	v1,8001f3ec <print_trapframe+0xfc>
8001f434:	3c038002 	lui	v1,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:52
		return excnames[trapno];
	else
		return "Unknown";
8001f438:	3c048002 	lui	a0,0x8002
print_trapframe():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:86
	if (!trap_in_kernel(tf)) {
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
8001f43c:	0c007aa6 	jal	8001ea98 <kprintf>
8001f440:	24844994 	addiu	a0,a0,18836
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:88
	kprintf("\n\r");
}
8001f444:	8fbf001c 	lw	ra,28(sp)
8001f448:	8fb10018 	lw	s1,24(sp)
8001f44c:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:87
		kprintf("\r\nTrap in usermode: ");
	} else {
		kprintf("\n\rTrap in kernel: ");
	}
	kprintf(trapname(GET_CAUSE_EXCODE(tf->tf_cause)));
	kprintf("\n\r");
8001f450:	3c048002 	lui	a0,0x8002
8001f454:	2484476c 	addiu	a0,a0,18284
8001f458:	08007aa6 	j	8001ea98 <kprintf>
8001f45c:	27bd0020 	addiu	sp,sp,32

8001f460 <handle_tlbmiss>:
handle_tlbmiss():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:189
		while (1) ;
	}
#endif
	//dump_tlb_all();
	static int entercnt = 0;
	entercnt++;
8001f460:	3c028015 	lui	v0,0x8015
8001f464:	8c47777c 	lw	a3,30588(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:193
	//kprintf("## enter handle_tlbmiss %d times\n\r", entercnt);

	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
8001f468:	3c038015 	lui	v1,0x8015
8001f46c:	8c637768 	lw	v1,30568(v1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:180
/* Hint:
 * 

 */
static void handle_tlbmiss(struct trapframe *tf, int write, int perm)//YX )
{
8001f470:	27bdffd8 	addiu	sp,sp,-40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:189
		while (1) ;
	}
#endif
	//dump_tlb_all();
	static int entercnt = 0;
	entercnt++;
8001f474:	24e70001 	addiu	a3,a3,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:180
/* Hint:
 * 

 */
static void handle_tlbmiss(struct trapframe *tf, int write, int perm)//YX )
{
8001f478:	afb40020 	sw	s4,32(sp)
8001f47c:	afb3001c 	sw	s3,28(sp)
8001f480:	afb20018 	sw	s2,24(sp)
8001f484:	afb00010 	sw	s0,16(sp)
8001f488:	afbf0024 	sw	ra,36(sp)
8001f48c:	afb10014 	sw	s1,20(sp)
8001f490:	00808021 	move	s0,a0
8001f494:	00a09021 	move	s2,a1
8001f498:	00c09821 	move	s3,a2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:189
		while (1) ;
	}
#endif
	//dump_tlb_all();
	static int entercnt = 0;
	entercnt++;
8001f49c:	ac47777c 	sw	a3,30588(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:193
	//kprintf("## enter handle_tlbmiss %d times\n\r", entercnt);

	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
8001f4a0:	10600095 	beqz	v1,8001f6f8 <handle_tlbmiss+0x298>
8001f4a4:	8c940004 	lw	s4,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:195
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
8001f4a8:	8c910000 	lw	s1,0(a0)
trap_in_kernel():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f4ac:	32940010 	andi	s4,s4,0x10
handle_tlbmiss():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:197
	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
	int ret = 0;
	pte_t *pte = get_pte(current_pgdir, tf->tf_vaddr, 0);
8001f4b0:	00602021 	move	a0,v1
8001f4b4:	02202821 	move	a1,s1
8001f4b8:	00003021 	move	a2,zero
8001f4bc:	0c005cd4 	jal	80017350 <get_pte>
8001f4c0:	2e940001 	sltiu	s4,s4,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:199
	//  )
	if (perm ||pte == NULL || ptep_invalid(pte) || (write && !ptep_u_write(pte))) {	//PTE miss, pgfault
8001f4c4:	16600035 	bnez	s3,8001f59c <handle_tlbmiss+0x13c>
8001f4c8:	00000000 	nop
8001f4cc:	10400037 	beqz	v0,8001f5ac <handle_tlbmiss+0x14c>
8001f4d0:	00002821 	move	a1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:337
//add by HHL
int ucore_in_interrupt()
{
	//panic("ucore_in_interrupt()");
	return 0;
}
8001f4d4:	8c450000 	lw	a1,0(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:199
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
	int ret = 0;
	pte_t *pte = get_pte(current_pgdir, tf->tf_vaddr, 0);
	//  )
	if (perm ||pte == NULL || ptep_invalid(pte) || (write && !ptep_u_write(pte))) {	//PTE miss, pgfault
8001f4d8:	50a00034 	beqzl	a1,8001f5ac <handle_tlbmiss+0x14c>
8001f4dc:	30a50001 	andi	a1,a1,0x1
8001f4e0:	16400054 	bnez	s2,8001f634 <handle_tlbmiss+0x1d4>
8001f4e4:	30a40006 	andi	a0,a1,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:209
		//permission check in tlb miss
		ret = pgfault_handler(tf, badaddr, get_error_code(write, pte));
	} else {		//tlb miss only, reload it
		/* refill two slot */
		/* check permission */
		if (in_kernel) {
8001f4e8:	16800060 	bnez	s4,8001f66c <handle_tlbmiss+0x20c>
8001f4ec:	30a30004 	andi	v1,a1,0x4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:215
			tlb_refill(badaddr, pte);
			//kprintf("## refill K\n\r");
			//dump_tlb_all();
			return;
		} else {
			if (!ptep_u_read(pte)) {
8001f4f0:	1060005a 	beqz	v1,8001f65c <handle_tlbmiss+0x1fc>
8001f4f4:	00a02021 	move	a0,a1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:219
				ret = -1;
				goto exit;
			}
			if (write && !ptep_u_write(pte)) {
8001f4f8:	12400004 	beqz	s2,8001f50c <handle_tlbmiss+0xac>
8001f4fc:	30a60006 	andi	a2,a1,0x6
8001f500:	24030006 	li	v1,6
8001f504:	14c30055 	bne	a2,v1,8001f65c <handle_tlbmiss+0x1fc>
8001f508:	00000000 	nop
tlb_refill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:137
{
	//kprintf("tlb_re ok\n\r");
	
	if (!pte)
		return;
	if (badaddr & (1 << 12))
8001f50c:	32231000 	andi	v1,s1,0x1000
8001f510:	14600075 	bnez	v1,8001f6e8 <handle_tlbmiss+0x288>
8001f514:	00a03021 	move	a2,a1
8001f518:	8c470004 	lw	a3,4(v0)
8001f51c:	00e03021 	move	a2,a3
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
		pte--;
	//kprintf("*pte=0x%08x\n\r",*pte);
	//kprintf("*pte+1=0x%08x\n\r",*(pte+1));
//#ifdef MACH_QEMU
	//kprintf("badaddr=0x%08x\n\r",badaddr);
	tlb_replace_random(0, badaddr & THUMIPS_TLB_ENTRYH_VPN2_MASK,
8001f520:	2403e000 	li	v1,-8192
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f524:	30820001 	andi	v0,a0,0x1
tlb_refill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
8001f528:	02238824 	and	s1,s1,v1
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f52c:	10400009 	beqz	v0,8001f554 <handle_tlbmiss+0xf4>
8001f530:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f534:	3c028000 	lui	v0,0x8000
8001f538:	00a21021 	addu	v0,a1,v0
8001f53c:	00021302 	srl	v0,v0,0xc
8001f540:	00021180 	sll	v0,v0,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f544:	3443001b 	ori	v1,v0,0x1b
ptep_s_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f548:	30840002 	andi	a0,a0,0x2
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f54c:	3442001f 	ori	v0,v0,0x1f
8001f550:	0044180b 	movn	v1,v0,a0
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f554:	30c40001 	andi	a0,a2,0x1
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f558:	10800009 	beqz	a0,8001f580 <handle_tlbmiss+0x120>
8001f55c:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f560:	3c048000 	lui	a0,0x8000
8001f564:	00e42021 	addu	a0,a3,a0
8001f568:	00042302 	srl	a0,a0,0xc
8001f56c:	00042180 	sll	a0,a0,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f570:	3482001b 	ori	v0,a0,0x1b
ptep_s_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f574:	30c60002 	andi	a2,a2,0x2
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f578:	3484001f 	ori	a0,a0,0x1f
8001f57c:	0086100b 	movn	v0,a0,a2
tlb_replace_random():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:105
				      unsigned int low0, unsigned int low1)
{
	//kprintf("entryhi=0x%08x\n\r",hi);
	//kprintf("entrylo0=0x%08x\n\r",low0);
	//kprintf("entrylo1=0x%08x\n\r",low1);
	write_c0_entrylo0(low0);
8001f580:	40831000 	mtc0	v1,c0_entrylo0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:106
	write_c0_pagemask(pagemask);
8001f584:	40802800 	mtc0	zero,c0_pagemask
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:107
	write_c0_entrylo1(low1);
8001f588:	40821800 	mtc0	v0,c0_entrylo1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:108
	write_c0_entryhi(hi);
8001f58c:	40915000 	mtc0	s1,c0_entryhi
tlb_write_random():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/asm/mipsregs.h:1310
		".set reorder");
}

static inline void tlb_write_random(void)
{
	__asm__ __volatile__(
8001f590:	42000006 	tlbwr
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f594:	08007d7a 	j	8001f5e8 <handle_tlbmiss+0x188>
8001f598:	8fbf0024 	lw	ra,36(sp)
get_error_code():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:132
extern pde_t *current_pgdir;

static inline int get_error_code(int write, pte_t * pte)
{
	int r = 0;
	if (pte != NULL && ptep_present(pte))
8001f59c:	10400003 	beqz	v0,8001f5ac <handle_tlbmiss+0x14c>
8001f5a0:	00002821 	move	a1,zero
8001f5a4:	8c450000 	lw	a1,0(v0)
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f5a8:	30a50001 	andi	a1,a1,0x1
pgfault_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:154
	extern struct mm_struct *check_mm_struct;
	if (check_mm_struct != NULL) {	//used for test check_swap
		//print_pgfault(tf);
	}
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
8001f5ac:	3c028015 	lui	v0,0x8015
8001f5b0:	8c4477b8 	lw	a0,30648(v0)
get_error_code():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:135
{
	int r = 0;
	if (pte != NULL && ptep_present(pte))
		r |= 0x01;
	if (write)
		r |= 0x02;
8001f5b4:	34a20002 	ori	v0,a1,0x2
8001f5b8:	0052280b 	movn	a1,v0,s2
pgfault_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:154
	extern struct mm_struct *check_mm_struct;
	if (check_mm_struct != NULL) {	//used for test check_swap
		//print_pgfault(tf);
	}
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
8001f5bc:	10800022 	beqz	a0,8001f648 <handle_tlbmiss+0x1e8>
8001f5c0:	3c028015 	lui	v0,0x8015
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:155
		assert(current == idleproc);
8001f5c4:	8c4377a4 	lw	v1,30628(v0)
8001f5c8:	3c028015 	lui	v0,0x8015
8001f5cc:	8c4277a8 	lw	v0,30632(v0)
8001f5d0:	54620051 	bnel	v1,v0,8001f718 <handle_tlbmiss+0x2b8>
8001f5d4:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:165
			//print_pgfault(tf);
			panic("unhandled page fault.\n\r");
		}
		mm = current->mm;
	}			//kprintf("  (do_pgfault(%x,%d,%x))  ", mm, error_code, addr);
	return do_pgfault(mm, error_code, addr);
8001f5d8:	0c0050c5 	jal	80014314 <do_pgfault>
8001f5dc:	02203021 	move	a2,s1
handle_tlbmiss():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:230
			return;
		}
	}

exit:
	if (ret) {
8001f5e0:	14400008 	bnez	v0,8001f604 <handle_tlbmiss+0x1a4>
8001f5e4:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f5e8:	8fb40020 	lw	s4,32(sp)
8001f5ec:	8fb3001c 	lw	s3,28(sp)
8001f5f0:	8fb20018 	lw	s2,24(sp)
8001f5f4:	8fb10014 	lw	s1,20(sp)
8001f5f8:	8fb00010 	lw	s0,16(sp)
8001f5fc:	03e00008 	jr	ra
8001f600:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:231
		}
	}

exit:
	if (ret) {
		print_trapframe(tf);
8001f604:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f608:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:232
		if (in_kernel) {
8001f60c:	16800049 	bnez	s4,8001f734 <handle_tlbmiss+0x2d4>
8001f610:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f614:	8fb40020 	lw	s4,32(sp)
8001f618:	8fb3001c 	lw	s3,28(sp)
8001f61c:	8fb20018 	lw	s2,24(sp)
8001f620:	8fb10014 	lw	s1,20(sp)
8001f624:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:235
	if (ret) {
		print_trapframe(tf);
		if (in_kernel) {
			panic("unhandled pgfault");
		} else {
			do_exit(-E_KILLED);
8001f628:	2404ffdb 	li	a0,-37
8001f62c:	08003d4a 	j	8000f528 <do_exit>
8001f630:	27bd0028 	addiu	sp,sp,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:199
	//print_trapframe(tf);
	uint32_t badaddr = tf->tf_vaddr;
	int ret = 0;
	pte_t *pte = get_pte(current_pgdir, tf->tf_vaddr, 0);
	//  )
	if (perm ||pte == NULL || ptep_invalid(pte) || (write && !ptep_u_write(pte))) {	//PTE miss, pgfault
8001f634:	24030006 	li	v1,6
8001f638:	5483ffdc 	bnel	a0,v1,8001f5ac <handle_tlbmiss+0x14c>
8001f63c:	30a50001 	andi	a1,a1,0x1
8001f640:	08007d3a 	j	8001f4e8 <handle_tlbmiss+0x88>
8001f644:	00000000 	nop
pgfault_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:158
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
		assert(current == idleproc);
		mm = check_mm_struct;
	} else {
		if (current == NULL) {
8001f648:	8c4277a4 	lw	v0,30628(v0)
8001f64c:	5040003f 	beqzl	v0,8001f74c <handle_tlbmiss+0x2ec>
8001f650:	3c048002 	lui	a0,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:163
			//print_trapframe(tf);
			//print_pgfault(tf);
			panic("unhandled page fault.\n\r");
		}
		mm = current->mm;
8001f654:	08007d76 	j	8001f5d8 <handle_tlbmiss+0x178>
8001f658:	8c440020 	lw	a0,32(v0)
handle_tlbmiss():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:231
		}
	}

exit:
	if (ret) {
		print_trapframe(tf);
8001f65c:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f660:	02002021 	move	a0,s0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:239
		} else {
			do_exit(-E_KILLED);
		}
	}
	return;
}
8001f664:	08007d85 	j	8001f614 <handle_tlbmiss+0x1b4>
8001f668:	8fbf0024 	lw	ra,36(sp)
tlb_refill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:137
{
	//kprintf("tlb_re ok\n\r");
	
	if (!pte)
		return;
	if (badaddr & (1 << 12))
8001f66c:	32231000 	andi	v1,s1,0x1000
8001f670:	1460001b 	bnez	v1,8001f6e0 <handle_tlbmiss+0x280>
8001f674:	00a02021 	move	a0,a1
8001f678:	8c440004 	lw	a0,4(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
		pte--;
	//kprintf("*pte=0x%08x\n\r",*pte);
	//kprintf("*pte+1=0x%08x\n\r",*(pte+1));
//#ifdef MACH_QEMU
	//kprintf("badaddr=0x%08x\n\r",badaddr);
	tlb_replace_random(0, badaddr & THUMIPS_TLB_ENTRYH_VPN2_MASK,
8001f67c:	2403e000 	li	v1,-8192
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
8001f680:	30a20001 	andi	v0,a1,0x1
tlb_refill():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:143
8001f684:	02238824 	and	s1,s1,v1
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f688:	10400009 	beqz	v0,8001f6b0 <handle_tlbmiss+0x250>
8001f68c:	00001821 	move	v1,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f690:	3c028000 	lui	v0,0x8000
8001f694:	00a21021 	addu	v0,a1,v0
8001f698:	00021302 	srl	v0,v0,0xc
8001f69c:	00021180 	sll	v0,v0,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f6a0:	3443001b 	ori	v1,v0,0x1b
ptep_s_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f6a4:	30a50002 	andi	a1,a1,0x2
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f6a8:	3442001f 	ori	v0,v0,0x1f
8001f6ac:	0045180b 	movn	v1,v0,a1
ptep_present():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:26
	return (*ptep == 0);
}

static inline int ptep_present(pte_t * ptep)
{
	return (*ptep & PTE_P);
8001f6b0:	30850001 	andi	a1,a0,0x1
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:119
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
	//kprintf("pa=0x%08x\n\r",t<<6);
	//kprintf("t=0x%08x\n\r",t);
	if (!ptep_present(&pte))
8001f6b4:	10a0ffb2 	beqz	a1,8001f580 <handle_tlbmiss+0x120>
8001f6b8:	00001021 	move	v0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:116

#define PTE2TLBLOW(x) (((((uint32_t)(*(x))-KERNBASE)>> 12)<<6)|THUMIPS_TLB_ENTRYL_V|THUMIPS_TLB_ENTRYL_D|(2<<3))
static inline uint32_t pte2tlblow(pte_t pte)
{
	//kprintf("pte=0x%08x\n\r",pte);
	uint32_t t = (((uint32_t) pte - 0x80000000) >> 12) <<6;
8001f6bc:	3c058000 	lui	a1,0x8000
8001f6c0:	00852821 	addu	a1,a0,a1
8001f6c4:	00052b02 	srl	a1,a1,0xc
8001f6c8:	00052980 	sll	a1,a1,0x6
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:124
	if (!ptep_present(&pte))
		return 0;
	t |= THUMIPS_TLB_ENTRYL_V;
	/* always ignore ASID */
	t |= THUMIPS_TLB_ENTRYL_G;
	t |= (3 << 3);
8001f6cc:	34a2001b 	ori	v0,a1,0x1b
ptep_s_write():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/../glue-kern/arch/mips/glue_pgmap.h:36
	return (*ptep & PTE_P);
}

static inline int ptep_s_write(pte_t * ptep)
{
	return (*ptep & PTE_W);
8001f6d0:	30840002 	andi	a0,a0,0x2
pte2tlblow():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:126
	if (ptep_s_write(&pte))
		t |= THUMIPS_TLB_ENTRYL_D;
8001f6d4:	34a5001f 	ori	a1,a1,0x1f
8001f6d8:	08007d60 	j	8001f580 <handle_tlbmiss+0x120>
8001f6dc:	00a4100b 	movn	v0,a1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/glue-ucore/thumips_tlb.h:137
{
	//kprintf("tlb_re ok\n\r");
	
	if (!pte)
		return;
	if (badaddr & (1 << 12))
8001f6e0:	08007d9f 	j	8001f67c <handle_tlbmiss+0x21c>
8001f6e4:	8c45fffc 	lw	a1,-4(v0)
tlb_refill():
8001f6e8:	8c45fffc 	lw	a1,-4(v0)
8001f6ec:	00c03821 	move	a3,a2
8001f6f0:	08007d48 	j	8001f520 <handle_tlbmiss+0xc0>
8001f6f4:	00a02021 	move	a0,a1
handle_tlbmiss():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:193
	static int entercnt = 0;
	entercnt++;
	//kprintf("## enter handle_tlbmiss %d times\n\r", entercnt);

	int in_kernel = trap_in_kernel(tf);
	assert(current_pgdir != NULL);
8001f6f8:	3c048002 	lui	a0,0x8002
8001f6fc:	3c068002 	lui	a2,0x8002
8001f700:	3c078002 	lui	a3,0x8002
8001f704:	24844a10 	addiu	a0,a0,18960
8001f708:	240500c1 	li	a1,193
8001f70c:	24c60e48 	addiu	a2,a2,3656
8001f710:	0c006b13 	jal	8001ac4c <__panic>
8001f714:	24e74a18 	addiu	a3,a3,18968
pgfault_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:155
	if (check_mm_struct != NULL) {	//used for test check_swap
		//print_pgfault(tf);
	}
	struct mm_struct *mm;
	if (check_mm_struct != NULL) {
		assert(current == idleproc);
8001f718:	3c068002 	lui	a2,0x8002
8001f71c:	3c078002 	lui	a3,0x8002
8001f720:	24844a10 	addiu	a0,a0,18960
8001f724:	2405009b 	li	a1,155
8001f728:	24c60e48 	addiu	a2,a2,3656
8001f72c:	0c006b13 	jal	8001ac4c <__panic>
8001f730:	24e74a30 	addiu	a3,a3,18992
handle_tlbmiss():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:233

exit:
	if (ret) {
		print_trapframe(tf);
		if (in_kernel) {
			panic("unhandled pgfault");
8001f734:	3c048002 	lui	a0,0x8002
8001f738:	3c068002 	lui	a2,0x8002
8001f73c:	24844a10 	addiu	a0,a0,18960
8001f740:	240500e9 	li	a1,233
8001f744:	0c006b13 	jal	8001ac4c <__panic>
8001f748:	24c64a5c 	addiu	a2,a2,19036
pgfault_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:161
		mm = check_mm_struct;
	} else {
		if (current == NULL) {
			//print_trapframe(tf);
			//print_pgfault(tf);
			panic("unhandled page fault.\n\r");
8001f74c:	3c068002 	lui	a2,0x8002
8001f750:	24844a10 	addiu	a0,a0,18960
8001f754:	240500a1 	li	a1,161
8001f758:	0c006b13 	jal	8001ac4c <__panic>
8001f75c:	24c64a44 	addiu	a2,a2,19012

8001f760 <trap_dispatch>:
trap_dispatch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:244
}

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
8001f760:	8c820008 	lw	v0,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:242
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
{
8001f764:	27bdffd0 	addiu	sp,sp,-48
8001f768:	afb10018 	sw	s1,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:244
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
8001f76c:	7c432080 	ext	v1,v0,0x2,0x5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:242
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
{
8001f770:	00808821 	move	s1,a0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:245
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f774:	2c64000b 	sltiu	a0,v1,11
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:242
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
{
8001f778:	afbf002c 	sw	ra,44(sp)
8001f77c:	afb50028 	sw	s5,40(sp)
8001f780:	afb40024 	sw	s4,36(sp)
8001f784:	afb30020 	sw	s3,32(sp)
8001f788:	afb2001c 	sw	s2,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:245
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f78c:	14800009 	bnez	a0,8001f7b4 <trap_dispatch+0x54>
8001f790:	afb00014 	sw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:285
			print_trapframe(tf);
			do_exit(-E_KILLED);
		}
		break;
	default:
		print_trapframe(tf);
8001f794:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f798:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:286
		panic("Unhandled Exception");
8001f79c:	3c048002 	lui	a0,0x8002
8001f7a0:	3c068002 	lui	a2,0x8002
8001f7a4:	24844a10 	addiu	a0,a0,18960
8001f7a8:	2405011e 	li	a1,286
8001f7ac:	0c006b13 	jal	8001ac4c <__panic>
8001f7b0:	24c64ad0 	addiu	a2,a2,19152
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:245

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f7b4:	3c048002 	lui	a0,0x8002
8001f7b8:	00031880 	sll	v1,v1,0x2
8001f7bc:	24840d84 	addiu	a0,a0,3460
8001f7c0:	00831821 	addu	v1,a0,v1
8001f7c4:	8c630000 	lw	v1,0(v1)
8001f7c8:	00600008 	jr	v1
8001f7cc:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:259
		break;
	case EX_TLBS:
		handle_tlbmiss(tf, 1, 0);
		break;
	case EX_RI:
		print_trapframe(tf);
8001f7d0:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f7d4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:260
		uint32_t *addr = (uint32_t *) (tf->tf_epc);
8001f7d8:	8e300090 	lw	s0,144(s1)
8001f7dc:	3c138002 	lui	s3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:262
		for (i = 0; i < 10; ++i, addr++)
			kprintf("[%x:%x]\n", addr, *addr);
8001f7e0:	26734a8c 	addiu	s3,s3,19084
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:241
		}
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
8001f7e4:	26120028 	addiu	s2,s0,40
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:262
		break;
	case EX_RI:
		print_trapframe(tf);
		uint32_t *addr = (uint32_t *) (tf->tf_epc);
		for (i = 0; i < 10; ++i, addr++)
			kprintf("[%x:%x]\n", addr, *addr);
8001f7e8:	8e060000 	lw	a2,0(s0)
8001f7ec:	02002821 	move	a1,s0
8001f7f0:	02602021 	move	a0,s3
8001f7f4:	0c007aa6 	jal	8001ea98 <kprintf>
8001f7f8:	26100004 	addiu	s0,s0,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:261
		handle_tlbmiss(tf, 1, 0);
		break;
	case EX_RI:
		print_trapframe(tf);
		uint32_t *addr = (uint32_t *) (tf->tf_epc);
		for (i = 0; i < 10; ++i, addr++)
8001f7fc:	5612fffb 	bnel	s0,s2,8001f7ec <trap_dispatch+0x8c>
8001f800:	8e060000 	lw	a2,0(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:264
			kprintf("[%x:%x]\n", addr, *addr);

		panic("hey man! Do NOT use that insn! insn=%x",
8001f804:	8e220090 	lw	v0,144(s1)
8001f808:	3c048002 	lui	a0,0x8002
8001f80c:	3c068002 	lui	a2,0x8002
8001f810:	8c470000 	lw	a3,0(v0)
8001f814:	24844a10 	addiu	a0,a0,18960
8001f818:	24050109 	li	a1,265
8001f81c:	0c006b13 	jal	8001ac4c <__panic>
8001f820:	24c64a98 	addiu	a2,a2,19096
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:245

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f824:	24100001 	li	s0,1
interrupt_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f828:	24120001 	li	s2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:241
		}
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
8001f82c:	26030007 	addiu	v1,s0,7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f830:	00721804 	sllv	v1,s2,v1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:107
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
				break;
			case COM1_IRQ:
				kprintf("COM1\n\r");
8001f834:	3c158002 	lui	s5,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f838:	00621824 	and	v1,v1,v0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:97
{
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
8001f83c:	24130008 	li	s3,8
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:99
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
			switch (i) {
8001f840:	24140004 	li	s4,4
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:107
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
				break;
			case COM1_IRQ:
				kprintf("COM1\n\r");
8001f844:	26b54a70 	addiu	s5,s5,19056
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f848:	1060000c 	beqz	v1,8001f87c <trap_dispatch+0x11c>
8001f84c:	2604ffff 	addiu	a0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:99
			switch (i) {
8001f850:	14800055 	bnez	a0,8001f9a8 <trap_dispatch+0x248>
8001f854:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:104
#ifdef DEBUG_INT
                                kprintf("INT - No %d\r\n", i);
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
8001f858:	0c006b4d 	jal	8001ad34 <clock_int_handler>
8001f85c:	00002021 	move	a0,zero
trap_dispatch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f860:	8e220008 	lw	v0,8(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:245

static void trap_dispatch(struct trapframe *tf)
{
	int i;
	int code = GET_CAUSE_EXCODE(tf->tf_cause);
	switch (code) {
8001f864:	26100001 	addiu	s0,s0,1
interrupt_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:241
		}
	}
	return;
}

static void trap_dispatch(struct trapframe *tf)
8001f868:	26030007 	addiu	v1,s0,7
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:98
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
8001f86c:	00721804 	sllv	v1,s2,v1
8001f870:	00621824 	and	v1,v1,v0
8001f874:	1460fff6 	bnez	v1,8001f850 <trap_dispatch+0xf0>
8001f878:	2604ffff 	addiu	a0,s0,-1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:97
{
	extern clock_int_handler(void *);
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
8001f87c:	1613fffa 	bne	s0,s3,8001f868 <trap_dispatch+0x108>
8001f880:	26100001 	addiu	s0,s0,1
trap_dispatch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f884:	8fbf002c 	lw	ra,44(sp)
8001f888:	8fb50028 	lw	s5,40(sp)
8001f88c:	8fb40024 	lw	s4,36(sp)
8001f890:	8fb30020 	lw	s3,32(sp)
8001f894:	8fb2001c 	lw	s2,28(sp)
8001f898:	8fb10018 	lw	s1,24(sp)
8001f89c:	8fb00014 	lw	s0,20(sp)
8001f8a0:	03e00008 	jr	ra
8001f8a4:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:250
	switch (code) {
	case EX_IRQ:
		interrupt_handler(tf);
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
8001f8a8:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f8ac:	8fbf002c 	lw	ra,44(sp)
8001f8b0:	8fb50028 	lw	s5,40(sp)
8001f8b4:	8fb40024 	lw	s4,36(sp)
8001f8b8:	8fb30020 	lw	s3,32(sp)
8001f8bc:	8fb2001c 	lw	s2,28(sp)
8001f8c0:	8fb10018 	lw	s1,24(sp)
8001f8c4:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:250
	switch (code) {
	case EX_IRQ:
		interrupt_handler(tf);
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
8001f8c8:	24050001 	li	a1,1
8001f8cc:	24060001 	li	a2,1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:253
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
8001f8d0:	08007d18 	j	8001f460 <handle_tlbmiss>
8001f8d4:	27bd0030 	addiu	sp,sp,48
8001f8d8:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f8dc:	8fbf002c 	lw	ra,44(sp)
8001f8e0:	8fb50028 	lw	s5,40(sp)
8001f8e4:	8fb40024 	lw	s4,36(sp)
8001f8e8:	8fb30020 	lw	s3,32(sp)
8001f8ec:	8fb2001c 	lw	s2,28(sp)
8001f8f0:	8fb10018 	lw	s1,24(sp)
8001f8f4:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:253
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
8001f8f8:	00002821 	move	a1,zero
8001f8fc:	00003021 	move	a2,zero
8001f900:	08007d18 	j	8001f460 <handle_tlbmiss>
8001f904:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:256
		break;
	case EX_TLBS:
		handle_tlbmiss(tf, 1, 0);
8001f908:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f90c:	8fbf002c 	lw	ra,44(sp)
8001f910:	8fb50028 	lw	s5,40(sp)
8001f914:	8fb40024 	lw	s4,36(sp)
8001f918:	8fb30020 	lw	s3,32(sp)
8001f91c:	8fb2001c 	lw	s2,28(sp)
8001f920:	8fb10018 	lw	s1,24(sp)
8001f924:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:256
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
		break;
	case EX_TLBS:
		handle_tlbmiss(tf, 1, 0);
8001f928:	24050001 	li	a1,1
8001f92c:	00003021 	move	a2,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:253
		break;
	case EX_MOD:
		handle_tlbmiss(tf, 1, 1);
		break;
	case EX_TLBL:
		handle_tlbmiss(tf, 0, 0);//YX
8001f930:	08007d18 	j	8001f460 <handle_tlbmiss>
8001f934:	27bd0030 	addiu	sp,sp,48
trap_in_kernel():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001f938:	8e220004 	lw	v0,4(s1)
8001f93c:	30420010 	andi	v0,v0,0x10
trap_dispatch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:276
		break;
		/* alignment error or access kernel
		 * address space in user mode */
	case EX_ADEL:
	case EX_ADES:
		if (trap_in_kernel(tf)) {
8001f940:	10400029 	beqz	v0,8001f9e8 <trap_dispatch+0x288>
8001f944:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:280
			print_trapframe(tf);
			panic("Alignment Error");
		} else {
			print_trapframe(tf);
8001f948:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f94c:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f950:	8fbf002c 	lw	ra,44(sp)
8001f954:	8fb50028 	lw	s5,40(sp)
8001f958:	8fb40024 	lw	s4,36(sp)
8001f95c:	8fb30020 	lw	s3,32(sp)
8001f960:	8fb2001c 	lw	s2,28(sp)
8001f964:	8fb10018 	lw	s1,24(sp)
8001f968:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:281
		if (trap_in_kernel(tf)) {
			print_trapframe(tf);
			panic("Alignment Error");
		} else {
			print_trapframe(tf);
			do_exit(-E_KILLED);
8001f96c:	2404ffdb 	li	a0,-37
8001f970:	08003d4a 	j	8000f528 <do_exit>
8001f974:	27bd0030 	addiu	sp,sp,48
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:269
		panic("hey man! Do NOT use that insn! insn=%x",
		      *(uint32_t *) (tf->tf_epc));
		break;
	case EX_SYS:
		//print_trapframe(tf);
		tf->tf_epc += 4;
8001f978:	8e220090 	lw	v0,144(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f97c:	8fbf002c 	lw	ra,44(sp)
8001f980:	8fb50028 	lw	s5,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:269
		panic("hey man! Do NOT use that insn! insn=%x",
		      *(uint32_t *) (tf->tf_epc));
		break;
	case EX_SYS:
		//print_trapframe(tf);
		tf->tf_epc += 4;
8001f984:	24420004 	addiu	v0,v0,4
8001f988:	ae220090 	sw	v0,144(s1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f98c:	8fb40024 	lw	s4,36(sp)
8001f990:	8fb30020 	lw	s3,32(sp)
8001f994:	8fb2001c 	lw	s2,28(sp)
8001f998:	8fb10018 	lw	s1,24(sp)
8001f99c:	8fb00014 	lw	s0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:270
		      *(uint32_t *) (tf->tf_epc));
		break;
	case EX_SYS:
		//print_trapframe(tf);
		tf->tf_epc += 4;
		syscall();
8001f9a0:	08007c2e 	j	8001f0b8 <syscall>
8001f9a4:	27bd0030 	addiu	sp,sp,48
interrupt_handler():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:99
	extern serial_int_handler(void *);
        //extern keyboard_int_handler();
	int i;
	for (i = 0; i < 8; i++) {
		if (tf->tf_cause & (1 << (CAUSEB_IP + i))) {
			switch (i) {
8001f9a8:	10940009 	beq	a0,s4,8001f9d0 <trap_dispatch+0x270>
8001f9ac:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:119
                                pic_disable(KEYBOARD_IRQ);
                                keyboard_int_handler();
                                pic_enable(KEYBOARD_IRQ);
                                break;*/
			default:
				print_trapframe(tf);
8001f9b0:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f9b4:	02202021 	move	a0,s1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:120
				panic("Unknown interrupt!");
8001f9b8:	3c048002 	lui	a0,0x8002
8001f9bc:	3c068002 	lui	a2,0x8002
8001f9c0:	24844a10 	addiu	a0,a0,18960
8001f9c4:	24050078 	li	a1,120
8001f9c8:	0c006b13 	jal	8001ac4c <__panic>
8001f9cc:	24c64a78 	addiu	a2,a2,19064
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:107
#endif
			case TIMER0_IRQ:
				clock_int_handler(NULL);
				break;
			case COM1_IRQ:
				kprintf("COM1\n\r");
8001f9d0:	0c007aa6 	jal	8001ea98 <kprintf>
8001f9d4:	02a02021 	move	a0,s5
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:108
				serial_int_handler(NULL);
8001f9d8:	0c006ca9 	jal	8001b2a4 <serial_int_handler>
8001f9dc:	00002021 	move	a0,zero
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:289
	default:
		print_trapframe(tf);
		panic("Unhandled Exception");
	}

}
8001f9e0:	08007e19 	j	8001f864 <trap_dispatch+0x104>
8001f9e4:	8e220008 	lw	v0,8(s1)
trap_dispatch():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:277
		/* alignment error or access kernel
		 * address space in user mode */
	case EX_ADEL:
	case EX_ADES:
		if (trap_in_kernel(tf)) {
			print_trapframe(tf);
8001f9e8:	0c007cbc 	jal	8001f2f0 <print_trapframe>
8001f9ec:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:278
			panic("Alignment Error");
8001f9f0:	3c048002 	lui	a0,0x8002
8001f9f4:	3c068002 	lui	a2,0x8002
8001f9f8:	24844a10 	addiu	a0,a0,18960
8001f9fc:	24050116 	li	a1,278
8001fa00:	0c006b13 	jal	8001ac4c <__panic>
8001fa04:	24c64ac0 	addiu	a2,a2,19136

8001fa08 <mips_trap>:
mips_trap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:297
 * General trap (exception) handling function for mips.
 * This is called by the assembly-language exception handler once
 * the trapframe has been set up.
 */
void mips_trap(struct trapframe *tf)
{
8001fa08:	27bdffe0 	addiu	sp,sp,-32
8001fa0c:	afb00010 	sw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:308
	} else
		flag = 0;

	// dispatch based on what type of trap occurred
	// used for previous projects
	if (current == NULL) {
8001fa10:	3c108015 	lui	s0,0x8015
8001fa14:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:297
 * General trap (exception) handling function for mips.
 * This is called by the assembly-language exception handler once
 * the trapframe has been set up.
 */
void mips_trap(struct trapframe *tf)
{
8001fa18:	afbf001c 	sw	ra,28(sp)
8001fa1c:	afb20018 	sw	s2,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:308
	} else
		flag = 0;

	// dispatch based on what type of trap occurred
	// used for previous projects
	if (current == NULL) {
8001fa20:	10400023 	beqz	v0,8001fab0 <mips_trap+0xa8>
8001fa24:	afb10014 	sw	s1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:312
		trap_dispatch(tf);
	} else {
		// keep a trapframe chain in stack
		struct trapframe *otf = current->tf;
8001fa28:	8c520054 	lw	s2,84(v0)
trap_in_kernel():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001fa2c:	8c910004 	lw	s1,4(a0)
mips_trap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:317
		struct trapframe *otf = current->tf;
		current->tf = tf;

		bool in_kernel = trap_in_kernel(tf);

		trap_dispatch(tf);
8001fa30:	0c007dd8 	jal	8001f760 <trap_dispatch>
8001fa34:	ac440054 	sw	a0,84(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:319

		current->tf = otf;
8001fa38:	8e0277a4 	lw	v0,30628(s0)
trap_in_kernel():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:57
		return "Unknown";
}

bool trap_in_kernel(struct trapframe * tf)
{
	return !(tf->tf_status & KSU_USER);
8001fa3c:	32310010 	andi	s1,s1,0x10
mips_trap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:320
		bool in_kernel = trap_in_kernel(tf);

		trap_dispatch(tf);

		current->tf = otf;
		if (!in_kernel) {
8001fa40:	12200008 	beqz	s1,8001fa64 <mips_trap+0x5c>
8001fa44:	ac520054 	sw	s2,84(v0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:321
			if (current->flags & PF_EXITING) {
8001fa48:	8c43005c 	lw	v1,92(v0)
8001fa4c:	30630001 	andi	v1,v1,0x1
8001fa50:	1460000f 	bnez	v1,8001fa90 <mips_trap+0x88>
8001fa54:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:324
				do_exit(-E_KILLED);
			}
			if (current->need_resched) {
8001fa58:	8c420018 	lw	v0,24(v0)
8001fa5c:	14400007 	bnez	v0,8001fa7c <mips_trap+0x74>
8001fa60:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:330
				schedule();
			}
		}
	}
//  if (flag) kprintf(" [end: epc=%x cause=%d syscall=%d pid=%d] ", tf->tf_epc, (tf->tf_cause >> 2) & 0x1F, (unsigned)(tf->tf_regs.reg_r[MIPS_REG_V0]), current?current->pid:-1);
}
8001fa64:	8fbf001c 	lw	ra,28(sp)
8001fa68:	8fb20018 	lw	s2,24(sp)
8001fa6c:	8fb10014 	lw	s1,20(sp)
8001fa70:	8fb00010 	lw	s0,16(sp)
8001fa74:	03e00008 	jr	ra
8001fa78:	27bd0020 	addiu	sp,sp,32
8001fa7c:	8fb20018 	lw	s2,24(sp)
8001fa80:	8fb10014 	lw	s1,20(sp)
8001fa84:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:325
		if (!in_kernel) {
			if (current->flags & PF_EXITING) {
				do_exit(-E_KILLED);
			}
			if (current->need_resched) {
				schedule();
8001fa88:	0800059f 	j	8000167c <schedule>
8001fa8c:	27bd0020 	addiu	sp,sp,32
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:322
		trap_dispatch(tf);

		current->tf = otf;
		if (!in_kernel) {
			if (current->flags & PF_EXITING) {
				do_exit(-E_KILLED);
8001fa90:	0c003d4a 	jal	8000f528 <do_exit>
8001fa94:	2404ffdb 	li	a0,-37
8001fa98:	8e0277a4 	lw	v0,30628(s0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:324
			}
			if (current->need_resched) {
8001fa9c:	8c420018 	lw	v0,24(v0)
8001faa0:	1040fff1 	beqz	v0,8001fa68 <mips_trap+0x60>
8001faa4:	8fbf001c 	lw	ra,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:330
				schedule();
			}
		}
	}
//  if (flag) kprintf(" [end: epc=%x cause=%d syscall=%d pid=%d] ", tf->tf_epc, (tf->tf_cause >> 2) & 0x1F, (unsigned)(tf->tf_regs.reg_r[MIPS_REG_V0]), current?current->pid:-1);
}
8001faa8:	08007ea0 	j	8001fa80 <mips_trap+0x78>
8001faac:	8fb20018 	lw	s2,24(sp)
8001fab0:	8fbf001c 	lw	ra,28(sp)
8001fab4:	8fb20018 	lw	s2,24(sp)
8001fab8:	8fb10014 	lw	s1,20(sp)
8001fabc:	8fb00010 	lw	s0,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:309
		flag = 0;

	// dispatch based on what type of trap occurred
	// used for previous projects
	if (current == NULL) {
		trap_dispatch(tf);
8001fac0:	08007dd8 	j	8001f760 <trap_dispatch>
8001fac4:	27bd0020 	addiu	sp,sp,32

8001fac8 <ucore_in_interrupt>:
ucore_in_interrupt():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/trap.c:337
//add by HHL
int ucore_in_interrupt()
{
	//panic("ucore_in_interrupt()");
	return 0;
}
8001fac8:	03e00008 	jr	ra
8001facc:	00001021 	move	v0,zero

8001fad0 <ramExcHandle_tlbmiss>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:20
   .section .text
# +0x000: R4000 tlbmiss vector (user)
.global ramExcHandle_tlbmiss
ramExcHandle_tlbmiss:
  #b ramExcHandle_tlbmiss
  b ramExcHandle_general 
8001fad0:	10000003 00000000                       ........

8001fad8 <ramReserved>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:25
  nop

.global ramReserved
ramReserved:
  b ramReserved
8001fad8:	1000ffff 00000000                       ........

8001fae0 <ramExcHandle_general>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:33
# +0x180: R4000 general vector
  .global ramExcHandle_general
  .type ramExcHandle_general, @function
  .ent ramExcHandle_general
ramExcHandle_general:
   move k1, sp			/* Save previous stack pointer in k1 */
8001fae0:	03a0d821 	move	k1,sp
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:34
   mfc0 k0, CP0_STATUS /* Get status register */
8001fae4:	401a6000 	mfc0	k0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:35
   andi k0, k0, KSU_USER/* Check the we-were-in-user-mode bit */
8001fae8:	335a0010 	andi	k0,k0,0x10
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:36
   beq	k0, $0, 1f		/* If clear, from kernel, already have stack */
8001faec:	13400007 	beqz	k0,8001fb0c <ramExcHandle_general+0x2c>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:37
   nop				/* delay slot */
8001faf0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:41
   
   /* TODO */
   /* Coming from user mode - load kernel stack into sp */
   la k0, pls_current /* get address of "curkstack" */
8001faf4:	3c1a8015 	lui	k0,0x8015
8001faf8:	275a77a4 	addiu	k0,k0,30628
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:42
   lw k0, 0(k0)
8001fafc:	8f5a0000 	lw	k0,0(k0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:43
   lw k0, 20(k0)
8001fb00:	8f5a0014 	lw	k0,20(k0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:45

   addiu sp, k0, KSTACKSIZE
8001fb04:	275d2000 	addiu	sp,k0,8192
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:47
   #lw sp, 72(k0)			/* get its value */
   nop				/* delay slot for the load */
8001fb08:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:50
  
1:
   mfc0 k0, CP0_CAUSE /* Now, load the exception cause. */
8001fb0c:	401a6800 	mfc0	k0,c0_cause
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:51
   j common_exception		/* Skip to common code */
8001fb10:	08007ec6 	j	8001fb18 <common_exception>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:52
   nop				/* delay slot */
8001fb14:	00000000 	nop

8001fb18 <common_exception>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:81
   
   /*
    * Allocate stack space for 37 words to hold the trap frame,
    * plus four more words for a minimal argument block.
    */
   addiu sp, sp, -164
8001fb18:	27bdff5c 	addiu	sp,sp,-164
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:109
    *        handle the real value of ra afterwards.
    *    (4) Because gdb will think we're saving k0 and k1, we need to
    *        leave slots for them in the trap frame, even though the
    *        stuff we save there is useless.
    */
   sw ra, 160(sp)	/* dummy for gdb */
8001fb1c:	afbf00a0 	sw	ra,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:110
   sw s8, 156(sp)	/* save s8 */
8001fb20:	afbe009c 	sw	s8,156(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:111
   sw sp, 152(sp)	/* dummy for gdb */
8001fb24:	afbd0098 	sw	sp,152(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:112
   sw gp, 148(sp)	/* save gp */
8001fb28:	afbc0094 	sw	gp,148(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:113
   sw k1, 144(sp)	/* dummy for gdb */
8001fb2c:	afbb0090 	sw	k1,144(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:114
   sw k0, 140(sp)	/* dummy for gdb */
8001fb30:	afba008c 	sw	k0,140(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:116

   sw k1, 152(sp)	/* real saved sp */
8001fb34:	afbb0098 	sw	k1,152(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:117
   nop			/* delay slot for store */
8001fb38:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:119
   
   mfc0 k1, CP0_EPC /* Copr.0 reg 13 == PC for exception */
8001fb3c:	401b7000 	mfc0	k1,c0_epc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:120
   sw k1, 160(sp)	/* real saved PC */
8001fb40:	afbb00a0 	sw	k1,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:122

   sw t9, 136(sp)
8001fb44:	afb90088 	sw	t9,136(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:123
   sw t8, 132(sp)
8001fb48:	afb80084 	sw	t8,132(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:124
   sw s7, 128(sp)
8001fb4c:	afb70080 	sw	s7,128(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:125
   sw s6, 124(sp)
8001fb50:	afb6007c 	sw	s6,124(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:126
   sw s5, 120(sp)
8001fb54:	afb50078 	sw	s5,120(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:127
   sw s4, 116(sp)
8001fb58:	afb40074 	sw	s4,116(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:128
   sw s3, 112(sp)
8001fb5c:	afb30070 	sw	s3,112(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:129
   sw s2, 108(sp)
8001fb60:	afb2006c 	sw	s2,108(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:130
   sw s1, 104(sp)
8001fb64:	afb10068 	sw	s1,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:131
   sw s0, 100(sp)
8001fb68:	afb00064 	sw	s0,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:132
   sw t7, 96(sp)
8001fb6c:	afaf0060 	sw	t7,96(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:133
   sw t6, 92(sp)
8001fb70:	afae005c 	sw	t6,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:134
   sw t5, 88(sp)
8001fb74:	afad0058 	sw	t5,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:135
   sw t4, 84(sp)
8001fb78:	afac0054 	sw	t4,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:136
   sw t3, 80(sp)
8001fb7c:	afab0050 	sw	t3,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:137
   sw t2, 76(sp)
8001fb80:	afaa004c 	sw	t2,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:138
   sw t1, 72(sp)
8001fb84:	afa90048 	sw	t1,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:139
   sw t0, 68(sp)
8001fb88:	afa80044 	sw	t0,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:140
   sw a3, 64(sp)
8001fb8c:	afa70040 	sw	a3,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:141
   sw a2, 60(sp)
8001fb90:	afa6003c 	sw	a2,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:142
   sw a1, 56(sp)
8001fb94:	afa50038 	sw	a1,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:143
   sw a0, 52(sp)
8001fb98:	afa40034 	sw	a0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:144
   sw v1, 48(sp)
8001fb9c:	afa30030 	sw	v1,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:145
   sw v0, 44(sp)
8001fba0:	afa2002c 	sw	v0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:146
   sw AT, 40(sp)
8001fba4:	afa10028 	sw	at,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:148

   sw ra, 36(sp)
8001fba8:	afbf0024 	sw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:153

   /*
    * Save special registers.
    */
   mfhi t0
8001fbac:	00004010 	mfhi	t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:154
   mflo t1
8001fbb0:	00004812 	mflo	t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:155
   sw t0, 32(sp)
8001fbb4:	afa80020 	sw	t0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:156
   sw t1, 28(sp)
8001fbb8:	afa9001c 	sw	t1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:162

   /*
    * Save remaining exception context information.
    */

   sw   k0, 24(sp)               /* k0 was loaded with cause earlier */
8001fbbc:	afba0018 	sw	k0,24(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:163
   mfc0 t1, CP0_STATUS /* Copr.0 reg 11 == status */
8001fbc0:	40096000 	mfc0	t1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:164
   sw   t1, 20(sp)
8001fbc4:	afa90014 	sw	t1,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:167


   mfc0 t2, CP0_BADVADDR /* Copr.0 reg 8 == faulting vaddr */
8001fbc8:	400a4000 	mfc0	t2,c0_badvaddr
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:168
   sw   t2, 16(sp)
8001fbcc:	afaa0010 	sw	t2,16(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:173

   /*
    * Pretend to save $0 for gdb's benefit.
    */
   sw $0, 12(sp)
8001fbd0:	afa0000c 	sw	zero,12(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:176

  # support nested interrupt
  la   t0, ~(ST0_KSU|ST0_EXL|ST0_IE)
8001fbd4:	2408ffe4 	li	t0,-28
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:177
  and t1, t1, t0
8001fbd8:	01284824 	and	t1,t1,t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:178
  mtc0 t1, CP0_STATUS /* Copr.0 reg 11 == status */
8001fbdc:	40896000 	mtc0	t1,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:184

   /*
    * Prepare to call mips_trap(struct trapframe *)
    */

   addiu a0, sp, 16             /* set argument */
8001fbe0:	27a40010 	addiu	a0,sp,16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:185
   la  t9, mips_trap
8001fbe4:	3c198002 	lui	t9,0x8002
8001fbe8:	2739fa08 	addiu	t9,t9,-1528
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:186
   jal t9 /* call it */
8001fbec:	0320f809 	jalr	t9
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:187
   nop				/* delay slot */
8001fbf0:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:190

   /* Something must be here or gdb doesn't find the stack frame. */
   nop
8001fbf4:	00000000 	nop

8001fbf8 <exception_return>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:199
    * Interrupts should be off.
    */
exception_return:

   /*     16(sp)		   no need to restore tf_vaddr */
   lw t0, 20(sp)		/* load status register value into t0 */
8001fbf8:	8fa80014 	lw	t0,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:200
   ori t0, t0, ST0_EXL
8001fbfc:	35080002 	ori	t0,t0,0x2
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:201
   nop				/* load delay slot */
8001fc00:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:202
   mtc0 t0, CP0_STATUS /* store it back to coprocessor 0 */
8001fc04:	40886000 	mtc0	t0,c0_status
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:206
   /*     24(sp)		   no need to restore tf_cause */

   /* restore special registers */
   lw t1, 28(sp)
8001fc08:	8fa9001c 	lw	t1,28(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:207
   lw t0, 32(sp)
8001fc0c:	8fa80020 	lw	t0,32(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:208
   mtlo t1
8001fc10:	01200013 	mtlo	t1
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:209
   mthi t0
8001fc14:	01000011 	mthi	t0
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:212

   /* load the general registers */
   lw ra, 36(sp)
8001fc18:	8fbf0024 	lw	ra,36(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:214

   lw AT, 40(sp)
8001fc1c:	8fa10028 	lw	at,40(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:215
   lw v0, 44(sp)
8001fc20:	8fa2002c 	lw	v0,44(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:216
   lw v1, 48(sp)
8001fc24:	8fa30030 	lw	v1,48(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:217
   lw a0, 52(sp)
8001fc28:	8fa40034 	lw	a0,52(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:218
   lw a1, 56(sp)
8001fc2c:	8fa50038 	lw	a1,56(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:219
   lw a2, 60(sp)
8001fc30:	8fa6003c 	lw	a2,60(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:220
   lw a3, 64(sp)
8001fc34:	8fa70040 	lw	a3,64(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:221
   lw t0, 68(sp)
8001fc38:	8fa80044 	lw	t0,68(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:222
   lw t1, 72(sp)
8001fc3c:	8fa90048 	lw	t1,72(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:223
   lw t2, 76(sp)
8001fc40:	8faa004c 	lw	t2,76(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:224
   lw t3, 80(sp)
8001fc44:	8fab0050 	lw	t3,80(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:225
   lw t4, 84(sp)
8001fc48:	8fac0054 	lw	t4,84(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:226
   lw t5, 88(sp)
8001fc4c:	8fad0058 	lw	t5,88(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:227
   lw t6, 92(sp)
8001fc50:	8fae005c 	lw	t6,92(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:228
   lw t7, 96(sp)
8001fc54:	8faf0060 	lw	t7,96(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:229
   lw s0, 100(sp)
8001fc58:	8fb00064 	lw	s0,100(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:230
   lw s1, 104(sp)
8001fc5c:	8fb10068 	lw	s1,104(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:231
   lw s2, 108(sp)
8001fc60:	8fb2006c 	lw	s2,108(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:232
   lw s3, 112(sp)
8001fc64:	8fb30070 	lw	s3,112(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:233
   lw s4, 116(sp)
8001fc68:	8fb40074 	lw	s4,116(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:234
   lw s5, 120(sp)
8001fc6c:	8fb50078 	lw	s5,120(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:235
   lw s6, 124(sp)
8001fc70:	8fb6007c 	lw	s6,124(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:236
   lw s7, 128(sp)
8001fc74:	8fb70080 	lw	s7,128(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:237
   lw t8, 132(sp)
8001fc78:	8fb80084 	lw	t8,132(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:238
   lw t9, 136(sp)
8001fc7c:	8fb90088 	lw	t9,136(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:243

   /*     140(sp)		   "saved" k0 was dummy garbage anyway */
   /*     144(sp)		   "saved" k1 was dummy garbage anyway */

   lw gp, 148(sp)		/* restore gp */
8001fc80:	8fbc0094 	lw	gp,148(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:245
   /*     152(sp)		   stack pointer - below */
   lw s8, 156(sp)		/* restore s8 */
8001fc84:	8fbe009c 	lw	s8,156(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:246
   lw k0, 160(sp)		/* fetch exception return PC into k0 */
8001fc88:	8fba00a0 	lw	k0,160(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:248

   lw sp, 152(sp)		/* fetch saved sp (must be last) */
8001fc8c:	8fbd0098 	lw	sp,152(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:251
   /* done */

   mtc0 k0, CP0_EPC /* Copr.0 reg 13 == PC for exception */
8001fc90:	409a7000 	mtc0	k0,c0_epc
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:252
   nop
8001fc94:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:253
   eret
8001fc98:	42000018 	eret
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:254
   nop
8001fc9c:	00000000 	nop

8001fca0 <forkrets>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:262

.globl forkrets
.type forkrets, @function
.ent forkrets 
forkrets:
  addiu sp, a0, -16
8001fca0:	249dfff0 	addiu	sp,a0,-16
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:263
  b exception_return
8001fca4:	1000ffd4 	b	8001fbf8 <exception_return>
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/exception.S:264
  nop
8001fca8:	00000000 	nop

8001fcac <kernel_thread_entry>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/entry.S:8
/* $a0 = arg, $a1 = func
 * see proc.c:kernel_thread
 */
kernel_thread_entry:        # void kernel_thread(void)
  addiu $sp, $sp, -16
  jal $a1
8001fcac:	00a0f809 27bdfff0 00000000 00402021     .......'....! @.
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/entry.S:11
  nop
  move $a0, $v0
  la  $t0, do_exit
8001fcbc:	3c088001 2508f528 0100f809 00000000     ...<(..%........
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/entry.S:13
  jal $t0 
  nop
8001fccc:	00000000                                ....

8001fcd0 <switch_to>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:25
    *
    * The order must match arch/mips/include/switchframe.h.
    */

   /* Save the registers */
   sw	sp, 44(a0)
8001fcd0:	ac9d002c 	sw	sp,44(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:26
   sw	ra, 40(a0)
8001fcd4:	ac9f0028 	sw	ra,40(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:27
   sw	gp, 36(a0)
8001fcd8:	ac9c0024 	sw	gp,36(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:28
   sw	s8, 32(a0)
8001fcdc:	ac9e0020 	sw	s8,32(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:29
   sw	s7, 28(a0)
8001fce0:	ac97001c 	sw	s7,28(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:30
   sw	s6, 24(a0)
8001fce4:	ac960018 	sw	s6,24(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:31
   sw	s5, 20(a0)
8001fce8:	ac950014 	sw	s5,20(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:32
   sw	s4, 16(a0)
8001fcec:	ac940010 	sw	s4,16(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:33
   sw	s3, 12(a0)
8001fcf0:	ac93000c 	sw	s3,12(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:34
   sw	s2, 8(a0)
8001fcf4:	ac920008 	sw	s2,8(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:35
   sw	s1, 4(a0)
8001fcf8:	ac910004 	sw	s1,4(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:36
   sw	s0, 0(a0)
8001fcfc:	ac900000 	sw	s0,0(a0)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:38

   nop
8001fd00:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:41

   /* Now, restore the registers */
   lw	s0, 0(a1)
8001fd04:	8cb00000 	lw	s0,0(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:42
   lw	s1, 4(a1)
8001fd08:	8cb10004 	lw	s1,4(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:43
   lw	s2, 8(a1)
8001fd0c:	8cb20008 	lw	s2,8(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:44
   lw	s3, 12(a1)
8001fd10:	8cb3000c 	lw	s3,12(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:45
   lw	s4, 16(a1)
8001fd14:	8cb40010 	lw	s4,16(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:46
   lw	s5, 20(a1)
8001fd18:	8cb50014 	lw	s5,20(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:47
   lw	s6, 24(a1)
8001fd1c:	8cb60018 	lw	s6,24(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:48
   lw	s7, 28(a1)
8001fd20:	8cb7001c 	lw	s7,28(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:49
   lw	s8, 32(a1)
8001fd24:	8cbe0020 	lw	s8,32(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:50
   lw	gp, 36(a1)
8001fd28:	8cbc0024 	lw	gp,36(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:51
   lw	ra, 40(a1)
8001fd2c:	8cbf0028 	lw	ra,40(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:52
   lw sp, 44(a1)
8001fd30:	8cbd002c 	lw	sp,44(a1)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:53
   nop			/* delay slot for load */
8001fd34:	00000000 	nop
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:56

   /* and return. */
   j ra
8001fd38:	03e00008 	jr	ra
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/process/switch.S:57
   nop
8001fd3c:	00000000 	nop

8001fd40 <bitmap_translate.part.0>:
bitmap_translate():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8001fd40:	3c048002 	lui	a0,0x8002
8001fd44:	3c068002 	lui	a2,0x8002
8001fd48:	3c078002 	lui	a3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:72
	}
	return -E_NO_MEM;
}

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
8001fd4c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8001fd50:	24841d90 	addiu	a0,a0,7568
8001fd54:	2405004b 	li	a1,75
8001fd58:	24c60e48 	addiu	a2,a2,3656
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:72
	}
	return -E_NO_MEM;
}

static void
bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE ** word,
8001fd5c:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/fs/sfs/bitmap.c:75
		 WORD_TYPE * mask)
{
	assert(index < bitmap->nbits);
8001fd60:	0c006b13 	jal	8001ac4c <__panic>
8001fd64:	24e71d9c 	addiu	a3,a3,7580

8001fd68 <check_shmn_overlap.part.5>:
check_shmn_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:109
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
{
	assert(prev->start < prev->end);
8001fd68:	3c048002 	lui	a0,0x8002
8001fd6c:	3c068002 	lui	a2,0x8002
8001fd70:	3c078002 	lui	a3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:107
		shmem->shmn_cache = shmn;
	}
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
8001fd74:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:109
{
	assert(prev->start < prev->end);
8001fd78:	24843084 	addiu	a0,a0,12420
8001fd7c:	2405006d 	li	a1,109
8001fd80:	24c60e48 	addiu	a2,a2,3656
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:107
		shmem->shmn_cache = shmn;
	}
	return shmn;
}

static inline void check_shmn_overlap(shmn_t * prev, shmn_t * next)
8001fd84:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:109
{
	assert(prev->start < prev->end);
8001fd88:	0c006b13 	jal	8001ac4c <__panic>
8001fd8c:	24e7308c 	addiu	a3,a3,12428

8001fd90 <shmem_remove_entry_pte.part.6>:
shmem_remove_entry_pte():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:72
	} else if (!ptep_invalid(ptep)) {
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
		ptep_unmap(ptep);
#else
		assert(0);
8001fd90:	3c048002 	lui	a0,0x8002
8001fd94:	3c068002 	lui	a2,0x8002
8001fd98:	3c078002 	lui	a3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:43
		}
	}
	return shmn;
}

static inline void shmem_remove_entry_pte(pte_t * ptep)
8001fd9c:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:72
	} else if (!ptep_invalid(ptep)) {
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
		ptep_unmap(ptep);
#else
		assert(0);
8001fda0:	24843084 	addiu	a0,a0,12420
8001fda4:	24050048 	li	a1,72
8001fda8:	24c60e48 	addiu	a2,a2,3656
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:43
		}
	}
	return shmn;
}

static inline void shmem_remove_entry_pte(pte_t * ptep)
8001fdac:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/shmem.c:72
	} else if (!ptep_invalid(ptep)) {
#ifdef UCONFIG_SWAP
		swap_remove_entry(*ptep);
		ptep_unmap(ptep);
#else
		assert(0);
8001fdb0:	0c006b13 	jal	8001ac4c <__panic>
8001fdb4:	24e72434 	addiu	a3,a3,9268

8001fdb8 <check_vma_overlap.part.5>:
check_vma_overlap():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:270

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
{
	assert(prev->vm_start < prev->vm_end);
8001fdb8:	3c048002 	lui	a0,0x8002
8001fdbc:	3c068002 	lui	a2,0x8002
8001fdc0:	3c078002 	lui	a3,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:268

#endif //UCONFIG_BIONIC_LIBC

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
8001fdc4:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:270
{
	assert(prev->vm_start < prev->vm_end);
8001fdc8:	2484315c 	addiu	a0,a0,12636
8001fdcc:	2405010e 	li	a1,270
8001fdd0:	24c60e48 	addiu	a2,a2,3656
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:268

#endif //UCONFIG_BIONIC_LIBC

// check_vma_overlap - check if vma1 overlaps vma2 ?
static inline void
check_vma_overlap(struct vma_struct *prev, struct vma_struct *next)
8001fdd4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/mm/vmm.c:270
{
	assert(prev->vm_start < prev->vm_end);
8001fdd8:	0c006b13 	jal	8001ac4c <__panic>
8001fddc:	24e731cc 	addiu	a3,a3,12748

8001fde0 <pa2page.part.7>:
pa2page():
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
}

static inline struct Page *pa2page(uintptr_t pa)
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001fde0:	3c048002 	lui	a0,0x8002
8001fde4:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001fde8:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001fdec:	24842a0c 	addiu	a0,a0,10764
8001fdf0:	24050063 	li	a1,99
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001fdf4:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001fdf8:	0c006b13 	jal	8001ac4c <__panic>
8001fdfc:	24c62a74 	addiu	a2,a2,10868

8001fe00 <pa2page.part.2>:
8001fe00:	3c048002 	lui	a0,0x8002
8001fe04:	3c068002 	lui	a2,0x8002
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001fe08:	27bdffe8 	addiu	sp,sp,-24
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001fe0c:	24842a0c 	addiu	a0,a0,10764
8001fe10:	24050063 	li	a1,99
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:96
static inline uintptr_t page2pa(struct Page *page)
{
	return KERNBASE + (page2ppn(page) << PGSHIFT);
}

static inline struct Page *pa2page(uintptr_t pa)
8001fe14:	afbf0014 	sw	ra,20(sp)
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/mm/pmm.h:99
{
	if (PPN(pa) >= npage) {
		panic("pa2page called with invalid pa");
8001fe18:	0c006b13 	jal	8001ac4c <__panic>
8001fe1c:	24c62a74 	addiu	a2,a2,10868

8001fe20 <dev_node_ops>:
pa2page.part.2():
8001fe20:	8c4ba476 80002098 80002050 80002004     v.K.. ..P ... ..
8001fe30:	80001fb8 800020f8 800046d0 800046f0     ..... ...F...F..
8001fe40:	800046f0 800046f0 800046d8 800046f0     .F...F...F...F..
8001fe50:	800046d0 800046d8 800046d0 80001f70     .F...F...F..p...
8001fe60:	80001f14 80001e98 800046d8 800046f0     .........F...F..
8001fe70:	800046f0 80001e58 800046f0              .F..X....F..

8001fe7c <pipe_node_ops>:
8001fe7c:	8c4ba476 8000309c 80003444 800033b0     v.K..0..D4...3..
8001fe8c:	80003308 8000320c 800046d0 800046f0     .3...2...F...F..
8001fe9c:	800046f0 800046f0 800046d8 800046f0     .F...F...F...F..
8001feac:	80003134 800046d8 80002f64 800046d8     41...F..d/...F..
8001febc:	80002f54 800046d8 800046d8 800046f0     T/...F...F...F..
8001fecc:	800046f0 800046f0 800046f0              .F...F...F..

8001fed8 <pipe_root_ops>:
8001fed8:	8c4ba476 800046d8 800046d8 800046d8     v.K..F...F...F..
8001fee8:	800046d8 800046d8 800046d8 800046d8     .F...F...F...F..
8001fef8:	800046d8 800046d8 800046d8 800046d8     .F...F...F...F..
8001ff08:	800046d8 800046d8 800046d8 800046d8     .F...F...F...F..
8001ff18:	800046d8 800046d8 800046d8 8000393c     .F...F...F..<9..
8001ff28:	800046d8 80003820 80003b48              .F.. 8..H;..

8001ff34 <sfs_node_dirops>:
8001ff34:	8c4ba476 80006d00 80008284 800046e8     v.K..m.......F..
8001ff44:	800046e8 800082f4 80009290 80008808     .F..............
8001ff54:	80008b10 8000a70c 800046e8 800046e0     .........F...F..
8001ff64:	8000962c 80008ffc 80007f04 800046d8     ,............F..
8001ff74:	80006dec 800046e8 800046e8 8000a424     .m...F...F..$...
8001ff84:	8000a05c 80009d34 800099f8              \...4.......

8001ff90 <sfs_node_fileops>:
8001ff90:	8c4ba476 80006d20 80008284 80008680     v.K. m..........
8001ffa0:	800084f4 800082f4 80009290 800046f0     .............F..
8001ffb0:	800046f0 800046f0 800046f0 800046f0     .F...F...F...F..
8001ffc0:	800046f0 800046f0 80007f04 800046d8     .F...F.......F..
8001ffd0:	80006dec 80008198 80008d54 800046f0     .m......T....F..
8001ffe0:	800046f0 800046f0 800046f0              .F...F...F..

8001ffec <__slab_div_table>:
8001ffec:	00000071 0000003b 0000001e 0000000f     q...;...........
	...
8002000c:	80016884 800167fc 80016898 800167fc     .h...g...h...g..
8002001c:	800167fc 800167fc 800167fc 800168ac     .g...g...g...h..
8002002c:	800167fc 800167fc 800168d0 800168e0     .g...g...h...h..
8002003c:	800167fc 800168f4 80016904 80016904     .g...h...i...i..
8002004c:	80016904 80016904 80016904 80016904     .i...i...i...i..
8002005c:	80016904 80016904 80016904 800167fc     .i...i...i...g..
8002006c:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
8002007c:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
8002008c:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
8002009c:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
800200ac:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
800200bc:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
800200cc:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
800200dc:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
800200ec:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
800200fc:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
8002010c:	80016954 80016970 800169cc 800167fc     Ti..pi...i...g..
8002011c:	800167fc 800167fc 800167fc 800167fc     .g...g...g...g..
8002012c:	800167fc 80016a18 800167fc 800167fc     .g...j...g...g..
8002013c:	80016a28 80016a54 800167fc 800167fc     (j..Tj...g...g..
8002014c:	80016a98 800167fc 80016bb8 800167fc     .j...g...k...g..
8002015c:	800167fc 80016be0                       .g...k..

80020164 <error_string>:
80020164:	00000000 80023704 8002371c 80023738     .....7...7..87..
80020174:	80023748 80023760 8002376c 80023788     H7..`7..l7...7..
80020184:	800237a0 800237b4 800237c4 800237d8     .7...7...7...7..
80020194:	800237e4 800237f4 80023808 80023814     .7...7...8...8..
800201a4:	8002382c 80023844 80023850 80023864     ,8..D8..P8..d8..
800201b4:	80023874 80023884 80023894 800238a8     t8...8...8...8..
800201c4:	800238bc 800238d0 800238e4 800238f4     .8...8...8...8..
800201d4:	80023904 8002391c 8002392c 80023944     .9...9..,9..D9..
800201e4:	80023954 80023960 80023984 800239a4     T9..`9...9...9..
800201f4:	800239bc 800239cc 800239e0 80023a00     .9...9...9...:..

80020204 <commands>:
80020204:	80023dec 80023df8 8001a9cc 80023e18     .=...=.......>..
80020214:	80023e24 8001a9ac                       $>......

8002021c <CHAR_FONT_BITMAP>:
	...
80020230:	01000000 00401004 00000401 00040100     ......@.........
80020240:	00000000 02800000 00a0280a 00000000     .........(......
	...
80020258:	04800000 43f86812 507f0902 00048120     .....h.C...P ...
80020268:	00000000 01004000 6048961f 40d00f01     .....@....H`...@
80020278:	101f0d22 00000040 40600000 01180902     "...@.....`@....
80020288:	40620303 00180902 00000000 03800000     ..b@............
80020298:	c0300401 88a22480 003f0663 00000000     ..0..$..c.?.....
800202a8:	01000000 00401004 00000000 00000000     ......@.........
800202b8:	00000000 01008000 80200804 20080200     .......... .... 
800202c8:	20040100 00000000 00801000 00401002     ... ..........@.
800202d8:	40100401 04020080 00000000 81000000     ...@............
800202e8:	20e03824 00000409 00000000 00000000     $8. ............
800202f8:	00000000 00401000 40103f81 00000100     ......@..?.@....
	...
80020318:	08060180 00000010 00000000 00000000     ................
80020328:	003c0000 00000000 00000000 00000000     ..<.............
	...
80020340:	00060180 00000000 04000000 00802008     ............. ..
80020350:	20080401 04010040 00000008 03800000     ... @...........
80020360:	22088211 08822089 000e0442 00000000     ...". ..B.......
80020370:	01800000 00401005 40100401 001f0100     ......@....@....
80020380:	00000000 83c00000 02008030 20301804     ........0.....0 
80020390:	003f8040 00000000 83c00000 83008030     @.?.........0...
800203a0:	00803007 000f0c22 00000000 06000000     .0.."...........
800203b0:	41205814 00fe1084 00100401 00000000     .X A............
800203c0:	87e00000 20f80200 00802004 000f0422     ....... . .."...
800203d0:	00000000 07800000 a0080623 08823187     ........#....1..
800203e0:	001e0c42 00000000 0fe00000 00804030     B...........0@..
800203f0:	20100402 00010080 00000000 87c00000     ... ............
80020400:	c3188231 08823187 001f0c62 00000000     1....1..b.......
80020410:	83c00000 62088211 00802f0c 000f0623     .......b./..#...
	...
80020428:	80600000 00000001 00060180 00000000     ..`.............
80020438:	00000000 80600000 00000001 08060180     ......`.........
80020448:	00000010 00000000 c1c08000 c01c0181     ................
80020458:	00000801 00000000 00000000 03f80000     ................
80020468:	00fe0000 00000000 00000000 00000000     ................
80020478:	00700200 70703007 00000020 00000000     ..p..0pp .......
80020488:	81c00000 00c02008 00080201 00020080     ..... ..........
80020498:	00000000 07800000 23888433 48922489     ........3..#.$.H
800204a8:	0c010e22 000001c0 01000000 80a0280e     "............(..
800204b8:	107c1102 00208821 00000000 87e00000     ..|.!. .........
800204c8:	e3088230 08823087 001f8c22 00000000     0....0..".......
800204d8:	07800000 20080623 18020080 001e0840     ....#.. ....@...
800204e8:	00000000 83e00000 22088218 08822088     ...........". ..
800204f8:	000f8622 00000000 8fe00000 e0080200     "...............
80020508:	0802008f 003f8020 00000000 8fe00000     .... .?.........
80020518:	e0080200 0802008f 00008020 00000000     ........ .......
80020528:	07800000 20080621 08823080 001e0842     ....!.. .0..B...
80020538:	00000000 88200000 e2088220 0882208f     ...... . .... ..
80020548:	00208822 00000000 07c00000 00401004     ". ...........@.
80020558:	40100401 001f0100 00000000 07800000     ...@............
80020568:	01004010 00401004 000f0661 00000000     .@....@.a.......
80020578:	84200000 e0281208 88320480 00208420     .. ...(...2. . .
80020588:	00000000 80200000 20080200 08020080     ...... .... ....
80020598:	003f8020 00000000 8c600000 a2a8aa31      .?.......`.1...
800205a8:	0882248b 00208822 00000000 88600000     .$..". .......`.
800205b8:	22288a21 88a22489 00308c22 00000000     !.(".$..".0.....
800205c8:	03800000 22088211 08822088 000e0442     .......". ..B...
800205d8:	00000000 83e00000 22088230 08021f8c     ........0.."....
800205e8:	00008020 00000000 03800000 22088211      .............."
800205f8:	08822088 601e0442 00000100 83e00000     . ..B..`........
80020608:	22088230 08421f8c 00408822 00000000     0.."..B.".@.....
80020618:	87800000 c0080221 00801c00 001f0c22     ....!......."...
80020628:	00000000 0fe00000 00401004 40100401     ..........@....@
80020638:	00040100 00000000 88200000 22088220     .......... . .."
80020648:	08822088 001f0c62 00000000 88200000     . ..b......... .
80020658:	41104420 a0280a04 00040380 00000000      D.A..(.........
80020668:	48100000 a2648120 907e1685 00090240     ...H .d...~.@...
80020678:	00000000 08200000 00a02811 10280e01     ...... ..(....(.
80020688:	00208441 00000000 08200000 80a06411     A. ....... ..d..
80020698:	40100403 00040100 00000000 0fe00000     ...@............
800206a8:	00804030 10080401 003f8060 00000000     0@......`.?.....
800206b8:	0080e000 80200802 20080200 38020080     ...... .... ...8
800206c8:	00000000 00200000 80100401 40100200     ...... ........@
800206d8:	20080200 00000100 01007000 00401004     ... .....p....@.
800206e8:	40100401 1c040100 00000000 01000000     ...@............
800206f8:	0318440a 00000000 00000000 00000000     .D..............
	...
80020718:	000ff000 0100200c 00000000 00000000     ..... ..........
	...
80020734:	01103800 08461f04 00170621 00000000     .8....F.!.......
80020744:	80200800 20983a00 08421084 000e8261     .. ..:. ..B.a...
	...
8002075c:	21103800 08020080 000e0440 00000000     .8.!....@.......
8002076c:	04010000 21905c10 08421084 00170641     .....\.!..B.A...
	...
80020784:	21903800 08021f84 000e0440 00000000     .8.!....@.......
80020794:	0081c000 80207e02 20080200 00020080     .....~ .... ....
	...
800207ac:	21905c00 08421084 40170641 00038190     .\.!..B.A..@....
800207bc:	80200800 21983a00 08421084 00108421     .. ..:.!..B.!...
800207cc:	00000000 01004000 00401c00 40100401     .....@....@....@
800207dc:	003f8100 00000000 01004000 00401c00     ..?......@....@.
800207ec:	40100401 10040100 0000e040 80200800     ...@....@..... .
800207fc:	a0482200 48120380 00108220 00000000     ."H....H .......
8002080c:	00803c00 80200802 20080200 001c0080     .<.... .... ....
	...
80020824:	22487e00 48922489 00248922 00000000     .~H".$.H".$.....
80020834:	00000000 21983a00 08421084 00108421     .....:.!..B.!...
	...
8002084c:	20903c00 08421084 000f0241 00000000     .<. ..B.A.......
8002085c:	00000000 20983a00 08421084 020e8261     .....:. ..B.a...
8002086c:	00002008 00000000 21905c00 08421084     . .......\.!..B.
8002087c:	40170641 00040100 00000000 41303400     A..@.........40A
8002088c:	10040100 00010040 00000000 00000000     ....@...........
8002089c:	21083c00 00700380 000f0421 00000000     .<.!..p.!.......
800208ac:	00800000 80207e02 20080200 001c0080     .....~ .... ....
	...
800208c4:	21084200 08421084 00170661 00000000     .B.!..B.a.......
800208d4:	00000000 41084200 60240902 00060180     .....B.A..$`....
	...
800208ec:	a2048100 f85a1685 00090241 00000000     ......Z.A.......
800208fc:	00000000 80904200 90180601 00108240     .....B......@...
	...
80020914:	41104200 60280902 10040100 0000c020     .B.A..(`.... ...
80020924:	00000000 01007e00 10080402 001f8020     .....~...... ...
80020934:	00000000 01018000 00401004 40100301     ..........@....@
80020944:	10040100 00000180 01004000 00401004     .........@....@.
80020954:	40100401 10040100 00010040 01003000     ...@....@....0..
80020964:	00401004 40101801 10040100 00000030     ..@....@....0...
	...
8002097c:	00622700 00000000 00000000              .'b.........

80020988 <buddy_pmm_manager>:
80020988:	80024364 8001bc3c 8001bcb8 8001bed8     dC..<...........
80020998:	8001ce6c 8001bc84 8001c198              l...........

800209a4 <__func__.1817>:
800209a4:	69735f5f 65735f67 5f707574 6d617266     __sig_setup_fram
800209b4:	00000065                                e...

800209b8 <syscalls>:
800209b8:	00000000 8001f0b0 8001f074 8001f0a0     ........t.......
800209c8:	8001f08c 8001f050 00000000 00000000     ....P...........
800209d8:	00000000 8001f048 8001f040 8001f038     ....H...@...8...
800209e8:	8001f02c 00000000 00000000 00000000     ,...............
800209f8:	00000000 8001ede0 8001edf0 8001f024     ............$...
80020a08:	8001f010 8001f000 8001efec 00000000     ................
	...
80020a30:	8001efc8 8001efa8 00000000 00000000     ................
	...
80020a58:	8001efa0 8001ef98 8001ef88 8001ef80     ................
80020a68:	8001ef70 00000000 00000000 00000000     p...............
80020a78:	8001ef5c 8001ef48 00000000 00000000     \...H...........
	...
80020b48:	8001ef38 8001ef30 8001ef1c 8001ef08     8...0...........
80020b58:	8001eef4 00000000 00000000 00000000     ................
	...
80020b70:	8001eee4 8001eedc 00000000 00000000     ................
	...
80020b98:	8001eed4 8001eec4 8001eebc 8001eeac     ................
80020ba8:	8001ee9c 00000000 00000000 8001ee94     ................
80020bb8:	8001ee80 00000000 8001ee70 00000000     ........p.......
	...
80020be8:	8001ee68 8001ee58 00000000 00000000     h...X...........
	...
80020d80:	8001ee00 8001f824 8001f8a8 8001f8d8     ....$...........
80020d90:	8001f908 8001f938 8001f938 8001f794     ....8...8.......
80020da0:	8001f794 8001f978 8001f794 8001f7d0     ....x...........

80020db0 <excnames.2161>:
80020db0:	80024ae4 80024af0 80024afc 80024b10     .J...J...J...K..
80020dc0:	80024b24 80024b3c 80024b54 80024b74     $K..<K..TK..tK..
80020dd0:	80024b94 80024b9c 80024ba8 80024bc8     .K...K...K...K..
80020de0:	80024be0 20202020 20202020 00000000     .K..        ....
80020df0:	2020207c 55504320 20206425 00002020     |    CPU%d    ..
80020e00:	64342520 00000020 34252020 34252864      %4d ...  %4d(%4
80020e10:	00202964 43206e4f 64255550 0000203a     d) .On CPU%d: ..
80020e20:	00643425 64342528 000d0a29 65686373     %4d.(%4d)...sche
80020e30:	6c632064 3a737361 0a732520 0000000d     d class: %s.....
80020e40:	65686373 00632e64 65737361 6f697472     sched.c.assertio
80020e50:	6166206e 64656c69 7325203a 00000000     n failed: %s....
80020e60:	636f7270 74733e2d 20657461 50203d21     proc->state != P
80020e70:	5f434f52 424d4f5a 00004549 636f7270     ROC_ZOMBIE..proc
80020e80:	69703e2d 3d3e2064 736c7020 6165725f     ->pid >= pls_rea
80020e90:	636c2864 635f7570 746e756f 00000029     d(lcpu_count)...
80020ea0:	656b6177 72207075 616e6e75 20656c62     wakeup runnable 
80020eb0:	636f7270 2e737365 00000d0a 656d6974     process.....time
80020ec0:	653e2d72 72697078 3e207365 26203020     r->expires > 0 &
80020ed0:	69742026 2d72656d 6f72703e 3d212063     & timer->proc !=
80020ee0:	4c554e20 0000004c 7473696c 706d655f      NULL...list_emp
80020ef0:	26287974 6d697428 3e2d7265 656d6974     ty(&(timer->time
80020f00:	696c5f72 29296b6e 00000000 656d6974     r_link))....time
80020f10:	653e2d72 72697078 21207365 0030203d     r->expires != 0.
80020f20:	636f7270 61773e2d 735f7469 65746174     proc->wait_state
80020f30:	57202620 4e495f54 52524554 45545055      & WT_INTERRUPTE
80020f40:	00000044 636f7270 20737365 73276425     D...process %d's
80020f50:	69617720 74735f74 20657461 30203d3d      wait_state == 0
80020f60:	000d0a2e 65686373 52525f64 0000632e     ....sched_RR.c..
80020f70:	73696c21 6d655f74 28797470 72702826     !list_empty(&(pr
80020f80:	3e2d636f 5f6e7572 6b6e696c 26202929     oc->run_link)) &
80020f90:	72702026 3e2d636f 3d207172 7172203d     & proc->rq == rq
80020fa0:	00000000 7473696c 706d655f 26287974     ....list_empty(&
80020fb0:	6f727028 723e2d63 6c5f6e75 296b6e69     (proc->run_link)
80020fc0:	00000029 735f5252 64656863 72656c75     )...RR_scheduler
80020fd0:	00000000 2e766564 00000063 6f6e5f5f     ....dev.c...__no
80020fe0:	21206564 554e203d 26204c4c 68632026     de != NULL && ch
80020ff0:	5f6b6365 646f6e69 79745f65 5f286570     eck_inode_type(_
80021000:	646f6e5f 64202c65 63697665 00002965     _node, device)..
80021010:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
80021020:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
80021030:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
80021040:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
80021050:	74746567 20657079 4e203d21 004c4c55     gettype != NULL.
80021060:	74746567 00657079 5f766564 6b736964     gettype.dev_disk
80021070:	00632e30 69706f63 21206465 2030203d     0.c.copied != 0 
80021080:	63202626 6569706f 3d3c2064 73657220     && copied <= res
80021090:	26206469 6f632026 64656970 44202520     id && copied % D
800210a0:	304b5349 4b4c425f 455a4953 203d3d20     ISK0_BLKSIZE == 
800210b0:	00000030 6b736964 77203a30 65746972     0...disk0: write
800210c0:	6b6c6220 3d206f6e 20642520 63657328      blkno = %d (sec
800210d0:	206f6e74 6425203d 6e202c29 736b6c62     tno = %d), nblks
800210e0:	25203d20 6e282064 73636573 25203d20      = %d (nsecs = %
800210f0:	203a2964 30257830 0a2e7838 00000000     d): 0x%08x......
80021100:	6b736964 72203a30 20646165 6e6b6c62     disk0: read blkn
80021110:	203d206f 28206425 74636573 3d206f6e     o = %d (sectno =
80021120:	29642520 626e202c 20736b6c 6425203d      %d), nblks = %d
80021130:	736e2820 20736365 6425203d 30203a29      (nsecs = %d): 0
80021140:	38302578 000a2e78 69706f63 3d206465     x%08x...copied =
80021150:	6c61203d 26206e65 6f632026 64656970     = alen && copied
80021160:	44202520 304b5349 4b4c425f 455a4953      % DISK0_BLKSIZE
80021170:	203d3d20 00000030 6b736964 64203a30      == 0...disk0: d
80021180:	635f7665 74616572 6f6e5f65 0a2e6564     ev_create_node..
80021190:	00000000 6b736964 65642030 65636976     ....disk0 device
800211a0:	6e736920 61207427 6c696176 656c6261      isn't available
800211b0:	00000a2e 6b736964 6c612030 20636f6c     ....disk0 alloc 
800211c0:	66667562 66207265 656c6961 000a2e64     buffer failed...
800211d0:	6b736964 00000030 6b736964 76203a30     disk0...disk0: v
800211e0:	615f7366 645f6464 203a7665 0a2e6525     fs_add_dev: %e..
800211f0:	00000000 5f766564 6b736964 00632e31     ....dev_disk1.c.
80021200:	6b736964 64203a31 635f7665 74616572     disk1: dev_creat
80021210:	6f6e5f65 0a2e6564 00000000 6b736964     e_node......disk
80021220:	00000031 6b736964 76203a31 615f7366     1...disk1: vfs_a
80021230:	645f6464 203a7665 0a2e6525 00000000     dd_dev: %e......
80021240:	5f766564 6c6c756e 0000632e 6c6c756e     dev_null.c..null
80021250:	6564203a 72635f76 65746165 646f6e5f     : dev_create_nod
80021260:	000a2e65 6c6c756e 00000000 6c6c756e     e...null....null
80021270:	6676203a 64615f73 65645f64 25203a76     : vfs_add_dev: %
80021280:	000a2e65 5f766564 69647473 00632e6e     e...dev_stdin.c.
80021290:	69647473 64203a6e 635f7665 74616572     stdin: dev_creat
800212a0:	6f6e5f65 0a2e6564 00000000 69647473     e_node......stdi
800212b0:	0000006e 69647473 76203a6e 615f7366     n...stdin: vfs_a
800212c0:	645f6464 203a7665 0a2e6525 00000000     dd_dev: %e......
800212d0:	5f766564 6f647473 632e7475 00000000     dev_stdout.c....
800212e0:	6f647473 203a7475 5f766564 61657263     stdout: dev_crea
800212f0:	6e5f6574 2e65646f 0000000a 6f647473     te_node.....stdo
80021300:	00007475 6f647473 203a7475 5f736676     ut..stdout: vfs_
80021310:	5f646461 3a766564 2e652520 0000000a     add_dev: %e.....
80021320:	65706970 0000632e 73665f5f 203d2120     pipe.c..__fs != 
80021330:	4c4c554e 20262620 63656863 73665f6b     NULL && check_fs
80021340:	7079745f 5f5f2865 202c7366 65706970     _type(__fs, pipe
80021350:	00000029 65706970 7263203a 65746165     )...pipe: create
80021360:	70697020 73665f65 69616620 2e64656c      pipe_fs failed.
80021370:	0000000a 65706970 7263203a 65746165     ....pipe: create
80021380:	6f6f7220 6e692074 2065646f 6c696166      root inode fail
80021390:	0a2e6465 00000000 65706970 00000000     ed......pipe....
800213a0:	65706970 6676203a 64615f73 73665f64     pipe: vfs_add_fs
800213b0:	6525203a 00000a2e 65706970 6f6e695f     : %e....pipe_ino
800213c0:	632e6564 00000000 6f6e5f5f 21206564     de.c....__node !
800213d0:	554e203d 26204c4c 68632026 5f6b6365     = NULL && check_
800213e0:	646f6e69 79745f65 5f286570 646f6e5f     inode_type(__nod
800213f0:	70202c65 5f657069 646f6e69 00002965     e, pipe_inode)..
80021400:	2d6e6970 6365723e 6d69616c 756f635f     pin->reclaim_cou
80021410:	3e20746e 00003020 74617473 3d212065     nt > 0..state !=
80021420:	4c554e20 0000004c 65706970 6f6f725f      NULL...pipe_roo
80021430:	00632e74 6f6e722a 735f6564 65726f74     t.c.*rnode_store
80021440:	203d3d20 4c4c554e 00000000 6f6e772a      == NULL....*wno
80021450:	735f6564 65726f74 203d3d20 4c4c554e     de_store == NULL
80021460:	00000000 6e6b6e75 206e776f 65706970     ....unknown pipe
80021470:	6f6e695f 74206564 20657079 0a2e6425     _inode type %d..
80021480:	00000000 74617028 5d305b68 203d3d20     ....(path[0] == 
80021490:	20277227 70207c7c 5b687461 3d205d30     'r' || path[0] =
800214a0:	7727203d 26202927 61702026 315b6874     = 'w') && path[1
800214b0:	3d3d205d 275f2720 00000000 6d616e28     ] == '_'....(nam
800214c0:	5d305b65 203d3d20 20277227 6e207c7c     e[0] == 'r' || n
800214d0:	5b656d61 3d205d30 7727203d 26202927     ame[0] == 'w') &
800214e0:	616e2026 315b656d 3d3d205d 275f2720     & name[1] == '_'
800214f0:	00000000 65706970 6174735f 632e6574     ....pipe_state.c
80021500:	00000000 74617473 723e2d65 635f6665     ....state->ref_c
80021510:	746e756f 30203e20 00000000 74617473     ount > 0....stat
80021520:	3d212065 4c554e20 2626204c 61747320     e != NULL && sta
80021530:	3e2d6574 5f666572 6e756f63 203e2074     te->ref_count > 
80021540:	00000030 74696177 6575715f 655f6575     0...wait_queue_e
80021550:	7974706d 73282628 65746174 65723e2d     mpty(&(state->re
80021560:	72656461 6575715f 29296575 00000000     ader_queue))....
80021570:	74696177 6575715f 655f6575 7974706d     wait_queue_empty
80021580:	73282628 65746174 72773e2d 72657469     (&(state->writer
80021590:	6575715f 29296575 00000000 646f6e69     _queue))....inod
800215a0:	65725f65 6f635f66 28746e75 65646f6e     e_ref_count(node
800215b0:	3d3d2029 00003020 646f6e69 706f5f65     ) == 0..inode_op
800215c0:	635f6e65 746e756f 646f6e28 3d202965     en_count(node) =
800215d0:	0030203d 65646f6e 203d2120 4c4c554e     = 0.node != NULL
800215e0:	20262620 65646f6e 6e693e2d 73706f5f      && node->in_ops
800215f0:	203d2120 4c4c554e 00000000 65646f6e      != NULL....node
80021600:	6e693e2d 73706f5f 6f763e2d 616d5f70     ->in_ops->vop_ma
80021610:	20636967 56203d3d 4d5f504f 43494741     gic == VOP_MAGIC
80021620:	00000000 5f666572 6e756f63 3d3e2074     ....ref_count >=
80021630:	65706f20 6f635f6e 20746e75 6f202626      open_count && o
80021640:	5f6e6570 6e756f63 3d3e2074 00003020     pen_count >= 0..
80021650:	5f666572 6e756f63 203c2074 5f58414d     ref_count < MAX_
80021660:	444f4e49 4f435f45 20544e55 6f202626     INODE_COUNT && o
80021670:	5f6e6570 6e756f63 203c2074 5f58414d     pen_count < MAX_
80021680:	444f4e49 4f435f45 00544e55 646f6e69     INODE_COUNT.inod
80021690:	706f5f65 635f6e65 746e756f 646f6e28     e_open_count(nod
800216a0:	3e202965 00003020 6f6e5f5f 21206564     e) > 0..__node !
800216b0:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
800216c0:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
800216d0:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
800216e0:	3e2d7370 5f706f76 736f6c63 3d212065     ps->vop_close !=
800216f0:	4c554e20 0000004c 736f6c63 00000065      NULL...close...
80021700:	3a736676 72617720 676e696e 6f76203a     vfs: warning: vo
80021710:	6c635f70 3a65736f 2e652520 0000000a     p_close: %e.....
80021720:	646f6e69 65725f65 6f635f66 28746e75     inode_ref_count(
80021730:	65646f6e 203e2029 00000030 6f6e5f5f     node) > 0...__no
80021740:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021750:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021760:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021770:	6f5f6e69 3e2d7370 5f706f76 6c636572     in_ops->vop_recl
80021780:	206d6961 4e203d21 004c4c55 6c636572     aim != NULL.recl
80021790:	006d6961 3a736676 72617720 676e696e     aim.vfs: warning
800217a0:	6f76203a 65725f70 69616c63 25203a6d     : vop_reclaim: %
800217b0:	000a2e65 2e736676 00000063 656d616e     e...vfs.c...name
800217c0:	203d2120 4c4c554e 00000000 79747366      != NULL....fsty
800217d0:	3e2d6570 6e756f6d 00000074 64736676     pe->mount...vfsd
800217e0:	632e7665 00000000 6e766564 20656d61     ev.c....devname 
800217f0:	4e203d21 004c4c55 76656428 65646f6e     != NULL.(devnode
80021800:	203d3d20 4c4c554e 20262620 756f6d21      == NULL && !mou
80021810:	6261746e 2029656c 28207c7c 6e766564     ntable) || (devn
80021820:	2065646f 4e203d21 204c4c55 63202626     ode != NULL && c
80021830:	6b636568 6f6e695f 745f6564 28657079     heck_inode_type(
80021840:	6e766564 2c65646f 76656420 29656369     devnode, device)
80021850:	00000029 21207366 554e203d 00004c4c     )...fs != NULL..
80021860:	76656476 65643e2d 6d616e76 3d212065     vdev->devname !=
80021870:	4c554e20 2626204c 65647620 6d3e2d76      NULL && vdev->m
80021880:	746e756f 656c6261 00000000 76656476     ountable....vdev
80021890:	73663e2d 203d2120 4c4c554e 00000000     ->fs != NULL....
800218a0:	3a736676 756f6d20 2520746e 000a2e73     vfs: mount %s...
800218b0:	3a736676 6d6e7520 746e756f 2e732520     vfs: unmount %s.
800218c0:	0000000a 3a736676 72617720 676e696e     ....vfs: warning
800218d0:	7973203a 6620636e 656c6961 6f662064     : sync failed fo
800218e0:	73252072 6525203a 00000a2e 3a736676     r %s: %e....vfs:
800218f0:	72617720 676e696e 6e75203a 6e756f6d      warning: unmoun
80021900:	61662074 64656c69 726f6620 3a732520     t failed for %s:
80021910:	2e652520 0000000a 66736676 2e656c69      %e.....vfsfile.
80021920:	00000063 6f6e5f5f 21206564 554e203d     c...__node != NU
80021930:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021940:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021950:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021960:	5f706f76 61657263 21206574 554e203d     vop_create != NU
80021970:	00004c4c 61657263 00006574 6f6e5f5f     LL..create..__no
80021980:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021990:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
800219a0:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
800219b0:	6f5f6e69 3e2d7370 5f706f76 6e65706f     in_ops->vop_open
800219c0:	203d2120 4c4c554e 00000000 6e65706f      != NULL....open
800219d0:	00000000 6f6e5f5f 21206564 554e203d     ....__node != NU
800219e0:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
800219f0:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021a00:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021a10:	5f706f76 6e757274 65746163 203d2120     vop_truncate != 
80021a20:	4c4c554e 00000000 6e757274 65746163     NULL....truncate
80021a30:	00000000 6f6e5f5f 21206564 554e203d     ....__node != NU
80021a40:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021a50:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021a60:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021a70:	5f706f76 696c6e75 21206b6e 554e203d     vop_unlink != NU
80021a80:	00004c4c 696c6e75 00006b6e 6f6e5f5f     LL..unlink..__no
80021a90:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021aa0:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021ab0:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021ac0:	6f5f6e69 3e2d7370 5f706f76 616e6572     in_ops->vop_rena
80021ad0:	2120656d 554e203d 00004c4c 616e6572     me != NULL..rena
80021ae0:	0000656d 6f6e5f5f 21206564 554e203d     me..__node != NU
80021af0:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021b00:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021b10:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021b20:	5f706f76 6b6e696c 203d2120 4c4c554e     vop_link != NULL
80021b30:	00000000 6f6e5f5f 21206564 554e203d     ....__node != NU
80021b40:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021b50:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021b60:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021b70:	5f706f76 6c6d7973 206b6e69 4e203d21     vop_symlink != N
80021b80:	004c4c55 6c6d7973 006b6e69 6f6e5f5f     ULL.symlink.__no
80021b90:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021ba0:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021bb0:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021bc0:	6f5f6e69 3e2d7370 5f706f76 64616572     in_ops->vop_read
80021bd0:	6b6e696c 203d2120 4c4c554e 00000000     link != NULL....
80021be0:	64616572 6b6e696c 00000000 6f6e5f5f     readlink....__no
80021bf0:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021c00:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021c10:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021c20:	6f5f6e69 3e2d7370 5f706f76 69646b6d     in_ops->vop_mkdi
80021c30:	3d212072 4c554e20 0000004c 69646b6d     r != NULL...mkdi
80021c40:	00000072 6c736676 756b6f6f 00632e70     r...vfslookup.c.
80021c50:	65646f6e 6e693e2d 2073665f 4e203d21     node->in_fs != N
80021c60:	004c4c55 6f6e5f5f 21206564 554e203d     ULL.__node != NU
80021c70:	26204c4c 5f5f2026 65646f6e 6e693e2d     LL && __node->in
80021c80:	73706f5f 203d2120 4c4c554e 20262620     _ops != NULL && 
80021c90:	6f6e5f5f 3e2d6564 6f5f6e69 3e2d7370     __node->in_ops->
80021ca0:	5f706f76 6b6f6f6c 21207075 554e203d     vop_lookup != NU
80021cb0:	00004c4c 6b6f6f6c 00007075 6f6e5f5f     LL..lookup..__no
80021cc0:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021cd0:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021ce0:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021cf0:	6f5f6e69 3e2d7370 5f706f76 6b6f6f6c     in_ops->vop_look
80021d00:	705f7075 6e657261 3d212074 4c554e20     up_parent != NUL
80021d10:	0000004c 6b6f6f6c 705f7075 6e657261     L...lookup_paren
80021d20:	00000074 70736676 2e687461 00000063     t...vfspath.c...
80021d30:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
80021d40:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
80021d50:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
80021d60:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
80021d70:	656d616e 656c6966 203d2120 4c4c554e     namefile != NULL
80021d80:	00000000 656d616e 656c6966 00000000     ....namefile....
80021d90:	6d746962 632e7061 00000000 65646e69     bitmap.c....inde
80021da0:	203c2078 6d746962 3e2d7061 7469626e     x < bitmap->nbit
80021db0:	00000073 7469626e 3d212073 26203020     s...nbits != 0 &
80021dc0:	626e2026 20737469 4f57202b 425f4452     & nbits + WORD_B
80021dd0:	20535449 626e203e 00737469 7469626e     ITS > nbits.nbit
80021de0:	202f2073 44524f57 5449425f 3d3d2053     s / WORD_BITS ==
80021df0:	00786920 7265766f 73746962 30203e20      ix.overbits > 0
80021e00:	20262620 7265766f 73746962 57203c20      && overbits < W
80021e10:	5f44524f 53544942 00000000 772a2821     ORD_BITS....!(*w
80021e20:	2064726f 616d2026 00296b73 00736673     ord & mask).sfs.
80021e30:	2e736673 00000063 6c696166 203a6465     sfs.c...failed: 
80021e40:	3a736673 67657220 65747369 69665f72     sfs: register_fi
80021e50:	7973656c 6d657473 6525203a 00000a2e     lesystem: %e....
80021e60:	6c696166 203a6465 3a736673 73667320     failed: sfs: sfs
80021e70:	756f6d5f 203a746e 0a2e6525 00000000     _mount: %e......
80021e80:	5f736673 632e7366 00000000 73665f5f     sfs_fs.c....__fs
80021e90:	203d2120 4c4c554e 20262620 63656863      != NULL && chec
80021ea0:	73665f6b 7079745f 5f5f2865 202c7366     k_fs_type(__fs, 
80021eb0:	29736673 00000000 3a736673 6f727720     sfs)....sfs: wro
80021ec0:	6d20676e 63696761 206e6920 65707573     ng magic in supe
80021ed0:	6f6c6272 202e6b63 38302528 68732078     rblock. (%08x sh
80021ee0:	646c756f 20656220 78383025 000a2e29     ould be %08x)...
80021ef0:	3a736673 20736620 20736168 62207525     sfs: fs has %u b
80021f00:	6b636f6c 64202c73 63697665 61682065     locks, device ha
80021f10:	75252073 6f6c6220 2e736b63 0000000a     s %u blocks.....
80021f20:	61746164 203d2120 4c4c554e 20262620     data != NULL && 
80021f30:	206e656c 6e203d3d 736b6c62 53202a20     len == nblks * S
80021f40:	425f5346 49534b4c 0000455a 3a736673     FS_BLKSIZE..sfs:
80021f50:	756f6d20 203a746e 27732527 64252820      mount: '%s' (%d
80021f60:	2f64252f 0a296425 00000000 6f6e5f5f     /%d/%d).....__no
80021f70:	21206564 554e203d 26204c4c 5f5f2026     de != NULL && __
80021f80:	65646f6e 6e693e2d 73706f5f 203d2120     node->in_ops != 
80021f90:	4c4c554e 20262620 6f6e5f5f 3e2d6564     NULL && __node->
80021fa0:	6f5f6e69 3e2d7370 5f706f76 6e797366     in_ops->vop_fsyn
80021fb0:	3d212063 4c554e20 0000004c 6e797366     c != NULL...fsyn
80021fc0:	00000063 73667321 75733e2d 5f726570     c...!sfs->super_
80021fd0:	74726964 00000079 3a736673 6d6e7520     dirty...sfs: unm
80021fe0:	746e756f 2527203a 28202773 252f6425     ount: '%s' (%d/%
80021ff0:	64252f64 00000a29 3a736673 6e797320     d/%d)...sfs: syn
80022000:	72652063 3a726f72 73252720 25203a27     c error: '%s': %
80022010:	000a2e65 64616f6c 73667320 6f6f7220     e...load sfs roo
80022020:	61662074 64656c69 6525203a 00000000     t failed: %e....
80022030:	5f736673 646f6e69 00632e65 6f6e5f5f     sfs_inode.c.__no
80022040:	21206564 554e203d 26204c4c 68632026     de != NULL && ch
80022050:	5f6b6365 646f6e69 79745f65 5f286570     eck_inode_type(_
80022060:	646f6e5f 73202c65 695f7366 65646f6e     _node, sfs_inode
80022070:	00000029 61766e69 2064696c 656c6966     )...invalid file
80022080:	70797420 64252065 00000a2e 5f736673      type %d....sfs_
80022090:	636f6c62 6e695f6b 3a657375 6c616320     block_inuse: cal
800220a0:	2064656c 2074756f 7220666f 65676e61     led out of range
800220b0:	2c302820 29752520 2e752520 0000000a      (0, %u) %u.....
800220c0:	2d736673 7075733e 752e7265 6573756e     sfs->super.unuse
800220d0:	6c625f64 736b636f 30203e20 00000000     d_blocks > 0....
800220e0:	5f736673 636f6c62 6e695f6b 28657375     sfs_block_inuse(
800220f0:	2c736673 6e692a20 74735f6f 2965726f     sfs, *ino_store)
80022100:	00000000 65646e69 203c2078 5f534653     ....index < SFS_
80022110:	5f4b4c42 544e454e 00005952 65646e69     BLK_NENTRY..inde
80022120:	3d3c2078 6e696420 6c623e2d 736b636f     x <= din->blocks
80022130:	00000000 2d6e6964 646e693e 63657269     ....din->indirec
80022140:	3d3d2074 00003020 2d6e6964 5f62643e     t == 0..din->db_
80022150:	69646e69 74636572 203d3d20 00000030     indirect == 0...
80022160:	206f6e69 30203d3d 207c7c20 5f736673     ino == 0 || sfs_
80022170:	636f6c62 6e695f6b 28657375 2c736673     block_inuse(sfs,
80022180:	6f6e6920 00000029 2d6e6964 7079743e      ino)...din->typ
80022190:	3d212065 53465320 5059545f 49445f45     e != SFS_TYPE_DI
800221a0:	00000052 2d6e6973 6e69643e 79743e2d     R...sin->din->ty
800221b0:	3d206570 4653203d 59545f53 445f4550     pe == SFS_TYPE_D
800221c0:	26205249 73282026 20746f6c 30203d3e     IR && (slot >= 0
800221d0:	20262620 746f6c73 73203c20 3e2d6e69      && slot < sin->
800221e0:	2d6e6964 6f6c623e 29736b63 00000000     din->blocks)....
800221f0:	6c727473 6e286e65 29656d61 203d3c20     strlen(name) <= 
80022200:	5f534653 5f58414d 4d414e46 454c5f45     SFS_MAX_FNAME_LE
80022210:	0000004e 2d6e6973 6e69643e 79743e2d     N...sin->din->ty
80022220:	3d206570 4653203d 59545f53 445f4550     pe == SFS_TYPE_D
80022230:	26205249 73282026 20746f6c 30203d3e     IR && (slot >= 0
80022240:	20262620 746f6c73 203d3c20 2d6e6973      && slot <= sin-
80022250:	6e69643e 6c623e2d 736b636f 00000029     >din->blocks)...
80022260:	5f736673 636f6c62 6e695f6b 28657375     sfs_block_inuse(
80022270:	2c736673 746e6520 26262029 646e6920     sfs, ent) && ind
80022280:	3c207865 53465320 4b4c425f 4e454e5f     ex < SFS_BLK_NEN
80022290:	00595254 2d6e6964 6f6c623e 20736b63     TRY.din->blocks 
800222a0:	30203d21 00000000 2d6e6973 6365723e     != 0....sin->rec
800222b0:	6d69616c 756f635f 3e20746e 00003020     laim_count > 0..
800222c0:	646f6e69 65725f65 6f635f66 28746e75     inode_ref_count(
800222d0:	65646f6e 3d3d2029 26203020 6e692026     node) == 0 && in
800222e0:	5f65646f 6e65706f 756f635f 6e28746e     ode_open_count(n
800222f0:	2965646f 203d3d20 00000030 2d6e6973     ode) == 0...sin-
80022300:	6e69643e 69643e2d 666e6972 6c732e6f     >din->dirinfo.sl
80022310:	2073746f 30203d21 20262620 736b6e6c     ots != 0 && lnks
80022320:	3e2d6e69 2d6e6964 696c6e3e 20736b6e     in->din->nlinks 
80022330:	30203d21 00000000 00002e2e 736b6e6c     != 0........lnks
80022340:	3e2d6e69 2d6e6964 696c6e3e 20736b6e     in->din->nlinks 
80022350:	30203d3d 00000000 646f6e69 65725f65     == 0....inode_re
80022360:	6f635f66 28746e75 6b6e696c 646f6e5f     f_count(link_nod
80022370:	3d202965 2031203d 69202626 65646f6e     e) == 1 && inode
80022380:	65706f5f 6f635f6e 28746e75 6b6e696c     _open_count(link
80022390:	646f6e5f 3d202965 0030203d 6b6c6274     _node) == 0.tblk
800223a0:	3d3d2073 6e696420 6c623e2d 736b636f     s == din->blocks
800223b0:	00000000 2d6e6964 6f6c623e 20736b63     ....din->blocks 
800223c0:	74203d3d 736b6c62 00000000 206f6e69     == tblks....ino 
800223d0:	73203d21 3e2d6e69 206f6e69 73202626     != sin->ino && s
800223e0:	3e2d6e69 2d6e6964 7079743e 3d3d2065     in->din->type ==
800223f0:	53465320 5059545f 49445f45 00000052      SFS_TYPE_DIR...
80022400:	7461702a 3d212068 305c2720 26262027     *path != '\0' &&
80022410:	61702a20 21206874 2f27203d 00000027      *path != '/'...
80022420:	2d6e6973 6e69643e 6c6e3e2d 736b6e69     sin->din->nlinks
80022430:	203d2120 00000030 5f736673 65726964      != 0...sfs_dire
80022440:	6c5f746e 206b6e69 6f727265 25203a72     nt_link error: %
80022450:	000a2e65 5f736673 632e6f69 00000000     e...sfs_io.c....
80022460:	6b6c6228 21206f6e 2030203d 21207c7c     (blkno != 0 || !
80022470:	63656863 2620296b 6c622026 206f6e6b     check) && blkno 
80022480:	6673203c 733e2d73 72657075 6f6c622e     < sfs->super.blo
80022490:	00736b63 7366666f 3e207465 2030203d     cks.offset >= 0 
800224a0:	6f202626 65736666 203c2074 5f534653     && offset < SFS_
800224b0:	534b4c42 20455a49 6f202626 65736666     BLKSIZE && offse
800224c0:	202b2074 206e656c 53203d3c 425f5346     t + len <= SFS_B
800224d0:	49534b4c 0000455a 656c6966 0000632e     LKSIZE..file.c..
800224e0:	735f7366 63757274 3d212074 4c554e20     fs_struct != NUL
800224f0:	2626204c 5f736620 6e756f63 73662874     L && fs_count(fs
80022500:	7274735f 29746375 30203e20 00000000     _struct) > 0....
80022510:	65706f66 6f635f6e 28746e75 656c6966     fopen_count(file
80022520:	3d3d2029 00003020 656c6966 74733e2d     ) == 0..file->st
80022530:	73757461 203d3d20 495f4446 2054494e     atus == FD_INIT 
80022540:	66207c7c 2d656c69 6174733e 20737574     || file->status 
80022550:	46203d3d 4c435f44 4445534f 00000000     == FD_CLOSED....
80022560:	656c6966 74733e2d 73757461 203d3d20     file->status == 
80022570:	4f5f4446 454e4550 7c7c2044 6c696620     FD_OPENED || fil
80022580:	733e2d65 75746174 3d3d2073 5f444620     e->status == FD_
80022590:	534f4c43 00004445 65706f66 6f635f6e     CLOSED..fopen_co
800225a0:	28746e75 656c6966 203e2029 00000030     unt(file) > 0...
800225b0:	6c696628 733e2d65 75746174 3d3d2073     (file->status ==
800225c0:	5f444620 54494e49 207c7c20 656c6966      FD_INIT || file
800225d0:	74733e2d 73757461 203d3d20 4f5f4446     ->status == FD_O
800225e0:	454e4550 26202944 69662026 3e2d656c     PENED) && file->
800225f0:	65646f6e 203d2120 4c4c554e 00000000     node != NULL....
80022600:	656c6966 74733e2d 73757461 203d3d20     file->status == 
80022610:	4f5f4446 454e4550 00000044 3e2d6f74     FD_OPENED...to->
80022620:	74617473 3d207375 4446203d 494e495f     status == FD_INI
80022630:	26262054 6f726620 733e2d6d 75746174     T && from->statu
80022640:	3d3d2073 5f444620 4e45504f 00004445     s == FD_OPENED..
80022650:	3e2d6f74 74617473 3d207375 4446203d     to->status == FD
80022660:	4f4c435f 20444553 66202626 2d6d6f72     _CLOSED && from-
80022670:	6174733e 20737574 46203d3d 4c435f44     >status == FD_CL
80022680:	4445534f 00000000 6f6e5f5f 21206564     OSED....__node !
80022690:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
800226a0:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
800226b0:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
800226c0:	3e2d7370 5f706f76 61747366 3d212074     ps->vop_fstat !=
800226d0:	4c554e20 0000004c 61747366 00000074      NULL...fstat...
800226e0:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
800226f0:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
80022700:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
80022710:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
80022720:	64616572 203d2120 4c4c554e 00000000     read != NULL....
80022730:	64616572 00000000 6f6e5f5f 21206564     read....__node !
80022740:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
80022750:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
80022760:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
80022770:	3e2d7370 5f706f76 74697277 3d212065     ps->vop_write !=
80022780:	4c554e20 0000004c 74697277 00000065      NULL...write...
80022790:	6f6e5f5f 21206564 554e203d 26204c4c     __node != NULL &
800227a0:	5f5f2026 65646f6e 6e693e2d 73706f5f     & __node->in_ops
800227b0:	203d2120 4c4c554e 20262620 6f6e5f5f      != NULL && __no
800227c0:	3e2d6564 6f5f6e69 3e2d7370 5f706f76     de->in_ops->vop_
800227d0:	73797274 206b6565 4e203d21 004c4c55     tryseek != NULL.
800227e0:	73797274 006b6565 6f6e5f5f 21206564     tryseek.__node !
800227f0:	554e203d 26204c4c 5f5f2026 65646f6e     = NULL && __node
80022800:	6e693e2d 73706f5f 203d2120 4c4c554e     ->in_ops != NULL
80022810:	20262620 6f6e5f5f 3e2d6564 6f5f6e69      && __node->in_o
80022820:	3e2d7370 5f706f76 64746567 6e657269     ps->vop_getdiren
80022830:	20797274 4e203d21 004c4c55 64746567     try != NULL.getd
80022840:	6e657269 00797274 65706970 005f723a     irentry.pipe:r_.
80022850:	65706970 005f773a 735f7366 63757274     pipe:w_.fs_struc
80022860:	3d212074 4c554e20 2626204c 5f736620     t != NULL && fs_
80022870:	6e756f63 73662874 7274735f 29746375     count(fs_struct)
80022880:	203d3d20 00000030 656c6966 64663e2d      == 0...file->fd
80022890:	0a64253a 00000000 656c6966 74733e2d     :%d.....file->st
800228a0:	73757461 203d3d20 4e5f4446 00454e4f     atus == FD_NONE.
800228b0:	21206f74 554e203d 26204c4c 72662026     to != NULL && fr
800228c0:	21206d6f 554e203d 00004c4c 635f7366     om != NULL..fs_c
800228d0:	746e756f 296f7428 203d3d20 26262030     ount(to) == 0 &&
800228e0:	5f736620 6e756f63 72662874 20296d6f      fs_count(from) 
800228f0:	0030203e 75626f69 00632e66 2d626f69     > 0.iobuf.c.iob-
80022900:	5f6f693e 69736572 3d3e2064 00006e20     >io_resid >= n..
80022910:	7361622a 64253d65 00000d0a 3d6e656c     *base=%d....len=
80022920:	0d0a6425 00000000 66737973 2e656c69     %d......sysfile.
80022930:	00000063 206e656c 61203d3e 006e656c     c...len >= alen.
80022940:	74697277 203a7665 253d6466 20783830     writev: fd=%08x 
80022950:	3d766f69 78383025 766f6920 3d746e63     iov=%08x iovcnt=
80022960:	000a6425 66737973 5f656c69 756e696c     %d..sysfile_linu
80022970:	63665f78 366c746e 64663a34 3830253d     x_fcntl64:fd=%08
80022980:	6d632078 30253d64 61207838 253d6772     x cmd=%08x arg=%
80022990:	0a783830 00000000 69647473 00003a6e     08x.....stdin:..
800229a0:	6f647473 003a7475 6e69622f 0068732f     stdout:./bin/sh.
800229b0:	48544150 69622f3d 00002f6e 6e72656b     PATH=/bin/..kern
800229c0:	655f6c65 76636578 70203a65 3d206469     el_execve: pid =
800229d0:	2c642520 6d616e20 203d2065 22732522      %d, name = "%s"
800229e0:	00000a2e 72657375 69616d5f 7865206e     ....user_main ex
800229f0:	65766365 69616620 2c64656c 206f6e20     ecve failed, no 
80022a00:	6e69622f 3f68732f 00000a2e 6d6f682f     /bin/sh?..../hom
80022a10:	736f2f65 2f62616c 726f6375 696d2d65     e/oslab/ucore-mi
80022a20:	732d7370 646e6174 5f647261 72732f32     ps-standard_2/sr
80022a30:	656b2f63 752d6e72 65726f63 6372612f     c/kern-ucore/arc
80022a40:	696d2f68 6d2f7370 6d702f6d 00682e6d     h/mips/mm/pmm.h.
80022a50:	44444150 61632052 64656c6c 74697720     PADDR called wit
80022a60:	6e692068 696c6176 766b2064 30252061     h invalid kva %0
80022a70:	00786c38 70326170 20656761 6c6c6163     8lx.pa2page call
80022a80:	77206465 20687469 61766e69 2064696c     ed with invalid 
80022a90:	00006170 4444414b 61632052 64656c6c     pa..KADDR called
80022aa0:	74697720 6e692068 696c6176 61702064      with invalid pa
80022ab0:	38302520 0000786c 636f7270 0000632e      %08lx..proc.c..
80022ac0:	646e6528 6c203c20 26262061 61747320     (end < la && sta
80022ad0:	3d207472 6e65203d 7c202964 6528207c     rt == end) || (e
80022ae0:	3e20646e 616c203d 20262620 72617473     nd >= la && star
80022af0:	3d3d2074 29616c20 00000000 656c6469     t == la)....idle
80022b00:	636f7270 69786520 000a2e74 74696e69     proc exit...init
80022b10:	636f7270 69786520 000a2e74 6f645f5f     proc exit...__do
80022b20:	6978655f 69772074 6e206c6c 7220746f     _exit will not r
80022b30:	72757465 2021216e 25206425 000a2e64     eturn!! %d %d...
80022b40:	72727563 2d746e65 6961773e 74735f74     current->wait_st
80022b50:	20657461 30203d3d 00000000 72727563     ate == 0....curr
80022b60:	2d746e65 6d69743e 6c735f65 20656369     ent->time_slice 
80022b70:	30203d3e 00000000 5f646c6f 735f7366     >= 0....old_fs_s
80022b80:	63757274 3d212074 4c554e20 0000004c     truct != NULL...
80022b90:	6c756e3c 25203e6c 00000064 63677261     <null> %d...argc
80022ba0:	203d3e20 26262030 67726120 3d3c2063      >= 0 && argc <=
80022bb0:	45584520 414d5f43 52415f58 554e5f47      EXEC_MAX_ARG_NU
80022bc0:	0000004d 63766e65 203d3e20 26262030     M...envc >= 0 &&
80022bd0:	766e6520 3d3c2063 45584520 414d5f43      envc <= EXEC_MA
80022be0:	4e455f58 554e5f56 0000004d 64616f6c     X_ENV_NUM...load
80022bf0:	6f63695f 203a6564 72727563 2d746e65     _icode: current-
80022c00:	206d6d3e 7473756d 20656220 74706d65     >mm must be empt
80022c10:	000a2e79 64616f6c 64646120 73736572     y...load address
80022c20:	7830203a 78383025 7a697320 25203a65     : 0x%08x size: %
80022c30:	00000a64 65746e69 665f7072 3d3e2064     d...interp_fd >=
80022c40:	00003020 74657228 6c203d20 5f64616f      0..(ret = load_
80022c50:	646f6369 65725f65 69286461 7265746e     icode_read(inter
80022c60:	64665f70 6e69202c 70726574 666c655f     p_fd, interp_elf
80022c70:	6973202c 666f657a 72747328 20746375     , sizeof(struct 
80022c80:	68666c65 2c297264 29293020 203d3d20     elfhdr), 0)) == 
80022c90:	00000030 65746e69 655f7072 3e2d666c     0...interp_elf->
80022ca0:	616d5f65 20636967 45203d3d 4d5f464c     e_magic == ELF_M
80022cb0:	43494741 00000000 74657228 6c203d20     AGIC....(ret = l
80022cc0:	5f64616f 646f6369 65725f65 69286461     oad_icode_read(i
80022cd0:	7265746e 64665f70 6e69202c 70726574     nterp_fd, interp
80022ce0:	2c68705f 7a697320 28666f65 75727473     _ph, sizeof(stru
80022cf0:	70207463 68676f72 2c297264 746e6920     ct proghdr), int
80022d00:	5f707265 666f6870 20292966 30203d3d     erp_phoff)) == 0
80022d10:	00000000 74657228 6d203d20 705f7061     ....(ret = map_p
80022d20:	6e692868 70726574 2c64665f 746e6920     h(interp_fd, int
80022d30:	5f707265 202c6870 202c6d6d 61696226     erp_ph, mm, &bia
80022d40:	31202c73 3d202929 0030203d 74696177     s, 1)) == 0.wait
80022d50:	6c646920 6f727065 726f2063 696e6920      idleproc or ini
80022d60:	6f727074 000a2e63 6b736964 00003a30     tproc...disk0:..
80022d70:	20746573 746f6f62 20736620 6c696166     set boot fs fail
80022d80:	203a6465 0a2e6525 00000000 61657263     ed: %e......crea
80022d90:	75206574 5f726573 6e69616d 69616620     te user_main fai
80022da0:	2e64656c 0000000a 206c6c61 72657375     led.....all user
80022db0:	646f6d2d 72702065 7365636f 20736573     -mode processes 
80022dc0:	65766168 69757120 000a2e74 705f726e     have quit...nr_p
80022dd0:	65636f72 3d207373 2031203d 6c70202b     rocess == 1 + pl
80022de0:	65725f73 6c286461 5f757063 6e756f63     s_read(lcpu_coun
80022df0:	00002974 755f726e 5f646573 65676170     t)..nr_used_page
80022e00:	74735f73 2065726f 6e203d3d 73755f72     s_store == nr_us
80022e10:	705f6465 73656761 00002928 62616c73     ed_pages()..slab
80022e20:	6c6c615f 7461636f 735f6465 65726f74     _allocated_store
80022e30:	203d3d20 62616c73 6c6c615f 7461636f      == slab_allocat
80022e40:	29286465 00000000 74696e69 65686320     ed()....init che
80022e50:	6d206b63 726f6d65 61702079 0a2e7373     ck memory pass..
80022e60:	00000000 6e72656b 74206c65 61657268     ....kernel threa
80022e70:	61632064 73206c6c 625f7379 21216b72     d call sys_brk!!
80022e80:	00000a2e 62646c6f 25206b72 53475020     ....oldbrk % PGS
80022e90:	20455a49 30203d3d 00000000 6f637521     IZE == 0....!uco
80022ea0:	695f6572 6e695f6e 72726574 28747075     re_in_interrupt(
80022eb0:	00000029 6e72656b 74206c65 61657268     )...kernel threa
80022ec0:	61632064 6d206c6c 2170616d 000a2e21     d call mmap!!...
80022ed0:	6e72656b 74206c65 61657268 61632064     kernel thread ca
80022ee0:	6d206c6c 616d6e75 2e212170 0000000a     ll munmap!!.....
80022ef0:	656d6873 65725f6d 68732866 296d656d     shmem_ref(shmem)
80022f00:	203d3d20 00000030 6e6e6163 6120746f      == 0...cannot a
80022f10:	636f6c6c 6c646920 6f727065 000a2e63     lloc idleproc...
80022f20:	61657263 66206574 74735f73 74637572     create fs_struct
80022f30:	64692820 7270656c 2029636f 6c696166      (idleproc) fail
80022f40:	0a2e6465 00000000 656c6469 0064252f     ed......idle/%d.
80022f50:	61657263 69206574 5f74696e 6e69616d     create init_main
80022f60:	69616620 2e64656c 0000000a 696e696b      failed.....kini
80022f70:	00000074 656c6469 636f7270 203d2120     t...idleproc != 
80022f80:	4c4c554e 20262620 656c6469 636f7270     NULL && idleproc
80022f90:	69703e2d 3d3d2064 70636c20 64695f75     ->pid == lcpu_id
80022fa0:	00000078 74696e69 636f7270 203d2120     x...initproc != 
80022fb0:	4c4c554e 20262620 74696e69 636f7270     NULL && initproc
80022fc0:	69703e2d 3d3d2064 70636c20 6f635f75     ->pid == lcpu_co
80022fd0:	00746e75 6e676973 632e6c61 00000000     unt.signal.c....
80022fe0:	20676973 4e203d21 204c4c55 73202626     sig != NULL && s
80022ff0:	616e6769 6f635f6c 28746e75 29676973     ignal_count(sig)
80023000:	203d3d20 00000030 21206873 554e203d      == 0...sh != NU
80023010:	26204c4c 69732026 6e616867 6f635f64     LL && sighand_co
80023020:	28746e75 20296873 30203d3d 00000000     unt(sh) == 0....
80023030:	5f746567 63286973 65727275 2d29746e     get_si(current)-
80023040:	6769733e 646e6168 00000000 5f746567     >sighand....get_
80023050:	63286973 65727275 2d29746e 6769733e     si(current)->sig
80023060:	006c616e 61727421 6e695f70 72656b5f     nal.!trap_in_ker
80023070:	286c656e 00296674 21206d6d 554e203d     nel(tf).mm != NU
80023080:	00004c4c 656d6873 00632e6d 76657270     LL..shmem.c.prev
80023090:	74733e2d 20747261 7270203c 3e2d7665     ->start < prev->
800230a0:	00646e65 70657470 203d2120 4c4c554e     end.ptep != NULL
800230b0:	00000000 32657470 65676170 6c616320     ....pte2page cal
800230c0:	2064656c 68746977 766e6920 64696c61     led with invalid
800230d0:	65747020 00000000 72646461 73203c20      pte....addr < s
800230e0:	6d656d68 656c3e2d 0000006e 6e6d6873     hmem->len...shmn
800230f0:	203d3d20 4c4c554e 207c7c20 6d687328      == NULL || (shm
80023100:	733e2d6e 74726174 203d3c20 72646461     n->start <= addr
80023110:	20262620 72646461 73203c20 2d6e6d68      && addr < shmn-
80023120:	646e653e 00000029 76657270 6e653e2d     >end)...prev->en
80023130:	3d3c2064 78656e20 733e2d74 74726174     d <= next->start
80023140:	00000000 7478656e 74733e2d 20747261     ....next->start 
80023150:	656e203c 3e2d7478 00646e65 2e6d6d76     < next->end.vmm.
80023160:	00000063 72617473 20252074 49534750     c...start % PGSI
80023170:	3d20455a 2030203d 65202626 2520646e     ZE == 0 && end %
80023180:	53475020 20455a49 30203d3d 00000000      PGSIZE == 0....
80023190:	2d616d76 5f6d763e 72617473 3d3c2074     vma->vm_start <=
800231a0:	61747320 26207472 74732026 20747261      start && start 
800231b0:	6e65203c 26262064 646e6520 203d3c20     < end && end <= 
800231c0:	2d616d76 5f6d763e 00646e65 76657270     vma->vm_end.prev
800231d0:	6d763e2d 6174735f 3c207472 65727020     ->vm_start < pre
800231e0:	763e2d76 6e655f6d 00000064 2d616d76     v->vm_end...vma-
800231f0:	5f6d763e 72617473 203c2074 2d616d76     >vm_start < vma-
80023200:	5f6d763e 00646e65 76657270 6d763e2d     >vm_end.prev->vm
80023210:	646e655f 203d3c20 7478656e 6d763e2d     _end <= next->vm
80023220:	6174735f 00007472 7478656e 6d763e2d     _start..next->vm
80023230:	6174735f 3c207472 78656e20 763e2d74     _start < next->v
80023240:	6e655f6d 00000064 635f6d6d 746e756f     m_end...mm_count
80023250:	296d6d28 203d3d20 00000030 20616d76     (mm) == 0...vma 
80023260:	4e203d21 004c4c55 2120656c 2826203d     != NULL.le != &(
80023270:	3e2d6d6d 70616d6d 73696c5f 00002974     mm->mmap_list)..
80023280:	70616d6d 6d763e2d 6174735f 3d207472     mmap->vm_start =
80023290:	2069203d 2035202a 6d202626 2d70616d     = i * 5 && mmap-
800232a0:	5f6d763e 20646e65 69203d3d 35202a20     >vm_end == i * 5
800232b0:	32202b20 00000000 2d616d76 5f6d763e      + 2....vma->vm_
800232c0:	72617473 3d3d2074 2a206a20 26203520     start == j * 5 &
800232d0:	6d762026 763e2d61 6e655f6d 3d3d2064     & vma->vm_end ==
800232e0:	2a206a20 2b203520 00003220 63656863      j * 5 + 2..chec
800232f0:	6d765f6b 74735f61 74637572 73202928     k_vma_struct() s
80023300:	65636375 64656465 00000a21 63656863     ucceeded!...chec
80023310:	6d765f6b 2029286d 63637573 65646565     k_vmm() succeede
80023320:	000a2e64 3d206d6d 6d76203d 763e2d61     d...mm == vma->v
80023330:	6d6d5f6d 00000000 21206d6d 554e203d     m_mm....mm != NU
80023340:	26204c4c 6d6d2026 756f635f 6d28746e     LL && mm_count(m
80023350:	3d20296d 0030203d 72727563 20746e65     m) == 0.current 
80023360:	4e203d21 004c4c55 65676170 75616620     != NULL.page fau
80023370:	6920746c 656b206e 6c656e72 72687420     lt in kernel thr
80023380:	3a646165 64697020 25203d20 6e202c64     ead: pid = %d, n
80023390:	20656d61 7325203d 6425202c 38302520     ame = %s, %d %08
800233a0:	000a2e78 53204f4e 0a504157 00000000     x...NO SWAP.....
800233b0:	25207025 64252070 20642520 000a7825     %p %p %d %d %x..
800233c0:	62616c73 0000632e 20746f6e 6c732061     slab.c..not a sl
800233d0:	70206261 20656761 78383025 0000000a     ab page %08x....
800233e0:	65676150 62616c53 00297028 6f746567     PageSlab(p).geto
800233f0:	72656472 69616620 2e64656c 0a642520     rder failed. %d.
80023400:	00000000 6e756f66 0a213264 00000000     ....found2!.....
80023410:	5f66666f 62616c73 626f203a 7a69736a     off_slab: objsiz
80023420:	203d2065 202c6425 206d756e 3025203d     e = %d, num = %0
80023430:	6f207838 735f6666 5f62616c 696d696c     8x off_slab_limi
80023440:	203d2074 78383025 0000002e 636c6163     t = %08x....calc
80023450:	74616c75 6c735f65 6f5f6261 3a726576     ulate_slab_over:
80023460:	69616620 2e64656c 00000000 6c616d6b      failed.....kmal
80023470:	5f636f6c 74696e69 73202928 65636375     loc_init() succe
80023480:	64656465 00000a21 657a6973 30203e20     eded!...size > 0
80023490:	00000000 745f6272 2e656572 00000063     ....rb_tree.c...
800234a0:	3d212078 65727420 723e2d65 20746f6f     x != tree->root 
800234b0:	78202626 203d2120 206c696e 79202626     && x != nil && y
800234c0:	203d2120 006c696e 696e2821 723e2d6c      != nil.!(nil->r
800234d0:	00296465 20746572 4e203d21 004c4c55     ed).ret != NULL.
800234e0:	706d6f63 20657261 4e203d21 004c4c55     compare != NULL.
800234f0:	72742821 3e2d6565 2d6c696e 6465723e     !(tree->nil->red
80023500:	26262029 74282120 2d656572 6f6f723e     ) && !(tree->roo
80023510:	723e2d74 00296465 3d212079 6f6f7220     t->red).y != roo
80023520:	26262074 21207920 696e203d 0000006c     t && y != nil...
80023530:	646f6e21 723e2d65 00006465 504d4f43     !node->red..COMP
80023540:	28455241 65657274 6f6e202c 202c6564     ARE(tree, node, 
80023550:	65646f6e 656c3e2d 20297466 30203d3e     node->left) >= 0
80023560:	00000000 65646f6e 656c3e2d 3e2d7466     ....node->left->
80023570:	65726170 3d20746e 6f6e203d 00006564     parent == node..
80023580:	504d4f43 28455241 65657274 6f6e202c     COMPARE(tree, no
80023590:	202c6564 65646f6e 69723e2d 29746867     de, node->right)
800235a0:	203d3c20 00000030 65646f6e 69723e2d      <= 0...node->ri
800235b0:	2d746867 7261703e 20746e65 6e203d3d     ght->parent == n
800235c0:	0065646f 646f6e21 6c3e2d65 2d746665     ode.!node->left-
800235d0:	6465723e 20262620 646f6e21 723e2d65     >red && !node->r
800235e0:	74686769 65723e2d 00000064 6c5f6268     ight->red...hb_l
800235f0:	20746665 68203d3d 69725f62 00746867     eft == hb_right.
80023600:	65657274 203d2120 4c4c554e 00000000     tree != NULL....
80023610:	6c696e21 65723e2d 26262064 6f6f7220     !nil->red && roo
80023620:	6c3e2d74 20746665 6e203d3d 00006c69     t->left == nil..
80023630:	6b72616d 205d695b 31203d3d 00000000     mark[i] == 1....
80023640:	65646f6e 203d2120 4c4c554e 20262620     node != NULL && 
80023650:	65646f6e 203d3d20 6c612826 5d695b6c     node == &(all[i]
80023660:	62723e2d 6e696c5f 0000296b 65646f6e     ->rb_link)..node
80023670:	203d2120 4c4c554e 20262620 326e6272      != NULL && rbn2
80023680:	61746164 646f6e28 3e2d2965 61746164     data(node)->data
80023690:	203d3d20 00000069 65646f6e 203d2120      == i...node != 
800236a0:	4c4c554e 20262620 326e6272 61746164     NULL && rbn2data
800236b0:	646f6e28 3e2d2965 61746164 203d3d20     (node)->data == 
800236c0:	0078616d 745f6272 5f656572 74706d65     max.rb_tree_empt
800236d0:	72742879 00296565 00007325 33323130     y(tree).%s..0123
800236e0:	37363534 62613938 66656463 00000000     456789abcdef....
800236f0:	6c756e28 0000296c 6f727265 64252072     (null)..error %d
80023700:	00000000 7265704f 6f697461 6f6e206e     ....Operation no
80023710:	65702074 74696d72 00646574 73206f4e     t permitted.No s
80023720:	20686375 656c6966 20726f20 65726964     uch file or dire
80023730:	726f7463 00000079 73206f4e 20686375     ctory...No such 
80023740:	636f7270 00737365 65746e49 70757272     process.Interrup
80023750:	20646574 74737973 63206d65 006c6c61     ted system call.
80023760:	204f2f49 6f727265 00000072 73206f4e     I/O error...No s
80023770:	20686375 69766564 6f206563 64612072     uch device or ad
80023780:	73657264 00000073 75677241 746e656d     dress...Argument
80023790:	73696c20 6f742074 6f6c206f 0000676e      list too long..
800237a0:	63657845 726f6620 2074616d 6f727265     Exec format erro
800237b0:	00000072 20646142 656c6966 6d756e20     r...Bad file num
800237c0:	00726562 63206f4e 646c6968 6f727020     ber.No child pro
800237d0:	73736563 00007365 20797254 69616761     cesses..Try agai
800237e0:	0000006e 2074754f 6d20666f 726f6d65     n...Out of memor
800237f0:	00000079 6d726550 69737369 64206e6f     y...Permission d
80023800:	65696e65 00000064 20646142 72646461     enied...Bad addr
80023810:	00737365 636f6c42 6564206b 65636976     ess.Block device
80023820:	71657220 65726975 00000064 69766544      required...Devi
80023830:	6f206563 65722072 72756f73 62206563     ce or resource b
80023840:	00797375 656c6946 69786520 00737473     usy.File exists.
80023850:	736f7243 65642d73 65636976 6e696c20     Cross-device lin
80023860:	0000006b 73206f4e 20686375 69766564     k...No such devi
80023870:	00006563 20746f4e 69642061 74636572     ce..Not a direct
80023880:	0079726f 61207349 72696420 6f746365     ory.Is a directo
80023890:	00007972 61766e49 2064696c 75677261     ry..Invalid argu
800238a0:	746e656d 00000000 656c6946 62617420     ment....File tab
800238b0:	6f20656c 66726576 00776f6c 206f6f54     le overflow.Too 
800238c0:	796e616d 65706f20 6966206e 0073656c     many open files.
800238d0:	20746f4e 79742061 72776570 72657469     Not a typewriter
800238e0:	00000000 74786554 6c696620 75622065     ....Text file bu
800238f0:	00007973 656c6946 6f6f7420 72616c20     sy..File too lar
80023900:	00006567 73206f4e 65636170 66656c20     ge..No space lef
80023910:	6e6f2074 76656420 00656369 656c6c49     t on device.Ille
80023920:	206c6167 6b656573 00000000 64616552     gal seek....Read
80023930:	6c6e6f2d 69662079 7320656c 65747379     -only file syste
80023940:	0000006d 206f6f54 796e616d 6e696c20     m...Too many lin
80023950:	0000736b 6b6f7242 70206e65 00657069     ks..Broken pipe.
80023960:	6874614d 67726120 6e656d75 756f2074     Math argument ou
80023970:	666f2074 6d6f6420 206e6961 6620666f     t of domain of f
80023980:	00636e75 6874614d 73657220 20746c75     unc.Math result 
80023990:	20746f6e 72706572 6e657365 6c626174     not representabl
800239a0:	00000065 6d696e55 6d656c70 65746e65     e...Unimplemente
800239b0:	65462064 72757461 00000065 696e6150     d Feature...Pani
800239c0:	61462063 72756c69 00000065 636f7250     c Failure...Proc
800239d0:	20737365 6b207369 656c6c69 00000064     ess is killed...
800239e0:	70736e55 66696365 20646569 7520726f     Unspecified or u
800239f0:	6f6e6b6e 70206e77 6c626f72 00006d65     nknown problem..
80023a00:	50415753 41455220 52572f44 20455449     SWAP READ/WRITE 
80023a10:	6c756166 00000074 2e6d6d70 00000063     fault...pmm.c...
80023a20:	52455355 4343415f 28535345 72617473     USER_ACCESS(star
80023a30:	65202c74 0029646e 72617473 3d3e2074     t, end).start >=
80023a40:	26203020 74732026 20747261 6e65203c      0 && start < en
80023a50:	26262064 646e6520 203d3c20 49535450     d && end <= PTSI
80023a60:	0000455a 6574702a 3d212070 26203020     ZE..*ptep != 0 &
80023a70:	6e2a2026 70657470 203d3d20 00000030     & *nptep == 0...
80023a80:	20746572 30203d3d 00000000 6e657665     ret == 0....even
80023a90:	00632e74 67616c66 3d3d2073 5f545720     t.c.flags == WT_
80023aa0:	45544e49 50555252 00444554 786f626d     INTERRUPTED.mbox
80023ab0:	0000632e 786f626d 74733e2d 20657461     .c..mbox->state 
80023ac0:	43203d3d 49534f4c 2620474e 626d2026     == CLOSING && mb
80023ad0:	3e2d786f 73756e69 3d3d2065 00003020     ox->inuse == 0..
80023ae0:	7473696c 706d655f 26287974 6f626d28     list_empty(&(mbo
80023af0:	6d3e2d78 6c5f6773 296b6e69 00000029     x->msg_link))...
80023b00:	74696177 6575715f 655f6575 7974706d     wait_queue_empty
80023b10:	6d282628 2d786f62 6e65733e 73726564     (&(mbox->senders
80023b20:	00002929 74696177 6575715f 655f6575     ))..wait_queue_e
80023b30:	7974706d 6d282628 2d786f62 6365723e     mpty(&(mbox->rec
80023b40:	65766965 29297372 00000000 786f626d     eivers))....mbox
80023b50:	74733e2d 20657461 4f203d3d 454e4550     ->state == OPENE
80023b60:	00000044 73696c21 6d655f74 28797470     D...!list_empty(
80023b70:	65726626 626d5f65 6c5f786f 29747369     &free_mbox_list)
80023b80:	00000000 786f626d 74733e2d 20657461     ....mbox->state 
80023b90:	4f203d3d 454e4550 26262044 6f626d20     == OPENED && mbo
80023ba0:	6d3e2d78 735f7861 73746f6c 6d203e20     x->max_slots > m
80023bb0:	2d786f62 6f6c733e 00007374 20746572     box->slots..ret 
80023bc0:	30203d21 20262620 786f626d 74733e2d     != 0 && mbox->st
80023bd0:	20657461 43203d3d 49534f4c 0000474e     ate == CLOSING..
80023be0:	786f626d 74733e2d 20657461 4f203d3d     mbox->state == O
80023bf0:	454e4550 26262044 6f626d20 733e2d78     PENED && mbox->s
80023c00:	73746f6c 30203e20 00000000 73696c21     lots > 0....!lis
80023c10:	6d655f74 28797470 626d2826 3e2d786f     t_empty(&(mbox->
80023c20:	5f67736d 6b6e696c 00002929 20676573     msg_link))..seg 
80023c30:	4e203d21 004c4c55 2e6d6573 00000063     != NULL.sem.c...
80023c40:	2d6d6573 6c61763e 00006469 74696177     sem->valid..wait
80023c50:	72703e2d 3e2d636f 74696177 6174735f     ->proc->wait_sta
80023c60:	3d206574 6177203d 735f7469 65746174     te == wait_state
80023c70:	00000000 67616c66 3d3d2073 00003020     ....flags == 0..
80023c80:	5f6d6573 75657571 3d212065 4c554e20     sem_queue != NUL
80023c90:	2626204c 6d657320 6575715f 635f6575     L && sem_queue_c
80023ca0:	746e756f 6d657328 6575715f 20296575     ount(sem_queue) 
80023cb0:	30203d3d 00000000 72727563 2d746e65     == 0....current-
80023cc0:	6d65733e 6575715f 21206575 554e203d     >sem_queue != NU
80023cd0:	00004c4c 74696177 0000632e 7473696c     LL..wait.c..list
80023ce0:	706d655f 26287974 69617728 773e2d74     _empty(&(wait->w
80023cf0:	5f746961 6b6e696c 26202929 61772026     ait_link)) && wa
80023d00:	3e2d7469 636f7270 203d2120 4c4c554e     it->proc != NULL
80023d10:	00000000 73696c21 6d655f74 28797470     ....!list_empty(
80023d20:	61772826 3e2d7469 74696177 6e696c5f     &(wait->wait_lin
80023d30:	2029296b 77202626 2d746961 6961773e     k)) && wait->wai
80023d40:	75715f74 20657565 71203d3d 65756575     t_queue == queue
80023d50:	00000000 63657053 206c6169 6e72656b     ....Special kern
80023d60:	73206c65 6f626d79 0a3a736c 00000000     el symbols:.....
80023d70:	6e652020 20797274 00783020 68702820       entry  0x. (ph
80023d80:	0a297379 00000000 74652020 09747865     ys).....  etext.
80023d90:	00007830 64652020 09617461 00007830     0x..  edata.0x..
80023da0:	6e652020 78300964 00000000 6e72654b       end.0x....Kern
80023db0:	65206c65 75636578 6c626174 656d2065     el executable me
80023dc0:	79726f6d 6f6f6620 69727074 203a746e     mory footprint: 
80023dd0:	00000000 000a424b 6265646b 632e6775     ....KB..kdebug.c
80023de0:	00000000 6d696e55 00006c70 706c6568     ....Unimpl..help
80023df0:	00000000 00202d20 70736944 2079616c     .... - .Display 
80023e00:	73696874 73696c20 666f2074 6d6f6320     this list of com
80023e10:	646e616d 00002e73 6e72656b 6f666e69     mands...kerninfo
80023e20:	00000000 70736944 2079616c 6f666e69     ....Display info
80023e30:	74616d72 206e6f69 756f6261 68742074     rmation about th
80023e40:	656b2065 6c656e72 0000002e 636c6557     e kernel....Welc
80023e50:	20656d6f 74206f74 6b206568 656e7265     ome to the kerne
80023e60:	6564206c 20677562 696e6f6d 21726f74     l debug monitor!
80023e70:	00000a21 65707954 65682720 2027706c     !...Type 'help' 
80023e80:	20726f66 696c2061 6f207473 6f632066     for a list of co
80023e90:	6e616d6d 0a2e7364 00000000 00203e4b     mmands......K> .
80023ea0:	0d0a0920 00000000 206f6f54 796e616d      .......Too many
80023eb0:	67726120 6e656d75 0a2e7374 00000000      arguments......
80023ec0:	6e6b6e55 206e776f 6d6d6f63 20646e61     Unknown command 
80023ed0:	00000027 00000a27 6e72656b 70206c65     '...'...kernel p
80023ee0:	63696e61 20746120 253a7325 200a3a64     anic at %s:%d:. 
80023ef0:	00202020 6e72656b 77206c65 696e7261        .kernel warni
80023f00:	6120676e 73252074 3a64253a 2020200a     ng at %s:%d:.   
80023f10:	00000020 65732b2b 20707574 656d6974      ...++setup time
80023f20:	6e692072 72726574 73747075 0000000a     r interrupts....
80023f30:	69726573 70206c61 2074726f 73656f64     serial port does
80023f40:	746f6e20 69786520 21217473 0000000a      not exist!!....
80023f50:	69636970 632e7172 00000000 20717269     picirq.c....irq 
80023f60:	0038203c 646d6172 5f6b7369 74696e69     < 8.ramdisk_init
80023f70:	203a2928 74696e69 66206472 646e756f     (): initrd found
80023f80:	616d202c 3a636967 25783020 2c783830     , magic: 0x%08x,
80023f90:	25783020 20783830 73636573 0000000a      0x%08x secs....
80023fa0:	6e726157 3a676e69 206f4e20 74696e49     Warning: No Init
80023fb0:	0a216472 00000000 74696e49 203a6472     rd!.....Initrd: 
80023fc0:	30257830 2d207838 25783020 2c783830     0x%08x - 0x%08x,
80023fd0:	7a697320 30203a65 38302578 6d202c78      size: 0x%08x, m
80023fe0:	63696761 7830203a 78383025 0000000a     agic: 0x%08x....
80023ff0:	646d6172 2e6b7369 00000063 54494e49     ramdisk.c...INIT
80024000:	535f4452 28455a49 20252029 54434553     RD_SIZE() % SECT
80024010:	455a4953 203d3d20 00000030 4e52454b     SIZE == 0...KERN
80024020:	494e495f 00445254 55485428 5453432e     _INITRD.(THU.CST
80024030:	736f2029 20736920 64616f6c 20676e69     ) os is loading 
80024040:	0a2e2e2e 000d0a0d 64647562 6d705f79     ........buddy_pm
80024050:	00632e6d 203e206e 26262030 6e6f7a20     m.c.n > 0 && zon
80024060:	756e5f65 203c206d 5f58414d 454e4f5a     e_num < MAX_ZONE
80024070:	4d554e5f 00000000 65676150 65736552     _NUM....PageRese
80024080:	64657672 00297028 203e206e 00000030     rved(p).n > 0...
80024090:	65676150 706f7250 79747265 20297028     PageProperty(p) 
800240a0:	70202626 72703e2d 7265706f 3d207974     && p->property =
800240b0:	0069203d 61746f74 3d3d206c 5f726e20     = i.total == nr_
800240c0:	65657266 6761705f 29287365 00000000     free_pages()....
800240d0:	21203070 554e203d 00004c4c 67617028     p0 != NULL..(pag
800240e0:	64693265 30702878 20262029 3d202937     e2idx(p0) & 7) =
800240f0:	0030203d 67615021 6f725065 74726570     = 0.!PagePropert
80024100:	30702879 00000029 6f6c6c61 61705f63     y(p0)...alloc_pa
80024110:	29286567 203d3d20 4c4c554e 00000000     ge() == NULL....
80024120:	665f726e 5f656572 65676170 20292873     nr_free_pages() 
80024130:	38203d3d 00000000 65676150 706f7250     == 8....PageProp
80024140:	79747265 29307028 20262620 3e2d3070     erty(p0) && p0->
80024150:	706f7270 79747265 203d3d20 00000033     property == 3...
80024160:	20307028 6c61203d 5f636f6c 65676170     (p0 = alloc_page
80024170:	29362873 3d212029 4c554e20 2626204c     s(6)) != NULL &&
80024180:	61502120 72506567 7265706f 70287974      !PageProperty(p
80024190:	26202930 726e2026 6572665f 61705f65     0) && nr_free_pa
800241a0:	28736567 3d3d2029 00003220 20317028     ges() == 2..(p1 
800241b0:	6c61203d 5f636f6c 65676170 29322873     = alloc_pages(2)
800241c0:	3d212029 4c554e20 2626204c 20317020     ) != NULL && p1 
800241d0:	70203d3d 202b2030 00000036 65676150     == p0 + 6...Page
800241e0:	706f7250 79747265 29307028 20262620     Property(p0) && 
800241f0:	3e2d3070 706f7270 79747265 203d3d20     p0->property == 
80024200:	00000031 65676150 706f7250 79747265     1...PageProperty
80024210:	20307028 2932202b 20262620 325b3070     (p0 + 2) && p0[2
80024220:	72702e5d 7265706f 3d207974 0030203d     ].property == 0.
80024230:	20307028 6c61203d 5f636f6c 65676170     (p0 = alloc_page
80024240:	29362873 3d212029 4c554e20 0000004c     s(6)) != NULL...
80024250:	20317028 6c61203d 5f636f6c 65676170     (p1 = alloc_page
80024260:	29322873 3d212029 4c554e20 0000004c     s(2)) != NULL...
80024270:	65676150 706f7250 79747265 29317028     PageProperty(p1)
80024280:	20262620 3e2d3170 706f7270 79747265      && p1->property
80024290:	203d3d20 00000032 20307028 6c61203d      == 2...(p0 = al
800242a0:	5f636f6c 65676170 29382873 3d212029     loc_pages(8)) !=
800242b0:	4c554e20 0000004c 6f6c6c61 61705f63      NULL...alloc_pa
800242c0:	29286567 203d3d20 4c4c554e 20262620     ge() == NULL && 
800242d0:	665f726e 5f656572 65676170 20292873     nr_free_pages() 
800242e0:	30203d3d 00000000 6e756f63 3d3d2074     == 0....count ==
800242f0:	00003020 61746f74 3d3d206c 00003020      0..total == 0..
80024300:	67617028 64695f65 20262078 20312828     (page_idx & ((1 
80024310:	6f203c3c 72656472 202d2029 20292931     << order) - 1)) 
80024320:	30203d3d 00000000 67615021 73655265     == 0....!PageRes
80024330:	65767265 29702864 20262620 67615021     erved(p) && !Pag
80024340:	6f725065 74726570 29702879 00000000     eProperty(p)....
80024350:	6564726f 3d3c2072 58414d20 44524f5f     order <= MAX_ORD
80024360:	00005245 64647562 6d705f79 616d5f6d     ER..buddy_pmm_ma
80024370:	6567616e 00000072 2d2d2d2d 2d2d2d2d     nager...--------
80024380:	2d2d2d2d 2d2d2d2d 47415020 69442045     -------- PAGE Di
80024390:	74636572 2079726f 49474542 2d2d204e     rectory BEGIN --
800243a0:	2d2d2d2d 2d2d2d2d 2d2d2d2d 000a2d2d     --------------..
800243b0:	28454450 00000000 00002029 0000002d     PDE(....) ..-...
800243c0:	2d7c2020 5450202d 00002845 2d2d2d2d       |-- PTE(..----
800243d0:	2d2d2d2d 2d2d2d2d 2d2d2d2d 47415020     ------------ PAG
800243e0:	69442045 74636572 2079726f 20444e45     E Directory END 
800243f0:	2d2d2d2d 2d2d2d2d 2d2d2d2d 2d2d2d2d     ----------------
80024400:	000a2d2d 6f6d656d 6d207972 67616e61     --..memory manag
80024410:	6e656d65 00203a74 6f6d656d 6d207972     ement: .memory m
80024420:	0a3a7061 0000000d 20202020 0078305b     ap:.....    [0x.
80024430:	7830202c 00000000 0a0d0a5d 0000000d     , 0x....].......
80024440:	65657266 206d656d 72617473 74612074     freemem start at
80024450:	0a78253a 0000000d 6765626d 3c206e69     :%x.....mbegin <
80024460:	6e656d20 00000064 65657266 67617020      mend...free pag
80024470:	203a7365 00000000 65676170 72747320     es: ....page str
80024480:	75746375 73206572 3a657a69 00000020     ucture size: ...
80024490:	63656863 6c615f6b 5f636f6c 65676170     check_alloc_page
800244a0:	73202928 65636375 64656465 000d0a21     () succeeded!...
800244b0:	746f6f62 6c6c615f 705f636f 20656761     boot_alloc_page 
800244c0:	6c696166 0a2e6465 0000000d 6761706e     failed......npag
800244d0:	3d3c2065 454d4b20 5a49534d 202f2045     e <= KMEMSIZE / 
800244e0:	49534750 0000455a 746f6f62 6467705f     PGSIZE..boot_pgd
800244f0:	21207269 554e203d 26204c4c 75282026     ir != NULL && (u
80024500:	33746e69 29745f32 4f475020 62284646     int32_t) PGOFF(b
80024510:	5f746f6f 69646770 3d202972 0030203d     oot_pgdir) == 0.
80024520:	5f746567 65676170 6f6f6228 67705f74     get_page(boot_pg
80024530:	2c726964 30783020 554e202c 20294c4c     dir, 0x0, NULL) 
80024540:	4e203d3d 004c4c55 65676170 736e695f     == NULL.page_ins
80024550:	28747265 746f6f62 6467705f 202c7269     ert(boot_pgdir, 
80024560:	202c3170 2c307830 20293020 30203d3d     p1, 0x0, 0) == 0
80024570:	00000000 65747028 203d2070 5f746567     ....(ptep = get_
80024580:	28657470 746f6f62 6467705f 202c7269     pte(boot_pgdir, 
80024590:	2c307830 29293020 203d2120 4c4c554e     0x0, 0)) != NULL
800245a0:	00000000 70326170 28656761 6574702a     ....pa2page(*pte
800245b0:	3d202970 3170203d 00000000 65676170     p) == p1....page
800245c0:	6665725f 29317028 203d3d20 00000031     _ref(p1) == 1...
800245d0:	5f746567 28657470 746f6f62 6467705f     get_pte(boot_pgd
800245e0:	202c7269 49534750 202c455a 3d202930     ir, PGSIZE, 0) =
800245f0:	7470203d 00007065 65676170 736e695f     = ptep..page_ins
80024600:	28747265 746f6f62 6467705f 202c7269     ert(boot_pgdir, 
80024610:	202c3270 49534750 202c455a 5f455450     p2, PGSIZE, PTE_
80024620:	207c2055 5f455450 3d202957 0030203d     U | PTE_W) == 0.
80024630:	65747028 203d2070 5f746567 28657470     (ptep = get_pte(
80024640:	746f6f62 6467705f 202c7269 49534750     boot_pgdir, PGSI
80024650:	202c455a 20292930 4e203d21 004c4c55     ZE, 0)) != NULL.
80024660:	6574702a 20262070 5f455450 00000055     *ptep & PTE_U...
80024670:	6574702a 20262070 5f455450 00000057     *ptep & PTE_W...
80024680:	746f6f62 6467705f 305b7269 2026205d     boot_pgdir[0] & 
80024690:	5f455450 00000055 65676170 6665725f     PTE_U...page_ref
800246a0:	29327028 203d3d20 00000031 65676170     (p2) == 1...page
800246b0:	736e695f 28747265 746f6f62 6467705f     _insert(boot_pgd
800246c0:	202c7269 202c3170 49534750 202c455a     ir, p1, PGSIZE, 
800246d0:	3d202930 0030203d 65676170 6665725f     0) == 0.page_ref
800246e0:	29317028 203d3d20 00000032 65676170     (p1) == 2...page
800246f0:	6665725f 29327028 203d3d20 00000030     _ref(p2) == 0...
80024700:	74702a28 26207065 45545020 2029555f     (*ptep & PTE_U) 
80024710:	30203d3d 00000000 65676170 6665725f     == 0....page_ref
80024720:	29317028 203d3d20 00000030 65676170     (p1) == 0...page
80024730:	6665725f 32617028 65676170 6f6f6228     _ref(pa2page(boo
80024740:	67705f74 5b726964 29295d30 203d3d20     t_pgdir[0])) == 
80024750:	00000031 63656863 67705f6b 28726964     1...check_pgdir(
80024760:	75732029 65656363 21646564 00000d0a     ) succeeded!....
80024770:	65676170 61766b32 3a297028 30257830     page2kva(p):0x%0
80024780:	00007838 6e69282a 28292a74 65676170     8x..*(int*)(page
80024790:	61766b32 2b297028 30317830 303a2930     2kva(p)+0x100):0
800247a0:	38302578 00000078 65676170 736e695f     x%08x...page_ins
800247b0:	28747265 746f6f62 6467705f 202c7269     ert(boot_pgdir, 
800247c0:	30202c70 30303178 5450202c 29575f45     p, 0x100, PTE_W)
800247d0:	203d3d20 00000030 65676170 6665725f      == 0...page_ref
800247e0:	20297028 31203d3d 00000000 6e69282a     (p) == 1....*(in
800247f0:	28292a74 30317830 303a2930 38302578     t*)(0x100):0x%08
80024800:	00000078 65676170 736e695f 28747265     x...page_insert(
80024810:	746f6f62 6467705f 202c7269 30202c70     boot_pgdir, p, 0
80024820:	30303178 50202b20 5a495347 50202c45     x100 + PGSIZE, P
80024830:	575f4554 3d3d2029 00003020 65676170     TE_W) == 0..page
80024840:	6665725f 20297028 32203d3d 00000000     _ref(p) == 2....
80024850:	45480d0a 0d0a4552 00000000 282a0d0a     ..HERE........*(
80024860:	2a746e69 78302829 29303031 2578303a     int*)(0x100):0x%
80024870:	00783830 6e69282a 292a2074 30317830     08x.*(int *)0x10
80024880:	3d3d2030 31783020 00343332 726f6375     0 == 0x1234.ucor
80024890:	48203a65 6f6c6c65 726f7720 2121646c     e: Hello world!!
800248a0:	00000000 63727473 2828706d 64696f76     ....strcmp((void
800248b0:	30292a20 30303178 7628202c 2064696f      *)0x100, (void 
800248c0:	3028292a 30303178 50202b20 5a495347     *)(0x100 + PGSIZ
800248d0:	20292945 30203d3d 00000000 6c727473     E)) == 0....strl
800248e0:	28286e65 736e6f63 68632074 2a207261     en((const char *
800248f0:	31783029 20293030 30203d3d 00000000     )0x100) == 0....
80024900:	63656863 6f625f6b 705f746f 72696467     check_boot_pgdir
80024910:	73202928 65636375 64656465 000d0a21     () succeeded!...
80024920:	6e207325 6920746f 656c706d 746e656d     %s not implement
80024930:	79206465 002e7465 33323130 37363534     ed yet..01234567
80024940:	42413938 46454443 00000000 63737973     89ABCDEF....sysc
80024950:	2e6c6c61 00000063 65646e75 656e6966     all.c...undefine
80024960:	79732064 6c616373 6425206c 6970202c     d syscall %d, pi
80024970:	203d2064 202c6425 656d616e 25203d20     d = %d, name = %
80024980:	000a2e73 632e706d 00000000 00002420     s...mp.c.... $..
80024990:	00203a09 6e6b6e55 006e776f 70617274     .: .Unknown.trap
800249a0:	6d617266 74612065 00000020 24200a0d     frame at ..... $
800249b0:	203a6172 00000000 42200a0d 41566461     ra: ...... BadVA
800249c0:	0000203a 53200a0d 75746174 00203a73     : .... Status: .
800249d0:	43200a0d 65737561 0000203a 45200a0d     .. Cause: .... E
800249e0:	00204350 72540a0d 69207061 7375206e     PC ...Trap in us
800249f0:	6f6d7265 203a6564 00000000 72540d0a     ermode: ......Tr
80024a00:	69207061 656b206e 6c656e72 0000203a     ap in kernel: ..
80024a10:	70617274 0000632e 72727563 5f746e65     trap.c..current_
80024a20:	69646770 3d212072 4c554e20 0000004c     pgdir != NULL...
80024a30:	72727563 20746e65 69203d3d 70656c64     current == idlep
80024a40:	00636f72 61686e75 656c646e 61702064     roc.unhandled pa
80024a50:	66206567 746c7561 000d0a2e 61686e75     ge fault....unha
80024a60:	656c646e 67702064 6c756166 00000074     ndled pgfault...
80024a70:	314d4f43 00000d0a 6e6b6e55 206e776f     COM1....Unknown 
80024a80:	65746e69 70757272 00002174 3a78255b     interrupt!..[%x:
80024a90:	0a5d7825 00000000 20796568 216e616d     %x].....hey man!
80024aa0:	206f4420 20544f4e 20657375 74616874      Do NOT use that
80024ab0:	736e6920 6920216e 3d6e736e 00007825      insn! insn=%x..
80024ac0:	67696c41 6e656d6e 72452074 00726f72     Alignment Error.
80024ad0:	61686e55 656c646e 78452064 74706563     Unhandled Except
80024ae0:	006e6f69 65746e49 70757272 00000074     ion.Interrupt...
80024af0:	20424c54 69646f4d 00007966 20424c54     TLB Modify..TLB 
80024b00:	7373696d 206e6f20 64616f6c 00000000     miss on load....
80024b10:	20424c54 7373696d 206e6f20 726f7473     TLB miss on stor
80024b20:	00000065 72646441 20737365 6f727265     e...Address erro
80024b30:	6e6f2072 616f6c20 00000064 72646441     r on load...Addr
80024b40:	20737365 6f727265 6e6f2072 6f747320     ess error on sto
80024b50:	00006572 20737542 6f727265 6e6f2072     re..Bus error on
80024b60:	736e6920 63757274 6e6f6974 74656620      instruction fet
80024b70:	00006863 20737542 6f727265 6e6f2072     ch..Bus error on
80024b80:	74616420 6f6c2061 6f206461 74732072      data load or st
80024b90:	0065726f 63737953 006c6c61 61657242     ore.Syscall.Brea
80024ba0:	696f706b 0000746e 65736552 64657672     kpoint..Reserved
80024bb0:	6c692820 6167656c 6920296c 7274736e      (illegal) instr
80024bc0:	69746375 00006e6f 72706f43 7365636f     uction..Coproces
80024bd0:	20726f73 73756e75 656c6261 00000000     sor unusable....
80024be0:	74697241 74656d68 6f206369 66726576     Arithmetic overf
80024bf0:	00776f6c 00000000 00000000 00000000     low.............
	...

80025000 <__exception_vector>:
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:26
# maybe behavior of gnu/as changed ...?
.set noreorder

.global __exception_vector
__exception_vector:
  RVECENT(ramExcHandle_tlbmiss,0) 
80025000:	1000eab3 00000000 1000eab3 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:28
	RVECENT(ramReserved,1)
	RVECENT(ramReserved,2)
80025010:	1000eab1 00000000 1000eaaf 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:30
	RVECENT(ramReserved,3)
	RVECENT(ramReserved,4)
80025020:	1000eaad 00000000 1000eaab 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:32
	RVECENT(ramReserved,5)
	RVECENT(ramReserved,6)
80025030:	1000eaa9 00000000 1000eaa7 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:34
	RVECENT(ramReserved,7)
	RVECENT(ramReserved,8)
80025040:	1000eaa5 00000000 1000eaa3 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:36
	RVECENT(ramReserved,9)
	RVECENT(ramReserved,10)
80025050:	1000eaa1 00000000 1000ea9f 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:38
	RVECENT(ramReserved,11)
	RVECENT(ramReserved,12)
80025060:	1000ea9d 00000000 1000ea9b 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:40
	RVECENT(ramReserved,13)
	RVECENT(ramReserved,14)
80025070:	1000ea99 00000000 1000ea97 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:42
	RVECENT(ramReserved,15)
	RVECENT(ramReserved,16)
80025080:	1000ea95 00000000 1000ea93 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:44
	RVECENT(ramReserved,17)
	RVECENT(ramReserved,18)
80025090:	1000ea91 00000000 1000ea8f 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:46
	RVECENT(ramReserved,19)
	RVECENT(ramReserved,20)
800250a0:	1000ea8d 00000000 1000ea8b 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:48
	RVECENT(ramReserved,21)
	RVECENT(ramReserved,22)
800250b0:	1000ea89 00000000 1000ea87 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:50
	RVECENT(ramReserved,23)
	RVECENT(ramReserved,24)
800250c0:	1000ea85 00000000 1000ea83 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:52
	RVECENT(ramReserved,25)
	RVECENT(ramReserved,26)
800250d0:	1000ea81 00000000 1000ea7f 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:54
	RVECENT(ramReserved,27)
	RVECENT(ramReserved,28)
800250e0:	1000ea7d 00000000 1000ea7b 00000000     }.......{.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:56
	RVECENT(ramReserved,29)
	RVECENT(ramReserved,30)
800250f0:	1000ea79 00000000 1000ea77 00000000     y.......w.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:58
	RVECENT(ramReserved,31)
	XVECENT(ramExcHandle_general, 32) 
80025100:	1000ea77 00000000 1000ea73 00000000     w.......s.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:60
	RVECENT(ramReserved,33)
	RVECENT(ramReserved,34)
80025110:	1000ea71 00000000 1000ea6f 00000000     q.......o.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:62
	RVECENT(ramReserved,35)
	RVECENT(ramReserved,36)
80025120:	1000ea6d 00000000 1000ea6b 00000000     m.......k.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:64
	RVECENT(ramReserved,37)
	RVECENT(ramReserved,38)
80025130:	1000ea69 00000000 1000ea67 00000000     i.......g.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:66
	RVECENT(ramReserved,39)
	RVECENT(ramReserved,40)
80025140:	1000ea65 00000000 1000ea63 00000000     e.......c.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:68
	RVECENT(ramReserved,41)
	RVECENT(ramReserved,42)
80025150:	1000ea61 00000000 1000ea5f 00000000     a......._.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:70
	RVECENT(ramReserved,43)
	RVECENT(ramReserved,44)
80025160:	1000ea5d 00000000 1000ea5b 00000000     ].......[.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:72
	RVECENT(ramReserved,45)
	RVECENT(ramReserved,46)
80025170:	1000ea59 00000000 1000ea57 00000000     Y.......W.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:74
	RVECENT(ramReserved,47)
  XVECENT(ramExcHandle_general, 0x180) 
80025180:	1000ea57 00000000 1000ea53 00000000     W.......S.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:76
	RVECENT(ramReserved,49)
	RVECENT(ramReserved,50)
80025190:	1000ea51 00000000 1000ea4f 00000000     Q.......O.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:78
	RVECENT(ramReserved,51)
	RVECENT(ramReserved,52)
800251a0:	1000ea4d 00000000 1000ea4b 00000000     M.......K.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:80
	RVECENT(ramReserved,53)
	RVECENT(ramReserved,54)
800251b0:	1000ea49 00000000 1000ea47 00000000     I.......G.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:82
	RVECENT(ramReserved,55)
	RVECENT(ramReserved,56)
800251c0:	1000ea45 00000000 1000ea43 00000000     E.......C.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:84
	RVECENT(ramReserved,57)
	RVECENT(ramReserved,58)
800251d0:	1000ea41 00000000 1000ea3f 00000000     A.......?.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:86
	RVECENT(ramReserved,59)
	RVECENT(ramReserved,60)
800251e0:	1000ea3d 00000000 1000ea3b 00000000     =.......;.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:88
	RVECENT(ramReserved,61)
	RVECENT(ramReserved,62)
800251f0:	1000ea39 00000000 1000ea37 00000000     9.......7.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:90
	RVECENT(ramReserved,63)
	RVECENT(ramReserved,64)
80025200:	1000ea35 00000000 1000ea33 00000000     5.......3.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:92
	RVECENT(ramReserved,65)
	RVECENT(ramReserved,66)
80025210:	1000ea31 00000000 1000ea2f 00000000     1......./.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:94
	RVECENT(ramReserved,67)
	RVECENT(ramReserved,68)
80025220:	1000ea2d 00000000 1000ea2b 00000000     -.......+.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:96
	RVECENT(ramReserved,69)
	RVECENT(ramReserved,70)
80025230:	1000ea29 00000000 1000ea27 00000000     ).......'.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:98
	RVECENT(ramReserved,71)
	RVECENT(ramReserved,72)
80025240:	1000ea25 00000000 1000ea23 00000000     %.......#.......
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:100
	RVECENT(ramReserved,73)
	RVECENT(ramReserved,74)
80025250:	1000ea21 00000000 1000ea1f 00000000     !...............
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:102
	RVECENT(ramReserved,75)
	RVECENT(ramReserved,76)
80025260:	1000ea1d 00000000 1000ea1b 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:104
	RVECENT(ramReserved,77)
	RVECENT(ramReserved,78)
80025270:	1000ea19 00000000 1000ea17 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:106
	RVECENT(ramReserved,79)
	RVECENT(ramReserved,80)
80025280:	1000ea15 00000000 1000ea13 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:108
	RVECENT(ramReserved,81)
	RVECENT(ramReserved,82)
80025290:	1000ea11 00000000 1000ea0f 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:110
	RVECENT(ramReserved,83)
	RVECENT(ramReserved,84)
800252a0:	1000ea0d 00000000 1000ea0b 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:112
	RVECENT(ramReserved,85)
	RVECENT(ramReserved,86)
800252b0:	1000ea09 00000000 1000ea07 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:114
	RVECENT(ramReserved,87)
	RVECENT(ramReserved,88)
800252c0:	1000ea05 00000000 1000ea03 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:116
	RVECENT(ramReserved,89)
	RVECENT(ramReserved,90)
800252d0:	1000ea01 00000000 1000e9ff 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:118
	RVECENT(ramReserved,91)
	RVECENT(ramReserved,92)
800252e0:	1000e9fd 00000000 1000e9fb 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:120
	RVECENT(ramReserved,93)
	RVECENT(ramReserved,94)
800252f0:	1000e9f9 00000000 1000e9f7 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:122
	RVECENT(ramReserved,95)
	RVECENT(ramReserved,96)
80025300:	1000e9f5 00000000 1000e9f3 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:124
	RVECENT(ramReserved,97)
	RVECENT(ramReserved,98)
80025310:	1000e9f1 00000000 1000e9ef 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:126
	RVECENT(ramReserved,99)
	RVECENT(ramReserved,100)
80025320:	1000e9ed 00000000 1000e9eb 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:128
	RVECENT(ramReserved,101)
	RVECENT(ramReserved,102)
80025330:	1000e9e9 00000000 1000e9e7 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:130
	RVECENT(ramReserved,103)
	RVECENT(ramReserved,104)
80025340:	1000e9e5 00000000 1000e9e3 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:132
	RVECENT(ramReserved,105)
	RVECENT(ramReserved,106)
80025350:	1000e9e1 00000000 1000e9df 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:134
	RVECENT(ramReserved,107)
	RVECENT(ramReserved,108)
80025360:	1000e9dd 00000000 1000e9db 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:136
	RVECENT(ramReserved,109)
	RVECENT(ramReserved,110)
80025370:	1000e9d9 00000000 1000e9d7 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:138
	RVECENT(ramReserved,111)
	RVECENT(ramReserved,112)
80025380:	1000e9d5 00000000 1000e9d3 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:140
	RVECENT(ramReserved,113)
	RVECENT(ramReserved,114)
80025390:	1000e9d1 00000000 1000e9cf 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:142
	RVECENT(ramReserved,115)
	RVECENT(ramReserved,116)
800253a0:	1000e9cd 00000000 1000e9cb 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:144
	RVECENT(ramReserved,116)
	RVECENT(ramReserved,118)
800253b0:	1000e9c9 00000000 1000e9c7 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:146
	RVECENT(ramReserved,119)
	RVECENT(ramReserved,120)
800253c0:	1000e9c5 00000000 1000e9c3 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:148
	RVECENT(ramReserved,121)
	RVECENT(ramReserved,122)
800253d0:	1000e9c1 00000000 1000e9bf 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:150
	RVECENT(ramReserved,123)
	RVECENT(ramReserved,124)
800253e0:	1000e9bd 00000000 1000e9bb 00000000     ................
/home/oslab/ucore-mips-standard_2/src/kern-ucore/arch/mips/trap/vectors.S:152
	RVECENT(ramReserved,125)
	RVECENT(ramReserved,126)
800253f0:	1000e9b9 00000000 1000e9b7 00000000     ................
